
ADF_SAMD21_LIB.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000e804  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000e804  0000e804  0001e804  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a20  20000000  0000e80c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000007d0  20000a20  0000f230  00020a20  2**3
                  ALLOC
  4 .stack        00002000  200011f0  0000fa00  00020a20  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00020a20  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a48  2**0
                  CONTENTS, READONLY
  7 .debug_info   0003f120  00000000  00000000  00020aa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005abf  00000000  00000000  0005fbc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000190eb  00000000  00000000  00065680  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000012d0  00000000  00000000  0007e76b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001480  00000000  00000000  0007fa3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0002194e  00000000  00000000  00080ebb  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001a7dd  00000000  00000000  000a2809  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000965c5  00000000  00000000  000bcfe6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000492c  00000000  00000000  001535ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .stab         0000009c  00000000  00000000  00157ed8  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      0000014d  00000000  00000000  00157f74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	f0 31 00 20 1d 0b 00 00 19 0b 00 00 19 0b 00 00     .1. ............
	...
      2c:	19 0b 00 00 00 00 00 00 00 00 00 00 19 0b 00 00     ................
      3c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      4c:	19 0b 00 00 91 22 00 00 19 0b 00 00 19 0b 00 00     ....."..........
      5c:	b5 40 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     .@..............
      6c:	19 0b 00 00 d1 26 00 00 19 0b 00 00 19 0b 00 00     .....&..........
      7c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 49 2d 00 00     ............I-..
      8c:	5d 2d 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ]-..............
      9c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      ac:	19 0b 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000a20 	.word	0x20000a20
      d4:	00000000 	.word	0x00000000
      d8:	0000e80c 	.word	0x0000e80c

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000a24 	.word	0x20000a24
     108:	0000e80c 	.word	0x0000e80c
     10c:	0000e80c 	.word	0x0000e80c
     110:	00000000 	.word	0x00000000

00000114 <_Z41__static_initialization_and_destruction_0ii>:
				#else
				
				printf("**************************\n\r");
				printf("Not Locked at:  %lf",target_frequency);
				printf(" MHz\n");
				printf("**************************\n");
     114:	b510      	push	{r4, lr}
     116:	2801      	cmp	r0, #1
     118:	d000      	beq.n	11c <_Z41__static_initialization_and_destruction_0ii+0x8>
     11a:	bd10      	pop	{r4, pc}
     11c:	4b06      	ldr	r3, [pc, #24]	; (138 <_Z41__static_initialization_and_destruction_0ii+0x24>)
     11e:	4299      	cmp	r1, r3
     120:	d1fb      	bne.n	11a <_Z41__static_initialization_and_destruction_0ii+0x6>
     122:	4c06      	ldr	r4, [pc, #24]	; (13c <_Z41__static_initialization_and_destruction_0ii+0x28>)
     124:	0020      	movs	r0, r4
     126:	4b06      	ldr	r3, [pc, #24]	; (140 <_Z41__static_initialization_and_destruction_0ii+0x2c>)
     128:	4798      	blx	r3
     12a:	4a06      	ldr	r2, [pc, #24]	; (144 <_Z41__static_initialization_and_destruction_0ii+0x30>)
     12c:	4906      	ldr	r1, [pc, #24]	; (148 <_Z41__static_initialization_and_destruction_0ii+0x34>)
     12e:	0020      	movs	r0, r4
     130:	4b06      	ldr	r3, [pc, #24]	; (14c <_Z41__static_initialization_and_destruction_0ii+0x38>)
     132:	4798      	blx	r3
     134:	e7f1      	b.n	11a <_Z41__static_initialization_and_destruction_0ii+0x6>
     136:	46c0      	nop			; (mov r8, r8)
     138:	0000ffff 	.word	0x0000ffff
     13c:	20000a3c 	.word	0x20000a3c
     140:	00000c6d 	.word	0x00000c6d
     144:	20000000 	.word	0x20000000
     148:	00000c79 	.word	0x00000c79
     14c:	00004ce1 	.word	0x00004ce1

00000150 <_ZN14ADF5610_DriverC1Ev>:
     150:	b510      	push	{r4, lr}
     152:	4a0e      	ldr	r2, [pc, #56]	; (18c <_ZN14ADF5610_DriverC1Ev+0x3c>)
     154:	6002      	str	r2, [r0, #0]
     156:	2300      	movs	r3, #0
     158:	2192      	movs	r1, #146	; 0x92
     15a:	0049      	lsls	r1, r1, #1
		 buffer32=0;
     15c:	5043      	str	r3, [r0, r1]
		 dir=1;
     15e:	2401      	movs	r4, #1
     160:	3114      	adds	r1, #20
     162:	5044      	str	r4, [r0, r1]
		 spi_adf=&staticSPI;
     164:	490a      	ldr	r1, [pc, #40]	; (190 <_ZN14ADF5610_DriverC1Ev+0x40>)
     166:	6041      	str	r1, [r0, #4]
		 is_locked=false;
     168:	219e      	movs	r1, #158	; 0x9e
     16a:	0049      	lsls	r1, r1, #1
     16c:	5443      	strb	r3, [r0, r1]
		 upper_limit=4400;
     16e:	4909      	ldr	r1, [pc, #36]	; (194 <_ZN14ADF5610_DriverC1Ev+0x44>)
     170:	6081      	str	r1, [r0, #8]
		 lower_limit=3600;
     172:	60c2      	str	r2, [r0, #12]
		 step=(upper_limit-lower_limit)/1024.0*2;
     174:	4908      	ldr	r1, [pc, #32]	; (198 <_ZN14ADF5610_DriverC1Ev+0x48>)
     176:	2298      	movs	r2, #152	; 0x98
     178:	0052      	lsls	r2, r2, #1
     17a:	5081      	str	r1, [r0, r2]
		 target_frequency=current_frequency+step;
     17c:	4907      	ldr	r1, [pc, #28]	; (19c <_ZN14ADF5610_DriverC1Ev+0x4c>)
     17e:	3204      	adds	r2, #4
     180:	5081      	str	r1, [r0, r2]
		 pll_started=false;
     182:	2256      	movs	r2, #86	; 0x56
     184:	32ff      	adds	r2, #255	; 0xff
     186:	5483      	strb	r3, [r0, r2]
}
     188:	bd10      	pop	{r4, pc}
     18a:	46c0      	nop			; (mov r8, r8)
     18c:	45610000 	.word	0x45610000
     190:	20000a3c 	.word	0x20000a3c
     194:	45898000 	.word	0x45898000
     198:	3fc80000 	.word	0x3fc80000
     19c:	45611900 	.word	0x45611900

000001a0 <_ZN14ADF5610_DriverD1Ev>:
}
     1a0:	4770      	bx	lr
	...

000001a4 <_ZN14ADF5610_Driver13ShowRegistersEi>:
void ADF5610_Driver::ShowRegisters(int index){
     1a4:	b570      	push	{r4, r5, r6, lr}
     1a6:	0005      	movs	r5, r0
     1a8:	1e0c      	subs	r4, r1, #0
	switch (index){
     1aa:	d006      	beq.n	1ba <_ZN14ADF5610_Driver13ShowRegistersEi+0x16>
     1ac:	2900      	cmp	r1, #0
     1ae:	db0d      	blt.n	1cc <_ZN14ADF5610_Driver13ShowRegistersEi+0x28>
     1b0:	000b      	movs	r3, r1
     1b2:	3b12      	subs	r3, #18
     1b4:	2b01      	cmp	r3, #1
     1b6:	d809      	bhi.n	1cc <_ZN14ADF5610_Driver13ShowRegistersEi+0x28>
}
     1b8:	bd70      	pop	{r4, r5, r6, pc}
			  printf("Read R%d",index);
     1ba:	480e      	ldr	r0, [pc, #56]	; (1f4 <_ZN14ADF5610_Driver13ShowRegistersEi+0x50>)
     1bc:	4e0e      	ldr	r6, [pc, #56]	; (1f8 <_ZN14ADF5610_Driver13ShowRegistersEi+0x54>)
     1be:	47b0      	blx	r6
			  printf(":  0x%08lx\n" ,RegRead[index]);
     1c0:	3404      	adds	r4, #4
     1c2:	00a4      	lsls	r4, r4, #2
     1c4:	5961      	ldr	r1, [r4, r5]
     1c6:	480d      	ldr	r0, [pc, #52]	; (1fc <_ZN14ADF5610_Driver13ShowRegistersEi+0x58>)
     1c8:	47b0      	blx	r6
			  break;
     1ca:	e7f5      	b.n	1b8 <_ZN14ADF5610_Driver13ShowRegistersEi+0x14>
			  printf("Write R%d",index);
     1cc:	0021      	movs	r1, r4
     1ce:	480c      	ldr	r0, [pc, #48]	; (200 <_ZN14ADF5610_Driver13ShowRegistersEi+0x5c>)
     1d0:	4e09      	ldr	r6, [pc, #36]	; (1f8 <_ZN14ADF5610_Driver13ShowRegistersEi+0x54>)
     1d2:	47b0      	blx	r6
			  printf(":  0x%08lx\t",RegWrite[index]);
     1d4:	0023      	movs	r3, r4
     1d6:	331a      	adds	r3, #26
     1d8:	009b      	lsls	r3, r3, #2
     1da:	18eb      	adds	r3, r5, r3
     1dc:	6859      	ldr	r1, [r3, #4]
     1de:	4809      	ldr	r0, [pc, #36]	; (204 <_ZN14ADF5610_Driver13ShowRegistersEi+0x60>)
     1e0:	47b0      	blx	r6
			  printf("Read R%d",index);
     1e2:	0021      	movs	r1, r4
     1e4:	4803      	ldr	r0, [pc, #12]	; (1f4 <_ZN14ADF5610_Driver13ShowRegistersEi+0x50>)
     1e6:	47b0      	blx	r6
			  printf(":  0x%08lx\n",RegRead[index]);
     1e8:	3404      	adds	r4, #4
     1ea:	00a4      	lsls	r4, r4, #2
     1ec:	5961      	ldr	r1, [r4, r5]
     1ee:	4803      	ldr	r0, [pc, #12]	; (1fc <_ZN14ADF5610_Driver13ShowRegistersEi+0x58>)
     1f0:	47b0      	blx	r6
}
     1f2:	e7e1      	b.n	1b8 <_ZN14ADF5610_Driver13ShowRegistersEi+0x14>
     1f4:	0000e018 	.word	0x0000e018
     1f8:	00009385 	.word	0x00009385
     1fc:	0000e024 	.word	0x0000e024
     200:	0000e030 	.word	0x0000e030
     204:	0000e03c 	.word	0x0000e03c

00000208 <_ZN14ADF5610_Driver9Is_LockedEv>:
bool ADF5610_Driver::Is_Locked(void){
     208:	b530      	push	{r4, r5, lr}
     20a:	b083      	sub	sp, #12
     20c:	0005      	movs	r5, r0
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
     20e:	a801      	add	r0, sp, #4
     210:	4b0b      	ldr	r3, [pc, #44]	; (240 <_ZN14ADF5610_Driver9Is_LockedEv+0x38>)
     212:	4798      	blx	r3
	return tmp;
}

static inline hri_port_dir_reg_t hri_port_read_DIR_reg(const void *const hw, uint8_t submodule_index)
{
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
     214:	22c0      	movs	r2, #192	; 0xc0
     216:	05d2      	lsls	r2, r2, #23
     218:	6810      	ldr	r0, [r2, #0]
	return tmp;
}

static inline hri_port_in_reg_t hri_port_read_IN_reg(const void *const hw, uint8_t submodule_index)
{
	return ((Port *)hw)->Group[submodule_index].IN.reg;
     21a:	4b0a      	ldr	r3, [pc, #40]	; (244 <_ZN14ADF5610_Driver9Is_LockedEv+0x3c>)
     21c:	6a1b      	ldr	r3, [r3, #32]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
     21e:	6914      	ldr	r4, [r2, #16]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
     220:	405c      	eors	r4, r3
     222:	4004      	ands	r4, r0
     224:	405c      	eors	r4, r3

	CRITICAL_SECTION_LEAVE();
     226:	a801      	add	r0, sp, #4
     228:	4b07      	ldr	r3, [pc, #28]	; (248 <_ZN14ADF5610_Driver9Is_LockedEv+0x40>)
     22a:	4798      	blx	r3
 *
 * \param[in] pin       The pin number for device
 */
static inline bool gpio_get_pin_level(const uint8_t pin)
{
	return (bool)(_gpio_get_level((enum gpio_port)GPIO_PORT(pin)) & (0x01U << GPIO_PIN(pin)));
     22c:	2040      	movs	r0, #64	; 0x40
     22e:	4020      	ands	r0, r4
     230:	1e43      	subs	r3, r0, #1
     232:	4198      	sbcs	r0, r3
     234:	b2c0      	uxtb	r0, r0
	is_locked= gpio_get_pin_level(PA06);
     236:	239e      	movs	r3, #158	; 0x9e
     238:	005b      	lsls	r3, r3, #1
     23a:	54e8      	strb	r0, [r5, r3]
}
     23c:	b003      	add	sp, #12
     23e:	bd30      	pop	{r4, r5, pc}
     240:	00001409 	.word	0x00001409
     244:	41004400 	.word	0x41004400
     248:	00001417 	.word	0x00001417

0000024c <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm>:
void ADF5610_Driver::ConvertU32FourByteArray(uint8_t *array,uint32_t  data){
     24c:	b510      	push	{r4, lr}
	for (int i =0;i<4;i++){
     24e:	2000      	movs	r0, #0
     250:	2803      	cmp	r0, #3
     252:	dc07      	bgt.n	264 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x18>
		array[i]=(uint8_t)((data>>((3-i)*8)&0xff));
     254:	2303      	movs	r3, #3
     256:	1a1b      	subs	r3, r3, r0
     258:	00db      	lsls	r3, r3, #3
     25a:	0014      	movs	r4, r2
     25c:	40dc      	lsrs	r4, r3
     25e:	540c      	strb	r4, [r1, r0]
	for (int i =0;i<4;i++){
     260:	3001      	adds	r0, #1
     262:	e7f5      	b.n	250 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x4>
}
     264:	bd10      	pop	{r4, pc}
	...

00000268 <_ZN14ADF5610_Driver13ReadRegistersEh>:
void ADF5610_Driver::ReadRegisters(uint8_t index) {
     268:	b570      	push	{r4, r5, r6, lr}
     26a:	0004      	movs	r4, r0
     26c:	000d      	movs	r5, r1
	spi_adf->SetCS(false);
     26e:	2100      	movs	r1, #0
     270:	6840      	ldr	r0, [r0, #4]
     272:	4e20      	ldr	r6, [pc, #128]	; (2f4 <_ZN14ADF5610_Driver13ReadRegistersEh+0x8c>)
     274:	47b0      	blx	r6
	to_send[0]=0;
     276:	2300      	movs	r3, #0
     278:	22a8      	movs	r2, #168	; 0xa8
     27a:	0052      	lsls	r2, r2, #1
     27c:	54a3      	strb	r3, [r4, r2]
	to_send[1]=0;
     27e:	2252      	movs	r2, #82	; 0x52
     280:	32ff      	adds	r2, #255	; 0xff
     282:	54a3      	strb	r3, [r4, r2]
	to_send[2]=index;
     284:	3201      	adds	r2, #1
     286:	54a5      	strb	r5, [r4, r2]
	to_send[3]=0;
     288:	2254      	movs	r2, #84	; 0x54
     28a:	32ff      	adds	r2, #255	; 0xff
     28c:	54a3      	strb	r3, [r4, r2]
	spi_adf->Write(to_send,4);
     28e:	0021      	movs	r1, r4
     290:	3151      	adds	r1, #81	; 0x51
     292:	31ff      	adds	r1, #255	; 0xff
     294:	3a50      	subs	r2, #80	; 0x50
     296:	3aff      	subs	r2, #255	; 0xff
     298:	6860      	ldr	r0, [r4, #4]
     29a:	4b17      	ldr	r3, [pc, #92]	; (2f8 <_ZN14ADF5610_Driver13ReadRegistersEh+0x90>)
     29c:	4798      	blx	r3
	spi_adf->SetCS(true);
     29e:	2101      	movs	r1, #1
     2a0:	6860      	ldr	r0, [r4, #4]
     2a2:	47b0      	blx	r6
	delay_ms(1);
     2a4:	2001      	movs	r0, #1
     2a6:	4b15      	ldr	r3, [pc, #84]	; (2fc <_ZN14ADF5610_Driver13ReadRegistersEh+0x94>)
     2a8:	4798      	blx	r3
	spi_adf->SetCS(false);
     2aa:	2100      	movs	r1, #0
     2ac:	6860      	ldr	r0, [r4, #4]
     2ae:	47b0      	blx	r6
	spi_adf->Read((uint8_t*)&recibido32,4);
     2b0:	0021      	movs	r1, r4
     2b2:	3149      	adds	r1, #73	; 0x49
     2b4:	31ff      	adds	r1, #255	; 0xff
     2b6:	2204      	movs	r2, #4
     2b8:	6860      	ldr	r0, [r4, #4]
     2ba:	4b11      	ldr	r3, [pc, #68]	; (300 <_ZN14ADF5610_Driver13ReadRegistersEh+0x98>)
     2bc:	4798      	blx	r3
	RegRead[index]=((recibido32&(0x000000FF))<<24)|((recibido32&(0x0000FF00))<<8);
     2be:	23a4      	movs	r3, #164	; 0xa4
     2c0:	005b      	lsls	r3, r3, #1
     2c2:	58e2      	ldr	r2, [r4, r3]
     2c4:	0613      	lsls	r3, r2, #24
     2c6:	0211      	lsls	r1, r2, #8
     2c8:	20ff      	movs	r0, #255	; 0xff
     2ca:	0400      	lsls	r0, r0, #16
     2cc:	4001      	ands	r1, r0
     2ce:	430b      	orrs	r3, r1
	RegRead[index]|=((recibido32&(0xFF000000))>>24)|((recibido32&(0x00FF0000))>>8);
     2d0:	0e11      	lsrs	r1, r2, #24
     2d2:	0a12      	lsrs	r2, r2, #8
     2d4:	20ff      	movs	r0, #255	; 0xff
     2d6:	0200      	lsls	r0, r0, #8
     2d8:	4002      	ands	r2, r0
     2da:	430a      	orrs	r2, r1
     2dc:	4313      	orrs	r3, r2
	RegRead[index]>>=7;
     2de:	09db      	lsrs	r3, r3, #7
	bitClear(RegRead[index],24);
     2e0:	4a08      	ldr	r2, [pc, #32]	; (304 <_ZN14ADF5610_Driver13ReadRegistersEh+0x9c>)
     2e2:	4013      	ands	r3, r2
     2e4:	3504      	adds	r5, #4
     2e6:	00ad      	lsls	r5, r5, #2
     2e8:	512b      	str	r3, [r5, r4]
	spi_adf->SetCS(true);
     2ea:	6860      	ldr	r0, [r4, #4]
     2ec:	2101      	movs	r1, #1
     2ee:	47b0      	blx	r6
}
     2f0:	bd70      	pop	{r4, r5, r6, pc}
     2f2:	46c0      	nop			; (mov r8, r8)
     2f4:	00000ce9 	.word	0x00000ce9
     2f8:	00000cb9 	.word	0x00000cb9
     2fc:	00001489 	.word	0x00001489
     300:	00000cd1 	.word	0x00000cd1
     304:	feffffff 	.word	0xfeffffff

00000308 <_ZN14ADF5610_Driver17InitiateRegistersEv>:
  for (int i = 0; i < 23; i++) {
     308:	2300      	movs	r3, #0
     30a:	e00e      	b.n	32a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x22>
          RegIni[i] = 0x20;
     30c:	001a      	movs	r2, r3
     30e:	3232      	adds	r2, #50	; 0x32
     310:	0092      	lsls	r2, r2, #2
     312:	2120      	movs	r1, #32
     314:	5011      	str	r1, [r2, r0]
    RegWrite[i]=RegIni[i];
     316:	001a      	movs	r2, r3
     318:	3232      	adds	r2, #50	; 0x32
     31a:	0092      	lsls	r2, r2, #2
     31c:	5811      	ldr	r1, [r2, r0]
     31e:	001a      	movs	r2, r3
     320:	321a      	adds	r2, #26
     322:	0092      	lsls	r2, r2, #2
     324:	1882      	adds	r2, r0, r2
     326:	6051      	str	r1, [r2, #4]
  for (int i = 0; i < 23; i++) {
     328:	3301      	adds	r3, #1
     32a:	2b16      	cmp	r3, #22
     32c:	dc6c      	bgt.n	408 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x100>
    switch (i) {
     32e:	d865      	bhi.n	3fc <_ZN14ADF5610_Driver17InitiateRegistersEv+0xf4>
     330:	009a      	lsls	r2, r3, #2
     332:	4936      	ldr	r1, [pc, #216]	; (40c <_ZN14ADF5610_Driver17InitiateRegistersEv+0x104>)
     334:	588a      	ldr	r2, [r1, r2]
     336:	4697      	mov	pc, r2
        RegIni[i] = 0x2;
     338:	001a      	movs	r2, r3
     33a:	3232      	adds	r2, #50	; 0x32
     33c:	0092      	lsls	r2, r2, #2
     33e:	2102      	movs	r1, #2
     340:	5011      	str	r1, [r2, r0]
        break;
     342:	e7e8      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x1;
     344:	001a      	movs	r2, r3
     346:	3232      	adds	r2, #50	; 0x32
     348:	0092      	lsls	r2, r2, #2
     34a:	2101      	movs	r1, #1
     34c:	5011      	str	r1, [r2, r0]
        break;
     34e:	e7e2      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x31;
     350:	001a      	movs	r2, r3
     352:	3232      	adds	r2, #50	; 0x32
     354:	0092      	lsls	r2, r2, #2
     356:	2131      	movs	r1, #49	; 0x31
     358:	5011      	str	r1, [r2, r0]
        break;
     35a:	e7dc      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xFD70A3;
     35c:	001a      	movs	r2, r3
     35e:	3232      	adds	r2, #50	; 0x32
     360:	0092      	lsls	r2, r2, #2
     362:	492b      	ldr	r1, [pc, #172]	; (410 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x108>)
     364:	5011      	str	r1, [r2, r0]
        break;
     366:	e7d6      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x000;
     368:	001a      	movs	r2, r3
     36a:	3232      	adds	r2, #50	; 0x32
     36c:	0092      	lsls	r2, r2, #2
     36e:	2100      	movs	r1, #0
     370:	5011      	str	r1, [r2, r0]
        break;
     372:	e7d0      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x2F4A;
     374:	001a      	movs	r2, r3
     376:	3232      	adds	r2, #50	; 0x32
     378:	0092      	lsls	r2, r2, #2
     37a:	4926      	ldr	r1, [pc, #152]	; (414 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x10c>)
     37c:	5011      	str	r1, [r2, r0]
        break;
     37e:	e7ca      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x214D;
     380:	001a      	movs	r2, r3
     382:	3232      	adds	r2, #50	; 0x32
     384:	0092      	lsls	r2, r2, #2
     386:	4924      	ldr	r1, [pc, #144]	; (418 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x110>)
     388:	5011      	str	r1, [r2, r0]
        break;
     38a:	e7c4      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xC9BEFF;
     38c:	001a      	movs	r2, r3
     38e:	3232      	adds	r2, #50	; 0x32
     390:	0092      	lsls	r2, r2, #2
     392:	4922      	ldr	r1, [pc, #136]	; (41c <_ZN14ADF5610_Driver17InitiateRegistersEv+0x114>)
     394:	5011      	str	r1, [r2, r0]
        break;
     396:	e7be      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x3FFF;
     398:	001a      	movs	r2, r3
     39a:	3232      	adds	r2, #50	; 0x32
     39c:	0092      	lsls	r2, r2, #2
     39e:	4920      	ldr	r1, [pc, #128]	; (420 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x118>)
     3a0:	5011      	str	r1, [r2, r0]
        break;
     3a2:	e7b8      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x2047;
     3a4:	001a      	movs	r2, r3
     3a6:	3232      	adds	r2, #50	; 0x32
     3a8:	0092      	lsls	r2, r2, #2
     3aa:	491e      	ldr	r1, [pc, #120]	; (424 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x11c>)
     3ac:	5011      	str	r1, [r2, r0]
        break;
     3ae:	e7b2      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xF8061;
     3b0:	001a      	movs	r2, r3
     3b2:	3232      	adds	r2, #50	; 0x32
     3b4:	0092      	lsls	r2, r2, #2
     3b6:	491c      	ldr	r1, [pc, #112]	; (428 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x120>)
     3b8:	5011      	str	r1, [r2, r0]
        break;
     3ba:	e7ac      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x081;
     3bc:	001a      	movs	r2, r3
     3be:	3232      	adds	r2, #50	; 0x32
     3c0:	0092      	lsls	r2, r2, #2
     3c2:	2181      	movs	r1, #129	; 0x81
     3c4:	5011      	str	r1, [r2, r0]
        break;
     3c6:	e7a6      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
		RegIni[i] = 0x020;
     3c8:	001a      	movs	r2, r3
     3ca:	3232      	adds	r2, #50	; 0x32
     3cc:	0092      	lsls	r2, r2, #2
     3ce:	2120      	movs	r1, #32
     3d0:	5011      	str	r1, [r2, r0]
		break;
     3d2:	e7a0      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = RegIni[5];
     3d4:	22dc      	movs	r2, #220	; 0xdc
     3d6:	5881      	ldr	r1, [r0, r2]
     3d8:	001a      	movs	r2, r3
     3da:	3232      	adds	r2, #50	; 0x32
     3dc:	0092      	lsls	r2, r2, #2
     3de:	5011      	str	r1, [r2, r0]
         break;
     3e0:	e799      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
       RegIni[i] = (0x01<<3)|(0x00<<7)|(0x07<<9)|(0x03<<12)|(0x01<<15);
     3e2:	001a      	movs	r2, r3
     3e4:	3232      	adds	r2, #50	; 0x32
     3e6:	0092      	lsls	r2, r2, #2
     3e8:	4910      	ldr	r1, [pc, #64]	; (42c <_ZN14ADF5610_Driver17InitiateRegistersEv+0x124>)
     3ea:	5011      	str	r1, [r2, r0]
         break;
     3ec:	e793      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
         RegIni[i] =(0x02<<3)|(0x07<<7)|(0x00);
     3ee:	001a      	movs	r2, r3
     3f0:	3232      	adds	r2, #50	; 0x32
     3f2:	0092      	lsls	r2, r2, #2
     3f4:	21e4      	movs	r1, #228	; 0xe4
     3f6:	0089      	lsls	r1, r1, #2
     3f8:	5011      	str	r1, [r2, r0]
         break;
     3fa:	e78c      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x0;
     3fc:	001a      	movs	r2, r3
     3fe:	3232      	adds	r2, #50	; 0x32
     400:	0092      	lsls	r2, r2, #2
     402:	2100      	movs	r1, #0
     404:	5011      	str	r1, [r2, r0]
        break;
     406:	e786      	b.n	316 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
}
     408:	4770      	bx	lr
     40a:	46c0      	nop			; (mov r8, r8)
     40c:	0000df6c 	.word	0x0000df6c
     410:	00fd70a3 	.word	0x00fd70a3
     414:	00002f4a 	.word	0x00002f4a
     418:	0000214d 	.word	0x0000214d
     41c:	00c9beff 	.word	0x00c9beff
     420:	00003fff 	.word	0x00003fff
     424:	00002047 	.word	0x00002047
     428:	000f8061 	.word	0x000f8061
     42c:	0000be08 	.word	0x0000be08

00000430 <_ZN14ADF5610_Driver16ReadAllRegistersEv>:
void ADF5610_Driver::ReadAllRegisters(){
     430:	b570      	push	{r4, r5, r6, lr}
     432:	0005      	movs	r5, r0
  for (int i=0; i<=19;i++){
     434:	2400      	movs	r4, #0
     436:	2c13      	cmp	r4, #19
     438:	dc05      	bgt.n	446 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x16>
    ReadRegisters((uint8_t)i);
     43a:	b2e1      	uxtb	r1, r4
     43c:	0028      	movs	r0, r5
     43e:	4b02      	ldr	r3, [pc, #8]	; (448 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x18>)
     440:	4798      	blx	r3
  for (int i=0; i<=19;i++){
     442:	3401      	adds	r4, #1
     444:	e7f7      	b.n	436 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x6>
}
     446:	bd70      	pop	{r4, r5, r6, pc}
     448:	00000269 	.word	0x00000269

0000044c <_ZN14ADF5610_Driver18CalculateVCOValuesEv>:
void ADF5610_Driver::CalculateVCOValues(void){
     44c:	b5f0      	push	{r4, r5, r6, r7, lr}
     44e:	46ce      	mov	lr, r9
     450:	4647      	mov	r7, r8
     452:	b580      	push	{r7, lr}
     454:	b085      	sub	sp, #20
     456:	0007      	movs	r7, r0
	 aux_register=0;
     458:	2200      	movs	r2, #0
     45a:	23a0      	movs	r3, #160	; 0xa0
     45c:	005b      	lsls	r3, r3, #1
     45e:	50c2      	str	r2, [r0, r3]
		double  fDIV=target_frequency;
     460:	259a      	movs	r5, #154	; 0x9a
     462:	006d      	lsls	r5, r5, #1
     464:	4c81      	ldr	r4, [pc, #516]	; (66c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x220>)
     466:	5940      	ldr	r0, [r0, r5]
     468:	47a0      	blx	r4
     46a:	0002      	movs	r2, r0
     46c:	000b      	movs	r3, r1
		int k=floor(log((14600)/(fDIV))/log(2));
     46e:	4980      	ldr	r1, [pc, #512]	; (670 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x224>)
     470:	4688      	mov	r8, r1
     472:	2000      	movs	r0, #0
     474:	497f      	ldr	r1, [pc, #508]	; (674 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x228>)
     476:	47c0      	blx	r8
     478:	4b7f      	ldr	r3, [pc, #508]	; (678 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x22c>)
     47a:	4798      	blx	r3
     47c:	4a7f      	ldr	r2, [pc, #508]	; (67c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x230>)
     47e:	4b80      	ldr	r3, [pc, #512]	; (680 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x234>)
     480:	47c0      	blx	r8
     482:	4b80      	ldr	r3, [pc, #512]	; (684 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x238>)
     484:	4798      	blx	r3
     486:	4b80      	ldr	r3, [pc, #512]	; (688 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x23c>)
     488:	4798      	blx	r3
		uint8_t kDIV=7-(uint8_t)(k);
     48a:	2307      	movs	r3, #7
     48c:	9000      	str	r0, [sp, #0]
     48e:	1a1b      	subs	r3, r3, r0
     490:	b2de      	uxtb	r6, r3
	  double fVCO = 7300*((target_frequency*pow(2, k))/(14600)); //VCO
     492:	5978      	ldr	r0, [r7, r5]
     494:	47a0      	blx	r4
     496:	9002      	str	r0, [sp, #8]
     498:	9103      	str	r1, [sp, #12]
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
     49a:	9800      	ldr	r0, [sp, #0]
     49c:	4b7b      	ldr	r3, [pc, #492]	; (68c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x240>)
     49e:	4798      	blx	r3
     4a0:	0002      	movs	r2, r0
     4a2:	000b      	movs	r3, r1
     4a4:	2000      	movs	r0, #0
     4a6:	2180      	movs	r1, #128	; 0x80
     4a8:	05c9      	lsls	r1, r1, #23
     4aa:	4c79      	ldr	r4, [pc, #484]	; (690 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x244>)
     4ac:	47a0      	blx	r4
     4ae:	0002      	movs	r2, r0
     4b0:	000b      	movs	r3, r1
     4b2:	4c78      	ldr	r4, [pc, #480]	; (694 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x248>)
     4b4:	9802      	ldr	r0, [sp, #8]
     4b6:	9903      	ldr	r1, [sp, #12]
     4b8:	47a0      	blx	r4
     4ba:	2200      	movs	r2, #0
     4bc:	4b6d      	ldr	r3, [pc, #436]	; (674 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x228>)
     4be:	47c0      	blx	r8
     4c0:	2200      	movs	r2, #0
     4c2:	4b75      	ldr	r3, [pc, #468]	; (698 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x24c>)
     4c4:	47a0      	blx	r4
     4c6:	9000      	str	r0, [sp, #0]
     4c8:	9101      	str	r1, [sp, #4]
	  if (fVCO<4000){
     4ca:	2200      	movs	r2, #0
     4cc:	4b73      	ldr	r3, [pc, #460]	; (69c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x250>)
     4ce:	4c74      	ldr	r4, [pc, #464]	; (6a0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x254>)
     4d0:	47a0      	blx	r4
     4d2:	2800      	cmp	r0, #0
     4d4:	d02f      	beq.n	536 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xea>
		fPD = 1*fX; //Phase detector frequency
     4d6:	2200      	movs	r2, #0
     4d8:	4b72      	ldr	r3, [pc, #456]	; (6a4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x258>)
 N = fVCO /fPD;   // Calculate N
     4da:	9800      	ldr	r0, [sp, #0]
     4dc:	9901      	ldr	r1, [sp, #4]
     4de:	4c64      	ldr	r4, [pc, #400]	; (670 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x224>)
     4e0:	47a0      	blx	r4
     4e2:	0004      	movs	r4, r0
     4e4:	000d      	movs	r5, r1
     4e6:	003b      	movs	r3, r7
     4e8:	3371      	adds	r3, #113	; 0x71
     4ea:	33ff      	adds	r3, #255	; 0xff
     4ec:	601c      	str	r4, [r3, #0]
     4ee:	605d      	str	r5, [r3, #4]
  N_Int = floor(fVCO/fPD);   // N= 50 for 5 GHz   // Turn N into integer
     4f0:	4b64      	ldr	r3, [pc, #400]	; (684 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x238>)
     4f2:	4798      	blx	r3
     4f4:	000a      	movs	r2, r1
     4f6:	0001      	movs	r1, r0
     4f8:	9102      	str	r1, [sp, #8]
     4fa:	9203      	str	r2, [sp, #12]
     4fc:	003b      	movs	r3, r7
     4fe:	3369      	adds	r3, #105	; 0x69
     500:	33ff      	adds	r3, #255	; 0xff
     502:	6019      	str	r1, [r3, #0]
     504:	605a      	str	r2, [r3, #4]
 F_Frac1x = (N - N_Int) * pow(2, 24);   // Calculate Frac1 (N remainder * 2^24)
     506:	0013      	movs	r3, r2
     508:	0002      	movs	r2, r0
     50a:	0020      	movs	r0, r4
     50c:	0029      	movs	r1, r5
     50e:	4c66      	ldr	r4, [pc, #408]	; (6a8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x25c>)
     510:	47a0      	blx	r4
     512:	2200      	movs	r2, #0
     514:	4b65      	ldr	r3, [pc, #404]	; (6ac <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x260>)
     516:	4c5f      	ldr	r4, [pc, #380]	; (694 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x248>)
     518:	47a0      	blx	r4
     51a:	003b      	movs	r3, r7
     51c:	3379      	adds	r3, #121	; 0x79
     51e:	33ff      	adds	r3, #255	; 0xff
     520:	6018      	str	r0, [r3, #0]
     522:	6059      	str	r1, [r3, #4]
   F_FracN = (uint32_t)F_Frac1x;  // turn Frac1 into an integer
     524:	4b62      	ldr	r3, [pc, #392]	; (6b0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x264>)
     526:	4798      	blx	r3
     528:	23c0      	movs	r3, #192	; 0xc0
     52a:	005b      	lsls	r3, r3, #1
     52c:	50f8      	str	r0, [r7, r3]
  for (int i = 0; i < 23; i++) {
     52e:	2400      	movs	r4, #0
     530:	46b1      	mov	r9, r6
     532:	0005      	movs	r5, r0
     534:	e00e      	b.n	554 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x108>
		fPD = 2*fX; //Phase detector frequency
     536:	2200      	movs	r2, #0
     538:	4b5e      	ldr	r3, [pc, #376]	; (6b4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x268>)
     53a:	e7ce      	b.n	4da <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x8e>
        RegWrite[i] =(uint32_t)(0x00FFFFFF&((long)N_Int));  //Fixed value (Phase control not needed)
     53c:	9802      	ldr	r0, [sp, #8]
     53e:	9903      	ldr	r1, [sp, #12]
     540:	4b51      	ldr	r3, [pc, #324]	; (688 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x23c>)
     542:	4798      	blx	r3
     544:	0200      	lsls	r0, r0, #8
     546:	0a00      	lsrs	r0, r0, #8
     548:	0023      	movs	r3, r4
     54a:	331a      	adds	r3, #26
     54c:	009b      	lsls	r3, r3, #2
     54e:	18fb      	adds	r3, r7, r3
     550:	6058      	str	r0, [r3, #4]
  for (int i = 0; i < 23; i++) {
     552:	3401      	adds	r4, #1
     554:	2c16      	cmp	r4, #22
     556:	dd00      	ble.n	55a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x10e>
     558:	e083      	b.n	662 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x216>
    switch (i) {
     55a:	1ee3      	subs	r3, r4, #3
     55c:	2b13      	cmp	r3, #19
     55e:	d8f8      	bhi.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
     560:	009b      	lsls	r3, r3, #2
     562:	4a55      	ldr	r2, [pc, #340]	; (6b8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x26c>)
     564:	58d3      	ldr	r3, [r2, r3]
     566:	469f      	mov	pc, r3
        RegWrite[i] =(uint32_t)(0x00FFFFFF&(F_FracN));
     568:	022a      	lsls	r2, r5, #8
     56a:	0a12      	lsrs	r2, r2, #8
     56c:	0023      	movs	r3, r4
     56e:	331a      	adds	r3, #26
     570:	009b      	lsls	r3, r3, #2
     572:	18fb      	adds	r3, r7, r3
     574:	605a      	str	r2, [r3, #4]
        break;
     576:	e7ec      	b.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
		 RegWrite[i]=RegIni[i];
     578:	0023      	movs	r3, r4
     57a:	3332      	adds	r3, #50	; 0x32
     57c:	009b      	lsls	r3, r3, #2
     57e:	59da      	ldr	r2, [r3, r7]
     580:	0023      	movs	r3, r4
     582:	331a      	adds	r3, #26
     584:	009b      	lsls	r3, r3, #2
     586:	18fb      	adds	r3, r7, r3
     588:	605a      	str	r2, [r3, #4]
        break;
     58a:	e7e2      	b.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
        if (fVCO<4000){
     58c:	2200      	movs	r2, #0
     58e:	4b43      	ldr	r3, [pc, #268]	; (69c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x250>)
     590:	9800      	ldr	r0, [sp, #0]
     592:	9901      	ldr	r1, [sp, #4]
     594:	4e42      	ldr	r6, [pc, #264]	; (6a0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x254>)
     596:	47b0      	blx	r6
     598:	2800      	cmp	r0, #0
     59a:	d008      	beq.n	5ae <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x162>
          bitWrite(RegWrite[i], 19, 0);
     59c:	0023      	movs	r3, r4
     59e:	331a      	adds	r3, #26
     5a0:	009b      	lsls	r3, r3, #2
     5a2:	18fb      	adds	r3, r7, r3
     5a4:	4a45      	ldr	r2, [pc, #276]	; (6bc <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x270>)
     5a6:	6859      	ldr	r1, [r3, #4]
     5a8:	400a      	ands	r2, r1
     5aa:	605a      	str	r2, [r3, #4]
     5ac:	e7d1      	b.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
          bitWrite(RegWrite[i], 19, 1);
     5ae:	0023      	movs	r3, r4
     5b0:	331a      	adds	r3, #26
     5b2:	009b      	lsls	r3, r3, #2
     5b4:	18fb      	adds	r3, r7, r3
     5b6:	2280      	movs	r2, #128	; 0x80
     5b8:	0312      	lsls	r2, r2, #12
     5ba:	6859      	ldr	r1, [r3, #4]
     5bc:	430a      	orrs	r2, r1
     5be:	605a      	str	r2, [r3, #4]
     5c0:	e7c7      	b.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
    	  aux_register=RegWrite[5];
     5c2:	2380      	movs	r3, #128	; 0x80
     5c4:	58fa      	ldr	r2, [r7, r3]
     5c6:	33c0      	adds	r3, #192	; 0xc0
     5c8:	50fa      	str	r2, [r7, r3]
        RegWrite[i]=aux_register;
     5ca:	0023      	movs	r3, r4
     5cc:	331a      	adds	r3, #26
     5ce:	009b      	lsls	r3, r3, #2
     5d0:	18fb      	adds	r3, r7, r3
     5d2:	605a      	str	r2, [r3, #4]
        break;
     5d4:	e7bd      	b.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
        RegWrite[i]=RegIni[i];
     5d6:	0023      	movs	r3, r4
     5d8:	3332      	adds	r3, #50	; 0x32
     5da:	009b      	lsls	r3, r3, #2
     5dc:	59da      	ldr	r2, [r3, r7]
     5de:	0023      	movs	r3, r4
     5e0:	331a      	adds	r3, #26
     5e2:	009b      	lsls	r3, r3, #2
     5e4:	18fb      	adds	r3, r7, r3
     5e6:	605a      	str	r2, [r3, #4]
        break;
     5e8:	e7b3      	b.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
    switch (i) {
     5ea:	2303      	movs	r3, #3
     5ec:	464e      	mov	r6, r9
     5ee:	e022      	b.n	636 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1ea>
					bitWrite(RegWrite[i], j, bitRead(VCOAdd,j-3));
     5f0:	1ed9      	subs	r1, r3, #3
     5f2:	2202      	movs	r2, #2
     5f4:	410a      	asrs	r2, r1
     5f6:	07d2      	lsls	r2, r2, #31
     5f8:	d509      	bpl.n	60e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1c2>
     5fa:	2101      	movs	r1, #1
     5fc:	4099      	lsls	r1, r3
     5fe:	0022      	movs	r2, r4
     600:	321a      	adds	r2, #26
     602:	0092      	lsls	r2, r2, #2
     604:	18ba      	adds	r2, r7, r2
     606:	6850      	ldr	r0, [r2, #4]
     608:	4301      	orrs	r1, r0
     60a:	6051      	str	r1, [r2, #4]
     60c:	e012      	b.n	634 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1e8>
     60e:	2101      	movs	r1, #1
     610:	4099      	lsls	r1, r3
     612:	0022      	movs	r2, r4
     614:	321a      	adds	r2, #26
     616:	0092      	lsls	r2, r2, #2
     618:	18ba      	adds	r2, r7, r2
     61a:	6850      	ldr	r0, [r2, #4]
     61c:	4388      	bics	r0, r1
     61e:	6050      	str	r0, [r2, #4]
     620:	e008      	b.n	634 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1e8>
					bitWrite(RegWrite[i], j, bitRead(kDIV,j-7));
     622:	2101      	movs	r1, #1
     624:	4099      	lsls	r1, r3
     626:	0022      	movs	r2, r4
     628:	321a      	adds	r2, #26
     62a:	0092      	lsls	r2, r2, #2
     62c:	18ba      	adds	r2, r7, r2
     62e:	6850      	ldr	r0, [r2, #4]
     630:	4388      	bics	r0, r1
     632:	6050      	str	r0, [r2, #4]
			for (int j=3;j<16;j++){
     634:	3301      	adds	r3, #1
     636:	2b0f      	cmp	r3, #15
     638:	dc11      	bgt.n	65e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x212>
				if (j<7){
     63a:	2b06      	cmp	r3, #6
     63c:	ddd8      	ble.n	5f0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1a4>
					bitWrite(RegWrite[i], j, bitRead(kDIV,j-7));
     63e:	1fda      	subs	r2, r3, #7
     640:	0031      	movs	r1, r6
     642:	4111      	asrs	r1, r2
     644:	000a      	movs	r2, r1
     646:	07d2      	lsls	r2, r2, #31
     648:	d5eb      	bpl.n	622 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1d6>
     64a:	2101      	movs	r1, #1
     64c:	4099      	lsls	r1, r3
     64e:	0022      	movs	r2, r4
     650:	321a      	adds	r2, #26
     652:	0092      	lsls	r2, r2, #2
     654:	18ba      	adds	r2, r7, r2
     656:	6850      	ldr	r0, [r2, #4]
     658:	4301      	orrs	r1, r0
     65a:	6051      	str	r1, [r2, #4]
     65c:	e7ea      	b.n	634 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1e8>
     65e:	46b1      	mov	r9, r6
     660:	e777      	b.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x106>
}
     662:	b005      	add	sp, #20
     664:	bc0c      	pop	{r2, r3}
     666:	4690      	mov	r8, r2
     668:	4699      	mov	r9, r3
     66a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     66c:	000090d1 	.word	0x000090d1
     670:	00007ba1 	.word	0x00007ba1
     674:	40cc8400 	.word	0x40cc8400
     678:	00004e21 	.word	0x00004e21
     67c:	fefa39ef 	.word	0xfefa39ef
     680:	3fe62e42 	.word	0x3fe62e42
     684:	00004cf1 	.word	0x00004cf1
     688:	00008f75 	.word	0x00008f75
     68c:	00008fdd 	.word	0x00008fdd
     690:	00004f31 	.word	0x00004f31
     694:	00008409 	.word	0x00008409
     698:	40bc8400 	.word	0x40bc8400
     69c:	40af4000 	.word	0x40af4000
     6a0:	00006821 	.word	0x00006821
     6a4:	40490000 	.word	0x40490000
     6a8:	00008909 	.word	0x00008909
     6ac:	41700000 	.word	0x41700000
     6b0:	00006939 	.word	0x00006939
     6b4:	40590000 	.word	0x40590000
     6b8:	0000dfc8 	.word	0x0000dfc8
     6bc:	fff7ffff 	.word	0xfff7ffff

000006c0 <_ZN14ADF5610_Driver16SetNextFrequencyEv>:
{
     6c0:	b510      	push	{r4, lr}
  CalculateVCOValues();
     6c2:	4b01      	ldr	r3, [pc, #4]	; (6c8 <_ZN14ADF5610_Driver16SetNextFrequencyEv+0x8>)
     6c4:	4798      	blx	r3
}
     6c6:	bd10      	pop	{r4, pc}
     6c8:	0000044d 	.word	0x0000044d

000006cc <_ZN14ADF5610_Driver6usleepEl>:
	
}
#ifdef ARDUINO_AVR_UNO
#else

void ADF5610_Driver::usleep(long us){
     6cc:	b510      	push	{r4, lr}
     6ce:	0008      	movs	r0, r1
	if (us/1000>1)
     6d0:	4b07      	ldr	r3, [pc, #28]	; (6f0 <_ZN14ADF5610_Driver6usleepEl+0x24>)
     6d2:	4299      	cmp	r1, r3
     6d4:	dc03      	bgt.n	6de <_ZN14ADF5610_Driver6usleepEl+0x12>
	{
		delay_ms(us/1000);
	} 
	else
	{
		delay_ms(1);
     6d6:	2001      	movs	r0, #1
     6d8:	4b06      	ldr	r3, [pc, #24]	; (6f4 <_ZN14ADF5610_Driver6usleepEl+0x28>)
     6da:	4798      	blx	r3
	}
	
}
     6dc:	bd10      	pop	{r4, pc}
		delay_ms(us/1000);
     6de:	21fa      	movs	r1, #250	; 0xfa
     6e0:	0089      	lsls	r1, r1, #2
     6e2:	4b05      	ldr	r3, [pc, #20]	; (6f8 <_ZN14ADF5610_Driver6usleepEl+0x2c>)
     6e4:	4798      	blx	r3
     6e6:	b280      	uxth	r0, r0
     6e8:	4b02      	ldr	r3, [pc, #8]	; (6f4 <_ZN14ADF5610_Driver6usleepEl+0x28>)
     6ea:	4798      	blx	r3
     6ec:	e7f6      	b.n	6dc <_ZN14ADF5610_Driver6usleepEl+0x10>
     6ee:	46c0      	nop			; (mov r8, r8)
     6f0:	000007cf 	.word	0x000007cf
     6f4:	00001489 	.word	0x00001489
     6f8:	0000661d 	.word	0x0000661d

000006fc <_ZN14ADF5610_Driver14WriteRegistersEh>:
void  ADF5610_Driver::WriteRegisters(uint8_t index) {
     6fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     6fe:	0004      	movs	r4, r0
     700:	000d      	movs	r5, r1
  local_index=0;
     702:	2300      	movs	r3, #0
     704:	22a2      	movs	r2, #162	; 0xa2
     706:	0052      	lsls	r2, r2, #1
     708:	5483      	strb	r3, [r0, r2]
  buffer32 = 0;
     70a:	3a20      	subs	r2, #32
     70c:	5083      	str	r3, [r0, r2]
  if (index>19){
     70e:	2913      	cmp	r1, #19
     710:	dd1a      	ble.n	748 <_ZN14ADF5610_Driver14WriteRegistersEh+0x4c>
    if(index>22){
     712:	2916      	cmp	r1, #22
     714:	dd13      	ble.n	73e <_ZN14ADF5610_Driver14WriteRegistersEh+0x42>
		if (index>23)
     716:	2917      	cmp	r1, #23
     718:	dd0c      	ble.n	734 <_ZN14ADF5610_Driver14WriteRegistersEh+0x38>
			if (index==24)
     71a:	2918      	cmp	r1, #24
     71c:	d004      	beq.n	728 <_ZN14ADF5610_Driver14WriteRegistersEh+0x2c>
				 local_index=3;
     71e:	2203      	movs	r2, #3
     720:	23a2      	movs	r3, #162	; 0xa2
     722:	005b      	lsls	r3, r3, #1
     724:	54c2      	strb	r2, [r0, r3]
     726:	e012      	b.n	74e <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
				local_index=4;
     728:	3a21      	subs	r2, #33	; 0x21
     72a:	3aff      	subs	r2, #255	; 0xff
     72c:	23a2      	movs	r3, #162	; 0xa2
     72e:	005b      	lsls	r3, r3, #1
     730:	54c2      	strb	r2, [r0, r3]
     732:	e00c      	b.n	74e <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
			 local_index=3;
     734:	2203      	movs	r2, #3
     736:	23a2      	movs	r3, #162	; 0xa2
     738:	005b      	lsls	r3, r3, #1
     73a:	54c2      	strb	r2, [r0, r3]
     73c:	e007      	b.n	74e <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
		 local_index=5;
     73e:	2205      	movs	r2, #5
     740:	23a2      	movs	r3, #162	; 0xa2
     742:	005b      	lsls	r3, r3, #1
     744:	54c2      	strb	r2, [r0, r3]
     746:	e002      	b.n	74e <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
    local_index=index;
     748:	23a2      	movs	r3, #162	; 0xa2
     74a:	005b      	lsls	r3, r3, #1
     74c:	54e1      	strb	r1, [r4, r3]
  switch (local_index){
     74e:	23a2      	movs	r3, #162	; 0xa2
     750:	005b      	lsls	r3, r3, #1
     752:	5ce3      	ldrb	r3, [r4, r3]
     754:	3b10      	subs	r3, #16
     756:	b2db      	uxtb	r3, r3
     758:	2b03      	cmp	r3, #3
     75a:	d800      	bhi.n	75e <_ZN14ADF5610_Driver14WriteRegistersEh+0x62>
}
     75c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		    spi_adf->SetCS(false);
     75e:	2100      	movs	r1, #0
     760:	6860      	ldr	r0, [r4, #4]
     762:	4e21      	ldr	r6, [pc, #132]	; (7e8 <_ZN14ADF5610_Driver14WriteRegistersEh+0xec>)
     764:	47b0      	blx	r6
			  buffer32 =((uint32_t)local_index <<3)|(RegWrite[index]<<8);
     766:	23a2      	movs	r3, #162	; 0xa2
     768:	005b      	lsls	r3, r3, #1
     76a:	5ce2      	ldrb	r2, [r4, r3]
     76c:	00d2      	lsls	r2, r2, #3
     76e:	002b      	movs	r3, r5
     770:	331a      	adds	r3, #26
     772:	009b      	lsls	r3, r3, #2
     774:	18e3      	adds	r3, r4, r3
     776:	685b      	ldr	r3, [r3, #4]
     778:	021b      	lsls	r3, r3, #8
     77a:	431a      	orrs	r2, r3
     77c:	2392      	movs	r3, #146	; 0x92
     77e:	005b      	lsls	r3, r3, #1
     780:	50e2      	str	r2, [r4, r3]
			  ConvertU32FourByteArray(to_send,buffer32);
     782:	0027      	movs	r7, r4
     784:	3751      	adds	r7, #81	; 0x51
     786:	37ff      	adds	r7, #255	; 0xff
     788:	0039      	movs	r1, r7
     78a:	0020      	movs	r0, r4
     78c:	4b17      	ldr	r3, [pc, #92]	; (7ec <_ZN14ADF5610_Driver14WriteRegistersEh+0xf0>)
     78e:	4798      	blx	r3
		          spi_adf->Write(to_send,4);
     790:	2204      	movs	r2, #4
     792:	0039      	movs	r1, r7
     794:	6860      	ldr	r0, [r4, #4]
     796:	4b16      	ldr	r3, [pc, #88]	; (7f0 <_ZN14ADF5610_Driver14WriteRegistersEh+0xf4>)
     798:	4798      	blx	r3
			 usleep(1);
     79a:	2101      	movs	r1, #1
     79c:	0020      	movs	r0, r4
     79e:	4b15      	ldr	r3, [pc, #84]	; (7f4 <_ZN14ADF5610_Driver14WriteRegistersEh+0xf8>)
     7a0:	4798      	blx	r3
		   spi_adf->SetCS(true);
     7a2:	2101      	movs	r1, #1
     7a4:	6860      	ldr	r0, [r4, #4]
     7a6:	47b0      	blx	r6
		   if(!is_locked){
     7a8:	239e      	movs	r3, #158	; 0x9e
     7aa:	005b      	lsls	r3, r3, #1
     7ac:	5ce3      	ldrb	r3, [r4, r3]
     7ae:	2b00      	cmp	r3, #0
     7b0:	d1d4      	bne.n	75c <_ZN14ADF5610_Driver14WriteRegistersEh+0x60>
			   usleep(1);
     7b2:	2101      	movs	r1, #1
     7b4:	0020      	movs	r0, r4
     7b6:	4b0f      	ldr	r3, [pc, #60]	; (7f4 <_ZN14ADF5610_Driver14WriteRegistersEh+0xf8>)
     7b8:	4798      	blx	r3
			   ReadRegisters(local_index);
     7ba:	26a2      	movs	r6, #162	; 0xa2
     7bc:	0076      	lsls	r6, r6, #1
     7be:	5da1      	ldrb	r1, [r4, r6]
     7c0:	0020      	movs	r0, r4
     7c2:	4b0d      	ldr	r3, [pc, #52]	; (7f8 <_ZN14ADF5610_Driver14WriteRegistersEh+0xfc>)
     7c4:	4798      	blx	r3
				   if(RegRead[local_index]!=RegWrite[index]){
     7c6:	5da3      	ldrb	r3, [r4, r6]
     7c8:	3304      	adds	r3, #4
     7ca:	009b      	lsls	r3, r3, #2
     7cc:	591a      	ldr	r2, [r3, r4]
     7ce:	002b      	movs	r3, r5
     7d0:	331a      	adds	r3, #26
     7d2:	009b      	lsls	r3, r3, #2
     7d4:	18e3      	adds	r3, r4, r3
     7d6:	685b      	ldr	r3, [r3, #4]
     7d8:	429a      	cmp	r2, r3
     7da:	d0bf      	beq.n	75c <_ZN14ADF5610_Driver14WriteRegistersEh+0x60>
							   ShowRegisters(index);
     7dc:	0029      	movs	r1, r5
     7de:	0020      	movs	r0, r4
     7e0:	4b06      	ldr	r3, [pc, #24]	; (7fc <_ZN14ADF5610_Driver14WriteRegistersEh+0x100>)
     7e2:	4798      	blx	r3
}
     7e4:	e7ba      	b.n	75c <_ZN14ADF5610_Driver14WriteRegistersEh+0x60>
     7e6:	46c0      	nop			; (mov r8, r8)
     7e8:	00000ce9 	.word	0x00000ce9
     7ec:	0000024d 	.word	0x0000024d
     7f0:	00000cb9 	.word	0x00000cb9
     7f4:	000006cd 	.word	0x000006cd
     7f8:	00000269 	.word	0x00000269
     7fc:	000001a5 	.word	0x000001a5

00000800 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj>:
void ADF5610_Driver::CompleteConfigurationFlow(unsigned int k){
     800:	b570      	push	{r4, r5, r6, lr}
     802:	0005      	movs	r5, r0
     804:	000c      	movs	r4, r1
     806:	e00d      	b.n	824 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x24>
     808:	2616      	movs	r6, #22
      for(int j=22;j>19;j--){
     80a:	2e13      	cmp	r6, #19
     80c:	dd05      	ble.n	81a <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x1a>
        WriteRegisters(j);
     80e:	b2f1      	uxtb	r1, r6
     810:	0028      	movs	r0, r5
     812:	4b0d      	ldr	r3, [pc, #52]	; (848 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     814:	4798      	blx	r3
      for(int j=22;j>19;j--){
     816:	3e01      	subs	r6, #1
     818:	e7f7      	b.n	80a <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0xa>
	   WriteRegisters(5);
     81a:	2105      	movs	r1, #5
     81c:	0028      	movs	r0, r5
     81e:	4b0a      	ldr	r3, [pc, #40]	; (848 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     820:	4798      	blx	r3
  for (int i=k; i<20;i++){
     822:	3401      	adds	r4, #1
     824:	2c13      	cmp	r4, #19
     826:	dc06      	bgt.n	836 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x36>
    if (i==5){
     828:	2c05      	cmp	r4, #5
     82a:	d0ed      	beq.n	808 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x8>
      WriteRegisters(i);
     82c:	b2e1      	uxtb	r1, r4
     82e:	0028      	movs	r0, r5
     830:	4b05      	ldr	r3, [pc, #20]	; (848 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     832:	4798      	blx	r3
     834:	e7f5      	b.n	822 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x22>
  WriteRegisters(3);
     836:	2103      	movs	r1, #3
     838:	0028      	movs	r0, r5
     83a:	4c03      	ldr	r4, [pc, #12]	; (848 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     83c:	47a0      	blx	r4
  WriteRegisters(4);
     83e:	2104      	movs	r1, #4
     840:	0028      	movs	r0, r5
     842:	47a0      	blx	r4
}
     844:	bd70      	pop	{r4, r5, r6, pc}
     846:	46c0      	nop			; (mov r8, r8)
     848:	000006fd 	.word	0x000006fd

0000084c <_ZN14ADF5610_Driver7InitPLLEv>:
bool  ADF5610_Driver::InitPLL(void){
     84c:	b570      	push	{r4, r5, r6, lr}
     84e:	0004      	movs	r4, r0
		CompleteConfigurationFlow(0);
     850:	2100      	movs	r1, #0
     852:	0020      	movs	r0, r4
     854:	4b0d      	ldr	r3, [pc, #52]	; (88c <_ZN14ADF5610_Driver7InitPLLEv+0x40>)
     856:	4798      	blx	r3
		ReadAllRegisters();
     858:	0020      	movs	r0, r4
     85a:	4b0d      	ldr	r3, [pc, #52]	; (890 <_ZN14ADF5610_Driver7InitPLLEv+0x44>)
     85c:	4798      	blx	r3
		pll_started= bitRead(RegRead[1],1)&(bitRead(RegRead[1],0)==0);
     85e:	6963      	ldr	r3, [r4, #20]
     860:	0859      	lsrs	r1, r3, #1
     862:	2201      	movs	r2, #1
     864:	401a      	ands	r2, r3
     866:	4253      	negs	r3, r2
     868:	4153      	adcs	r3, r2
     86a:	400b      	ands	r3, r1
     86c:	2556      	movs	r5, #86	; 0x56
     86e:	35ff      	adds	r5, #255	; 0xff
     870:	5563      	strb	r3, [r4, r5]
		delay_ms(100);
     872:	2064      	movs	r0, #100	; 0x64
     874:	4b07      	ldr	r3, [pc, #28]	; (894 <_ZN14ADF5610_Driver7InitPLLEv+0x48>)
     876:	4798      	blx	r3
	}while((!Is_Locked())|((!pll_started)|false));
     878:	0020      	movs	r0, r4
     87a:	4b07      	ldr	r3, [pc, #28]	; (898 <_ZN14ADF5610_Driver7InitPLLEv+0x4c>)
     87c:	4798      	blx	r3
     87e:	5d63      	ldrb	r3, [r4, r5]
	do{
     880:	2800      	cmp	r0, #0
     882:	d0e5      	beq.n	850 <_ZN14ADF5610_Driver7InitPLLEv+0x4>
     884:	2b00      	cmp	r3, #0
     886:	d0e3      	beq.n	850 <_ZN14ADF5610_Driver7InitPLLEv+0x4>
}
     888:	0018      	movs	r0, r3
     88a:	bd70      	pop	{r4, r5, r6, pc}
     88c:	00000801 	.word	0x00000801
     890:	00000431 	.word	0x00000431
     894:	00001489 	.word	0x00001489
     898:	00000209 	.word	0x00000209

0000089c <_ZN14ADF5610_Driver4InitEv>:
bool ADF5610_Driver::Init(void){
     89c:	b570      	push	{r4, r5, r6, lr}
     89e:	0004      	movs	r4, r0
	spi_adf=&staticSPI;
     8a0:	480d      	ldr	r0, [pc, #52]	; (8d8 <_ZN14ADF5610_Driver4InitEv+0x3c>)
     8a2:	6060      	str	r0, [r4, #4]
	spi_adf->Init();
     8a4:	4b0d      	ldr	r3, [pc, #52]	; (8dc <_ZN14ADF5610_Driver4InitEv+0x40>)
     8a6:	4798      	blx	r3
	memset(to_send,0,4);
     8a8:	0025      	movs	r5, r4
     8aa:	3551      	adds	r5, #81	; 0x51
     8ac:	35ff      	adds	r5, #255	; 0xff
     8ae:	2204      	movs	r2, #4
     8b0:	2100      	movs	r1, #0
     8b2:	0028      	movs	r0, r5
     8b4:	4b0a      	ldr	r3, [pc, #40]	; (8e0 <_ZN14ADF5610_Driver4InitEv+0x44>)
     8b6:	4798      	blx	r3
	spi_adf->Write(to_send,4);
     8b8:	2204      	movs	r2, #4
     8ba:	0029      	movs	r1, r5
     8bc:	6860      	ldr	r0, [r4, #4]
     8be:	4b09      	ldr	r3, [pc, #36]	; (8e4 <_ZN14ADF5610_Driver4InitEv+0x48>)
     8c0:	4798      	blx	r3
	spi_adf->SetCS(true);
     8c2:	2101      	movs	r1, #1
     8c4:	6860      	ldr	r0, [r4, #4]
     8c6:	4b08      	ldr	r3, [pc, #32]	; (8e8 <_ZN14ADF5610_Driver4InitEv+0x4c>)
     8c8:	4798      	blx	r3
	 InitiateRegisters();
     8ca:	0020      	movs	r0, r4
     8cc:	4b07      	ldr	r3, [pc, #28]	; (8ec <_ZN14ADF5610_Driver4InitEv+0x50>)
     8ce:	4798      	blx	r3
	return InitPLL();
     8d0:	0020      	movs	r0, r4
     8d2:	4b07      	ldr	r3, [pc, #28]	; (8f0 <_ZN14ADF5610_Driver4InitEv+0x54>)
     8d4:	4798      	blx	r3
}
     8d6:	bd70      	pop	{r4, r5, r6, pc}
     8d8:	20000a3c 	.word	0x20000a3c
     8dc:	00000c91 	.word	0x00000c91
     8e0:	000092f1 	.word	0x000092f1
     8e4:	00000cb9 	.word	0x00000cb9
     8e8:	00000ce9 	.word	0x00000ce9
     8ec:	00000309 	.word	0x00000309
     8f0:	0000084d 	.word	0x0000084d

000008f4 <_ZN14ADF5610_Driver11WriteSubVCOEv>:
void ADF5610_Driver::WriteSubVCO(void){
     8f4:	b570      	push	{r4, r5, r6, lr}
     8f6:	0005      	movs	r5, r0
	WriteRegisters(22);
     8f8:	2116      	movs	r1, #22
     8fa:	4c04      	ldr	r4, [pc, #16]	; (90c <_ZN14ADF5610_Driver11WriteSubVCOEv+0x18>)
     8fc:	47a0      	blx	r4
	WriteRegisters(20);
     8fe:	2114      	movs	r1, #20
     900:	0028      	movs	r0, r5
     902:	47a0      	blx	r4
	WriteRegisters(5);
     904:	2105      	movs	r1, #5
     906:	0028      	movs	r0, r5
     908:	47a0      	blx	r4
}
     90a:	bd70      	pop	{r4, r5, r6, pc}
     90c:	000006fd 	.word	0x000006fd

00000910 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv>:
void ADF5610_Driver::ShortConfigurationFlow(void){
     910:	b570      	push	{r4, r5, r6, lr}
     912:	0004      	movs	r4, r0
  WriteRegisters(8);
     914:	2108      	movs	r1, #8
     916:	4d06      	ldr	r5, [pc, #24]	; (930 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv+0x20>)
     918:	47a8      	blx	r5
  WriteSubVCO();
     91a:	0020      	movs	r0, r4
     91c:	4b05      	ldr	r3, [pc, #20]	; (934 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv+0x24>)
     91e:	4798      	blx	r3
  WriteRegisters(3);
     920:	2103      	movs	r1, #3
     922:	0020      	movs	r0, r4
     924:	47a8      	blx	r5
  WriteRegisters(4);
     926:	2104      	movs	r1, #4
     928:	0020      	movs	r0, r4
     92a:	47a8      	blx	r5
}
     92c:	bd70      	pop	{r4, r5, r6, pc}
     92e:	46c0      	nop			; (mov r8, r8)
     930:	000006fd 	.word	0x000006fd
     934:	000008f5 	.word	0x000008f5

00000938 <_ZN14ADF5610_Driver8SelfTestEh>:
bool	ADF5610_Driver::SelfTest(uint8_t cycles){
     938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     93a:	46ce      	mov	lr, r9
     93c:	4647      	mov	r7, r8
     93e:	b580      	push	{r7, lr}
     940:	0004      	movs	r4, r0
     942:	4688      	mov	r8, r1
	dir=1;
     944:	2201      	movs	r2, #1
     946:	239c      	movs	r3, #156	; 0x9c
     948:	005b      	lsls	r3, r3, #1
     94a:	50c2      	str	r2, [r0, r3]
	int errorCounter=0;
     94c:	2700      	movs	r7, #0
     94e:	e02d      	b.n	9ac <_ZN14ADF5610_Driver8SelfTestEh+0x74>
				dir=-1;
     950:	2201      	movs	r2, #1
     952:	4252      	negs	r2, r2
     954:	3338      	adds	r3, #56	; 0x38
     956:	33ff      	adds	r3, #255	; 0xff
     958:	50e2      	str	r2, [r4, r3]
			   printf("Current frequence: %lf\n",current_frequency);
     95a:	1c28      	adds	r0, r5, #0
     95c:	4b53      	ldr	r3, [pc, #332]	; (aac <_ZN14ADF5610_Driver8SelfTestEh+0x174>)
     95e:	4798      	blx	r3
     960:	0002      	movs	r2, r0
     962:	000b      	movs	r3, r1
     964:	4852      	ldr	r0, [pc, #328]	; (ab0 <_ZN14ADF5610_Driver8SelfTestEh+0x178>)
     966:	4953      	ldr	r1, [pc, #332]	; (ab4 <_ZN14ADF5610_Driver8SelfTestEh+0x17c>)
     968:	4788      	blx	r1
				target_frequency=current_frequency+(dir*step);
     96a:	6825      	ldr	r5, [r4, #0]
     96c:	239c      	movs	r3, #156	; 0x9c
     96e:	005b      	lsls	r3, r3, #1
     970:	58e0      	ldr	r0, [r4, r3]
     972:	3b08      	subs	r3, #8
     974:	58e6      	ldr	r6, [r4, r3]
     976:	4b50      	ldr	r3, [pc, #320]	; (ab8 <_ZN14ADF5610_Driver8SelfTestEh+0x180>)
     978:	4798      	blx	r3
     97a:	1c31      	adds	r1, r6, #0
     97c:	4b4f      	ldr	r3, [pc, #316]	; (abc <_ZN14ADF5610_Driver8SelfTestEh+0x184>)
     97e:	4798      	blx	r3
     980:	1c01      	adds	r1, r0, #0
     982:	1c28      	adds	r0, r5, #0
     984:	4b4e      	ldr	r3, [pc, #312]	; (ac0 <_ZN14ADF5610_Driver8SelfTestEh+0x188>)
     986:	4798      	blx	r3
     988:	239a      	movs	r3, #154	; 0x9a
     98a:	005b      	lsls	r3, r3, #1
     98c:	50e0      	str	r0, [r4, r3]
				SetNextFrequency();
     98e:	0020      	movs	r0, r4
     990:	4b4c      	ldr	r3, [pc, #304]	; (ac4 <_ZN14ADF5610_Driver8SelfTestEh+0x18c>)
     992:	4798      	blx	r3
				ShortConfigurationFlow();
     994:	0020      	movs	r0, r4
     996:	4b4c      	ldr	r3, [pc, #304]	; (ac8 <_ZN14ADF5610_Driver8SelfTestEh+0x190>)
     998:	4798      	blx	r3
				usleep(1000);
     99a:	21fa      	movs	r1, #250	; 0xfa
     99c:	0089      	lsls	r1, r1, #2
     99e:	0020      	movs	r0, r4
     9a0:	4b4a      	ldr	r3, [pc, #296]	; (acc <_ZN14ADF5610_Driver8SelfTestEh+0x194>)
     9a2:	4798      	blx	r3
			 errorCounter=0;
     9a4:	2700      	movs	r7, #0
		 delay_ms(1);
     9a6:	2001      	movs	r0, #1
     9a8:	4b49      	ldr	r3, [pc, #292]	; (ad0 <_ZN14ADF5610_Driver8SelfTestEh+0x198>)
     9aa:	4798      	blx	r3
	while (((lower_limit<=current_frequency)&(current_frequency<=upper_limit))&&(cycles>counter)){
     9ac:	6826      	ldr	r6, [r4, #0]
     9ae:	2501      	movs	r5, #1
     9b0:	1c31      	adds	r1, r6, #0
     9b2:	68e0      	ldr	r0, [r4, #12]
     9b4:	4b47      	ldr	r3, [pc, #284]	; (ad4 <_ZN14ADF5610_Driver8SelfTestEh+0x19c>)
     9b6:	4798      	blx	r3
     9b8:	2800      	cmp	r0, #0
     9ba:	d100      	bne.n	9be <_ZN14ADF5610_Driver8SelfTestEh+0x86>
     9bc:	2500      	movs	r5, #0
     9be:	b2ed      	uxtb	r5, r5
     9c0:	2301      	movs	r3, #1
     9c2:	4699      	mov	r9, r3
     9c4:	68a1      	ldr	r1, [r4, #8]
     9c6:	1c30      	adds	r0, r6, #0
     9c8:	4b42      	ldr	r3, [pc, #264]	; (ad4 <_ZN14ADF5610_Driver8SelfTestEh+0x19c>)
     9ca:	4798      	blx	r3
     9cc:	2800      	cmp	r0, #0
     9ce:	d101      	bne.n	9d4 <_ZN14ADF5610_Driver8SelfTestEh+0x9c>
     9d0:	2300      	movs	r3, #0
     9d2:	4699      	mov	r9, r3
     9d4:	464b      	mov	r3, r9
     9d6:	401d      	ands	r5, r3
     9d8:	d062      	beq.n	aa0 <_ZN14ADF5610_Driver8SelfTestEh+0x168>
     9da:	4643      	mov	r3, r8
     9dc:	2b00      	cmp	r3, #0
     9de:	dd60      	ble.n	aa2 <_ZN14ADF5610_Driver8SelfTestEh+0x16a>
		 if(Is_Locked()){
     9e0:	0020      	movs	r0, r4
     9e2:	4b3d      	ldr	r3, [pc, #244]	; (ad8 <_ZN14ADF5610_Driver8SelfTestEh+0x1a0>)
     9e4:	4798      	blx	r3
     9e6:	1e05      	subs	r5, r0, #0
     9e8:	d02b      	beq.n	a42 <_ZN14ADF5610_Driver8SelfTestEh+0x10a>
			 is_locked=true;
     9ea:	2201      	movs	r2, #1
     9ec:	239e      	movs	r3, #158	; 0x9e
     9ee:	005b      	lsls	r3, r3, #1
     9f0:	54e2      	strb	r2, [r4, r3]
			 current_frequency=target_frequency;
     9f2:	3b08      	subs	r3, #8
     9f4:	58e5      	ldr	r5, [r4, r3]
     9f6:	6025      	str	r5, [r4, #0]
			  if ((current_frequency>(upper_limit-step))&&(dir==1)){
     9f8:	3b04      	subs	r3, #4
     9fa:	58e6      	ldr	r6, [r4, r3]
     9fc:	1c31      	adds	r1, r6, #0
     9fe:	68a0      	ldr	r0, [r4, #8]
     a00:	4b36      	ldr	r3, [pc, #216]	; (adc <_ZN14ADF5610_Driver8SelfTestEh+0x1a4>)
     a02:	4798      	blx	r3
     a04:	1c01      	adds	r1, r0, #0
     a06:	1c28      	adds	r0, r5, #0
     a08:	4b35      	ldr	r3, [pc, #212]	; (ae0 <_ZN14ADF5610_Driver8SelfTestEh+0x1a8>)
     a0a:	4798      	blx	r3
     a0c:	2800      	cmp	r0, #0
     a0e:	d004      	beq.n	a1a <_ZN14ADF5610_Driver8SelfTestEh+0xe2>
     a10:	239c      	movs	r3, #156	; 0x9c
     a12:	005b      	lsls	r3, r3, #1
     a14:	58e3      	ldr	r3, [r4, r3]
     a16:	2b01      	cmp	r3, #1
     a18:	d09a      	beq.n	950 <_ZN14ADF5610_Driver8SelfTestEh+0x18>
			  }else if((current_frequency<(lower_limit+step))&&(dir==-1)){
     a1a:	68e1      	ldr	r1, [r4, #12]
     a1c:	1c30      	adds	r0, r6, #0
     a1e:	4b28      	ldr	r3, [pc, #160]	; (ac0 <_ZN14ADF5610_Driver8SelfTestEh+0x188>)
     a20:	4798      	blx	r3
     a22:	1c01      	adds	r1, r0, #0
     a24:	1c28      	adds	r0, r5, #0
     a26:	4b2f      	ldr	r3, [pc, #188]	; (ae4 <_ZN14ADF5610_Driver8SelfTestEh+0x1ac>)
     a28:	4798      	blx	r3
     a2a:	2800      	cmp	r0, #0
     a2c:	d095      	beq.n	95a <_ZN14ADF5610_Driver8SelfTestEh+0x22>
     a2e:	239c      	movs	r3, #156	; 0x9c
     a30:	005b      	lsls	r3, r3, #1
     a32:	58e3      	ldr	r3, [r4, r3]
     a34:	3301      	adds	r3, #1
     a36:	d190      	bne.n	95a <_ZN14ADF5610_Driver8SelfTestEh+0x22>
				dir=1;
     a38:	2201      	movs	r2, #1
     a3a:	239c      	movs	r3, #156	; 0x9c
     a3c:	005b      	lsls	r3, r3, #1
     a3e:	50e2      	str	r2, [r4, r3]
     a40:	e78b      	b.n	95a <_ZN14ADF5610_Driver8SelfTestEh+0x22>
			 errorCounter++;
     a42:	3701      	adds	r7, #1
			 if(is_locked){
     a44:	239e      	movs	r3, #158	; 0x9e
     a46:	005b      	lsls	r3, r3, #1
     a48:	5ce3      	ldrb	r3, [r4, r3]
     a4a:	2b00      	cmp	r3, #0
     a4c:	d10b      	bne.n	a66 <_ZN14ADF5610_Driver8SelfTestEh+0x12e>
		   SetNextFrequency();
     a4e:	0020      	movs	r0, r4
     a50:	4b1c      	ldr	r3, [pc, #112]	; (ac4 <_ZN14ADF5610_Driver8SelfTestEh+0x18c>)
     a52:	4798      	blx	r3
		   CompleteConfigurationFlow(0);
     a54:	2100      	movs	r1, #0
     a56:	0020      	movs	r0, r4
     a58:	4b23      	ldr	r3, [pc, #140]	; (ae8 <_ZN14ADF5610_Driver8SelfTestEh+0x1b0>)
     a5a:	4798      	blx	r3
			for (int var = 1; var < 24; ++var) {
     a5c:	2301      	movs	r3, #1
     a5e:	2b17      	cmp	r3, #23
     a60:	dc17      	bgt.n	a92 <_ZN14ADF5610_Driver8SelfTestEh+0x15a>
     a62:	3301      	adds	r3, #1
     a64:	e7fb      	b.n	a5e <_ZN14ADF5610_Driver8SelfTestEh+0x126>
				 is_locked=false;
     a66:	2200      	movs	r2, #0
     a68:	239e      	movs	r3, #158	; 0x9e
     a6a:	005b      	lsls	r3, r3, #1
     a6c:	54e2      	strb	r2, [r4, r3]
				  printf("**************************\n\r");
     a6e:	481f      	ldr	r0, [pc, #124]	; (aec <_ZN14ADF5610_Driver8SelfTestEh+0x1b4>)
     a70:	4e10      	ldr	r6, [pc, #64]	; (ab4 <_ZN14ADF5610_Driver8SelfTestEh+0x17c>)
     a72:	47b0      	blx	r6
				   printf("Not Locked at:  %lf",target_frequency);
     a74:	239a      	movs	r3, #154	; 0x9a
     a76:	005b      	lsls	r3, r3, #1
     a78:	58e0      	ldr	r0, [r4, r3]
     a7a:	4b0c      	ldr	r3, [pc, #48]	; (aac <_ZN14ADF5610_Driver8SelfTestEh+0x174>)
     a7c:	4798      	blx	r3
     a7e:	0002      	movs	r2, r0
     a80:	000b      	movs	r3, r1
     a82:	481b      	ldr	r0, [pc, #108]	; (af0 <_ZN14ADF5610_Driver8SelfTestEh+0x1b8>)
     a84:	47b0      	blx	r6
				   printf(" MHz\n");
     a86:	481b      	ldr	r0, [pc, #108]	; (af4 <_ZN14ADF5610_Driver8SelfTestEh+0x1bc>)
     a88:	4e1b      	ldr	r6, [pc, #108]	; (af8 <_ZN14ADF5610_Driver8SelfTestEh+0x1c0>)
     a8a:	47b0      	blx	r6
				   printf("**************************\n");
     a8c:	481b      	ldr	r0, [pc, #108]	; (afc <_ZN14ADF5610_Driver8SelfTestEh+0x1c4>)
     a8e:	47b0      	blx	r6
     a90:	e7dd      	b.n	a4e <_ZN14ADF5610_Driver8SelfTestEh+0x116>
			usleep(100000);
     a92:	491b      	ldr	r1, [pc, #108]	; (b00 <_ZN14ADF5610_Driver8SelfTestEh+0x1c8>)
     a94:	0020      	movs	r0, r4
     a96:	4b0d      	ldr	r3, [pc, #52]	; (acc <_ZN14ADF5610_Driver8SelfTestEh+0x194>)
     a98:	4798      	blx	r3
			if(errorCounter>100){
     a9a:	2f64      	cmp	r7, #100	; 0x64
     a9c:	dd83      	ble.n	9a6 <_ZN14ADF5610_Driver8SelfTestEh+0x6e>
     a9e:	e000      	b.n	aa2 <_ZN14ADF5610_Driver8SelfTestEh+0x16a>
	return true;
     aa0:	2501      	movs	r5, #1
}
     aa2:	0028      	movs	r0, r5
     aa4:	bc0c      	pop	{r2, r3}
     aa6:	4690      	mov	r8, r2
     aa8:	4699      	mov	r9, r3
     aaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     aac:	000090d1 	.word	0x000090d1
     ab0:	0000e048 	.word	0x0000e048
     ab4:	00009385 	.word	0x00009385
     ab8:	000074e1 	.word	0x000074e1
     abc:	00006f69 	.word	0x00006f69
     ac0:	00006af5 	.word	0x00006af5
     ac4:	000006c1 	.word	0x000006c1
     ac8:	00000911 	.word	0x00000911
     acc:	000006cd 	.word	0x000006cd
     ad0:	00001489 	.word	0x00001489
     ad4:	000068a9 	.word	0x000068a9
     ad8:	00000209 	.word	0x00000209
     adc:	000071a9 	.word	0x000071a9
     ae0:	000068bd 	.word	0x000068bd
     ae4:	00006895 	.word	0x00006895
     ae8:	00000801 	.word	0x00000801
     aec:	0000e060 	.word	0x0000e060
     af0:	0000e080 	.word	0x0000e080
     af4:	0000e094 	.word	0x0000e094
     af8:	00009449 	.word	0x00009449
     afc:	0000e09c 	.word	0x0000e09c
     b00:	000186a0 	.word	0x000186a0

00000b04 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev>:
}
     b04:	b510      	push	{r4, lr}
     b06:	4902      	ldr	r1, [pc, #8]	; (b10 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev+0xc>)
     b08:	2001      	movs	r0, #1
     b0a:	4b02      	ldr	r3, [pc, #8]	; (b14 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev+0x10>)
     b0c:	4798      	blx	r3
     b0e:	bd10      	pop	{r4, pc}
     b10:	0000ffff 	.word	0x0000ffff
     b14:	00000115 	.word	0x00000115

00000b18 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     b18:	e7fe      	b.n	b18 <Dummy_Handler>
	...

00000b1c <Reset_Handler>:
{
     b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     b1e:	4a23      	ldr	r2, [pc, #140]	; (bac <Reset_Handler+0x90>)
     b20:	4b23      	ldr	r3, [pc, #140]	; (bb0 <Reset_Handler+0x94>)
     b22:	429a      	cmp	r2, r3
     b24:	d009      	beq.n	b3a <Reset_Handler+0x1e>
     b26:	4b22      	ldr	r3, [pc, #136]	; (bb0 <Reset_Handler+0x94>)
     b28:	4a20      	ldr	r2, [pc, #128]	; (bac <Reset_Handler+0x90>)
     b2a:	e003      	b.n	b34 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     b2c:	6811      	ldr	r1, [r2, #0]
     b2e:	6019      	str	r1, [r3, #0]
     b30:	3304      	adds	r3, #4
     b32:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     b34:	491f      	ldr	r1, [pc, #124]	; (bb4 <Reset_Handler+0x98>)
     b36:	428b      	cmp	r3, r1
     b38:	d3f8      	bcc.n	b2c <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     b3a:	4b1f      	ldr	r3, [pc, #124]	; (bb8 <Reset_Handler+0x9c>)
     b3c:	e002      	b.n	b44 <Reset_Handler+0x28>
                *pDest++ = 0;
     b3e:	2200      	movs	r2, #0
     b40:	601a      	str	r2, [r3, #0]
     b42:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     b44:	4a1d      	ldr	r2, [pc, #116]	; (bbc <Reset_Handler+0xa0>)
     b46:	4293      	cmp	r3, r2
     b48:	d3f9      	bcc.n	b3e <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     b4a:	4a1d      	ldr	r2, [pc, #116]	; (bc0 <Reset_Handler+0xa4>)
     b4c:	21ff      	movs	r1, #255	; 0xff
     b4e:	4b1d      	ldr	r3, [pc, #116]	; (bc4 <Reset_Handler+0xa8>)
     b50:	438b      	bics	r3, r1
     b52:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     b54:	39fd      	subs	r1, #253	; 0xfd
     b56:	2390      	movs	r3, #144	; 0x90
     b58:	005b      	lsls	r3, r3, #1
     b5a:	4a1b      	ldr	r2, [pc, #108]	; (bc8 <Reset_Handler+0xac>)
     b5c:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     b5e:	4a1b      	ldr	r2, [pc, #108]	; (bcc <Reset_Handler+0xb0>)
     b60:	78d3      	ldrb	r3, [r2, #3]
     b62:	2503      	movs	r5, #3
     b64:	43ab      	bics	r3, r5
     b66:	2402      	movs	r4, #2
     b68:	4323      	orrs	r3, r4
     b6a:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     b6c:	78d3      	ldrb	r3, [r2, #3]
     b6e:	270c      	movs	r7, #12
     b70:	43bb      	bics	r3, r7
     b72:	2608      	movs	r6, #8
     b74:	4333      	orrs	r3, r6
     b76:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     b78:	4b15      	ldr	r3, [pc, #84]	; (bd0 <Reset_Handler+0xb4>)
     b7a:	7b98      	ldrb	r0, [r3, #14]
     b7c:	2230      	movs	r2, #48	; 0x30
     b7e:	4390      	bics	r0, r2
     b80:	2220      	movs	r2, #32
     b82:	4310      	orrs	r0, r2
     b84:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     b86:	7b99      	ldrb	r1, [r3, #14]
     b88:	43b9      	bics	r1, r7
     b8a:	4331      	orrs	r1, r6
     b8c:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     b8e:	7b9a      	ldrb	r2, [r3, #14]
     b90:	43aa      	bics	r2, r5
     b92:	4322      	orrs	r2, r4
     b94:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     b96:	4a0f      	ldr	r2, [pc, #60]	; (bd4 <Reset_Handler+0xb8>)
     b98:	6851      	ldr	r1, [r2, #4]
     b9a:	2380      	movs	r3, #128	; 0x80
     b9c:	430b      	orrs	r3, r1
     b9e:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     ba0:	4b0d      	ldr	r3, [pc, #52]	; (bd8 <Reset_Handler+0xbc>)
     ba2:	4798      	blx	r3
        main();
     ba4:	4b0d      	ldr	r3, [pc, #52]	; (bdc <Reset_Handler+0xc0>)
     ba6:	4798      	blx	r3
     ba8:	e7fe      	b.n	ba8 <Reset_Handler+0x8c>
     baa:	46c0      	nop			; (mov r8, r8)
     bac:	0000e80c 	.word	0x0000e80c
     bb0:	20000000 	.word	0x20000000
     bb4:	20000a20 	.word	0x20000a20
     bb8:	20000a20 	.word	0x20000a20
     bbc:	200011f0 	.word	0x200011f0
     bc0:	e000ed00 	.word	0xe000ed00
     bc4:	00000000 	.word	0x00000000
     bc8:	41007000 	.word	0x41007000
     bcc:	41005000 	.word	0x41005000
     bd0:	41004800 	.word	0x41004800
     bd4:	41004000 	.word	0x41004000
     bd8:	00009225 	.word	0x00009225
     bdc:	00000c1d 	.word	0x00000c1d

00000be0 <_Z41__static_initialization_and_destruction_0ii>:
	while (1) {
		adf.SelfTest(1);
		delay_ms(1000);
		adf.Init();
	}
}
     be0:	b510      	push	{r4, lr}
     be2:	2801      	cmp	r0, #1
     be4:	d000      	beq.n	be8 <_Z41__static_initialization_and_destruction_0ii+0x8>
     be6:	bd10      	pop	{r4, pc}
     be8:	4b06      	ldr	r3, [pc, #24]	; (c04 <_Z41__static_initialization_and_destruction_0ii+0x24>)
     bea:	4299      	cmp	r1, r3
     bec:	d1fb      	bne.n	be6 <_Z41__static_initialization_and_destruction_0ii+0x6>
ADF5610_Driver adf;
     bee:	4c06      	ldr	r4, [pc, #24]	; (c08 <_Z41__static_initialization_and_destruction_0ii+0x28>)
     bf0:	0020      	movs	r0, r4
     bf2:	4b06      	ldr	r3, [pc, #24]	; (c0c <_Z41__static_initialization_and_destruction_0ii+0x2c>)
     bf4:	4798      	blx	r3
     bf6:	4a06      	ldr	r2, [pc, #24]	; (c10 <_Z41__static_initialization_and_destruction_0ii+0x30>)
     bf8:	4906      	ldr	r1, [pc, #24]	; (c14 <_Z41__static_initialization_and_destruction_0ii+0x34>)
     bfa:	0020      	movs	r0, r4
     bfc:	4b06      	ldr	r3, [pc, #24]	; (c18 <_Z41__static_initialization_and_destruction_0ii+0x38>)
     bfe:	4798      	blx	r3
}
     c00:	e7f1      	b.n	be6 <_Z41__static_initialization_and_destruction_0ii+0x6>
     c02:	46c0      	nop			; (mov r8, r8)
     c04:	0000ffff 	.word	0x0000ffff
     c08:	20000a50 	.word	0x20000a50
     c0c:	00000151 	.word	0x00000151
     c10:	20000000 	.word	0x20000000
     c14:	000001a1 	.word	0x000001a1
     c18:	00004ce1 	.word	0x00004ce1

00000c1c <main>:
{
     c1c:	b510      	push	{r4, lr}
	atmel_start_init();
     c1e:	4b09      	ldr	r3, [pc, #36]	; (c44 <main+0x28>)
     c20:	4798      	blx	r3
	adf.Init();
     c22:	4809      	ldr	r0, [pc, #36]	; (c48 <main+0x2c>)
     c24:	4b09      	ldr	r3, [pc, #36]	; (c4c <main+0x30>)
     c26:	4798      	blx	r3
		adf.SelfTest(1);
     c28:	4c07      	ldr	r4, [pc, #28]	; (c48 <main+0x2c>)
     c2a:	2101      	movs	r1, #1
     c2c:	0020      	movs	r0, r4
     c2e:	4b08      	ldr	r3, [pc, #32]	; (c50 <main+0x34>)
     c30:	4798      	blx	r3
		delay_ms(1000);
     c32:	20fa      	movs	r0, #250	; 0xfa
     c34:	0080      	lsls	r0, r0, #2
     c36:	4b07      	ldr	r3, [pc, #28]	; (c54 <main+0x38>)
     c38:	4798      	blx	r3
		adf.Init();
     c3a:	0020      	movs	r0, r4
     c3c:	4b03      	ldr	r3, [pc, #12]	; (c4c <main+0x30>)
     c3e:	4798      	blx	r3
     c40:	e7f2      	b.n	c28 <main+0xc>
     c42:	46c0      	nop			; (mov r8, r8)
     c44:	00000d01 	.word	0x00000d01
     c48:	20000a50 	.word	0x20000a50
     c4c:	0000089d 	.word	0x0000089d
     c50:	00000939 	.word	0x00000939
     c54:	00001489 	.word	0x00001489

00000c58 <_GLOBAL__sub_I_adf>:
}
     c58:	b510      	push	{r4, lr}
     c5a:	4902      	ldr	r1, [pc, #8]	; (c64 <_GLOBAL__sub_I_adf+0xc>)
     c5c:	2001      	movs	r0, #1
     c5e:	4b02      	ldr	r3, [pc, #8]	; (c68 <_GLOBAL__sub_I_adf+0x10>)
     c60:	4798      	blx	r3
     c62:	bd10      	pop	{r4, pc}
     c64:	0000ffff 	.word	0x0000ffff
     c68:	00000be1 	.word	0x00000be1

00000c6c <_ZN17SPI_Syn_Class_ADFC1Ev>:


// default constructor
SPI_Syn_Class_ADF::SPI_Syn_Class_ADF()
{
		ptrSPISync_adf=this;
     c6c:	4b01      	ldr	r3, [pc, #4]	; (c74 <_ZN17SPI_Syn_Class_ADFC1Ev+0x8>)
     c6e:	6018      	str	r0, [r3, #0]
//	SPI=SPI_1;
} //SPI_Syn_Class_ADF
     c70:	4770      	bx	lr
     c72:	46c0      	nop			; (mov r8, r8)
     c74:	20000bd8 	.word	0x20000bd8

00000c78 <_ZN17SPI_Syn_Class_ADFD1Ev>:


// default destructor
SPI_Syn_Class_ADF::~SPI_Syn_Class_ADF()
{
} //~SPI_Syn_Class_ADF
     c78:	4770      	bx	lr
	...

00000c7c <_ZN17SPI_Syn_Class_ADF6EnableEv>:
	
}



uint8_t SPI_Syn_Class_ADF::Enable(){
     c7c:	b510      	push	{r4, lr}
	spi_m_sync_enable(&SPI_ADF);
     c7e:	4802      	ldr	r0, [pc, #8]	; (c88 <_ZN17SPI_Syn_Class_ADF6EnableEv+0xc>)
     c80:	4b02      	ldr	r3, [pc, #8]	; (c8c <_ZN17SPI_Syn_Class_ADF6EnableEv+0x10>)
     c82:	4798      	blx	r3
	return 0;
}
     c84:	2000      	movs	r0, #0
     c86:	bd10      	pop	{r4, pc}
     c88:	2000117c 	.word	0x2000117c
     c8c:	000015e9 	.word	0x000015e9

00000c90 <_ZN17SPI_Syn_Class_ADF4InitEv>:
void SPI_Syn_Class_ADF::Init(){
     c90:	b510      	push	{r4, lr}
     c92:	0004      	movs	r4, r0
	spi_m_sync_get_io_descriptor(&SPI_ADF, &io);
     c94:	0001      	movs	r1, r0
     c96:	310c      	adds	r1, #12
     c98:	4804      	ldr	r0, [pc, #16]	; (cac <_ZN17SPI_Syn_Class_ADF4InitEv+0x1c>)
     c9a:	4b05      	ldr	r3, [pc, #20]	; (cb0 <_ZN17SPI_Syn_Class_ADF4InitEv+0x20>)
     c9c:	4798      	blx	r3
	Enable();
     c9e:	0020      	movs	r0, r4
     ca0:	4b04      	ldr	r3, [pc, #16]	; (cb4 <_ZN17SPI_Syn_Class_ADF4InitEv+0x24>)
     ca2:	4798      	blx	r3
	ready=true;
     ca4:	2301      	movs	r3, #1
     ca6:	7023      	strb	r3, [r4, #0]
}
     ca8:	bd10      	pop	{r4, pc}
     caa:	46c0      	nop			; (mov r8, r8)
     cac:	2000117c 	.word	0x2000117c
     cb0:	000016d1 	.word	0x000016d1
     cb4:	00000c7d 	.word	0x00000c7d

00000cb8 <_ZN17SPI_Syn_Class_ADF5WriteEPKhh>:

uint8_t  SPI_Syn_Class_ADF::Write(const uint8_t * p, uint8_t n){
     cb8:	b510      	push	{r4, lr}
     cba:	0014      	movs	r4, r2
	ready=false;
     cbc:	2300      	movs	r3, #0
     cbe:	7003      	strb	r3, [r0, #0]

	io_write(io, p, (uint16_t)n);
     cc0:	68c0      	ldr	r0, [r0, #12]
     cc2:	b292      	uxth	r2, r2
     cc4:	4b01      	ldr	r3, [pc, #4]	; (ccc <_ZN17SPI_Syn_Class_ADF5WriteEPKhh+0x14>)
     cc6:	4798      	blx	r3

	return n;
}
     cc8:	0020      	movs	r0, r4
     cca:	bd10      	pop	{r4, pc}
     ccc:	00001521 	.word	0x00001521

00000cd0 <_ZN17SPI_Syn_Class_ADF4ReadEPhh>:
uint8_t  SPI_Syn_Class_ADF::Read(uint8_t * p, uint8_t n){
     cd0:	b510      	push	{r4, lr}
     cd2:	0014      	movs	r4, r2
	ready=false;
     cd4:	2300      	movs	r3, #0
     cd6:	7003      	strb	r3, [r0, #0]
	io_read(io, p, (uint16_t)n);
     cd8:	68c0      	ldr	r0, [r0, #12]
     cda:	b292      	uxth	r2, r2
     cdc:	4b01      	ldr	r3, [pc, #4]	; (ce4 <_ZN17SPI_Syn_Class_ADF4ReadEPhh+0x14>)
     cde:	4798      	blx	r3

	
	return n;
}
     ce0:	0020      	movs	r0, r4
     ce2:	bd10      	pop	{r4, pc}
     ce4:	00001559 	.word	0x00001559

00000ce8 <_ZN17SPI_Syn_Class_ADF5SetCSEb>:
	if (level) {
     ce8:	2900      	cmp	r1, #0
     cea:	d104      	bne.n	cf6 <_ZN17SPI_Syn_Class_ADF5SetCSEb+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     cec:	2280      	movs	r2, #128	; 0x80
     cee:	23c0      	movs	r3, #192	; 0xc0
     cf0:	05db      	lsls	r3, r3, #23
     cf2:	615a      	str	r2, [r3, #20]
	//spi_m_sync_disable(SPI);
	
}
void SPI_Syn_Class_ADF::SetCS(bool st){
	gpio_set_pin_level(CS_ADF,st);
}
     cf4:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     cf6:	2280      	movs	r2, #128	; 0x80
     cf8:	23c0      	movs	r3, #192	; 0xc0
     cfa:	05db      	lsls	r3, r3, #23
     cfc:	619a      	str	r2, [r3, #24]
     cfe:	e7f9      	b.n	cf4 <_ZN17SPI_Syn_Class_ADF5SetCSEb+0xc>

00000d00 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     d00:	b510      	push	{r4, lr}
	system_init();
     d02:	4b02      	ldr	r3, [pc, #8]	; (d0c <atmel_start_init+0xc>)
     d04:	4798      	blx	r3
	usb_init();
     d06:	4b02      	ldr	r3, [pc, #8]	; (d10 <atmel_start_init+0x10>)
     d08:	4798      	blx	r3
}
     d0a:	bd10      	pop	{r4, pc}
     d0c:	000012f5 	.word	0x000012f5
     d10:	000040f5 	.word	0x000040f5

00000d14 <TIMER_ZCD_init>:
 * \brief Timer initialization function
 *
 * Enables Timer peripheral, clocks and initializes Timer driver
 */
static void TIMER_ZCD_init(void)
{
     d14:	b510      	push	{r4, lr}
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
     d16:	4a08      	ldr	r2, [pc, #32]	; (d38 <TIMER_ZCD_init+0x24>)
     d18:	6a11      	ldr	r1, [r2, #32]
     d1a:	2380      	movs	r3, #128	; 0x80
     d1c:	011b      	lsls	r3, r3, #4
     d1e:	430b      	orrs	r3, r1
     d20:	6213      	str	r3, [r2, #32]
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
     d22:	4a06      	ldr	r2, [pc, #24]	; (d3c <TIMER_ZCD_init+0x28>)
     d24:	4b06      	ldr	r3, [pc, #24]	; (d40 <TIMER_ZCD_init+0x2c>)
     d26:	805a      	strh	r2, [r3, #2]
	_pm_enable_bus_clock(PM_BUS_APBC, TC3);
	_gclk_enable_channel(TC3_GCLK_ID, CONF_GCLK_TC3_SRC);

	timer_init(&TIMER_ZCD, TC3, _tc_get_timer());
     d28:	4b06      	ldr	r3, [pc, #24]	; (d44 <TIMER_ZCD_init+0x30>)
     d2a:	4798      	blx	r3
     d2c:	0002      	movs	r2, r0
     d2e:	4906      	ldr	r1, [pc, #24]	; (d48 <TIMER_ZCD_init+0x34>)
     d30:	4806      	ldr	r0, [pc, #24]	; (d4c <TIMER_ZCD_init+0x38>)
     d32:	4b07      	ldr	r3, [pc, #28]	; (d50 <TIMER_ZCD_init+0x3c>)
     d34:	4798      	blx	r3
}
     d36:	bd10      	pop	{r4, pc}
     d38:	40000400 	.word	0x40000400
     d3c:	0000401b 	.word	0x0000401b
     d40:	40000c00 	.word	0x40000c00
     d44:	00002d45 	.word	0x00002d45
     d48:	42002c00 	.word	0x42002c00
     d4c:	200010ec 	.word	0x200010ec
     d50:	000017bd 	.word	0x000017bd

00000d54 <TIMER_USB_init>:
 * \brief Timer initialization function
 *
 * Enables Timer peripheral, clocks and initializes Timer driver
 */
static void TIMER_USB_init(void)
{
     d54:	b510      	push	{r4, lr}
     d56:	4a08      	ldr	r2, [pc, #32]	; (d78 <TIMER_USB_init+0x24>)
     d58:	6a11      	ldr	r1, [r2, #32]
     d5a:	2380      	movs	r3, #128	; 0x80
     d5c:	015b      	lsls	r3, r3, #5
     d5e:	430b      	orrs	r3, r1
     d60:	6213      	str	r3, [r2, #32]
     d62:	4a06      	ldr	r2, [pc, #24]	; (d7c <TIMER_USB_init+0x28>)
     d64:	4b06      	ldr	r3, [pc, #24]	; (d80 <TIMER_USB_init+0x2c>)
     d66:	805a      	strh	r2, [r3, #2]
	_pm_enable_bus_clock(PM_BUS_APBC, TC4);
	_gclk_enable_channel(TC4_GCLK_ID, CONF_GCLK_TC4_SRC);

	timer_init(&TIMER_USB, TC4, _tc_get_timer());
     d68:	4b06      	ldr	r3, [pc, #24]	; (d84 <TIMER_USB_init+0x30>)
     d6a:	4798      	blx	r3
     d6c:	0002      	movs	r2, r0
     d6e:	4906      	ldr	r1, [pc, #24]	; (d88 <TIMER_USB_init+0x34>)
     d70:	4806      	ldr	r0, [pc, #24]	; (d8c <TIMER_USB_init+0x38>)
     d72:	4b07      	ldr	r3, [pc, #28]	; (d90 <TIMER_USB_init+0x3c>)
     d74:	4798      	blx	r3
}
     d76:	bd10      	pop	{r4, pc}
     d78:	40000400 	.word	0x40000400
     d7c:	0000431c 	.word	0x0000431c
     d80:	40000c00 	.word	0x40000c00
     d84:	00002d45 	.word	0x00002d45
     d88:	42003000 	.word	0x42003000
     d8c:	200011ac 	.word	0x200011ac
     d90:	000017bd 	.word	0x000017bd

00000d94 <EXTERNAL_IRQ_0_init>:
{
     d94:	b510      	push	{r4, lr}
     d96:	4a0f      	ldr	r2, [pc, #60]	; (dd4 <EXTERNAL_IRQ_0_init+0x40>)
     d98:	4b0f      	ldr	r3, [pc, #60]	; (dd8 <EXTERNAL_IRQ_0_init+0x44>)
     d9a:	805a      	strh	r2, [r3, #2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = ~data;
}

static inline void hri_port_clear_DIR_reg(const void *const hw, uint8_t submodule_index, hri_port_dir_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     d9c:	3a05      	subs	r2, #5
     d9e:	23c0      	movs	r3, #192	; 0xc0
     da0:	05db      	lsls	r3, r3, #23
     da2:	605a      	str	r2, [r3, #4]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     da4:	4b0d      	ldr	r3, [pc, #52]	; (ddc <EXTERNAL_IRQ_0_init+0x48>)
     da6:	4a0e      	ldr	r2, [pc, #56]	; (de0 <EXTERNAL_IRQ_0_init+0x4c>)
     da8:	629a      	str	r2, [r3, #40]	; 0x28
     daa:	4a0e      	ldr	r2, [pc, #56]	; (de4 <EXTERNAL_IRQ_0_init+0x50>)
     dac:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     dae:	214e      	movs	r1, #78	; 0x4e
     db0:	5c5a      	ldrb	r2, [r3, r1]
     db2:	2004      	movs	r0, #4
     db4:	4382      	bics	r2, r0
     db6:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     db8:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     dba:	3803      	subs	r0, #3
     dbc:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     dbe:	4302      	orrs	r2, r0
     dc0:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     dc2:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     dc4:	3917      	subs	r1, #23
     dc6:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     dc8:	200f      	movs	r0, #15
     dca:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     dcc:	545a      	strb	r2, [r3, r1]
	ext_irq_init();
     dce:	4b06      	ldr	r3, [pc, #24]	; (de8 <EXTERNAL_IRQ_0_init+0x54>)
     dd0:	4798      	blx	r3
}
     dd2:	bd10      	pop	{r4, pc}
     dd4:	00004005 	.word	0x00004005
     dd8:	40000c00 	.word	0x40000c00
     ddc:	41004400 	.word	0x41004400
     de0:	40024000 	.word	0x40024000
     de4:	c0020000 	.word	0xc0020000
     de8:	000014ed 	.word	0x000014ed

00000dec <SPI_ADF_PORT_init>:
{
     dec:	b5f0      	push	{r4, r5, r6, r7, lr}
     dee:	46c6      	mov	lr, r8
     df0:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     df2:	22c0      	movs	r2, #192	; 0xc0
     df4:	05d2      	lsls	r2, r2, #23
     df6:	2310      	movs	r3, #16
     df8:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     dfa:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     dfc:	4b25      	ldr	r3, [pc, #148]	; (e94 <SPI_ADF_PORT_init+0xa8>)
     dfe:	4926      	ldr	r1, [pc, #152]	; (e98 <SPI_ADF_PORT_init+0xac>)
     e00:	6299      	str	r1, [r3, #40]	; 0x28
     e02:	21c0      	movs	r1, #192	; 0xc0
     e04:	0609      	lsls	r1, r1, #24
     e06:	468c      	mov	ip, r1
     e08:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     e0a:	2044      	movs	r0, #68	; 0x44
     e0c:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     e0e:	2701      	movs	r7, #1
     e10:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     e12:	2601      	movs	r6, #1
     e14:	4331      	orrs	r1, r6
     e16:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     e18:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     e1a:	2132      	movs	r1, #50	; 0x32
     e1c:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     e1e:	250f      	movs	r5, #15
     e20:	43a8      	bics	r0, r5
	tmp |= PORT_PMUX_PMUXE(data);
     e22:	2403      	movs	r4, #3
     e24:	46a0      	mov	r8, r4
     e26:	4644      	mov	r4, r8
     e28:	4320      	orrs	r0, r4
     e2a:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     e2c:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     e2e:	2020      	movs	r0, #32
     e30:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     e32:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     e34:	4819      	ldr	r0, [pc, #100]	; (e9c <SPI_ADF_PORT_init+0xb0>)
     e36:	6298      	str	r0, [r3, #40]	; 0x28
     e38:	4660      	mov	r0, ip
     e3a:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     e3c:	2045      	movs	r0, #69	; 0x45
     e3e:	4684      	mov	ip, r0
     e40:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     e42:	43b8      	bics	r0, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     e44:	4330      	orrs	r0, r6
     e46:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     e48:	4664      	mov	r4, ip
     e4a:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     e4c:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     e4e:	3c36      	subs	r4, #54	; 0x36
     e50:	4020      	ands	r0, r4
	tmp |= PORT_PMUX_PMUXO(data);
     e52:	2430      	movs	r4, #48	; 0x30
     e54:	46a4      	mov	ip, r4
     e56:	4664      	mov	r4, ip
     e58:	4320      	orrs	r0, r4
     e5a:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     e5c:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     e5e:	310e      	adds	r1, #14
     e60:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     e62:	4a0f      	ldr	r2, [pc, #60]	; (ea0 <SPI_ADF_PORT_init+0xb4>)
     e64:	629a      	str	r2, [r3, #40]	; 0x28
     e66:	4a0f      	ldr	r2, [pc, #60]	; (ea4 <SPI_ADF_PORT_init+0xb8>)
     e68:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     e6a:	2246      	movs	r2, #70	; 0x46
     e6c:	5c99      	ldrb	r1, [r3, r2]
     e6e:	2004      	movs	r0, #4
     e70:	4381      	bics	r1, r0
     e72:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     e74:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     e76:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     e78:	4331      	orrs	r1, r6
     e7a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     e7c:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     e7e:	2133      	movs	r1, #51	; 0x33
     e80:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     e82:	43aa      	bics	r2, r5
	tmp |= PORT_PMUX_PMUXE(data);
     e84:	4640      	mov	r0, r8
     e86:	4302      	orrs	r2, r0
     e88:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     e8a:	545a      	strb	r2, [r3, r1]
}
     e8c:	bc04      	pop	{r2}
     e8e:	4690      	mov	r8, r2
     e90:	bdf0      	pop	{r4, r5, r6, r7, pc}
     e92:	46c0      	nop			; (mov r8, r8)
     e94:	41004400 	.word	0x41004400
     e98:	40000010 	.word	0x40000010
     e9c:	40000020 	.word	0x40000020
     ea0:	40020040 	.word	0x40020040
     ea4:	c0020000 	.word	0xc0020000

00000ea8 <SPI_ADF_CLOCK_init>:
     ea8:	4a04      	ldr	r2, [pc, #16]	; (ebc <SPI_ADF_CLOCK_init+0x14>)
     eaa:	6a13      	ldr	r3, [r2, #32]
     eac:	2104      	movs	r1, #4
     eae:	430b      	orrs	r3, r1
     eb0:	6213      	str	r3, [r2, #32]
     eb2:	4a03      	ldr	r2, [pc, #12]	; (ec0 <SPI_ADF_CLOCK_init+0x18>)
     eb4:	4b03      	ldr	r3, [pc, #12]	; (ec4 <SPI_ADF_CLOCK_init+0x1c>)
     eb6:	805a      	strh	r2, [r3, #2]
}
     eb8:	4770      	bx	lr
     eba:	46c0      	nop			; (mov r8, r8)
     ebc:	40000400 	.word	0x40000400
     ec0:	00004014 	.word	0x00004014
     ec4:	40000c00 	.word	0x40000c00

00000ec8 <SPI_ADF_init>:
{
     ec8:	b510      	push	{r4, lr}
	SPI_ADF_CLOCK_init();
     eca:	4b04      	ldr	r3, [pc, #16]	; (edc <SPI_ADF_init+0x14>)
     ecc:	4798      	blx	r3
	spi_m_sync_init(&SPI_ADF, SERCOM0);
     ece:	4904      	ldr	r1, [pc, #16]	; (ee0 <SPI_ADF_init+0x18>)
     ed0:	4804      	ldr	r0, [pc, #16]	; (ee4 <SPI_ADF_init+0x1c>)
     ed2:	4b05      	ldr	r3, [pc, #20]	; (ee8 <SPI_ADF_init+0x20>)
     ed4:	4798      	blx	r3
	SPI_ADF_PORT_init();
     ed6:	4b05      	ldr	r3, [pc, #20]	; (eec <SPI_ADF_init+0x24>)
     ed8:	4798      	blx	r3
}
     eda:	bd10      	pop	{r4, pc}
     edc:	00000ea9 	.word	0x00000ea9
     ee0:	42000800 	.word	0x42000800
     ee4:	2000117c 	.word	0x2000117c
     ee8:	00001591 	.word	0x00001591
     eec:	00000ded 	.word	0x00000ded

00000ef0 <SPI_LMX_PORT_init>:
{
     ef0:	b5f0      	push	{r4, r5, r6, r7, lr}
     ef2:	46c6      	mov	lr, r8
     ef4:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     ef6:	22c0      	movs	r2, #192	; 0xc0
     ef8:	05d2      	lsls	r2, r2, #23
     efa:	2380      	movs	r3, #128	; 0x80
     efc:	025b      	lsls	r3, r3, #9
     efe:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     f00:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     f02:	4b26      	ldr	r3, [pc, #152]	; (f9c <SPI_LMX_PORT_init+0xac>)
     f04:	2180      	movs	r1, #128	; 0x80
     f06:	05c9      	lsls	r1, r1, #23
     f08:	468c      	mov	ip, r1
     f0a:	6299      	str	r1, [r3, #40]	; 0x28
     f0c:	4924      	ldr	r1, [pc, #144]	; (fa0 <SPI_LMX_PORT_init+0xb0>)
     f0e:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     f10:	2050      	movs	r0, #80	; 0x50
     f12:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     f14:	2701      	movs	r7, #1
     f16:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     f18:	2601      	movs	r6, #1
     f1a:	4331      	orrs	r1, r6
     f1c:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     f1e:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     f20:	2138      	movs	r1, #56	; 0x38
     f22:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     f24:	250f      	movs	r5, #15
     f26:	43a8      	bics	r0, r5
	tmp |= PORT_PMUX_PMUXE(data);
     f28:	2402      	movs	r4, #2
     f2a:	46a0      	mov	r8, r4
     f2c:	4644      	mov	r4, r8
     f2e:	4320      	orrs	r0, r4
     f30:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     f32:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     f34:	2080      	movs	r0, #128	; 0x80
     f36:	0280      	lsls	r0, r0, #10
     f38:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     f3a:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     f3c:	4660      	mov	r0, ip
     f3e:	6298      	str	r0, [r3, #40]	; 0x28
     f40:	4818      	ldr	r0, [pc, #96]	; (fa4 <SPI_LMX_PORT_init+0xb4>)
     f42:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     f44:	2051      	movs	r0, #81	; 0x51
     f46:	4684      	mov	ip, r0
     f48:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     f4a:	43b8      	bics	r0, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     f4c:	4330      	orrs	r0, r6
     f4e:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     f50:	4664      	mov	r4, ip
     f52:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     f54:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     f56:	3c42      	subs	r4, #66	; 0x42
     f58:	4020      	ands	r0, r4
	tmp |= PORT_PMUX_PMUXO(data);
     f5a:	2420      	movs	r4, #32
     f5c:	46a4      	mov	ip, r4
     f5e:	4664      	mov	r4, ip
     f60:	4320      	orrs	r0, r4
     f62:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     f64:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     f66:	2180      	movs	r1, #128	; 0x80
     f68:	02c9      	lsls	r1, r1, #11
     f6a:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     f6c:	4a0e      	ldr	r2, [pc, #56]	; (fa8 <SPI_LMX_PORT_init+0xb8>)
     f6e:	629a      	str	r2, [r3, #40]	; 0x28
     f70:	4a0e      	ldr	r2, [pc, #56]	; (fac <SPI_LMX_PORT_init+0xbc>)
     f72:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     f74:	2252      	movs	r2, #82	; 0x52
     f76:	5c99      	ldrb	r1, [r3, r2]
     f78:	2004      	movs	r0, #4
     f7a:	4381      	bics	r1, r0
     f7c:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     f7e:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     f80:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     f82:	4331      	orrs	r1, r6
     f84:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     f86:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     f88:	2139      	movs	r1, #57	; 0x39
     f8a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     f8c:	43aa      	bics	r2, r5
	tmp |= PORT_PMUX_PMUXE(data);
     f8e:	4640      	mov	r0, r8
     f90:	4302      	orrs	r2, r0
     f92:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     f94:	545a      	strb	r2, [r3, r1]
}
     f96:	bc04      	pop	{r2}
     f98:	4690      	mov	r8, r2
     f9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     f9c:	41004400 	.word	0x41004400
     fa0:	c0000001 	.word	0xc0000001
     fa4:	c0000002 	.word	0xc0000002
     fa8:	40020000 	.word	0x40020000
     fac:	c0020004 	.word	0xc0020004

00000fb0 <SPI_LMX_CLOCK_init>:
     fb0:	4a04      	ldr	r2, [pc, #16]	; (fc4 <SPI_LMX_CLOCK_init+0x14>)
     fb2:	6a13      	ldr	r3, [r2, #32]
     fb4:	2108      	movs	r1, #8
     fb6:	430b      	orrs	r3, r1
     fb8:	6213      	str	r3, [r2, #32]
     fba:	4a03      	ldr	r2, [pc, #12]	; (fc8 <SPI_LMX_CLOCK_init+0x18>)
     fbc:	4b03      	ldr	r3, [pc, #12]	; (fcc <SPI_LMX_CLOCK_init+0x1c>)
     fbe:	805a      	strh	r2, [r3, #2]
}
     fc0:	4770      	bx	lr
     fc2:	46c0      	nop			; (mov r8, r8)
     fc4:	40000400 	.word	0x40000400
     fc8:	00004015 	.word	0x00004015
     fcc:	40000c00 	.word	0x40000c00

00000fd0 <SPI_LMX_init>:
{
     fd0:	b510      	push	{r4, lr}
	SPI_LMX_CLOCK_init();
     fd2:	4b04      	ldr	r3, [pc, #16]	; (fe4 <SPI_LMX_init+0x14>)
     fd4:	4798      	blx	r3
	spi_m_sync_init(&SPI_LMX, SERCOM1);
     fd6:	4904      	ldr	r1, [pc, #16]	; (fe8 <SPI_LMX_init+0x18>)
     fd8:	4804      	ldr	r0, [pc, #16]	; (fec <SPI_LMX_init+0x1c>)
     fda:	4b05      	ldr	r3, [pc, #20]	; (ff0 <SPI_LMX_init+0x20>)
     fdc:	4798      	blx	r3
	SPI_LMX_PORT_init();
     fde:	4b05      	ldr	r3, [pc, #20]	; (ff4 <SPI_LMX_init+0x24>)
     fe0:	4798      	blx	r3
}
     fe2:	bd10      	pop	{r4, pc}
     fe4:	00000fb1 	.word	0x00000fb1
     fe8:	42000c00 	.word	0x42000c00
     fec:	20001108 	.word	0x20001108
     ff0:	00001591 	.word	0x00001591
     ff4:	00000ef1 	.word	0x00000ef1

00000ff8 <SPI_ZCD_PORT_init>:
{
     ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     ffa:	21c0      	movs	r1, #192	; 0xc0
     ffc:	05c9      	lsls	r1, r1, #23
     ffe:	2380      	movs	r3, #128	; 0x80
    1000:	015b      	lsls	r3, r3, #5
    1002:	614b      	str	r3, [r1, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1004:	608b      	str	r3, [r1, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1006:	4b22      	ldr	r3, [pc, #136]	; (1090 <SPI_ZCD_PORT_init+0x98>)
    1008:	4a22      	ldr	r2, [pc, #136]	; (1094 <SPI_ZCD_PORT_init+0x9c>)
    100a:	629a      	str	r2, [r3, #40]	; 0x28
    100c:	20c0      	movs	r0, #192	; 0xc0
    100e:	0600      	lsls	r0, r0, #24
    1010:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1012:	264c      	movs	r6, #76	; 0x4c
    1014:	5d9a      	ldrb	r2, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1016:	2501      	movs	r5, #1
    1018:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    101a:	2401      	movs	r4, #1
    101c:	4322      	orrs	r2, r4
    101e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1020:	559a      	strb	r2, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1022:	3e16      	subs	r6, #22
    1024:	5d9a      	ldrb	r2, [r3, r6]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1026:	270f      	movs	r7, #15
    1028:	43ba      	bics	r2, r7
	tmp |= PORT_PMUX_PMUXE(data);
    102a:	2702      	movs	r7, #2
    102c:	433a      	orrs	r2, r7
    102e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1030:	559a      	strb	r2, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1032:	2280      	movs	r2, #128	; 0x80
    1034:	0092      	lsls	r2, r2, #2
    1036:	614a      	str	r2, [r1, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1038:	608a      	str	r2, [r1, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    103a:	4a17      	ldr	r2, [pc, #92]	; (1098 <SPI_ZCD_PORT_init+0xa0>)
    103c:	629a      	str	r2, [r3, #40]	; 0x28
    103e:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1040:	2049      	movs	r0, #73	; 0x49
    1042:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1044:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1046:	4322      	orrs	r2, r4
    1048:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    104a:	541a      	strb	r2, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    104c:	2234      	movs	r2, #52	; 0x34
    104e:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1050:	3e27      	subs	r6, #39	; 0x27
    1052:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    1054:	2730      	movs	r7, #48	; 0x30
    1056:	4338      	orrs	r0, r7
    1058:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    105a:	5498      	strb	r0, [r3, r2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    105c:	2280      	movs	r2, #128	; 0x80
    105e:	0212      	lsls	r2, r2, #8
    1060:	604a      	str	r2, [r1, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1062:	4a0e      	ldr	r2, [pc, #56]	; (109c <SPI_ZCD_PORT_init+0xa4>)
    1064:	629a      	str	r2, [r3, #40]	; 0x28
    1066:	4a0e      	ldr	r2, [pc, #56]	; (10a0 <SPI_ZCD_PORT_init+0xa8>)
    1068:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    106a:	224f      	movs	r2, #79	; 0x4f
    106c:	5c99      	ldrb	r1, [r3, r2]
    106e:	2004      	movs	r0, #4
    1070:	4381      	bics	r1, r0
    1072:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1074:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1076:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1078:	4321      	orrs	r1, r4
    107a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    107c:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    107e:	2137      	movs	r1, #55	; 0x37
    1080:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1082:	4032      	ands	r2, r6
	tmp |= PORT_PMUX_PMUXO(data);
    1084:	2020      	movs	r0, #32
    1086:	4302      	orrs	r2, r0
    1088:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    108a:	545a      	strb	r2, [r3, r1]
}
    108c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    108e:	46c0      	nop			; (mov r8, r8)
    1090:	41004400 	.word	0x41004400
    1094:	40001000 	.word	0x40001000
    1098:	40000200 	.word	0x40000200
    109c:	40028000 	.word	0x40028000
    10a0:	c0020000 	.word	0xc0020000

000010a4 <SPI_ZCD_CLOCK_init>:
    10a4:	4a04      	ldr	r2, [pc, #16]	; (10b8 <SPI_ZCD_CLOCK_init+0x14>)
    10a6:	6a13      	ldr	r3, [r2, #32]
    10a8:	2110      	movs	r1, #16
    10aa:	430b      	orrs	r3, r1
    10ac:	6213      	str	r3, [r2, #32]
    10ae:	4a03      	ldr	r2, [pc, #12]	; (10bc <SPI_ZCD_CLOCK_init+0x18>)
    10b0:	4b03      	ldr	r3, [pc, #12]	; (10c0 <SPI_ZCD_CLOCK_init+0x1c>)
    10b2:	805a      	strh	r2, [r3, #2]
}
    10b4:	4770      	bx	lr
    10b6:	46c0      	nop			; (mov r8, r8)
    10b8:	40000400 	.word	0x40000400
    10bc:	00004016 	.word	0x00004016
    10c0:	40000c00 	.word	0x40000c00

000010c4 <SPI_ZCD_init>:
{
    10c4:	b510      	push	{r4, lr}
	SPI_ZCD_CLOCK_init();
    10c6:	4b04      	ldr	r3, [pc, #16]	; (10d8 <SPI_ZCD_init+0x14>)
    10c8:	4798      	blx	r3
	spi_m_sync_init(&SPI_ZCD, SERCOM2);
    10ca:	4904      	ldr	r1, [pc, #16]	; (10dc <SPI_ZCD_init+0x18>)
    10cc:	4804      	ldr	r0, [pc, #16]	; (10e0 <SPI_ZCD_init+0x1c>)
    10ce:	4b05      	ldr	r3, [pc, #20]	; (10e4 <SPI_ZCD_init+0x20>)
    10d0:	4798      	blx	r3
	SPI_ZCD_PORT_init();
    10d2:	4b05      	ldr	r3, [pc, #20]	; (10e8 <SPI_ZCD_init+0x24>)
    10d4:	4798      	blx	r3
}
    10d6:	bd10      	pop	{r4, pc}
    10d8:	000010a5 	.word	0x000010a5
    10dc:	42001000 	.word	0x42001000
    10e0:	20001194 	.word	0x20001194
    10e4:	00001591 	.word	0x00001591
    10e8:	00000ff9 	.word	0x00000ff9

000010ec <USART_0_CLOCK_init>:
    10ec:	4a04      	ldr	r2, [pc, #16]	; (1100 <USART_0_CLOCK_init+0x14>)
    10ee:	6a13      	ldr	r3, [r2, #32]
    10f0:	2120      	movs	r1, #32
    10f2:	430b      	orrs	r3, r1
    10f4:	6213      	str	r3, [r2, #32]
    10f6:	4a03      	ldr	r2, [pc, #12]	; (1104 <USART_0_CLOCK_init+0x18>)
    10f8:	4b03      	ldr	r3, [pc, #12]	; (1108 <USART_0_CLOCK_init+0x1c>)
    10fa:	805a      	strh	r2, [r3, #2]
}
    10fc:	4770      	bx	lr
    10fe:	46c0      	nop			; (mov r8, r8)
    1100:	40000400 	.word	0x40000400
    1104:	00004017 	.word	0x00004017
    1108:	40000c00 	.word	0x40000c00

0000110c <USART_0_PORT_init>:
{
    110c:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    110e:	4b0f      	ldr	r3, [pc, #60]	; (114c <USART_0_PORT_init+0x40>)
    1110:	2256      	movs	r2, #86	; 0x56
    1112:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1114:	2501      	movs	r5, #1
    1116:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1118:	2401      	movs	r4, #1
    111a:	4321      	orrs	r1, r4
    111c:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    111e:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1120:	203b      	movs	r0, #59	; 0x3b
    1122:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1124:	3a47      	subs	r2, #71	; 0x47
    1126:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
    1128:	2202      	movs	r2, #2
    112a:	4311      	orrs	r1, r2
    112c:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    112e:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1130:	2157      	movs	r1, #87	; 0x57
    1132:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1134:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1136:	4322      	orrs	r2, r4
    1138:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    113a:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    113c:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    113e:	3948      	subs	r1, #72	; 0x48
    1140:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    1142:	2120      	movs	r1, #32
    1144:	430a      	orrs	r2, r1
    1146:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1148:	541a      	strb	r2, [r3, r0]
}
    114a:	bd30      	pop	{r4, r5, pc}
    114c:	41004400 	.word	0x41004400

00001150 <USART_0_init>:
{
    1150:	b510      	push	{r4, lr}
    1152:	b082      	sub	sp, #8
	USART_0_CLOCK_init();
    1154:	4b06      	ldr	r3, [pc, #24]	; (1170 <USART_0_init+0x20>)
    1156:	4798      	blx	r3
	usart_async_init(&USART_0, SERCOM3, USART_0_buffer, USART_0_BUFFER_SIZE, (void *)NULL);
    1158:	2300      	movs	r3, #0
    115a:	9300      	str	r3, [sp, #0]
    115c:	3310      	adds	r3, #16
    115e:	4a05      	ldr	r2, [pc, #20]	; (1174 <USART_0_init+0x24>)
    1160:	4905      	ldr	r1, [pc, #20]	; (1178 <USART_0_init+0x28>)
    1162:	4806      	ldr	r0, [pc, #24]	; (117c <USART_0_init+0x2c>)
    1164:	4c06      	ldr	r4, [pc, #24]	; (1180 <USART_0_init+0x30>)
    1166:	47a0      	blx	r4
	USART_0_PORT_init();
    1168:	4b06      	ldr	r3, [pc, #24]	; (1184 <USART_0_init+0x34>)
    116a:	4798      	blx	r3
}
    116c:	b002      	add	sp, #8
    116e:	bd10      	pop	{r4, pc}
    1170:	000010ed 	.word	0x000010ed
    1174:	20000bdc 	.word	0x20000bdc
    1178:	42001400 	.word	0x42001400
    117c:	2000112c 	.word	0x2000112c
    1180:	0000196d 	.word	0x0000196d
    1184:	0000110d 	.word	0x0000110d

00001188 <delay_driver_init>:
{
    1188:	b510      	push	{r4, lr}
	delay_init(SysTick);
    118a:	4802      	ldr	r0, [pc, #8]	; (1194 <delay_driver_init+0xc>)
    118c:	4b02      	ldr	r3, [pc, #8]	; (1198 <delay_driver_init+0x10>)
    118e:	4798      	blx	r3
}
    1190:	bd10      	pop	{r4, pc}
    1192:	46c0      	nop			; (mov r8, r8)
    1194:	e000e010 	.word	0xe000e010
    1198:	00001475 	.word	0x00001475

0000119c <DAC_0_PORT_init>:

void DAC_0_PORT_init(void)
{
    119c:	b510      	push	{r4, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    119e:	2204      	movs	r2, #4
    11a0:	23c0      	movs	r3, #192	; 0xc0
    11a2:	05db      	lsls	r3, r3, #23
    11a4:	605a      	str	r2, [r3, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    11a6:	490a      	ldr	r1, [pc, #40]	; (11d0 <DAC_0_PORT_init+0x34>)
    11a8:	4b0a      	ldr	r3, [pc, #40]	; (11d4 <DAC_0_PORT_init+0x38>)
    11aa:	628b      	str	r3, [r1, #40]	; 0x28
    11ac:	23c0      	movs	r3, #192	; 0xc0
    11ae:	061b      	lsls	r3, r3, #24
    11b0:	628b      	str	r3, [r1, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    11b2:	2342      	movs	r3, #66	; 0x42
    11b4:	5cca      	ldrb	r2, [r1, r3]
	tmp &= ~PORT_PINCFG_PMUXEN;
    11b6:	2001      	movs	r0, #1
    11b8:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    11ba:	4302      	orrs	r2, r0
    11bc:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    11be:	54ca      	strb	r2, [r1, r3]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    11c0:	2231      	movs	r2, #49	; 0x31
    11c2:	5c8b      	ldrb	r3, [r1, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    11c4:	240f      	movs	r4, #15
    11c6:	43a3      	bics	r3, r4
	tmp |= PORT_PMUX_PMUXE(data);
    11c8:	4303      	orrs	r3, r0
    11ca:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    11cc:	548b      	strb	r3, [r1, r2]

	// Disable digital pin circuitry
	gpio_set_pin_direction(PA02, GPIO_DIRECTION_OFF);

	gpio_set_pin_function(PA02, PINMUX_PA02B_DAC_VOUT);
}
    11ce:	bd10      	pop	{r4, pc}
    11d0:	41004400 	.word	0x41004400
    11d4:	40000004 	.word	0x40000004

000011d8 <DAC_0_CLOCK_init>:
    11d8:	4a04      	ldr	r2, [pc, #16]	; (11ec <DAC_0_CLOCK_init+0x14>)
    11da:	6a11      	ldr	r1, [r2, #32]
    11dc:	2380      	movs	r3, #128	; 0x80
    11de:	02db      	lsls	r3, r3, #11
    11e0:	430b      	orrs	r3, r1
    11e2:	6213      	str	r3, [r2, #32]
    11e4:	4a02      	ldr	r2, [pc, #8]	; (11f0 <DAC_0_CLOCK_init+0x18>)
    11e6:	4b03      	ldr	r3, [pc, #12]	; (11f4 <DAC_0_CLOCK_init+0x1c>)
    11e8:	805a      	strh	r2, [r3, #2]
void DAC_0_CLOCK_init(void)
{

	_pm_enable_bus_clock(PM_BUS_APBC, DAC);
	_gclk_enable_channel(DAC_GCLK_ID, CONF_GCLK_DAC_SRC);
}
    11ea:	4770      	bx	lr
    11ec:	40000400 	.word	0x40000400
    11f0:	00004021 	.word	0x00004021
    11f4:	40000c00 	.word	0x40000c00

000011f8 <DAC_0_init>:

void DAC_0_init(void)
{
    11f8:	b510      	push	{r4, lr}
	DAC_0_CLOCK_init();
    11fa:	4b04      	ldr	r3, [pc, #16]	; (120c <DAC_0_init+0x14>)
    11fc:	4798      	blx	r3
	dac_sync_init(&DAC_0, DAC);
    11fe:	4904      	ldr	r1, [pc, #16]	; (1210 <DAC_0_init+0x18>)
    1200:	4804      	ldr	r0, [pc, #16]	; (1214 <DAC_0_init+0x1c>)
    1202:	4b05      	ldr	r3, [pc, #20]	; (1218 <DAC_0_init+0x20>)
    1204:	4798      	blx	r3
	DAC_0_PORT_init();
    1206:	4b05      	ldr	r3, [pc, #20]	; (121c <DAC_0_init+0x24>)
    1208:	4798      	blx	r3
}
    120a:	bd10      	pop	{r4, pc}
    120c:	000011d9 	.word	0x000011d9
    1210:	42004800 	.word	0x42004800
    1214:	20001120 	.word	0x20001120
    1218:	00001425 	.word	0x00001425
    121c:	0000119d 	.word	0x0000119d

00001220 <USB_DEVICE_INSTANCE_PORT_init>:

void USB_DEVICE_INSTANCE_PORT_init(void)
{
    1220:	b5f0      	push	{r4, r5, r6, r7, lr}
    1222:	46c6      	mov	lr, r8
    1224:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1226:	24c0      	movs	r4, #192	; 0xc0
    1228:	05e4      	lsls	r4, r4, #23
    122a:	2280      	movs	r2, #128	; 0x80
    122c:	0452      	lsls	r2, r2, #17
    122e:	60a2      	str	r2, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1230:	4b1c      	ldr	r3, [pc, #112]	; (12a4 <USB_DEVICE_INSTANCE_PORT_init+0x84>)
    1232:	2780      	movs	r7, #128	; 0x80
    1234:	05ff      	lsls	r7, r7, #23
    1236:	629f      	str	r7, [r3, #40]	; 0x28
    1238:	491b      	ldr	r1, [pc, #108]	; (12a8 <USB_DEVICE_INSTANCE_PORT_init+0x88>)
    123a:	6299      	str	r1, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    123c:	6162      	str	r2, [r4, #20]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    123e:	2058      	movs	r0, #88	; 0x58
    1240:	5c19      	ldrb	r1, [r3, r0]
    1242:	2204      	movs	r2, #4
    1244:	4690      	mov	r8, r2
    1246:	4391      	bics	r1, r2
    1248:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    124a:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    124c:	2601      	movs	r6, #1
    124e:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1250:	2501      	movs	r5, #1
    1252:	4329      	orrs	r1, r5
    1254:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1256:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1258:	381c      	subs	r0, #28
    125a:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    125c:	320b      	adds	r2, #11
    125e:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
    1260:	2206      	movs	r2, #6
    1262:	4694      	mov	ip, r2
    1264:	4662      	mov	r2, ip
    1266:	4311      	orrs	r1, r2
    1268:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    126a:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    126c:	2180      	movs	r1, #128	; 0x80
    126e:	0489      	lsls	r1, r1, #18
    1270:	60a1      	str	r1, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1272:	629f      	str	r7, [r3, #40]	; 0x28
    1274:	4f0d      	ldr	r7, [pc, #52]	; (12ac <USB_DEVICE_INSTANCE_PORT_init+0x8c>)
    1276:	629f      	str	r7, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1278:	6161      	str	r1, [r4, #20]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    127a:	2159      	movs	r1, #89	; 0x59
    127c:	5c5c      	ldrb	r4, [r3, r1]
    127e:	4642      	mov	r2, r8
    1280:	4394      	bics	r4, r2
    1282:	545c      	strb	r4, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1284:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1286:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1288:	432a      	orrs	r2, r5
    128a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    128c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    128e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1290:	394a      	subs	r1, #74	; 0x4a
    1292:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    1294:	2160      	movs	r1, #96	; 0x60
    1296:	430a      	orrs	r2, r1
    1298:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    129a:	541a      	strb	r2, [r3, r0]
	                      // <GPIO_PIN_FUNCTION_E"> E
	                      // <GPIO_PIN_FUNCTION_F"> F
	                      // <GPIO_PIN_FUNCTION_G"> G
	                      // <GPIO_PIN_FUNCTION_H"> H
	                      PINMUX_PA25G_USB_DP);
}
    129c:	bc04      	pop	{r2}
    129e:	4690      	mov	r8, r2
    12a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    12a2:	46c0      	nop			; (mov r8, r8)
    12a4:	41004400 	.word	0x41004400
    12a8:	c0000100 	.word	0xc0000100
    12ac:	c0000200 	.word	0xc0000200

000012b0 <USB_DEVICE_INSTANCE_CLOCK_init>:
			PM->APBBMASK.reg |= 1 << peripheral;
    12b0:	4b06      	ldr	r3, [pc, #24]	; (12cc <USB_DEVICE_INSTANCE_CLOCK_init+0x1c>)
    12b2:	69da      	ldr	r2, [r3, #28]
    12b4:	2120      	movs	r1, #32
    12b6:	430a      	orrs	r2, r1
    12b8:	61da      	str	r2, [r3, #28]
			PM->AHBMASK.reg |= 1 << peripheral;
    12ba:	695a      	ldr	r2, [r3, #20]
    12bc:	3120      	adds	r1, #32
    12be:	430a      	orrs	r2, r1
    12c0:	615a      	str	r2, [r3, #20]
    12c2:	4a03      	ldr	r2, [pc, #12]	; (12d0 <USB_DEVICE_INSTANCE_CLOCK_init+0x20>)
    12c4:	4b03      	ldr	r3, [pc, #12]	; (12d4 <USB_DEVICE_INSTANCE_CLOCK_init+0x24>)
    12c6:	805a      	strh	r2, [r3, #2]
{

	_pm_enable_bus_clock(PM_BUS_APBB, USB);
	_pm_enable_bus_clock(PM_BUS_AHB, USB);
	_gclk_enable_channel(USB_GCLK_ID, CONF_GCLK_USB_SRC);
}
    12c8:	4770      	bx	lr
    12ca:	46c0      	nop			; (mov r8, r8)
    12cc:	40000400 	.word	0x40000400
    12d0:	00004406 	.word	0x00004406
    12d4:	40000c00 	.word	0x40000c00

000012d8 <USB_DEVICE_INSTANCE_init>:

void USB_DEVICE_INSTANCE_init(void)
{
    12d8:	b510      	push	{r4, lr}
	USB_DEVICE_INSTANCE_CLOCK_init();
    12da:	4b03      	ldr	r3, [pc, #12]	; (12e8 <USB_DEVICE_INSTANCE_init+0x10>)
    12dc:	4798      	blx	r3
	usb_d_init();
    12de:	4b03      	ldr	r3, [pc, #12]	; (12ec <USB_DEVICE_INSTANCE_init+0x14>)
    12e0:	4798      	blx	r3
	USB_DEVICE_INSTANCE_PORT_init();
    12e2:	4b03      	ldr	r3, [pc, #12]	; (12f0 <USB_DEVICE_INSTANCE_init+0x18>)
    12e4:	4798      	blx	r3
}
    12e6:	bd10      	pop	{r4, pc}
    12e8:	000012b1 	.word	0x000012b1
    12ec:	00001c55 	.word	0x00001c55
    12f0:	00001221 	.word	0x00001221

000012f4 <system_init>:

void system_init(void)
{
    12f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    12f6:	46c6      	mov	lr, r8
    12f8:	b500      	push	{lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
    12fa:	4b32      	ldr	r3, [pc, #200]	; (13c4 <system_init+0xd0>)
    12fc:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    12fe:	22c0      	movs	r2, #192	; 0xc0
    1300:	05d2      	lsls	r2, r2, #23
    1302:	2308      	movs	r3, #8
    1304:	6193      	str	r3, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1306:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1308:	4b2f      	ldr	r3, [pc, #188]	; (13c8 <system_init+0xd4>)
    130a:	4930      	ldr	r1, [pc, #192]	; (13cc <system_init+0xd8>)
    130c:	6299      	str	r1, [r3, #40]	; 0x28
    130e:	25c0      	movs	r5, #192	; 0xc0
    1310:	062d      	lsls	r5, r5, #24
    1312:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1314:	2443      	movs	r4, #67	; 0x43
    1316:	5d19      	ldrb	r1, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1318:	2001      	movs	r0, #1
    131a:	4381      	bics	r1, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    131c:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    131e:	2180      	movs	r1, #128	; 0x80
    1320:	6151      	str	r1, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1322:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1324:	492a      	ldr	r1, [pc, #168]	; (13d0 <system_init+0xdc>)
    1326:	6299      	str	r1, [r3, #40]	; 0x28
    1328:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    132a:	3404      	adds	r4, #4
    132c:	5d19      	ldrb	r1, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    132e:	4381      	bics	r1, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1330:	5519      	strb	r1, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1332:	2180      	movs	r1, #128	; 0x80
    1334:	0309      	lsls	r1, r1, #12
    1336:	6191      	str	r1, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1338:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    133a:	2180      	movs	r1, #128	; 0x80
    133c:	05c9      	lsls	r1, r1, #23
    133e:	6299      	str	r1, [r3, #40]	; 0x28
    1340:	4c24      	ldr	r4, [pc, #144]	; (13d4 <system_init+0xe0>)
    1342:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1344:	2653      	movs	r6, #83	; 0x53
    1346:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1348:	4384      	bics	r4, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    134a:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    134c:	6191      	str	r1, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    134e:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1350:	6299      	str	r1, [r3, #40]	; 0x28
    1352:	4c21      	ldr	r4, [pc, #132]	; (13d8 <system_init+0xe4>)
    1354:	46a0      	mov	r8, r4
    1356:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1358:	275e      	movs	r7, #94	; 0x5e
    135a:	5ddc      	ldrb	r4, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
    135c:	4384      	bics	r4, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    135e:	55dc      	strb	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1360:	2480      	movs	r4, #128	; 0x80
    1362:	00e4      	lsls	r4, r4, #3
    1364:	3736      	adds	r7, #54	; 0x36
    1366:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1368:	3f0c      	subs	r7, #12
    136a:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    136c:	24a8      	movs	r4, #168	; 0xa8
    136e:	4e1b      	ldr	r6, [pc, #108]	; (13dc <system_init+0xe8>)
    1370:	511e      	str	r6, [r3, r4]
    1372:	511d      	str	r5, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1374:	25ca      	movs	r5, #202	; 0xca
    1376:	46ac      	mov	ip, r5
    1378:	5d5d      	ldrb	r5, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    137a:	4385      	bics	r5, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    137c:	4666      	mov	r6, ip
    137e:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1380:	2598      	movs	r5, #152	; 0x98
    1382:	5151      	str	r1, [r2, r5]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1384:	51d1      	str	r1, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1386:	5119      	str	r1, [r3, r4]
    1388:	4642      	mov	r2, r8
    138a:	511a      	str	r2, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    138c:	21de      	movs	r1, #222	; 0xde
    138e:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1390:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1392:	545a      	strb	r2, [r3, r1]
	// Set pin direction to output
	gpio_set_pin_direction(LED0, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(LED0, GPIO_PIN_FUNCTION_OFF);

	EXTERNAL_IRQ_0_init();
    1394:	4b12      	ldr	r3, [pc, #72]	; (13e0 <system_init+0xec>)
    1396:	4798      	blx	r3

	SPI_ADF_init();
    1398:	4b12      	ldr	r3, [pc, #72]	; (13e4 <system_init+0xf0>)
    139a:	4798      	blx	r3

	SPI_LMX_init();
    139c:	4b12      	ldr	r3, [pc, #72]	; (13e8 <system_init+0xf4>)
    139e:	4798      	blx	r3

	SPI_ZCD_init();
    13a0:	4b12      	ldr	r3, [pc, #72]	; (13ec <system_init+0xf8>)
    13a2:	4798      	blx	r3
	USART_0_init();
    13a4:	4b12      	ldr	r3, [pc, #72]	; (13f0 <system_init+0xfc>)
    13a6:	4798      	blx	r3

	delay_driver_init();
    13a8:	4b12      	ldr	r3, [pc, #72]	; (13f4 <system_init+0x100>)
    13aa:	4798      	blx	r3

	TIMER_ZCD_init();
    13ac:	4b12      	ldr	r3, [pc, #72]	; (13f8 <system_init+0x104>)
    13ae:	4798      	blx	r3
	TIMER_USB_init();
    13b0:	4b12      	ldr	r3, [pc, #72]	; (13fc <system_init+0x108>)
    13b2:	4798      	blx	r3
	DAC_0_init();
    13b4:	4b12      	ldr	r3, [pc, #72]	; (1400 <system_init+0x10c>)
    13b6:	4798      	blx	r3

	USB_DEVICE_INSTANCE_init();
    13b8:	4b12      	ldr	r3, [pc, #72]	; (1404 <system_init+0x110>)
    13ba:	4798      	blx	r3
}
    13bc:	bc04      	pop	{r2}
    13be:	4690      	mov	r8, r2
    13c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    13c2:	46c0      	nop			; (mov r8, r8)
    13c4:	00002161 	.word	0x00002161
    13c8:	41004400 	.word	0x41004400
    13cc:	40000008 	.word	0x40000008
    13d0:	40000080 	.word	0x40000080
    13d4:	c0000008 	.word	0xc0000008
    13d8:	c0004000 	.word	0xc0004000
    13dc:	40000400 	.word	0x40000400
    13e0:	00000d95 	.word	0x00000d95
    13e4:	00000ec9 	.word	0x00000ec9
    13e8:	00000fd1 	.word	0x00000fd1
    13ec:	000010c5 	.word	0x000010c5
    13f0:	00001151 	.word	0x00001151
    13f4:	00001189 	.word	0x00001189
    13f8:	00000d15 	.word	0x00000d15
    13fc:	00000d55 	.word	0x00000d55
    1400:	000011f9 	.word	0x000011f9
    1404:	000012d9 	.word	0x000012d9

00001408 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    1408:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
    140c:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
    140e:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    1410:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
    1414:	4770      	bx	lr

00001416 <atomic_leave_critical>:
    1416:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
    141a:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    141c:	f383 8810 	msr	PRIMASK, r3
}
    1420:	4770      	bx	lr
	...

00001424 <dac_sync_init>:

/**
 * \brief Initialize the DAC HAL instance and hardware.
 */
int32_t dac_sync_init(struct dac_sync_descriptor *const descr, void *const hw)
{
    1424:	b570      	push	{r4, r5, r6, lr}
    1426:	0004      	movs	r4, r0
    1428:	000d      	movs	r5, r1
	uint8_t i;
	int32_t rc;

	ASSERT(descr && hw);
    142a:	2800      	cmp	r0, #0
    142c:	d010      	beq.n	1450 <dac_sync_init+0x2c>
    142e:	2900      	cmp	r1, #0
    1430:	d00c      	beq.n	144c <dac_sync_init+0x28>
    1432:	2001      	movs	r0, #1
    1434:	2232      	movs	r2, #50	; 0x32
    1436:	490c      	ldr	r1, [pc, #48]	; (1468 <dac_sync_init+0x44>)
    1438:	4b0c      	ldr	r3, [pc, #48]	; (146c <dac_sync_init+0x48>)
    143a:	4798      	blx	r3

	rc = _dac_sync_init(&descr->device, hw);
    143c:	0029      	movs	r1, r5
    143e:	0020      	movs	r0, r4
    1440:	4b0b      	ldr	r3, [pc, #44]	; (1470 <dac_sync_init+0x4c>)
    1442:	4798      	blx	r3
	if (rc) {
    1444:	2800      	cmp	r0, #0
    1446:	d10e      	bne.n	1466 <dac_sync_init+0x42>
    1448:	2300      	movs	r3, #0
    144a:	e00a      	b.n	1462 <dac_sync_init+0x3e>
	ASSERT(descr && hw);
    144c:	2000      	movs	r0, #0
    144e:	e7f1      	b.n	1434 <dac_sync_init+0x10>
    1450:	2000      	movs	r0, #0
    1452:	e7ef      	b.n	1434 <dac_sync_init+0x10>
		return rc;
	}

	for (i = 0; i < CHANNEL_NUM; i++) {
		descr->sel_ch[i].buffer = NULL;
    1454:	00da      	lsls	r2, r3, #3
    1456:	18a2      	adds	r2, r4, r2
    1458:	2100      	movs	r1, #0
    145a:	6051      	str	r1, [r2, #4]
		descr->sel_ch[i].length = 0;
    145c:	6091      	str	r1, [r2, #8]
	for (i = 0; i < CHANNEL_NUM; i++) {
    145e:	3301      	adds	r3, #1
    1460:	b2db      	uxtb	r3, r3
    1462:	2b00      	cmp	r3, #0
    1464:	d0f6      	beq.n	1454 <dac_sync_init+0x30>
	}

	return ERR_NONE;
}
    1466:	bd70      	pop	{r4, r5, r6, pc}
    1468:	0000e0b8 	.word	0x0000e0b8
    146c:	00001fb1 	.word	0x00001fb1
    1470:	000021d5 	.word	0x000021d5

00001474 <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
    1474:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
    1476:	4b02      	ldr	r3, [pc, #8]	; (1480 <delay_init+0xc>)
    1478:	6018      	str	r0, [r3, #0]
    147a:	4b02      	ldr	r3, [pc, #8]	; (1484 <delay_init+0x10>)
    147c:	4798      	blx	r3
}
    147e:	bd10      	pop	{r4, pc}
    1480:	20000bec 	.word	0x20000bec
    1484:	00002b39 	.word	0x00002b39

00001488 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
    1488:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
    148a:	4b04      	ldr	r3, [pc, #16]	; (149c <delay_ms+0x14>)
    148c:	681c      	ldr	r4, [r3, #0]
    148e:	4b04      	ldr	r3, [pc, #16]	; (14a0 <delay_ms+0x18>)
    1490:	4798      	blx	r3
    1492:	0001      	movs	r1, r0
    1494:	0020      	movs	r0, r4
    1496:	4b03      	ldr	r3, [pc, #12]	; (14a4 <delay_ms+0x1c>)
    1498:	4798      	blx	r3
}
    149a:	bd10      	pop	{r4, pc}
    149c:	20000bec 	.word	0x20000bec
    14a0:	00002155 	.word	0x00002155
    14a4:	00002b45 	.word	0x00002b45

000014a8 <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
    14a8:	b570      	push	{r4, r5, r6, lr}
	uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;
    14aa:	2501      	movs	r5, #1
    14ac:	2400      	movs	r4, #0

	while (upper >= lower) {
    14ae:	e007      	b.n	14c0 <process_ext_irq+0x18>
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
			if (ext_irqs[middle].cb) {
    14b0:	4a0d      	ldr	r2, [pc, #52]	; (14e8 <process_ext_irq+0x40>)
    14b2:	58b3      	ldr	r3, [r6, r2]
    14b4:	2b00      	cmp	r3, #0
    14b6:	d000      	beq.n	14ba <process_ext_irq+0x12>
				ext_irqs[middle].cb();
    14b8:	4798      	blx	r3
			lower = middle + 1;
		} else {
			upper = middle - 1;
		}
	}
}
    14ba:	bd70      	pop	{r4, r5, r6, pc}
			upper = middle - 1;
    14bc:	3a01      	subs	r2, #1
    14be:	b2d5      	uxtb	r5, r2
	while (upper >= lower) {
    14c0:	42ac      	cmp	r4, r5
    14c2:	d8fa      	bhi.n	14ba <process_ext_irq+0x12>
		middle = (upper + lower) >> 1;
    14c4:	192b      	adds	r3, r5, r4
    14c6:	105b      	asrs	r3, r3, #1
    14c8:	b2da      	uxtb	r2, r3
		if (middle >= EXT_IRQ_AMOUNT) {
    14ca:	2a00      	cmp	r2, #0
    14cc:	d1f5      	bne.n	14ba <process_ext_irq+0x12>
    14ce:	21ff      	movs	r1, #255	; 0xff
    14d0:	400b      	ands	r3, r1
		if (ext_irqs[middle].pin == pin) {
    14d2:	00de      	lsls	r6, r3, #3
    14d4:	4904      	ldr	r1, [pc, #16]	; (14e8 <process_ext_irq+0x40>)
    14d6:	1989      	adds	r1, r1, r6
    14d8:	6849      	ldr	r1, [r1, #4]
    14da:	4281      	cmp	r1, r0
    14dc:	d0e8      	beq.n	14b0 <process_ext_irq+0x8>
		if (ext_irqs[middle].pin < pin) {
    14de:	d2ed      	bcs.n	14bc <process_ext_irq+0x14>
			lower = middle + 1;
    14e0:	3201      	adds	r2, #1
    14e2:	b2d4      	uxtb	r4, r2
    14e4:	e7ec      	b.n	14c0 <process_ext_irq+0x18>
    14e6:	46c0      	nop			; (mov r8, r8)
    14e8:	20000bf0 	.word	0x20000bf0

000014ec <ext_irq_init>:
{
    14ec:	b510      	push	{r4, lr}
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
    14ee:	2300      	movs	r3, #0
    14f0:	2b00      	cmp	r3, #0
    14f2:	d003      	beq.n	14fc <ext_irq_init+0x10>
	return _ext_irq_init(process_ext_irq);
    14f4:	4807      	ldr	r0, [pc, #28]	; (1514 <ext_irq_init+0x28>)
    14f6:	4b08      	ldr	r3, [pc, #32]	; (1518 <ext_irq_init+0x2c>)
    14f8:	4798      	blx	r3
}
    14fa:	bd10      	pop	{r4, pc}
		ext_irqs[i].pin = 0xFFFFFFFF;
    14fc:	4a07      	ldr	r2, [pc, #28]	; (151c <ext_irq_init+0x30>)
    14fe:	00d9      	lsls	r1, r3, #3
    1500:	1850      	adds	r0, r2, r1
    1502:	2401      	movs	r4, #1
    1504:	4264      	negs	r4, r4
    1506:	6044      	str	r4, [r0, #4]
		ext_irqs[i].cb  = NULL;
    1508:	2000      	movs	r0, #0
    150a:	5088      	str	r0, [r1, r2]
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
    150c:	3301      	adds	r3, #1
    150e:	b29b      	uxth	r3, r3
    1510:	e7ee      	b.n	14f0 <ext_irq_init+0x4>
    1512:	46c0      	nop			; (mov r8, r8)
    1514:	000014a9 	.word	0x000014a9
    1518:	00002201 	.word	0x00002201
    151c:	20000bf0 	.word	0x20000bf0

00001520 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
    1520:	b570      	push	{r4, r5, r6, lr}
    1522:	0004      	movs	r4, r0
    1524:	000d      	movs	r5, r1
    1526:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
    1528:	2800      	cmp	r0, #0
    152a:	d00e      	beq.n	154a <io_write+0x2a>
    152c:	2900      	cmp	r1, #0
    152e:	d00a      	beq.n	1546 <io_write+0x26>
    1530:	2001      	movs	r0, #1
    1532:	2234      	movs	r2, #52	; 0x34
    1534:	4906      	ldr	r1, [pc, #24]	; (1550 <io_write+0x30>)
    1536:	4b07      	ldr	r3, [pc, #28]	; (1554 <io_write+0x34>)
    1538:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
    153a:	6823      	ldr	r3, [r4, #0]
    153c:	0032      	movs	r2, r6
    153e:	0029      	movs	r1, r5
    1540:	0020      	movs	r0, r4
    1542:	4798      	blx	r3
}
    1544:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
    1546:	2000      	movs	r0, #0
    1548:	e7f3      	b.n	1532 <io_write+0x12>
    154a:	2000      	movs	r0, #0
    154c:	e7f1      	b.n	1532 <io_write+0x12>
    154e:	46c0      	nop			; (mov r8, r8)
    1550:	0000e0d4 	.word	0x0000e0d4
    1554:	00001fb1 	.word	0x00001fb1

00001558 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
    1558:	b570      	push	{r4, r5, r6, lr}
    155a:	0004      	movs	r4, r0
    155c:	000d      	movs	r5, r1
    155e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
    1560:	2800      	cmp	r0, #0
    1562:	d00e      	beq.n	1582 <io_read+0x2a>
    1564:	2900      	cmp	r1, #0
    1566:	d00a      	beq.n	157e <io_read+0x26>
    1568:	2001      	movs	r0, #1
    156a:	223d      	movs	r2, #61	; 0x3d
    156c:	4906      	ldr	r1, [pc, #24]	; (1588 <io_read+0x30>)
    156e:	4b07      	ldr	r3, [pc, #28]	; (158c <io_read+0x34>)
    1570:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
    1572:	6863      	ldr	r3, [r4, #4]
    1574:	0032      	movs	r2, r6
    1576:	0029      	movs	r1, r5
    1578:	0020      	movs	r0, r4
    157a:	4798      	blx	r3
}
    157c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
    157e:	2000      	movs	r0, #0
    1580:	e7f3      	b.n	156a <io_read+0x12>
    1582:	2000      	movs	r0, #0
    1584:	e7f1      	b.n	156a <io_read+0x12>
    1586:	46c0      	nop			; (mov r8, r8)
    1588:	0000e0d4 	.word	0x0000e0d4
    158c:	00001fb1 	.word	0x00001fb1

00001590 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
    1590:	b570      	push	{r4, r5, r6, lr}
    1592:	0004      	movs	r4, r0
    1594:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
    1596:	2800      	cmp	r0, #0
    1598:	d017      	beq.n	15ca <spi_m_sync_init+0x3a>
    159a:	2900      	cmp	r1, #0
    159c:	d013      	beq.n	15c6 <spi_m_sync_init+0x36>
    159e:	2001      	movs	r0, #1
    15a0:	2240      	movs	r2, #64	; 0x40
    15a2:	490b      	ldr	r1, [pc, #44]	; (15d0 <spi_m_sync_init+0x40>)
    15a4:	4b0b      	ldr	r3, [pc, #44]	; (15d4 <spi_m_sync_init+0x44>)
    15a6:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
    15a8:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
    15aa:	1d20      	adds	r0, r4, #4
    15ac:	0029      	movs	r1, r5
    15ae:	4b0a      	ldr	r3, [pc, #40]	; (15d8 <spi_m_sync_init+0x48>)
    15b0:	4798      	blx	r3

	if (rc < 0) {
    15b2:	2800      	cmp	r0, #0
    15b4:	db06      	blt.n	15c4 <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
    15b6:	4b09      	ldr	r3, [pc, #36]	; (15dc <spi_m_sync_init+0x4c>)
    15b8:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
    15ba:	4b09      	ldr	r3, [pc, #36]	; (15e0 <spi_m_sync_init+0x50>)
    15bc:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
    15be:	4b09      	ldr	r3, [pc, #36]	; (15e4 <spi_m_sync_init+0x54>)
    15c0:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
    15c2:	2000      	movs	r0, #0
}
    15c4:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
    15c6:	2000      	movs	r0, #0
    15c8:	e7ea      	b.n	15a0 <spi_m_sync_init+0x10>
    15ca:	2000      	movs	r0, #0
    15cc:	e7e8      	b.n	15a0 <spi_m_sync_init+0x10>
    15ce:	46c0      	nop			; (mov r8, r8)
    15d0:	0000e0e8 	.word	0x0000e0e8
    15d4:	00001fb1 	.word	0x00001fb1
    15d8:	000026e5 	.word	0x000026e5
    15dc:	ffff8000 	.word	0xffff8000
    15e0:	00001695 	.word	0x00001695
    15e4:	00001659 	.word	0x00001659

000015e8 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
    15e8:	b510      	push	{r4, lr}
    15ea:	0004      	movs	r4, r0
	ASSERT(spi);
    15ec:	1e43      	subs	r3, r0, #1
    15ee:	4198      	sbcs	r0, r3
    15f0:	b2c0      	uxtb	r0, r0
    15f2:	2257      	movs	r2, #87	; 0x57
    15f4:	4903      	ldr	r1, [pc, #12]	; (1604 <spi_m_sync_enable+0x1c>)
    15f6:	4b04      	ldr	r3, [pc, #16]	; (1608 <spi_m_sync_enable+0x20>)
    15f8:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
    15fa:	1d20      	adds	r0, r4, #4
    15fc:	4b03      	ldr	r3, [pc, #12]	; (160c <spi_m_sync_enable+0x24>)
    15fe:	4798      	blx	r3
}
    1600:	bd10      	pop	{r4, pc}
    1602:	46c0      	nop			; (mov r8, r8)
    1604:	0000e0e8 	.word	0x0000e0e8
    1608:	00001fb1 	.word	0x00001fb1
    160c:	000028e9 	.word	0x000028e9

00001610 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
    1610:	b530      	push	{r4, r5, lr}
    1612:	b087      	sub	sp, #28
    1614:	0004      	movs	r4, r0
    1616:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
    1618:	2800      	cmp	r0, #0
    161a:	d015      	beq.n	1648 <spi_m_sync_transfer+0x38>
    161c:	2900      	cmp	r1, #0
    161e:	d011      	beq.n	1644 <spi_m_sync_transfer+0x34>
    1620:	2001      	movs	r0, #1
    1622:	22b3      	movs	r2, #179	; 0xb3
    1624:	4909      	ldr	r1, [pc, #36]	; (164c <spi_m_sync_transfer+0x3c>)
    1626:	4b0a      	ldr	r3, [pc, #40]	; (1650 <spi_m_sync_transfer+0x40>)
    1628:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
    162a:	682b      	ldr	r3, [r5, #0]
    162c:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
    162e:	686b      	ldr	r3, [r5, #4]
    1630:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
    1632:	68ab      	ldr	r3, [r5, #8]
    1634:	9301      	str	r3, [sp, #4]
    1636:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
    1638:	1d20      	adds	r0, r4, #4
    163a:	a903      	add	r1, sp, #12
    163c:	4b05      	ldr	r3, [pc, #20]	; (1654 <spi_m_sync_transfer+0x44>)
    163e:	4798      	blx	r3
}
    1640:	b007      	add	sp, #28
    1642:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
    1644:	2000      	movs	r0, #0
    1646:	e7ec      	b.n	1622 <spi_m_sync_transfer+0x12>
    1648:	2000      	movs	r0, #0
    164a:	e7ea      	b.n	1622 <spi_m_sync_transfer+0x12>
    164c:	0000e0e8 	.word	0x0000e0e8
    1650:	00001fb1 	.word	0x00001fb1
    1654:	00002921 	.word	0x00002921

00001658 <_spi_m_sync_io_write>:
{
    1658:	b570      	push	{r4, r5, r6, lr}
    165a:	b084      	sub	sp, #16
    165c:	0004      	movs	r4, r0
    165e:	000e      	movs	r6, r1
    1660:	0015      	movs	r5, r2
	ASSERT(io);
    1662:	1e43      	subs	r3, r0, #1
    1664:	4198      	sbcs	r0, r3
    1666:	b2c0      	uxtb	r0, r0
    1668:	22a3      	movs	r2, #163	; 0xa3
    166a:	4907      	ldr	r1, [pc, #28]	; (1688 <_spi_m_sync_io_write+0x30>)
    166c:	4b07      	ldr	r3, [pc, #28]	; (168c <_spi_m_sync_io_write+0x34>)
    166e:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    1670:	0020      	movs	r0, r4
    1672:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
    1674:	2300      	movs	r3, #0
    1676:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
    1678:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
    167a:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    167c:	a901      	add	r1, sp, #4
    167e:	4b04      	ldr	r3, [pc, #16]	; (1690 <_spi_m_sync_io_write+0x38>)
    1680:	4798      	blx	r3
}
    1682:	b004      	add	sp, #16
    1684:	bd70      	pop	{r4, r5, r6, pc}
    1686:	46c0      	nop			; (mov r8, r8)
    1688:	0000e0e8 	.word	0x0000e0e8
    168c:	00001fb1 	.word	0x00001fb1
    1690:	00001611 	.word	0x00001611

00001694 <_spi_m_sync_io_read>:
{
    1694:	b570      	push	{r4, r5, r6, lr}
    1696:	b084      	sub	sp, #16
    1698:	0004      	movs	r4, r0
    169a:	000e      	movs	r6, r1
    169c:	0015      	movs	r5, r2
	ASSERT(io);
    169e:	1e43      	subs	r3, r0, #1
    16a0:	4198      	sbcs	r0, r3
    16a2:	b2c0      	uxtb	r0, r0
    16a4:	2287      	movs	r2, #135	; 0x87
    16a6:	4907      	ldr	r1, [pc, #28]	; (16c4 <_spi_m_sync_io_read+0x30>)
    16a8:	4b07      	ldr	r3, [pc, #28]	; (16c8 <_spi_m_sync_io_read+0x34>)
    16aa:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    16ac:	0020      	movs	r0, r4
    16ae:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
    16b0:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
    16b2:	2300      	movs	r3, #0
    16b4:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
    16b6:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    16b8:	a901      	add	r1, sp, #4
    16ba:	4b04      	ldr	r3, [pc, #16]	; (16cc <_spi_m_sync_io_read+0x38>)
    16bc:	4798      	blx	r3
}
    16be:	b004      	add	sp, #16
    16c0:	bd70      	pop	{r4, r5, r6, pc}
    16c2:	46c0      	nop			; (mov r8, r8)
    16c4:	0000e0e8 	.word	0x0000e0e8
    16c8:	00001fb1 	.word	0x00001fb1
    16cc:	00001611 	.word	0x00001611

000016d0 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
    16d0:	b570      	push	{r4, r5, r6, lr}
    16d2:	0004      	movs	r4, r0
    16d4:	000d      	movs	r5, r1
	ASSERT(spi && io);
    16d6:	2800      	cmp	r0, #0
    16d8:	d00c      	beq.n	16f4 <spi_m_sync_get_io_descriptor+0x24>
    16da:	2900      	cmp	r1, #0
    16dc:	d008      	beq.n	16f0 <spi_m_sync_get_io_descriptor+0x20>
    16de:	2001      	movs	r0, #1
    16e0:	22bd      	movs	r2, #189	; 0xbd
    16e2:	4905      	ldr	r1, [pc, #20]	; (16f8 <spi_m_sync_get_io_descriptor+0x28>)
    16e4:	4b05      	ldr	r3, [pc, #20]	; (16fc <spi_m_sync_get_io_descriptor+0x2c>)
    16e6:	4798      	blx	r3
	*io = &spi->io;
    16e8:	340c      	adds	r4, #12
    16ea:	602c      	str	r4, [r5, #0]
	return 0;
}
    16ec:	2000      	movs	r0, #0
    16ee:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
    16f0:	2000      	movs	r0, #0
    16f2:	e7f5      	b.n	16e0 <spi_m_sync_get_io_descriptor+0x10>
    16f4:	2000      	movs	r0, #0
    16f6:	e7f3      	b.n	16e0 <spi_m_sync_get_io_descriptor+0x10>
    16f8:	0000e0e8 	.word	0x0000e0e8
    16fc:	00001fb1 	.word	0x00001fb1

00001700 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
    1700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
    1702:	6806      	ldr	r6, [r0, #0]
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
    1704:	2e00      	cmp	r6, #0
    1706:	d002      	beq.n	170e <timer_add_timer_task+0xe>
    1708:	0033      	movs	r3, r6
    170a:	2500      	movs	r5, #0
    170c:	e00c      	b.n	1728 <timer_add_timer_task+0x28>
		list_insert_as_head(list, new_task);
    170e:	4b10      	ldr	r3, [pc, #64]	; (1750 <timer_add_timer_task+0x50>)
    1710:	4798      	blx	r3
		return;
    1712:	e018      	b.n	1746 <timer_add_timer_task+0x46>
		uint32_t time_left;

		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
    1714:	689f      	ldr	r7, [r3, #8]
    1716:	46bc      	mov	ip, r7
    1718:	4464      	add	r4, ip
    171a:	1aa4      	subs	r4, r4, r2
    171c:	3401      	adds	r4, #1
		}
		if (time_left >= new_task->interval)
    171e:	688f      	ldr	r7, [r1, #8]
    1720:	42bc      	cmp	r4, r7
    1722:	d20b      	bcs.n	173c <timer_add_timer_task+0x3c>
			break;
		prev = it;
    1724:	001d      	movs	r5, r3
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
    1726:	681b      	ldr	r3, [r3, #0]
    1728:	2b00      	cmp	r3, #0
    172a:	d007      	beq.n	173c <timer_add_timer_task+0x3c>
		if (it->time_label <= time) {
    172c:	685c      	ldr	r4, [r3, #4]
    172e:	4294      	cmp	r4, r2
    1730:	d8f0      	bhi.n	1714 <timer_add_timer_task+0x14>
			time_left = it->interval - (time - it->time_label);
    1732:	1aa4      	subs	r4, r4, r2
    1734:	689f      	ldr	r7, [r3, #8]
    1736:	46bc      	mov	ip, r7
    1738:	4464      	add	r4, ip
    173a:	e7f0      	b.n	171e <timer_add_timer_task+0x1e>
	}

	if (it == head) {
    173c:	42b3      	cmp	r3, r6
    173e:	d003      	beq.n	1748 <timer_add_timer_task+0x48>
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
    1740:	0028      	movs	r0, r5
    1742:	4b04      	ldr	r3, [pc, #16]	; (1754 <timer_add_timer_task+0x54>)
    1744:	4798      	blx	r3
	}
}
    1746:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
    1748:	4b01      	ldr	r3, [pc, #4]	; (1750 <timer_add_timer_task+0x50>)
    174a:	4798      	blx	r3
    174c:	e7fb      	b.n	1746 <timer_add_timer_task+0x46>
    174e:	46c0      	nop			; (mov r8, r8)
    1750:	00001fd1 	.word	0x00001fd1
    1754:	00001ffd 	.word	0x00001ffd

00001758 <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
    1758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    175a:	0005      	movs	r5, r0
    175c:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
    175e:	6903      	ldr	r3, [r0, #16]
    1760:	1c5e      	adds	r6, r3, #1
    1762:	6106      	str	r6, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
    1764:	7e03      	ldrb	r3, [r0, #24]
    1766:	07db      	lsls	r3, r3, #31
    1768:	d402      	bmi.n	1770 <timer_process_counted+0x18>
    176a:	7e03      	ldrb	r3, [r0, #24]
    176c:	079b      	lsls	r3, r3, #30
    176e:	d50a      	bpl.n	1786 <timer_process_counted+0x2e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
    1770:	7e2b      	ldrb	r3, [r5, #24]
    1772:	2202      	movs	r2, #2
    1774:	4313      	orrs	r3, r2
    1776:	b2db      	uxtb	r3, r3
    1778:	762b      	strb	r3, [r5, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
    177a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    177c:	696f      	ldr	r7, [r5, #20]
		tmp->cb(tmp);
    177e:	68e3      	ldr	r3, [r4, #12]
    1780:	0020      	movs	r0, r4
    1782:	4798      	blx	r3
		it = (struct timer_task *)list_get_head(&timer->tasks);
    1784:	003c      	movs	r4, r7
	while (it && ((time - it->time_label) >= it->interval)) {
    1786:	2c00      	cmp	r4, #0
    1788:	d0f7      	beq.n	177a <timer_process_counted+0x22>
    178a:	6863      	ldr	r3, [r4, #4]
    178c:	1af3      	subs	r3, r6, r3
    178e:	68a2      	ldr	r2, [r4, #8]
    1790:	4293      	cmp	r3, r2
    1792:	d3f2      	bcc.n	177a <timer_process_counted+0x22>
		list_remove_head(&timer->tasks);
    1794:	002f      	movs	r7, r5
    1796:	3714      	adds	r7, #20
    1798:	0038      	movs	r0, r7
    179a:	4b06      	ldr	r3, [pc, #24]	; (17b4 <timer_process_counted+0x5c>)
    179c:	4798      	blx	r3
		if (TIMER_TASK_REPEAT == tmp->mode) {
    179e:	7c23      	ldrb	r3, [r4, #16]
    17a0:	2b01      	cmp	r3, #1
    17a2:	d1eb      	bne.n	177c <timer_process_counted+0x24>
			tmp->time_label = time;
    17a4:	6066      	str	r6, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
    17a6:	0032      	movs	r2, r6
    17a8:	0021      	movs	r1, r4
    17aa:	0038      	movs	r0, r7
    17ac:	4b02      	ldr	r3, [pc, #8]	; (17b8 <timer_process_counted+0x60>)
    17ae:	4798      	blx	r3
    17b0:	e7e4      	b.n	177c <timer_process_counted+0x24>
    17b2:	46c0      	nop			; (mov r8, r8)
    17b4:	00002045 	.word	0x00002045
    17b8:	00001701 	.word	0x00001701

000017bc <timer_init>:
{
    17bc:	b570      	push	{r4, r5, r6, lr}
    17be:	0004      	movs	r4, r0
    17c0:	000d      	movs	r5, r1
	ASSERT(descr && hw);
    17c2:	2800      	cmp	r0, #0
    17c4:	d012      	beq.n	17ec <timer_init+0x30>
    17c6:	2900      	cmp	r1, #0
    17c8:	d00e      	beq.n	17e8 <timer_init+0x2c>
    17ca:	2001      	movs	r0, #1
    17cc:	223b      	movs	r2, #59	; 0x3b
    17ce:	4908      	ldr	r1, [pc, #32]	; (17f0 <timer_init+0x34>)
    17d0:	4b08      	ldr	r3, [pc, #32]	; (17f4 <timer_init+0x38>)
    17d2:	4798      	blx	r3
	_timer_init(&descr->device, hw);
    17d4:	0029      	movs	r1, r5
    17d6:	0020      	movs	r0, r4
    17d8:	4b07      	ldr	r3, [pc, #28]	; (17f8 <timer_init+0x3c>)
    17da:	4798      	blx	r3
	descr->time                           = 0;
    17dc:	2300      	movs	r3, #0
    17de:	6123      	str	r3, [r4, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
    17e0:	4b06      	ldr	r3, [pc, #24]	; (17fc <timer_init+0x40>)
    17e2:	6023      	str	r3, [r4, #0]
}
    17e4:	2000      	movs	r0, #0
    17e6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
    17e8:	2000      	movs	r0, #0
    17ea:	e7ef      	b.n	17cc <timer_init+0x10>
    17ec:	2000      	movs	r0, #0
    17ee:	e7ed      	b.n	17cc <timer_init+0x10>
    17f0:	0000e104 	.word	0x0000e104
    17f4:	00001fb1 	.word	0x00001fb1
    17f8:	00002c21 	.word	0x00002c21
    17fc:	00001759 	.word	0x00001759

00001800 <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
    1800:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1802:	3808      	subs	r0, #8

	descr->stat = 0;
    1804:	2300      	movs	r3, #0
    1806:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
    1808:	6a43      	ldr	r3, [r0, #36]	; 0x24
    180a:	2b00      	cmp	r3, #0
    180c:	d000      	beq.n	1810 <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
    180e:	4798      	blx	r3
	}
}
    1810:	bd10      	pop	{r4, pc}

00001812 <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
    1812:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1814:	3808      	subs	r0, #8

	descr->stat = 0;
    1816:	2300      	movs	r3, #0
    1818:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
    181a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    181c:	2b00      	cmp	r3, #0
    181e:	d000      	beq.n	1822 <usart_error+0x10>
		descr->usart_cb.error(descr);
    1820:	4798      	blx	r3
	}
}
    1822:	bd10      	pop	{r4, pc}

00001824 <usart_fill_rx_buffer>:
{
    1824:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1826:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
    1828:	302c      	adds	r0, #44	; 0x2c
    182a:	4b04      	ldr	r3, [pc, #16]	; (183c <usart_fill_rx_buffer+0x18>)
    182c:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
    182e:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
    1830:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
    1832:	2b00      	cmp	r3, #0
    1834:	d001      	beq.n	183a <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
    1836:	0020      	movs	r0, r4
    1838:	4798      	blx	r3
}
    183a:	bd10      	pop	{r4, pc}
    183c:	000020f1 	.word	0x000020f1

00001840 <usart_async_write>:
{
    1840:	b570      	push	{r4, r5, r6, lr}
    1842:	0004      	movs	r4, r0
    1844:	000e      	movs	r6, r1
    1846:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
    1848:	2800      	cmp	r0, #0
    184a:	d01d      	beq.n	1888 <usart_async_write+0x48>
    184c:	2900      	cmp	r1, #0
    184e:	d01d      	beq.n	188c <usart_async_write+0x4c>
    1850:	2a00      	cmp	r2, #0
    1852:	d11d      	bne.n	1890 <usart_async_write+0x50>
    1854:	2000      	movs	r0, #0
    1856:	223c      	movs	r2, #60	; 0x3c
    1858:	32ff      	adds	r2, #255	; 0xff
    185a:	4910      	ldr	r1, [pc, #64]	; (189c <usart_async_write+0x5c>)
    185c:	4b10      	ldr	r3, [pc, #64]	; (18a0 <usart_async_write+0x60>)
    185e:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
    1860:	2344      	movs	r3, #68	; 0x44
    1862:	5ae2      	ldrh	r2, [r4, r3]
    1864:	3308      	adds	r3, #8
    1866:	5ae3      	ldrh	r3, [r4, r3]
    1868:	429a      	cmp	r2, r3
    186a:	d113      	bne.n	1894 <usart_async_write+0x54>
	descr->tx_buffer        = (uint8_t *)buf;
    186c:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
    186e:	234c      	movs	r3, #76	; 0x4c
    1870:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
    1872:	2200      	movs	r2, #0
    1874:	3b08      	subs	r3, #8
    1876:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
    1878:	3b43      	subs	r3, #67	; 0x43
    187a:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
    187c:	0020      	movs	r0, r4
    187e:	3008      	adds	r0, #8
    1880:	4b08      	ldr	r3, [pc, #32]	; (18a4 <usart_async_write+0x64>)
    1882:	4798      	blx	r3
	return (int32_t)length;
    1884:	0028      	movs	r0, r5
}
    1886:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
    1888:	2000      	movs	r0, #0
    188a:	e7e4      	b.n	1856 <usart_async_write+0x16>
    188c:	2000      	movs	r0, #0
    188e:	e7e2      	b.n	1856 <usart_async_write+0x16>
    1890:	2001      	movs	r0, #1
    1892:	e7e0      	b.n	1856 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
    1894:	201c      	movs	r0, #28
    1896:	4240      	negs	r0, r0
    1898:	e7f5      	b.n	1886 <usart_async_write+0x46>
    189a:	46c0      	nop			; (mov r8, r8)
    189c:	0000e11c 	.word	0x0000e11c
    18a0:	00001fb1 	.word	0x00001fb1
    18a4:	000026c1 	.word	0x000026c1

000018a8 <usart_process_byte_sent>:
{
    18a8:	b570      	push	{r4, r5, r6, lr}
    18aa:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
    18ac:	0002      	movs	r2, r0
    18ae:	3a08      	subs	r2, #8
    18b0:	2344      	movs	r3, #68	; 0x44
    18b2:	5ad3      	ldrh	r3, [r2, r3]
    18b4:	214c      	movs	r1, #76	; 0x4c
    18b6:	5a52      	ldrh	r2, [r2, r1]
    18b8:	4293      	cmp	r3, r2
    18ba:	d00d      	beq.n	18d8 <usart_process_byte_sent+0x30>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
    18bc:	0002      	movs	r2, r0
    18be:	6c01      	ldr	r1, [r0, #64]	; 0x40
    18c0:	3a08      	subs	r2, #8
    18c2:	1c5d      	adds	r5, r3, #1
    18c4:	2044      	movs	r0, #68	; 0x44
    18c6:	5215      	strh	r5, [r2, r0]
    18c8:	5cc9      	ldrb	r1, [r1, r3]
    18ca:	0020      	movs	r0, r4
    18cc:	4b04      	ldr	r3, [pc, #16]	; (18e0 <usart_process_byte_sent+0x38>)
    18ce:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
    18d0:	0020      	movs	r0, r4
    18d2:	4b04      	ldr	r3, [pc, #16]	; (18e4 <usart_process_byte_sent+0x3c>)
    18d4:	4798      	blx	r3
}
    18d6:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
    18d8:	4b03      	ldr	r3, [pc, #12]	; (18e8 <usart_process_byte_sent+0x40>)
    18da:	4798      	blx	r3
}
    18dc:	e7fb      	b.n	18d6 <usart_process_byte_sent+0x2e>
    18de:	46c0      	nop			; (mov r8, r8)
    18e0:	000026b9 	.word	0x000026b9
    18e4:	000026c1 	.word	0x000026c1
    18e8:	000026c9 	.word	0x000026c9

000018ec <usart_async_read>:
{
    18ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    18ee:	b085      	sub	sp, #20
    18f0:	0004      	movs	r4, r0
    18f2:	000d      	movs	r5, r1
    18f4:	0016      	movs	r6, r2
	ASSERT(descr && buf && length);
    18f6:	2800      	cmp	r0, #0
    18f8:	d017      	beq.n	192a <usart_async_read+0x3e>
    18fa:	2900      	cmp	r1, #0
    18fc:	d017      	beq.n	192e <usart_async_read+0x42>
    18fe:	2a00      	cmp	r2, #0
    1900:	d117      	bne.n	1932 <usart_async_read+0x46>
    1902:	2000      	movs	r0, #0
    1904:	22ac      	movs	r2, #172	; 0xac
    1906:	0052      	lsls	r2, r2, #1
    1908:	4912      	ldr	r1, [pc, #72]	; (1954 <usart_async_read+0x68>)
    190a:	4b13      	ldr	r3, [pc, #76]	; (1958 <usart_async_read+0x6c>)
    190c:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
    190e:	a803      	add	r0, sp, #12
    1910:	4b12      	ldr	r3, [pc, #72]	; (195c <usart_async_read+0x70>)
    1912:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
    1914:	3434      	adds	r4, #52	; 0x34
    1916:	0020      	movs	r0, r4
    1918:	9401      	str	r4, [sp, #4]
    191a:	4b11      	ldr	r3, [pc, #68]	; (1960 <usart_async_read+0x74>)
    191c:	4798      	blx	r3
    191e:	0007      	movs	r7, r0
	CRITICAL_SECTION_LEAVE()
    1920:	a803      	add	r0, sp, #12
    1922:	4b10      	ldr	r3, [pc, #64]	; (1964 <usart_async_read+0x78>)
    1924:	4798      	blx	r3
	uint16_t                       was_read = 0;
    1926:	2400      	movs	r4, #0
	while ((was_read < num) && (was_read < length)) {
    1928:	e00b      	b.n	1942 <usart_async_read+0x56>
	ASSERT(descr && buf && length);
    192a:	2000      	movs	r0, #0
    192c:	e7ea      	b.n	1904 <usart_async_read+0x18>
    192e:	2000      	movs	r0, #0
    1930:	e7e8      	b.n	1904 <usart_async_read+0x18>
    1932:	2001      	movs	r0, #1
    1934:	e7e6      	b.n	1904 <usart_async_read+0x18>
		ringbuffer_get(&descr->rx, &buf[was_read++]);
    1936:	3401      	adds	r4, #1
    1938:	b2a4      	uxth	r4, r4
    193a:	1869      	adds	r1, r5, r1
    193c:	9801      	ldr	r0, [sp, #4]
    193e:	4b0a      	ldr	r3, [pc, #40]	; (1968 <usart_async_read+0x7c>)
    1940:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
    1942:	0021      	movs	r1, r4
    1944:	42a7      	cmp	r7, r4
    1946:	d901      	bls.n	194c <usart_async_read+0x60>
    1948:	42b4      	cmp	r4, r6
    194a:	d3f4      	bcc.n	1936 <usart_async_read+0x4a>
}
    194c:	0020      	movs	r0, r4
    194e:	b005      	add	sp, #20
    1950:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1952:	46c0      	nop			; (mov r8, r8)
    1954:	0000e11c 	.word	0x0000e11c
    1958:	00001fb1 	.word	0x00001fb1
    195c:	00001409 	.word	0x00001409
    1960:	00002131 	.word	0x00002131
    1964:	00001417 	.word	0x00001417
    1968:	000020a5 	.word	0x000020a5

0000196c <usart_async_init>:
{
    196c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    196e:	0004      	movs	r4, r0
    1970:	000d      	movs	r5, r1
    1972:	0016      	movs	r6, r2
    1974:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
    1976:	2800      	cmp	r0, #0
    1978:	d026      	beq.n	19c8 <usart_async_init+0x5c>
    197a:	2900      	cmp	r1, #0
    197c:	d026      	beq.n	19cc <usart_async_init+0x60>
    197e:	2a00      	cmp	r2, #0
    1980:	d026      	beq.n	19d0 <usart_async_init+0x64>
    1982:	2b00      	cmp	r3, #0
    1984:	d126      	bne.n	19d4 <usart_async_init+0x68>
    1986:	2000      	movs	r0, #0
    1988:	223a      	movs	r2, #58	; 0x3a
    198a:	4915      	ldr	r1, [pc, #84]	; (19e0 <usart_async_init+0x74>)
    198c:	4b15      	ldr	r3, [pc, #84]	; (19e4 <usart_async_init+0x78>)
    198e:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
    1990:	0020      	movs	r0, r4
    1992:	3034      	adds	r0, #52	; 0x34
    1994:	003a      	movs	r2, r7
    1996:	0031      	movs	r1, r6
    1998:	4b13      	ldr	r3, [pc, #76]	; (19e8 <usart_async_init+0x7c>)
    199a:	4798      	blx	r3
    199c:	2800      	cmp	r0, #0
    199e:	d11b      	bne.n	19d8 <usart_async_init+0x6c>
	init_status = _usart_async_init(&descr->device, hw);
    19a0:	0020      	movs	r0, r4
    19a2:	3008      	adds	r0, #8
    19a4:	0029      	movs	r1, r5
    19a6:	4b11      	ldr	r3, [pc, #68]	; (19ec <usart_async_init+0x80>)
    19a8:	4798      	blx	r3
	if (init_status) {
    19aa:	2800      	cmp	r0, #0
    19ac:	d10b      	bne.n	19c6 <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
    19ae:	4b10      	ldr	r3, [pc, #64]	; (19f0 <usart_async_init+0x84>)
    19b0:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
    19b2:	4b10      	ldr	r3, [pc, #64]	; (19f4 <usart_async_init+0x88>)
    19b4:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
    19b6:	4b10      	ldr	r3, [pc, #64]	; (19f8 <usart_async_init+0x8c>)
    19b8:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
    19ba:	4b10      	ldr	r3, [pc, #64]	; (19fc <usart_async_init+0x90>)
    19bc:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
    19be:	4b10      	ldr	r3, [pc, #64]	; (1a00 <usart_async_init+0x94>)
    19c0:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
    19c2:	4b10      	ldr	r3, [pc, #64]	; (1a04 <usart_async_init+0x98>)
    19c4:	6163      	str	r3, [r4, #20]
}
    19c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
    19c8:	2000      	movs	r0, #0
    19ca:	e7dd      	b.n	1988 <usart_async_init+0x1c>
    19cc:	2000      	movs	r0, #0
    19ce:	e7db      	b.n	1988 <usart_async_init+0x1c>
    19d0:	2000      	movs	r0, #0
    19d2:	e7d9      	b.n	1988 <usart_async_init+0x1c>
    19d4:	2001      	movs	r0, #1
    19d6:	e7d7      	b.n	1988 <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
    19d8:	200d      	movs	r0, #13
    19da:	4240      	negs	r0, r0
    19dc:	e7f3      	b.n	19c6 <usart_async_init+0x5a>
    19de:	46c0      	nop			; (mov r8, r8)
    19e0:	0000e11c 	.word	0x0000e11c
    19e4:	00001fb1 	.word	0x00001fb1
    19e8:	00002059 	.word	0x00002059
    19ec:	0000262d 	.word	0x0000262d
    19f0:	000018ed 	.word	0x000018ed
    19f4:	00001841 	.word	0x00001841
    19f8:	000018a9 	.word	0x000018a9
    19fc:	00001825 	.word	0x00001825
    1a00:	00001801 	.word	0x00001801
    1a04:	00001813 	.word	0x00001813

00001a08 <_usb_d_find_ep>:
 * \return Index of endpoint descriptor.
 * \retval >=0 The index.
 * \retval <0 Not found (endpoint is not initialized).
 */
static int8_t _usb_d_find_ep(const uint8_t ep)
{
    1a08:	b510      	push	{r4, lr}
    1a0a:	0001      	movs	r1, r0
	int8_t i;
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    1a0c:	2000      	movs	r0, #0
    1a0e:	e001      	b.n	1a14 <_usb_d_find_ep+0xc>
    1a10:	3001      	adds	r0, #1
    1a12:	b240      	sxtb	r0, r0
    1a14:	2803      	cmp	r0, #3
    1a16:	dc0f      	bgt.n	1a38 <_usb_d_find_ep+0x30>
		if (usb_d_inst.ep[i].xfer.hdr.ep == ep) {
    1a18:	0142      	lsls	r2, r0, #5
    1a1a:	4b09      	ldr	r3, [pc, #36]	; (1a40 <_usb_d_find_ep+0x38>)
    1a1c:	189b      	adds	r3, r3, r2
    1a1e:	785a      	ldrb	r2, [r3, #1]
    1a20:	428a      	cmp	r2, r1
    1a22:	d00b      	beq.n	1a3c <_usb_d_find_ep+0x34>
			return i;
		}
		if (usb_d_inst.ep[i].xfer.hdr.type == USB_EP_XTYPE_CTRL
    1a24:	0143      	lsls	r3, r0, #5
    1a26:	4c06      	ldr	r4, [pc, #24]	; (1a40 <_usb_d_find_ep+0x38>)
    1a28:	5d1b      	ldrb	r3, [r3, r4]
    1a2a:	2b00      	cmp	r3, #0
    1a2c:	d1f0      	bne.n	1a10 <_usb_d_find_ep+0x8>
		    && (ep & USB_EP_N_MASK) == usb_d_inst.ep[i].xfer.hdr.ep) {
    1a2e:	330f      	adds	r3, #15
    1a30:	400b      	ands	r3, r1
    1a32:	4293      	cmp	r3, r2
    1a34:	d1ec      	bne.n	1a10 <_usb_d_find_ep+0x8>
    1a36:	e001      	b.n	1a3c <_usb_d_find_ep+0x34>
			return i;
		}
	}
	return -1;
    1a38:	2001      	movs	r0, #1
    1a3a:	4240      	negs	r0, r0
}
    1a3c:	bd10      	pop	{r4, pc}
    1a3e:	46c0      	nop			; (mov r8, r8)
    1a40:	20000bf8 	.word	0x20000bf8

00001a44 <usb_d_dummy_cb_false>:
{
	(void)unused0;
	(void)unused1;
	(void)unused2;
	return false;
}
    1a44:	2000      	movs	r0, #0
    1a46:	4770      	bx	lr

00001a48 <usb_d_cb_trans_more>:
 * \brief Callback invoked when request more data
 * \param[in] ep Endpoint number with transfer direction on bit 8.
 * \param[in] transfered Number of bytes transfered.
 */
static bool usb_d_cb_trans_more(const uint8_t ep, const uint32_t transfered)
{
    1a48:	b570      	push	{r4, r5, r6, lr}
    1a4a:	0004      	movs	r4, r0
    1a4c:	000d      	movs	r5, r1
	int8_t           ep_index = _usb_d_find_ep(ep);
    1a4e:	4b08      	ldr	r3, [pc, #32]	; (1a70 <usb_d_cb_trans_more+0x28>)
    1a50:	4798      	blx	r3
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
	if (ept->xfer.hdr.state == USB_EP_S_X_DATA) {
    1a52:	0142      	lsls	r2, r0, #5
    1a54:	4b07      	ldr	r3, [pc, #28]	; (1a74 <usb_d_cb_trans_more+0x2c>)
    1a56:	189b      	adds	r3, r3, r2
    1a58:	789b      	ldrb	r3, [r3, #2]
    1a5a:	2b03      	cmp	r3, #3
    1a5c:	d001      	beq.n	1a62 <usb_d_cb_trans_more+0x1a>
		return ept->callbacks.more(ep, transfered);
	}
	return false;
    1a5e:	2000      	movs	r0, #0
}
    1a60:	bd70      	pop	{r4, r5, r6, pc}
		return ept->callbacks.more(ep, transfered);
    1a62:	4b04      	ldr	r3, [pc, #16]	; (1a74 <usb_d_cb_trans_more+0x2c>)
    1a64:	1898      	adds	r0, r3, r2
    1a66:	6983      	ldr	r3, [r0, #24]
    1a68:	0029      	movs	r1, r5
    1a6a:	0020      	movs	r0, r4
    1a6c:	4798      	blx	r3
    1a6e:	e7f7      	b.n	1a60 <usb_d_cb_trans_more+0x18>
    1a70:	00001a09 	.word	0x00001a09
    1a74:	20000bf8 	.word	0x20000bf8

00001a78 <_usb_d_cb_trans_done>:

/**
 * Callback when USB transactions are finished.
 */
static void _usb_d_cb_trans_done(const uint8_t ep, const int32_t code, const uint32_t transferred)
{
    1a78:	b5f0      	push	{r4, r5, r6, r7, lr}
    1a7a:	b087      	sub	sp, #28
    1a7c:	0005      	movs	r5, r0
    1a7e:	000f      	movs	r7, r1
    1a80:	9201      	str	r2, [sp, #4]
	int8_t           ep_index = _usb_d_find_ep(ep);
    1a82:	4b4a      	ldr	r3, [pc, #296]	; (1bac <_usb_d_cb_trans_done+0x134>)
    1a84:	4798      	blx	r3
    1a86:	0004      	movs	r4, r0
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
    1a88:	0146      	lsls	r6, r0, #5
    1a8a:	4a49      	ldr	r2, [pc, #292]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1a8c:	1996      	adds	r6, r2, r6

	if (code == USB_TRANS_DONE) {
    1a8e:	2f00      	cmp	r7, #0
    1a90:	d151      	bne.n	1b36 <_usb_d_cb_trans_done+0xbe>
		ept->xfer.hdr.status = USB_XFER_DONE;
    1a92:	0013      	movs	r3, r2
    1a94:	0142      	lsls	r2, r0, #5
    1a96:	2000      	movs	r0, #0
    1a98:	70f0      	strb	r0, [r6, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    1a9a:	5cd3      	ldrb	r3, [r2, r3]
    1a9c:	2b00      	cmp	r3, #0
    1a9e:	d00e      	beq.n	1abe <_usb_d_cb_trans_done+0x46>
			usb_d_ctrl_trans_done(ept);
			return;
		}
		ept->xfer.hdr.state = USB_EP_S_IDLE;
    1aa0:	0162      	lsls	r2, r4, #5
    1aa2:	4b43      	ldr	r3, [pc, #268]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1aa4:	189b      	adds	r3, r3, r2
    1aa6:	2201      	movs	r2, #1
    1aa8:	709a      	strb	r2, [r3, #2]
	} else {
		ept->xfer.hdr.state  = USB_EP_S_ERROR;
		ept->xfer.hdr.status = USB_XFER_ERROR;
	}

	ept->callbacks.xfer(ep, (enum usb_xfer_code)ept->xfer.hdr.status, (void *)transferred);
    1aaa:	0164      	lsls	r4, r4, #5
    1aac:	4b40      	ldr	r3, [pc, #256]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1aae:	191c      	adds	r4, r3, r4
    1ab0:	69e3      	ldr	r3, [r4, #28]
    1ab2:	78e1      	ldrb	r1, [r4, #3]
    1ab4:	9a01      	ldr	r2, [sp, #4]
    1ab6:	0028      	movs	r0, r5
    1ab8:	4798      	blx	r3
}
    1aba:	b007      	add	sp, #28
    1abc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint8_t state   = ept->xfer.hdr.state;
    1abe:	78b3      	ldrb	r3, [r6, #2]
    1ac0:	240c      	movs	r4, #12
    1ac2:	5734      	ldrsb	r4, [r6, r4]
	if (state == USB_EP_S_X_DATA) {
    1ac4:	2b03      	cmp	r3, #3
    1ac6:	d008      	beq.n	1ada <_usb_d_cb_trans_done+0x62>
		ept->callbacks.xfer(ept->xfer.hdr.ep, USB_XFER_DONE, ept->xfer.req);
    1ac8:	0032      	movs	r2, r6
    1aca:	320c      	adds	r2, #12
    1acc:	7870      	ldrb	r0, [r6, #1]
    1ace:	2100      	movs	r1, #0
    1ad0:	69f3      	ldr	r3, [r6, #28]
    1ad2:	4798      	blx	r3
		ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    1ad4:	2302      	movs	r3, #2
    1ad6:	70b3      	strb	r3, [r6, #2]
    1ad8:	e7ef      	b.n	1aba <_usb_d_cb_trans_done+0x42>
		bool err = ept->callbacks.xfer(ept->xfer.hdr.ep, USB_XFER_DATA, ept->xfer.req);
    1ada:	7870      	ldrb	r0, [r6, #1]
    1adc:	0032      	movs	r2, r6
    1ade:	320c      	adds	r2, #12
    1ae0:	2101      	movs	r1, #1
    1ae2:	69f3      	ldr	r3, [r6, #28]
    1ae4:	4798      	blx	r3
		if (err) {
    1ae6:	2800      	cmp	r0, #0
    1ae8:	d010      	beq.n	1b0c <_usb_d_cb_trans_done+0x94>
			ept->xfer.hdr.state  = USB_EP_S_HALTED;
    1aea:	2305      	movs	r3, #5
    1aec:	70b3      	strb	r3, [r6, #2]
			ept->xfer.hdr.status = USB_XFER_HALT;
    1aee:	3b03      	subs	r3, #3
    1af0:	70f3      	strb	r3, [r6, #3]
			_usb_d_dev_ep_stall(req_dir ? ept->xfer.hdr.ep : (ept->xfer.hdr.ep | USB_EP_DIR), USB_EP_STALL_SET);
    1af2:	2c00      	cmp	r4, #0
    1af4:	db08      	blt.n	1b08 <_usb_d_cb_trans_done+0x90>
    1af6:	7873      	ldrb	r3, [r6, #1]
    1af8:	2080      	movs	r0, #128	; 0x80
    1afa:	4240      	negs	r0, r0
    1afc:	4318      	orrs	r0, r3
    1afe:	b2c0      	uxtb	r0, r0
    1b00:	2101      	movs	r1, #1
    1b02:	4b2c      	ldr	r3, [pc, #176]	; (1bb4 <_usb_d_cb_trans_done+0x13c>)
    1b04:	4798      	blx	r3
    1b06:	e7d8      	b.n	1aba <_usb_d_cb_trans_done+0x42>
    1b08:	7870      	ldrb	r0, [r6, #1]
    1b0a:	e7f9      	b.n	1b00 <_usb_d_cb_trans_done+0x88>
			ept->xfer.hdr.state = USB_EP_S_X_STATUS;
    1b0c:	2304      	movs	r3, #4
    1b0e:	70b3      	strb	r3, [r6, #2]
			_usb_d_trans(ept->xfer.hdr.ep, !req_dir, NULL, 0, 1);
    1b10:	7871      	ldrb	r1, [r6, #1]
	struct usb_d_transfer trans
    1b12:	2200      	movs	r2, #0
    1b14:	9203      	str	r2, [sp, #12]
    1b16:	9204      	str	r2, [sp, #16]
    1b18:	2c00      	cmp	r4, #0
    1b1a:	db09      	blt.n	1b30 <_usb_d_cb_trans_done+0xb8>
    1b1c:	3b84      	subs	r3, #132	; 0x84
    1b1e:	430b      	orrs	r3, r1
    1b20:	b2da      	uxtb	r2, r3
    1b22:	a803      	add	r0, sp, #12
    1b24:	7202      	strb	r2, [r0, #8]
    1b26:	2301      	movs	r3, #1
    1b28:	7243      	strb	r3, [r0, #9]
	return _usb_d_dev_ep_trans(&trans);
    1b2a:	4b23      	ldr	r3, [pc, #140]	; (1bb8 <_usb_d_cb_trans_done+0x140>)
    1b2c:	4798      	blx	r3
    1b2e:	e7c4      	b.n	1aba <_usb_d_cb_trans_done+0x42>
	struct usb_d_transfer trans
    1b30:	220f      	movs	r2, #15
    1b32:	400a      	ands	r2, r1
    1b34:	e7f5      	b.n	1b22 <_usb_d_cb_trans_done+0xaa>
	} else if (code == USB_TRANS_STALL) {
    1b36:	2f01      	cmp	r7, #1
    1b38:	d00a      	beq.n	1b50 <_usb_d_cb_trans_done+0xd8>
	} else if (code == USB_TRANS_ABORT) {
    1b3a:	2f02      	cmp	r7, #2
    1b3c:	d01d      	beq.n	1b7a <_usb_d_cb_trans_done+0x102>
	} else if (code == USB_TRANS_RESET) {
    1b3e:	2f03      	cmp	r7, #3
    1b40:	d02c      	beq.n	1b9c <_usb_d_cb_trans_done+0x124>
		ept->xfer.hdr.state  = USB_EP_S_ERROR;
    1b42:	0142      	lsls	r2, r0, #5
    1b44:	4b1a      	ldr	r3, [pc, #104]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1b46:	189b      	adds	r3, r3, r2
    1b48:	2206      	movs	r2, #6
    1b4a:	709a      	strb	r2, [r3, #2]
		ept->xfer.hdr.status = USB_XFER_ERROR;
    1b4c:	70da      	strb	r2, [r3, #3]
    1b4e:	e7ac      	b.n	1aaa <_usb_d_cb_trans_done+0x32>
		ept->xfer.hdr.status = USB_XFER_HALT;
    1b50:	4b17      	ldr	r3, [pc, #92]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1b52:	0142      	lsls	r2, r0, #5
    1b54:	1899      	adds	r1, r3, r2
    1b56:	2002      	movs	r0, #2
    1b58:	70c8      	strb	r0, [r1, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    1b5a:	5cd3      	ldrb	r3, [r2, r3]
    1b5c:	2b00      	cmp	r3, #0
    1b5e:	d005      	beq.n	1b6c <_usb_d_cb_trans_done+0xf4>
			ept->xfer.hdr.state = USB_EP_S_HALTED;
    1b60:	0162      	lsls	r2, r4, #5
    1b62:	4b13      	ldr	r3, [pc, #76]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1b64:	189b      	adds	r3, r3, r2
    1b66:	2205      	movs	r2, #5
    1b68:	709a      	strb	r2, [r3, #2]
    1b6a:	e79e      	b.n	1aaa <_usb_d_cb_trans_done+0x32>
			ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    1b6c:	2202      	movs	r2, #2
    1b6e:	708a      	strb	r2, [r1, #2]
			_usb_d_dev_ep_stall(ep, USB_EP_STALL_CLR);
    1b70:	2100      	movs	r1, #0
    1b72:	0028      	movs	r0, r5
    1b74:	4b0f      	ldr	r3, [pc, #60]	; (1bb4 <_usb_d_cb_trans_done+0x13c>)
    1b76:	4798      	blx	r3
    1b78:	e797      	b.n	1aaa <_usb_d_cb_trans_done+0x32>
		ept->xfer.hdr.status = USB_XFER_ABORT;
    1b7a:	4b0d      	ldr	r3, [pc, #52]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1b7c:	0142      	lsls	r2, r0, #5
    1b7e:	1899      	adds	r1, r3, r2
    1b80:	2004      	movs	r0, #4
    1b82:	70c8      	strb	r0, [r1, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    1b84:	5cd3      	ldrb	r3, [r2, r3]
    1b86:	2b00      	cmp	r3, #0
    1b88:	d005      	beq.n	1b96 <_usb_d_cb_trans_done+0x11e>
		ept->xfer.hdr.state = USB_EP_S_IDLE;
    1b8a:	0162      	lsls	r2, r4, #5
    1b8c:	4b08      	ldr	r3, [pc, #32]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1b8e:	189b      	adds	r3, r3, r2
    1b90:	2201      	movs	r2, #1
    1b92:	709a      	strb	r2, [r3, #2]
    1b94:	e789      	b.n	1aaa <_usb_d_cb_trans_done+0x32>
			ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    1b96:	2302      	movs	r3, #2
    1b98:	708b      	strb	r3, [r1, #2]
			return;
    1b9a:	e78e      	b.n	1aba <_usb_d_cb_trans_done+0x42>
		ept->xfer.hdr.state  = USB_EP_S_DISABLED;
    1b9c:	0142      	lsls	r2, r0, #5
    1b9e:	4b04      	ldr	r3, [pc, #16]	; (1bb0 <_usb_d_cb_trans_done+0x138>)
    1ba0:	189b      	adds	r3, r3, r2
    1ba2:	2200      	movs	r2, #0
    1ba4:	709a      	strb	r2, [r3, #2]
		ept->xfer.hdr.status = USB_XFER_RESET;
    1ba6:	3205      	adds	r2, #5
    1ba8:	70da      	strb	r2, [r3, #3]
    1baa:	e77e      	b.n	1aaa <_usb_d_cb_trans_done+0x32>
    1bac:	00001a09 	.word	0x00001a09
    1bb0:	20000bf8 	.word	0x20000bf8
    1bb4:	00003cb5 	.word	0x00003cb5
    1bb8:	00003e85 	.word	0x00003e85

00001bbc <usb_d_cb_trans_setup>:
{
    1bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1bbe:	46c6      	mov	lr, r8
    1bc0:	b500      	push	{lr}
    1bc2:	0005      	movs	r5, r0
	int8_t           ep_index = _usb_d_find_ep(ep);
    1bc4:	4b1f      	ldr	r3, [pc, #124]	; (1c44 <usb_d_cb_trans_setup+0x88>)
    1bc6:	4798      	blx	r3
    1bc8:	0006      	movs	r6, r0
	uint8_t *        req      = ept->xfer.req;
    1bca:	0143      	lsls	r3, r0, #5
    1bcc:	3308      	adds	r3, #8
    1bce:	4c1e      	ldr	r4, [pc, #120]	; (1c48 <usb_d_cb_trans_setup+0x8c>)
    1bd0:	18e4      	adds	r4, r4, r3
    1bd2:	3404      	adds	r4, #4
	uint8_t n = _usb_d_dev_ep_read_req(ep, req);
    1bd4:	0021      	movs	r1, r4
    1bd6:	0028      	movs	r0, r5
    1bd8:	4b1c      	ldr	r3, [pc, #112]	; (1c4c <usb_d_cb_trans_setup+0x90>)
    1bda:	4798      	blx	r3
    1bdc:	b2c0      	uxtb	r0, r0
	if (n != 8) {
    1bde:	2808      	cmp	r0, #8
    1be0:	d00c      	beq.n	1bfc <usb_d_cb_trans_setup+0x40>
		_usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
    1be2:	2101      	movs	r1, #1
    1be4:	0028      	movs	r0, r5
    1be6:	4c1a      	ldr	r4, [pc, #104]	; (1c50 <usb_d_cb_trans_setup+0x94>)
    1be8:	47a0      	blx	r4
		_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_SET);
    1bea:	2080      	movs	r0, #128	; 0x80
    1bec:	4240      	negs	r0, r0
    1bee:	4328      	orrs	r0, r5
    1bf0:	b2c0      	uxtb	r0, r0
    1bf2:	2101      	movs	r1, #1
    1bf4:	47a0      	blx	r4
}
    1bf6:	bc04      	pop	{r2}
    1bf8:	4690      	mov	r8, r2
    1bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	_usb_d_dev_ep_stall(ep, USB_EP_STALL_CLR);
    1bfc:	2100      	movs	r1, #0
    1bfe:	0028      	movs	r0, r5
    1c00:	4b13      	ldr	r3, [pc, #76]	; (1c50 <usb_d_cb_trans_setup+0x94>)
    1c02:	4698      	mov	r8, r3
    1c04:	4798      	blx	r3
	_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_CLR);
    1c06:	2780      	movs	r7, #128	; 0x80
    1c08:	427f      	negs	r7, r7
    1c0a:	432f      	orrs	r7, r5
    1c0c:	b2ff      	uxtb	r7, r7
    1c0e:	2100      	movs	r1, #0
    1c10:	0038      	movs	r0, r7
    1c12:	47c0      	blx	r8
	ept->xfer.hdr.state = USB_EP_S_IDLE;
    1c14:	0172      	lsls	r2, r6, #5
    1c16:	4b0c      	ldr	r3, [pc, #48]	; (1c48 <usb_d_cb_trans_setup+0x8c>)
    1c18:	189b      	adds	r3, r3, r2
    1c1a:	2201      	movs	r2, #1
    1c1c:	709a      	strb	r2, [r3, #2]
	if (!ept->callbacks.req(ep, req)) {
    1c1e:	695b      	ldr	r3, [r3, #20]
    1c20:	0021      	movs	r1, r4
    1c22:	0028      	movs	r0, r5
    1c24:	4798      	blx	r3
    1c26:	2800      	cmp	r0, #0
    1c28:	d1e5      	bne.n	1bf6 <usb_d_cb_trans_setup+0x3a>
		ept->xfer.hdr.state = USB_EP_S_HALTED;
    1c2a:	0176      	lsls	r6, r6, #5
    1c2c:	4b06      	ldr	r3, [pc, #24]	; (1c48 <usb_d_cb_trans_setup+0x8c>)
    1c2e:	199e      	adds	r6, r3, r6
    1c30:	2305      	movs	r3, #5
    1c32:	70b3      	strb	r3, [r6, #2]
		_usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
    1c34:	2101      	movs	r1, #1
    1c36:	0028      	movs	r0, r5
    1c38:	4c05      	ldr	r4, [pc, #20]	; (1c50 <usb_d_cb_trans_setup+0x94>)
    1c3a:	47a0      	blx	r4
		_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_SET);
    1c3c:	2101      	movs	r1, #1
    1c3e:	0038      	movs	r0, r7
    1c40:	47a0      	blx	r4
    1c42:	e7d8      	b.n	1bf6 <usb_d_cb_trans_setup+0x3a>
    1c44:	00001a09 	.word	0x00001a09
    1c48:	20000bf8 	.word	0x20000bf8
    1c4c:	00003e0d 	.word	0x00003e0d
    1c50:	00003cb5 	.word	0x00003cb5

00001c54 <usb_d_init>:

int32_t usb_d_init(void)
{
    1c54:	b510      	push	{r4, lr}
	int32_t rc = _usb_d_dev_init();
    1c56:	4b12      	ldr	r3, [pc, #72]	; (1ca0 <usb_d_init+0x4c>)
    1c58:	4798      	blx	r3
	uint8_t i;
	if (rc < 0) {
    1c5a:	2800      	cmp	r0, #0
    1c5c:	db1e      	blt.n	1c9c <usb_d_init+0x48>
		return rc;
	}
	memset(usb_d_inst.ep, 0x00, sizeof(struct usb_d_ep) * CONF_USB_D_NUM_EP_SP);
    1c5e:	2280      	movs	r2, #128	; 0x80
    1c60:	2100      	movs	r1, #0
    1c62:	4810      	ldr	r0, [pc, #64]	; (1ca4 <usb_d_init+0x50>)
    1c64:	4b10      	ldr	r3, [pc, #64]	; (1ca8 <usb_d_init+0x54>)
    1c66:	4798      	blx	r3
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    1c68:	2200      	movs	r2, #0
    1c6a:	e00a      	b.n	1c82 <usb_d_init+0x2e>
		usb_d_inst.ep[i].xfer.hdr.ep    = 0xFF;
    1c6c:	0151      	lsls	r1, r2, #5
    1c6e:	4b0d      	ldr	r3, [pc, #52]	; (1ca4 <usb_d_init+0x50>)
    1c70:	185b      	adds	r3, r3, r1
    1c72:	21ff      	movs	r1, #255	; 0xff
    1c74:	7059      	strb	r1, [r3, #1]
		usb_d_inst.ep[i].callbacks.req  = (usb_d_ep_cb_setup_t)usb_d_dummy_cb_false;
    1c76:	490d      	ldr	r1, [pc, #52]	; (1cac <usb_d_init+0x58>)
    1c78:	6159      	str	r1, [r3, #20]
		usb_d_inst.ep[i].callbacks.more = (usb_d_ep_cb_more_t)usb_d_dummy_cb_false;
    1c7a:	6199      	str	r1, [r3, #24]
		usb_d_inst.ep[i].callbacks.xfer = (usb_d_ep_cb_xfer_t)usb_d_dummy_cb_false;
    1c7c:	61d9      	str	r1, [r3, #28]
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    1c7e:	3201      	adds	r2, #1
    1c80:	b2d2      	uxtb	r2, r2
    1c82:	2a03      	cmp	r2, #3
    1c84:	d9f2      	bls.n	1c6c <usb_d_init+0x18>
	}
	/* Handles device driver endpoint callbacks to build transfer. */
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_SETUP, (FUNC_PTR)usb_d_cb_trans_setup);
    1c86:	490a      	ldr	r1, [pc, #40]	; (1cb0 <usb_d_init+0x5c>)
    1c88:	2000      	movs	r0, #0
    1c8a:	4c0a      	ldr	r4, [pc, #40]	; (1cb4 <usb_d_init+0x60>)
    1c8c:	47a0      	blx	r4
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_MORE, (FUNC_PTR)usb_d_cb_trans_more);
    1c8e:	490a      	ldr	r1, [pc, #40]	; (1cb8 <usb_d_init+0x64>)
    1c90:	2001      	movs	r0, #1
    1c92:	47a0      	blx	r4
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_DONE, (FUNC_PTR)_usb_d_cb_trans_done);
    1c94:	4909      	ldr	r1, [pc, #36]	; (1cbc <usb_d_init+0x68>)
    1c96:	2002      	movs	r0, #2
    1c98:	47a0      	blx	r4
	return ERR_NONE;
    1c9a:	2000      	movs	r0, #0
}
    1c9c:	bd10      	pop	{r4, pc}
    1c9e:	46c0      	nop			; (mov r8, r8)
    1ca0:	00003681 	.word	0x00003681
    1ca4:	20000bf8 	.word	0x20000bf8
    1ca8:	000092f1 	.word	0x000092f1
    1cac:	00001a45 	.word	0x00001a45
    1cb0:	00001bbd 	.word	0x00001bbd
    1cb4:	00004085 	.word	0x00004085
    1cb8:	00001a49 	.word	0x00001a49
    1cbc:	00001a79 	.word	0x00001a79

00001cc0 <usb_d_register_callback>:
{
	_usb_d_dev_deinit();
}

void usb_d_register_callback(const enum usb_d_cb_type type, const FUNC_PTR func)
{
    1cc0:	b510      	push	{r4, lr}
	/* Directly uses device driver callback. */
	_usb_d_dev_register_callback(type, func);
    1cc2:	4b01      	ldr	r3, [pc, #4]	; (1cc8 <usb_d_register_callback+0x8>)
    1cc4:	4798      	blx	r3
}
    1cc6:	bd10      	pop	{r4, pc}
    1cc8:	00004061 	.word	0x00004061

00001ccc <usb_d_enable>:

int32_t usb_d_enable(void)
{
    1ccc:	b510      	push	{r4, lr}
	return _usb_d_dev_enable();
    1cce:	4b01      	ldr	r3, [pc, #4]	; (1cd4 <usb_d_enable+0x8>)
    1cd0:	4798      	blx	r3
}
    1cd2:	bd10      	pop	{r4, pc}
    1cd4:	00003729 	.word	0x00003729

00001cd8 <usb_d_attach>:
{
	_usb_d_dev_disable();
}

void usb_d_attach(void)
{
    1cd8:	b510      	push	{r4, lr}
	_usb_d_dev_attach();
    1cda:	4b01      	ldr	r3, [pc, #4]	; (1ce0 <usb_d_attach+0x8>)
    1cdc:	4798      	blx	r3
}
    1cde:	bd10      	pop	{r4, pc}
    1ce0:	00003779 	.word	0x00003779

00001ce4 <usb_d_set_address>:
{
	return _usb_d_dev_get_uframe_n();
}

void usb_d_set_address(const uint8_t addr)
{
    1ce4:	b510      	push	{r4, lr}
	_usb_d_dev_set_address(addr);
    1ce6:	4b01      	ldr	r3, [pc, #4]	; (1cec <usb_d_set_address+0x8>)
    1ce8:	4798      	blx	r3
}
    1cea:	bd10      	pop	{r4, pc}
    1cec:	00003789 	.word	0x00003789

00001cf0 <usb_d_ep_init>:
{
	return usb_d_ep_init(0, USB_EP_XTYPE_CTRL, max_pkt_size);
}

int32_t usb_d_ep_init(const uint8_t ep, const uint8_t attr, const uint16_t max_pkt_size)
{
    1cf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1cf2:	0005      	movs	r5, r0
    1cf4:	000e      	movs	r6, r1
    1cf6:	0017      	movs	r7, r2
	int32_t          rc;
	int8_t           ep_index = _usb_d_find_ep(ep);
    1cf8:	4b0f      	ldr	r3, [pc, #60]	; (1d38 <usb_d_ep_init+0x48>)
    1cfa:	4798      	blx	r3
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
	if (ep_index >= 0) {
    1cfc:	2800      	cmp	r0, #0
    1cfe:	da14      	bge.n	1d2a <usb_d_ep_init+0x3a>
		return -USB_ERR_REDO;
	} else {
		ep_index = _usb_d_find_ep(0xFF);
    1d00:	20ff      	movs	r0, #255	; 0xff
    1d02:	4b0d      	ldr	r3, [pc, #52]	; (1d38 <usb_d_ep_init+0x48>)
    1d04:	4798      	blx	r3
    1d06:	1e04      	subs	r4, r0, #0
		if (ep_index < 0) {
    1d08:	db12      	blt.n	1d30 <usb_d_ep_init+0x40>
			return -USB_ERR_ALLOC_FAIL;
		}
		ept = &usb_d_inst.ep[ep_index];
	}
	rc = _usb_d_dev_ep_init(ep, attr, max_pkt_size);
    1d0a:	003a      	movs	r2, r7
    1d0c:	0031      	movs	r1, r6
    1d0e:	0028      	movs	r0, r5
    1d10:	4b0a      	ldr	r3, [pc, #40]	; (1d3c <usb_d_ep_init+0x4c>)
    1d12:	4798      	blx	r3
	if (rc < 0) {
    1d14:	2800      	cmp	r0, #0
    1d16:	db07      	blt.n	1d28 <usb_d_ep_init+0x38>
		return rc;
	}
	ept->xfer.hdr.ep   = ep;
    1d18:	4a09      	ldr	r2, [pc, #36]	; (1d40 <usb_d_ep_init+0x50>)
    1d1a:	0164      	lsls	r4, r4, #5
    1d1c:	1913      	adds	r3, r2, r4
    1d1e:	705d      	strb	r5, [r3, #1]
	ept->xfer.hdr.type = attr & USB_EP_XTYPE_MASK;
    1d20:	2303      	movs	r3, #3
    1d22:	401e      	ands	r6, r3
    1d24:	54a6      	strb	r6, [r4, r2]
	return ERR_NONE;
    1d26:	2000      	movs	r0, #0
}
    1d28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return -USB_ERR_REDO;
    1d2a:	2014      	movs	r0, #20
    1d2c:	4240      	negs	r0, r0
    1d2e:	e7fb      	b.n	1d28 <usb_d_ep_init+0x38>
			return -USB_ERR_ALLOC_FAIL;
    1d30:	2015      	movs	r0, #21
    1d32:	4240      	negs	r0, r0
    1d34:	e7f8      	b.n	1d28 <usb_d_ep_init+0x38>
    1d36:	46c0      	nop			; (mov r8, r8)
    1d38:	00001a09 	.word	0x00001a09
    1d3c:	0000379d 	.word	0x0000379d
    1d40:	20000bf8 	.word	0x20000bf8

00001d44 <usb_d_ep0_init>:
{
    1d44:	b510      	push	{r4, lr}
	return usb_d_ep_init(0, USB_EP_XTYPE_CTRL, max_pkt_size);
    1d46:	b282      	uxth	r2, r0
    1d48:	2100      	movs	r1, #0
    1d4a:	2000      	movs	r0, #0
    1d4c:	4b01      	ldr	r3, [pc, #4]	; (1d54 <usb_d_ep0_init+0x10>)
    1d4e:	4798      	blx	r3
}
    1d50:	bd10      	pop	{r4, pc}
    1d52:	46c0      	nop			; (mov r8, r8)
    1d54:	00001cf1 	.word	0x00001cf1

00001d58 <usb_d_ep_deinit>:

void usb_d_ep_deinit(const uint8_t ep)
{
    1d58:	b570      	push	{r4, r5, r6, lr}
    1d5a:	0005      	movs	r5, r0
	int8_t           ep_index = _usb_d_find_ep(ep);
    1d5c:	4b06      	ldr	r3, [pc, #24]	; (1d78 <usb_d_ep_deinit+0x20>)
    1d5e:	4798      	blx	r3
    1d60:	1e04      	subs	r4, r0, #0
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
	if (ep_index < 0) {
    1d62:	db07      	blt.n	1d74 <usb_d_ep_deinit+0x1c>
		return;
	}
	_usb_d_dev_ep_deinit(ep);
    1d64:	0028      	movs	r0, r5
    1d66:	4b05      	ldr	r3, [pc, #20]	; (1d7c <usb_d_ep_deinit+0x24>)
    1d68:	4798      	blx	r3
	ept->xfer.hdr.ep = 0xFF;
    1d6a:	0164      	lsls	r4, r4, #5
    1d6c:	4b04      	ldr	r3, [pc, #16]	; (1d80 <usb_d_ep_deinit+0x28>)
    1d6e:	191c      	adds	r4, r3, r4
    1d70:	23ff      	movs	r3, #255	; 0xff
    1d72:	7063      	strb	r3, [r4, #1]
}
    1d74:	bd70      	pop	{r4, r5, r6, pc}
    1d76:	46c0      	nop			; (mov r8, r8)
    1d78:	00001a09 	.word	0x00001a09
    1d7c:	000038e9 	.word	0x000038e9
    1d80:	20000bf8 	.word	0x20000bf8

00001d84 <usb_d_ep_enable>:

int32_t usb_d_ep_enable(const uint8_t ep)
{
    1d84:	b570      	push	{r4, r5, r6, lr}
    1d86:	0005      	movs	r5, r0
	int8_t           ep_index = _usb_d_find_ep(ep);
    1d88:	4b0f      	ldr	r3, [pc, #60]	; (1dc8 <usb_d_ep_enable+0x44>)
    1d8a:	4798      	blx	r3
    1d8c:	1e04      	subs	r4, r0, #0
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
	int32_t          rc;
	if (ep_index < 0) {
    1d8e:	db17      	blt.n	1dc0 <usb_d_ep_enable+0x3c>
		return -USB_ERR_PARAM;
	}
	ept->xfer.hdr.state = (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) ? USB_EP_S_X_SETUP : USB_EP_S_IDLE;
    1d90:	0143      	lsls	r3, r0, #5
    1d92:	4a0e      	ldr	r2, [pc, #56]	; (1dcc <usb_d_ep_enable+0x48>)
    1d94:	5c9b      	ldrb	r3, [r3, r2]
    1d96:	2b00      	cmp	r3, #0
    1d98:	d10a      	bne.n	1db0 <usb_d_ep_enable+0x2c>
    1d9a:	2102      	movs	r1, #2
    1d9c:	0162      	lsls	r2, r4, #5
    1d9e:	4b0b      	ldr	r3, [pc, #44]	; (1dcc <usb_d_ep_enable+0x48>)
    1da0:	189b      	adds	r3, r3, r2
    1da2:	7099      	strb	r1, [r3, #2]
	rc                  = _usb_d_dev_ep_enable(ep);
    1da4:	0028      	movs	r0, r5
    1da6:	4b0a      	ldr	r3, [pc, #40]	; (1dd0 <usb_d_ep_enable+0x4c>)
    1da8:	4798      	blx	r3
	if (rc < 0) {
    1daa:	2800      	cmp	r0, #0
    1dac:	db02      	blt.n	1db4 <usb_d_ep_enable+0x30>
		ept->xfer.hdr.state = USB_EP_S_DISABLED;
	}
	return rc;
}
    1dae:	bd70      	pop	{r4, r5, r6, pc}
	ept->xfer.hdr.state = (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) ? USB_EP_S_X_SETUP : USB_EP_S_IDLE;
    1db0:	2101      	movs	r1, #1
    1db2:	e7f3      	b.n	1d9c <usb_d_ep_enable+0x18>
		ept->xfer.hdr.state = USB_EP_S_DISABLED;
    1db4:	0164      	lsls	r4, r4, #5
    1db6:	4b05      	ldr	r3, [pc, #20]	; (1dcc <usb_d_ep_enable+0x48>)
    1db8:	191c      	adds	r4, r3, r4
    1dba:	2300      	movs	r3, #0
    1dbc:	70a3      	strb	r3, [r4, #2]
    1dbe:	e7f6      	b.n	1dae <usb_d_ep_enable+0x2a>
		return -USB_ERR_PARAM;
    1dc0:	2012      	movs	r0, #18
    1dc2:	4240      	negs	r0, r0
    1dc4:	e7f3      	b.n	1dae <usb_d_ep_enable+0x2a>
    1dc6:	46c0      	nop			; (mov r8, r8)
    1dc8:	00001a09 	.word	0x00001a09
    1dcc:	20000bf8 	.word	0x20000bf8
    1dd0:	000039ad 	.word	0x000039ad

00001dd4 <usb_d_ep_transfer>:
	}
	return usb_d_inst.ep[ep_index].xfer.req;
}

int32_t usb_d_ep_transfer(const struct usb_d_transfer *xfer)
{
    1dd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    1dd6:	46d6      	mov	lr, sl
    1dd8:	464f      	mov	r7, r9
    1dda:	4646      	mov	r6, r8
    1ddc:	b5c0      	push	{r6, r7, lr}
    1dde:	b086      	sub	sp, #24
    1de0:	0005      	movs	r5, r0
	int8_t                ep_index = _usb_d_find_ep(xfer->ep);
    1de2:	7a06      	ldrb	r6, [r0, #8]
    1de4:	0030      	movs	r0, r6
    1de6:	4b3f      	ldr	r3, [pc, #252]	; (1ee4 <usb_d_ep_transfer+0x110>)
    1de8:	4798      	blx	r3
    1dea:	0007      	movs	r7, r0
	struct usb_d_ep *     ept      = &usb_d_inst.ep[ep_index];
	bool                  dir = USB_EP_GET_DIR(xfer->ep), zlp = xfer->zlp;
    1dec:	09f6      	lsrs	r6, r6, #7
    1dee:	7a6b      	ldrb	r3, [r5, #9]
    1df0:	1e5a      	subs	r2, r3, #1
    1df2:	4193      	sbcs	r3, r2
    1df4:	b2dc      	uxtb	r4, r3
	uint32_t              len = xfer->size;
    1df6:	686b      	ldr	r3, [r5, #4]
    1df8:	4698      	mov	r8, r3
	int32_t               rc;
	volatile uint8_t      state;
	volatile hal_atomic_t flags;

	if (ep_index < 0) {
    1dfa:	2800      	cmp	r0, #0
    1dfc:	db6b      	blt.n	1ed6 <usb_d_ep_transfer+0x102>
		return -USB_ERR_PARAM;
	}

	atomic_enter_critical(&flags);
    1dfe:	a804      	add	r0, sp, #16
    1e00:	4b39      	ldr	r3, [pc, #228]	; (1ee8 <usb_d_ep_transfer+0x114>)
    1e02:	4798      	blx	r3
	state = ept->xfer.hdr.state;
    1e04:	017a      	lsls	r2, r7, #5
    1e06:	4b39      	ldr	r3, [pc, #228]	; (1eec <usb_d_ep_transfer+0x118>)
    1e08:	189b      	adds	r3, r3, r2
    1e0a:	789a      	ldrb	r2, [r3, #2]
    1e0c:	2317      	movs	r3, #23
    1e0e:	446b      	add	r3, sp
    1e10:	701a      	strb	r2, [r3, #0]
	if (state == USB_EP_S_IDLE) {
    1e12:	781b      	ldrb	r3, [r3, #0]
    1e14:	2b01      	cmp	r3, #1
    1e16:	d00e      	beq.n	1e36 <usb_d_ep_transfer+0x62>
		ept->xfer.hdr.state = USB_EP_S_X_DATA;
		atomic_leave_critical(&flags);
	} else {
		atomic_leave_critical(&flags);
    1e18:	a804      	add	r0, sp, #16
    1e1a:	4b35      	ldr	r3, [pc, #212]	; (1ef0 <usb_d_ep_transfer+0x11c>)
    1e1c:	4798      	blx	r3
		switch (state) {
    1e1e:	2317      	movs	r3, #23
    1e20:	446b      	add	r3, sp
    1e22:	781b      	ldrb	r3, [r3, #0]
    1e24:	b2db      	uxtb	r3, r3
    1e26:	2b05      	cmp	r3, #5
    1e28:	d02b      	beq.n	1e82 <usb_d_ep_transfer+0xae>
    1e2a:	2b06      	cmp	r3, #6
    1e2c:	d056      	beq.n	1edc <usb_d_ep_transfer+0x108>
    1e2e:	2b00      	cmp	r3, #0
    1e30:	d029      	beq.n	1e86 <usb_d_ep_transfer+0xb2>
		case USB_EP_S_ERROR:
			return -USB_ERROR;
		case USB_EP_S_DISABLED:
			return -USB_ERR_FUNC;
		default: /* USB_EP_S_X_xxxx  */
			return USB_BUSY;
    1e32:	2001      	movs	r0, #1
    1e34:	e01f      	b.n	1e76 <usb_d_ep_transfer+0xa2>
		ept->xfer.hdr.state = USB_EP_S_X_DATA;
    1e36:	4b2d      	ldr	r3, [pc, #180]	; (1eec <usb_d_ep_transfer+0x118>)
    1e38:	4699      	mov	r9, r3
    1e3a:	017b      	lsls	r3, r7, #5
    1e3c:	469a      	mov	sl, r3
    1e3e:	464b      	mov	r3, r9
    1e40:	4453      	add	r3, sl
    1e42:	2203      	movs	r2, #3
    1e44:	709a      	strb	r2, [r3, #2]
		atomic_leave_critical(&flags);
    1e46:	a804      	add	r0, sp, #16
    1e48:	4b29      	ldr	r3, [pc, #164]	; (1ef0 <usb_d_ep_transfer+0x11c>)
    1e4a:	4798      	blx	r3
		}
	}

	if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    1e4c:	464b      	mov	r3, r9
    1e4e:	4652      	mov	r2, sl
    1e50:	5cd3      	ldrb	r3, [r2, r3]
    1e52:	2b00      	cmp	r3, #0
    1e54:	d01a      	beq.n	1e8c <usb_d_ep_transfer+0xb8>
				zlp = false;
			}
		}
	}

	rc = _usb_d_trans(xfer->ep, dir, xfer->buf, len, zlp);
    1e56:	7a29      	ldrb	r1, [r5, #8]
    1e58:	682b      	ldr	r3, [r5, #0]
    1e5a:	9301      	str	r3, [sp, #4]
	struct usb_d_transfer trans
    1e5c:	4643      	mov	r3, r8
    1e5e:	9302      	str	r3, [sp, #8]
    1e60:	2e00      	cmp	r6, #0
    1e62:	d035      	beq.n	1ed0 <usb_d_ep_transfer+0xfc>
    1e64:	2280      	movs	r2, #128	; 0x80
    1e66:	4252      	negs	r2, r2
    1e68:	430a      	orrs	r2, r1
    1e6a:	b2d2      	uxtb	r2, r2
    1e6c:	a801      	add	r0, sp, #4
    1e6e:	7202      	strb	r2, [r0, #8]
    1e70:	7244      	strb	r4, [r0, #9]
	return _usb_d_dev_ep_trans(&trans);
    1e72:	4b20      	ldr	r3, [pc, #128]	; (1ef4 <usb_d_ep_transfer+0x120>)
    1e74:	4798      	blx	r3
	return rc;
}
    1e76:	b006      	add	sp, #24
    1e78:	bc1c      	pop	{r2, r3, r4}
    1e7a:	4690      	mov	r8, r2
    1e7c:	4699      	mov	r9, r3
    1e7e:	46a2      	mov	sl, r4
    1e80:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return USB_HALTED;
    1e82:	2002      	movs	r0, #2
    1e84:	e7f7      	b.n	1e76 <usb_d_ep_transfer+0xa2>
			return -USB_ERR_FUNC;
    1e86:	2013      	movs	r0, #19
    1e88:	4240      	negs	r0, r0
    1e8a:	e7f4      	b.n	1e76 <usb_d_ep_transfer+0xa2>
		uint16_t req_len = USB_GET_wLength(ept->xfer.req);
    1e8c:	017b      	lsls	r3, r7, #5
    1e8e:	4a17      	ldr	r2, [pc, #92]	; (1eec <usb_d_ep_transfer+0x118>)
    1e90:	18d2      	adds	r2, r2, r3
    1e92:	7c93      	ldrb	r3, [r2, #18]
    1e94:	7cd4      	ldrb	r4, [r2, #19]
    1e96:	0224      	lsls	r4, r4, #8
    1e98:	191b      	adds	r3, r3, r4
    1e9a:	b29b      	uxth	r3, r3
		if (req_len == 0) {
    1e9c:	2b00      	cmp	r3, #0
    1e9e:	d106      	bne.n	1eae <usb_d_ep_transfer+0xda>
			ept->xfer.hdr.state = USB_EP_S_X_STATUS;
    1ea0:	2304      	movs	r3, #4
    1ea2:	7093      	strb	r3, [r2, #2]
			len                 = 0;
    1ea4:	2300      	movs	r3, #0
    1ea6:	4698      	mov	r8, r3
			zlp                 = true;
    1ea8:	2401      	movs	r4, #1
			dir                 = true;
    1eaa:	2601      	movs	r6, #1
    1eac:	e7d3      	b.n	1e56 <usb_d_ep_transfer+0x82>
			dir = (USB_GET_bmRequestType(ept->xfer.req) & USB_REQ_TYPE_IN);
    1eae:	017f      	lsls	r7, r7, #5
    1eb0:	4a0e      	ldr	r2, [pc, #56]	; (1eec <usb_d_ep_transfer+0x118>)
    1eb2:	19d7      	adds	r7, r2, r7
    1eb4:	220c      	movs	r2, #12
    1eb6:	56ba      	ldrsb	r2, [r7, r2]
    1eb8:	0fd6      	lsrs	r6, r2, #31
			if (len > req_len) {
    1eba:	4598      	cmp	r8, r3
    1ebc:	d900      	bls.n	1ec0 <usb_d_ep_transfer+0xec>
				len = req_len;
    1ebe:	4698      	mov	r8, r3
			if (dir) {
    1ec0:	2a00      	cmp	r2, #0
    1ec2:	db01      	blt.n	1ec8 <usb_d_ep_transfer+0xf4>
				zlp = false;
    1ec4:	2400      	movs	r4, #0
    1ec6:	e7c6      	b.n	1e56 <usb_d_ep_transfer+0x82>
				zlp = (req_len > len);
    1ec8:	4598      	cmp	r8, r3
    1eca:	419b      	sbcs	r3, r3
    1ecc:	425c      	negs	r4, r3
    1ece:	e7c2      	b.n	1e56 <usb_d_ep_transfer+0x82>
	struct usb_d_transfer trans
    1ed0:	220f      	movs	r2, #15
    1ed2:	400a      	ands	r2, r1
    1ed4:	e7ca      	b.n	1e6c <usb_d_ep_transfer+0x98>
		return -USB_ERR_PARAM;
    1ed6:	2012      	movs	r0, #18
    1ed8:	4240      	negs	r0, r0
    1eda:	e7cc      	b.n	1e76 <usb_d_ep_transfer+0xa2>
			return -USB_ERROR;
    1edc:	2010      	movs	r0, #16
    1ede:	4240      	negs	r0, r0
    1ee0:	e7c9      	b.n	1e76 <usb_d_ep_transfer+0xa2>
    1ee2:	46c0      	nop			; (mov r8, r8)
    1ee4:	00001a09 	.word	0x00001a09
    1ee8:	00001409 	.word	0x00001409
    1eec:	20000bf8 	.word	0x20000bf8
    1ef0:	00001417 	.word	0x00001417
    1ef4:	00003e85 	.word	0x00003e85

00001ef8 <usb_d_ep_halt>:
	}
	return ERR_NONE;
}

int32_t usb_d_ep_halt(const uint8_t ep, const enum usb_ep_halt_ctrl ctrl)
{
    1ef8:	b570      	push	{r4, r5, r6, lr}
    1efa:	0004      	movs	r4, r0
	if (ctrl == USB_EP_HALT_CLR) {
    1efc:	2900      	cmp	r1, #0
    1efe:	d005      	beq.n	1f0c <usb_d_ep_halt+0x14>
		return _usb_d_ep_halt_clr(ep);
	} else if (ctrl == USB_EP_HALT_SET) {
    1f00:	2901      	cmp	r1, #1
    1f02:	d024      	beq.n	1f4e <usb_d_ep_halt+0x56>
		return _usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
	} else {
		return _usb_d_dev_ep_stall(ep, USB_EP_STALL_GET);
    1f04:	2102      	movs	r1, #2
    1f06:	4b13      	ldr	r3, [pc, #76]	; (1f54 <usb_d_ep_halt+0x5c>)
    1f08:	4798      	blx	r3
	}
}
    1f0a:	bd70      	pop	{r4, r5, r6, pc}
	int8_t           ep_index = _usb_d_find_ep(ep);
    1f0c:	4b12      	ldr	r3, [pc, #72]	; (1f58 <usb_d_ep_halt+0x60>)
    1f0e:	4798      	blx	r3
    1f10:	1e05      	subs	r5, r0, #0
	if (ep_index < 0) {
    1f12:	db19      	blt.n	1f48 <usb_d_ep_halt+0x50>
	if (_usb_d_dev_ep_stall(ep, USB_EP_STALL_GET)) {
    1f14:	2102      	movs	r1, #2
    1f16:	0020      	movs	r0, r4
    1f18:	4b0e      	ldr	r3, [pc, #56]	; (1f54 <usb_d_ep_halt+0x5c>)
    1f1a:	4798      	blx	r3
    1f1c:	2800      	cmp	r0, #0
    1f1e:	d0f4      	beq.n	1f0a <usb_d_ep_halt+0x12>
		rc = _usb_d_dev_ep_stall(ep, USB_EP_STALL_CLR);
    1f20:	2100      	movs	r1, #0
    1f22:	0020      	movs	r0, r4
    1f24:	4b0b      	ldr	r3, [pc, #44]	; (1f54 <usb_d_ep_halt+0x5c>)
    1f26:	4798      	blx	r3
		if (rc < 0) {
    1f28:	2800      	cmp	r0, #0
    1f2a:	dbee      	blt.n	1f0a <usb_d_ep_halt+0x12>
		ept->xfer.hdr.state  = USB_EP_S_IDLE;
    1f2c:	016d      	lsls	r5, r5, #5
    1f2e:	4b0b      	ldr	r3, [pc, #44]	; (1f5c <usb_d_ep_halt+0x64>)
    1f30:	195d      	adds	r5, r3, r5
    1f32:	2301      	movs	r3, #1
    1f34:	70ab      	strb	r3, [r5, #2]
		ept->xfer.hdr.status = USB_XFER_UNHALT;
    1f36:	3302      	adds	r3, #2
    1f38:	70eb      	strb	r3, [r5, #3]
		ept->callbacks.xfer(ep, USB_XFER_UNHALT, NULL);
    1f3a:	69eb      	ldr	r3, [r5, #28]
    1f3c:	2200      	movs	r2, #0
    1f3e:	2103      	movs	r1, #3
    1f40:	0020      	movs	r0, r4
    1f42:	4798      	blx	r3
	return ERR_NONE;
    1f44:	2000      	movs	r0, #0
    1f46:	e7e0      	b.n	1f0a <usb_d_ep_halt+0x12>
		return -USB_ERR_PARAM;
    1f48:	2012      	movs	r0, #18
    1f4a:	4240      	negs	r0, r0
		return _usb_d_ep_halt_clr(ep);
    1f4c:	e7dd      	b.n	1f0a <usb_d_ep_halt+0x12>
		return _usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
    1f4e:	4b01      	ldr	r3, [pc, #4]	; (1f54 <usb_d_ep_halt+0x5c>)
    1f50:	4798      	blx	r3
    1f52:	e7da      	b.n	1f0a <usb_d_ep_halt+0x12>
    1f54:	00003cb5 	.word	0x00003cb5
    1f58:	00001a09 	.word	0x00001a09
    1f5c:	20000bf8 	.word	0x20000bf8

00001f60 <usb_d_ep_register_callback>:

void usb_d_ep_register_callback(const uint8_t ep, const enum usb_d_ep_cb_type type, const FUNC_PTR func)
{
    1f60:	b570      	push	{r4, r5, r6, lr}
    1f62:	000d      	movs	r5, r1
    1f64:	0014      	movs	r4, r2
	int8_t           ep_index = _usb_d_find_ep(ep);
    1f66:	4b0f      	ldr	r3, [pc, #60]	; (1fa4 <usb_d_ep_register_callback+0x44>)
    1f68:	4798      	blx	r3
    1f6a:	0003      	movs	r3, r0
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
	FUNC_PTR         f        = func ? (FUNC_PTR)func : (FUNC_PTR)usb_d_dummy_cb_false;
    1f6c:	2c00      	cmp	r4, #0
    1f6e:	d008      	beq.n	1f82 <usb_d_ep_register_callback+0x22>
	if (ep_index < 0) {
    1f70:	2b00      	cmp	r3, #0
    1f72:	db05      	blt.n	1f80 <usb_d_ep_register_callback+0x20>
		return;
	}
	switch (type) {
    1f74:	2d01      	cmp	r5, #1
    1f76:	d00b      	beq.n	1f90 <usb_d_ep_register_callback+0x30>
    1f78:	2d00      	cmp	r5, #0
    1f7a:	d004      	beq.n	1f86 <usb_d_ep_register_callback+0x26>
    1f7c:	2d02      	cmp	r5, #2
    1f7e:	d00c      	beq.n	1f9a <usb_d_ep_register_callback+0x3a>
		ept->callbacks.xfer = (usb_d_ep_cb_xfer_t)f;
		break;
	default:
		break;
	}
}
    1f80:	bd70      	pop	{r4, r5, r6, pc}
	FUNC_PTR         f        = func ? (FUNC_PTR)func : (FUNC_PTR)usb_d_dummy_cb_false;
    1f82:	4c09      	ldr	r4, [pc, #36]	; (1fa8 <usb_d_ep_register_callback+0x48>)
    1f84:	e7f4      	b.n	1f70 <usb_d_ep_register_callback+0x10>
		ept->callbacks.req = (usb_d_ep_cb_setup_t)f;
    1f86:	0140      	lsls	r0, r0, #5
    1f88:	4b08      	ldr	r3, [pc, #32]	; (1fac <usb_d_ep_register_callback+0x4c>)
    1f8a:	1818      	adds	r0, r3, r0
    1f8c:	6144      	str	r4, [r0, #20]
		break;
    1f8e:	e7f7      	b.n	1f80 <usb_d_ep_register_callback+0x20>
		ept->callbacks.more = (usb_d_ep_cb_more_t)f;
    1f90:	0140      	lsls	r0, r0, #5
    1f92:	4b06      	ldr	r3, [pc, #24]	; (1fac <usb_d_ep_register_callback+0x4c>)
    1f94:	1818      	adds	r0, r3, r0
    1f96:	6184      	str	r4, [r0, #24]
		break;
    1f98:	e7f2      	b.n	1f80 <usb_d_ep_register_callback+0x20>
		ept->callbacks.xfer = (usb_d_ep_cb_xfer_t)f;
    1f9a:	0140      	lsls	r0, r0, #5
    1f9c:	4b03      	ldr	r3, [pc, #12]	; (1fac <usb_d_ep_register_callback+0x4c>)
    1f9e:	1818      	adds	r0, r3, r0
    1fa0:	61c4      	str	r4, [r0, #28]
		break;
    1fa2:	e7ed      	b.n	1f80 <usb_d_ep_register_callback+0x20>
    1fa4:	00001a09 	.word	0x00001a09
    1fa8:	00001a45 	.word	0x00001a45
    1fac:	20000bf8 	.word	0x20000bf8

00001fb0 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
    1fb0:	2800      	cmp	r0, #0
    1fb2:	d100      	bne.n	1fb6 <assert+0x6>
		__asm("BKPT #0");
    1fb4:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
    1fb6:	4770      	bx	lr

00001fb8 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
    1fb8:	6803      	ldr	r3, [r0, #0]
    1fba:	2b00      	cmp	r3, #0
    1fbc:	d003      	beq.n	1fc6 <is_list_element+0xe>
		if (it == element) {
    1fbe:	428b      	cmp	r3, r1
    1fc0:	d003      	beq.n	1fca <is_list_element+0x12>
	for (it = list->head; it; it = it->next) {
    1fc2:	681b      	ldr	r3, [r3, #0]
    1fc4:	e7f9      	b.n	1fba <is_list_element+0x2>
			return true;
		}
	}

	return false;
    1fc6:	2000      	movs	r0, #0
}
    1fc8:	4770      	bx	lr
			return true;
    1fca:	2001      	movs	r0, #1
    1fcc:	e7fc      	b.n	1fc8 <is_list_element+0x10>
	...

00001fd0 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
    1fd0:	b570      	push	{r4, r5, r6, lr}
    1fd2:	0004      	movs	r4, r0
    1fd4:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
    1fd6:	4b06      	ldr	r3, [pc, #24]	; (1ff0 <list_insert_as_head+0x20>)
    1fd8:	4798      	blx	r3
    1fda:	2301      	movs	r3, #1
    1fdc:	4058      	eors	r0, r3
    1fde:	b2c0      	uxtb	r0, r0
    1fe0:	2239      	movs	r2, #57	; 0x39
    1fe2:	4904      	ldr	r1, [pc, #16]	; (1ff4 <list_insert_as_head+0x24>)
    1fe4:	4b04      	ldr	r3, [pc, #16]	; (1ff8 <list_insert_as_head+0x28>)
    1fe6:	4798      	blx	r3

	((struct list_element *)element)->next = list->head;
    1fe8:	6823      	ldr	r3, [r4, #0]
    1fea:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
    1fec:	6025      	str	r5, [r4, #0]
}
    1fee:	bd70      	pop	{r4, r5, r6, pc}
    1ff0:	00001fb9 	.word	0x00001fb9
    1ff4:	0000e13c 	.word	0x0000e13c
    1ff8:	00001fb1 	.word	0x00001fb1

00001ffc <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
    1ffc:	6803      	ldr	r3, [r0, #0]
    1ffe:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
    2000:	6001      	str	r1, [r0, #0]
}
    2002:	4770      	bx	lr

00002004 <list_insert_at_end>:

/**
 * \brief Insert an element at list end
 */
void list_insert_at_end(struct list_descriptor *const list, void *const element)
{
    2004:	b570      	push	{r4, r5, r6, lr}
    2006:	0005      	movs	r5, r0
    2008:	000e      	movs	r6, r1
	struct list_element *it = list->head;
    200a:	6804      	ldr	r4, [r0, #0]

	ASSERT(!is_list_element(list, element));
    200c:	4b0a      	ldr	r3, [pc, #40]	; (2038 <list_insert_at_end+0x34>)
    200e:	4798      	blx	r3
    2010:	2301      	movs	r3, #1
    2012:	4058      	eors	r0, r3
    2014:	b2c0      	uxtb	r0, r0
    2016:	224f      	movs	r2, #79	; 0x4f
    2018:	4908      	ldr	r1, [pc, #32]	; (203c <list_insert_at_end+0x38>)
    201a:	4b09      	ldr	r3, [pc, #36]	; (2040 <list_insert_at_end+0x3c>)
    201c:	4798      	blx	r3

	if (!list->head) {
    201e:	682b      	ldr	r3, [r5, #0]
    2020:	2b00      	cmp	r3, #0
    2022:	d103      	bne.n	202c <list_insert_at_end+0x28>
		list->head                             = (struct list_element *)element;
    2024:	602e      	str	r6, [r5, #0]
		((struct list_element *)element)->next = NULL;
    2026:	6033      	str	r3, [r6, #0]
		return;
    2028:	e005      	b.n	2036 <list_insert_at_end+0x32>
	}

	while (it->next) {
		it = it->next;
    202a:	001c      	movs	r4, r3
	while (it->next) {
    202c:	6823      	ldr	r3, [r4, #0]
    202e:	2b00      	cmp	r3, #0
    2030:	d1fb      	bne.n	202a <list_insert_at_end+0x26>
	}
	it->next                               = (struct list_element *)element;
    2032:	6026      	str	r6, [r4, #0]
	((struct list_element *)element)->next = NULL;
    2034:	6033      	str	r3, [r6, #0]
}
    2036:	bd70      	pop	{r4, r5, r6, pc}
    2038:	00001fb9 	.word	0x00001fb9
    203c:	0000e13c 	.word	0x0000e13c
    2040:	00001fb1 	.word	0x00001fb1

00002044 <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
    2044:	6803      	ldr	r3, [r0, #0]
    2046:	2b00      	cmp	r3, #0
    2048:	d003      	beq.n	2052 <list_remove_head+0xe>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
    204a:	681a      	ldr	r2, [r3, #0]
    204c:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
    204e:	0018      	movs	r0, r3
	}

	return NULL;
}
    2050:	4770      	bx	lr
	return NULL;
    2052:	2000      	movs	r0, #0
    2054:	e7fc      	b.n	2050 <list_remove_head+0xc>
	...

00002058 <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
    2058:	b570      	push	{r4, r5, r6, lr}
    205a:	0004      	movs	r4, r0
    205c:	000e      	movs	r6, r1
    205e:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
    2060:	2800      	cmp	r0, #0
    2062:	d012      	beq.n	208a <ringbuffer_init+0x32>
    2064:	2900      	cmp	r1, #0
    2066:	d012      	beq.n	208e <ringbuffer_init+0x36>
    2068:	2a00      	cmp	r2, #0
    206a:	d112      	bne.n	2092 <ringbuffer_init+0x3a>
    206c:	2000      	movs	r0, #0
    206e:	2228      	movs	r2, #40	; 0x28
    2070:	490a      	ldr	r1, [pc, #40]	; (209c <ringbuffer_init+0x44>)
    2072:	4b0b      	ldr	r3, [pc, #44]	; (20a0 <ringbuffer_init+0x48>)
    2074:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
    2076:	1e6b      	subs	r3, r5, #1
    2078:	422b      	tst	r3, r5
    207a:	d10c      	bne.n	2096 <ringbuffer_init+0x3e>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
    207c:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
    207e:	2300      	movs	r3, #0
    2080:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
    2082:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
    2084:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
    2086:	2000      	movs	r0, #0
}
    2088:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
    208a:	2000      	movs	r0, #0
    208c:	e7ef      	b.n	206e <ringbuffer_init+0x16>
    208e:	2000      	movs	r0, #0
    2090:	e7ed      	b.n	206e <ringbuffer_init+0x16>
    2092:	2001      	movs	r0, #1
    2094:	e7eb      	b.n	206e <ringbuffer_init+0x16>
		return ERR_INVALID_ARG;
    2096:	200d      	movs	r0, #13
    2098:	4240      	negs	r0, r0
    209a:	e7f5      	b.n	2088 <ringbuffer_init+0x30>
    209c:	0000e15c 	.word	0x0000e15c
    20a0:	00001fb1 	.word	0x00001fb1

000020a4 <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
    20a4:	b570      	push	{r4, r5, r6, lr}
    20a6:	0004      	movs	r4, r0
    20a8:	000d      	movs	r5, r1
	ASSERT(rb && data);
    20aa:	2800      	cmp	r0, #0
    20ac:	d016      	beq.n	20dc <ringbuffer_get+0x38>
    20ae:	2900      	cmp	r1, #0
    20b0:	d012      	beq.n	20d8 <ringbuffer_get+0x34>
    20b2:	2001      	movs	r0, #1
    20b4:	2240      	movs	r2, #64	; 0x40
    20b6:	490c      	ldr	r1, [pc, #48]	; (20e8 <ringbuffer_get+0x44>)
    20b8:	4b0c      	ldr	r3, [pc, #48]	; (20ec <ringbuffer_get+0x48>)
    20ba:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
    20bc:	68a3      	ldr	r3, [r4, #8]
    20be:	68e2      	ldr	r2, [r4, #12]
    20c0:	429a      	cmp	r2, r3
    20c2:	d00d      	beq.n	20e0 <ringbuffer_get+0x3c>
		*data = rb->buf[rb->read_index & rb->size];
    20c4:	6862      	ldr	r2, [r4, #4]
    20c6:	4013      	ands	r3, r2
    20c8:	6822      	ldr	r2, [r4, #0]
    20ca:	5cd3      	ldrb	r3, [r2, r3]
    20cc:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
    20ce:	68a3      	ldr	r3, [r4, #8]
    20d0:	3301      	adds	r3, #1
    20d2:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
    20d4:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
    20d6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && data);
    20d8:	2000      	movs	r0, #0
    20da:	e7eb      	b.n	20b4 <ringbuffer_get+0x10>
    20dc:	2000      	movs	r0, #0
    20de:	e7e9      	b.n	20b4 <ringbuffer_get+0x10>
	return ERR_NOT_FOUND;
    20e0:	200a      	movs	r0, #10
    20e2:	4240      	negs	r0, r0
    20e4:	e7f7      	b.n	20d6 <ringbuffer_get+0x32>
    20e6:	46c0      	nop			; (mov r8, r8)
    20e8:	0000e15c 	.word	0x0000e15c
    20ec:	00001fb1 	.word	0x00001fb1

000020f0 <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
    20f0:	b570      	push	{r4, r5, r6, lr}
    20f2:	0004      	movs	r4, r0
    20f4:	000d      	movs	r5, r1
	ASSERT(rb);
    20f6:	1e43      	subs	r3, r0, #1
    20f8:	4198      	sbcs	r0, r3
    20fa:	b2c0      	uxtb	r0, r0
    20fc:	2251      	movs	r2, #81	; 0x51
    20fe:	490a      	ldr	r1, [pc, #40]	; (2128 <ringbuffer_put+0x38>)
    2100:	4b0a      	ldr	r3, [pc, #40]	; (212c <ringbuffer_put+0x3c>)
    2102:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
    2104:	6863      	ldr	r3, [r4, #4]
    2106:	68e2      	ldr	r2, [r4, #12]
    2108:	4013      	ands	r3, r2
    210a:	6822      	ldr	r2, [r4, #0]
    210c:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
    210e:	68e3      	ldr	r3, [r4, #12]
    2110:	68a2      	ldr	r2, [r4, #8]
    2112:	1a9a      	subs	r2, r3, r2
    2114:	6861      	ldr	r1, [r4, #4]
    2116:	428a      	cmp	r2, r1
    2118:	d901      	bls.n	211e <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
    211a:	1a59      	subs	r1, r3, r1
    211c:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
    211e:	3301      	adds	r3, #1
    2120:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
    2122:	2000      	movs	r0, #0
    2124:	bd70      	pop	{r4, r5, r6, pc}
    2126:	46c0      	nop			; (mov r8, r8)
    2128:	0000e15c 	.word	0x0000e15c
    212c:	00001fb1 	.word	0x00001fb1

00002130 <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
    2130:	b510      	push	{r4, lr}
    2132:	0004      	movs	r4, r0
	ASSERT(rb);
    2134:	1e43      	subs	r3, r0, #1
    2136:	4198      	sbcs	r0, r3
    2138:	b2c0      	uxtb	r0, r0
    213a:	2267      	movs	r2, #103	; 0x67
    213c:	4903      	ldr	r1, [pc, #12]	; (214c <ringbuffer_num+0x1c>)
    213e:	4b04      	ldr	r3, [pc, #16]	; (2150 <ringbuffer_num+0x20>)
    2140:	4798      	blx	r3

	return rb->write_index - rb->read_index;
    2142:	68e0      	ldr	r0, [r4, #12]
    2144:	68a3      	ldr	r3, [r4, #8]
    2146:	1ac0      	subs	r0, r0, r3
}
    2148:	bd10      	pop	{r4, pc}
    214a:	46c0      	nop			; (mov r8, r8)
    214c:	0000e15c 	.word	0x0000e15c
    2150:	00001fb1 	.word	0x00001fb1

00002154 <_get_cycles_for_ms>:
 */
static inline uint32_t _get_cycles_for_ms_internal(const uint16_t ms, const uint32_t freq, const uint8_t power)
{
	switch (power) {
	case 8:
		return (ms * (freq / 100000)) * 100;
    2154:	0103      	lsls	r3, r0, #4
    2156:	1a1b      	subs	r3, r3, r0
    2158:	015a      	lsls	r2, r3, #5
    215a:	2064      	movs	r0, #100	; 0x64
    215c:	4350      	muls	r0, r2
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    215e:	4770      	bx	lr

00002160 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    2160:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    2162:	4b06      	ldr	r3, [pc, #24]	; (217c <_init_chip+0x1c>)
    2164:	685a      	ldr	r2, [r3, #4]
    2166:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
    2168:	4b05      	ldr	r3, [pc, #20]	; (2180 <_init_chip+0x20>)
    216a:	4798      	blx	r3
	_sysctrl_init_sources();
    216c:	4b05      	ldr	r3, [pc, #20]	; (2184 <_init_chip+0x24>)
    216e:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
    2170:	4b05      	ldr	r3, [pc, #20]	; (2188 <_init_chip+0x28>)
    2172:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    2174:	20ff      	movs	r0, #255	; 0xff
    2176:	4b05      	ldr	r3, [pc, #20]	; (218c <_init_chip+0x2c>)
    2178:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
    217a:	bd10      	pop	{r4, pc}
    217c:	41004000 	.word	0x41004000
    2180:	0000241d 	.word	0x0000241d
    2184:	00002a35 	.word	0x00002a35
    2188:	00002a91 	.word	0x00002a91
    218c:	00002349 	.word	0x00002349

00002190 <_dac_init>:
typedef uint8_t  hri_dac_intflag_reg_t;
typedef uint8_t  hri_dac_status_reg_t;

static inline void hri_dac_wait_for_sync(const void *const hw)
{
	while (((const Dac *)hw)->STATUS.bit.SYNCBUSY)
    2190:	79c3      	ldrb	r3, [r0, #7]
    2192:	09db      	lsrs	r3, r3, #7
    2194:	d1fc      	bne.n	2190 <_dac_init>
    2196:	79c3      	ldrb	r3, [r0, #7]
    2198:	09db      	lsrs	r3, r3, #7
    219a:	d1fc      	bne.n	2196 <_dac_init+0x6>

static inline hri_dac_ctrla_reg_t hri_dac_get_CTRLA_reg(const void *const hw, hri_dac_ctrla_reg_t mask)
{
	uint8_t tmp;
	hri_dac_wait_for_sync(hw);
	tmp = ((Dac *)hw)->CTRLA.reg;
    219c:	7803      	ldrb	r3, [r0, #0]
 * param[in] hw The pointer to DAC hardware instance
 */
static int32_t _dac_init(void *const hw)
{
	hri_dac_wait_for_sync(hw);
	if (hri_dac_get_CTRLA_reg(hw, DAC_CTRLA_ENABLE)) {
    219e:	079b      	lsls	r3, r3, #30
    21a0:	d507      	bpl.n	21b2 <_dac_init+0x22>
}

static inline void hri_dac_write_CTRLA_reg(const void *const hw, hri_dac_ctrla_reg_t data)
{
	DAC_CRITICAL_SECTION_ENTER();
	((Dac *)hw)->CTRLA.reg = data;
    21a2:	2300      	movs	r3, #0
    21a4:	7003      	strb	r3, [r0, #0]
	while (((const Dac *)hw)->STATUS.bit.SYNCBUSY)
    21a6:	79c3      	ldrb	r3, [r0, #7]
    21a8:	09db      	lsrs	r3, r3, #7
    21aa:	d1fc      	bne.n	21a6 <_dac_init+0x16>
    21ac:	79c3      	ldrb	r3, [r0, #7]
    21ae:	09db      	lsrs	r3, r3, #7
    21b0:	d1fc      	bne.n	21ac <_dac_init+0x1c>
	((Dac *)hw)->CTRLA.reg = data;
    21b2:	2301      	movs	r3, #1
    21b4:	7003      	strb	r3, [r0, #0]
	while (((const Dac *)hw)->STATUS.bit.SYNCBUSY)
    21b6:	79c3      	ldrb	r3, [r0, #7]
    21b8:	09db      	lsrs	r3, r3, #7
    21ba:	d1fc      	bne.n	21b6 <_dac_init+0x26>
    21bc:	79c3      	ldrb	r3, [r0, #7]
    21be:	09db      	lsrs	r3, r3, #7
    21c0:	d1fc      	bne.n	21bc <_dac_init+0x2c>
}

static inline void hri_dac_write_EVCTRL_reg(const void *const hw, hri_dac_evctrl_reg_t data)
{
	DAC_CRITICAL_SECTION_ENTER();
	((Dac *)hw)->EVCTRL.reg = data;
    21c2:	7083      	strb	r3, [r0, #2]
	((Dac *)hw)->CTRLB.reg = data;
    21c4:	2241      	movs	r2, #65	; 0x41
    21c6:	7042      	strb	r2, [r0, #1]
	((Dac *)hw)->CTRLA.reg = data;
    21c8:	7003      	strb	r3, [r0, #0]
	while (((const Dac *)hw)->STATUS.bit.SYNCBUSY)
    21ca:	79c3      	ldrb	r3, [r0, #7]
    21cc:	09db      	lsrs	r3, r3, #7
    21ce:	d1fc      	bne.n	21ca <_dac_init+0x3a>

	hri_dac_write_EVCTRL_reg(hw, _dac.ev_ctrl);
	hri_dac_write_CTRLB_reg(hw, _dac.ctrlb);
	hri_dac_write_CTRLA_reg(hw, _dac.ctrla);
	return ERR_NONE;
}
    21d0:	2000      	movs	r0, #0
    21d2:	4770      	bx	lr

000021d4 <_dac_sync_init>:
{
    21d4:	b570      	push	{r4, r5, r6, lr}
    21d6:	0005      	movs	r5, r0
    21d8:	000c      	movs	r4, r1
	ASSERT(device);
    21da:	1e43      	subs	r3, r0, #1
    21dc:	4198      	sbcs	r0, r3
    21de:	b2c0      	uxtb	r0, r0
    21e0:	2249      	movs	r2, #73	; 0x49
    21e2:	4904      	ldr	r1, [pc, #16]	; (21f4 <_dac_sync_init+0x20>)
    21e4:	4b04      	ldr	r3, [pc, #16]	; (21f8 <_dac_sync_init+0x24>)
    21e6:	4798      	blx	r3
	device->hw = hw;
    21e8:	602c      	str	r4, [r5, #0]
	return _dac_init(device->hw);
    21ea:	0020      	movs	r0, r4
    21ec:	4b03      	ldr	r3, [pc, #12]	; (21fc <_dac_sync_init+0x28>)
    21ee:	4798      	blx	r3
}
    21f0:	bd70      	pop	{r4, r5, r6, pc}
    21f2:	46c0      	nop			; (mov r8, r8)
    21f4:	0000e180 	.word	0x0000e180
    21f8:	00001fb1 	.word	0x00001fb1
    21fc:	00002191 	.word	0x00002191

00002200 <_ext_irq_init>:
typedef uint8_t  hri_eic_nmiflag_reg_t;
typedef uint8_t  hri_eic_status_reg_t;

static inline void hri_eic_wait_for_sync(const void *const hw)
{
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    2200:	4b20      	ldr	r3, [pc, #128]	; (2284 <_ext_irq_init+0x84>)
    2202:	785b      	ldrb	r3, [r3, #1]
    2204:	09db      	lsrs	r3, r3, #7
    2206:	d1fb      	bne.n	2200 <_ext_irq_init>
    2208:	4b1e      	ldr	r3, [pc, #120]	; (2284 <_ext_irq_init+0x84>)
    220a:	785b      	ldrb	r3, [r3, #1]
    220c:	09db      	lsrs	r3, r3, #7
    220e:	d1fb      	bne.n	2208 <_ext_irq_init+0x8>

static inline hri_eic_ctrl_reg_t hri_eic_get_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t mask)
{
	uint8_t tmp;
	hri_eic_wait_for_sync(hw);
	tmp = ((Eic *)hw)->CTRL.reg;
    2210:	4b1c      	ldr	r3, [pc, #112]	; (2284 <_ext_irq_init+0x84>)
    2212:	781b      	ldrb	r3, [r3, #0]
 * \brief Initialize external interrupt module
 */
int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
	hri_eic_wait_for_sync(EIC);
	if (hri_eic_get_CTRL_reg(EIC, EIC_CTRL_ENABLE)) {
    2214:	079b      	lsls	r3, r3, #30
    2216:	d50a      	bpl.n	222e <_ext_irq_init+0x2e>
}

static inline void hri_eic_write_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CTRL.reg = data;
    2218:	2200      	movs	r2, #0
    221a:	4b1a      	ldr	r3, [pc, #104]	; (2284 <_ext_irq_init+0x84>)
    221c:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    221e:	4b19      	ldr	r3, [pc, #100]	; (2284 <_ext_irq_init+0x84>)
    2220:	785b      	ldrb	r3, [r3, #1]
    2222:	09db      	lsrs	r3, r3, #7
    2224:	d1fb      	bne.n	221e <_ext_irq_init+0x1e>
    2226:	4b17      	ldr	r3, [pc, #92]	; (2284 <_ext_irq_init+0x84>)
    2228:	785b      	ldrb	r3, [r3, #1]
    222a:	09db      	lsrs	r3, r3, #7
    222c:	d1fb      	bne.n	2226 <_ext_irq_init+0x26>
	((Eic *)hw)->CTRL.reg = data;
    222e:	2201      	movs	r2, #1
    2230:	4b14      	ldr	r3, [pc, #80]	; (2284 <_ext_irq_init+0x84>)
    2232:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    2234:	4b13      	ldr	r3, [pc, #76]	; (2284 <_ext_irq_init+0x84>)
    2236:	785b      	ldrb	r3, [r3, #1]
    2238:	09db      	lsrs	r3, r3, #7
    223a:	d1fb      	bne.n	2234 <_ext_irq_init+0x34>
    223c:	4b11      	ldr	r3, [pc, #68]	; (2284 <_ext_irq_init+0x84>)
    223e:	785b      	ldrb	r3, [r3, #1]
    2240:	09db      	lsrs	r3, r3, #7
    2242:	d1fb      	bne.n	223c <_ext_irq_init+0x3c>
}

static inline void hri_eic_write_NMICTRL_reg(const void *const hw, hri_eic_nmictrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->NMICTRL.reg = data;
    2244:	4b0f      	ldr	r3, [pc, #60]	; (2284 <_ext_irq_init+0x84>)
    2246:	2200      	movs	r2, #0
    2248:	709a      	strb	r2, [r3, #2]
}

static inline void hri_eic_write_EVCTRL_reg(const void *const hw, hri_eic_evctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->EVCTRL.reg = data;
    224a:	605a      	str	r2, [r3, #4]
}

static inline void hri_eic_write_WAKEUP_reg(const void *const hw, hri_eic_wakeup_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->WAKEUP.reg = data;
    224c:	615a      	str	r2, [r3, #20]
}

static inline void hri_eic_write_CONFIG_reg(const void *const hw, uint8_t index, hri_eic_config_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CONFIG[index].reg = data;
    224e:	619a      	str	r2, [r3, #24]
    2250:	61da      	str	r2, [r3, #28]
	((Eic *)hw)->CTRL.reg |= EIC_CTRL_ENABLE;
    2252:	781a      	ldrb	r2, [r3, #0]
    2254:	2102      	movs	r1, #2
    2256:	430a      	orrs	r2, r1
    2258:	b2d2      	uxtb	r2, r2
    225a:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
    225c:	4b09      	ldr	r3, [pc, #36]	; (2284 <_ext_irq_init+0x84>)
    225e:	785b      	ldrb	r3, [r3, #1]
    2260:	09db      	lsrs	r3, r3, #7
    2262:	d1fb      	bne.n	225c <_ext_irq_init+0x5c>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    2264:	4b08      	ldr	r3, [pc, #32]	; (2288 <_ext_irq_init+0x88>)
    2266:	2210      	movs	r2, #16
    2268:	2180      	movs	r1, #128	; 0x80
    226a:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    226c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    2270:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    2274:	3101      	adds	r1, #1
    2276:	31ff      	adds	r1, #255	; 0xff
    2278:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    227a:	601a      	str	r2, [r3, #0]

	NVIC_DisableIRQ(EIC_IRQn);
	NVIC_ClearPendingIRQ(EIC_IRQn);
	NVIC_EnableIRQ(EIC_IRQn);

	callback = cb;
    227c:	4b03      	ldr	r3, [pc, #12]	; (228c <_ext_irq_init+0x8c>)
    227e:	6018      	str	r0, [r3, #0]

	return ERR_NONE;
}
    2280:	2000      	movs	r0, #0
    2282:	4770      	bx	lr
    2284:	40001800 	.word	0x40001800
    2288:	e000e100 	.word	0xe000e100
    228c:	20000c78 	.word	0x20000c78

00002290 <EIC_Handler>:

/**
 * \brief EIC interrupt handler
 */
void EIC_Handler(void)
{
    2290:	b570      	push	{r4, r5, r6, lr}
    2292:	b082      	sub	sp, #8
	return ((Eic *)hw)->INTFLAG.reg;
    2294:	4b26      	ldr	r3, [pc, #152]	; (2330 <EIC_Handler+0xa0>)
    2296:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
    2298:	68d9      	ldr	r1, [r3, #12]
	volatile uint32_t flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
    229a:	400a      	ands	r2, r1
    229c:	9201      	str	r2, [sp, #4]
	int8_t            pos;
	uint32_t          pin = INVALID_PIN_NUMBER;

	hri_eic_clear_INTFLAG_reg(EIC, flags);
    229e:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
    22a0:	611a      	str	r2, [r3, #16]

	ASSERT(callback);
    22a2:	4b24      	ldr	r3, [pc, #144]	; (2334 <EIC_Handler+0xa4>)
    22a4:	6818      	ldr	r0, [r3, #0]
    22a6:	1e43      	subs	r3, r0, #1
    22a8:	4198      	sbcs	r0, r3
    22aa:	b2c0      	uxtb	r0, r0
    22ac:	22d2      	movs	r2, #210	; 0xd2
    22ae:	4922      	ldr	r1, [pc, #136]	; (2338 <EIC_Handler+0xa8>)
    22b0:	4b22      	ldr	r3, [pc, #136]	; (233c <EIC_Handler+0xac>)
    22b2:	4798      	blx	r3
	uint32_t          pin = INVALID_PIN_NUMBER;
    22b4:	2501      	movs	r5, #1
    22b6:	426d      	negs	r5, r5

	while (flags) {
    22b8:	e02e      	b.n	2318 <EIC_Handler+0x88>
					break;
				}
				if (_map[middle].extint < pos) {
					lower = middle + 1;
				} else {
					upper = middle - 1;
    22ba:	3901      	subs	r1, #1
    22bc:	b2ce      	uxtb	r6, r1
			while (upper >= lower) {
    22be:	42b0      	cmp	r0, r6
    22c0:	d80e      	bhi.n	22e0 <EIC_Handler+0x50>
				middle = (upper + lower) >> 1;
    22c2:	1832      	adds	r2, r6, r0
    22c4:	1052      	asrs	r2, r2, #1
    22c6:	b2d1      	uxtb	r1, r2
				if (_map[middle].extint == pos) {
    22c8:	23ff      	movs	r3, #255	; 0xff
    22ca:	4013      	ands	r3, r2
    22cc:	00db      	lsls	r3, r3, #3
    22ce:	4a1c      	ldr	r2, [pc, #112]	; (2340 <EIC_Handler+0xb0>)
    22d0:	5c9b      	ldrb	r3, [r3, r2]
    22d2:	42a3      	cmp	r3, r4
    22d4:	d003      	beq.n	22de <EIC_Handler+0x4e>
				if (_map[middle].extint < pos) {
    22d6:	daf0      	bge.n	22ba <EIC_Handler+0x2a>
					lower = middle + 1;
    22d8:	3101      	adds	r1, #1
    22da:	b2c8      	uxtb	r0, r1
    22dc:	e7ef      	b.n	22be <EIC_Handler+0x2e>
					pin = _map[middle].pin;
    22de:	250e      	movs	r5, #14
				}
			}

			if (INVALID_PIN_NUMBER != pin) {
    22e0:	1c6b      	adds	r3, r5, #1
    22e2:	d003      	beq.n	22ec <EIC_Handler+0x5c>
				callback(pin);
    22e4:	4b13      	ldr	r3, [pc, #76]	; (2334 <EIC_Handler+0xa4>)
    22e6:	681b      	ldr	r3, [r3, #0]
    22e8:	0028      	movs	r0, r5
    22ea:	4798      	blx	r3
			}
			flags &= ~(1ul << pos);
    22ec:	2201      	movs	r2, #1
    22ee:	40a2      	lsls	r2, r4
    22f0:	9b01      	ldr	r3, [sp, #4]
    22f2:	4393      	bics	r3, r2
    22f4:	9301      	str	r3, [sp, #4]
			pos = ffs(flags) - 1;
    22f6:	9801      	ldr	r0, [sp, #4]
    22f8:	4b12      	ldr	r3, [pc, #72]	; (2344 <EIC_Handler+0xb4>)
    22fa:	4798      	blx	r3
    22fc:	3801      	subs	r0, #1
    22fe:	b244      	sxtb	r4, r0
		while (-1 != pos) {
    2300:	1c63      	adds	r3, r4, #1
    2302:	d002      	beq.n	230a <EIC_Handler+0x7a>
    2304:	2601      	movs	r6, #1
    2306:	2000      	movs	r0, #0
    2308:	e7d9      	b.n	22be <EIC_Handler+0x2e>
	return ((Eic *)hw)->INTFLAG.reg;
    230a:	4b09      	ldr	r3, [pc, #36]	; (2330 <EIC_Handler+0xa0>)
    230c:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
    230e:	68d9      	ldr	r1, [r3, #12]
		}
		flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
    2310:	400a      	ands	r2, r1
    2312:	9201      	str	r2, [sp, #4]
		hri_eic_clear_INTFLAG_reg(EIC, flags);
    2314:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
    2316:	611a      	str	r2, [r3, #16]
	while (flags) {
    2318:	9b01      	ldr	r3, [sp, #4]
    231a:	2b00      	cmp	r3, #0
    231c:	d005      	beq.n	232a <EIC_Handler+0x9a>
		pos = ffs(flags) - 1;
    231e:	9801      	ldr	r0, [sp, #4]
    2320:	4b08      	ldr	r3, [pc, #32]	; (2344 <EIC_Handler+0xb4>)
    2322:	4798      	blx	r3
    2324:	3801      	subs	r0, #1
    2326:	b244      	sxtb	r4, r0
		while (-1 != pos) {
    2328:	e7ea      	b.n	2300 <EIC_Handler+0x70>
	}
}
    232a:	b002      	add	sp, #8
    232c:	bd70      	pop	{r4, r5, r6, pc}
    232e:	46c0      	nop			; (mov r8, r8)
    2330:	40001800 	.word	0x40001800
    2334:	20000c78 	.word	0x20000c78
    2338:	0000e1a0 	.word	0x0000e1a0
    233c:	00001fb1 	.word	0x00001fb1
    2340:	0000e198 	.word	0x0000e198
    2344:	00006925 	.word	0x00006925

00002348 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    2348:	07c3      	lsls	r3, r0, #31
    234a:	d509      	bpl.n	2360 <_gclk_init_generators_by_fref+0x18>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
    234c:	4b27      	ldr	r3, [pc, #156]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    234e:	2280      	movs	r2, #128	; 0x80
    2350:	0052      	lsls	r2, r2, #1
    2352:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    2354:	4a26      	ldr	r2, [pc, #152]	; (23f0 <_gclk_init_generators_by_fref+0xa8>)
    2356:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    2358:	4b24      	ldr	r3, [pc, #144]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    235a:	785b      	ldrb	r3, [r3, #1]
    235c:	09db      	lsrs	r3, r3, #7
    235e:	d1fb      	bne.n	2358 <_gclk_init_generators_by_fref+0x10>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SRC | GCLK_GENCTRL_ID(0));
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
    2360:	0783      	lsls	r3, r0, #30
    2362:	d508      	bpl.n	2376 <_gclk_init_generators_by_fref+0x2e>
	((Gclk *)hw)->GENDIV.reg = data;
    2364:	4b21      	ldr	r3, [pc, #132]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    2366:	4a23      	ldr	r2, [pc, #140]	; (23f4 <_gclk_init_generators_by_fref+0xac>)
    2368:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    236a:	4a23      	ldr	r2, [pc, #140]	; (23f8 <_gclk_init_generators_by_fref+0xb0>)
    236c:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    236e:	4b1f      	ldr	r3, [pc, #124]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    2370:	785b      	ldrb	r3, [r3, #1]
    2372:	09db      	lsrs	r3, r3, #7
    2374:	d1fb      	bne.n	236e <_gclk_init_generators_by_fref+0x26>
		        | (CONF_GCLK_GENERATOR_1_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_1_SRC | GCLK_GENCTRL_ID(1));
	}
#endif

#if CONF_GCLK_GENERATOR_2_CONFIG == 1
	if (bm & (1ul << 2)) {
    2376:	0743      	lsls	r3, r0, #29
    2378:	d508      	bpl.n	238c <_gclk_init_generators_by_fref+0x44>
	((Gclk *)hw)->GENDIV.reg = data;
    237a:	4b1c      	ldr	r3, [pc, #112]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    237c:	4a1f      	ldr	r2, [pc, #124]	; (23fc <_gclk_init_generators_by_fref+0xb4>)
    237e:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    2380:	4a1f      	ldr	r2, [pc, #124]	; (2400 <_gclk_init_generators_by_fref+0xb8>)
    2382:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    2384:	4b19      	ldr	r3, [pc, #100]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    2386:	785b      	ldrb	r3, [r3, #1]
    2388:	09db      	lsrs	r3, r3, #7
    238a:	d1fb      	bne.n	2384 <_gclk_init_generators_by_fref+0x3c>
		        | (CONF_GCLK_GENERATOR_2_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_2_SRC | GCLK_GENCTRL_ID(2));
	}
#endif

#if CONF_GCLK_GENERATOR_3_CONFIG == 1
	if (bm & (1ul << 3)) {
    238c:	0703      	lsls	r3, r0, #28
    238e:	d508      	bpl.n	23a2 <_gclk_init_generators_by_fref+0x5a>
	((Gclk *)hw)->GENDIV.reg = data;
    2390:	4b16      	ldr	r3, [pc, #88]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    2392:	4a1c      	ldr	r2, [pc, #112]	; (2404 <_gclk_init_generators_by_fref+0xbc>)
    2394:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    2396:	4a1c      	ldr	r2, [pc, #112]	; (2408 <_gclk_init_generators_by_fref+0xc0>)
    2398:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    239a:	4b14      	ldr	r3, [pc, #80]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    239c:	785b      	ldrb	r3, [r3, #1]
    239e:	09db      	lsrs	r3, r3, #7
    23a0:	d1fb      	bne.n	239a <_gclk_init_generators_by_fref+0x52>
		        | (CONF_GCLK_GENERATOR_3_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_3_SRC | GCLK_GENCTRL_ID(3));
	}
#endif

#if CONF_GCLK_GENERATOR_4_CONFIG == 1
	if (bm & (1ul << 4)) {
    23a2:	06c3      	lsls	r3, r0, #27
    23a4:	d509      	bpl.n	23ba <_gclk_init_generators_by_fref+0x72>
	((Gclk *)hw)->GENDIV.reg = data;
    23a6:	4b11      	ldr	r3, [pc, #68]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    23a8:	2282      	movs	r2, #130	; 0x82
    23aa:	0052      	lsls	r2, r2, #1
    23ac:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    23ae:	4a17      	ldr	r2, [pc, #92]	; (240c <_gclk_init_generators_by_fref+0xc4>)
    23b0:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    23b2:	4b0e      	ldr	r3, [pc, #56]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    23b4:	785b      	ldrb	r3, [r3, #1]
    23b6:	09db      	lsrs	r3, r3, #7
    23b8:	d1fb      	bne.n	23b2 <_gclk_init_generators_by_fref+0x6a>
		        | (CONF_GCLK_GENERATOR_4_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_4_SRC | GCLK_GENCTRL_ID(4));
	}
#endif

#if CONF_GCLK_GENERATOR_5_CONFIG == 1
	if (bm & (1ul << 5)) {
    23ba:	0683      	lsls	r3, r0, #26
    23bc:	d508      	bpl.n	23d0 <_gclk_init_generators_by_fref+0x88>
	((Gclk *)hw)->GENDIV.reg = data;
    23be:	4b0b      	ldr	r3, [pc, #44]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    23c0:	4a13      	ldr	r2, [pc, #76]	; (2410 <_gclk_init_generators_by_fref+0xc8>)
    23c2:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    23c4:	4a13      	ldr	r2, [pc, #76]	; (2414 <_gclk_init_generators_by_fref+0xcc>)
    23c6:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    23c8:	4b08      	ldr	r3, [pc, #32]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    23ca:	785b      	ldrb	r3, [r3, #1]
    23cc:	09db      	lsrs	r3, r3, #7
    23ce:	d1fb      	bne.n	23c8 <_gclk_init_generators_by_fref+0x80>
		        | (CONF_GCLK_GENERATOR_5_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_5_SRC | GCLK_GENCTRL_ID(5));
	}
#endif

#if CONF_GCLK_GENERATOR_6_CONFIG == 1
	if (bm & (1ul << 6)) {
    23d0:	0643      	lsls	r3, r0, #25
    23d2:	d509      	bpl.n	23e8 <_gclk_init_generators_by_fref+0xa0>
	((Gclk *)hw)->GENDIV.reg = data;
    23d4:	4b05      	ldr	r3, [pc, #20]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    23d6:	2283      	movs	r2, #131	; 0x83
    23d8:	0052      	lsls	r2, r2, #1
    23da:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    23dc:	4a0e      	ldr	r2, [pc, #56]	; (2418 <_gclk_init_generators_by_fref+0xd0>)
    23de:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    23e0:	4b02      	ldr	r3, [pc, #8]	; (23ec <_gclk_init_generators_by_fref+0xa4>)
    23e2:	785b      	ldrb	r3, [r3, #1]
    23e4:	09db      	lsrs	r3, r3, #7
    23e6:	d1fb      	bne.n	23e0 <_gclk_init_generators_by_fref+0x98>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
    23e8:	4770      	bx	lr
    23ea:	46c0      	nop			; (mov r8, r8)
    23ec:	40000c00 	.word	0x40000c00
    23f0:	00290800 	.word	0x00290800
    23f4:	00000601 	.word	0x00000601
    23f8:	00010801 	.word	0x00010801
    23fc:	00000402 	.word	0x00000402
    2400:	00210602 	.word	0x00210602
    2404:	00000803 	.word	0x00000803
    2408:	00290603 	.word	0x00290603
    240c:	00090704 	.word	0x00090704
    2410:	00000305 	.word	0x00000305
    2414:	00010805 	.word	0x00010805
    2418:	00210406 	.word	0x00210406

0000241c <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
    241c:	4b06      	ldr	r3, [pc, #24]	; (2438 <_pm_init+0x1c>)
    241e:	7a1a      	ldrb	r2, [r3, #8]
    2420:	b2d2      	uxtb	r2, r2
    2422:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
    2424:	7a5a      	ldrb	r2, [r3, #9]
    2426:	b2d2      	uxtb	r2, r2
    2428:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
    242a:	7a9a      	ldrb	r2, [r3, #10]
    242c:	b2d2      	uxtb	r2, r2
    242e:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
    2430:	7ada      	ldrb	r2, [r3, #11]
    2432:	b2d2      	uxtb	r2, r2
    2434:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
    2436:	4770      	bx	lr
    2438:	40000400 	.word	0x40000400

0000243c <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    243c:	4b02      	ldr	r3, [pc, #8]	; (2448 <_sercom_get_hardware_index+0xc>)
    243e:	469c      	mov	ip, r3
    2440:	4460      	add	r0, ip
    2442:	0a80      	lsrs	r0, r0, #10
    2444:	b2c0      	uxtb	r0, r0
}
    2446:	4770      	bx	lr
    2448:	bdfff800 	.word	0xbdfff800

0000244c <_sercom_usart_interrupt_handler>:
 * \internal Sercom interrupt handler
 *
 * \param[in] p The pointer to interrupt parameter
 */
static void _sercom_usart_interrupt_handler(struct _usart_async_device *device)
{
    244c:	b510      	push	{r4, lr}
	void *hw = device->hw;
    244e:	6984      	ldr	r4, [r0, #24]
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
}

static inline bool hri_sercomusart_get_interrupt_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    2450:	7e23      	ldrb	r3, [r4, #24]

	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
    2452:	07db      	lsls	r3, r3, #31
    2454:	d502      	bpl.n	245c <_sercom_usart_interrupt_handler+0x10>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
}

static inline bool hri_sercomusart_get_INTEN_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
    2456:	7da3      	ldrb	r3, [r4, #22]
    2458:	07db      	lsls	r3, r3, #31
    245a:	d40f      	bmi.n	247c <_sercom_usart_interrupt_handler+0x30>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    245c:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_DRE_bit(hw);
		device->usart_cb.tx_byte_sent(device);
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
    245e:	079b      	lsls	r3, r3, #30
    2460:	d502      	bpl.n	2468 <_sercom_usart_interrupt_handler+0x1c>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
}

static inline bool hri_sercomusart_get_INTEN_TXC_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
    2462:	7da3      	ldrb	r3, [r4, #22]
    2464:	079b      	lsls	r3, r3, #30
    2466:	d40e      	bmi.n	2486 <_sercom_usart_interrupt_handler+0x3a>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    2468:	7e23      	ldrb	r3, [r4, #24]
		hri_sercomusart_clear_INTEN_TXC_bit(hw);
		device->usart_cb.tx_done_cb(device);
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
    246a:	075b      	lsls	r3, r3, #29
    246c:	d515      	bpl.n	249a <_sercom_usart_interrupt_handler+0x4e>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
    246e:	8b62      	ldrh	r2, [r4, #26]
		if (hri_sercomusart_read_STATUS_reg(hw)
    2470:	2337      	movs	r3, #55	; 0x37
    2472:	421a      	tst	r2, r3
    2474:	d00c      	beq.n	2490 <_sercom_usart_interrupt_handler+0x44>
	((Sercom *)hw)->USART.STATUS.reg = mask;
    2476:	3308      	adds	r3, #8
    2478:	8363      	strh	r3, [r4, #26]
		hri_sercomusart_clear_interrupt_ERROR_bit(hw);
		device->usart_cb.error_cb(device);
		status = hri_sercomusart_read_STATUS_reg(hw);
		hri_sercomusart_clear_STATUS_reg(hw, status);
	}
}
    247a:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    247c:	2301      	movs	r3, #1
    247e:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_byte_sent(device);
    2480:	6803      	ldr	r3, [r0, #0]
    2482:	4798      	blx	r3
    2484:	e7f9      	b.n	247a <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    2486:	2302      	movs	r3, #2
    2488:	7523      	strb	r3, [r4, #20]
		device->usart_cb.tx_done_cb(device);
    248a:	6883      	ldr	r3, [r0, #8]
    248c:	4798      	blx	r3
    248e:	e7f4      	b.n	247a <_sercom_usart_interrupt_handler+0x2e>
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
    2490:	6843      	ldr	r3, [r0, #4]
	return ((Sercom *)hw)->USART.DATA.reg;
    2492:	8d21      	ldrh	r1, [r4, #40]	; 0x28
    2494:	b2c9      	uxtb	r1, r1
    2496:	4798      	blx	r3
    2498:	e7ef      	b.n	247a <_sercom_usart_interrupt_handler+0x2e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_ERROR) >> SERCOM_USART_INTFLAG_ERROR_Pos;
    249a:	7e23      	ldrb	r3, [r4, #24]
	} else if (hri_sercomusart_get_interrupt_ERROR_bit(hw)) {
    249c:	09db      	lsrs	r3, r3, #7
    249e:	d0ec      	beq.n	247a <_sercom_usart_interrupt_handler+0x2e>
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_ERROR;
    24a0:	2380      	movs	r3, #128	; 0x80
    24a2:	7623      	strb	r3, [r4, #24]
		device->usart_cb.error_cb(device);
    24a4:	68c3      	ldr	r3, [r0, #12]
    24a6:	4798      	blx	r3
	return ((Sercom *)hw)->USART.STATUS.reg;
    24a8:	8b63      	ldrh	r3, [r4, #26]
    24aa:	b29b      	uxth	r3, r3
	((Sercom *)hw)->USART.STATUS.reg = mask;
    24ac:	8363      	strh	r3, [r4, #26]
    24ae:	e7e4      	b.n	247a <_sercom_usart_interrupt_handler+0x2e>

000024b0 <_sercom_init_irq_param>:
 * \brief Init irq param with the given sercom hardware instance
 */
static void _sercom_init_irq_param(const void *const hw, void *dev)
{

	if (hw == SERCOM3) {
    24b0:	4b03      	ldr	r3, [pc, #12]	; (24c0 <_sercom_init_irq_param+0x10>)
    24b2:	4298      	cmp	r0, r3
    24b4:	d000      	beq.n	24b8 <_sercom_init_irq_param+0x8>
		_sercom3_dev = (struct _usart_async_device *)dev;
	}
}
    24b6:	4770      	bx	lr
		_sercom3_dev = (struct _usart_async_device *)dev;
    24b8:	4b02      	ldr	r3, [pc, #8]	; (24c4 <_sercom_init_irq_param+0x14>)
    24ba:	6019      	str	r1, [r3, #0]
}
    24bc:	e7fb      	b.n	24b6 <_sercom_init_irq_param+0x6>
    24be:	46c0      	nop			; (mov r8, r8)
    24c0:	42001400 	.word	0x42001400
    24c4:	20000c7c 	.word	0x20000c7c

000024c8 <_sercom_get_irq_num>:

/**
 * \brief Retrieve IRQ number for the given hardware instance
 */
static uint8_t _sercom_get_irq_num(const void *const hw)
{
    24c8:	b510      	push	{r4, lr}
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    24ca:	4b02      	ldr	r3, [pc, #8]	; (24d4 <_sercom_get_irq_num+0xc>)
    24cc:	4798      	blx	r3
    24ce:	3009      	adds	r0, #9
    24d0:	b2c0      	uxtb	r0, r0
}
    24d2:	bd10      	pop	{r4, pc}
    24d4:	0000243d 	.word	0x0000243d

000024d8 <_spi_sync_enable>:
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    24d8:	69c3      	ldr	r3, [r0, #28]
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    24da:	07db      	lsls	r3, r3, #31
    24dc:	d408      	bmi.n	24f0 <_spi_sync_enable+0x18>
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    24de:	6803      	ldr	r3, [r0, #0]
    24e0:	2202      	movs	r2, #2
    24e2:	4313      	orrs	r3, r2
    24e4:	6003      	str	r3, [r0, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    24e6:	69c3      	ldr	r3, [r0, #28]
    24e8:	079b      	lsls	r3, r3, #30
    24ea:	d1fc      	bne.n	24e6 <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
    24ec:	2000      	movs	r0, #0
}
    24ee:	4770      	bx	lr
		return ERR_BUSY;
    24f0:	2004      	movs	r0, #4
    24f2:	4240      	negs	r0, r0
    24f4:	e7fb      	b.n	24ee <_spi_sync_enable+0x16>
	...

000024f8 <_get_sercom_index>:
{
    24f8:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
    24fa:	4b0b      	ldr	r3, [pc, #44]	; (2528 <_get_sercom_index+0x30>)
    24fc:	4798      	blx	r3
    24fe:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    2500:	2000      	movs	r0, #0
    2502:	2800      	cmp	r0, #0
    2504:	d006      	beq.n	2514 <_get_sercom_index+0x1c>
	ASSERT(false);
    2506:	4a09      	ldr	r2, [pc, #36]	; (252c <_get_sercom_index+0x34>)
    2508:	4909      	ldr	r1, [pc, #36]	; (2530 <_get_sercom_index+0x38>)
    250a:	2000      	movs	r0, #0
    250c:	4b09      	ldr	r3, [pc, #36]	; (2534 <_get_sercom_index+0x3c>)
    250e:	4798      	blx	r3
	return 0;
    2510:	2000      	movs	r0, #0
}
    2512:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
    2514:	0083      	lsls	r3, r0, #2
    2516:	181b      	adds	r3, r3, r0
    2518:	0099      	lsls	r1, r3, #2
    251a:	4b07      	ldr	r3, [pc, #28]	; (2538 <_get_sercom_index+0x40>)
    251c:	5ccb      	ldrb	r3, [r1, r3]
    251e:	429a      	cmp	r2, r3
    2520:	d0f7      	beq.n	2512 <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    2522:	3001      	adds	r0, #1
    2524:	b2c0      	uxtb	r0, r0
    2526:	e7ec      	b.n	2502 <_get_sercom_index+0xa>
    2528:	0000243d 	.word	0x0000243d
    252c:	0000025e 	.word	0x0000025e
    2530:	0000e228 	.word	0x0000e228
    2534:	00001fb1 	.word	0x00001fb1
    2538:	0000e1b8 	.word	0x0000e1b8

0000253c <_usart_init>:
{
    253c:	b570      	push	{r4, r5, r6, lr}
    253e:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
    2540:	4b38      	ldr	r3, [pc, #224]	; (2624 <_usart_init+0xe8>)
    2542:	4798      	blx	r3
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
    2544:	69e3      	ldr	r3, [r4, #28]
	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
    2546:	07db      	lsls	r3, r3, #31
    2548:	d41d      	bmi.n	2586 <_usart_init+0x4a>
		uint32_t mode = _usarts[i].ctrl_a & SERCOM_USART_CTRLA_MODE_Msk;
    254a:	0083      	lsls	r3, r0, #2
    254c:	181b      	adds	r3, r3, r0
    254e:	009a      	lsls	r2, r3, #2
    2550:	4b35      	ldr	r3, [pc, #212]	; (2628 <_usart_init+0xec>)
    2552:	189b      	adds	r3, r3, r2
    2554:	685a      	ldr	r2, [r3, #4]
    2556:	231c      	movs	r3, #28
    2558:	401a      	ands	r2, r3
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    255a:	69e3      	ldr	r3, [r4, #28]
    255c:	079b      	lsls	r3, r3, #30
    255e:	d1fc      	bne.n	255a <_usart_init+0x1e>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    2560:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    2562:	079b      	lsls	r3, r3, #30
    2564:	d509      	bpl.n	257a <_usart_init+0x3e>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    2566:	6823      	ldr	r3, [r4, #0]
    2568:	2102      	movs	r1, #2
    256a:	438b      	bics	r3, r1
    256c:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    256e:	69e3      	ldr	r3, [r4, #28]
    2570:	079b      	lsls	r3, r3, #30
    2572:	d1fc      	bne.n	256e <_usart_init+0x32>
    2574:	69e3      	ldr	r3, [r4, #28]
    2576:	079b      	lsls	r3, r3, #30
    2578:	d4fc      	bmi.n	2574 <_usart_init+0x38>
		hri_sercomusart_write_CTRLA_reg(hw, SERCOM_USART_CTRLA_SWRST | mode);
    257a:	2301      	movs	r3, #1
    257c:	4313      	orrs	r3, r2
	((Sercom *)hw)->USART.CTRLA.reg = data;
    257e:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    2580:	69e3      	ldr	r3, [r4, #28]
    2582:	079b      	lsls	r3, r3, #30
    2584:	d1fc      	bne.n	2580 <_usart_init+0x44>
    2586:	69e3      	ldr	r3, [r4, #28]
    2588:	07db      	lsls	r3, r3, #31
    258a:	d4fc      	bmi.n	2586 <_usart_init+0x4a>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
    258c:	0083      	lsls	r3, r0, #2
    258e:	181b      	adds	r3, r3, r0
    2590:	009a      	lsls	r2, r3, #2
    2592:	4b25      	ldr	r3, [pc, #148]	; (2628 <_usart_init+0xec>)
    2594:	189b      	adds	r3, r3, r2
    2596:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
    2598:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    259a:	69e3      	ldr	r3, [r4, #28]
    259c:	079b      	lsls	r3, r3, #30
    259e:	d1fc      	bne.n	259a <_usart_init+0x5e>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
    25a0:	0083      	lsls	r3, r0, #2
    25a2:	181b      	adds	r3, r3, r0
    25a4:	009a      	lsls	r2, r3, #2
    25a6:	4b20      	ldr	r3, [pc, #128]	; (2628 <_usart_init+0xec>)
    25a8:	189b      	adds	r3, r3, r2
    25aa:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->USART.CTRLB.reg = data;
    25ac:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
    25ae:	69e3      	ldr	r3, [r4, #28]
    25b0:	075b      	lsls	r3, r3, #29
    25b2:	d1fc      	bne.n	25ae <_usart_init+0x72>
	if ((_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x1)) || (_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x3))) {
    25b4:	0083      	lsls	r3, r0, #2
    25b6:	181b      	adds	r3, r3, r0
    25b8:	009a      	lsls	r2, r3, #2
    25ba:	4b1b      	ldr	r3, [pc, #108]	; (2628 <_usart_init+0xec>)
    25bc:	189b      	adds	r3, r3, r2
    25be:	685b      	ldr	r3, [r3, #4]
    25c0:	049a      	lsls	r2, r3, #18
    25c2:	d40b      	bmi.n	25dc <_usart_init+0xa0>
    25c4:	22c0      	movs	r2, #192	; 0xc0
    25c6:	01d2      	lsls	r2, r2, #7
    25c8:	4213      	tst	r3, r2
    25ca:	d107      	bne.n	25dc <_usart_init+0xa0>
		hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
    25cc:	0083      	lsls	r3, r0, #2
    25ce:	181b      	adds	r3, r3, r0
    25d0:	009a      	lsls	r2, r3, #2
    25d2:	4b15      	ldr	r3, [pc, #84]	; (2628 <_usart_init+0xec>)
    25d4:	189b      	adds	r3, r3, r2
    25d6:	899b      	ldrh	r3, [r3, #12]
	((Sercom *)hw)->USART.BAUD.reg = data;
    25d8:	81a3      	strh	r3, [r4, #12]
    25da:	e015      	b.n	2608 <_usart_init+0xcc>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
    25dc:	0083      	lsls	r3, r0, #2
    25de:	181b      	adds	r3, r3, r0
    25e0:	009a      	lsls	r2, r3, #2
    25e2:	4911      	ldr	r1, [pc, #68]	; (2628 <_usart_init+0xec>)
    25e4:	1889      	adds	r1, r1, r2
    25e6:	898a      	ldrh	r2, [r1, #12]
    25e8:	89a3      	ldrh	r3, [r4, #12]
    25ea:	04d2      	lsls	r2, r2, #19
    25ec:	0cd2      	lsrs	r2, r2, #19
    25ee:	0b5b      	lsrs	r3, r3, #13
    25f0:	035b      	lsls	r3, r3, #13
    25f2:	4313      	orrs	r3, r2
    25f4:	81a3      	strh	r3, [r4, #12]
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
    25f6:	7b8b      	ldrb	r3, [r1, #14]
    25f8:	2207      	movs	r2, #7
    25fa:	401a      	ands	r2, r3
    25fc:	89a3      	ldrh	r3, [r4, #12]
    25fe:	0352      	lsls	r2, r2, #13
    2600:	04db      	lsls	r3, r3, #19
    2602:	0cdb      	lsrs	r3, r3, #19
    2604:	4313      	orrs	r3, r2
    2606:	81a3      	strh	r3, [r4, #12]
	hri_sercomusart_write_RXPL_reg(hw, _usarts[i].rxpl);
    2608:	4a07      	ldr	r2, [pc, #28]	; (2628 <_usart_init+0xec>)
    260a:	0083      	lsls	r3, r0, #2
    260c:	181d      	adds	r5, r3, r0
    260e:	00a9      	lsls	r1, r5, #2
    2610:	000d      	movs	r5, r1
    2612:	1851      	adds	r1, r2, r1
    2614:	7bc9      	ldrb	r1, [r1, #15]
	((Sercom *)hw)->USART.RXPL.reg = data;
    2616:	73a1      	strb	r1, [r4, #14]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
    2618:	1952      	adds	r2, r2, r5
    261a:	7c12      	ldrb	r2, [r2, #16]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    261c:	2330      	movs	r3, #48	; 0x30
    261e:	54e2      	strb	r2, [r4, r3]
}
    2620:	2000      	movs	r0, #0
    2622:	bd70      	pop	{r4, r5, r6, pc}
    2624:	000024f9 	.word	0x000024f9
    2628:	0000e1b8 	.word	0x0000e1b8

0000262c <_usart_async_init>:
{
    262c:	b570      	push	{r4, r5, r6, lr}
    262e:	0006      	movs	r6, r0
    2630:	000c      	movs	r4, r1
	ASSERT(device);
    2632:	1e43      	subs	r3, r0, #1
    2634:	4198      	sbcs	r0, r3
    2636:	b2c0      	uxtb	r0, r0
    2638:	22c4      	movs	r2, #196	; 0xc4
    263a:	4919      	ldr	r1, [pc, #100]	; (26a0 <_usart_async_init+0x74>)
    263c:	4b19      	ldr	r3, [pc, #100]	; (26a4 <_usart_async_init+0x78>)
    263e:	4798      	blx	r3
	init_status = _usart_init(hw);
    2640:	0020      	movs	r0, r4
    2642:	4b19      	ldr	r3, [pc, #100]	; (26a8 <_usart_async_init+0x7c>)
    2644:	4798      	blx	r3
    2646:	1e05      	subs	r5, r0, #0
	if (init_status) {
    2648:	d001      	beq.n	264e <_usart_async_init+0x22>
}
    264a:	0028      	movs	r0, r5
    264c:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
    264e:	61b4      	str	r4, [r6, #24]
	_sercom_init_irq_param(hw, (void *)device);
    2650:	0031      	movs	r1, r6
    2652:	0020      	movs	r0, r4
    2654:	4b15      	ldr	r3, [pc, #84]	; (26ac <_usart_async_init+0x80>)
    2656:	4798      	blx	r3
	NVIC_DisableIRQ((IRQn_Type)_sercom_get_irq_num(hw));
    2658:	0020      	movs	r0, r4
    265a:	4b15      	ldr	r3, [pc, #84]	; (26b0 <_usart_async_init+0x84>)
    265c:	4798      	blx	r3
    265e:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    2660:	2b00      	cmp	r3, #0
    2662:	db0a      	blt.n	267a <_usart_async_init+0x4e>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    2664:	211f      	movs	r1, #31
    2666:	4001      	ands	r1, r0
    2668:	2201      	movs	r2, #1
    266a:	408a      	lsls	r2, r1
    266c:	2180      	movs	r1, #128	; 0x80
    266e:	4c11      	ldr	r4, [pc, #68]	; (26b4 <_usart_async_init+0x88>)
    2670:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    2672:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    2676:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    267a:	2b00      	cmp	r3, #0
    267c:	db07      	blt.n	268e <_usart_async_init+0x62>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    267e:	211f      	movs	r1, #31
    2680:	4001      	ands	r1, r0
    2682:	2201      	movs	r2, #1
    2684:	408a      	lsls	r2, r1
    2686:	21c0      	movs	r1, #192	; 0xc0
    2688:	0049      	lsls	r1, r1, #1
    268a:	4c0a      	ldr	r4, [pc, #40]	; (26b4 <_usart_async_init+0x88>)
    268c:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    268e:	2b00      	cmp	r3, #0
    2690:	dbdb      	blt.n	264a <_usart_async_init+0x1e>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    2692:	231f      	movs	r3, #31
    2694:	4018      	ands	r0, r3
    2696:	3b1e      	subs	r3, #30
    2698:	4083      	lsls	r3, r0
    269a:	4a06      	ldr	r2, [pc, #24]	; (26b4 <_usart_async_init+0x88>)
    269c:	6013      	str	r3, [r2, #0]
    269e:	e7d4      	b.n	264a <_usart_async_init+0x1e>
    26a0:	0000e228 	.word	0x0000e228
    26a4:	00001fb1 	.word	0x00001fb1
    26a8:	0000253d 	.word	0x0000253d
    26ac:	000024b1 	.word	0x000024b1
    26b0:	000024c9 	.word	0x000024c9
    26b4:	e000e100 	.word	0xe000e100

000026b8 <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    26b8:	6983      	ldr	r3, [r0, #24]
    26ba:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    26bc:	8519      	strh	r1, [r3, #40]	; 0x28
}
    26be:	4770      	bx	lr

000026c0 <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
    26c0:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    26c2:	2201      	movs	r2, #1
    26c4:	759a      	strb	r2, [r3, #22]
}
    26c6:	4770      	bx	lr

000026c8 <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
    26c8:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    26ca:	2202      	movs	r2, #2
    26cc:	759a      	strb	r2, [r3, #22]
}
    26ce:	4770      	bx	lr

000026d0 <SERCOM3_Handler>:

	return NULL;
}

void SERCOM3_Handler(void)
{
    26d0:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom3_dev);
    26d2:	4b02      	ldr	r3, [pc, #8]	; (26dc <SERCOM3_Handler+0xc>)
    26d4:	6818      	ldr	r0, [r3, #0]
    26d6:	4b02      	ldr	r3, [pc, #8]	; (26e0 <SERCOM3_Handler+0x10>)
    26d8:	4798      	blx	r3
}
    26da:	bd10      	pop	{r4, pc}
    26dc:	20000c7c 	.word	0x20000c7c
    26e0:	0000244d 	.word	0x0000244d

000026e4 <_spi_m_sync_init>:

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    26e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    26e6:	0006      	movs	r6, r0
    26e8:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    26ea:	0008      	movs	r0, r1
    26ec:	4b73      	ldr	r3, [pc, #460]	; (28bc <_spi_m_sync_init+0x1d8>)
    26ee:	4798      	blx	r3
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    26f0:	2300      	movs	r3, #0
    26f2:	e001      	b.n	26f8 <_spi_m_sync_init+0x14>
    26f4:	3301      	adds	r3, #1
    26f6:	b2db      	uxtb	r3, r3
    26f8:	2b02      	cmp	r3, #2
    26fa:	d80b      	bhi.n	2714 <_spi_m_sync_init+0x30>
		if (sercomspi_regs[i].n == n) {
    26fc:	0119      	lsls	r1, r3, #4
    26fe:	18c9      	adds	r1, r1, r3
    2700:	4a6f      	ldr	r2, [pc, #444]	; (28c0 <_spi_m_sync_init+0x1dc>)
    2702:	1852      	adds	r2, r2, r1
    2704:	324c      	adds	r2, #76	; 0x4c
    2706:	7812      	ldrb	r2, [r2, #0]
    2708:	4290      	cmp	r0, r2
    270a:	d1f3      	bne.n	26f4 <_spi_m_sync_init+0x10>
			return &sercomspi_regs[i];
    270c:	4d6c      	ldr	r5, [pc, #432]	; (28c0 <_spi_m_sync_init+0x1dc>)
    270e:	353c      	adds	r5, #60	; 0x3c
    2710:	186d      	adds	r5, r5, r1
    2712:	e000      	b.n	2716 <_spi_m_sync_init+0x32>
	return NULL;
    2714:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    2716:	2e00      	cmp	r6, #0
    2718:	d100      	bne.n	271c <_spi_m_sync_init+0x38>
    271a:	e082      	b.n	2822 <_spi_m_sync_init+0x13e>
    271c:	2c00      	cmp	r4, #0
    271e:	d100      	bne.n	2722 <_spi_m_sync_init+0x3e>
    2720:	e07d      	b.n	281e <_spi_m_sync_init+0x13a>
    2722:	2001      	movs	r0, #1
    2724:	4a67      	ldr	r2, [pc, #412]	; (28c4 <_spi_m_sync_init+0x1e0>)
    2726:	4968      	ldr	r1, [pc, #416]	; (28c8 <_spi_m_sync_init+0x1e4>)
    2728:	4b68      	ldr	r3, [pc, #416]	; (28cc <_spi_m_sync_init+0x1e8>)
    272a:	4798      	blx	r3

	if (regs == NULL) {
    272c:	2d00      	cmp	r5, #0
    272e:	d100      	bne.n	2732 <_spi_m_sync_init+0x4e>
    2730:	e0c0      	b.n	28b4 <_spi_m_sync_init+0x1d0>
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    2732:	69e3      	ldr	r3, [r4, #28]
		return ERR_INVALID_ARG;
	}

	if (!hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    2734:	07db      	lsls	r3, r3, #31
    2736:	d421      	bmi.n	277c <_spi_m_sync_init+0x98>
		uint32_t mode = regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk;
    2738:	782a      	ldrb	r2, [r5, #0]
    273a:	786b      	ldrb	r3, [r5, #1]
    273c:	021b      	lsls	r3, r3, #8
    273e:	4313      	orrs	r3, r2
    2740:	78aa      	ldrb	r2, [r5, #2]
    2742:	0412      	lsls	r2, r2, #16
    2744:	4313      	orrs	r3, r2
    2746:	78ea      	ldrb	r2, [r5, #3]
    2748:	0612      	lsls	r2, r2, #24
    274a:	431a      	orrs	r2, r3
    274c:	231c      	movs	r3, #28
    274e:	401a      	ands	r2, r3
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    2750:	69e3      	ldr	r3, [r4, #28]
    2752:	079b      	lsls	r3, r3, #30
    2754:	d1fc      	bne.n	2750 <_spi_m_sync_init+0x6c>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    2756:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    2758:	079b      	lsls	r3, r3, #30
    275a:	d509      	bpl.n	2770 <_spi_m_sync_init+0x8c>
	((Sercom *)hw)->SPI.CTRLA.reg &= ~SERCOM_SPI_CTRLA_ENABLE;
    275c:	6823      	ldr	r3, [r4, #0]
    275e:	2102      	movs	r1, #2
    2760:	438b      	bics	r3, r1
    2762:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    2764:	69e3      	ldr	r3, [r4, #28]
    2766:	079b      	lsls	r3, r3, #30
    2768:	d1fc      	bne.n	2764 <_spi_m_sync_init+0x80>
    276a:	69e3      	ldr	r3, [r4, #28]
    276c:	079b      	lsls	r3, r3, #30
    276e:	d4fc      	bmi.n	276a <_spi_m_sync_init+0x86>
			hri_sercomspi_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_ENABLE);
		}
		hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST | mode);
    2770:	2301      	movs	r3, #1
    2772:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    2774:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    2776:	69e3      	ldr	r3, [r4, #28]
    2778:	079b      	lsls	r3, r3, #30
    277a:	d1fc      	bne.n	2776 <_spi_m_sync_init+0x92>
    277c:	69e3      	ldr	r3, [r4, #28]
    277e:	07db      	lsls	r3, r3, #31
    2780:	d4fc      	bmi.n	277c <_spi_m_sync_init+0x98>
	}
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST);

	dev->prvt = hw;
    2782:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    2784:	782b      	ldrb	r3, [r5, #0]
    2786:	786a      	ldrb	r2, [r5, #1]
    2788:	0212      	lsls	r2, r2, #8
    278a:	431a      	orrs	r2, r3
    278c:	78ab      	ldrb	r3, [r5, #2]
    278e:	041b      	lsls	r3, r3, #16
    2790:	431a      	orrs	r2, r3
    2792:	78eb      	ldrb	r3, [r5, #3]
    2794:	061b      	lsls	r3, r3, #24
    2796:	4313      	orrs	r3, r2
    2798:	221c      	movs	r2, #28
    279a:	4013      	ands	r3, r2
    279c:	2b08      	cmp	r3, #8
    279e:	d042      	beq.n	2826 <_spi_m_sync_init+0x142>
	ASSERT(hw && regs);
    27a0:	2c00      	cmp	r4, #0
    27a2:	d100      	bne.n	27a6 <_spi_m_sync_init+0xc2>
    27a4:	e082      	b.n	28ac <_spi_m_sync_init+0x1c8>
    27a6:	2d00      	cmp	r5, #0
    27a8:	d100      	bne.n	27ac <_spi_m_sync_init+0xc8>
    27aa:	e07d      	b.n	28a8 <_spi_m_sync_init+0x1c4>
    27ac:	2001      	movs	r0, #1
    27ae:	4a48      	ldr	r2, [pc, #288]	; (28d0 <_spi_m_sync_init+0x1ec>)
    27b0:	4945      	ldr	r1, [pc, #276]	; (28c8 <_spi_m_sync_init+0x1e4>)
    27b2:	4b46      	ldr	r3, [pc, #280]	; (28cc <_spi_m_sync_init+0x1e8>)
    27b4:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    27b6:	782b      	ldrb	r3, [r5, #0]
    27b8:	786a      	ldrb	r2, [r5, #1]
    27ba:	0212      	lsls	r2, r2, #8
    27bc:	431a      	orrs	r2, r3
    27be:	78ab      	ldrb	r3, [r5, #2]
    27c0:	041b      	lsls	r3, r3, #16
    27c2:	431a      	orrs	r2, r3
    27c4:	78eb      	ldrb	r3, [r5, #3]
    27c6:	061b      	lsls	r3, r3, #24
    27c8:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    27ca:	4a42      	ldr	r2, [pc, #264]	; (28d4 <_spi_m_sync_init+0x1f0>)
    27cc:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    27ce:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    27d0:	69e3      	ldr	r3, [r4, #28]
    27d2:	079b      	lsls	r3, r3, #30
    27d4:	d1fc      	bne.n	27d0 <_spi_m_sync_init+0xec>
	    (regs->ctrlb
    27d6:	792b      	ldrb	r3, [r5, #4]
    27d8:	796a      	ldrb	r2, [r5, #5]
    27da:	0212      	lsls	r2, r2, #8
    27dc:	431a      	orrs	r2, r3
    27de:	79ab      	ldrb	r3, [r5, #6]
    27e0:	041b      	lsls	r3, r3, #16
    27e2:	431a      	orrs	r2, r3
    27e4:	79eb      	ldrb	r3, [r5, #7]
    27e6:	061b      	lsls	r3, r3, #24
    27e8:	4313      	orrs	r3, r2
	        | (SERCOM_SPI_CTRLB_RXEN));
    27ea:	4a3b      	ldr	r2, [pc, #236]	; (28d8 <_spi_m_sync_init+0x1f4>)
    27ec:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    27ee:	2280      	movs	r2, #128	; 0x80
    27f0:	0292      	lsls	r2, r2, #10
    27f2:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    27f4:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    27f6:	69e3      	ldr	r3, [r4, #28]
    27f8:	075b      	lsls	r3, r3, #29
    27fa:	d1fc      	bne.n	27f6 <_spi_m_sync_init+0x112>
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    27fc:	7b2b      	ldrb	r3, [r5, #12]
	((Sercom *)hw)->SPI.BAUD.reg = data;
    27fe:	7323      	strb	r3, [r4, #12]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    2800:	7b6a      	ldrb	r2, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    2802:	2330      	movs	r3, #48	; 0x30
    2804:	54e2      	strb	r2, [r4, r3]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    2806:	792b      	ldrb	r3, [r5, #4]
    2808:	075b      	lsls	r3, r3, #29
    280a:	d151      	bne.n	28b0 <_spi_m_sync_init+0x1cc>
    280c:	2301      	movs	r3, #1
    280e:	7133      	strb	r3, [r6, #4]

	dev->dummy_byte = regs->dummy_byte;
    2810:	7baa      	ldrb	r2, [r5, #14]
    2812:	7beb      	ldrb	r3, [r5, #15]
    2814:	021b      	lsls	r3, r3, #8
    2816:	4313      	orrs	r3, r2
    2818:	80f3      	strh	r3, [r6, #6]

	return ERR_NONE;
    281a:	2000      	movs	r0, #0
}
    281c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(dev && hw);
    281e:	2000      	movs	r0, #0
    2820:	e780      	b.n	2724 <_spi_m_sync_init+0x40>
    2822:	2000      	movs	r0, #0
    2824:	e77e      	b.n	2724 <_spi_m_sync_init+0x40>
	ASSERT(hw && regs);
    2826:	2c00      	cmp	r4, #0
    2828:	d03c      	beq.n	28a4 <_spi_m_sync_init+0x1c0>
    282a:	2d00      	cmp	r5, #0
    282c:	d038      	beq.n	28a0 <_spi_m_sync_init+0x1bc>
    282e:	2001      	movs	r0, #1
    2830:	4a2a      	ldr	r2, [pc, #168]	; (28dc <_spi_m_sync_init+0x1f8>)
    2832:	4925      	ldr	r1, [pc, #148]	; (28c8 <_spi_m_sync_init+0x1e4>)
    2834:	4b25      	ldr	r3, [pc, #148]	; (28cc <_spi_m_sync_init+0x1e8>)
    2836:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    2838:	782b      	ldrb	r3, [r5, #0]
    283a:	786a      	ldrb	r2, [r5, #1]
    283c:	0212      	lsls	r2, r2, #8
    283e:	431a      	orrs	r2, r3
    2840:	78ab      	ldrb	r3, [r5, #2]
    2842:	041b      	lsls	r3, r3, #16
    2844:	431a      	orrs	r2, r3
    2846:	78eb      	ldrb	r3, [r5, #3]
    2848:	061b      	lsls	r3, r3, #24
    284a:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    284c:	4a21      	ldr	r2, [pc, #132]	; (28d4 <_spi_m_sync_init+0x1f0>)
    284e:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    2850:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    2852:	69e3      	ldr	r3, [r4, #28]
    2854:	079b      	lsls	r3, r3, #30
    2856:	d1fc      	bne.n	2852 <_spi_m_sync_init+0x16e>
	                              (regs->ctrlb & ~(SERCOM_SPI_CTRLB_MSSEN))
    2858:	792b      	ldrb	r3, [r5, #4]
    285a:	796a      	ldrb	r2, [r5, #5]
    285c:	0212      	lsls	r2, r2, #8
    285e:	431a      	orrs	r2, r3
    2860:	79ab      	ldrb	r3, [r5, #6]
    2862:	041b      	lsls	r3, r3, #16
    2864:	431a      	orrs	r2, r3
    2866:	79eb      	ldrb	r3, [r5, #7]
    2868:	061b      	lsls	r3, r3, #24
    286a:	4313      	orrs	r3, r2
	                                  | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_SSDE | SERCOM_SPI_CTRLB_PLOADEN));
    286c:	4a1c      	ldr	r2, [pc, #112]	; (28e0 <_spi_m_sync_init+0x1fc>)
    286e:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(hw,
    2870:	4a1c      	ldr	r2, [pc, #112]	; (28e4 <_spi_m_sync_init+0x200>)
    2872:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    2874:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    2876:	69e3      	ldr	r3, [r4, #28]
    2878:	075b      	lsls	r3, r3, #29
    287a:	d1fc      	bne.n	2876 <_spi_m_sync_init+0x192>
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    287c:	7a2b      	ldrb	r3, [r5, #8]
    287e:	7a6a      	ldrb	r2, [r5, #9]
    2880:	0212      	lsls	r2, r2, #8
    2882:	431a      	orrs	r2, r3
    2884:	7aab      	ldrb	r3, [r5, #10]
    2886:	041b      	lsls	r3, r3, #16
    2888:	431a      	orrs	r2, r3
    288a:	7aeb      	ldrb	r3, [r5, #11]
    288c:	061b      	lsls	r3, r3, #24
    288e:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    2890:	6263      	str	r3, [r4, #36]	; 0x24
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    2892:	7b6a      	ldrb	r2, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    2894:	2330      	movs	r3, #48	; 0x30
    2896:	54e2      	strb	r2, [r4, r3]
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    2898:	69e3      	ldr	r3, [r4, #28]
	while (hri_sercomspi_is_syncing(hw, 0xFFFFFFFF))
    289a:	2b00      	cmp	r3, #0
    289c:	d1fc      	bne.n	2898 <_spi_m_sync_init+0x1b4>
    289e:	e7b2      	b.n	2806 <_spi_m_sync_init+0x122>
	ASSERT(hw && regs);
    28a0:	2000      	movs	r0, #0
    28a2:	e7c5      	b.n	2830 <_spi_m_sync_init+0x14c>
    28a4:	2000      	movs	r0, #0
    28a6:	e7c3      	b.n	2830 <_spi_m_sync_init+0x14c>
	ASSERT(hw && regs);
    28a8:	2000      	movs	r0, #0
    28aa:	e780      	b.n	27ae <_spi_m_sync_init+0xca>
    28ac:	2000      	movs	r0, #0
    28ae:	e77e      	b.n	27ae <_spi_m_sync_init+0xca>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    28b0:	2302      	movs	r3, #2
    28b2:	e7ac      	b.n	280e <_spi_m_sync_init+0x12a>
		return ERR_INVALID_ARG;
    28b4:	200d      	movs	r0, #13
    28b6:	4240      	negs	r0, r0
    28b8:	e7b0      	b.n	281c <_spi_m_sync_init+0x138>
    28ba:	46c0      	nop			; (mov r8, r8)
    28bc:	0000243d 	.word	0x0000243d
    28c0:	0000e1b8 	.word	0x0000e1b8
    28c4:	00000952 	.word	0x00000952
    28c8:	0000e228 	.word	0x0000e228
    28cc:	00001fb1 	.word	0x00001fb1
    28d0:	00000917 	.word	0x00000917
    28d4:	fffffefc 	.word	0xfffffefc
    28d8:	fffd1dbf 	.word	0xfffd1dbf
    28dc:	0000092b 	.word	0x0000092b
    28e0:	fffdddbf 	.word	0xfffdddbf
    28e4:	00020240 	.word	0x00020240

000028e8 <_spi_m_sync_enable>:
{
	return _spi_deinit(dev->prvt);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    28e8:	b510      	push	{r4, lr}
    28ea:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    28ec:	d00d      	beq.n	290a <_spi_m_sync_enable+0x22>
    28ee:	6803      	ldr	r3, [r0, #0]
    28f0:	2b00      	cmp	r3, #0
    28f2:	d008      	beq.n	2906 <_spi_m_sync_enable+0x1e>
    28f4:	2001      	movs	r0, #1
    28f6:	4a06      	ldr	r2, [pc, #24]	; (2910 <_spi_m_sync_enable+0x28>)
    28f8:	4906      	ldr	r1, [pc, #24]	; (2914 <_spi_m_sync_enable+0x2c>)
    28fa:	4b07      	ldr	r3, [pc, #28]	; (2918 <_spi_m_sync_enable+0x30>)
    28fc:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    28fe:	6820      	ldr	r0, [r4, #0]
    2900:	4b06      	ldr	r3, [pc, #24]	; (291c <_spi_m_sync_enable+0x34>)
    2902:	4798      	blx	r3
}
    2904:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    2906:	2000      	movs	r0, #0
    2908:	e7f5      	b.n	28f6 <_spi_m_sync_enable+0xe>
    290a:	2000      	movs	r0, #0
    290c:	e7f3      	b.n	28f6 <_spi_m_sync_enable+0xe>
    290e:	46c0      	nop			; (mov r8, r8)
    2910:	000009ad 	.word	0x000009ad
    2914:	0000e228 	.word	0x0000e228
    2918:	00001fb1 	.word	0x00001fb1
    291c:	000024d9 	.word	0x000024d9

00002920 <_spi_m_sync_trans>:

	return ERR_NONE;
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    2920:	b5f0      	push	{r4, r5, r6, r7, lr}
    2922:	46ce      	mov	lr, r9
    2924:	4647      	mov	r7, r8
    2926:	b580      	push	{r7, lr}
    2928:	b089      	sub	sp, #36	; 0x24
    292a:	4681      	mov	r9, r0
    292c:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    292e:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    2930:	680b      	ldr	r3, [r1, #0]
    2932:	9303      	str	r3, [sp, #12]
    2934:	684b      	ldr	r3, [r1, #4]
    2936:	9304      	str	r3, [sp, #16]
    2938:	2300      	movs	r3, #0
    293a:	9305      	str	r3, [sp, #20]
    293c:	9306      	str	r3, [sp, #24]
    293e:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    2940:	2800      	cmp	r0, #0
    2942:	d014      	beq.n	296e <_spi_m_sync_trans+0x4e>
    2944:	2c00      	cmp	r4, #0
    2946:	d010      	beq.n	296a <_spi_m_sync_trans+0x4a>
    2948:	2001      	movs	r0, #1
    294a:	4a37      	ldr	r2, [pc, #220]	; (2a28 <_spi_m_sync_trans+0x108>)
    294c:	4937      	ldr	r1, [pc, #220]	; (2a2c <_spi_m_sync_trans+0x10c>)
    294e:	4b38      	ldr	r3, [pc, #224]	; (2a30 <_spi_m_sync_trans+0x110>)
    2950:	4798      	blx	r3
    2952:	69e3      	ldr	r3, [r4, #28]

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(
    2954:	075b      	lsls	r3, r3, #29
    2956:	d164      	bne.n	2a22 <_spi_m_sync_trans+0x102>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    2958:	69e3      	ldr	r3, [r4, #28]
    295a:	079b      	lsls	r3, r3, #30
    295c:	d1fc      	bne.n	2958 <_spi_m_sync_trans+0x38>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    295e:	6823      	ldr	r3, [r4, #0]
	        hw, (SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE | SERCOM_SPI_SYNCBUSY_CTRLB))) {
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    2960:	079b      	lsls	r3, r3, #30
    2962:	d420      	bmi.n	29a6 <_spi_m_sync_trans+0x86>
		return ERR_NOT_INITIALIZED;
    2964:	2014      	movs	r0, #20
    2966:	4240      	negs	r0, r0
    2968:	e056      	b.n	2a18 <_spi_m_sync_trans+0xf8>
	ASSERT(dev && hw);
    296a:	2000      	movs	r0, #0
    296c:	e7ed      	b.n	294a <_spi_m_sync_trans+0x2a>
    296e:	2000      	movs	r0, #0
    2970:	e7eb      	b.n	294a <_spi_m_sync_trans+0x2a>
		return false;
    2972:	2200      	movs	r2, #0
    2974:	e02d      	b.n	29d2 <_spi_m_sync_trans+0xb2>
			data |= (*ctrl->txbuf) << 8;
    2976:	7848      	ldrb	r0, [r1, #1]
    2978:	0200      	lsls	r0, r0, #8
    297a:	4647      	mov	r7, r8
    297c:	4307      	orrs	r7, r0
    297e:	46b8      	mov	r8, r7
			ctrl->txbuf++;
    2980:	3102      	adds	r1, #2
    2982:	9103      	str	r1, [sp, #12]
	ctrl->txcnt++;
    2984:	3201      	adds	r2, #1
    2986:	9205      	str	r2, [sp, #20]
	((Sercom *)hw)->SPI.DATA.reg = data;
    2988:	4642      	mov	r2, r8
    298a:	62a2      	str	r2, [r4, #40]	; 0x28
	if (SERCOM_SPI_INTFLAG_ERROR & iflag) {
    298c:	b25b      	sxtb	r3, r3
    298e:	2b00      	cmp	r3, #0
    2990:	db35      	blt.n	29fe <_spi_m_sync_trans+0xde>
	return ERR_NONE;
    2992:	2000      	movs	r0, #0
			}
		}

		rc = _spi_err_check(iflag, hw);

		if (rc < 0) {
    2994:	2800      	cmp	r0, #0
    2996:	db3a      	blt.n	2a0e <_spi_m_sync_trans+0xee>
			break;
		}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    2998:	9805      	ldr	r0, [sp, #20]
    299a:	68ab      	ldr	r3, [r5, #8]
    299c:	4298      	cmp	r0, r3
    299e:	d302      	bcc.n	29a6 <_spi_m_sync_trans+0x86>
    29a0:	9a06      	ldr	r2, [sp, #24]
    29a2:	4293      	cmp	r3, r2
    29a4:	d933      	bls.n	2a0e <_spi_m_sync_trans+0xee>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    29a6:	7e23      	ldrb	r3, [r4, #24]
    29a8:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    29aa:	075a      	lsls	r2, r3, #29
    29ac:	d5e1      	bpl.n	2972 <_spi_m_sync_trans+0x52>
	return ((Sercom *)hw)->SPI.DATA.reg;
    29ae:	6aa1      	ldr	r1, [r4, #40]	; 0x28
	if (ctrl->rxbuf) {
    29b0:	9a04      	ldr	r2, [sp, #16]
    29b2:	2a00      	cmp	r2, #0
    29b4:	d008      	beq.n	29c8 <_spi_m_sync_trans+0xa8>
		*ctrl->rxbuf++ = (uint8_t)data;
    29b6:	1c50      	adds	r0, r2, #1
    29b8:	9004      	str	r0, [sp, #16]
    29ba:	7011      	strb	r1, [r2, #0]
		if (ctrl->char_size > 1) {
    29bc:	2e01      	cmp	r6, #1
    29be:	d903      	bls.n	29c8 <_spi_m_sync_trans+0xa8>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    29c0:	1c90      	adds	r0, r2, #2
    29c2:	9004      	str	r0, [sp, #16]
    29c4:	0a09      	lsrs	r1, r1, #8
    29c6:	7051      	strb	r1, [r2, #1]
	ctrl->rxcnt++;
    29c8:	9a06      	ldr	r2, [sp, #24]
    29ca:	9201      	str	r2, [sp, #4]
    29cc:	3201      	adds	r2, #1
    29ce:	9206      	str	r2, [sp, #24]
	return true;
    29d0:	2201      	movs	r2, #1
		if (!_spi_rx_check_and_receive(hw, iflag, &ctrl)) {
    29d2:	2a00      	cmp	r2, #0
    29d4:	d1da      	bne.n	298c <_spi_m_sync_trans+0x6c>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    29d6:	9906      	ldr	r1, [sp, #24]
    29d8:	9a05      	ldr	r2, [sp, #20]
    29da:	4291      	cmp	r1, r2
    29dc:	d3d6      	bcc.n	298c <_spi_m_sync_trans+0x6c>
				_spi_tx_check_and_send(hw, iflag, &ctrl, dev->dummy_byte);
    29de:	4649      	mov	r1, r9
    29e0:	88c8      	ldrh	r0, [r1, #6]
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    29e2:	07d9      	lsls	r1, r3, #31
    29e4:	d5d2      	bpl.n	298c <_spi_m_sync_trans+0x6c>
	if (ctrl->txbuf) {
    29e6:	9903      	ldr	r1, [sp, #12]
    29e8:	2900      	cmp	r1, #0
    29ea:	d006      	beq.n	29fa <_spi_m_sync_trans+0xda>
		data = *ctrl->txbuf++;
    29ec:	1c48      	adds	r0, r1, #1
    29ee:	9003      	str	r0, [sp, #12]
    29f0:	7808      	ldrb	r0, [r1, #0]
    29f2:	4680      	mov	r8, r0
		if (ctrl->char_size > 1) {
    29f4:	2e01      	cmp	r6, #1
    29f6:	d8be      	bhi.n	2976 <_spi_m_sync_trans+0x56>
    29f8:	e7c4      	b.n	2984 <_spi_m_sync_trans+0x64>
		data = dummy;
    29fa:	4680      	mov	r8, r0
    29fc:	e7c2      	b.n	2984 <_spi_m_sync_trans+0x64>
	((Sercom *)hw)->SPI.STATUS.reg = mask;
    29fe:	2301      	movs	r3, #1
    2a00:	425b      	negs	r3, r3
    2a02:	8363      	strh	r3, [r4, #26]
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    2a04:	3381      	adds	r3, #129	; 0x81
    2a06:	7623      	strb	r3, [r4, #24]
		return ERR_OVERFLOW;
    2a08:	2013      	movs	r0, #19
    2a0a:	4240      	negs	r0, r0
    2a0c:	e7c2      	b.n	2994 <_spi_m_sync_trans+0x74>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    2a0e:	7e23      	ldrb	r3, [r4, #24]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    2a10:	079b      	lsls	r3, r3, #30
    2a12:	d0fc      	beq.n	2a0e <_spi_m_sync_trans+0xee>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    2a14:	2303      	movs	r3, #3
    2a16:	7623      	strb	r3, [r4, #24]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    2a18:	b009      	add	sp, #36	; 0x24
    2a1a:	bc0c      	pop	{r2, r3}
    2a1c:	4690      	mov	r8, r2
    2a1e:	4699      	mov	r9, r3
    2a20:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return ERR_BUSY;
    2a22:	2004      	movs	r0, #4
    2a24:	4240      	negs	r0, r0
    2a26:	e7f7      	b.n	2a18 <_spi_m_sync_trans+0xf8>
    2a28:	00000ab2 	.word	0x00000ab2
    2a2c:	0000e228 	.word	0x0000e228
    2a30:	00001fb1 	.word	0x00001fb1

00002a34 <_sysctrl_init_sources>:
}

static inline void hri_sysctrl_write_XOSC32K_reg(const void *const hw, hri_sysctrl_xosc32k_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->XOSC32K.reg = data;
    2a34:	4a14      	ldr	r2, [pc, #80]	; (2a88 <_sysctrl_init_sources+0x54>)
    2a36:	2366      	movs	r3, #102	; 0x66
    2a38:	8293      	strh	r3, [r2, #20]
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    2a3a:	6a11      	ldr	r1, [r2, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    2a3c:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    2a3e:	6a13      	ldr	r3, [r2, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    2a40:	0f9b      	lsrs	r3, r3, #30
    2a42:	079b      	lsls	r3, r3, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    2a44:	0409      	lsls	r1, r1, #16
    2a46:	4811      	ldr	r0, [pc, #68]	; (2a8c <_sysctrl_init_sources+0x58>)
    2a48:	4001      	ands	r1, r0
#endif
	                                SYSCTRL_OSC8M_PRESC(CONF_OSC8M_PRESC)
	                                | (CONF_OSC8M_RUNSTDBY << SYSCTRL_OSC8M_RUNSTDBY_Pos)
    2a4a:	430b      	orrs	r3, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    2a4c:	2102      	movs	r1, #2
    2a4e:	430b      	orrs	r3, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    2a50:	6213      	str	r3, [r2, #32]
	tmp = ((Sysctrl *)hw)->OSC32K.reg;
    2a52:	6993      	ldr	r3, [r2, #24]
	tmp = (tmp & SYSCTRL_OSC32K_CALIB_Msk) >> SYSCTRL_OSC32K_CALIB_Pos;
    2a54:	0c1b      	lsrs	r3, r3, #16
	hri_sysctrl_write_OSC32K_reg(
	    hw,
#if CONF_OSC32K_OVERWRITE_CALIBRATION == 1
	    SYSCTRL_OSC32K_CALIB(CONF_OSC32K_CALIB) |
#else
	    SYSCTRL_OSC32K_CALIB(calib) |
    2a56:	041b      	lsls	r3, r3, #16
    2a58:	21fe      	movs	r1, #254	; 0xfe
    2a5a:	03c9      	lsls	r1, r1, #15
    2a5c:	400b      	ands	r3, r1
#endif
	        (CONF_OSC32K_WRTLOCK << SYSCTRL_OSC32K_WRTLOCK_Pos) | SYSCTRL_OSC32K_STARTUP(CONF_OSC32K_STARTUP)
	        | (CONF_OSC32K_RUNSTDBY << SYSCTRL_OSC32K_RUNSTDBY_Pos) | (CONF_OSC32K_EN1K << SYSCTRL_OSC32K_EN1K_Pos)
	        | (CONF_OSC32K_EN32K << SYSCTRL_OSC32K_EN32K_Pos) | (1 << SYSCTRL_OSC32K_ENABLE_Pos));
    2a5e:	2146      	movs	r1, #70	; 0x46
    2a60:	430b      	orrs	r3, r1
	((Sysctrl *)hw)->OSC32K.reg = data;
    2a62:	6193      	str	r3, [r2, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    2a64:	7f13      	ldrb	r3, [r2, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    2a66:	3927      	subs	r1, #39	; 0x27
    2a68:	400b      	ands	r3, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    2a6a:	7713      	strb	r3, [r2, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_XOSC32KRDY) >> SYSCTRL_PCLKSR_XOSC32KRDY_Pos;
    2a6c:	4b06      	ldr	r3, [pc, #24]	; (2a88 <_sysctrl_init_sources+0x54>)
    2a6e:	68db      	ldr	r3, [r3, #12]
	                                    (CONF_OSC32K_WRTLOCK << SYSCTRL_OSCULP32K_WRTLOCK_Pos));
#endif

#if CONF_XOSC32K_CONFIG == 1
#if CONF_XOSC32K_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_XOSC32KRDY_bit(hw))
    2a70:	079b      	lsls	r3, r3, #30
    2a72:	d5fb      	bpl.n	2a6c <_sysctrl_init_sources+0x38>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC32KRDY) >> SYSCTRL_PCLKSR_OSC32KRDY_Pos;
    2a74:	4b04      	ldr	r3, [pc, #16]	; (2a88 <_sysctrl_init_sources+0x54>)
    2a76:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC32K_CONFIG == 1
#if CONF_OSC32K_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC32KRDY_bit(hw))
    2a78:	075b      	lsls	r3, r3, #29
    2a7a:	d5fb      	bpl.n	2a74 <_sysctrl_init_sources+0x40>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    2a7c:	4b02      	ldr	r3, [pc, #8]	; (2a88 <_sysctrl_init_sources+0x54>)
    2a7e:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    2a80:	071b      	lsls	r3, r3, #28
    2a82:	d5fb      	bpl.n	2a7c <_sysctrl_init_sources+0x48>
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    2a84:	4770      	bx	lr
    2a86:	46c0      	nop			; (mov r8, r8)
    2a88:	40000800 	.word	0x40000800
    2a8c:	0fff0000 	.word	0x0fff0000

00002a90 <_sysctrl_init_referenced_generators>:
}

static inline void hri_sysctrl_write_DFLLCTRL_reg(const void *const hw, hri_sysctrl_dfllctrl_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    2a90:	2202      	movs	r2, #2
    2a92:	4b1f      	ldr	r3, [pc, #124]	; (2b10 <_sysctrl_init_referenced_generators+0x80>)
    2a94:	849a      	strh	r2, [r3, #36]	; 0x24
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    2a96:	4b1e      	ldr	r3, [pc, #120]	; (2b10 <_sysctrl_init_referenced_generators+0x80>)
    2a98:	68db      	ldr	r3, [r3, #12]
	hri_gclk_write_CLKCTRL_reg(GCLK,
	                           GCLK_CLKCTRL_ID(0) | GCLK_CLKCTRL_GEN(CONF_DFLL_GCLK) | (1 << GCLK_CLKCTRL_CLKEN_Pos));
#endif

	hri_sysctrl_write_DFLLCTRL_reg(hw, SYSCTRL_DFLLCTRL_ENABLE);
	while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    2a9a:	06db      	lsls	r3, r3, #27
    2a9c:	d5fb      	bpl.n	2a96 <_sysctrl_init_referenced_generators+0x6>
}

static inline void hri_sysctrl_write_DFLLMUL_reg(const void *const hw, hri_sysctrl_dfllmul_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLMUL.reg = data;
    2a9e:	4a1d      	ldr	r2, [pc, #116]	; (2b14 <_sysctrl_init_referenced_generators+0x84>)
    2aa0:	4b1b      	ldr	r3, [pc, #108]	; (2b10 <_sysctrl_init_referenced_generators+0x80>)
    2aa2:	62da      	str	r2, [r3, #44]	; 0x2c
		;

	hri_sysctrl_write_DFLLMUL_reg(hw,
	                              SYSCTRL_DFLLMUL_CSTEP(CONF_DFLL_CSTEP) | SYSCTRL_DFLLMUL_FSTEP(CONF_DFLL_FSTEP)
	                                  | SYSCTRL_DFLLMUL_MUL(CONF_DFLL_MUL));
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    2aa4:	4b1c      	ldr	r3, [pc, #112]	; (2b18 <_sysctrl_init_referenced_generators+0x88>)
    2aa6:	681b      	ldr	r3, [r3, #0]
    2aa8:	0e9b      	lsrs	r3, r3, #26
    2aaa:	2b3f      	cmp	r3, #63	; 0x3f
    2aac:	d028      	beq.n	2b00 <_sysctrl_init_referenced_generators+0x70>
    2aae:	029b      	lsls	r3, r3, #10
    2ab0:	2280      	movs	r2, #128	; 0x80
    2ab2:	0092      	lsls	r2, r2, #2
    2ab4:	431a      	orrs	r2, r3
	((Sysctrl *)hw)->DFLLVAL.reg = data;
    2ab6:	4b16      	ldr	r3, [pc, #88]	; (2b10 <_sysctrl_init_referenced_generators+0x80>)
    2ab8:	629a      	str	r2, [r3, #40]	; 0x28
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    2aba:	2293      	movs	r2, #147	; 0x93
    2abc:	0052      	lsls	r2, r2, #1
    2abe:	849a      	strh	r2, [r3, #36]	; 0x24
}

static inline void hri_sysctrl_write_DPLLCTRLA_reg(const void *const hw, hri_sysctrl_dpllctrla_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DPLLCTRLA.reg = data;
    2ac0:	2142      	movs	r1, #66	; 0x42
    2ac2:	3ae2      	subs	r2, #226	; 0xe2
    2ac4:	5499      	strb	r1, [r3, r2]
}

static inline void hri_sysctrl_write_DPLLRATIO_reg(const void *const hw, hri_sysctrl_dpllratio_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DPLLRATIO.reg = data;
    2ac6:	4a15      	ldr	r2, [pc, #84]	; (2b1c <_sysctrl_init_referenced_generators+0x8c>)
    2ac8:	649a      	str	r2, [r3, #72]	; 0x48
}

static inline void hri_sysctrl_write_DPLLCTRLB_reg(const void *const hw, hri_sysctrl_dpllctrlb_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DPLLCTRLB.reg = data;
    2aca:	2200      	movs	r2, #0
    2acc:	64da      	str	r2, [r3, #76]	; 0x4c
	tmp = ((Sysctrl *)hw)->DFLLCTRL.reg;
    2ace:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
	        | SYSCTRL_DPLLCTRLB_FILTER(CONF_DPLL_FILTER));
#endif

#if CONF_DFLL_CONFIG == 1
#if CONF_DFLL_ENABLE == 1
	if (hri_sysctrl_get_DFLLCTRL_MODE_bit(hw)) {
    2ad0:	075b      	lsls	r3, r3, #29
    2ad2:	d518      	bpl.n	2b06 <_sysctrl_init_referenced_generators+0x76>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    2ad4:	4b0e      	ldr	r3, [pc, #56]	; (2b10 <_sysctrl_init_referenced_generators+0x80>)
    2ad6:	68db      	ldr	r3, [r3, #12]
		    = SYSCTRL_PCLKSR_DFLLRDY | SYSCTRL_PCLKSR_DFLLLCKF | SYSCTRL_PCLKSR_DFLLLCKC;
#else
		hri_sysctrl_pclksr_reg_t status_mask = SYSCTRL_PCLKSR_DFLLRDY;
#endif

		while (hri_sysctrl_get_PCLKSR_reg(hw, status_mask) != status_mask)
    2ad8:	06db      	lsls	r3, r3, #27
    2ada:	d5fb      	bpl.n	2ad4 <_sysctrl_init_referenced_generators+0x44>
	return (((Sysctrl *)hw)->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE) >> SYSCTRL_DPLLSTATUS_ENABLE_Pos;
    2adc:	2350      	movs	r3, #80	; 0x50
    2ade:	4a0c      	ldr	r2, [pc, #48]	; (2b10 <_sysctrl_init_referenced_generators+0x80>)
    2ae0:	5cd3      	ldrb	r3, [r2, r3]
#endif
#endif

#if CONF_DPLL_CONFIG == 1
#if CONF_DPLL_ENABLE == 1
	while (!(hri_sysctrl_get_DPLLSTATUS_ENABLE_bit(hw) || hri_sysctrl_get_DPLLSTATUS_LOCK_bit(hw)
    2ae2:	075b      	lsls	r3, r3, #29
    2ae4:	d407      	bmi.n	2af6 <_sysctrl_init_referenced_generators+0x66>
	return (((Sysctrl *)hw)->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_LOCK) >> SYSCTRL_DPLLSTATUS_LOCK_Pos;
    2ae6:	2350      	movs	r3, #80	; 0x50
    2ae8:	5cd3      	ldrb	r3, [r2, r3]
    2aea:	07db      	lsls	r3, r3, #31
    2aec:	d403      	bmi.n	2af6 <_sysctrl_init_referenced_generators+0x66>
	return (((Sysctrl *)hw)->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_CLKRDY) >> SYSCTRL_DPLLSTATUS_CLKRDY_Pos;
    2aee:	2350      	movs	r3, #80	; 0x50
    2af0:	5cd3      	ldrb	r3, [r2, r3]
    2af2:	079b      	lsls	r3, r3, #30
    2af4:	d5f2      	bpl.n	2adc <_sysctrl_init_referenced_generators+0x4c>
	return (((Gclk *)hw)->STATUS.reg & GCLK_STATUS_SYNCBUSY) >> GCLK_STATUS_SYNCBUSY_Pos;
    2af6:	4b0a      	ldr	r3, [pc, #40]	; (2b20 <_sysctrl_init_referenced_generators+0x90>)
    2af8:	785b      	ldrb	r3, [r3, #1]
	hri_sysctrl_set_DPLLCTRLA_ONDEMAND_bit(hw);
#endif
#endif

#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_get_STATUS_SYNCBUSY_bit(GCLK))
    2afa:	09db      	lsrs	r3, r3, #7
    2afc:	d1fb      	bne.n	2af6 <_sysctrl_init_referenced_generators+0x66>
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    2afe:	4770      	bx	lr
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    2b00:	22fc      	movs	r2, #252	; 0xfc
    2b02:	01d2      	lsls	r2, r2, #7
    2b04:	e7d7      	b.n	2ab6 <_sysctrl_init_referenced_generators+0x26>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    2b06:	4b02      	ldr	r3, [pc, #8]	; (2b10 <_sysctrl_init_referenced_generators+0x80>)
    2b08:	68db      	ldr	r3, [r3, #12]
		while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    2b0a:	06db      	lsls	r3, r3, #27
    2b0c:	d5fb      	bpl.n	2b06 <_sysctrl_init_referenced_generators+0x76>
    2b0e:	e7e5      	b.n	2adc <_sysctrl_init_referenced_generators+0x4c>
    2b10:	40000800 	.word	0x40000800
    2b14:	0401bb80 	.word	0x0401bb80
    2b18:	00806024 	.word	0x00806024
    2b1c:	000e05b7 	.word	0x000e05b7
    2b20:	40000c00 	.word	0x40000c00

00002b24 <_system_time_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
    2b24:	4b02      	ldr	r3, [pc, #8]	; (2b30 <_system_time_init+0xc>)
    2b26:	4a03      	ldr	r2, [pc, #12]	; (2b34 <_system_time_init+0x10>)
    2b28:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
    2b2a:	2205      	movs	r2, #5
    2b2c:	601a      	str	r2, [r3, #0]
	                | (1 << SysTick_CTRL_CLKSOURCE_Pos);
}
    2b2e:	4770      	bx	lr
    2b30:	e000e010 	.word	0xe000e010
    2b34:	00ffffff 	.word	0x00ffffff

00002b38 <_delay_init>:
/**
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
    2b38:	b510      	push	{r4, lr}
	_system_time_init(hw);
    2b3a:	4b01      	ldr	r3, [pc, #4]	; (2b40 <_delay_init+0x8>)
    2b3c:	4798      	blx	r3
}
    2b3e:	bd10      	pop	{r4, pc}
    2b40:	00002b25 	.word	0x00002b25

00002b44 <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
    2b44:	0e08      	lsrs	r0, r1, #24
	uint32_t buf = cycles;

	while (n--) {
    2b46:	e00b      	b.n	2b60 <_delay_cycles+0x1c>
		SysTick->LOAD = 0xFFFFFF;
    2b48:	4b0b      	ldr	r3, [pc, #44]	; (2b78 <_delay_cycles+0x34>)
    2b4a:	480c      	ldr	r0, [pc, #48]	; (2b7c <_delay_cycles+0x38>)
    2b4c:	6058      	str	r0, [r3, #4]
		SysTick->VAL  = 0xFFFFFF;
    2b4e:	6098      	str	r0, [r3, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    2b50:	4b09      	ldr	r3, [pc, #36]	; (2b78 <_delay_cycles+0x34>)
    2b52:	681b      	ldr	r3, [r3, #0]
    2b54:	03db      	lsls	r3, r3, #15
    2b56:	d5fb      	bpl.n	2b50 <_delay_cycles+0xc>
			;
		buf -= 0xFFFFFF;
    2b58:	4b09      	ldr	r3, [pc, #36]	; (2b80 <_delay_cycles+0x3c>)
    2b5a:	469c      	mov	ip, r3
    2b5c:	4461      	add	r1, ip
	while (n--) {
    2b5e:	0010      	movs	r0, r2
    2b60:	1e42      	subs	r2, r0, #1
    2b62:	b2d2      	uxtb	r2, r2
    2b64:	2800      	cmp	r0, #0
    2b66:	d1ef      	bne.n	2b48 <_delay_cycles+0x4>
	}

	SysTick->LOAD = buf;
    2b68:	4b03      	ldr	r3, [pc, #12]	; (2b78 <_delay_cycles+0x34>)
    2b6a:	6059      	str	r1, [r3, #4]
	SysTick->VAL  = buf;
    2b6c:	6099      	str	r1, [r3, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    2b6e:	4b02      	ldr	r3, [pc, #8]	; (2b78 <_delay_cycles+0x34>)
    2b70:	681b      	ldr	r3, [r3, #0]
    2b72:	03db      	lsls	r3, r3, #15
    2b74:	d5fb      	bpl.n	2b6e <_delay_cycles+0x2a>
		;
}
    2b76:	4770      	bx	lr
    2b78:	e000e010 	.word	0xe000e010
    2b7c:	00ffffff 	.word	0x00ffffff
    2b80:	ff000001 	.word	0xff000001

00002b84 <tc_interrupt_handler>:
 * \internal TC interrupt handler for Timer
 *
 * \param[in] instance TC instance number
 */
static void tc_interrupt_handler(struct _timer_device *device)
{
    2b84:	b510      	push	{r4, lr}
	void *const hw = device->hw;
    2b86:	68c3      	ldr	r3, [r0, #12]
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_MC1;
}

static inline bool hri_tc_get_interrupt_OVF_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTFLAG.reg & TC_INTFLAG_OVF) >> TC_INTFLAG_OVF_Pos;
    2b88:	7b9a      	ldrb	r2, [r3, #14]

	if (hri_tc_get_interrupt_OVF_bit(hw)) {
    2b8a:	07d2      	lsls	r2, r2, #31
    2b8c:	d400      	bmi.n	2b90 <tc_interrupt_handler+0xc>
		hri_tc_clear_interrupt_OVF_bit(hw);
		device->timer_cb.period_expired(device);
	}
}
    2b8e:	bd10      	pop	{r4, pc}
}

static inline void hri_tc_clear_interrupt_OVF_bit(const void *const hw)
{
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_OVF;
    2b90:	2201      	movs	r2, #1
    2b92:	739a      	strb	r2, [r3, #14]
		device->timer_cb.period_expired(device);
    2b94:	6803      	ldr	r3, [r0, #0]
    2b96:	4798      	blx	r3
}
    2b98:	e7f9      	b.n	2b8e <tc_interrupt_handler+0xa>
	...

00002b9c <tc_get_hardware_index>:
 * \param[in] hw The pointer to hardware instance
 */
static uint8_t tc_get_hardware_index(const void *const hw)
{
#ifndef _UNIT_TEST_
	return ((uint32_t)hw - TC_HW_BASE_ADDR) >> 10;
    2b9c:	4b02      	ldr	r3, [pc, #8]	; (2ba8 <tc_get_hardware_index+0xc>)
    2b9e:	469c      	mov	ip, r3
    2ba0:	4460      	add	r0, ip
    2ba2:	0a80      	lsrs	r0, r0, #10
    2ba4:	b2c0      	uxtb	r0, r0
#else
	return ((uint32_t)hw - TC_HW_BASE_ADDR) / sizeof(Tc);
#endif
}
    2ba6:	4770      	bx	lr
    2ba8:	bdffd400 	.word	0xbdffd400

00002bac <_tc_init_irq_param>:
/**
 * \brief Init irq param with the given tc hardware instance
 */
static void _tc_init_irq_param(const void *const hw, void *dev)
{
	if (hw == TC3) {
    2bac:	4b06      	ldr	r3, [pc, #24]	; (2bc8 <_tc_init_irq_param+0x1c>)
    2bae:	4298      	cmp	r0, r3
    2bb0:	d003      	beq.n	2bba <_tc_init_irq_param+0xe>
		_tc3_dev = (struct _timer_device *)dev;
	}
	if (hw == TC4) {
    2bb2:	4b06      	ldr	r3, [pc, #24]	; (2bcc <_tc_init_irq_param+0x20>)
    2bb4:	4298      	cmp	r0, r3
    2bb6:	d003      	beq.n	2bc0 <_tc_init_irq_param+0x14>
		_tc4_dev = (struct _timer_device *)dev;
	}
}
    2bb8:	4770      	bx	lr
		_tc3_dev = (struct _timer_device *)dev;
    2bba:	4b05      	ldr	r3, [pc, #20]	; (2bd0 <_tc_init_irq_param+0x24>)
    2bbc:	6019      	str	r1, [r3, #0]
    2bbe:	e7f8      	b.n	2bb2 <_tc_init_irq_param+0x6>
		_tc4_dev = (struct _timer_device *)dev;
    2bc0:	4b03      	ldr	r3, [pc, #12]	; (2bd0 <_tc_init_irq_param+0x24>)
    2bc2:	6059      	str	r1, [r3, #4]
}
    2bc4:	e7f8      	b.n	2bb8 <_tc_init_irq_param+0xc>
    2bc6:	46c0      	nop			; (mov r8, r8)
    2bc8:	42002c00 	.word	0x42002c00
    2bcc:	42003000 	.word	0x42003000
    2bd0:	20000c80 	.word	0x20000c80

00002bd4 <get_tc_index>:
{
    2bd4:	b510      	push	{r4, lr}
	uint8_t tc_offset = tc_get_hardware_index(hw) + TC_NUMBER_OFFSET;
    2bd6:	4b0e      	ldr	r3, [pc, #56]	; (2c10 <get_tc_index+0x3c>)
    2bd8:	4798      	blx	r3
    2bda:	3003      	adds	r0, #3
    2bdc:	b2c0      	uxtb	r0, r0
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    2bde:	2300      	movs	r3, #0
    2be0:	2b01      	cmp	r3, #1
    2be2:	d80b      	bhi.n	2bfc <get_tc_index+0x28>
		if (_tcs[i].number == tc_offset) {
    2be4:	009a      	lsls	r2, r3, #2
    2be6:	18d2      	adds	r2, r2, r3
    2be8:	0091      	lsls	r1, r2, #2
    2bea:	4a0a      	ldr	r2, [pc, #40]	; (2c14 <get_tc_index+0x40>)
    2bec:	5c8a      	ldrb	r2, [r1, r2]
    2bee:	4290      	cmp	r0, r2
    2bf0:	d002      	beq.n	2bf8 <get_tc_index+0x24>
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    2bf2:	3301      	adds	r3, #1
    2bf4:	b2db      	uxtb	r3, r3
    2bf6:	e7f3      	b.n	2be0 <get_tc_index+0xc>
			return i;
    2bf8:	b258      	sxtb	r0, r3
    2bfa:	e007      	b.n	2c0c <get_tc_index+0x38>
	ASSERT(false);
    2bfc:	22a4      	movs	r2, #164	; 0xa4
    2bfe:	0052      	lsls	r2, r2, #1
    2c00:	4905      	ldr	r1, [pc, #20]	; (2c18 <get_tc_index+0x44>)
    2c02:	2000      	movs	r0, #0
    2c04:	4b05      	ldr	r3, [pc, #20]	; (2c1c <get_tc_index+0x48>)
    2c06:	4798      	blx	r3
	return -1;
    2c08:	2001      	movs	r0, #1
    2c0a:	4240      	negs	r0, r0
}
    2c0c:	bd10      	pop	{r4, pc}
    2c0e:	46c0      	nop			; (mov r8, r8)
    2c10:	00002b9d 	.word	0x00002b9d
    2c14:	0000e244 	.word	0x0000e244
    2c18:	0000e26c 	.word	0x0000e26c
    2c1c:	00001fb1 	.word	0x00001fb1

00002c20 <_timer_init>:
{
    2c20:	b570      	push	{r4, r5, r6, lr}
    2c22:	0006      	movs	r6, r0
    2c24:	000c      	movs	r4, r1
	int8_t i = get_tc_index(hw);
    2c26:	0008      	movs	r0, r1
    2c28:	4b3f      	ldr	r3, [pc, #252]	; (2d28 <_timer_init+0x108>)
    2c2a:	4798      	blx	r3
    2c2c:	0005      	movs	r5, r0
	device->hw = hw;
    2c2e:	60f4      	str	r4, [r6, #12]
	ASSERT(ARRAY_SIZE(_tcs));
    2c30:	228d      	movs	r2, #141	; 0x8d
    2c32:	493e      	ldr	r1, [pc, #248]	; (2d2c <_timer_init+0x10c>)
    2c34:	2001      	movs	r0, #1
    2c36:	4b3e      	ldr	r3, [pc, #248]	; (2d30 <_timer_init+0x110>)
    2c38:	4798      	blx	r3
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    2c3a:	7be3      	ldrb	r3, [r4, #15]
    2c3c:	09db      	lsrs	r3, r3, #7
    2c3e:	d1fc      	bne.n	2c3a <_timer_init+0x1a>
}

static inline hri_tc_ctrla_reg_t hri_tc_get_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t mask)
{
	uint16_t tmp;
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    2c40:	8823      	ldrh	r3, [r4, #0]
	if (hri_tc_get_CTRLA_reg(hw, TC_CTRLA_ENABLE)) {
    2c42:	079b      	lsls	r3, r3, #30
    2c44:	d504      	bpl.n	2c50 <_timer_init+0x30>
}

static inline void hri_tc_write_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    2c46:	2300      	movs	r3, #0
    2c48:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    2c4a:	7be3      	ldrb	r3, [r4, #15]
    2c4c:	09db      	lsrs	r3, r3, #7
    2c4e:	d1fc      	bne.n	2c4a <_timer_init+0x2a>
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    2c50:	2301      	movs	r3, #1
    2c52:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    2c54:	7be3      	ldrb	r3, [r4, #15]
    2c56:	09db      	lsrs	r3, r3, #7
    2c58:	d1fc      	bne.n	2c54 <_timer_init+0x34>
	hri_tc_write_CTRLA_reg(hw, _tcs[i].ctrl_a);
    2c5a:	00aa      	lsls	r2, r5, #2
    2c5c:	1952      	adds	r2, r2, r5
    2c5e:	0091      	lsls	r1, r2, #2
    2c60:	4b34      	ldr	r3, [pc, #208]	; (2d34 <_timer_init+0x114>)
    2c62:	185b      	adds	r3, r3, r1
    2c64:	885a      	ldrh	r2, [r3, #2]
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    2c66:	8022      	strh	r2, [r4, #0]
	hri_tc_write_DBGCTRL_reg(hw, _tcs[i].dbg_ctrl);
    2c68:	7919      	ldrb	r1, [r3, #4]
}

static inline void hri_tc_write_DBGCTRL_reg(const void *const hw, hri_tc_dbgctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.DBGCTRL.reg = data;
    2c6a:	7221      	strb	r1, [r4, #8]
	hri_tc_write_EVCTRL_reg(hw, _tcs[i].event_ctrl);
    2c6c:	88db      	ldrh	r3, [r3, #6]
}

static inline void hri_tc_write_EVCTRL_reg(const void *const hw, hri_tc_evctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.EVCTRL.reg = data;
    2c6e:	8163      	strh	r3, [r4, #10]
    2c70:	230c      	movs	r3, #12
    2c72:	4013      	ands	r3, r2
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    2c74:	2b08      	cmp	r3, #8
    2c76:	d039      	beq.n	2cec <_timer_init+0xcc>
	} else if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT16) {
    2c78:	2b00      	cmp	r3, #0
    2c7a:	d143      	bne.n	2d04 <_timer_init+0xe4>
		hri_tccount16_write_CC_reg(hw, 0, (hri_tccount16_cc_reg_t)_tcs[i].cc0);
    2c7c:	4a2d      	ldr	r2, [pc, #180]	; (2d34 <_timer_init+0x114>)
    2c7e:	00ab      	lsls	r3, r5, #2
    2c80:	1958      	adds	r0, r3, r5
    2c82:	0081      	lsls	r1, r0, #2
    2c84:	0008      	movs	r0, r1
    2c86:	1851      	adds	r1, r2, r1
    2c88:	8989      	ldrh	r1, [r1, #12]
}

static inline void hri_tccount16_write_CC_reg(const void *const hw, uint8_t index, hri_tccount16_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    2c8a:	8321      	strh	r1, [r4, #24]
		hri_tccount16_write_CC_reg(hw, 1, (hri_tccount16_cc_reg_t)_tcs[i].cc1);
    2c8c:	1812      	adds	r2, r2, r0
    2c8e:	8a13      	ldrh	r3, [r2, #16]
    2c90:	8363      	strh	r3, [r4, #26]
	((Tc *)hw)->COUNT16.INTENSET.reg = TC_INTENSET_OVF;
    2c92:	2301      	movs	r3, #1
    2c94:	7363      	strb	r3, [r4, #13]
	_tc_init_irq_param(hw, (void *)device);
    2c96:	0031      	movs	r1, r6
    2c98:	0020      	movs	r0, r4
    2c9a:	4b27      	ldr	r3, [pc, #156]	; (2d38 <_timer_init+0x118>)
    2c9c:	4798      	blx	r3
	NVIC_DisableIRQ((IRQn_Type)((uint8_t)TC_IRQ_BASE_INDEX + tc_get_hardware_index(hw)));
    2c9e:	0020      	movs	r0, r4
    2ca0:	4b26      	ldr	r3, [pc, #152]	; (2d3c <_timer_init+0x11c>)
    2ca2:	4798      	blx	r3
    2ca4:	3012      	adds	r0, #18
    2ca6:	b2c0      	uxtb	r0, r0
    2ca8:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    2caa:	2b00      	cmp	r3, #0
    2cac:	db0a      	blt.n	2cc4 <_timer_init+0xa4>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    2cae:	211f      	movs	r1, #31
    2cb0:	4001      	ands	r1, r0
    2cb2:	2201      	movs	r2, #1
    2cb4:	408a      	lsls	r2, r1
    2cb6:	2180      	movs	r1, #128	; 0x80
    2cb8:	4c21      	ldr	r4, [pc, #132]	; (2d40 <_timer_init+0x120>)
    2cba:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    2cbc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    2cc0:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    2cc4:	2b00      	cmp	r3, #0
    2cc6:	db07      	blt.n	2cd8 <_timer_init+0xb8>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    2cc8:	211f      	movs	r1, #31
    2cca:	4001      	ands	r1, r0
    2ccc:	2201      	movs	r2, #1
    2cce:	408a      	lsls	r2, r1
    2cd0:	21c0      	movs	r1, #192	; 0xc0
    2cd2:	0049      	lsls	r1, r1, #1
    2cd4:	4c1a      	ldr	r4, [pc, #104]	; (2d40 <_timer_init+0x120>)
    2cd6:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    2cd8:	2b00      	cmp	r3, #0
    2cda:	db05      	blt.n	2ce8 <_timer_init+0xc8>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    2cdc:	231f      	movs	r3, #31
    2cde:	4018      	ands	r0, r3
    2ce0:	3b1e      	subs	r3, #30
    2ce2:	4083      	lsls	r3, r0
    2ce4:	4a16      	ldr	r2, [pc, #88]	; (2d40 <_timer_init+0x120>)
    2ce6:	6013      	str	r3, [r2, #0]
}
    2ce8:	2000      	movs	r0, #0
    2cea:	bd70      	pop	{r4, r5, r6, pc}
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    2cec:	4a11      	ldr	r2, [pc, #68]	; (2d34 <_timer_init+0x114>)
    2cee:	00ab      	lsls	r3, r5, #2
    2cf0:	1958      	adds	r0, r3, r5
    2cf2:	0081      	lsls	r1, r0, #2
    2cf4:	0008      	movs	r0, r1
    2cf6:	1851      	adds	r1, r2, r1
    2cf8:	68c9      	ldr	r1, [r1, #12]
}

static inline void hri_tccount32_write_CC_reg(const void *const hw, uint8_t index, hri_tccount32_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    2cfa:	61a1      	str	r1, [r4, #24]
		hri_tccount32_write_CC_reg(hw, 1, _tcs[i].cc1);
    2cfc:	1812      	adds	r2, r2, r0
    2cfe:	6913      	ldr	r3, [r2, #16]
    2d00:	61e3      	str	r3, [r4, #28]
    2d02:	e7c6      	b.n	2c92 <_timer_init+0x72>
	} else if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT8) {
    2d04:	2b04      	cmp	r3, #4
    2d06:	d1c4      	bne.n	2c92 <_timer_init+0x72>
		hri_tccount8_write_CC_reg(hw, 0, (hri_tccount8_cc_reg_t)_tcs[i].cc0);
    2d08:	490a      	ldr	r1, [pc, #40]	; (2d34 <_timer_init+0x114>)
    2d0a:	00ab      	lsls	r3, r5, #2
    2d0c:	1958      	adds	r0, r3, r5
    2d0e:	0082      	lsls	r2, r0, #2
    2d10:	188a      	adds	r2, r1, r2
    2d12:	7b10      	ldrb	r0, [r2, #12]
	((Tc *)hw)->COUNT8.CC[index].reg = data;
    2d14:	7620      	strb	r0, [r4, #24]
		hri_tccount8_write_CC_reg(hw, 1, (hri_tccount8_cc_reg_t)_tcs[i].cc1);
    2d16:	7c12      	ldrb	r2, [r2, #16]
    2d18:	7662      	strb	r2, [r4, #25]
		hri_tccount8_write_PER_reg(hw, _tcs[i].per);
    2d1a:	195d      	adds	r5, r3, r5
    2d1c:	00ab      	lsls	r3, r5, #2
    2d1e:	18c9      	adds	r1, r1, r3
    2d20:	7a0b      	ldrb	r3, [r1, #8]
	((Tc *)hw)->COUNT8.PER.reg = data;
    2d22:	7523      	strb	r3, [r4, #20]
    2d24:	e7b5      	b.n	2c92 <_timer_init+0x72>
    2d26:	46c0      	nop			; (mov r8, r8)
    2d28:	00002bd5 	.word	0x00002bd5
    2d2c:	0000e26c 	.word	0x0000e26c
    2d30:	00001fb1 	.word	0x00001fb1
    2d34:	0000e244 	.word	0x0000e244
    2d38:	00002bad 	.word	0x00002bad
    2d3c:	00002b9d 	.word	0x00002b9d
    2d40:	e000e100 	.word	0xe000e100

00002d44 <_tc_get_timer>:
}
    2d44:	2000      	movs	r0, #0
    2d46:	4770      	bx	lr

00002d48 <TC3_Handler>:
{
    2d48:	b510      	push	{r4, lr}
	tc_interrupt_handler(_tc3_dev);
    2d4a:	4b02      	ldr	r3, [pc, #8]	; (2d54 <TC3_Handler+0xc>)
    2d4c:	6818      	ldr	r0, [r3, #0]
    2d4e:	4b02      	ldr	r3, [pc, #8]	; (2d58 <TC3_Handler+0x10>)
    2d50:	4798      	blx	r3
}
    2d52:	bd10      	pop	{r4, pc}
    2d54:	20000c80 	.word	0x20000c80
    2d58:	00002b85 	.word	0x00002b85

00002d5c <TC4_Handler>:
{
    2d5c:	b510      	push	{r4, lr}
	tc_interrupt_handler(_tc4_dev);
    2d5e:	4b02      	ldr	r3, [pc, #8]	; (2d68 <TC4_Handler+0xc>)
    2d60:	6858      	ldr	r0, [r3, #4]
    2d62:	4b02      	ldr	r3, [pc, #8]	; (2d6c <TC4_Handler+0x10>)
    2d64:	4798      	blx	r3
}
    2d66:	bd10      	pop	{r4, pc}
    2d68:	20000c80 	.word	0x20000c80
    2d6c:	00002b85 	.word	0x00002b85

00002d70 <_dummy_func_no_return>:
static bool _dummy_func_no_return(uint32_t unused0, uint32_t unused1)
{
	(void)unused0;
	(void)unused1;
	return false;
}
    2d70:	2000      	movs	r0, #0
    2d72:	4770      	bx	lr

00002d74 <_usb_load_calib>:
#define NVM_USB_PAD_TRANSP_SIZE 5
#define NVM_USB_PAD_TRIM_POS 55
#define NVM_USB_PAD_TRIM_SIZE 3
	Usb *    hw = USB;
	uint32_t pad_transn
	    = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRANSN_POS / 32)) >> (NVM_USB_PAD_TRANSN_POS % 32))
    2d74:	4b12      	ldr	r3, [pc, #72]	; (2dc0 <_usb_load_calib+0x4c>)
    2d76:	681a      	ldr	r2, [r3, #0]
    2d78:	0b53      	lsrs	r3, r2, #13
	uint32_t pad_transn
    2d7a:	211f      	movs	r1, #31
    2d7c:	400b      	ands	r3, r1
	      & ((1 << NVM_USB_PAD_TRANSN_SIZE) - 1);
	uint32_t pad_transp
	    = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRANSP_POS / 32)) >> (NVM_USB_PAD_TRANSP_POS % 32))
    2d7e:	0c90      	lsrs	r0, r2, #18
	uint32_t pad_transp
    2d80:	4001      	ands	r1, r0
	      & ((1 << NVM_USB_PAD_TRANSP_SIZE) - 1);
	uint32_t pad_trim = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRIM_POS / 32)) >> (NVM_USB_PAD_TRIM_POS % 32))
    2d82:	0dd0      	lsrs	r0, r2, #23
    2d84:	2207      	movs	r2, #7
    2d86:	4002      	ands	r2, r0
	                    & ((1 << NVM_USB_PAD_TRIM_SIZE) - 1);
	if (pad_transn == 0x1F) {
    2d88:	2b1f      	cmp	r3, #31
    2d8a:	d012      	beq.n	2db2 <_usb_load_calib+0x3e>
		pad_transn = 5;
	}
	if (pad_transp == 0x1F) {
    2d8c:	291f      	cmp	r1, #31
    2d8e:	d012      	beq.n	2db6 <_usb_load_calib+0x42>
		pad_transp = 29;
	}
	if (pad_trim == 0x7) {
    2d90:	2a07      	cmp	r2, #7
    2d92:	d012      	beq.n	2dba <_usb_load_calib+0x46>
		pad_trim = 5;
	}

	hw->DEVICE.PADCAL.reg = USB_PADCAL_TRANSN(pad_transn) | USB_PADCAL_TRANSP(pad_transp) | USB_PADCAL_TRIM(pad_trim);
    2d94:	019b      	lsls	r3, r3, #6
    2d96:	430b      	orrs	r3, r1
    2d98:	0312      	lsls	r2, r2, #12
    2d9a:	4313      	orrs	r3, r2
    2d9c:	4a09      	ldr	r2, [pc, #36]	; (2dc4 <_usb_load_calib+0x50>)
    2d9e:	8513      	strh	r3, [r2, #40]	; 0x28

	hw->DEVICE.QOSCTRL.bit.CQOS = 3;
    2da0:	78d3      	ldrb	r3, [r2, #3]
    2da2:	2103      	movs	r1, #3
    2da4:	430b      	orrs	r3, r1
    2da6:	70d3      	strb	r3, [r2, #3]
	hw->DEVICE.QOSCTRL.bit.DQOS = 3;
    2da8:	78d3      	ldrb	r3, [r2, #3]
    2daa:	210c      	movs	r1, #12
    2dac:	430b      	orrs	r3, r1
    2dae:	70d3      	strb	r3, [r2, #3]
}
    2db0:	4770      	bx	lr
		pad_transn = 5;
    2db2:	3b1a      	subs	r3, #26
    2db4:	e7ea      	b.n	2d8c <_usb_load_calib+0x18>
		pad_transp = 29;
    2db6:	3902      	subs	r1, #2
    2db8:	e7ea      	b.n	2d90 <_usb_load_calib+0x1c>
		pad_trim = 5;
    2dba:	3a02      	subs	r2, #2
    2dbc:	e7ea      	b.n	2d94 <_usb_load_calib+0x20>
    2dbe:	46c0      	nop			; (mov r8, r8)
    2dc0:	00806024 	.word	0x00806024
    2dc4:	41005000 	.word	0x41005000

00002dc8 <_usb_d_dev_handle_setup>:
/**
 * \brief Handles setup received interrupt
 * \param[in] ept Pointer to endpoint information.
 */
static void _usb_d_dev_handle_setup(struct _usb_d_dev_ep *ept)
{
    2dc8:	b510      	push	{r4, lr}
	uint8_t epn     = USB_EP_GET_N(ept->ep);
    2dca:	7c83      	ldrb	r3, [r0, #18]
    2dcc:	220f      	movs	r2, #15
    2dce:	4013      	ands	r3, r2
	bool    is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    2dd0:	7cc1      	ldrb	r1, [r0, #19]
    2dd2:	3a08      	subs	r2, #8
    2dd4:	400a      	ands	r2, r1

	if (!is_ctrl) {
    2dd6:	2a01      	cmp	r2, #1
    2dd8:	d00d      	beq.n	2df6 <_usb_d_dev_handle_setup+0x2e>
}

static inline void hri_usbendpoint_clear_EPINTFLAG_reg(const void *const hw, uint8_t submodule_index,
                                                       hri_usbendpoint_epintflag_reg_t mask)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2dda:	001a      	movs	r2, r3
    2ddc:	3208      	adds	r2, #8
    2dde:	0152      	lsls	r2, r2, #5
    2de0:	4919      	ldr	r1, [pc, #100]	; (2e48 <_usb_d_dev_handle_setup+0x80>)
    2de2:	468c      	mov	ip, r1
    2de4:	4462      	add	r2, ip
    2de6:	2110      	movs	r1, #16
    2de8:	71d1      	strb	r1, [r2, #7]
	}
}

static inline void hri_usbendpoint_clear_EPINTEN_RXSTP_bit(const void *const hw, uint8_t submodule_index)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = USB_DEVICE_EPINTENSET_RXSTP;
    2dea:	015b      	lsls	r3, r3, #5
    2dec:	4a17      	ldr	r2, [pc, #92]	; (2e4c <_usb_d_dev_handle_setup+0x84>)
    2dee:	4694      	mov	ip, r2
    2df0:	4463      	add	r3, ip
    2df2:	7019      	strb	r1, [r3, #0]
	_usbd_ep_clear_bank_status(epn, 1);
	_usbd_ep_int_ack(epn, USB_D_BANK0_INT_FLAGS | USB_D_BANK1_INT_FLAGS);
	_usbd_ep_int_dis(epn, USB_D_BANK0_INT_FLAGS | USB_D_BANK1_INT_FLAGS);
	/* Invoke callback. */
	dev_inst.ep_callbacks.setup(ept->ep);
}
    2df4:	bd10      	pop	{r4, pc}
	if (_usb_d_dev_ep_is_busy(ept)) {
    2df6:	064a      	lsls	r2, r1, #25
    2df8:	d50c      	bpl.n	2e14 <_usb_d_dev_handle_setup+0x4c>
		ept->flags.bits.is_busy = 0;
    2dfa:	7cc2      	ldrb	r2, [r0, #19]
    2dfc:	2140      	movs	r1, #64	; 0x40
    2dfe:	438a      	bics	r2, r1
    2e00:	74c2      	strb	r2, [r0, #19]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    2e02:	001a      	movs	r2, r3
    2e04:	3208      	adds	r2, #8
    2e06:	0152      	lsls	r2, r2, #5
    2e08:	4c0f      	ldr	r4, [pc, #60]	; (2e48 <_usb_d_dev_handle_setup+0x80>)
    2e0a:	46a4      	mov	ip, r4
    2e0c:	4462      	add	r2, ip
    2e0e:	2480      	movs	r4, #128	; 0x80
    2e10:	7114      	strb	r4, [r2, #4]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    2e12:	7151      	strb	r1, [r2, #5]
	ept->flags.bits.is_stalled = 0;
    2e14:	7cc2      	ldrb	r2, [r0, #19]
    2e16:	2108      	movs	r1, #8
    2e18:	438a      	bics	r2, r1
    2e1a:	74c2      	strb	r2, [r0, #19]
	bank->STATUS_BK.reg     = 0;
    2e1c:	015a      	lsls	r2, r3, #5
    2e1e:	490c      	ldr	r1, [pc, #48]	; (2e50 <_usb_d_dev_handle_setup+0x88>)
    2e20:	1889      	adds	r1, r1, r2
    2e22:	2400      	movs	r4, #0
    2e24:	728c      	strb	r4, [r1, #10]
    2e26:	768c      	strb	r4, [r1, #26]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2e28:	3308      	adds	r3, #8
    2e2a:	015b      	lsls	r3, r3, #5
    2e2c:	4906      	ldr	r1, [pc, #24]	; (2e48 <_usb_d_dev_handle_setup+0x80>)
    2e2e:	468c      	mov	ip, r1
    2e30:	4463      	add	r3, ip
    2e32:	216f      	movs	r1, #111	; 0x6f
    2e34:	71d9      	strb	r1, [r3, #7]
}

static inline void hri_usbendpoint_clear_EPINTEN_reg(const void *const hw, uint8_t submodule_index,
                                                     hri_usbendpoint_epintenset_reg_t mask)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    2e36:	4b05      	ldr	r3, [pc, #20]	; (2e4c <_usb_d_dev_handle_setup+0x84>)
    2e38:	469c      	mov	ip, r3
    2e3a:	4462      	add	r2, ip
    2e3c:	7011      	strb	r1, [r2, #0]
	dev_inst.ep_callbacks.setup(ept->ep);
    2e3e:	4b05      	ldr	r3, [pc, #20]	; (2e54 <_usb_d_dev_handle_setup+0x8c>)
    2e40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2e42:	7c80      	ldrb	r0, [r0, #18]
    2e44:	4798      	blx	r3
    2e46:	e7d5      	b.n	2df4 <_usb_d_dev_handle_setup+0x2c>
    2e48:	41005000 	.word	0x41005000
    2e4c:	41005108 	.word	0x41005108
    2e50:	20000c88 	.word	0x20000c88
    2e54:	20000d08 	.word	0x20000d08

00002e58 <_usb_d_dev_handle_stall>:
 * \brief Handles stall sent interrupt
 * \param[in] ept Pointer to endpoint information.
 * \param[in] bank_n Bank number.
 */
static void _usb_d_dev_handle_stall(struct _usb_d_dev_ep *ept, const uint8_t bank_n)
{
    2e58:	b510      	push	{r4, lr}
	uint8_t epn = USB_EP_GET_N(ept->ep);
    2e5a:	7c82      	ldrb	r2, [r0, #18]
    2e5c:	230f      	movs	r3, #15
    2e5e:	4013      	ands	r3, r2
		_usbd_ep_int_dis(epn, USB_DEVICE_EPINTFLAG_STALL0 << bank_n);
    2e60:	2220      	movs	r2, #32
    2e62:	408a      	lsls	r2, r1
	hri_usbendpoint_clear_EPINTEN_reg(USB, epn, flags);
    2e64:	b2d2      	uxtb	r2, r2
    2e66:	015b      	lsls	r3, r3, #5
    2e68:	4905      	ldr	r1, [pc, #20]	; (2e80 <_usb_d_dev_handle_stall+0x28>)
    2e6a:	468c      	mov	ip, r1
    2e6c:	4463      	add	r3, ip
    2e6e:	701a      	strb	r2, [r3, #0]
	/* Clear interrupt enable. Leave status there for status check. */
	_usbd_ep_int_stall_en(epn, bank_n, false);
	dev_inst.ep_callbacks.done(ept->ep, USB_TRANS_STALL, ept->trans_count);
    2e70:	4b04      	ldr	r3, [pc, #16]	; (2e84 <_usb_d_dev_handle_stall+0x2c>)
    2e72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    2e74:	6882      	ldr	r2, [r0, #8]
    2e76:	7c80      	ldrb	r0, [r0, #18]
    2e78:	2101      	movs	r1, #1
    2e7a:	4798      	blx	r3
}
    2e7c:	bd10      	pop	{r4, pc}
    2e7e:	46c0      	nop			; (mov r8, r8)
    2e80:	41005108 	.word	0x41005108
    2e84:	20000d08 	.word	0x20000d08

00002e88 <_usb_d_dev_trans_done>:
 *  \brief Finish the transaction and invoke callback
 * \param[in, out] ept Pointer to endpoint information.
 * \param[in] code Information code passed.
 */
static void _usb_d_dev_trans_done(struct _usb_d_dev_ep *ept, const int32_t code)
{
    2e88:	b510      	push	{r4, lr}
	if (!(_usb_d_dev_ep_is_used(ept) && _usb_d_dev_ep_is_busy(ept))) {
    2e8a:	7c83      	ldrb	r3, [r0, #18]
    2e8c:	2bff      	cmp	r3, #255	; 0xff
    2e8e:	d002      	beq.n	2e96 <_usb_d_dev_trans_done+0xe>
    2e90:	7cc2      	ldrb	r2, [r0, #19]
    2e92:	0652      	lsls	r2, r2, #25
    2e94:	d400      	bmi.n	2e98 <_usb_d_dev_trans_done+0x10>
		return;
	}
	ept->flags.bits.is_busy = 0;
	dev_inst.ep_callbacks.done(ept->ep, code, ept->trans_count);
}
    2e96:	bd10      	pop	{r4, pc}
	ept->flags.bits.is_busy = 0;
    2e98:	7cc2      	ldrb	r2, [r0, #19]
    2e9a:	2440      	movs	r4, #64	; 0x40
    2e9c:	43a2      	bics	r2, r4
    2e9e:	74c2      	strb	r2, [r0, #19]
	dev_inst.ep_callbacks.done(ept->ep, code, ept->trans_count);
    2ea0:	4a02      	ldr	r2, [pc, #8]	; (2eac <_usb_d_dev_trans_done+0x24>)
    2ea2:	6b14      	ldr	r4, [r2, #48]	; 0x30
    2ea4:	6882      	ldr	r2, [r0, #8]
    2ea6:	0018      	movs	r0, r3
    2ea8:	47a0      	blx	r4
    2eaa:	e7f4      	b.n	2e96 <_usb_d_dev_trans_done+0xe>
    2eac:	20000d08 	.word	0x20000d08

00002eb0 <_usb_d_dev_trans_stop>:
 * \param[in, out] ept Pointer to endpoint information.
 * \param[in] dir Endpoint direction.
 * \param[in] code Information code passed.
 */
static void _usb_d_dev_trans_stop(struct _usb_d_dev_ep *ept, bool dir, const int32_t code)
{
    2eb0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2eb2:	b083      	sub	sp, #12
	uint8_t epn = USB_EP_GET_N(ept->ep);
    2eb4:	7c84      	ldrb	r4, [r0, #18]
    2eb6:	230f      	movs	r3, #15
    2eb8:	4023      	ands	r3, r4
	;
	const uint8_t intflags[2] = {USB_D_BANK0_INT_FLAGS, USB_D_BANK1_INT_FLAGS};
    2eba:	4d18      	ldr	r5, [pc, #96]	; (2f1c <_usb_d_dev_trans_stop+0x6c>)
    2ebc:	882e      	ldrh	r6, [r5, #0]
    2ebe:	ad01      	add	r5, sp, #4
    2ec0:	802e      	strh	r6, [r5, #0]
	if (!(_usb_d_dev_ep_is_used(ept) && _usb_d_dev_ep_is_busy(ept))) {
    2ec2:	2cff      	cmp	r4, #255	; 0xff
    2ec4:	d01e      	beq.n	2f04 <_usb_d_dev_trans_stop+0x54>
    2ec6:	7cc4      	ldrb	r4, [r0, #19]
    2ec8:	0664      	lsls	r4, r4, #25
    2eca:	d51b      	bpl.n	2f04 <_usb_d_dev_trans_stop+0x54>
		return;
	}
	/* Stop transfer */
	if (dir) {
    2ecc:	2900      	cmp	r1, #0
    2ece:	d01b      	beq.n	2f08 <_usb_d_dev_trans_stop+0x58>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    2ed0:	001c      	movs	r4, r3
    2ed2:	3408      	adds	r4, #8
    2ed4:	0164      	lsls	r4, r4, #5
    2ed6:	4d12      	ldr	r5, [pc, #72]	; (2f20 <_usb_d_dev_trans_stop+0x70>)
    2ed8:	46ac      	mov	ip, r5
    2eda:	4464      	add	r4, ip
    2edc:	2580      	movs	r5, #128	; 0x80
    2ede:	7125      	strb	r5, [r4, #4]
		_usbd_ep_set_in_rdy(epn, 1, false);
	} else {
		/* NAK OUT */
		_usbd_ep_set_out_rdy(epn, 0, false);
	}
	_usbd_ep_int_ack(epn, intflags[dir]);
    2ee0:	ad01      	add	r5, sp, #4
    2ee2:	5c6e      	ldrb	r6, [r5, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2ee4:	001c      	movs	r4, r3
    2ee6:	3408      	adds	r4, #8
    2ee8:	0164      	lsls	r4, r4, #5
    2eea:	4f0d      	ldr	r7, [pc, #52]	; (2f20 <_usb_d_dev_trans_stop+0x70>)
    2eec:	46bc      	mov	ip, r7
    2eee:	4464      	add	r4, ip
    2ef0:	71e6      	strb	r6, [r4, #7]
	_usbd_ep_int_dis(epn, intflags[dir]);
    2ef2:	5c69      	ldrb	r1, [r5, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    2ef4:	015b      	lsls	r3, r3, #5
    2ef6:	4c0b      	ldr	r4, [pc, #44]	; (2f24 <_usb_d_dev_trans_stop+0x74>)
    2ef8:	46a4      	mov	ip, r4
    2efa:	4463      	add	r3, ip
    2efc:	7019      	strb	r1, [r3, #0]
	_usb_d_dev_trans_done(ept, code);
    2efe:	0011      	movs	r1, r2
    2f00:	4b09      	ldr	r3, [pc, #36]	; (2f28 <_usb_d_dev_trans_stop+0x78>)
    2f02:	4798      	blx	r3
}
    2f04:	b003      	add	sp, #12
    2f06:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    2f08:	001c      	movs	r4, r3
    2f0a:	3408      	adds	r4, #8
    2f0c:	0164      	lsls	r4, r4, #5
    2f0e:	4d04      	ldr	r5, [pc, #16]	; (2f20 <_usb_d_dev_trans_stop+0x70>)
    2f10:	46ac      	mov	ip, r5
    2f12:	4464      	add	r4, ip
    2f14:	2540      	movs	r5, #64	; 0x40
    2f16:	7165      	strb	r5, [r4, #5]
    2f18:	e7e2      	b.n	2ee0 <_usb_d_dev_trans_stop+0x30>
    2f1a:	46c0      	nop			; (mov r8, r8)
    2f1c:	0000e280 	.word	0x0000e280
    2f20:	41005000 	.word	0x41005000
    2f24:	41005108 	.word	0x41005108
    2f28:	00002e89 	.word	0x00002e89

00002f2c <_usb_d_dev_handle_trfail>:
{
    2f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f2e:	b083      	sub	sp, #12
	uint8_t            epn     = USB_EP_GET_N(ept->ep);
    2f30:	7c83      	ldrb	r3, [r0, #18]
    2f32:	220f      	movs	r2, #15
    2f34:	4013      	ands	r3, r2
	const uint8_t      fail[2] = {USB_DEVICE_EPINTFLAG_TRFAIL0, USB_DEVICE_EPINTFLAG_TRFAIL1};
    2f36:	4a3c      	ldr	r2, [pc, #240]	; (3028 <_usb_d_dev_handle_trfail+0xfc>)
    2f38:	8894      	ldrh	r4, [r2, #4]
    2f3a:	aa01      	add	r2, sp, #4
    2f3c:	8014      	strh	r4, [r2, #0]
	UsbDeviceDescBank *bank    = prvt_inst.desc_table[epn].DeviceDescBank;
    2f3e:	015a      	lsls	r2, r3, #5
    2f40:	4c3a      	ldr	r4, [pc, #232]	; (302c <_usb_d_dev_handle_trfail+0x100>)
    2f42:	18a4      	adds	r4, r4, r2
	uint8_t            eptype
    2f44:	2900      	cmp	r1, #0
    2f46:	d033      	beq.n	2fb0 <_usb_d_dev_handle_trfail+0x84>

static inline hri_usbendpoint_epcfg_reg_t hri_usbendpoint_read_EPCFG_EPTYPE1_bf(const void *const hw,
                                                                                uint8_t           submodule_index)
{
	uint8_t tmp;
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    2f48:	001a      	movs	r2, r3
    2f4a:	3208      	adds	r2, #8
    2f4c:	0152      	lsls	r2, r2, #5
    2f4e:	4d38      	ldr	r5, [pc, #224]	; (3030 <_usb_d_dev_handle_trfail+0x104>)
    2f50:	5d52      	ldrb	r2, [r2, r5]
	tmp = (tmp & USB_DEVICE_EPCFG_EPTYPE1_Msk) >> USB_DEVICE_EPCFG_EPTYPE1_Pos;
    2f52:	0912      	lsrs	r2, r2, #4
    2f54:	2507      	movs	r5, #7
    2f56:	4015      	ands	r5, r2
	bool                      is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    2f58:	7cc2      	ldrb	r2, [r0, #19]
    2f5a:	2607      	movs	r6, #7
    2f5c:	4016      	ands	r6, r2
	st.reg = bank[bank_n].STATUS_BK.reg;
    2f5e:	010a      	lsls	r2, r1, #4
    2f60:	18a2      	adds	r2, r4, r2
    2f62:	7a94      	ldrb	r4, [r2, #10]
    2f64:	b2e4      	uxtb	r4, r4
	if ((eptype == USB_D_EPTYPE_ISOCH) && st.bit.CRCERR) {
    2f66:	2d02      	cmp	r5, #2
    2f68:	d02a      	beq.n	2fc0 <_usb_d_dev_handle_trfail+0x94>
	} else if (st.bit.ERRORFLOW) {
    2f6a:	07a4      	lsls	r4, r4, #30
    2f6c:	d544      	bpl.n	2ff8 <_usb_d_dev_handle_trfail+0xcc>
		bank[bank_n].STATUS_BK.bit.ERRORFLOW = 0;
    2f6e:	7a94      	ldrb	r4, [r2, #10]
    2f70:	2502      	movs	r5, #2
    2f72:	43ac      	bics	r4, r5
    2f74:	7294      	strb	r4, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    2f76:	ac01      	add	r4, sp, #4
    2f78:	5c65      	ldrb	r5, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2f7a:	001a      	movs	r2, r3
    2f7c:	3208      	adds	r2, #8
    2f7e:	0152      	lsls	r2, r2, #5
    2f80:	4f2b      	ldr	r7, [pc, #172]	; (3030 <_usb_d_dev_handle_trfail+0x104>)
    2f82:	46bc      	mov	ip, r7
    2f84:	4462      	add	r2, ip
    2f86:	71d5      	strb	r5, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    2f88:	5c62      	ldrb	r2, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    2f8a:	015b      	lsls	r3, r3, #5
    2f8c:	4c29      	ldr	r4, [pc, #164]	; (3034 <_usb_d_dev_handle_trfail+0x108>)
    2f8e:	46a4      	mov	ip, r4
    2f90:	4463      	add	r3, ip
    2f92:	701a      	strb	r2, [r3, #0]
		if (is_ctrl && _usb_d_dev_ep_is_busy(ept)) {
    2f94:	2e01      	cmp	r6, #1
    2f96:	d145      	bne.n	3024 <_usb_d_dev_handle_trfail+0xf8>
    2f98:	7cc3      	ldrb	r3, [r0, #19]
    2f9a:	065b      	lsls	r3, r3, #25
    2f9c:	d542      	bpl.n	3024 <_usb_d_dev_handle_trfail+0xf8>
			if (bank_n != _usb_d_dev_ep_is_in(ept)) {
    2f9e:	7cc3      	ldrb	r3, [r0, #19]
    2fa0:	09db      	lsrs	r3, r3, #7
    2fa2:	4299      	cmp	r1, r3
    2fa4:	d03e      	beq.n	3024 <_usb_d_dev_handle_trfail+0xf8>
				_usb_d_dev_trans_stop(ept, _usb_d_dev_ep_is_in(ept), USB_TRANS_DONE);
    2fa6:	2200      	movs	r2, #0
    2fa8:	0019      	movs	r1, r3
    2faa:	4b23      	ldr	r3, [pc, #140]	; (3038 <_usb_d_dev_handle_trfail+0x10c>)
    2fac:	4798      	blx	r3
    2fae:	e039      	b.n	3024 <_usb_d_dev_handle_trfail+0xf8>
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    2fb0:	001a      	movs	r2, r3
    2fb2:	3208      	adds	r2, #8
    2fb4:	0152      	lsls	r2, r2, #5
    2fb6:	4d1e      	ldr	r5, [pc, #120]	; (3030 <_usb_d_dev_handle_trfail+0x104>)
    2fb8:	5d55      	ldrb	r5, [r2, r5]
	tmp = (tmp & USB_DEVICE_EPCFG_EPTYPE0_Msk) >> USB_DEVICE_EPCFG_EPTYPE0_Pos;
    2fba:	2207      	movs	r2, #7
    2fbc:	4015      	ands	r5, r2
    2fbe:	e7cb      	b.n	2f58 <_usb_d_dev_handle_trfail+0x2c>
	if ((eptype == USB_D_EPTYPE_ISOCH) && st.bit.CRCERR) {
    2fc0:	07e5      	lsls	r5, r4, #31
    2fc2:	d5d2      	bpl.n	2f6a <_usb_d_dev_handle_trfail+0x3e>
		bank[bank_n].STATUS_BK.bit.CRCERR = 0;
    2fc4:	7a94      	ldrb	r4, [r2, #10]
    2fc6:	2501      	movs	r5, #1
    2fc8:	43ac      	bics	r4, r5
    2fca:	7294      	strb	r4, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    2fcc:	ac01      	add	r4, sp, #4
    2fce:	5c65      	ldrb	r5, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2fd0:	001a      	movs	r2, r3
    2fd2:	3208      	adds	r2, #8
    2fd4:	0152      	lsls	r2, r2, #5
    2fd6:	4e16      	ldr	r6, [pc, #88]	; (3030 <_usb_d_dev_handle_trfail+0x104>)
    2fd8:	46b4      	mov	ip, r6
    2fda:	4462      	add	r2, ip
    2fdc:	71d5      	strb	r5, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    2fde:	5c62      	ldrb	r2, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    2fe0:	015b      	lsls	r3, r3, #5
    2fe2:	4c14      	ldr	r4, [pc, #80]	; (3034 <_usb_d_dev_handle_trfail+0x108>)
    2fe4:	46a4      	mov	ip, r4
    2fe6:	4463      	add	r3, ip
    2fe8:	701a      	strb	r2, [r3, #0]
		_usb_d_dev_trans_stop(ept, bank_n, USB_TRANS_ERROR);
    2fea:	1e4b      	subs	r3, r1, #1
    2fec:	4199      	sbcs	r1, r3
    2fee:	b2c9      	uxtb	r1, r1
    2ff0:	2204      	movs	r2, #4
    2ff2:	4b11      	ldr	r3, [pc, #68]	; (3038 <_usb_d_dev_handle_trfail+0x10c>)
    2ff4:	4798      	blx	r3
    2ff6:	e015      	b.n	3024 <_usb_d_dev_handle_trfail+0xf8>
	bank->STATUS_BK.reg     = 0;
    2ff8:	005a      	lsls	r2, r3, #1
    2ffa:	1852      	adds	r2, r2, r1
    2ffc:	0112      	lsls	r2, r2, #4
    2ffe:	480b      	ldr	r0, [pc, #44]	; (302c <_usb_d_dev_handle_trfail+0x100>)
    3000:	1882      	adds	r2, r0, r2
    3002:	2000      	movs	r0, #0
    3004:	7290      	strb	r0, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    3006:	a801      	add	r0, sp, #4
    3008:	5c44      	ldrb	r4, [r0, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    300a:	001a      	movs	r2, r3
    300c:	3208      	adds	r2, #8
    300e:	0152      	lsls	r2, r2, #5
    3010:	4d07      	ldr	r5, [pc, #28]	; (3030 <_usb_d_dev_handle_trfail+0x104>)
    3012:	46ac      	mov	ip, r5
    3014:	4462      	add	r2, ip
    3016:	71d4      	strb	r4, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    3018:	5c42      	ldrb	r2, [r0, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    301a:	015b      	lsls	r3, r3, #5
    301c:	4905      	ldr	r1, [pc, #20]	; (3034 <_usb_d_dev_handle_trfail+0x108>)
    301e:	468c      	mov	ip, r1
    3020:	4463      	add	r3, ip
    3022:	701a      	strb	r2, [r3, #0]
}
    3024:	b003      	add	sp, #12
    3026:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3028:	0000e280 	.word	0x0000e280
    302c:	20000c88 	.word	0x20000c88
    3030:	41005000 	.word	0x41005000
    3034:	41005108 	.word	0x41005108
    3038:	00002eb1 	.word	0x00002eb1

0000303c <_usb_d_dev_reset_epts>:
{
    303c:	b570      	push	{r4, r5, r6, lr}
	for (i = 0; i < USB_D_N_EP; i++) {
    303e:	2500      	movs	r5, #0
    3040:	e018      	b.n	3074 <_usb_d_dev_reset_epts+0x38>
		_usb_d_dev_trans_done(&dev_inst.ep[i], USB_TRANS_RESET);
    3042:	4c10      	ldr	r4, [pc, #64]	; (3084 <_usb_d_dev_reset_epts+0x48>)
    3044:	3420      	adds	r4, #32
    3046:	00ae      	lsls	r6, r5, #2
    3048:	1973      	adds	r3, r6, r5
    304a:	0098      	lsls	r0, r3, #2
    304c:	3010      	adds	r0, #16
    304e:	1820      	adds	r0, r4, r0
    3050:	3004      	adds	r0, #4
    3052:	2103      	movs	r1, #3
    3054:	4b0c      	ldr	r3, [pc, #48]	; (3088 <_usb_d_dev_reset_epts+0x4c>)
    3056:	4798      	blx	r3
		dev_inst.ep[i].ep       = 0xFF;
    3058:	1972      	adds	r2, r6, r5
    305a:	0093      	lsls	r3, r2, #2
    305c:	18e3      	adds	r3, r4, r3
    305e:	3326      	adds	r3, #38	; 0x26
    3060:	22ff      	movs	r2, #255	; 0xff
    3062:	701a      	strb	r2, [r3, #0]
		dev_inst.ep[i].flags.u8 = 0;
    3064:	1976      	adds	r6, r6, r5
    3066:	00b3      	lsls	r3, r6, #2
    3068:	18e4      	adds	r4, r4, r3
    306a:	3427      	adds	r4, #39	; 0x27
    306c:	2300      	movs	r3, #0
    306e:	7023      	strb	r3, [r4, #0]
	for (i = 0; i < USB_D_N_EP; i++) {
    3070:	3501      	adds	r5, #1
    3072:	b2ed      	uxtb	r5, r5
    3074:	2d08      	cmp	r5, #8
    3076:	d9e4      	bls.n	3042 <_usb_d_dev_reset_epts+0x6>
	memset(prvt_inst.desc_table, 0, sizeof(UsbDeviceDescriptor) * (CONF_USB_D_MAX_EP_N + 1));
    3078:	22a0      	movs	r2, #160	; 0xa0
    307a:	2100      	movs	r1, #0
    307c:	4803      	ldr	r0, [pc, #12]	; (308c <_usb_d_dev_reset_epts+0x50>)
    307e:	4b04      	ldr	r3, [pc, #16]	; (3090 <_usb_d_dev_reset_epts+0x54>)
    3080:	4798      	blx	r3
}
    3082:	bd70      	pop	{r4, r5, r6, pc}
    3084:	20000d08 	.word	0x20000d08
    3088:	00002e89 	.word	0x00002e89
    308c:	20000c88 	.word	0x20000c88
    3090:	000092f1 	.word	0x000092f1

00003094 <_usb_d_dev_in_next>:
{
    3094:	b5f0      	push	{r4, r5, r6, r7, lr}
    3096:	46c6      	mov	lr, r8
    3098:	b500      	push	{lr}
    309a:	0005      	movs	r5, r0
    309c:	000e      	movs	r6, r1
	uint8_t            epn         = USB_EP_GET_N(ept->ep);
    309e:	7c83      	ldrb	r3, [r0, #18]
    30a0:	240f      	movs	r4, #15
    30a2:	401c      	ands	r4, r3
	UsbDeviceDescBank *bank        = &prvt_inst.desc_table[epn].DeviceDescBank[0];
    30a4:	0162      	lsls	r2, r4, #5
    30a6:	4b56      	ldr	r3, [pc, #344]	; (3200 <_usb_d_dev_in_next+0x16c>)
    30a8:	189b      	adds	r3, r3, r2
	uint16_t           trans_count = isr ? bank[1].PCKSIZE.bit.BYTE_COUNT : 0;
    30aa:	2900      	cmp	r1, #0
    30ac:	d058      	beq.n	3160 <_usb_d_dev_in_next+0xcc>
    30ae:	6959      	ldr	r1, [r3, #20]
    30b0:	0489      	lsls	r1, r1, #18
    30b2:	0c89      	lsrs	r1, r1, #18
	uint16_t           last_pkt = trans_count & ((ept->size == 1023) ? ept->size : (ept->size - 1));
    30b4:	8a2b      	ldrh	r3, [r5, #16]
    30b6:	4a53      	ldr	r2, [pc, #332]	; (3204 <_usb_d_dev_in_next+0x170>)
    30b8:	4293      	cmp	r3, r2
    30ba:	d053      	beq.n	3164 <_usb_d_dev_in_next+0xd0>
    30bc:	3b01      	subs	r3, #1
    30be:	b21b      	sxth	r3, r3
    30c0:	400b      	ands	r3, r1
	bool               is_ctrl  = _usb_d_dev_ep_is_ctrl(ept);
    30c2:	7cea      	ldrb	r2, [r5, #19]
    30c4:	2707      	movs	r7, #7
    30c6:	4017      	ands	r7, r2
	if (isr) {
    30c8:	2e00      	cmp	r6, #0
    30ca:	d007      	beq.n	30dc <_usb_d_dev_in_next+0x48>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    30cc:	0022      	movs	r2, r4
    30ce:	3208      	adds	r2, #8
    30d0:	0152      	lsls	r2, r2, #5
    30d2:	484d      	ldr	r0, [pc, #308]	; (3208 <_usb_d_dev_in_next+0x174>)
    30d4:	4684      	mov	ip, r0
    30d6:	4462      	add	r2, ip
    30d8:	2002      	movs	r0, #2
    30da:	71d0      	strb	r0, [r2, #7]
	ept->trans_count += trans_count;
    30dc:	68aa      	ldr	r2, [r5, #8]
    30de:	4694      	mov	ip, r2
    30e0:	4461      	add	r1, ip
    30e2:	60a9      	str	r1, [r5, #8]
	if (ept->trans_count < ept->trans_size) {
    30e4:	686a      	ldr	r2, [r5, #4]
    30e6:	4291      	cmp	r1, r2
    30e8:	d24e      	bcs.n	3188 <_usb_d_dev_in_next+0xf4>
		trans_next = ept->trans_size - ept->trans_count;
    30ea:	b292      	uxth	r2, r2
    30ec:	b28b      	uxth	r3, r1
    30ee:	1ad2      	subs	r2, r2, r3
    30f0:	b292      	uxth	r2, r2
		if (ept->flags.bits.use_cache) {
    30f2:	7ceb      	ldrb	r3, [r5, #19]
    30f4:	069b      	lsls	r3, r3, #26
    30f6:	d537      	bpl.n	3168 <_usb_d_dev_in_next+0xd4>
			if (trans_next > ept->size) {
    30f8:	8a2b      	ldrh	r3, [r5, #16]
    30fa:	4698      	mov	r8, r3
    30fc:	429a      	cmp	r2, r3
    30fe:	d800      	bhi.n	3102 <_usb_d_dev_in_next+0x6e>
		trans_next = ept->trans_size - ept->trans_count;
    3100:	4690      	mov	r8, r2
			memcpy(ept->cache, &ept->trans_buf[ept->trans_count], trans_next);
    3102:	682b      	ldr	r3, [r5, #0]
    3104:	469c      	mov	ip, r3
    3106:	4461      	add	r1, ip
    3108:	4642      	mov	r2, r8
    310a:	68e8      	ldr	r0, [r5, #12]
    310c:	4b3f      	ldr	r3, [pc, #252]	; (320c <_usb_d_dev_in_next+0x178>)
    310e:	4798      	blx	r3
			_usbd_ep_set_buf(epn, 1, (uint32_t)ept->cache);
    3110:	68e9      	ldr	r1, [r5, #12]
	bank->ADDR.reg          = addr;
    3112:	0162      	lsls	r2, r4, #5
    3114:	4b3a      	ldr	r3, [pc, #232]	; (3200 <_usb_d_dev_in_next+0x16c>)
    3116:	189b      	adds	r3, r3, r2
    3118:	6119      	str	r1, [r3, #16]
	bank->PCKSIZE.bit.BYTE_COUNT = size;
    311a:	0163      	lsls	r3, r4, #5
    311c:	4a38      	ldr	r2, [pc, #224]	; (3200 <_usb_d_dev_in_next+0x16c>)
    311e:	18d2      	adds	r2, r2, r3
    3120:	6951      	ldr	r1, [r2, #20]
    3122:	4643      	mov	r3, r8
    3124:	049b      	lsls	r3, r3, #18
    3126:	0c9b      	lsrs	r3, r3, #18
    3128:	0b89      	lsrs	r1, r1, #14
    312a:	0389      	lsls	r1, r1, #14
    312c:	430b      	orrs	r3, r1
    312e:	6153      	str	r3, [r2, #20]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = count;
    3130:	6951      	ldr	r1, [r2, #20]
    3132:	4b37      	ldr	r3, [pc, #220]	; (3210 <_usb_d_dev_in_next+0x17c>)
    3134:	400b      	ands	r3, r1
    3136:	6153      	str	r3, [r2, #20]
	if (!isr) {
    3138:	2e00      	cmp	r6, #0
    313a:	d107      	bne.n	314c <_usb_d_dev_in_next+0xb8>
		if (is_ctrl) {
    313c:	2f01      	cmp	r7, #1
    313e:	d05d      	beq.n	31fc <_usb_d_dev_in_next+0x168>
			inten = USB_D_BANK1_INT_FLAGS;
    3140:	224a      	movs	r2, #74	; 0x4a
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    3142:	0163      	lsls	r3, r4, #5
    3144:	4933      	ldr	r1, [pc, #204]	; (3214 <_usb_d_dev_in_next+0x180>)
    3146:	468c      	mov	ip, r1
    3148:	4463      	add	r3, ip
    314a:	701a      	strb	r2, [r3, #0]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    314c:	3408      	adds	r4, #8
    314e:	0164      	lsls	r4, r4, #5
    3150:	4b2d      	ldr	r3, [pc, #180]	; (3208 <_usb_d_dev_in_next+0x174>)
    3152:	469c      	mov	ip, r3
    3154:	4464      	add	r4, ip
    3156:	2380      	movs	r3, #128	; 0x80
    3158:	7163      	strb	r3, [r4, #5]
}
    315a:	bc04      	pop	{r2}
    315c:	4690      	mov	r8, r2
    315e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint16_t           trans_count = isr ? bank[1].PCKSIZE.bit.BYTE_COUNT : 0;
    3160:	2100      	movs	r1, #0
    3162:	e7a7      	b.n	30b4 <_usb_d_dev_in_next+0x20>
	uint16_t           last_pkt = trans_count & ((ept->size == 1023) ? ept->size : (ept->size - 1));
    3164:	b21b      	sxth	r3, r3
    3166:	e7ab      	b.n	30c0 <_usb_d_dev_in_next+0x2c>
			if (trans_next > USB_D_DEV_TRANS_MAX) {
    3168:	2380      	movs	r3, #128	; 0x80
    316a:	019b      	lsls	r3, r3, #6
    316c:	429a      	cmp	r2, r3
    316e:	d807      	bhi.n	3180 <_usb_d_dev_in_next+0xec>
		trans_next = ept->trans_size - ept->trans_count;
    3170:	4690      	mov	r8, r2
			_usbd_ep_set_buf(epn, 1, (uint32_t)&ept->trans_buf[ept->trans_count]);
    3172:	682b      	ldr	r3, [r5, #0]
    3174:	1859      	adds	r1, r3, r1
	bank->ADDR.reg          = addr;
    3176:	0162      	lsls	r2, r4, #5
    3178:	4b21      	ldr	r3, [pc, #132]	; (3200 <_usb_d_dev_in_next+0x16c>)
    317a:	189b      	adds	r3, r3, r2
    317c:	6119      	str	r1, [r3, #16]
    317e:	e7cc      	b.n	311a <_usb_d_dev_in_next+0x86>
				trans_next = USB_D_DEV_TRANS_MAX;
    3180:	2380      	movs	r3, #128	; 0x80
    3182:	019b      	lsls	r3, r3, #6
    3184:	4698      	mov	r8, r3
    3186:	e7f4      	b.n	3172 <_usb_d_dev_in_next+0xde>
	} else if (ept->flags.bits.need_zlp) {
    3188:	7cea      	ldrb	r2, [r5, #19]
    318a:	06d2      	lsls	r2, r2, #27
    318c:	d50f      	bpl.n	31ae <_usb_d_dev_in_next+0x11a>
		ept->flags.bits.need_zlp = 0;
    318e:	7ceb      	ldrb	r3, [r5, #19]
    3190:	2210      	movs	r2, #16
    3192:	4393      	bics	r3, r2
    3194:	74eb      	strb	r3, [r5, #19]
	bank->PCKSIZE.bit.BYTE_COUNT = size;
    3196:	0162      	lsls	r2, r4, #5
    3198:	4b19      	ldr	r3, [pc, #100]	; (3200 <_usb_d_dev_in_next+0x16c>)
    319a:	189b      	adds	r3, r3, r2
    319c:	695a      	ldr	r2, [r3, #20]
    319e:	0b92      	lsrs	r2, r2, #14
    31a0:	0391      	lsls	r1, r2, #14
    31a2:	6159      	str	r1, [r3, #20]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = count;
    31a4:	6959      	ldr	r1, [r3, #20]
    31a6:	4a1a      	ldr	r2, [pc, #104]	; (3210 <_usb_d_dev_in_next+0x17c>)
    31a8:	400a      	ands	r2, r1
    31aa:	615a      	str	r2, [r3, #20]
    31ac:	e7c4      	b.n	3138 <_usb_d_dev_in_next+0xa4>
	if (is_ctrl) {
    31ae:	2f01      	cmp	r7, #1
    31b0:	d00d      	beq.n	31ce <_usb_d_dev_in_next+0x13a>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    31b2:	0164      	lsls	r4, r4, #5
    31b4:	4a18      	ldr	r2, [pc, #96]	; (3218 <_usb_d_dev_in_next+0x184>)
    31b6:	4694      	mov	ip, r2
    31b8:	4464      	add	r4, ip
    31ba:	224a      	movs	r2, #74	; 0x4a
    31bc:	7022      	strb	r2, [r4, #0]
	if (last_pkt == ept->size) {
    31be:	8a2a      	ldrh	r2, [r5, #16]
    31c0:	4293      	cmp	r3, r2
    31c2:	d00b      	beq.n	31dc <_usb_d_dev_in_next+0x148>
	_usb_d_dev_trans_done(ept, USB_TRANS_DONE);
    31c4:	2100      	movs	r1, #0
    31c6:	0028      	movs	r0, r5
    31c8:	4b14      	ldr	r3, [pc, #80]	; (321c <_usb_d_dev_in_next+0x188>)
    31ca:	4798      	blx	r3
	return;
    31cc:	e7c5      	b.n	315a <_usb_d_dev_in_next+0xc6>
    31ce:	0164      	lsls	r4, r4, #5
    31d0:	4a11      	ldr	r2, [pc, #68]	; (3218 <_usb_d_dev_in_next+0x184>)
    31d2:	4694      	mov	ip, r2
    31d4:	4464      	add	r4, ip
    31d6:	224b      	movs	r2, #75	; 0x4b
    31d8:	7022      	strb	r2, [r4, #0]
    31da:	e7f0      	b.n	31be <_usb_d_dev_in_next+0x12a>
		ept->flags.bits.is_busy = 0;
    31dc:	7ceb      	ldrb	r3, [r5, #19]
    31de:	2240      	movs	r2, #64	; 0x40
    31e0:	4393      	bics	r3, r2
    31e2:	74eb      	strb	r3, [r5, #19]
		if (dev_inst.ep_callbacks.more(ept->ep, ept->trans_count)) {
    31e4:	4b0e      	ldr	r3, [pc, #56]	; (3220 <_usb_d_dev_in_next+0x18c>)
    31e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    31e8:	7ca8      	ldrb	r0, [r5, #18]
    31ea:	68a9      	ldr	r1, [r5, #8]
    31ec:	4798      	blx	r3
    31ee:	2800      	cmp	r0, #0
    31f0:	d1b3      	bne.n	315a <_usb_d_dev_in_next+0xc6>
		ept->flags.bits.is_busy = 1;
    31f2:	7ceb      	ldrb	r3, [r5, #19]
    31f4:	2240      	movs	r2, #64	; 0x40
    31f6:	4313      	orrs	r3, r2
    31f8:	74eb      	strb	r3, [r5, #19]
    31fa:	e7e3      	b.n	31c4 <_usb_d_dev_in_next+0x130>
			inten = USB_D_BANK1_INT_FLAGS | USB_DEVICE_EPINTFLAG_TRFAIL0;
    31fc:	224e      	movs	r2, #78	; 0x4e
    31fe:	e7a0      	b.n	3142 <_usb_d_dev_in_next+0xae>
    3200:	20000c88 	.word	0x20000c88
    3204:	000003ff 	.word	0x000003ff
    3208:	41005000 	.word	0x41005000
    320c:	0000926d 	.word	0x0000926d
    3210:	f0003fff 	.word	0xf0003fff
    3214:	41005109 	.word	0x41005109
    3218:	41005108 	.word	0x41005108
    321c:	00002e89 	.word	0x00002e89
    3220:	20000d08 	.word	0x20000d08

00003224 <_usb_d_dev_out_next>:
{
    3224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3226:	46de      	mov	lr, fp
    3228:	4657      	mov	r7, sl
    322a:	464e      	mov	r6, r9
    322c:	4645      	mov	r5, r8
    322e:	b5e0      	push	{r5, r6, r7, lr}
    3230:	0004      	movs	r4, r0
    3232:	000f      	movs	r7, r1
	uint8_t            epn        = USB_EP_GET_N(ept->ep);
    3234:	7c83      	ldrb	r3, [r0, #18]
    3236:	250f      	movs	r5, #15
    3238:	401d      	ands	r5, r3
	uint16_t           trans_size = isr ? bank->PCKSIZE.bit.MULTI_PACKET_SIZE : 0;
    323a:	2900      	cmp	r1, #0
    323c:	d059      	beq.n	32f2 <_usb_d_dev_out_next+0xce>
    323e:	016a      	lsls	r2, r5, #5
    3240:	4b71      	ldr	r3, [pc, #452]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    3242:	189b      	adds	r3, r3, r2
    3244:	685b      	ldr	r3, [r3, #4]
    3246:	011b      	lsls	r3, r3, #4
    3248:	0c9b      	lsrs	r3, r3, #18
    324a:	469a      	mov	sl, r3
	uint16_t           last_trans = isr ? bank->PCKSIZE.bit.BYTE_COUNT : 0;
    324c:	2f00      	cmp	r7, #0
    324e:	d053      	beq.n	32f8 <_usb_d_dev_out_next+0xd4>
    3250:	016a      	lsls	r2, r5, #5
    3252:	4b6d      	ldr	r3, [pc, #436]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    3254:	189b      	adds	r3, r3, r2
    3256:	685b      	ldr	r3, [r3, #4]
    3258:	049b      	lsls	r3, r3, #18
    325a:	0c9b      	lsrs	r3, r3, #18
    325c:	4698      	mov	r8, r3
	uint16_t           size_mask  = (ept->size == 1023) ? 1023 : (ept->size - 1);
    325e:	8a26      	ldrh	r6, [r4, #16]
    3260:	4b6a      	ldr	r3, [pc, #424]	; (340c <_usb_d_dev_out_next+0x1e8>)
    3262:	429e      	cmp	r6, r3
    3264:	d001      	beq.n	326a <_usb_d_dev_out_next+0x46>
    3266:	3e01      	subs	r6, #1
    3268:	b2b6      	uxth	r6, r6
	uint16_t           last_pkt   = last_trans & size_mask;
    326a:	4643      	mov	r3, r8
    326c:	4033      	ands	r3, r6
    326e:	469b      	mov	fp, r3
	bool               is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    3270:	7ce3      	ldrb	r3, [r4, #19]
    3272:	2207      	movs	r2, #7
    3274:	401a      	ands	r2, r3
    3276:	4691      	mov	r9, r2
	if (isr) {
    3278:	2f00      	cmp	r7, #0
    327a:	d007      	beq.n	328c <_usb_d_dev_out_next+0x68>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    327c:	002b      	movs	r3, r5
    327e:	3308      	adds	r3, #8
    3280:	015b      	lsls	r3, r3, #5
    3282:	4a63      	ldr	r2, [pc, #396]	; (3410 <_usb_d_dev_out_next+0x1ec>)
    3284:	4694      	mov	ip, r2
    3286:	4463      	add	r3, ip
    3288:	2201      	movs	r2, #1
    328a:	71da      	strb	r2, [r3, #7]
	if (ept->flags.bits.use_cache && ept->trans_size) {
    328c:	7ce3      	ldrb	r3, [r4, #19]
    328e:	069b      	lsls	r3, r3, #26
    3290:	d511      	bpl.n	32b6 <_usb_d_dev_out_next+0x92>
    3292:	6862      	ldr	r2, [r4, #4]
    3294:	2a00      	cmp	r2, #0
    3296:	d00e      	beq.n	32b6 <_usb_d_dev_out_next+0x92>
		uint16_t buf_remain = ept->trans_size - ept->trans_count;
    3298:	b292      	uxth	r2, r2
    329a:	8923      	ldrh	r3, [r4, #8]
    329c:	1ad2      	subs	r2, r2, r3
    329e:	b292      	uxth	r2, r2
		memcpy(&ept->trans_buf[ept->trans_count], ept->cache, (buf_remain > last_pkt) ? last_pkt : buf_remain);
    32a0:	6823      	ldr	r3, [r4, #0]
    32a2:	68a1      	ldr	r1, [r4, #8]
    32a4:	468c      	mov	ip, r1
    32a6:	4463      	add	r3, ip
    32a8:	0018      	movs	r0, r3
    32aa:	68e1      	ldr	r1, [r4, #12]
    32ac:	4593      	cmp	fp, r2
    32ae:	d200      	bcs.n	32b2 <_usb_d_dev_out_next+0x8e>
    32b0:	465a      	mov	r2, fp
    32b2:	4b58      	ldr	r3, [pc, #352]	; (3414 <_usb_d_dev_out_next+0x1f0>)
    32b4:	4798      	blx	r3
	if (ept->trans_size == 0 && ept->flags.bits.need_zlp) {
    32b6:	6863      	ldr	r3, [r4, #4]
    32b8:	2b00      	cmp	r3, #0
    32ba:	d120      	bne.n	32fe <_usb_d_dev_out_next+0xda>
    32bc:	7ce2      	ldrb	r2, [r4, #19]
    32be:	06d2      	lsls	r2, r2, #27
    32c0:	d51d      	bpl.n	32fe <_usb_d_dev_out_next+0xda>
		ept->flags.bits.need_zlp  = 0;
    32c2:	7ce3      	ldrb	r3, [r4, #19]
		ept->flags.bits.use_cache = 1;
    32c4:	2210      	movs	r2, #16
    32c6:	4393      	bics	r3, r2
    32c8:	2220      	movs	r2, #32
    32ca:	4313      	orrs	r3, r2
    32cc:	74e3      	strb	r3, [r4, #19]
	bank->ADDR.reg          = addr;
    32ce:	494e      	ldr	r1, [pc, #312]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    32d0:	016a      	lsls	r2, r5, #5
    32d2:	68e3      	ldr	r3, [r4, #12]
    32d4:	5053      	str	r3, [r2, r1]
		_usbd_ep_set_out_trans(epn, 0, ept->size, 0);
    32d6:	8a23      	ldrh	r3, [r4, #16]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = size;
    32d8:	188a      	adds	r2, r1, r2
    32da:	6851      	ldr	r1, [r2, #4]
    32dc:	049b      	lsls	r3, r3, #18
    32de:	091b      	lsrs	r3, r3, #4
    32e0:	484d      	ldr	r0, [pc, #308]	; (3418 <_usb_d_dev_out_next+0x1f4>)
    32e2:	4001      	ands	r1, r0
    32e4:	430b      	orrs	r3, r1
    32e6:	6053      	str	r3, [r2, #4]
	bank->PCKSIZE.bit.BYTE_COUNT = count;
    32e8:	6853      	ldr	r3, [r2, #4]
    32ea:	0b9b      	lsrs	r3, r3, #14
    32ec:	0399      	lsls	r1, r3, #14
    32ee:	6051      	str	r1, [r2, #4]
    32f0:	e047      	b.n	3382 <_usb_d_dev_out_next+0x15e>
	uint16_t           trans_size = isr ? bank->PCKSIZE.bit.MULTI_PACKET_SIZE : 0;
    32f2:	2300      	movs	r3, #0
    32f4:	469a      	mov	sl, r3
    32f6:	e7a9      	b.n	324c <_usb_d_dev_out_next+0x28>
	uint16_t           last_trans = isr ? bank->PCKSIZE.bit.BYTE_COUNT : 0;
    32f8:	2300      	movs	r3, #0
    32fa:	4698      	mov	r8, r3
    32fc:	e7af      	b.n	325e <_usb_d_dev_out_next+0x3a>
	} else if (isr && last_pkt < ept->size) {
    32fe:	2f00      	cmp	r7, #0
    3300:	d01d      	beq.n	333e <_usb_d_dev_out_next+0x11a>
    3302:	8a22      	ldrh	r2, [r4, #16]
    3304:	4593      	cmp	fp, r2
    3306:	d21a      	bcs.n	333e <_usb_d_dev_out_next+0x11a>
		ept->flags.bits.need_zlp = 0;
    3308:	7ce3      	ldrb	r3, [r4, #19]
    330a:	2210      	movs	r2, #16
    330c:	4393      	bics	r3, r2
    330e:	74e3      	strb	r3, [r4, #19]
		ept->trans_count += last_trans;
    3310:	68a3      	ldr	r3, [r4, #8]
    3312:	4443      	add	r3, r8
    3314:	60a3      	str	r3, [r4, #8]
	if (is_ctrl) {
    3316:	464b      	mov	r3, r9
    3318:	2b01      	cmp	r3, #1
    331a:	d066      	beq.n	33ea <_usb_d_dev_out_next+0x1c6>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    331c:	016b      	lsls	r3, r5, #5
    331e:	4a3f      	ldr	r2, [pc, #252]	; (341c <_usb_d_dev_out_next+0x1f8>)
    3320:	4694      	mov	ip, r2
    3322:	4463      	add	r3, ip
    3324:	2225      	movs	r2, #37	; 0x25
    3326:	701a      	strb	r2, [r3, #0]
	if (0 == epn) {
    3328:	2d00      	cmp	r5, #0
    332a:	d103      	bne.n	3334 <_usb_d_dev_out_next+0x110>
	bank->ADDR.reg          = addr;
    332c:	016d      	lsls	r5, r5, #5
    332e:	4b36      	ldr	r3, [pc, #216]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    3330:	68e2      	ldr	r2, [r4, #12]
    3332:	50ea      	str	r2, [r5, r3]
	_usb_d_dev_trans_done(ept, USB_TRANS_DONE);
    3334:	2100      	movs	r1, #0
    3336:	0020      	movs	r0, r4
    3338:	4b39      	ldr	r3, [pc, #228]	; (3420 <_usb_d_dev_out_next+0x1fc>)
    333a:	4798      	blx	r3
	return;
    333c:	e033      	b.n	33a6 <_usb_d_dev_out_next+0x182>
		ept->trans_count += trans_size;
    333e:	68a2      	ldr	r2, [r4, #8]
    3340:	4452      	add	r2, sl
    3342:	60a2      	str	r2, [r4, #8]
		if (ept->trans_count < ept->trans_size) {
    3344:	4293      	cmp	r3, r2
    3346:	d9e6      	bls.n	3316 <_usb_d_dev_out_next+0xf2>
			trans_next = ept->trans_size - ept->trans_count;
    3348:	b29b      	uxth	r3, r3
    334a:	b291      	uxth	r1, r2
    334c:	1a5b      	subs	r3, r3, r1
    334e:	b29b      	uxth	r3, r3
			if (ept->flags.bits.use_cache) {
    3350:	7ce1      	ldrb	r1, [r4, #19]
    3352:	0689      	lsls	r1, r1, #26
    3354:	d52d      	bpl.n	33b2 <_usb_d_dev_out_next+0x18e>
				if (trans_next > ept->size) {
    3356:	8a21      	ldrh	r1, [r4, #16]
    3358:	428b      	cmp	r3, r1
    335a:	d800      	bhi.n	335e <_usb_d_dev_out_next+0x13a>
			trans_next = ept->trans_size - ept->trans_count;
    335c:	0019      	movs	r1, r3
				_usbd_ep_set_buf(epn, 0, (uint32_t)ept->cache);
    335e:	68e0      	ldr	r0, [r4, #12]
	bank->ADDR.reg          = addr;
    3360:	016b      	lsls	r3, r5, #5
    3362:	4a29      	ldr	r2, [pc, #164]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    3364:	5098      	str	r0, [r3, r2]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = size;
    3366:	016b      	lsls	r3, r5, #5
    3368:	4827      	ldr	r0, [pc, #156]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    336a:	18c0      	adds	r0, r0, r3
    336c:	6842      	ldr	r2, [r0, #4]
    336e:	048b      	lsls	r3, r1, #18
    3370:	091b      	lsrs	r3, r3, #4
    3372:	4929      	ldr	r1, [pc, #164]	; (3418 <_usb_d_dev_out_next+0x1f4>)
    3374:	400a      	ands	r2, r1
    3376:	4313      	orrs	r3, r2
    3378:	6043      	str	r3, [r0, #4]
	bank->PCKSIZE.bit.BYTE_COUNT = count;
    337a:	6843      	ldr	r3, [r0, #4]
    337c:	0b9b      	lsrs	r3, r3, #14
    337e:	039a      	lsls	r2, r3, #14
    3380:	6042      	str	r2, [r0, #4]
	if (!isr) {
    3382:	2f00      	cmp	r7, #0
    3384:	d108      	bne.n	3398 <_usb_d_dev_out_next+0x174>
		if (is_ctrl) {
    3386:	464b      	mov	r3, r9
    3388:	2b01      	cmp	r3, #1
    338a:	d035      	beq.n	33f8 <_usb_d_dev_out_next+0x1d4>
			inten = USB_D_BANK0_INT_FLAGS;
    338c:	2225      	movs	r2, #37	; 0x25
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    338e:	016b      	lsls	r3, r5, #5
    3390:	4924      	ldr	r1, [pc, #144]	; (3424 <_usb_d_dev_out_next+0x200>)
    3392:	468c      	mov	ip, r1
    3394:	4463      	add	r3, ip
    3396:	701a      	strb	r2, [r3, #0]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    3398:	3508      	adds	r5, #8
    339a:	016d      	lsls	r5, r5, #5
    339c:	4b1c      	ldr	r3, [pc, #112]	; (3410 <_usb_d_dev_out_next+0x1ec>)
    339e:	469c      	mov	ip, r3
    33a0:	4465      	add	r5, ip
    33a2:	2340      	movs	r3, #64	; 0x40
    33a4:	712b      	strb	r3, [r5, #4]
}
    33a6:	bc3c      	pop	{r2, r3, r4, r5}
    33a8:	4690      	mov	r8, r2
    33aa:	4699      	mov	r9, r3
    33ac:	46a2      	mov	sl, r4
    33ae:	46ab      	mov	fp, r5
    33b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if (trans_next > ept->size) {
    33b2:	8a21      	ldrh	r1, [r4, #16]
    33b4:	428b      	cmp	r3, r1
    33b6:	d90b      	bls.n	33d0 <_usb_d_dev_out_next+0x1ac>
					if (trans_next > USB_D_DEV_TRANS_MAX) {
    33b8:	2180      	movs	r1, #128	; 0x80
    33ba:	0189      	lsls	r1, r1, #6
    33bc:	428b      	cmp	r3, r1
    33be:	d80f      	bhi.n	33e0 <_usb_d_dev_out_next+0x1bc>
    33c0:	43b3      	bics	r3, r6
    33c2:	0019      	movs	r1, r3
				_usbd_ep_set_buf(epn, 0, (uint32_t)&ept->trans_buf[ept->trans_count]);
    33c4:	6823      	ldr	r3, [r4, #0]
    33c6:	189a      	adds	r2, r3, r2
	bank->ADDR.reg          = addr;
    33c8:	016b      	lsls	r3, r5, #5
    33ca:	480f      	ldr	r0, [pc, #60]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    33cc:	501a      	str	r2, [r3, r0]
    33ce:	e7ca      	b.n	3366 <_usb_d_dev_out_next+0x142>
				} else if (trans_next < ept->size) {
    33d0:	428b      	cmp	r3, r1
    33d2:	d208      	bcs.n	33e6 <_usb_d_dev_out_next+0x1c2>
					ept->flags.bits.use_cache = 1;
    33d4:	7ce1      	ldrb	r1, [r4, #19]
    33d6:	2020      	movs	r0, #32
    33d8:	4301      	orrs	r1, r0
    33da:	74e1      	strb	r1, [r4, #19]
			trans_next = ept->trans_size - ept->trans_count;
    33dc:	0019      	movs	r1, r3
    33de:	e7f1      	b.n	33c4 <_usb_d_dev_out_next+0x1a0>
						trans_next = USB_D_DEV_TRANS_MAX;
    33e0:	2180      	movs	r1, #128	; 0x80
    33e2:	0189      	lsls	r1, r1, #6
    33e4:	e7ee      	b.n	33c4 <_usb_d_dev_out_next+0x1a0>
			trans_next = ept->trans_size - ept->trans_count;
    33e6:	0019      	movs	r1, r3
    33e8:	e7ec      	b.n	33c4 <_usb_d_dev_out_next+0x1a0>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    33ea:	016b      	lsls	r3, r5, #5
    33ec:	4a0b      	ldr	r2, [pc, #44]	; (341c <_usb_d_dev_out_next+0x1f8>)
    33ee:	4694      	mov	ip, r2
    33f0:	4463      	add	r3, ip
    33f2:	222d      	movs	r2, #45	; 0x2d
    33f4:	701a      	strb	r2, [r3, #0]
    33f6:	e797      	b.n	3328 <_usb_d_dev_out_next+0x104>
	bank->STATUS_BK.reg     = 0;
    33f8:	016a      	lsls	r2, r5, #5
    33fa:	4b03      	ldr	r3, [pc, #12]	; (3408 <_usb_d_dev_out_next+0x1e4>)
    33fc:	189b      	adds	r3, r3, r2
    33fe:	2200      	movs	r2, #0
    3400:	769a      	strb	r2, [r3, #26]
			inten = USB_D_BANK0_INT_FLAGS | USB_DEVICE_EPINTFLAG_TRFAIL1;
    3402:	322d      	adds	r2, #45	; 0x2d
    3404:	e7c3      	b.n	338e <_usb_d_dev_out_next+0x16a>
    3406:	46c0      	nop			; (mov r8, r8)
    3408:	20000c88 	.word	0x20000c88
    340c:	000003ff 	.word	0x000003ff
    3410:	41005000 	.word	0x41005000
    3414:	0000926d 	.word	0x0000926d
    3418:	f0003fff 	.word	0xf0003fff
    341c:	41005108 	.word	0x41005108
    3420:	00002e89 	.word	0x00002e89
    3424:	41005109 	.word	0x41005109

00003428 <_usb_d_dev_handler>:
{
    3428:	b570      	push	{r4, r5, r6, lr}
	uint16_t epint = hw->DEVICE.EPINTSMRY.reg;
    342a:	4b89      	ldr	r3, [pc, #548]	; (3650 <_usb_d_dev_handler+0x228>)
    342c:	8c1d      	ldrh	r5, [r3, #32]
    342e:	b2ad      	uxth	r5, r5
	if (0 == epint) {
    3430:	2d00      	cmp	r5, #0
    3432:	d001      	beq.n	3438 <_usb_d_dev_handler+0x10>
	bool     rc    = true;
    3434:	2400      	movs	r4, #0
    3436:	e0bf      	b.n	35b8 <_usb_d_dev_handler+0x190>
	return tmp;
}

static inline hri_usbdevice_intflag_reg_t hri_usbdevice_read_INTFLAG_reg(const void *const hw)
{
	return ((Usb *)hw)->DEVICE.INTFLAG.reg;
    3438:	8b99      	ldrh	r1, [r3, #28]
	return tmp;
}

static inline hri_usbdevice_intenset_reg_t hri_usbdevice_read_INTEN_reg(const void *const hw)
{
	return ((Usb *)hw)->DEVICE.INTENSET.reg;
    343a:	8b1b      	ldrh	r3, [r3, #24]
	flags &= hri_usbdevice_read_INTEN_reg(USB);
    343c:	400b      	ands	r3, r1
	if (flags & USB_DEVICE_INTFLAG_SOF) {
    343e:	075a      	lsls	r2, r3, #29
    3440:	d40d      	bmi.n	345e <_usb_d_dev_handler+0x36>
	if (flags & USB_DEVICE_INTFLAG_LPMSUSP) {
    3442:	059a      	lsls	r2, r3, #22
    3444:	d415      	bmi.n	3472 <_usb_d_dev_handler+0x4a>
	} else if (flags & USB_DEVICE_INTFLAG_RAMACER) {
    3446:	061a      	lsls	r2, r3, #24
    3448:	d437      	bmi.n	34ba <_usb_d_dev_handler+0x92>
	} else if (flags & USB_D_WAKEUP_INT_FLAGS) {
    344a:	2270      	movs	r2, #112	; 0x70
    344c:	421a      	tst	r2, r3
    344e:	d13e      	bne.n	34ce <_usb_d_dev_handler+0xa6>
	} else if (flags & USB_DEVICE_INTFLAG_EORST) {
    3450:	071a      	lsls	r2, r3, #28
    3452:	d457      	bmi.n	3504 <_usb_d_dev_handler+0xdc>
	} else if (flags & USB_DEVICE_INTFLAG_SUSPEND) {
    3454:	07db      	lsls	r3, r3, #31
    3456:	d500      	bpl.n	345a <_usb_d_dev_handler+0x32>
    3458:	e068      	b.n	352c <_usb_d_dev_handler+0x104>
		rc = false;
    345a:	2300      	movs	r3, #0
    345c:	e006      	b.n	346c <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    345e:	2204      	movs	r2, #4
    3460:	4b7b      	ldr	r3, [pc, #492]	; (3650 <_usb_d_dev_handler+0x228>)
    3462:	839a      	strh	r2, [r3, #28]
	dev_inst.callbacks.sof();
    3464:	4b7b      	ldr	r3, [pc, #492]	; (3654 <_usb_d_dev_handler+0x22c>)
    3466:	6a1b      	ldr	r3, [r3, #32]
    3468:	4798      	blx	r3
		return true;
    346a:	2301      	movs	r3, #1
		if (_usb_d_dev_handle_nep()) {
    346c:	2b00      	cmp	r3, #0
    346e:	d0e1      	beq.n	3434 <_usb_d_dev_handler+0xc>
}
    3470:	bd70      	pop	{r4, r5, r6, pc}
    3472:	4b77      	ldr	r3, [pc, #476]	; (3650 <_usb_d_dev_handler+0x228>)
    3474:	4a78      	ldr	r2, [pc, #480]	; (3658 <_usb_d_dev_handler+0x230>)
    3476:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = ~data;
}

static inline void hri_usbdevice_clear_INTEN_reg(const void *const hw, hri_usbdevice_intenset_reg_t mask)
{
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    3478:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    347a:	3a92      	subs	r2, #146	; 0x92
    347c:	3aff      	subs	r2, #255	; 0xff
    347e:	831a      	strh	r2, [r3, #24]
	for (i = 0; i < CONF_USB_D_MAX_EP_N; i++) {
    3480:	2300      	movs	r3, #0
    3482:	2b03      	cmp	r3, #3
    3484:	d812      	bhi.n	34ac <_usb_d_dev_handler+0x84>
		if (bank->EXTREG.bit.SUBPID == 0x3) {
    3486:	0158      	lsls	r0, r3, #5
    3488:	4a74      	ldr	r2, [pc, #464]	; (365c <_usb_d_dev_handler+0x234>)
    348a:	1812      	adds	r2, r2, r0
    348c:	8912      	ldrh	r2, [r2, #8]
    348e:	0712      	lsls	r2, r2, #28
    3490:	0f12      	lsrs	r2, r2, #28
    3492:	2a03      	cmp	r2, #3
    3494:	d002      	beq.n	349c <_usb_d_dev_handler+0x74>
	for (i = 0; i < CONF_USB_D_MAX_EP_N; i++) {
    3496:	3301      	adds	r3, #1
    3498:	b2db      	uxtb	r3, r3
    349a:	e7f2      	b.n	3482 <_usb_d_dev_handler+0x5a>
			lpm_variable = bank->EXTREG.bit.VARIABLE;
    349c:	4b6f      	ldr	r3, [pc, #444]	; (365c <_usb_d_dev_handler+0x234>)
    349e:	181b      	adds	r3, r3, r0
    34a0:	8919      	ldrh	r1, [r3, #8]
    34a2:	0449      	lsls	r1, r1, #17
    34a4:	0d49      	lsrs	r1, r1, #21
			bank->EXTREG.reg = 0;
    34a6:	2200      	movs	r2, #0
    34a8:	811a      	strh	r2, [r3, #8]
    34aa:	e000      	b.n	34ae <_usb_d_dev_handler+0x86>
	uint32_t lpm_variable = 0;
    34ac:	2100      	movs	r1, #0
	dev_inst.callbacks.event(USB_EV_LPM_SUSPEND, lpm_variable);
    34ae:	4b69      	ldr	r3, [pc, #420]	; (3654 <_usb_d_dev_handler+0x22c>)
    34b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    34b2:	2003      	movs	r0, #3
    34b4:	4798      	blx	r3
	bool     rc    = true;
    34b6:	2301      	movs	r3, #1
    34b8:	e7d8      	b.n	346c <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    34ba:	2280      	movs	r2, #128	; 0x80
    34bc:	4b64      	ldr	r3, [pc, #400]	; (3650 <_usb_d_dev_handler+0x228>)
    34be:	839a      	strh	r2, [r3, #28]
	dev_inst.callbacks.event(USB_EV_ERROR, 0);
    34c0:	4b64      	ldr	r3, [pc, #400]	; (3654 <_usb_d_dev_handler+0x22c>)
    34c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    34c4:	2100      	movs	r1, #0
    34c6:	2005      	movs	r0, #5
    34c8:	4798      	blx	r3
	bool     rc    = true;
    34ca:	2301      	movs	r3, #1
    34cc:	e7ce      	b.n	346c <_usb_d_dev_handler+0x44>
    34ce:	4b60      	ldr	r3, [pc, #384]	; (3650 <_usb_d_dev_handler+0x228>)
    34d0:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    34d2:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    34d4:	4a60      	ldr	r2, [pc, #384]	; (3658 <_usb_d_dev_handler+0x230>)
    34d6:	831a      	strh	r2, [r3, #24]
	if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    34d8:	4b61      	ldr	r3, [pc, #388]	; (3660 <_usb_d_dev_handler+0x238>)
    34da:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    34dc:	069b      	lsls	r3, r3, #26
    34de:	d40c      	bmi.n	34fa <_usb_d_dev_handler+0xd2>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    34e0:	4b5f      	ldr	r3, [pc, #380]	; (3660 <_usb_d_dev_handler+0x238>)
    34e2:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    34e4:	23d0      	movs	r3, #208	; 0xd0
    34e6:	4013      	ands	r3, r2
		while (hri_sysctrl_get_PCLKSR_reg(SYSCTRL, DFLL_READY_FLAG) != DFLL_READY_FLAG)
    34e8:	2bd0      	cmp	r3, #208	; 0xd0
    34ea:	d1f9      	bne.n	34e0 <_usb_d_dev_handler+0xb8>
	dev_inst.callbacks.event(USB_EV_WAKEUP, 0);
    34ec:	4b59      	ldr	r3, [pc, #356]	; (3654 <_usb_d_dev_handler+0x22c>)
    34ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    34f0:	2100      	movs	r1, #0
    34f2:	2002      	movs	r0, #2
    34f4:	4798      	blx	r3
	bool     rc    = true;
    34f6:	2301      	movs	r3, #1
    34f8:	e7b8      	b.n	346c <_usb_d_dev_handler+0x44>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    34fa:	4b59      	ldr	r3, [pc, #356]	; (3660 <_usb_d_dev_handler+0x238>)
    34fc:	68db      	ldr	r3, [r3, #12]
		while (hri_sysctrl_get_PCLKSR_reg(SYSCTRL, SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY)
    34fe:	06db      	lsls	r3, r3, #27
    3500:	d5fb      	bpl.n	34fa <_usb_d_dev_handler+0xd2>
    3502:	e7f3      	b.n	34ec <_usb_d_dev_handler+0xc4>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg = data;
    3504:	4b52      	ldr	r3, [pc, #328]	; (3650 <_usb_d_dev_handler+0x228>)
    3506:	2100      	movs	r1, #0
    3508:	2280      	movs	r2, #128	; 0x80
    350a:	0052      	lsls	r2, r2, #1
    350c:	5499      	strb	r1, [r3, r2]
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    350e:	3af8      	subs	r2, #248	; 0xf8
    3510:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    3512:	3268      	adds	r2, #104	; 0x68
    3514:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    3516:	4a50      	ldr	r2, [pc, #320]	; (3658 <_usb_d_dev_handler+0x230>)
    3518:	831a      	strh	r2, [r3, #24]
	_usb_d_dev_reset_epts();
    351a:	4b52      	ldr	r3, [pc, #328]	; (3664 <_usb_d_dev_handler+0x23c>)
    351c:	4798      	blx	r3
	dev_inst.callbacks.event(USB_EV_RESET, 0);
    351e:	4b4d      	ldr	r3, [pc, #308]	; (3654 <_usb_d_dev_handler+0x22c>)
    3520:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3522:	2100      	movs	r1, #0
    3524:	2001      	movs	r0, #1
    3526:	4798      	blx	r3
	bool     rc    = true;
    3528:	2301      	movs	r3, #1
    352a:	e79f      	b.n	346c <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    352c:	4b48      	ldr	r3, [pc, #288]	; (3650 <_usb_d_dev_handler+0x228>)
    352e:	4a4a      	ldr	r2, [pc, #296]	; (3658 <_usb_d_dev_handler+0x230>)
    3530:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    3532:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    3534:	3a92      	subs	r2, #146	; 0x92
    3536:	3aff      	subs	r2, #255	; 0xff
    3538:	831a      	strh	r2, [r3, #24]
	dev_inst.callbacks.event(USB_EV_SUSPEND, 0);
    353a:	4b46      	ldr	r3, [pc, #280]	; (3654 <_usb_d_dev_handler+0x22c>)
    353c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    353e:	2100      	movs	r1, #0
    3540:	2004      	movs	r0, #4
    3542:	4798      	blx	r3
	bool     rc    = true;
    3544:	2301      	movs	r3, #1
    3546:	e791      	b.n	346c <_usb_d_dev_handler+0x44>
	if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    3548:	06da      	lsls	r2, r3, #27
    354a:	d407      	bmi.n	355c <_usb_d_dev_handler+0x134>
	} else if (flags & USB_DEVICE_EPINTFLAG_STALL1) {
    354c:	065a      	lsls	r2, r3, #25
    354e:	d408      	bmi.n	3562 <_usb_d_dev_handler+0x13a>
	} else if (flags & USB_DEVICE_EPINTFLAG_STALL0) {
    3550:	069b      	lsls	r3, r3, #26
    3552:	d52f      	bpl.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_handle_stall(ept, 0);
    3554:	2100      	movs	r1, #0
    3556:	4b44      	ldr	r3, [pc, #272]	; (3668 <_usb_d_dev_handler+0x240>)
    3558:	4798      	blx	r3
    355a:	e02b      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_handle_setup(ept);
    355c:	4b43      	ldr	r3, [pc, #268]	; (366c <_usb_d_dev_handler+0x244>)
    355e:	4798      	blx	r3
    3560:	e028      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_handle_stall(ept, 1);
    3562:	2101      	movs	r1, #1
    3564:	4b40      	ldr	r3, [pc, #256]	; (3668 <_usb_d_dev_handler+0x240>)
    3566:	4798      	blx	r3
    3568:	e024      	b.n	35b4 <_usb_d_dev_handler+0x18c>
	if (flags & USB_DEVICE_EPINTFLAG_STALL1) {
    356a:	065a      	lsls	r2, r3, #25
    356c:	d40f      	bmi.n	358e <_usb_d_dev_handler+0x166>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRFAIL1) {
    356e:	071a      	lsls	r2, r3, #28
    3570:	d411      	bmi.n	3596 <_usb_d_dev_handler+0x16e>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRCPT1) {
    3572:	079a      	lsls	r2, r3, #30
    3574:	d413      	bmi.n	359e <_usb_d_dev_handler+0x176>
	} else if (_usb_d_dev_ep_is_ctrl(ept)) {
    3576:	7cc1      	ldrb	r1, [r0, #19]
    3578:	2207      	movs	r2, #7
    357a:	400a      	ands	r2, r1
    357c:	2a01      	cmp	r2, #1
    357e:	d119      	bne.n	35b4 <_usb_d_dev_handler+0x18c>
		if (flags & USB_DEVICE_EPINTFLAG_TRFAIL0) {
    3580:	075a      	lsls	r2, r3, #29
    3582:	d410      	bmi.n	35a6 <_usb_d_dev_handler+0x17e>
		} else if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    3584:	06db      	lsls	r3, r3, #27
    3586:	d515      	bpl.n	35b4 <_usb_d_dev_handler+0x18c>
			_usb_d_dev_handle_setup(ept);
    3588:	4b38      	ldr	r3, [pc, #224]	; (366c <_usb_d_dev_handler+0x244>)
    358a:	4798      	blx	r3
    358c:	e012      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_handle_stall(ept, 1);
    358e:	2101      	movs	r1, #1
    3590:	4b35      	ldr	r3, [pc, #212]	; (3668 <_usb_d_dev_handler+0x240>)
    3592:	4798      	blx	r3
    3594:	e00e      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_handle_trfail(ept, 1);
    3596:	2101      	movs	r1, #1
    3598:	4b35      	ldr	r3, [pc, #212]	; (3670 <_usb_d_dev_handler+0x248>)
    359a:	4798      	blx	r3
    359c:	e00a      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_in_next(ept, true);
    359e:	2101      	movs	r1, #1
    35a0:	4b34      	ldr	r3, [pc, #208]	; (3674 <_usb_d_dev_handler+0x24c>)
    35a2:	4798      	blx	r3
    35a4:	e006      	b.n	35b4 <_usb_d_dev_handler+0x18c>
			_usb_d_dev_handle_trfail(ept, 0);
    35a6:	2100      	movs	r1, #0
    35a8:	4b31      	ldr	r3, [pc, #196]	; (3670 <_usb_d_dev_handler+0x248>)
    35aa:	4798      	blx	r3
    35ac:	e002      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_handle_stall(ept, 0);
    35ae:	2100      	movs	r1, #0
    35b0:	4b2d      	ldr	r3, [pc, #180]	; (3668 <_usb_d_dev_handler+0x240>)
    35b2:	4798      	blx	r3
	for (i = 0; i < USB_D_N_EP; i++) {
    35b4:	3401      	adds	r4, #1
    35b6:	b2e4      	uxtb	r4, r4
    35b8:	2c08      	cmp	r4, #8
    35ba:	d900      	bls.n	35be <_usb_d_dev_handler+0x196>
    35bc:	e758      	b.n	3470 <_usb_d_dev_handler+0x48>
		struct _usb_d_dev_ep *ept = &dev_inst.ep[i];
    35be:	4b25      	ldr	r3, [pc, #148]	; (3654 <_usb_d_dev_handler+0x22c>)
    35c0:	3320      	adds	r3, #32
    35c2:	00a2      	lsls	r2, r4, #2
    35c4:	1911      	adds	r1, r2, r4
    35c6:	0088      	lsls	r0, r1, #2
    35c8:	0001      	movs	r1, r0
    35ca:	3010      	adds	r0, #16
    35cc:	1818      	adds	r0, r3, r0
    35ce:	3004      	adds	r0, #4
		if (ept->ep == 0xFF) {
    35d0:	185b      	adds	r3, r3, r1
    35d2:	3326      	adds	r3, #38	; 0x26
    35d4:	781b      	ldrb	r3, [r3, #0]
    35d6:	2bff      	cmp	r3, #255	; 0xff
    35d8:	d0ec      	beq.n	35b4 <_usb_d_dev_handler+0x18c>
	uint8_t epn = USB_EP_GET_N(ept->ep);
    35da:	7c82      	ldrb	r2, [r0, #18]
    35dc:	230f      	movs	r3, #15
    35de:	4013      	ands	r3, r2
	if (!(epint & (1u << epn))) {
    35e0:	2201      	movs	r2, #1
    35e2:	409a      	lsls	r2, r3
    35e4:	422a      	tst	r2, r5
    35e6:	d0e5      	beq.n	35b4 <_usb_d_dev_handler+0x18c>
	flags = hw->DEVICE.DeviceEndpoint[epn].EPINTFLAG.reg;
    35e8:	001a      	movs	r2, r3
    35ea:	3208      	adds	r2, #8
    35ec:	0152      	lsls	r2, r2, #5
    35ee:	4918      	ldr	r1, [pc, #96]	; (3650 <_usb_d_dev_handler+0x228>)
    35f0:	468c      	mov	ip, r1
    35f2:	4462      	add	r2, ip
    35f4:	79d2      	ldrb	r2, [r2, #7]
	mask  = hw->DEVICE.DeviceEndpoint[epn].EPINTENSET.reg;
    35f6:	015b      	lsls	r3, r3, #5
    35f8:	491f      	ldr	r1, [pc, #124]	; (3678 <_usb_d_dev_handler+0x250>)
    35fa:	468c      	mov	ip, r1
    35fc:	4463      	add	r3, ip
    35fe:	781b      	ldrb	r3, [r3, #0]
	flags &= mask;
    3600:	4013      	ands	r3, r2
	if (flags) {
    3602:	d0d7      	beq.n	35b4 <_usb_d_dev_handler+0x18c>
		if ((ept->flags.bits.eptype == 0x1) && !_usb_d_dev_ep_is_busy(ept)) {
    3604:	7cc2      	ldrb	r2, [r0, #19]
    3606:	2147      	movs	r1, #71	; 0x47
    3608:	4011      	ands	r1, r2
    360a:	2901      	cmp	r1, #1
    360c:	d09c      	beq.n	3548 <_usb_d_dev_handler+0x120>
		} else if (_usb_d_dev_ep_is_in(ept)) {
    360e:	b252      	sxtb	r2, r2
    3610:	2a00      	cmp	r2, #0
    3612:	dbaa      	blt.n	356a <_usb_d_dev_handler+0x142>
	if (flags & USB_DEVICE_EPINTFLAG_STALL0) {
    3614:	069a      	lsls	r2, r3, #26
    3616:	d4ca      	bmi.n	35ae <_usb_d_dev_handler+0x186>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRFAIL0) {
    3618:	075a      	lsls	r2, r3, #29
    361a:	d40d      	bmi.n	3638 <_usb_d_dev_handler+0x210>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRCPT0) {
    361c:	07da      	lsls	r2, r3, #31
    361e:	d40f      	bmi.n	3640 <_usb_d_dev_handler+0x218>
	} else if (_usb_d_dev_ep_is_ctrl(ept)) {
    3620:	7cc1      	ldrb	r1, [r0, #19]
    3622:	2207      	movs	r2, #7
    3624:	400a      	ands	r2, r1
    3626:	2a01      	cmp	r2, #1
    3628:	d1c4      	bne.n	35b4 <_usb_d_dev_handler+0x18c>
		if (flags & USB_DEVICE_EPINTFLAG_TRFAIL1) {
    362a:	071a      	lsls	r2, r3, #28
    362c:	d40c      	bmi.n	3648 <_usb_d_dev_handler+0x220>
		} else if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    362e:	06db      	lsls	r3, r3, #27
    3630:	d5c0      	bpl.n	35b4 <_usb_d_dev_handler+0x18c>
			_usb_d_dev_handle_setup(ept);
    3632:	4b0e      	ldr	r3, [pc, #56]	; (366c <_usb_d_dev_handler+0x244>)
    3634:	4798      	blx	r3
    3636:	e7bd      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_handle_trfail(ept, 0);
    3638:	2100      	movs	r1, #0
    363a:	4b0d      	ldr	r3, [pc, #52]	; (3670 <_usb_d_dev_handler+0x248>)
    363c:	4798      	blx	r3
    363e:	e7b9      	b.n	35b4 <_usb_d_dev_handler+0x18c>
		_usb_d_dev_out_next(ept, true);
    3640:	2101      	movs	r1, #1
    3642:	4b0e      	ldr	r3, [pc, #56]	; (367c <_usb_d_dev_handler+0x254>)
    3644:	4798      	blx	r3
    3646:	e7b5      	b.n	35b4 <_usb_d_dev_handler+0x18c>
			_usb_d_dev_handle_trfail(ept, 1);
    3648:	2101      	movs	r1, #1
    364a:	4b09      	ldr	r3, [pc, #36]	; (3670 <_usb_d_dev_handler+0x248>)
    364c:	4798      	blx	r3
    364e:	e7b1      	b.n	35b4 <_usb_d_dev_handler+0x18c>
    3650:	41005000 	.word	0x41005000
    3654:	20000d08 	.word	0x20000d08
    3658:	00000201 	.word	0x00000201
    365c:	20000c88 	.word	0x20000c88
    3660:	40000800 	.word	0x40000800
    3664:	0000303d 	.word	0x0000303d
    3668:	00002e59 	.word	0x00002e59
    366c:	00002dc9 	.word	0x00002dc9
    3670:	00002f2d 	.word	0x00002f2d
    3674:	00003095 	.word	0x00003095
    3678:	41005109 	.word	0x41005109
    367c:	00003225 	.word	0x00003225

00003680 <_usb_d_dev_init>:
{
    3680:	b500      	push	{lr}
    3682:	b083      	sub	sp, #12
	const uint8_t spdconf[4] = {
    3684:	2200      	movs	r2, #0
    3686:	ab01      	add	r3, sp, #4
    3688:	705a      	strb	r2, [r3, #1]
	return ((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg;
    368a:	4b21      	ldr	r3, [pc, #132]	; (3710 <_usb_d_dev_init+0x90>)
    368c:	789b      	ldrb	r3, [r3, #2]
	if (!hri_usbdevice_is_syncing(hw, USB_SYNCBUSY_SWRST)) {
    368e:	07db      	lsls	r3, r3, #31
    3690:	d41b      	bmi.n	36ca <_usb_d_dev_init+0x4a>
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    3692:	4b1f      	ldr	r3, [pc, #124]	; (3710 <_usb_d_dev_init+0x90>)
    3694:	789b      	ldrb	r3, [r3, #2]
    3696:	079b      	lsls	r3, r3, #30
    3698:	d1fb      	bne.n	3692 <_usb_d_dev_init+0x12>

static inline hri_usb_ctrla_reg_t hri_usb_get_CTRLA_reg(const void *const hw, hri_usb_ctrla_reg_t mask)
{
	uint8_t tmp;
	hri_usb_wait_for_sync(hw, USB_SYNCBUSY_MASK);
	tmp = ((Usb *)hw)->HOST.CTRLA.reg;
    369a:	4b1d      	ldr	r3, [pc, #116]	; (3710 <_usb_d_dev_init+0x90>)
    369c:	781b      	ldrb	r3, [r3, #0]
		if (hri_usbdevice_get_CTRLA_reg(hw, USB_CTRLA_ENABLE)) {
    369e:	079b      	lsls	r3, r3, #30
    36a0:	d50c      	bpl.n	36bc <_usb_d_dev_init+0x3c>
	((Usb *)hw)->HOST.CTRLA.reg &= ~USB_CTRLA_ENABLE;
    36a2:	4a1b      	ldr	r2, [pc, #108]	; (3710 <_usb_d_dev_init+0x90>)
    36a4:	7813      	ldrb	r3, [r2, #0]
    36a6:	2102      	movs	r1, #2
    36a8:	438b      	bics	r3, r1
    36aa:	7013      	strb	r3, [r2, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    36ac:	4b18      	ldr	r3, [pc, #96]	; (3710 <_usb_d_dev_init+0x90>)
    36ae:	789b      	ldrb	r3, [r3, #2]
    36b0:	079b      	lsls	r3, r3, #30
    36b2:	d1fb      	bne.n	36ac <_usb_d_dev_init+0x2c>
    36b4:	4b16      	ldr	r3, [pc, #88]	; (3710 <_usb_d_dev_init+0x90>)
    36b6:	789b      	ldrb	r3, [r3, #2]
    36b8:	079b      	lsls	r3, r3, #30
    36ba:	d4fb      	bmi.n	36b4 <_usb_d_dev_init+0x34>
}

static inline void hri_usb_write_CTRLA_reg(const void *const hw, hri_usb_ctrla_reg_t data)
{
	USB_CRITICAL_SECTION_ENTER();
	((Usb *)hw)->HOST.CTRLA.reg = data;
    36bc:	2201      	movs	r2, #1
    36be:	4b14      	ldr	r3, [pc, #80]	; (3710 <_usb_d_dev_init+0x90>)
    36c0:	701a      	strb	r2, [r3, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    36c2:	4b13      	ldr	r3, [pc, #76]	; (3710 <_usb_d_dev_init+0x90>)
    36c4:	789b      	ldrb	r3, [r3, #2]
    36c6:	079b      	lsls	r3, r3, #30
    36c8:	d1fb      	bne.n	36c2 <_usb_d_dev_init+0x42>
    36ca:	4b11      	ldr	r3, [pc, #68]	; (3710 <_usb_d_dev_init+0x90>)
    36cc:	789b      	ldrb	r3, [r3, #2]
    36ce:	07db      	lsls	r3, r3, #31
    36d0:	d4fb      	bmi.n	36ca <_usb_d_dev_init+0x4a>
	dev_inst.callbacks.sof   = (_usb_d_dev_sof_cb_t)_dummy_func_no_return;
    36d2:	4b10      	ldr	r3, [pc, #64]	; (3714 <_usb_d_dev_init+0x94>)
    36d4:	4a10      	ldr	r2, [pc, #64]	; (3718 <_usb_d_dev_init+0x98>)
    36d6:	621a      	str	r2, [r3, #32]
	dev_inst.callbacks.event = (_usb_d_dev_event_cb_t)_dummy_func_no_return;
    36d8:	625a      	str	r2, [r3, #36]	; 0x24
	dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)_dummy_func_no_return;
    36da:	629a      	str	r2, [r3, #40]	; 0x28
	dev_inst.ep_callbacks.more  = (_usb_d_dev_ep_cb_more_t)_dummy_func_no_return;
    36dc:	62da      	str	r2, [r3, #44]	; 0x2c
	dev_inst.ep_callbacks.done  = (_usb_d_dev_ep_cb_done_t)_dummy_func_no_return;
    36de:	631a      	str	r2, [r3, #48]	; 0x30
	_usb_d_dev_reset_epts();
    36e0:	4b0e      	ldr	r3, [pc, #56]	; (371c <_usb_d_dev_init+0x9c>)
    36e2:	4798      	blx	r3
	_usb_load_calib();
    36e4:	4b0e      	ldr	r3, [pc, #56]	; (3720 <_usb_d_dev_init+0xa0>)
    36e6:	4798      	blx	r3
	((Usb *)hw)->HOST.CTRLA.reg = data;
    36e8:	2204      	movs	r2, #4
    36ea:	4b09      	ldr	r3, [pc, #36]	; (3710 <_usb_d_dev_init+0x90>)
    36ec:	701a      	strb	r2, [r3, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    36ee:	4b08      	ldr	r3, [pc, #32]	; (3710 <_usb_d_dev_init+0x90>)
    36f0:	789b      	ldrb	r3, [r3, #2]
    36f2:	079b      	lsls	r3, r3, #30
    36f4:	d1fb      	bne.n	36ee <_usb_d_dev_init+0x6e>
}

static inline void hri_usb_write_DESCADD_reg(const void *const hw, hri_usb_descadd_reg_t data)
{
	USB_CRITICAL_SECTION_ENTER();
	((Usb *)hw)->HOST.DESCADD.reg = data;
    36f6:	4a06      	ldr	r2, [pc, #24]	; (3710 <_usb_d_dev_init+0x90>)
    36f8:	4b0a      	ldr	r3, [pc, #40]	; (3724 <_usb_d_dev_init+0xa4>)
    36fa:	6253      	str	r3, [r2, #36]	; 0x24
	hri_usbdevice_write_CTRLB_reg(hw, spdconf[speed] | USB_DEVICE_CTRLB_DETACH);
    36fc:	ab01      	add	r3, sp, #4
    36fe:	785b      	ldrb	r3, [r3, #1]
    3700:	2101      	movs	r1, #1
    3702:	430b      	orrs	r3, r1
    3704:	b2db      	uxtb	r3, r3
	((Usb *)hw)->DEVICE.CTRLB.reg = data;
    3706:	8113      	strh	r3, [r2, #8]
}
    3708:	2000      	movs	r0, #0
    370a:	b003      	add	sp, #12
    370c:	bd00      	pop	{pc}
    370e:	46c0      	nop			; (mov r8, r8)
    3710:	41005000 	.word	0x41005000
    3714:	20000d08 	.word	0x20000d08
    3718:	00002d71 	.word	0x00002d71
    371c:	0000303d 	.word	0x0000303d
    3720:	00002d75 	.word	0x00002d75
    3724:	20000c88 	.word	0x20000c88

00003728 <_usb_d_dev_enable>:
	tmp = ((Usb *)hw)->HOST.SYNCBUSY.reg;
    3728:	4b10      	ldr	r3, [pc, #64]	; (376c <_usb_d_dev_enable+0x44>)
    372a:	789b      	ldrb	r3, [r3, #2]
	if (hri_usbdevice_get_SYNCBUSY_reg(hw, (USB_SYNCBUSY_ENABLE | USB_SYNCBUSY_SWRST))) {
    372c:	079b      	lsls	r3, r3, #30
    372e:	d119      	bne.n	3764 <_usb_d_dev_enable+0x3c>
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    3730:	4b0e      	ldr	r3, [pc, #56]	; (376c <_usb_d_dev_enable+0x44>)
    3732:	789b      	ldrb	r3, [r3, #2]
    3734:	079b      	lsls	r3, r3, #30
    3736:	d1fb      	bne.n	3730 <_usb_d_dev_enable+0x8>
	return ((Usb *)hw)->HOST.CTRLA.reg;
    3738:	4b0c      	ldr	r3, [pc, #48]	; (376c <_usb_d_dev_enable+0x44>)
    373a:	781b      	ldrb	r3, [r3, #0]
    373c:	b2db      	uxtb	r3, r3
	if ((ctrla & USB_CTRLA_ENABLE) == 0) {
    373e:	079a      	lsls	r2, r3, #30
    3740:	d408      	bmi.n	3754 <_usb_d_dev_enable+0x2c>
		hri_usbdevice_write_CTRLA_reg(hw, ctrla | USB_CTRLA_ENABLE);
    3742:	2202      	movs	r2, #2
    3744:	4313      	orrs	r3, r2
    3746:	b2db      	uxtb	r3, r3
	((Usb *)hw)->HOST.CTRLA.reg = data;
    3748:	4a08      	ldr	r2, [pc, #32]	; (376c <_usb_d_dev_enable+0x44>)
    374a:	7013      	strb	r3, [r2, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    374c:	4b07      	ldr	r3, [pc, #28]	; (376c <_usb_d_dev_enable+0x44>)
    374e:	789b      	ldrb	r3, [r3, #2]
    3750:	079b      	lsls	r3, r3, #30
    3752:	d1fb      	bne.n	374c <_usb_d_dev_enable+0x24>
    3754:	2280      	movs	r2, #128	; 0x80
    3756:	4b06      	ldr	r3, [pc, #24]	; (3770 <_usb_d_dev_enable+0x48>)
    3758:	601a      	str	r2, [r3, #0]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    375a:	4a06      	ldr	r2, [pc, #24]	; (3774 <_usb_d_dev_enable+0x4c>)
    375c:	4b03      	ldr	r3, [pc, #12]	; (376c <_usb_d_dev_enable+0x44>)
    375e:	831a      	strh	r2, [r3, #24]
	return ERR_NONE;
    3760:	2000      	movs	r0, #0
}
    3762:	4770      	bx	lr
		return -USB_ERR_DENIED;
    3764:	2011      	movs	r0, #17
    3766:	4240      	negs	r0, r0
    3768:	e7fb      	b.n	3762 <_usb_d_dev_enable+0x3a>
    376a:	46c0      	nop			; (mov r8, r8)
    376c:	41005000 	.word	0x41005000
    3770:	e000e100 	.word	0xe000e100
    3774:	0000028d 	.word	0x0000028d

00003778 <_usb_d_dev_attach>:
	((Usb *)hw)->DEVICE.CTRLB.reg &= ~USB_DEVICE_CTRLB_DETACH;
    3778:	4a02      	ldr	r2, [pc, #8]	; (3784 <_usb_d_dev_attach+0xc>)
    377a:	8913      	ldrh	r3, [r2, #8]
    377c:	2101      	movs	r1, #1
    377e:	438b      	bics	r3, r1
    3780:	8113      	strh	r3, [r2, #8]
}
    3782:	4770      	bx	lr
    3784:	41005000 	.word	0x41005000

00003788 <_usb_d_dev_set_address>:
	hri_usbdevice_write_DADD_reg(USB, USB_DEVICE_DADD_ADDEN | USB_DEVICE_DADD_DADD(addr));
    3788:	2380      	movs	r3, #128	; 0x80
    378a:	425b      	negs	r3, r3
    378c:	4318      	orrs	r0, r3
    378e:	b2c0      	uxtb	r0, r0
	((Usb *)hw)->DEVICE.DADD.reg = data;
    3790:	4b01      	ldr	r3, [pc, #4]	; (3798 <_usb_d_dev_set_address+0x10>)
    3792:	7298      	strb	r0, [r3, #10]
}
    3794:	4770      	bx	lr
    3796:	46c0      	nop			; (mov r8, r8)
    3798:	41005000 	.word	0x41005000

0000379c <_usb_d_dev_ep_init>:
{
    379c:	b5f0      	push	{r4, r5, r6, r7, lr}
    379e:	46c6      	mov	lr, r8
    37a0:	b500      	push	{lr}
	uint8_t               epn = USB_EP_GET_N(ep);
    37a2:	230f      	movs	r3, #15
    37a4:	4003      	ands	r3, r0
    37a6:	b244      	sxtb	r4, r0
    37a8:	46a4      	mov	ip, r4
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    37aa:	2b00      	cmp	r3, #0
    37ac:	d005      	beq.n	37ba <_usb_d_dev_ep_init+0x1e>
    37ae:	2c00      	cmp	r4, #0
    37b0:	db01      	blt.n	37b6 <_usb_d_dev_ep_init+0x1a>
    37b2:	001c      	movs	r4, r3
    37b4:	e002      	b.n	37bc <_usb_d_dev_ep_init+0x20>
    37b6:	1d1c      	adds	r4, r3, #4
    37b8:	e000      	b.n	37bc <_usb_d_dev_ep_init+0x20>
    37ba:	001c      	movs	r4, r3
	return &dev_inst.ep[ep_index];
    37bc:	0026      	movs	r6, r4
	uint8_t                        ep_type = attr & USB_EP_XTYPE_MASK;
    37be:	2503      	movs	r5, #3
    37c0:	4029      	ands	r1, r5
	const struct _usb_ep_cfg_item *pcfg    = &_usb_ep_cfgs[epn];
    37c2:	001f      	movs	r7, r3
	if (epn > CONF_USB_D_MAX_EP_N) {
    37c4:	2b04      	cmp	r3, #4
    37c6:	d900      	bls.n	37ca <_usb_d_dev_ep_init+0x2e>
    37c8:	e07a      	b.n	38c0 <_usb_d_dev_ep_init+0x124>
	if (ept->ep != 0xFF) {
    37ca:	00a5      	lsls	r5, r4, #2
    37cc:	192d      	adds	r5, r5, r4
    37ce:	00ac      	lsls	r4, r5, #2
    37d0:	46a0      	mov	r8, r4
    37d2:	4c43      	ldr	r4, [pc, #268]	; (38e0 <_usb_d_dev_ep_init+0x144>)
    37d4:	3420      	adds	r4, #32
    37d6:	4444      	add	r4, r8
    37d8:	3426      	adds	r4, #38	; 0x26
    37da:	7824      	ldrb	r4, [r4, #0]
    37dc:	2cff      	cmp	r4, #255	; 0xff
    37de:	d000      	beq.n	37e2 <_usb_d_dev_ep_init+0x46>
    37e0:	e071      	b.n	38c6 <_usb_d_dev_ep_init+0x12a>
	if (ep_type == USB_EP_XTYPE_CTRL) {
    37e2:	2900      	cmp	r1, #0
    37e4:	d118      	bne.n	3818 <_usb_d_dev_ep_init+0x7c>
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    37e6:	2b00      	cmp	r3, #0
    37e8:	d004      	beq.n	37f4 <_usb_d_dev_ep_init+0x58>
    37ea:	4664      	mov	r4, ip
    37ec:	2c00      	cmp	r4, #0
    37ee:	db01      	blt.n	37f4 <_usb_d_dev_ep_init+0x58>
    37f0:	3304      	adds	r3, #4
    37f2:	b2db      	uxtb	r3, r3
		if (ept_in->ep != 0xFF) {
    37f4:	009c      	lsls	r4, r3, #2
    37f6:	18e3      	adds	r3, r4, r3
    37f8:	009d      	lsls	r5, r3, #2
    37fa:	4b39      	ldr	r3, [pc, #228]	; (38e0 <_usb_d_dev_ep_init+0x144>)
    37fc:	3320      	adds	r3, #32
    37fe:	195b      	adds	r3, r3, r5
    3800:	3326      	adds	r3, #38	; 0x26
    3802:	781b      	ldrb	r3, [r3, #0]
    3804:	2bff      	cmp	r3, #255	; 0xff
    3806:	d161      	bne.n	38cc <_usb_d_dev_ep_init+0x130>
		if (pcfg->cache == NULL) {
    3808:	007b      	lsls	r3, r7, #1
    380a:	19db      	adds	r3, r3, r7
    380c:	009c      	lsls	r4, r3, #2
    380e:	4b35      	ldr	r3, [pc, #212]	; (38e4 <_usb_d_dev_ep_init+0x148>)
    3810:	191b      	adds	r3, r3, r4
    3812:	689b      	ldr	r3, [r3, #8]
    3814:	2b00      	cmp	r3, #0
    3816:	d05c      	beq.n	38d2 <_usb_d_dev_ep_init+0x136>
	if ((dir ? pcfg->i_cache : pcfg->cache) && ((dir ? pcfg->i_size : pcfg->size) < max_pkt_siz)) {
    3818:	4663      	mov	r3, ip
    381a:	2b00      	cmp	r3, #0
    381c:	db37      	blt.n	388e <_usb_d_dev_ep_init+0xf2>
    381e:	007b      	lsls	r3, r7, #1
    3820:	19db      	adds	r3, r3, r7
    3822:	009c      	lsls	r4, r3, #2
    3824:	4b2f      	ldr	r3, [pc, #188]	; (38e4 <_usb_d_dev_ep_init+0x148>)
    3826:	191b      	adds	r3, r3, r4
    3828:	689b      	ldr	r3, [r3, #8]
    382a:	1e5c      	subs	r4, r3, #1
    382c:	41a3      	sbcs	r3, r4
    382e:	b2db      	uxtb	r3, r3
    3830:	2b00      	cmp	r3, #0
    3832:	d00a      	beq.n	384a <_usb_d_dev_ep_init+0xae>
    3834:	4663      	mov	r3, ip
    3836:	2b00      	cmp	r3, #0
    3838:	db33      	blt.n	38a2 <_usb_d_dev_ep_init+0x106>
    383a:	007b      	lsls	r3, r7, #1
    383c:	19db      	adds	r3, r3, r7
    383e:	009c      	lsls	r4, r3, #2
    3840:	4b28      	ldr	r3, [pc, #160]	; (38e4 <_usb_d_dev_ep_init+0x148>)
    3842:	191b      	adds	r3, r3, r4
    3844:	8a1b      	ldrh	r3, [r3, #16]
    3846:	4293      	cmp	r3, r2
    3848:	db46      	blt.n	38d8 <_usb_d_dev_ep_init+0x13c>
	ept->cache    = (uint8_t *)(dir ? pcfg->i_cache : pcfg->cache);
    384a:	4663      	mov	r3, ip
    384c:	2b00      	cmp	r3, #0
    384e:	db2f      	blt.n	38b0 <_usb_d_dev_ep_init+0x114>
    3850:	007b      	lsls	r3, r7, #1
    3852:	19df      	adds	r7, r3, r7
    3854:	00bc      	lsls	r4, r7, #2
    3856:	4b23      	ldr	r3, [pc, #140]	; (38e4 <_usb_d_dev_ep_init+0x148>)
    3858:	191b      	adds	r3, r3, r4
    385a:	689b      	ldr	r3, [r3, #8]
    385c:	469c      	mov	ip, r3
    385e:	4b20      	ldr	r3, [pc, #128]	; (38e0 <_usb_d_dev_ep_init+0x144>)
    3860:	00b5      	lsls	r5, r6, #2
    3862:	19af      	adds	r7, r5, r6
    3864:	00bc      	lsls	r4, r7, #2
    3866:	191c      	adds	r4, r3, r4
    3868:	4667      	mov	r7, ip
    386a:	6427      	str	r7, [r4, #64]	; 0x40
	ept->size     = max_pkt_siz;
    386c:	3444      	adds	r4, #68	; 0x44
    386e:	8022      	strh	r2, [r4, #0]
	ept->flags.u8 = (ep_type + 1);
    3870:	3101      	adds	r1, #1
    3872:	3320      	adds	r3, #32
    3874:	19ac      	adds	r4, r5, r6
    3876:	00a2      	lsls	r2, r4, #2
    3878:	0014      	movs	r4, r2
    387a:	189a      	adds	r2, r3, r2
    387c:	3227      	adds	r2, #39	; 0x27
    387e:	7011      	strb	r1, [r2, #0]
	ept->ep       = ep;
    3880:	191b      	adds	r3, r3, r4
    3882:	3326      	adds	r3, #38	; 0x26
    3884:	7018      	strb	r0, [r3, #0]
	return USB_OK;
    3886:	2000      	movs	r0, #0
}
    3888:	bc04      	pop	{r2}
    388a:	4690      	mov	r8, r2
    388c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if ((dir ? pcfg->i_cache : pcfg->cache) && ((dir ? pcfg->i_size : pcfg->size) < max_pkt_siz)) {
    388e:	007b      	lsls	r3, r7, #1
    3890:	19db      	adds	r3, r3, r7
    3892:	009c      	lsls	r4, r3, #2
    3894:	4b13      	ldr	r3, [pc, #76]	; (38e4 <_usb_d_dev_ep_init+0x148>)
    3896:	191b      	adds	r3, r3, r4
    3898:	68db      	ldr	r3, [r3, #12]
    389a:	1e5c      	subs	r4, r3, #1
    389c:	41a3      	sbcs	r3, r4
    389e:	b2db      	uxtb	r3, r3
    38a0:	e7c6      	b.n	3830 <_usb_d_dev_ep_init+0x94>
    38a2:	007b      	lsls	r3, r7, #1
    38a4:	19db      	adds	r3, r3, r7
    38a6:	009c      	lsls	r4, r3, #2
    38a8:	4b0e      	ldr	r3, [pc, #56]	; (38e4 <_usb_d_dev_ep_init+0x148>)
    38aa:	191b      	adds	r3, r3, r4
    38ac:	8a5b      	ldrh	r3, [r3, #18]
    38ae:	e7ca      	b.n	3846 <_usb_d_dev_ep_init+0xaa>
	ept->cache    = (uint8_t *)(dir ? pcfg->i_cache : pcfg->cache);
    38b0:	007b      	lsls	r3, r7, #1
    38b2:	19df      	adds	r7, r3, r7
    38b4:	00bc      	lsls	r4, r7, #2
    38b6:	4b0b      	ldr	r3, [pc, #44]	; (38e4 <_usb_d_dev_ep_init+0x148>)
    38b8:	191b      	adds	r3, r3, r4
    38ba:	68db      	ldr	r3, [r3, #12]
    38bc:	469c      	mov	ip, r3
    38be:	e7ce      	b.n	385e <_usb_d_dev_ep_init+0xc2>
		return -USB_ERR_PARAM;
    38c0:	2012      	movs	r0, #18
    38c2:	4240      	negs	r0, r0
    38c4:	e7e0      	b.n	3888 <_usb_d_dev_ep_init+0xec>
		return -USB_ERR_REDO;
    38c6:	2014      	movs	r0, #20
    38c8:	4240      	negs	r0, r0
    38ca:	e7dd      	b.n	3888 <_usb_d_dev_ep_init+0xec>
			return -USB_ERR_REDO;
    38cc:	2014      	movs	r0, #20
    38ce:	4240      	negs	r0, r0
    38d0:	e7da      	b.n	3888 <_usb_d_dev_ep_init+0xec>
			return -USB_ERR_FUNC;
    38d2:	2013      	movs	r0, #19
    38d4:	4240      	negs	r0, r0
    38d6:	e7d7      	b.n	3888 <_usb_d_dev_ep_init+0xec>
		return -USB_ERR_FUNC;
    38d8:	2013      	movs	r0, #19
    38da:	4240      	negs	r0, r0
    38dc:	e7d4      	b.n	3888 <_usb_d_dev_ep_init+0xec>
    38de:	46c0      	nop			; (mov r8, r8)
    38e0:	20000d08 	.word	0x20000d08
    38e4:	0000e280 	.word	0x0000e280

000038e8 <_usb_d_dev_ep_deinit>:
{
    38e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    38ea:	0004      	movs	r4, r0
	uint8_t               epn = USB_EP_GET_N(ep);
    38ec:	250f      	movs	r5, #15
    38ee:	4005      	ands	r5, r0
    38f0:	b247      	sxtb	r7, r0
	bool                  dir = USB_EP_GET_DIR(ep);
    38f2:	0ffb      	lsrs	r3, r7, #31
    38f4:	469c      	mov	ip, r3
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    38f6:	2d00      	cmp	r5, #0
    38f8:	d005      	beq.n	3906 <_usb_d_dev_ep_deinit+0x1e>
    38fa:	2f00      	cmp	r7, #0
    38fc:	db01      	blt.n	3902 <_usb_d_dev_ep_deinit+0x1a>
    38fe:	002a      	movs	r2, r5
    3900:	e002      	b.n	3908 <_usb_d_dev_ep_deinit+0x20>
    3902:	1d2a      	adds	r2, r5, #4
    3904:	e000      	b.n	3908 <_usb_d_dev_ep_deinit+0x20>
    3906:	002a      	movs	r2, r5
	return &dev_inst.ep[ep_index];
    3908:	0016      	movs	r6, r2
    390a:	0093      	lsls	r3, r2, #2
    390c:	189b      	adds	r3, r3, r2
    390e:	0099      	lsls	r1, r3, #2
    3910:	3110      	adds	r1, #16
    3912:	4823      	ldr	r0, [pc, #140]	; (39a0 <_usb_d_dev_ep_deinit+0xb8>)
    3914:	3020      	adds	r0, #32
    3916:	1840      	adds	r0, r0, r1
    3918:	3004      	adds	r0, #4
	if (epn > CONF_USB_D_MAX_EP_N || !_usb_d_dev_ep_is_used(ept)) {
    391a:	2d04      	cmp	r5, #4
    391c:	d830      	bhi.n	3980 <_usb_d_dev_ep_deinit+0x98>
    391e:	0093      	lsls	r3, r2, #2
    3920:	189a      	adds	r2, r3, r2
    3922:	0091      	lsls	r1, r2, #2
    3924:	4b1e      	ldr	r3, [pc, #120]	; (39a0 <_usb_d_dev_ep_deinit+0xb8>)
    3926:	3320      	adds	r3, #32
    3928:	185b      	adds	r3, r3, r1
    392a:	3326      	adds	r3, #38	; 0x26
    392c:	781b      	ldrb	r3, [r3, #0]
    392e:	2bff      	cmp	r3, #255	; 0xff
    3930:	d026      	beq.n	3980 <_usb_d_dev_ep_deinit+0x98>
	_usb_d_dev_trans_stop(ept, dir, USB_TRANS_RESET);
    3932:	2203      	movs	r2, #3
    3934:	4661      	mov	r1, ip
    3936:	4b1b      	ldr	r3, [pc, #108]	; (39a4 <_usb_d_dev_ep_deinit+0xbc>)
    3938:	4798      	blx	r3
	if (_usb_d_dev_ep_is_ctrl(ept)) {
    393a:	00b2      	lsls	r2, r6, #2
    393c:	1992      	adds	r2, r2, r6
    393e:	0091      	lsls	r1, r2, #2
    3940:	4b17      	ldr	r3, [pc, #92]	; (39a0 <_usb_d_dev_ep_deinit+0xb8>)
    3942:	185b      	adds	r3, r3, r1
    3944:	3340      	adds	r3, #64	; 0x40
    3946:	79da      	ldrb	r2, [r3, #7]
    3948:	2307      	movs	r3, #7
    394a:	4013      	ands	r3, r2
    394c:	2b01      	cmp	r3, #1
    394e:	d018      	beq.n	3982 <_usb_d_dev_ep_deinit+0x9a>
	} else if (USB_EP_GET_DIR(ep)) {
    3950:	2f00      	cmp	r7, #0
    3952:	db1c      	blt.n	398e <_usb_d_dev_ep_deinit+0xa6>
		hw->DEVICE.DeviceEndpoint[ep].EPCFG.reg &= ~USB_DEVICE_EPCFG_EPTYPE0_Msk;
    3954:	4a14      	ldr	r2, [pc, #80]	; (39a8 <_usb_d_dev_ep_deinit+0xc0>)
    3956:	3408      	adds	r4, #8
    3958:	0164      	lsls	r4, r4, #5
    395a:	5ca3      	ldrb	r3, [r4, r2]
    395c:	2107      	movs	r1, #7
    395e:	438b      	bics	r3, r1
    3960:	54a3      	strb	r3, [r4, r2]
	ept->flags.u8 = 0;
    3962:	4b0f      	ldr	r3, [pc, #60]	; (39a0 <_usb_d_dev_ep_deinit+0xb8>)
    3964:	3320      	adds	r3, #32
    3966:	00b1      	lsls	r1, r6, #2
    3968:	1988      	adds	r0, r1, r6
    396a:	0082      	lsls	r2, r0, #2
    396c:	189a      	adds	r2, r3, r2
    396e:	3227      	adds	r2, #39	; 0x27
    3970:	2000      	movs	r0, #0
    3972:	7010      	strb	r0, [r2, #0]
	ept->ep       = 0xFF;
    3974:	198e      	adds	r6, r1, r6
    3976:	00b2      	lsls	r2, r6, #2
    3978:	189b      	adds	r3, r3, r2
    397a:	3326      	adds	r3, #38	; 0x26
    397c:	22ff      	movs	r2, #255	; 0xff
    397e:	701a      	strb	r2, [r3, #0]
}
    3980:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		hw->DEVICE.DeviceEndpoint[ep].EPCFG.reg = 0;
    3982:	3408      	adds	r4, #8
    3984:	0164      	lsls	r4, r4, #5
    3986:	2200      	movs	r2, #0
    3988:	4b07      	ldr	r3, [pc, #28]	; (39a8 <_usb_d_dev_ep_deinit+0xc0>)
    398a:	54e2      	strb	r2, [r4, r3]
    398c:	e7e9      	b.n	3962 <_usb_d_dev_ep_deinit+0x7a>
		hw->DEVICE.DeviceEndpoint[USB_EP_GET_N(ep)].EPCFG.reg &= ~USB_DEVICE_EPCFG_EPTYPE1_Msk;
    398e:	4a06      	ldr	r2, [pc, #24]	; (39a8 <_usb_d_dev_ep_deinit+0xc0>)
    3990:	3508      	adds	r5, #8
    3992:	016d      	lsls	r5, r5, #5
    3994:	5cab      	ldrb	r3, [r5, r2]
    3996:	2170      	movs	r1, #112	; 0x70
    3998:	438b      	bics	r3, r1
    399a:	54ab      	strb	r3, [r5, r2]
    399c:	e7e1      	b.n	3962 <_usb_d_dev_ep_deinit+0x7a>
    399e:	46c0      	nop			; (mov r8, r8)
    39a0:	20000d08 	.word	0x20000d08
    39a4:	00002eb1 	.word	0x00002eb1
    39a8:	41005000 	.word	0x41005000

000039ac <_usb_d_dev_ep_enable>:
{
    39ac:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t               epn   = USB_EP_GET_N(ep);
    39ae:	230f      	movs	r3, #15
    39b0:	4003      	ands	r3, r0
    39b2:	b240      	sxtb	r0, r0
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    39b4:	2b00      	cmp	r3, #0
    39b6:	d005      	beq.n	39c4 <_usb_d_dev_ep_enable+0x18>
    39b8:	2800      	cmp	r0, #0
    39ba:	db01      	blt.n	39c0 <_usb_d_dev_ep_enable+0x14>
    39bc:	001e      	movs	r6, r3
    39be:	e002      	b.n	39c6 <_usb_d_dev_ep_enable+0x1a>
    39c0:	1d1e      	adds	r6, r3, #4
    39c2:	e000      	b.n	39c6 <_usb_d_dev_ep_enable+0x1a>
    39c4:	001e      	movs	r6, r3
	return &dev_inst.ep[ep_index];
    39c6:	0034      	movs	r4, r6
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    39c8:	001a      	movs	r2, r3
    39ca:	3208      	adds	r2, #8
    39cc:	0152      	lsls	r2, r2, #5
    39ce:	49b3      	ldr	r1, [pc, #716]	; (3c9c <_usb_d_dev_ep_enable+0x2f0>)
    39d0:	5c55      	ldrb	r5, [r2, r1]
    39d2:	b2ed      	uxtb	r5, r5
	if (epn > CONF_USB_D_MAX_EP_N || !_usb_d_dev_ep_is_used(ept)) {
    39d4:	2b04      	cmp	r3, #4
    39d6:	d900      	bls.n	39da <_usb_d_dev_ep_enable+0x2e>
    39d8:	e151      	b.n	3c7e <_usb_d_dev_ep_enable+0x2d2>
    39da:	00b1      	lsls	r1, r6, #2
    39dc:	1989      	adds	r1, r1, r6
    39de:	008e      	lsls	r6, r1, #2
    39e0:	4aaf      	ldr	r2, [pc, #700]	; (3ca0 <_usb_d_dev_ep_enable+0x2f4>)
    39e2:	3220      	adds	r2, #32
    39e4:	1992      	adds	r2, r2, r6
    39e6:	3226      	adds	r2, #38	; 0x26
    39e8:	7812      	ldrb	r2, [r2, #0]
    39ea:	2aff      	cmp	r2, #255	; 0xff
    39ec:	d100      	bne.n	39f0 <_usb_d_dev_ep_enable+0x44>
    39ee:	e149      	b.n	3c84 <_usb_d_dev_ep_enable+0x2d8>
	bank = prvt_inst.desc_table[epn].DeviceDescBank;
    39f0:	015a      	lsls	r2, r3, #5
    39f2:	4eac      	ldr	r6, [pc, #688]	; (3ca4 <_usb_d_dev_ep_enable+0x2f8>)
    39f4:	18b6      	adds	r6, r6, r2
	if (ept->flags.bits.eptype == USB_D_EPTYPE_CTRL) {
    39f6:	00a1      	lsls	r1, r4, #2
    39f8:	1909      	adds	r1, r1, r4
    39fa:	008f      	lsls	r7, r1, #2
    39fc:	4aa8      	ldr	r2, [pc, #672]	; (3ca0 <_usb_d_dev_ep_enable+0x2f4>)
    39fe:	19d2      	adds	r2, r2, r7
    3a00:	3240      	adds	r2, #64	; 0x40
    3a02:	79d1      	ldrb	r1, [r2, #7]
    3a04:	2207      	movs	r2, #7
    3a06:	400a      	ands	r2, r1
    3a08:	2a01      	cmp	r2, #1
    3a0a:	d037      	beq.n	3a7c <_usb_d_dev_ep_enable+0xd0>
	} else if (dir) {
    3a0c:	2800      	cmp	r0, #0
    3a0e:	da00      	bge.n	3a12 <_usb_d_dev_ep_enable+0x66>
    3a10:	e0cc      	b.n	3bac <_usb_d_dev_ep_enable+0x200>
		if (epcfg & USB_DEVICE_EPCFG_EPTYPE0_Msk) {
    3a12:	076a      	lsls	r2, r5, #29
    3a14:	d000      	beq.n	3a18 <_usb_d_dev_ep_enable+0x6c>
    3a16:	e13e      	b.n	3c96 <_usb_d_dev_ep_enable+0x2ea>
		epcfg |= USB_DEVICE_EPCFG_EPTYPE0(ept->flags.bits.eptype);
    3a18:	4aa1      	ldr	r2, [pc, #644]	; (3ca0 <_usb_d_dev_ep_enable+0x2f4>)
    3a1a:	00a0      	lsls	r0, r4, #2
    3a1c:	1907      	adds	r7, r0, r4
    3a1e:	00b9      	lsls	r1, r7, #2
    3a20:	1851      	adds	r1, r2, r1
    3a22:	3140      	adds	r1, #64	; 0x40
    3a24:	79c9      	ldrb	r1, [r1, #7]
    3a26:	0749      	lsls	r1, r1, #29
    3a28:	0f49      	lsrs	r1, r1, #29
    3a2a:	430d      	orrs	r5, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg = data;
    3a2c:	0019      	movs	r1, r3
    3a2e:	3108      	adds	r1, #8
    3a30:	0149      	lsls	r1, r1, #5
    3a32:	4f9a      	ldr	r7, [pc, #616]	; (3c9c <_usb_d_dev_ep_enable+0x2f0>)
    3a34:	55cd      	strb	r5, [r1, r7]
		bank[0].PCKSIZE.reg = USB_DEVICE_PCKSIZE_MULTI_PACKET_SIZE(ept->size)
    3a36:	1904      	adds	r4, r0, r4
    3a38:	00a1      	lsls	r1, r4, #2
    3a3a:	1852      	adds	r2, r2, r1
    3a3c:	3244      	adds	r2, #68	; 0x44
    3a3e:	8810      	ldrh	r0, [r2, #0]
    3a40:	0382      	lsls	r2, r0, #14
    3a42:	4999      	ldr	r1, [pc, #612]	; (3ca8 <_usb_d_dev_ep_enable+0x2fc>)
    3a44:	400a      	ands	r2, r1
	        : ((n > 256) ? 6 : ((n > 128) ? 5 : ((n > 64) ? 4 : ((n > 32) ? 3 : ((n > 16) ? 2 : ((n > 8) ? 1 : 0)))))));
    3a46:	2180      	movs	r1, #128	; 0x80
    3a48:	0089      	lsls	r1, r1, #2
    3a4a:	4288      	cmp	r0, r1
    3a4c:	d900      	bls.n	3a50 <_usb_d_dev_ep_enable+0xa4>
    3a4e:	e0f9      	b.n	3c44 <_usb_d_dev_ep_enable+0x298>
    3a50:	3901      	subs	r1, #1
    3a52:	39ff      	subs	r1, #255	; 0xff
    3a54:	4288      	cmp	r0, r1
    3a56:	d900      	bls.n	3a5a <_usb_d_dev_ep_enable+0xae>
    3a58:	e107      	b.n	3c6a <_usb_d_dev_ep_enable+0x2be>
    3a5a:	2880      	cmp	r0, #128	; 0x80
    3a5c:	d900      	bls.n	3a60 <_usb_d_dev_ep_enable+0xb4>
    3a5e:	e106      	b.n	3c6e <_usb_d_dev_ep_enable+0x2c2>
    3a60:	2840      	cmp	r0, #64	; 0x40
    3a62:	d900      	bls.n	3a66 <_usb_d_dev_ep_enable+0xba>
    3a64:	e105      	b.n	3c72 <_usb_d_dev_ep_enable+0x2c6>
    3a66:	2820      	cmp	r0, #32
    3a68:	d900      	bls.n	3a6c <_usb_d_dev_ep_enable+0xc0>
    3a6a:	e104      	b.n	3c76 <_usb_d_dev_ep_enable+0x2ca>
    3a6c:	2810      	cmp	r0, #16
    3a6e:	d900      	bls.n	3a72 <_usb_d_dev_ep_enable+0xc6>
    3a70:	e103      	b.n	3c7a <_usb_d_dev_ep_enable+0x2ce>
    3a72:	39f8      	subs	r1, #248	; 0xf8
    3a74:	4281      	cmp	r1, r0
    3a76:	4189      	sbcs	r1, r1
    3a78:	4249      	negs	r1, r1
    3a7a:	e0e4      	b.n	3c46 <_usb_d_dev_ep_enable+0x29a>
		if (epcfg & (USB_DEVICE_EPCFG_EPTYPE1_Msk | USB_DEVICE_EPCFG_EPTYPE0_Msk)) {
    3a7c:	3276      	adds	r2, #118	; 0x76
    3a7e:	422a      	tst	r2, r5
    3a80:	d000      	beq.n	3a84 <_usb_d_dev_ep_enable+0xd8>
    3a82:	e102      	b.n	3c8a <_usb_d_dev_ep_enable+0x2de>
    3a84:	001a      	movs	r2, r3
    3a86:	3208      	adds	r2, #8
    3a88:	0152      	lsls	r2, r2, #5
    3a8a:	2011      	movs	r0, #17
    3a8c:	4983      	ldr	r1, [pc, #524]	; (3c9c <_usb_d_dev_ep_enable+0x2f0>)
    3a8e:	5450      	strb	r0, [r2, r1]
		bank[0].PCKSIZE.reg = USB_DEVICE_PCKSIZE_MULTI_PACKET_SIZE(ept->size)
    3a90:	4a83      	ldr	r2, [pc, #524]	; (3ca0 <_usb_d_dev_ep_enable+0x2f4>)
    3a92:	19d2      	adds	r2, r2, r7
    3a94:	3244      	adds	r2, #68	; 0x44
    3a96:	8812      	ldrh	r2, [r2, #0]
    3a98:	0391      	lsls	r1, r2, #14
    3a9a:	4883      	ldr	r0, [pc, #524]	; (3ca8 <_usb_d_dev_ep_enable+0x2fc>)
    3a9c:	4001      	ands	r1, r0
	        : ((n > 256) ? 6 : ((n > 128) ? 5 : ((n > 64) ? 4 : ((n > 32) ? 3 : ((n > 16) ? 2 : ((n > 8) ? 1 : 0)))))));
    3a9e:	2080      	movs	r0, #128	; 0x80
    3aa0:	0080      	lsls	r0, r0, #2
    3aa2:	4282      	cmp	r2, r0
    3aa4:	d810      	bhi.n	3ac8 <_usb_d_dev_ep_enable+0x11c>
    3aa6:	3801      	subs	r0, #1
    3aa8:	38ff      	subs	r0, #255	; 0xff
    3aaa:	4282      	cmp	r2, r0
    3aac:	d827      	bhi.n	3afe <_usb_d_dev_ep_enable+0x152>
    3aae:	2a80      	cmp	r2, #128	; 0x80
    3ab0:	d827      	bhi.n	3b02 <_usb_d_dev_ep_enable+0x156>
    3ab2:	2a40      	cmp	r2, #64	; 0x40
    3ab4:	d827      	bhi.n	3b06 <_usb_d_dev_ep_enable+0x15a>
    3ab6:	2a20      	cmp	r2, #32
    3ab8:	d827      	bhi.n	3b0a <_usb_d_dev_ep_enable+0x15e>
    3aba:	2a10      	cmp	r2, #16
    3abc:	d827      	bhi.n	3b0e <_usb_d_dev_ep_enable+0x162>
    3abe:	38f8      	subs	r0, #248	; 0xf8
    3ac0:	4290      	cmp	r0, r2
    3ac2:	4180      	sbcs	r0, r0
    3ac4:	4240      	negs	r0, r0
    3ac6:	e000      	b.n	3aca <_usb_d_dev_ep_enable+0x11e>
    3ac8:	2007      	movs	r0, #7
		                      | USB_DEVICE_PCKSIZE_SIZE(_usbd_ep_pcksize_size(ept->size));
    3aca:	0700      	lsls	r0, r0, #28
    3acc:	4301      	orrs	r1, r0
		bank[0].PCKSIZE.reg = USB_DEVICE_PCKSIZE_MULTI_PACKET_SIZE(ept->size)
    3ace:	6071      	str	r1, [r6, #4]
		    = USB_DEVICE_PCKSIZE_BYTE_COUNT(ept->size) | USB_DEVICE_PCKSIZE_SIZE(_usbd_ep_pcksize_size(ept->size));
    3ad0:	0491      	lsls	r1, r2, #18
    3ad2:	0c89      	lsrs	r1, r1, #18
	        : ((n > 256) ? 6 : ((n > 128) ? 5 : ((n > 64) ? 4 : ((n > 32) ? 3 : ((n > 16) ? 2 : ((n > 8) ? 1 : 0)))))));
    3ad4:	2080      	movs	r0, #128	; 0x80
    3ad6:	0080      	lsls	r0, r0, #2
    3ad8:	4282      	cmp	r2, r0
    3ada:	d81a      	bhi.n	3b12 <_usb_d_dev_ep_enable+0x166>
    3adc:	3801      	subs	r0, #1
    3ade:	38ff      	subs	r0, #255	; 0xff
    3ae0:	4282      	cmp	r2, r0
    3ae2:	d859      	bhi.n	3b98 <_usb_d_dev_ep_enable+0x1ec>
    3ae4:	2a80      	cmp	r2, #128	; 0x80
    3ae6:	d859      	bhi.n	3b9c <_usb_d_dev_ep_enable+0x1f0>
    3ae8:	2a40      	cmp	r2, #64	; 0x40
    3aea:	d859      	bhi.n	3ba0 <_usb_d_dev_ep_enable+0x1f4>
    3aec:	2a20      	cmp	r2, #32
    3aee:	d859      	bhi.n	3ba4 <_usb_d_dev_ep_enable+0x1f8>
    3af0:	2a10      	cmp	r2, #16
    3af2:	d859      	bhi.n	3ba8 <_usb_d_dev_ep_enable+0x1fc>
    3af4:	38f8      	subs	r0, #248	; 0xf8
    3af6:	4290      	cmp	r0, r2
    3af8:	4192      	sbcs	r2, r2
    3afa:	4252      	negs	r2, r2
    3afc:	e00a      	b.n	3b14 <_usb_d_dev_ep_enable+0x168>
    3afe:	2006      	movs	r0, #6
    3b00:	e7e3      	b.n	3aca <_usb_d_dev_ep_enable+0x11e>
    3b02:	2005      	movs	r0, #5
    3b04:	e7e1      	b.n	3aca <_usb_d_dev_ep_enable+0x11e>
    3b06:	2004      	movs	r0, #4
    3b08:	e7df      	b.n	3aca <_usb_d_dev_ep_enable+0x11e>
    3b0a:	2003      	movs	r0, #3
    3b0c:	e7dd      	b.n	3aca <_usb_d_dev_ep_enable+0x11e>
    3b0e:	2002      	movs	r0, #2
    3b10:	e7db      	b.n	3aca <_usb_d_dev_ep_enable+0x11e>
    3b12:	2207      	movs	r2, #7
		    = USB_DEVICE_PCKSIZE_BYTE_COUNT(ept->size) | USB_DEVICE_PCKSIZE_SIZE(_usbd_ep_pcksize_size(ept->size));
    3b14:	0712      	lsls	r2, r2, #28
    3b16:	430a      	orrs	r2, r1
    3b18:	6172      	str	r2, [r6, #20]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    3b1a:	001a      	movs	r2, r3
    3b1c:	3208      	adds	r2, #8
    3b1e:	0152      	lsls	r2, r2, #5
    3b20:	495e      	ldr	r1, [pc, #376]	; (3c9c <_usb_d_dev_ep_enable+0x2f0>)
    3b22:	468c      	mov	ip, r1
    3b24:	4462      	add	r2, ip
    3b26:	2040      	movs	r0, #64	; 0x40
    3b28:	7150      	strb	r0, [r2, #5]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    3b2a:	2180      	movs	r1, #128	; 0x80
    3b2c:	7111      	strb	r1, [r2, #4]
	bank->STATUS_BK.reg     = 0;
    3b2e:	4a5d      	ldr	r2, [pc, #372]	; (3ca4 <_usb_d_dev_ep_enable+0x2f8>)
    3b30:	015b      	lsls	r3, r3, #5
    3b32:	18d3      	adds	r3, r2, r3
    3b34:	2100      	movs	r1, #0
    3b36:	7299      	strb	r1, [r3, #10]
    3b38:	7699      	strb	r1, [r3, #26]
	uint8_t epn = USB_EP_GET_N(ept->ep);
    3b3a:	4959      	ldr	r1, [pc, #356]	; (3ca0 <_usb_d_dev_ep_enable+0x2f4>)
    3b3c:	000b      	movs	r3, r1
    3b3e:	3320      	adds	r3, #32
    3b40:	00a6      	lsls	r6, r4, #2
    3b42:	1937      	adds	r7, r6, r4
    3b44:	00bd      	lsls	r5, r7, #2
    3b46:	195b      	adds	r3, r3, r5
    3b48:	3326      	adds	r3, #38	; 0x26
    3b4a:	781b      	ldrb	r3, [r3, #0]
    3b4c:	250f      	movs	r5, #15
    3b4e:	402b      	ands	r3, r5
	_usbd_ep_set_buf(epn, 0, (uint32_t)ept->cache);
    3b50:	1937      	adds	r7, r6, r4
    3b52:	00bd      	lsls	r5, r7, #2
    3b54:	194d      	adds	r5, r1, r5
    3b56:	6c2f      	ldr	r7, [r5, #64]	; 0x40
	bank->ADDR.reg          = addr;
    3b58:	015d      	lsls	r5, r3, #5
    3b5a:	50af      	str	r7, [r5, r2]
	_usbd_ep_set_out_trans(epn, 0, ept->size, 0);
    3b5c:	1934      	adds	r4, r6, r4
    3b5e:	00a6      	lsls	r6, r4, #2
    3b60:	1989      	adds	r1, r1, r6
    3b62:	3144      	adds	r1, #68	; 0x44
    3b64:	8809      	ldrh	r1, [r1, #0]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = size;
    3b66:	1952      	adds	r2, r2, r5
    3b68:	6854      	ldr	r4, [r2, #4]
    3b6a:	0489      	lsls	r1, r1, #18
    3b6c:	0909      	lsrs	r1, r1, #4
    3b6e:	4e4f      	ldr	r6, [pc, #316]	; (3cac <_usb_d_dev_ep_enable+0x300>)
    3b70:	4034      	ands	r4, r6
    3b72:	4321      	orrs	r1, r4
    3b74:	6051      	str	r1, [r2, #4]
	bank->PCKSIZE.bit.BYTE_COUNT = count;
    3b76:	6851      	ldr	r1, [r2, #4]
    3b78:	0b89      	lsrs	r1, r1, #14
    3b7a:	038c      	lsls	r4, r1, #14
    3b7c:	6054      	str	r4, [r2, #4]
    3b7e:	3308      	adds	r3, #8
    3b80:	015b      	lsls	r3, r3, #5
    3b82:	4463      	add	r3, ip
    3b84:	22b0      	movs	r2, #176	; 0xb0
    3b86:	711a      	strb	r2, [r3, #4]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    3b88:	7158      	strb	r0, [r3, #5]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    3b8a:	4b49      	ldr	r3, [pc, #292]	; (3cb0 <_usb_d_dev_ep_enable+0x304>)
    3b8c:	469c      	mov	ip, r3
    3b8e:	4465      	add	r5, ip
    3b90:	2310      	movs	r3, #16
    3b92:	702b      	strb	r3, [r5, #0]
	return USB_OK;
    3b94:	2000      	movs	r0, #0
    3b96:	e067      	b.n	3c68 <_usb_d_dev_ep_enable+0x2bc>
	        : ((n > 256) ? 6 : ((n > 128) ? 5 : ((n > 64) ? 4 : ((n > 32) ? 3 : ((n > 16) ? 2 : ((n > 8) ? 1 : 0)))))));
    3b98:	2206      	movs	r2, #6
    3b9a:	e7bb      	b.n	3b14 <_usb_d_dev_ep_enable+0x168>
    3b9c:	2205      	movs	r2, #5
    3b9e:	e7b9      	b.n	3b14 <_usb_d_dev_ep_enable+0x168>
    3ba0:	2204      	movs	r2, #4
    3ba2:	e7b7      	b.n	3b14 <_usb_d_dev_ep_enable+0x168>
    3ba4:	2203      	movs	r2, #3
    3ba6:	e7b5      	b.n	3b14 <_usb_d_dev_ep_enable+0x168>
    3ba8:	2202      	movs	r2, #2
    3baa:	e7b3      	b.n	3b14 <_usb_d_dev_ep_enable+0x168>
		if (epcfg & USB_DEVICE_EPCFG_EPTYPE1_Msk) {
    3bac:	2270      	movs	r2, #112	; 0x70
    3bae:	422a      	tst	r2, r5
    3bb0:	d000      	beq.n	3bb4 <_usb_d_dev_ep_enable+0x208>
    3bb2:	e06d      	b.n	3c90 <_usb_d_dev_ep_enable+0x2e4>
		epcfg |= USB_DEVICE_EPCFG_EPTYPE1(ept->flags.bits.eptype);
    3bb4:	493a      	ldr	r1, [pc, #232]	; (3ca0 <_usb_d_dev_ep_enable+0x2f4>)
    3bb6:	00a0      	lsls	r0, r4, #2
    3bb8:	1907      	adds	r7, r0, r4
    3bba:	00ba      	lsls	r2, r7, #2
    3bbc:	188a      	adds	r2, r1, r2
    3bbe:	3240      	adds	r2, #64	; 0x40
    3bc0:	79d2      	ldrb	r2, [r2, #7]
    3bc2:	0752      	lsls	r2, r2, #29
    3bc4:	0e52      	lsrs	r2, r2, #25
    3bc6:	4315      	orrs	r5, r2
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg = data;
    3bc8:	001a      	movs	r2, r3
    3bca:	3208      	adds	r2, #8
    3bcc:	0152      	lsls	r2, r2, #5
    3bce:	4f33      	ldr	r7, [pc, #204]	; (3c9c <_usb_d_dev_ep_enable+0x2f0>)
    3bd0:	55d5      	strb	r5, [r2, r7]
		    = USB_DEVICE_PCKSIZE_BYTE_COUNT(ept->size) | USB_DEVICE_PCKSIZE_SIZE(_usbd_ep_pcksize_size(ept->size));
    3bd2:	1904      	adds	r4, r0, r4
    3bd4:	00a2      	lsls	r2, r4, #2
    3bd6:	1889      	adds	r1, r1, r2
    3bd8:	3144      	adds	r1, #68	; 0x44
    3bda:	8809      	ldrh	r1, [r1, #0]
    3bdc:	048a      	lsls	r2, r1, #18
    3bde:	0c92      	lsrs	r2, r2, #18
	        : ((n > 256) ? 6 : ((n > 128) ? 5 : ((n > 64) ? 4 : ((n > 32) ? 3 : ((n > 16) ? 2 : ((n > 8) ? 1 : 0)))))));
    3be0:	2080      	movs	r0, #128	; 0x80
    3be2:	0080      	lsls	r0, r0, #2
    3be4:	4281      	cmp	r1, r0
    3be6:	d810      	bhi.n	3c0a <_usb_d_dev_ep_enable+0x25e>
    3be8:	3801      	subs	r0, #1
    3bea:	38ff      	subs	r0, #255	; 0xff
    3bec:	4281      	cmp	r1, r0
    3bee:	d81f      	bhi.n	3c30 <_usb_d_dev_ep_enable+0x284>
    3bf0:	2980      	cmp	r1, #128	; 0x80
    3bf2:	d81f      	bhi.n	3c34 <_usb_d_dev_ep_enable+0x288>
    3bf4:	2940      	cmp	r1, #64	; 0x40
    3bf6:	d81f      	bhi.n	3c38 <_usb_d_dev_ep_enable+0x28c>
    3bf8:	2920      	cmp	r1, #32
    3bfa:	d81f      	bhi.n	3c3c <_usb_d_dev_ep_enable+0x290>
    3bfc:	2910      	cmp	r1, #16
    3bfe:	d81f      	bhi.n	3c40 <_usb_d_dev_ep_enable+0x294>
    3c00:	38f8      	subs	r0, #248	; 0xf8
    3c02:	4288      	cmp	r0, r1
    3c04:	4189      	sbcs	r1, r1
    3c06:	4249      	negs	r1, r1
    3c08:	e000      	b.n	3c0c <_usb_d_dev_ep_enable+0x260>
    3c0a:	2107      	movs	r1, #7
		    = USB_DEVICE_PCKSIZE_BYTE_COUNT(ept->size) | USB_DEVICE_PCKSIZE_SIZE(_usbd_ep_pcksize_size(ept->size));
    3c0c:	0709      	lsls	r1, r1, #28
    3c0e:	430a      	orrs	r2, r1
    3c10:	6172      	str	r2, [r6, #20]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    3c12:	001a      	movs	r2, r3
    3c14:	3208      	adds	r2, #8
    3c16:	0152      	lsls	r2, r2, #5
    3c18:	4920      	ldr	r1, [pc, #128]	; (3c9c <_usb_d_dev_ep_enable+0x2f0>)
    3c1a:	468c      	mov	ip, r1
    3c1c:	4462      	add	r2, ip
    3c1e:	2180      	movs	r1, #128	; 0x80
    3c20:	7111      	strb	r1, [r2, #4]
	bank->STATUS_BK.reg     = 0;
    3c22:	015a      	lsls	r2, r3, #5
    3c24:	4b1f      	ldr	r3, [pc, #124]	; (3ca4 <_usb_d_dev_ep_enable+0x2f8>)
    3c26:	189b      	adds	r3, r3, r2
    3c28:	2200      	movs	r2, #0
    3c2a:	769a      	strb	r2, [r3, #26]
	return USB_OK;
    3c2c:	2000      	movs	r0, #0
    3c2e:	e01b      	b.n	3c68 <_usb_d_dev_ep_enable+0x2bc>
	        : ((n > 256) ? 6 : ((n > 128) ? 5 : ((n > 64) ? 4 : ((n > 32) ? 3 : ((n > 16) ? 2 : ((n > 8) ? 1 : 0)))))));
    3c30:	2106      	movs	r1, #6
    3c32:	e7eb      	b.n	3c0c <_usb_d_dev_ep_enable+0x260>
    3c34:	2105      	movs	r1, #5
    3c36:	e7e9      	b.n	3c0c <_usb_d_dev_ep_enable+0x260>
    3c38:	2104      	movs	r1, #4
    3c3a:	e7e7      	b.n	3c0c <_usb_d_dev_ep_enable+0x260>
    3c3c:	2103      	movs	r1, #3
    3c3e:	e7e5      	b.n	3c0c <_usb_d_dev_ep_enable+0x260>
    3c40:	2102      	movs	r1, #2
    3c42:	e7e3      	b.n	3c0c <_usb_d_dev_ep_enable+0x260>
    3c44:	2107      	movs	r1, #7
		                      | USB_DEVICE_PCKSIZE_SIZE(_usbd_ep_pcksize_size(ept->size));
    3c46:	0709      	lsls	r1, r1, #28
    3c48:	430a      	orrs	r2, r1
		bank[0].PCKSIZE.reg = USB_DEVICE_PCKSIZE_MULTI_PACKET_SIZE(ept->size)
    3c4a:	6072      	str	r2, [r6, #4]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    3c4c:	001a      	movs	r2, r3
    3c4e:	3208      	adds	r2, #8
    3c50:	0152      	lsls	r2, r2, #5
    3c52:	4912      	ldr	r1, [pc, #72]	; (3c9c <_usb_d_dev_ep_enable+0x2f0>)
    3c54:	468c      	mov	ip, r1
    3c56:	4462      	add	r2, ip
    3c58:	2140      	movs	r1, #64	; 0x40
    3c5a:	7151      	strb	r1, [r2, #5]
	bank->STATUS_BK.reg     = 0;
    3c5c:	015b      	lsls	r3, r3, #5
    3c5e:	4a11      	ldr	r2, [pc, #68]	; (3ca4 <_usb_d_dev_ep_enable+0x2f8>)
    3c60:	18d3      	adds	r3, r2, r3
    3c62:	2200      	movs	r2, #0
    3c64:	729a      	strb	r2, [r3, #10]
	return USB_OK;
    3c66:	2000      	movs	r0, #0
}
    3c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
	        : ((n > 256) ? 6 : ((n > 128) ? 5 : ((n > 64) ? 4 : ((n > 32) ? 3 : ((n > 16) ? 2 : ((n > 8) ? 1 : 0)))))));
    3c6a:	2106      	movs	r1, #6
    3c6c:	e7eb      	b.n	3c46 <_usb_d_dev_ep_enable+0x29a>
    3c6e:	2105      	movs	r1, #5
    3c70:	e7e9      	b.n	3c46 <_usb_d_dev_ep_enable+0x29a>
    3c72:	2104      	movs	r1, #4
    3c74:	e7e7      	b.n	3c46 <_usb_d_dev_ep_enable+0x29a>
    3c76:	2103      	movs	r1, #3
    3c78:	e7e5      	b.n	3c46 <_usb_d_dev_ep_enable+0x29a>
    3c7a:	2102      	movs	r1, #2
    3c7c:	e7e3      	b.n	3c46 <_usb_d_dev_ep_enable+0x29a>
		return -USB_ERR_PARAM;
    3c7e:	2012      	movs	r0, #18
    3c80:	4240      	negs	r0, r0
    3c82:	e7f1      	b.n	3c68 <_usb_d_dev_ep_enable+0x2bc>
    3c84:	2012      	movs	r0, #18
    3c86:	4240      	negs	r0, r0
    3c88:	e7ee      	b.n	3c68 <_usb_d_dev_ep_enable+0x2bc>
			return -USB_ERR_REDO;
    3c8a:	2014      	movs	r0, #20
    3c8c:	4240      	negs	r0, r0
    3c8e:	e7eb      	b.n	3c68 <_usb_d_dev_ep_enable+0x2bc>
			return -USB_ERR_REDO;
    3c90:	2014      	movs	r0, #20
    3c92:	4240      	negs	r0, r0
    3c94:	e7e8      	b.n	3c68 <_usb_d_dev_ep_enable+0x2bc>
			return -USB_ERR_REDO;
    3c96:	2014      	movs	r0, #20
    3c98:	4240      	negs	r0, r0
    3c9a:	e7e5      	b.n	3c68 <_usb_d_dev_ep_enable+0x2bc>
    3c9c:	41005000 	.word	0x41005000
    3ca0:	20000d08 	.word	0x20000d08
    3ca4:	20000c88 	.word	0x20000c88
    3ca8:	0fffc000 	.word	0x0fffc000
    3cac:	f0003fff 	.word	0xf0003fff
    3cb0:	41005109 	.word	0x41005109

00003cb4 <_usb_d_dev_ep_stall>:
{
    3cb4:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t               epn = USB_EP_GET_N(ep);
    3cb6:	220f      	movs	r2, #15
    3cb8:	4002      	ands	r2, r0
    3cba:	b240      	sxtb	r0, r0
	bool                  dir = USB_EP_GET_DIR(ep);
    3cbc:	0fc4      	lsrs	r4, r0, #31
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    3cbe:	2a00      	cmp	r2, #0
    3cc0:	d005      	beq.n	3cce <_usb_d_dev_ep_stall+0x1a>
    3cc2:	2800      	cmp	r0, #0
    3cc4:	db01      	blt.n	3cca <_usb_d_dev_ep_stall+0x16>
    3cc6:	0013      	movs	r3, r2
    3cc8:	e002      	b.n	3cd0 <_usb_d_dev_ep_stall+0x1c>
    3cca:	1d13      	adds	r3, r2, #4
    3ccc:	e000      	b.n	3cd0 <_usb_d_dev_ep_stall+0x1c>
    3cce:	0013      	movs	r3, r2
	return &dev_inst.ep[ep_index];
    3cd0:	001d      	movs	r5, r3
    3cd2:	0098      	lsls	r0, r3, #2
    3cd4:	18c0      	adds	r0, r0, r3
    3cd6:	0083      	lsls	r3, r0, #2
    3cd8:	3310      	adds	r3, #16
    3cda:	0018      	movs	r0, r3
    3cdc:	4b47      	ldr	r3, [pc, #284]	; (3dfc <_usb_d_dev_ep_stall+0x148>)
    3cde:	3320      	adds	r3, #32
    3ce0:	181b      	adds	r3, r3, r0
    3ce2:	3304      	adds	r3, #4
	if (epn > CONF_USB_D_MAX_EP_N) {
    3ce4:	2a04      	cmp	r2, #4
    3ce6:	d900      	bls.n	3cea <_usb_d_dev_ep_stall+0x36>
    3ce8:	e084      	b.n	3df4 <_usb_d_dev_ep_stall+0x140>
	if (USB_EP_STALL_SET == ctrl) {
    3cea:	2901      	cmp	r1, #1
    3cec:	d018      	beq.n	3d20 <_usb_d_dev_ep_stall+0x6c>
	} else if (USB_EP_STALL_CLR == ctrl) {
    3cee:	2900      	cmp	r1, #0
    3cf0:	d03d      	beq.n	3d6e <_usb_d_dev_ep_stall+0xba>
	uint8_t epn = USB_EP_GET_N(ept->ep);
    3cf2:	00aa      	lsls	r2, r5, #2
    3cf4:	1952      	adds	r2, r2, r5
    3cf6:	0091      	lsls	r1, r2, #2
    3cf8:	4b40      	ldr	r3, [pc, #256]	; (3dfc <_usb_d_dev_ep_stall+0x148>)
    3cfa:	3320      	adds	r3, #32
    3cfc:	185b      	adds	r3, r3, r1
    3cfe:	3326      	adds	r3, #38	; 0x26
    3d00:	781a      	ldrb	r2, [r3, #0]
    3d02:	230f      	movs	r3, #15
    3d04:	4013      	ands	r3, r2
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    3d06:	3308      	adds	r3, #8
    3d08:	015b      	lsls	r3, r3, #5
    3d0a:	4a3d      	ldr	r2, [pc, #244]	; (3e00 <_usb_d_dev_ep_stall+0x14c>)
    3d0c:	4694      	mov	ip, r2
    3d0e:	4463      	add	r3, ip
    3d10:	7998      	ldrb	r0, [r3, #6]
	return (hri_usbendpoint_read_EPSTATUS_reg(hw, epn) & (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    3d12:	2310      	movs	r3, #16
    3d14:	40a3      	lsls	r3, r4
    3d16:	4018      	ands	r0, r3
    3d18:	1e43      	subs	r3, r0, #1
    3d1a:	4198      	sbcs	r0, r3
    3d1c:	b2c0      	uxtb	r0, r0
}
    3d1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint8_t epn = USB_EP_GET_N(ept->ep);
    3d20:	4836      	ldr	r0, [pc, #216]	; (3dfc <_usb_d_dev_ep_stall+0x148>)
    3d22:	0003      	movs	r3, r0
    3d24:	3320      	adds	r3, #32
    3d26:	00aa      	lsls	r2, r5, #2
    3d28:	1956      	adds	r6, r2, r5
    3d2a:	00b1      	lsls	r1, r6, #2
    3d2c:	185b      	adds	r3, r3, r1
    3d2e:	3326      	adds	r3, #38	; 0x26
    3d30:	781b      	ldrb	r3, [r3, #0]
    3d32:	210f      	movs	r1, #15
    3d34:	400b      	ands	r3, r1
		hri_usbendpoint_set_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    3d36:	2610      	movs	r6, #16
    3d38:	40a6      	lsls	r6, r4
    3d3a:	b2f6      	uxtb	r6, r6
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    3d3c:	0019      	movs	r1, r3
    3d3e:	3108      	adds	r1, #8
    3d40:	0149      	lsls	r1, r1, #5
    3d42:	4f2f      	ldr	r7, [pc, #188]	; (3e00 <_usb_d_dev_ep_stall+0x14c>)
    3d44:	46bc      	mov	ip, r7
    3d46:	4461      	add	r1, ip
    3d48:	714e      	strb	r6, [r1, #5]
	_usbd_ep_int_en(epn, USB_DEVICE_EPINTFLAG_STALL0 << dir);
    3d4a:	2120      	movs	r1, #32
    3d4c:	40a1      	lsls	r1, r4
	hri_usbendpoint_set_EPINTEN_reg(USB, epn, flags);
    3d4e:	b2cc      	uxtb	r4, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    3d50:	0159      	lsls	r1, r3, #5
    3d52:	4b2c      	ldr	r3, [pc, #176]	; (3e04 <_usb_d_dev_ep_stall+0x150>)
    3d54:	469c      	mov	ip, r3
    3d56:	4461      	add	r1, ip
    3d58:	700c      	strb	r4, [r1, #0]
	ept->flags.bits.is_stalled = 1;
    3d5a:	1952      	adds	r2, r2, r5
    3d5c:	0093      	lsls	r3, r2, #2
    3d5e:	18c3      	adds	r3, r0, r3
    3d60:	3340      	adds	r3, #64	; 0x40
    3d62:	79da      	ldrb	r2, [r3, #7]
    3d64:	2108      	movs	r1, #8
    3d66:	430a      	orrs	r2, r1
    3d68:	71da      	strb	r2, [r3, #7]
		rc = _usb_d_dev_ep_stall_set(ept, dir);
    3d6a:	2000      	movs	r0, #0
    3d6c:	e7d7      	b.n	3d1e <_usb_d_dev_ep_stall+0x6a>
	uint8_t epn        = USB_EP_GET_N(ept->ep);
    3d6e:	7c9a      	ldrb	r2, [r3, #18]
    3d70:	310f      	adds	r1, #15
    3d72:	400a      	ands	r2, r1
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    3d74:	0011      	movs	r1, r2
    3d76:	3108      	adds	r1, #8
    3d78:	0149      	lsls	r1, r1, #5
    3d7a:	4821      	ldr	r0, [pc, #132]	; (3e00 <_usb_d_dev_ep_stall+0x14c>)
    3d7c:	4684      	mov	ip, r0
    3d7e:	4461      	add	r1, ip
    3d80:	7988      	ldrb	r0, [r1, #6]
	return (hri_usbendpoint_read_EPSTATUS_reg(hw, epn) & (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    3d82:	2110      	movs	r1, #16
    3d84:	40a1      	lsls	r1, r4
	if (!is_stalled) {
    3d86:	4208      	tst	r0, r1
    3d88:	d024      	beq.n	3dd4 <_usb_d_dev_ep_stall+0x120>
		hri_usbendpoint_clear_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    3d8a:	b2c9      	uxtb	r1, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    3d8c:	0010      	movs	r0, r2
    3d8e:	3008      	adds	r0, #8
    3d90:	0140      	lsls	r0, r0, #5
    3d92:	4460      	add	r0, ip
    3d94:	7101      	strb	r1, [r0, #4]
	_usbd_ep_int_dis(epn, USB_DEVICE_EPINTFLAG_STALL0 << dir);
    3d96:	2120      	movs	r1, #32
    3d98:	40a1      	lsls	r1, r4
	hri_usbendpoint_clear_EPINTEN_reg(USB, epn, flags);
    3d9a:	b2ce      	uxtb	r6, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    3d9c:	0155      	lsls	r5, r2, #5
    3d9e:	4f1a      	ldr	r7, [pc, #104]	; (3e08 <_usb_d_dev_ep_stall+0x154>)
    3da0:	46bc      	mov	ip, r7
    3da2:	4465      	add	r5, ip
    3da4:	702e      	strb	r6, [r5, #0]
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg;
    3da6:	79c0      	ldrb	r0, [r0, #7]
	if (_usbd_ep_is_stall_sent(epn, dir)) {
    3da8:	4208      	tst	r0, r1
    3daa:	d00a      	beq.n	3dc2 <_usb_d_dev_ep_stall+0x10e>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    3dac:	0011      	movs	r1, r2
    3dae:	3108      	adds	r1, #8
    3db0:	0149      	lsls	r1, r1, #5
    3db2:	4813      	ldr	r0, [pc, #76]	; (3e00 <_usb_d_dev_ep_stall+0x14c>)
    3db4:	4684      	mov	ip, r0
    3db6:	4461      	add	r1, ip
    3db8:	71ce      	strb	r6, [r1, #7]
		hri_usbendpoint_clear_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_DTGLOUT << bank_n));
    3dba:	2001      	movs	r0, #1
    3dbc:	40a0      	lsls	r0, r4
    3dbe:	b2c0      	uxtb	r0, r0
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    3dc0:	7108      	strb	r0, [r1, #4]
	if (_usb_d_dev_ep_is_ctrl(ept)) {
    3dc2:	7cd8      	ldrb	r0, [r3, #19]
    3dc4:	2107      	movs	r1, #7
    3dc6:	4001      	ands	r1, r0
    3dc8:	2901      	cmp	r1, #1
    3dca:	d005      	beq.n	3dd8 <_usb_d_dev_ep_stall+0x124>
		ept->flags.bits.is_stalled = 0;
    3dcc:	7cda      	ldrb	r2, [r3, #19]
    3dce:	2108      	movs	r1, #8
    3dd0:	438a      	bics	r2, r1
    3dd2:	74da      	strb	r2, [r3, #19]
		rc = _usb_d_dev_ep_stall_clr(ept, dir);
    3dd4:	2000      	movs	r0, #0
    3dd6:	e7a2      	b.n	3d1e <_usb_d_dev_ep_stall+0x6a>
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    3dd8:	3208      	adds	r2, #8
    3dda:	0152      	lsls	r2, r2, #5
    3ddc:	4908      	ldr	r1, [pc, #32]	; (3e00 <_usb_d_dev_ep_stall+0x14c>)
    3dde:	468c      	mov	ip, r1
    3de0:	4462      	add	r2, ip
    3de2:	7991      	ldrb	r1, [r2, #6]
		if ((hri_usbendpoint_read_EPSTATUS_reg(USB, epn) & USB_DEVICE_EPSTATUS_STALLRQ_Msk) == 0) {
    3de4:	2230      	movs	r2, #48	; 0x30
    3de6:	4211      	tst	r1, r2
    3de8:	d1f4      	bne.n	3dd4 <_usb_d_dev_ep_stall+0x120>
			ept->flags.bits.is_stalled = 0;
    3dea:	0002      	movs	r2, r0
    3dec:	2108      	movs	r1, #8
    3dee:	438a      	bics	r2, r1
    3df0:	74da      	strb	r2, [r3, #19]
    3df2:	e7ef      	b.n	3dd4 <_usb_d_dev_ep_stall+0x120>
		return -USB_ERR_PARAM;
    3df4:	2012      	movs	r0, #18
    3df6:	4240      	negs	r0, r0
    3df8:	e791      	b.n	3d1e <_usb_d_dev_ep_stall+0x6a>
    3dfa:	46c0      	nop			; (mov r8, r8)
    3dfc:	20000d08 	.word	0x20000d08
    3e00:	41005000 	.word	0x41005000
    3e04:	41005109 	.word	0x41005109
    3e08:	41005108 	.word	0x41005108

00003e0c <_usb_d_dev_ep_read_req>:

int32_t _usb_d_dev_ep_read_req(const uint8_t ep, uint8_t *req_buf)
{
    3e0c:	b570      	push	{r4, r5, r6, lr}
    3e0e:	000e      	movs	r6, r1
	uint8_t            epn   = USB_EP_GET_N(ep);
    3e10:	240f      	movs	r4, #15
    3e12:	4004      	ands	r4, r0
	UsbDeviceDescBank *bank  = prvt_inst.desc_table[epn].DeviceDescBank;
    3e14:	0162      	lsls	r2, r4, #5
    3e16:	4b18      	ldr	r3, [pc, #96]	; (3e78 <_usb_d_dev_ep_read_req+0x6c>)
    3e18:	189b      	adds	r3, r3, r2
	uint32_t           addr  = bank[0].ADDR.reg;
    3e1a:	6819      	ldr	r1, [r3, #0]
	uint16_t           bytes = bank[0].PCKSIZE.bit.BYTE_COUNT;
    3e1c:	685d      	ldr	r5, [r3, #4]
    3e1e:	04ad      	lsls	r5, r5, #18
    3e20:	0cad      	lsrs	r5, r5, #18

	if (epn > CONF_USB_D_MAX_EP_N || !req_buf) {
    3e22:	2c04      	cmp	r4, #4
    3e24:	d81f      	bhi.n	3e66 <_usb_d_dev_ep_read_req+0x5a>
    3e26:	2e00      	cmp	r6, #0
    3e28:	d020      	beq.n	3e6c <_usb_d_dev_ep_read_req+0x60>
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    3e2a:	0023      	movs	r3, r4
    3e2c:	3308      	adds	r3, #8
    3e2e:	015b      	lsls	r3, r3, #5
    3e30:	4a12      	ldr	r2, [pc, #72]	; (3e7c <_usb_d_dev_ep_read_req+0x70>)
    3e32:	5c9b      	ldrb	r3, [r3, r2]
		return -USB_ERR_PARAM;
	}
	if (!_usbd_ep_is_ctrl(epn)) {
    3e34:	2b11      	cmp	r3, #17
    3e36:	d11c      	bne.n	3e72 <_usb_d_dev_ep_read_req+0x66>
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg;
    3e38:	0023      	movs	r3, r4
    3e3a:	3308      	adds	r3, #8
    3e3c:	015b      	lsls	r3, r3, #5
    3e3e:	4694      	mov	ip, r2
    3e40:	4463      	add	r3, ip
    3e42:	79db      	ldrb	r3, [r3, #7]
		return -USB_ERR_FUNC;
	}
	if (!_usbd_ep_is_setup(epn)) {
    3e44:	06db      	lsls	r3, r3, #27
    3e46:	d401      	bmi.n	3e4c <_usb_d_dev_ep_read_req+0x40>
		return ERR_NONE;
    3e48:	2000      	movs	r0, #0
	}
	memcpy(req_buf, (void *)addr, 8);
	_usbd_ep_ack_setup(epn);

	return bytes;
}
    3e4a:	bd70      	pop	{r4, r5, r6, pc}
	memcpy(req_buf, (void *)addr, 8);
    3e4c:	2208      	movs	r2, #8
    3e4e:	0030      	movs	r0, r6
    3e50:	4b0b      	ldr	r3, [pc, #44]	; (3e80 <_usb_d_dev_ep_read_req+0x74>)
    3e52:	4798      	blx	r3
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    3e54:	3408      	adds	r4, #8
    3e56:	0164      	lsls	r4, r4, #5
    3e58:	4b08      	ldr	r3, [pc, #32]	; (3e7c <_usb_d_dev_ep_read_req+0x70>)
    3e5a:	469c      	mov	ip, r3
    3e5c:	4464      	add	r4, ip
    3e5e:	2310      	movs	r3, #16
    3e60:	71e3      	strb	r3, [r4, #7]
	return bytes;
    3e62:	0028      	movs	r0, r5
    3e64:	e7f1      	b.n	3e4a <_usb_d_dev_ep_read_req+0x3e>
		return -USB_ERR_PARAM;
    3e66:	2012      	movs	r0, #18
    3e68:	4240      	negs	r0, r0
    3e6a:	e7ee      	b.n	3e4a <_usb_d_dev_ep_read_req+0x3e>
    3e6c:	2012      	movs	r0, #18
    3e6e:	4240      	negs	r0, r0
    3e70:	e7eb      	b.n	3e4a <_usb_d_dev_ep_read_req+0x3e>
		return -USB_ERR_FUNC;
    3e72:	2013      	movs	r0, #19
    3e74:	4240      	negs	r0, r0
    3e76:	e7e8      	b.n	3e4a <_usb_d_dev_ep_read_req+0x3e>
    3e78:	20000c88 	.word	0x20000c88
    3e7c:	41005000 	.word	0x41005000
    3e80:	0000926d 	.word	0x0000926d

00003e84 <_usb_d_dev_ep_trans>:

int32_t _usb_d_dev_ep_trans(const struct usb_d_transfer *trans)
{
    3e84:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e86:	46de      	mov	lr, fp
    3e88:	4657      	mov	r7, sl
    3e8a:	464e      	mov	r6, r9
    3e8c:	4645      	mov	r5, r8
    3e8e:	b5e0      	push	{r5, r6, r7, lr}
    3e90:	b085      	sub	sp, #20
    3e92:	4680      	mov	r8, r0
	uint8_t               epn = USB_EP_GET_N(trans->ep);
    3e94:	7a04      	ldrb	r4, [r0, #8]
    3e96:	220f      	movs	r2, #15
    3e98:	4022      	ands	r2, r4
    3e9a:	b264      	sxtb	r4, r4
	bool                  dir = USB_EP_GET_DIR(trans->ep);
    3e9c:	0fe3      	lsrs	r3, r4, #31
    3e9e:	4699      	mov	r9, r3
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    3ea0:	2a00      	cmp	r2, #0
    3ea2:	d005      	beq.n	3eb0 <_usb_d_dev_ep_trans+0x2c>
    3ea4:	2c00      	cmp	r4, #0
    3ea6:	db01      	blt.n	3eac <_usb_d_dev_ep_trans+0x28>
    3ea8:	0010      	movs	r0, r2
    3eaa:	e002      	b.n	3eb2 <_usb_d_dev_ep_trans+0x2e>
    3eac:	1d10      	adds	r0, r2, #4
    3eae:	e000      	b.n	3eb2 <_usb_d_dev_ep_trans+0x2e>
    3eb0:	0010      	movs	r0, r2
	return &dev_inst.ep[ep_index];
    3eb2:	0005      	movs	r5, r0
    3eb4:	4b62      	ldr	r3, [pc, #392]	; (4040 <_usb_d_dev_ep_trans+0x1bc>)
    3eb6:	001f      	movs	r7, r3
    3eb8:	3720      	adds	r7, #32
    3eba:	0081      	lsls	r1, r0, #2
    3ebc:	180e      	adds	r6, r1, r0
    3ebe:	46b4      	mov	ip, r6
    3ec0:	00b6      	lsls	r6, r6, #2
    3ec2:	3610      	adds	r6, #16
    3ec4:	19bf      	adds	r7, r7, r6
    3ec6:	3704      	adds	r7, #4
	struct _usb_d_dev_ep *ept = _usb_d_dev_ept(epn, dir);

	uint16_t size_mask      = (ept->size == 1023) ? 1023 : (ept->size - 1);
    3ec8:	4661      	mov	r1, ip
    3eca:	0088      	lsls	r0, r1, #2
    3ecc:	181b      	adds	r3, r3, r0
    3ece:	3344      	adds	r3, #68	; 0x44
    3ed0:	881b      	ldrh	r3, [r3, #0]
    3ed2:	495c      	ldr	r1, [pc, #368]	; (4044 <_usb_d_dev_ep_trans+0x1c0>)
    3ed4:	428b      	cmp	r3, r1
    3ed6:	d042      	beq.n	3f5e <_usb_d_dev_ep_trans+0xda>
    3ed8:	1e5e      	subs	r6, r3, #1
    3eda:	b2b6      	uxth	r6, r6
	bool     size_n_aligned = (trans->size & size_mask);
    3edc:	4641      	mov	r1, r8
    3ede:	6849      	ldr	r1, [r1, #4]
    3ee0:	400e      	ands	r6, r1

	bool use_cache = false;

	volatile hal_atomic_t flags;

	if (epn > CONF_USB_D_MAX_EP_N) {
    3ee2:	2a04      	cmp	r2, #4
    3ee4:	d900      	bls.n	3ee8 <_usb_d_dev_ep_trans+0x64>
    3ee6:	e0a1      	b.n	402c <_usb_d_dev_ep_trans+0x1a8>
	 * 1. Buffer not in RAM (cache all).
	 * 2. IN/OUT with unaligned buffer (cache all).
	 * 3. OUT with unaligned packet size (cache last packet).
	 * 4. OUT size < 8 (sub-case for 3).
	 */
	if (!_usb_is_addr4dma(trans->buf, trans->size) || (!_usb_is_aligned(trans->buf))
    3ee8:	4642      	mov	r2, r8
    3eea:	6812      	ldr	r2, [r2, #0]
    3eec:	4856      	ldr	r0, [pc, #344]	; (4048 <_usb_d_dev_ep_trans+0x1c4>)
    3eee:	4282      	cmp	r2, r0
    3ef0:	d90c      	bls.n	3f0c <_usb_d_dev_ep_trans+0x88>
    3ef2:	1888      	adds	r0, r1, r2
    3ef4:	9001      	str	r0, [sp, #4]
    3ef6:	4855      	ldr	r0, [pc, #340]	; (404c <_usb_d_dev_ep_trans+0x1c8>)
    3ef8:	4684      	mov	ip, r0
    3efa:	9801      	ldr	r0, [sp, #4]
    3efc:	4560      	cmp	r0, ip
    3efe:	d805      	bhi.n	3f0c <_usb_d_dev_ep_trans+0x88>
    3f00:	0792      	lsls	r2, r2, #30
    3f02:	d103      	bne.n	3f0c <_usb_d_dev_ep_trans+0x88>
	    || (!dir && (trans->size < ept->size))) {
    3f04:	2c00      	cmp	r4, #0
    3f06:	db2c      	blt.n	3f62 <_usb_d_dev_ep_trans+0xde>
    3f08:	4299      	cmp	r1, r3
    3f0a:	d22d      	bcs.n	3f68 <_usb_d_dev_ep_trans+0xe4>
		if (!ept->cache) {
    3f0c:	00ab      	lsls	r3, r5, #2
    3f0e:	195b      	adds	r3, r3, r5
    3f10:	009a      	lsls	r2, r3, #2
    3f12:	4b4b      	ldr	r3, [pc, #300]	; (4040 <_usb_d_dev_ep_trans+0x1bc>)
    3f14:	189b      	adds	r3, r3, r2
    3f16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3f18:	2b00      	cmp	r3, #0
    3f1a:	d100      	bne.n	3f1e <_usb_d_dev_ep_trans+0x9a>
    3f1c:	e089      	b.n	4032 <_usb_d_dev_ep_trans+0x1ae>
			return -USB_ERR_FUNC;
		}
		/* Use cache all the time. */
		use_cache = true;
    3f1e:	2301      	movs	r3, #1
    3f20:	9301      	str	r3, [sp, #4]
	}
	if (!dir && size_n_aligned) {
    3f22:	2c00      	cmp	r4, #0
    3f24:	db0a      	blt.n	3f3c <_usb_d_dev_ep_trans+0xb8>
    3f26:	2e00      	cmp	r6, #0
    3f28:	d008      	beq.n	3f3c <_usb_d_dev_ep_trans+0xb8>
		if (!ept->cache) {
    3f2a:	00ab      	lsls	r3, r5, #2
    3f2c:	195b      	adds	r3, r3, r5
    3f2e:	009a      	lsls	r2, r3, #2
    3f30:	4b43      	ldr	r3, [pc, #268]	; (4040 <_usb_d_dev_ep_trans+0x1bc>)
    3f32:	189b      	adds	r3, r3, r2
    3f34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3f36:	2b00      	cmp	r3, #0
    3f38:	d100      	bne.n	3f3c <_usb_d_dev_ep_trans+0xb8>
    3f3a:	e07d      	b.n	4038 <_usb_d_dev_ep_trans+0x1b4>
		}
		/* Set 'use_cache' on last packet. */
	}

	/* Check halt */
	if (ept->flags.bits.is_stalled) {
    3f3c:	00aa      	lsls	r2, r5, #2
    3f3e:	1952      	adds	r2, r2, r5
    3f40:	0091      	lsls	r1, r2, #2
    3f42:	4b3f      	ldr	r3, [pc, #252]	; (4040 <_usb_d_dev_ep_trans+0x1bc>)
    3f44:	185b      	adds	r3, r3, r1
    3f46:	3340      	adds	r3, #64	; 0x40
    3f48:	79db      	ldrb	r3, [r3, #7]
    3f4a:	071b      	lsls	r3, r3, #28
    3f4c:	d50f      	bpl.n	3f6e <_usb_d_dev_ep_trans+0xea>
		return USB_HALTED;
    3f4e:	2002      	movs	r0, #2
	} else {
		_usb_d_dev_out_next(ept, false);
	}

	return ERR_NONE;
}
    3f50:	b005      	add	sp, #20
    3f52:	bc3c      	pop	{r2, r3, r4, r5}
    3f54:	4690      	mov	r8, r2
    3f56:	4699      	mov	r9, r3
    3f58:	46a2      	mov	sl, r4
    3f5a:	46ab      	mov	fp, r5
    3f5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint16_t size_mask      = (ept->size == 1023) ? 1023 : (ept->size - 1);
    3f5e:	001e      	movs	r6, r3
    3f60:	e7bc      	b.n	3edc <_usb_d_dev_ep_trans+0x58>
	bool use_cache = false;
    3f62:	2300      	movs	r3, #0
    3f64:	9301      	str	r3, [sp, #4]
    3f66:	e7dc      	b.n	3f22 <_usb_d_dev_ep_trans+0x9e>
    3f68:	2300      	movs	r3, #0
    3f6a:	9301      	str	r3, [sp, #4]
    3f6c:	e7d9      	b.n	3f22 <_usb_d_dev_ep_trans+0x9e>
	atomic_enter_critical(&flags);
    3f6e:	a803      	add	r0, sp, #12
    3f70:	4b37      	ldr	r3, [pc, #220]	; (4050 <_usb_d_dev_ep_trans+0x1cc>)
    3f72:	4798      	blx	r3
	if (_usb_d_dev_ep_is_busy(ept)) {
    3f74:	00aa      	lsls	r2, r5, #2
    3f76:	1952      	adds	r2, r2, r5
    3f78:	0091      	lsls	r1, r2, #2
    3f7a:	4b31      	ldr	r3, [pc, #196]	; (4040 <_usb_d_dev_ep_trans+0x1bc>)
    3f7c:	185b      	adds	r3, r3, r1
    3f7e:	3340      	adds	r3, #64	; 0x40
    3f80:	79db      	ldrb	r3, [r3, #7]
    3f82:	065b      	lsls	r3, r3, #25
    3f84:	d430      	bmi.n	3fe8 <_usb_d_dev_ep_trans+0x164>
	ept->flags.bits.is_busy = 1;
    3f86:	00ab      	lsls	r3, r5, #2
    3f88:	195b      	adds	r3, r3, r5
    3f8a:	009a      	lsls	r2, r3, #2
    3f8c:	4b2c      	ldr	r3, [pc, #176]	; (4040 <_usb_d_dev_ep_trans+0x1bc>)
    3f8e:	469b      	mov	fp, r3
    3f90:	4493      	add	fp, r2
    3f92:	2340      	movs	r3, #64	; 0x40
    3f94:	445b      	add	r3, fp
    3f96:	469a      	mov	sl, r3
    3f98:	79db      	ldrb	r3, [r3, #7]
    3f9a:	2240      	movs	r2, #64	; 0x40
    3f9c:	4313      	orrs	r3, r2
    3f9e:	4652      	mov	r2, sl
    3fa0:	71d3      	strb	r3, [r2, #7]
	atomic_leave_critical(&flags);
    3fa2:	a803      	add	r0, sp, #12
    3fa4:	4b2b      	ldr	r3, [pc, #172]	; (4054 <_usb_d_dev_ep_trans+0x1d0>)
    3fa6:	4798      	blx	r3
	ept->trans_buf   = trans->buf;
    3fa8:	465b      	mov	r3, fp
    3faa:	4642      	mov	r2, r8
    3fac:	6812      	ldr	r2, [r2, #0]
    3fae:	635a      	str	r2, [r3, #52]	; 0x34
	ept->trans_size  = trans->size;
    3fb0:	4642      	mov	r2, r8
    3fb2:	6852      	ldr	r2, [r2, #4]
    3fb4:	639a      	str	r2, [r3, #56]	; 0x38
	ept->trans_count = 0;
    3fb6:	2300      	movs	r3, #0
    3fb8:	465a      	mov	r2, fp
    3fba:	63d3      	str	r3, [r2, #60]	; 0x3c
	ept->flags.bits.dir       = dir;
    3fbc:	464b      	mov	r3, r9
    3fbe:	01db      	lsls	r3, r3, #7
    3fc0:	4652      	mov	r2, sl
    3fc2:	79d2      	ldrb	r2, [r2, #7]
    3fc4:	217f      	movs	r1, #127	; 0x7f
    3fc6:	4011      	ands	r1, r2
	ept->flags.bits.use_cache = use_cache;
    3fc8:	9a01      	ldr	r2, [sp, #4]
    3fca:	0152      	lsls	r2, r2, #5
    3fcc:	430b      	orrs	r3, r1
    3fce:	2120      	movs	r1, #32
    3fd0:	438b      	bics	r3, r1
    3fd2:	431a      	orrs	r2, r3
    3fd4:	4653      	mov	r3, sl
    3fd6:	71da      	strb	r2, [r3, #7]
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    3fd8:	4643      	mov	r3, r8
    3fda:	7a5b      	ldrb	r3, [r3, #9]
    3fdc:	2b00      	cmp	r3, #0
    3fde:	d008      	beq.n	3ff2 <_usb_d_dev_ep_trans+0x16e>
    3fe0:	2e00      	cmp	r6, #0
    3fe2:	d01b      	beq.n	401c <_usb_d_dev_ep_trans+0x198>
    3fe4:	2200      	movs	r2, #0
    3fe6:	e005      	b.n	3ff4 <_usb_d_dev_ep_trans+0x170>
		atomic_leave_critical(&flags);
    3fe8:	a803      	add	r0, sp, #12
    3fea:	4b1a      	ldr	r3, [pc, #104]	; (4054 <_usb_d_dev_ep_trans+0x1d0>)
    3fec:	4798      	blx	r3
		return USB_BUSY;
    3fee:	2001      	movs	r0, #1
    3ff0:	e7ae      	b.n	3f50 <_usb_d_dev_ep_trans+0xcc>
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    3ff2:	2200      	movs	r2, #0
    3ff4:	00ab      	lsls	r3, r5, #2
    3ff6:	195d      	adds	r5, r3, r5
    3ff8:	00a9      	lsls	r1, r5, #2
    3ffa:	4b11      	ldr	r3, [pc, #68]	; (4040 <_usb_d_dev_ep_trans+0x1bc>)
    3ffc:	185b      	adds	r3, r3, r1
    3ffe:	3340      	adds	r3, #64	; 0x40
    4000:	0111      	lsls	r1, r2, #4
    4002:	79da      	ldrb	r2, [r3, #7]
    4004:	2010      	movs	r0, #16
    4006:	4382      	bics	r2, r0
    4008:	430a      	orrs	r2, r1
    400a:	71da      	strb	r2, [r3, #7]
	if (dir) {
    400c:	2c00      	cmp	r4, #0
    400e:	db07      	blt.n	4020 <_usb_d_dev_ep_trans+0x19c>
		_usb_d_dev_out_next(ept, false);
    4010:	2100      	movs	r1, #0
    4012:	0038      	movs	r0, r7
    4014:	4b10      	ldr	r3, [pc, #64]	; (4058 <_usb_d_dev_ep_trans+0x1d4>)
    4016:	4798      	blx	r3
	return ERR_NONE;
    4018:	2000      	movs	r0, #0
    401a:	e799      	b.n	3f50 <_usb_d_dev_ep_trans+0xcc>
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    401c:	2201      	movs	r2, #1
    401e:	e7e9      	b.n	3ff4 <_usb_d_dev_ep_trans+0x170>
		_usb_d_dev_in_next(ept, false);
    4020:	2100      	movs	r1, #0
    4022:	0038      	movs	r0, r7
    4024:	4b0d      	ldr	r3, [pc, #52]	; (405c <_usb_d_dev_ep_trans+0x1d8>)
    4026:	4798      	blx	r3
	return ERR_NONE;
    4028:	2000      	movs	r0, #0
    402a:	e791      	b.n	3f50 <_usb_d_dev_ep_trans+0xcc>
		return -USB_ERR_PARAM;
    402c:	2012      	movs	r0, #18
    402e:	4240      	negs	r0, r0
    4030:	e78e      	b.n	3f50 <_usb_d_dev_ep_trans+0xcc>
			return -USB_ERR_FUNC;
    4032:	2013      	movs	r0, #19
    4034:	4240      	negs	r0, r0
    4036:	e78b      	b.n	3f50 <_usb_d_dev_ep_trans+0xcc>
			return -USB_ERR_PARAM;
    4038:	2012      	movs	r0, #18
    403a:	4240      	negs	r0, r0
    403c:	e788      	b.n	3f50 <_usb_d_dev_ep_trans+0xcc>
    403e:	46c0      	nop			; (mov r8, r8)
    4040:	20000d08 	.word	0x20000d08
    4044:	000003ff 	.word	0x000003ff
    4048:	1fffffff 	.word	0x1fffffff
    404c:	20007fff 	.word	0x20007fff
    4050:	00001409 	.word	0x00001409
    4054:	00001417 	.word	0x00001417
    4058:	00003225 	.word	0x00003225
    405c:	00003095 	.word	0x00003095

00004060 <_usb_d_dev_register_callback>:
	return USB_OK;
}

void _usb_d_dev_register_callback(const enum usb_d_cb_type type, const FUNC_PTR func)
{
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    4060:	2900      	cmp	r1, #0
    4062:	d006      	beq.n	4072 <_usb_d_dev_register_callback+0x12>
	if (type == USB_D_CB_EVENT) {
    4064:	2801      	cmp	r0, #1
    4066:	d006      	beq.n	4076 <_usb_d_dev_register_callback+0x16>
		dev_inst.callbacks.event = (_usb_d_dev_event_cb_t)f;
	} else if (type == USB_D_CB_SOF) {
    4068:	2800      	cmp	r0, #0
    406a:	d101      	bne.n	4070 <_usb_d_dev_register_callback+0x10>
		dev_inst.callbacks.sof = (_usb_d_dev_sof_cb_t)f;
    406c:	4b03      	ldr	r3, [pc, #12]	; (407c <_usb_d_dev_register_callback+0x1c>)
    406e:	6219      	str	r1, [r3, #32]
	}
}
    4070:	4770      	bx	lr
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    4072:	4903      	ldr	r1, [pc, #12]	; (4080 <_usb_d_dev_register_callback+0x20>)
    4074:	e7f6      	b.n	4064 <_usb_d_dev_register_callback+0x4>
		dev_inst.callbacks.event = (_usb_d_dev_event_cb_t)f;
    4076:	4b01      	ldr	r3, [pc, #4]	; (407c <_usb_d_dev_register_callback+0x1c>)
    4078:	6259      	str	r1, [r3, #36]	; 0x24
    407a:	e7f9      	b.n	4070 <_usb_d_dev_register_callback+0x10>
    407c:	20000d08 	.word	0x20000d08
    4080:	00002d71 	.word	0x00002d71

00004084 <_usb_d_dev_register_ep_callback>:

void _usb_d_dev_register_ep_callback(const enum usb_d_dev_ep_cb_type type, const FUNC_PTR func)
{
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    4084:	2900      	cmp	r1, #0
    4086:	d008      	beq.n	409a <_usb_d_dev_register_ep_callback+0x16>
	if (type == USB_D_DEV_EP_CB_SETUP) {
    4088:	2800      	cmp	r0, #0
    408a:	d008      	beq.n	409e <_usb_d_dev_register_ep_callback+0x1a>
		dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)f;
	} else if (type == USB_D_DEV_EP_CB_MORE) {
    408c:	2801      	cmp	r0, #1
    408e:	d009      	beq.n	40a4 <_usb_d_dev_register_ep_callback+0x20>
		dev_inst.ep_callbacks.more = (_usb_d_dev_ep_cb_more_t)f;
	} else if (type == USB_D_DEV_EP_CB_DONE) {
    4090:	2802      	cmp	r0, #2
    4092:	d106      	bne.n	40a2 <_usb_d_dev_register_ep_callback+0x1e>
		dev_inst.ep_callbacks.done = (_usb_d_dev_ep_cb_done_t)f;
    4094:	4b05      	ldr	r3, [pc, #20]	; (40ac <_usb_d_dev_register_ep_callback+0x28>)
    4096:	6319      	str	r1, [r3, #48]	; 0x30
	}
}
    4098:	e003      	b.n	40a2 <_usb_d_dev_register_ep_callback+0x1e>
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    409a:	4905      	ldr	r1, [pc, #20]	; (40b0 <_usb_d_dev_register_ep_callback+0x2c>)
    409c:	e7f4      	b.n	4088 <_usb_d_dev_register_ep_callback+0x4>
		dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)f;
    409e:	4b03      	ldr	r3, [pc, #12]	; (40ac <_usb_d_dev_register_ep_callback+0x28>)
    40a0:	6299      	str	r1, [r3, #40]	; 0x28
}
    40a2:	4770      	bx	lr
		dev_inst.ep_callbacks.more = (_usb_d_dev_ep_cb_more_t)f;
    40a4:	4b01      	ldr	r3, [pc, #4]	; (40ac <_usb_d_dev_register_ep_callback+0x28>)
    40a6:	62d9      	str	r1, [r3, #44]	; 0x2c
    40a8:	e7fb      	b.n	40a2 <_usb_d_dev_register_ep_callback+0x1e>
    40aa:	46c0      	nop			; (mov r8, r8)
    40ac:	20000d08 	.word	0x20000d08
    40b0:	00002d71 	.word	0x00002d71

000040b4 <USB_Handler>:

/**
 * \brief USB interrupt handler
 */
void USB_Handler(void)
{
    40b4:	b510      	push	{r4, lr}

	_usb_d_dev_handler();
    40b6:	4b01      	ldr	r3, [pc, #4]	; (40bc <USB_Handler+0x8>)
    40b8:	4798      	blx	r3
}
    40ba:	bd10      	pop	{r4, pc}
    40bc:	00003429 	.word	0x00003429

000040c0 <cdc_device_acm_init>:

/**
 * \brief CDC ACM Init
 */
void cdc_device_acm_init(void)
{
    40c0:	b510      	push	{r4, lr}
	/* usb stack init */
	usbdc_init(ctrl_buffer);
    40c2:	4806      	ldr	r0, [pc, #24]	; (40dc <cdc_device_acm_init+0x1c>)
    40c4:	3040      	adds	r0, #64	; 0x40
    40c6:	4b06      	ldr	r3, [pc, #24]	; (40e0 <cdc_device_acm_init+0x20>)
    40c8:	4798      	blx	r3

	/* usbdc_register_funcion inside */
	cdcdf_acm_init();
    40ca:	4b06      	ldr	r3, [pc, #24]	; (40e4 <cdc_device_acm_init+0x24>)
    40cc:	4798      	blx	r3

	usbdc_start(single_desc);
    40ce:	4806      	ldr	r0, [pc, #24]	; (40e8 <cdc_device_acm_init+0x28>)
    40d0:	4b06      	ldr	r3, [pc, #24]	; (40ec <cdc_device_acm_init+0x2c>)
    40d2:	4798      	blx	r3
	usbdc_attach();
    40d4:	4b06      	ldr	r3, [pc, #24]	; (40f0 <cdc_device_acm_init+0x30>)
    40d6:	4798      	blx	r3
}
    40d8:	bd10      	pop	{r4, pc}
    40da:	46c0      	nop			; (mov r8, r8)
    40dc:	20000ff0 	.word	0x20000ff0
    40e0:	00004b49 	.word	0x00004b49
    40e4:	000043c5 	.word	0x000043c5
    40e8:	20000004 	.word	0x20000004
    40ec:	00004bc1 	.word	0x00004bc1
    40f0:	00004bf9 	.word	0x00004bf9

000040f4 <usb_init>:
	while (1) {
	}
}

void usb_init(void)
{
    40f4:	b510      	push	{r4, lr}

	cdc_device_acm_init();
    40f6:	4b01      	ldr	r3, [pc, #4]	; (40fc <usb_init+0x8>)
    40f8:	4798      	blx	r3
}
    40fa:	bd10      	pop	{r4, pc}
    40fc:	000040c1 	.word	0x000040c1

00004100 <cdcdf_acm_get_req>:
 * \param[in] ep Endpoint address.
 * \param[in] req Pointer to the request.
 * \return Operation status.
 */
static int32_t cdcdf_acm_get_req(uint8_t ep, struct usb_req *req, enum usb_ctrl_stage stage)
{
    4100:	b510      	push	{r4, lr}
	uint16_t len = req->wLength;
    4102:	798b      	ldrb	r3, [r1, #6]
    4104:	79cc      	ldrb	r4, [r1, #7]
    4106:	0224      	lsls	r4, r4, #8
    4108:	431c      	orrs	r4, r3

	if (USB_DATA_STAGE == stage) {
    410a:	2a01      	cmp	r2, #1
    410c:	d00a      	beq.n	4124 <cdcdf_acm_get_req+0x24>
		return ERR_NONE;
	}

	switch (req->bRequest) {
    410e:	784b      	ldrb	r3, [r1, #1]
    4110:	2b21      	cmp	r3, #33	; 0x21
    4112:	d109      	bne.n	4128 <cdcdf_acm_get_req+0x28>
	case USB_REQ_CDC_GET_LINE_CODING:
		if (sizeof(struct usb_cdc_line_coding) != len) {
    4114:	2c07      	cmp	r4, #7
    4116:	d10a      	bne.n	412e <cdcdf_acm_get_req+0x2e>
			return ERR_INVALID_DATA;
		}
		return usbdc_xfer(ep, (uint8_t *)&usbd_cdc_line_coding, len, false);
    4118:	2300      	movs	r3, #0
    411a:	0022      	movs	r2, r4
    411c:	4905      	ldr	r1, [pc, #20]	; (4134 <cdcdf_acm_get_req+0x34>)
    411e:	4c06      	ldr	r4, [pc, #24]	; (4138 <cdcdf_acm_get_req+0x38>)
    4120:	47a0      	blx	r4
	default:
		return ERR_INVALID_ARG;
	}
}
    4122:	bd10      	pop	{r4, pc}
		return ERR_NONE;
    4124:	2000      	movs	r0, #0
    4126:	e7fc      	b.n	4122 <cdcdf_acm_get_req+0x22>
		return ERR_INVALID_ARG;
    4128:	200d      	movs	r0, #13
    412a:	4240      	negs	r0, r0
    412c:	e7f9      	b.n	4122 <cdcdf_acm_get_req+0x22>
			return ERR_INVALID_DATA;
    412e:	2001      	movs	r0, #1
    4130:	4240      	negs	r0, r0
    4132:	e7f6      	b.n	4122 <cdcdf_acm_get_req+0x22>
    4134:	20001070 	.word	0x20001070
    4138:	00004679 	.word	0x00004679

0000413c <cdcdf_acm_set_req>:
{
    413c:	b5f0      	push	{r4, r5, r6, r7, lr}
    413e:	b083      	sub	sp, #12
    4140:	0005      	movs	r5, r0
    4142:	000f      	movs	r7, r1
    4144:	0014      	movs	r4, r2
	uint16_t                   len      = req->wLength;
    4146:	798e      	ldrb	r6, [r1, #6]
    4148:	79cb      	ldrb	r3, [r1, #7]
    414a:	021b      	lsls	r3, r3, #8
    414c:	431e      	orrs	r6, r3
	uint8_t *                  ctrl_buf = usbdc_get_ctrl_buffer();
    414e:	4b23      	ldr	r3, [pc, #140]	; (41dc <cdcdf_acm_set_req+0xa0>)
    4150:	4798      	blx	r3
	switch (req->bRequest) {
    4152:	787b      	ldrb	r3, [r7, #1]
    4154:	2b20      	cmp	r3, #32
    4156:	d005      	beq.n	4164 <cdcdf_acm_set_req+0x28>
    4158:	2b22      	cmp	r3, #34	; 0x22
    415a:	d026      	beq.n	41aa <cdcdf_acm_set_req+0x6e>
		return ERR_INVALID_ARG;
    415c:	200d      	movs	r0, #13
    415e:	4240      	negs	r0, r0
}
    4160:	b003      	add	sp, #12
    4162:	bdf0      	pop	{r4, r5, r6, r7, pc}
		if (sizeof(struct usb_cdc_line_coding) != len) {
    4164:	2e07      	cmp	r6, #7
    4166:	d131      	bne.n	41cc <cdcdf_acm_set_req+0x90>
		if (USB_SETUP_STAGE == stage) {
    4168:	2c00      	cmp	r4, #0
    416a:	d017      	beq.n	419c <cdcdf_acm_set_req+0x60>
			memcpy(&line_coding_tmp, ctrl_buf, sizeof(struct usb_cdc_line_coding));
    416c:	2207      	movs	r2, #7
    416e:	0001      	movs	r1, r0
    4170:	4668      	mov	r0, sp
    4172:	4b1b      	ldr	r3, [pc, #108]	; (41e0 <cdcdf_acm_set_req+0xa4>)
    4174:	4798      	blx	r3
			if ((NULL == cdcdf_acm_set_line_coding) || (true == cdcdf_acm_set_line_coding(&line_coding_tmp))) {
    4176:	4b1b      	ldr	r3, [pc, #108]	; (41e4 <cdcdf_acm_set_req+0xa8>)
    4178:	689b      	ldr	r3, [r3, #8]
    417a:	2b00      	cmp	r3, #0
    417c:	d003      	beq.n	4186 <cdcdf_acm_set_req+0x4a>
    417e:	4668      	mov	r0, sp
    4180:	4798      	blx	r3
    4182:	2800      	cmp	r0, #0
    4184:	d025      	beq.n	41d2 <cdcdf_acm_set_req+0x96>
				usbd_cdc_line_coding = line_coding_tmp;
    4186:	4b17      	ldr	r3, [pc, #92]	; (41e4 <cdcdf_acm_set_req+0xa8>)
    4188:	9a00      	ldr	r2, [sp, #0]
    418a:	601a      	str	r2, [r3, #0]
    418c:	466a      	mov	r2, sp
    418e:	8892      	ldrh	r2, [r2, #4]
    4190:	809a      	strh	r2, [r3, #4]
    4192:	466a      	mov	r2, sp
    4194:	7992      	ldrb	r2, [r2, #6]
    4196:	719a      	strb	r2, [r3, #6]
			return ERR_NONE;
    4198:	2000      	movs	r0, #0
    419a:	e7e1      	b.n	4160 <cdcdf_acm_set_req+0x24>
			return usbdc_xfer(ep, ctrl_buf, len, false);
    419c:	2300      	movs	r3, #0
    419e:	0032      	movs	r2, r6
    41a0:	0001      	movs	r1, r0
    41a2:	0028      	movs	r0, r5
    41a4:	4c10      	ldr	r4, [pc, #64]	; (41e8 <cdcdf_acm_set_req+0xac>)
    41a6:	47a0      	blx	r4
    41a8:	e7da      	b.n	4160 <cdcdf_acm_set_req+0x24>
		usbdc_xfer(0, NULL, 0, 0);
    41aa:	2300      	movs	r3, #0
    41ac:	2200      	movs	r2, #0
    41ae:	2100      	movs	r1, #0
    41b0:	2000      	movs	r0, #0
    41b2:	4c0d      	ldr	r4, [pc, #52]	; (41e8 <cdcdf_acm_set_req+0xac>)
    41b4:	47a0      	blx	r4
		if (NULL != cdcdf_acm_notify_state) {
    41b6:	4b0b      	ldr	r3, [pc, #44]	; (41e4 <cdcdf_acm_set_req+0xa8>)
    41b8:	68db      	ldr	r3, [r3, #12]
    41ba:	2b00      	cmp	r3, #0
    41bc:	d00b      	beq.n	41d6 <cdcdf_acm_set_req+0x9a>
			cdcdf_acm_notify_state(req->wValue);
    41be:	78ba      	ldrb	r2, [r7, #2]
    41c0:	78f8      	ldrb	r0, [r7, #3]
    41c2:	0200      	lsls	r0, r0, #8
    41c4:	4310      	orrs	r0, r2
    41c6:	4798      	blx	r3
		return ERR_NONE;
    41c8:	2000      	movs	r0, #0
    41ca:	e7c9      	b.n	4160 <cdcdf_acm_set_req+0x24>
			return ERR_INVALID_DATA;
    41cc:	2001      	movs	r0, #1
    41ce:	4240      	negs	r0, r0
    41d0:	e7c6      	b.n	4160 <cdcdf_acm_set_req+0x24>
			return ERR_NONE;
    41d2:	2000      	movs	r0, #0
    41d4:	e7c4      	b.n	4160 <cdcdf_acm_set_req+0x24>
		return ERR_NONE;
    41d6:	2000      	movs	r0, #0
    41d8:	e7c2      	b.n	4160 <cdcdf_acm_set_req+0x24>
    41da:	46c0      	nop			; (mov r8, r8)
    41dc:	00004c05 	.word	0x00004c05
    41e0:	0000926d 	.word	0x0000926d
    41e4:	20001070 	.word	0x20001070
    41e8:	00004679 	.word	0x00004679

000041ec <cdcdf_acm_req>:
 * \param[in] ep Endpoint address.
 * \param[in] req Pointer to the request.
 * \return Operation status.
 */
static int32_t cdcdf_acm_req(uint8_t ep, struct usb_req *req, enum usb_ctrl_stage stage)
{
    41ec:	b570      	push	{r4, r5, r6, lr}
	if (0x01 != ((req->bmRequestType >> 5) & 0x03)) { // class request
    41ee:	780c      	ldrb	r4, [r1, #0]
    41f0:	0965      	lsrs	r5, r4, #5
    41f2:	2303      	movs	r3, #3
    41f4:	402b      	ands	r3, r5
    41f6:	2b01      	cmp	r3, #1
    41f8:	d114      	bne.n	4224 <cdcdf_acm_req+0x38>
		return ERR_NOT_FOUND;
	}
	if ((req->wIndex == _cdcdf_acm_funcd.func_iface[0]) || (req->wIndex == _cdcdf_acm_funcd.func_iface[1])) {
    41fa:	790d      	ldrb	r5, [r1, #4]
    41fc:	794b      	ldrb	r3, [r1, #5]
    41fe:	021b      	lsls	r3, r3, #8
    4200:	432b      	orrs	r3, r5
    4202:	4d0b      	ldr	r5, [pc, #44]	; (4230 <cdcdf_acm_req+0x44>)
    4204:	7c2d      	ldrb	r5, [r5, #16]
    4206:	42ab      	cmp	r3, r5
    4208:	d003      	beq.n	4212 <cdcdf_acm_req+0x26>
    420a:	4d09      	ldr	r5, [pc, #36]	; (4230 <cdcdf_acm_req+0x44>)
    420c:	7c6d      	ldrb	r5, [r5, #17]
    420e:	42ab      	cmp	r3, r5
    4210:	d10b      	bne.n	422a <cdcdf_acm_req+0x3e>
		if (req->bmRequestType & USB_EP_DIR_IN) {
    4212:	b264      	sxtb	r4, r4
    4214:	2c00      	cmp	r4, #0
    4216:	db02      	blt.n	421e <cdcdf_acm_req+0x32>
			return cdcdf_acm_get_req(ep, req, stage);
		} else {
			return cdcdf_acm_set_req(ep, req, stage);
    4218:	4b06      	ldr	r3, [pc, #24]	; (4234 <cdcdf_acm_req+0x48>)
    421a:	4798      	blx	r3
		}
	} else {
		return ERR_NOT_FOUND;
	}
}
    421c:	bd70      	pop	{r4, r5, r6, pc}
			return cdcdf_acm_get_req(ep, req, stage);
    421e:	4b06      	ldr	r3, [pc, #24]	; (4238 <cdcdf_acm_req+0x4c>)
    4220:	4798      	blx	r3
    4222:	e7fb      	b.n	421c <cdcdf_acm_req+0x30>
		return ERR_NOT_FOUND;
    4224:	200a      	movs	r0, #10
    4226:	4240      	negs	r0, r0
    4228:	e7f8      	b.n	421c <cdcdf_acm_req+0x30>
		return ERR_NOT_FOUND;
    422a:	200a      	movs	r0, #10
    422c:	4240      	negs	r0, r0
    422e:	e7f5      	b.n	421c <cdcdf_acm_req+0x30>
    4230:	20001070 	.word	0x20001070
    4234:	0000413d 	.word	0x0000413d
    4238:	00004101 	.word	0x00004101

0000423c <cdcdf_acm_enable>:
{
    423c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    423e:	46ce      	mov	lr, r9
    4240:	4647      	mov	r7, r8
    4242:	b580      	push	{r7, lr}
    4244:	000e      	movs	r6, r1
	struct cdcdf_acm_func_data *func_data = (struct cdcdf_acm_func_data *)(drv->func_data);
    4246:	6887      	ldr	r7, [r0, #8]
	ifc = desc->sod;
    4248:	6808      	ldr	r0, [r1, #0]
	for (i = 0; i < 2; i++) {
    424a:	2300      	movs	r3, #0
    424c:	4698      	mov	r8, r3
    424e:	4643      	mov	r3, r8
    4250:	2b01      	cmp	r3, #1
    4252:	d845      	bhi.n	42e0 <cdcdf_acm_enable+0xa4>
		if (NULL == ifc) {
    4254:	2800      	cmp	r0, #0
    4256:	d04b      	beq.n	42f0 <cdcdf_acm_enable+0xb4>
		ifc_desc.bInterfaceNumber = ifc[2];
    4258:	7883      	ldrb	r3, [r0, #2]
		ifc_desc.bInterfaceClass  = ifc[5];
    425a:	7942      	ldrb	r2, [r0, #5]
		if ((CDC_CLASS_COMM == ifc_desc.bInterfaceClass) || (CDC_CLASS_DATA == ifc_desc.bInterfaceClass)) {
    425c:	2a02      	cmp	r2, #2
    425e:	d001      	beq.n	4264 <cdcdf_acm_enable+0x28>
    4260:	2a0a      	cmp	r2, #10
    4262:	d148      	bne.n	42f6 <cdcdf_acm_enable+0xba>
			if (func_data->func_iface[i] == ifc_desc.bInterfaceNumber) { // Initialized
    4264:	46c1      	mov	r9, r8
    4266:	4642      	mov	r2, r8
    4268:	5cba      	ldrb	r2, [r7, r2]
    426a:	4293      	cmp	r3, r2
    426c:	d046      	beq.n	42fc <cdcdf_acm_enable+0xc0>
			} else if (func_data->func_iface[i] != 0xFF) { // Occupied
    426e:	2aff      	cmp	r2, #255	; 0xff
    4270:	d147      	bne.n	4302 <cdcdf_acm_enable+0xc6>
				func_data->func_iface[i] = ifc_desc.bInterfaceNumber;
    4272:	4642      	mov	r2, r8
    4274:	54bb      	strb	r3, [r7, r2]
		ep = usb_find_desc(ifc, desc->eod, USB_DT_ENDPOINT);
    4276:	2205      	movs	r2, #5
    4278:	6871      	ldr	r1, [r6, #4]
    427a:	4b25      	ldr	r3, [pc, #148]	; (4310 <cdcdf_acm_enable+0xd4>)
    427c:	4798      	blx	r3
    427e:	0004      	movs	r4, r0
		while (NULL != ep) {
    4280:	e00c      	b.n	429c <cdcdf_acm_enable+0x60>
				func_data->func_ep_in[i] = ep_desc.bEndpointAddress;
    4282:	464b      	mov	r3, r9
    4284:	18fb      	adds	r3, r7, r3
    4286:	709d      	strb	r5, [r3, #2]
				usb_d_ep_enable(func_data->func_ep_in[i]);
    4288:	0028      	movs	r0, r5
    428a:	4b22      	ldr	r3, [pc, #136]	; (4314 <cdcdf_acm_enable+0xd8>)
    428c:	4798      	blx	r3
			desc->sod = ep;
    428e:	6034      	str	r4, [r6, #0]
 *  \param[in] desc Byte pointer to the descriptor start address
 *  \return descriptor length
 */
static inline uint8_t usb_desc_len(const uint8_t *desc)
{
	return desc[0];
    4290:	7820      	ldrb	r0, [r4, #0]
 *  \param[in] desc Byte pointer to the descriptor start address
 *  \return Byte pointer to the next descriptor
 */
static inline uint8_t *usb_desc_next(uint8_t *desc)
{
	return (desc + usb_desc_len(desc));
    4292:	1820      	adds	r0, r4, r0
			ep        = usb_find_ep_desc(usb_desc_next(desc->sod), desc->eod);
    4294:	6871      	ldr	r1, [r6, #4]
    4296:	4b20      	ldr	r3, [pc, #128]	; (4318 <cdcdf_acm_enable+0xdc>)
    4298:	4798      	blx	r3
    429a:	0004      	movs	r4, r0
		while (NULL != ep) {
    429c:	2c00      	cmp	r4, #0
    429e:	d013      	beq.n	42c8 <cdcdf_acm_enable+0x8c>
			ep_desc.bEndpointAddress = ep[2];
    42a0:	78a5      	ldrb	r5, [r4, #2]
			ep_desc.bmAttributes     = ep[3];
    42a2:	78e1      	ldrb	r1, [r4, #3]
	return (ptr[0] + (ptr[1] << 8));
    42a4:	7922      	ldrb	r2, [r4, #4]
    42a6:	7963      	ldrb	r3, [r4, #5]
    42a8:	021b      	lsls	r3, r3, #8
    42aa:	18d2      	adds	r2, r2, r3
    42ac:	b292      	uxth	r2, r2
			if (usb_d_ep_init(ep_desc.bEndpointAddress, ep_desc.bmAttributes, ep_desc.wMaxPacketSize)) {
    42ae:	0028      	movs	r0, r5
    42b0:	4b1a      	ldr	r3, [pc, #104]	; (431c <cdcdf_acm_enable+0xe0>)
    42b2:	4798      	blx	r3
    42b4:	2800      	cmp	r0, #0
    42b6:	d127      	bne.n	4308 <cdcdf_acm_enable+0xcc>
			if (ep_desc.bEndpointAddress & USB_EP_DIR_IN) {
    42b8:	b26b      	sxtb	r3, r5
    42ba:	2b00      	cmp	r3, #0
    42bc:	dbe1      	blt.n	4282 <cdcdf_acm_enable+0x46>
				func_data->func_ep_out = ep_desc.bEndpointAddress;
    42be:	713d      	strb	r5, [r7, #4]
				usb_d_ep_enable(func_data->func_ep_out);
    42c0:	0028      	movs	r0, r5
    42c2:	4b14      	ldr	r3, [pc, #80]	; (4314 <cdcdf_acm_enable+0xd8>)
    42c4:	4798      	blx	r3
    42c6:	e7e2      	b.n	428e <cdcdf_acm_enable+0x52>
		ifc = usb_find_desc(usb_desc_next(desc->sod), desc->eod, USB_DT_INTERFACE);
    42c8:	6830      	ldr	r0, [r6, #0]
	return desc[0];
    42ca:	7803      	ldrb	r3, [r0, #0]
	return (desc + usb_desc_len(desc));
    42cc:	18c0      	adds	r0, r0, r3
    42ce:	2204      	movs	r2, #4
    42d0:	6871      	ldr	r1, [r6, #4]
    42d2:	4b0f      	ldr	r3, [pc, #60]	; (4310 <cdcdf_acm_enable+0xd4>)
    42d4:	4798      	blx	r3
	for (i = 0; i < 2; i++) {
    42d6:	4643      	mov	r3, r8
    42d8:	3301      	adds	r3, #1
    42da:	b2db      	uxtb	r3, r3
    42dc:	4698      	mov	r8, r3
    42de:	e7b6      	b.n	424e <cdcdf_acm_enable+0x12>
	_cdcdf_acm_funcd.enabled = true;
    42e0:	2201      	movs	r2, #1
    42e2:	4b0f      	ldr	r3, [pc, #60]	; (4320 <cdcdf_acm_enable+0xe4>)
    42e4:	755a      	strb	r2, [r3, #21]
	return ERR_NONE;
    42e6:	2000      	movs	r0, #0
}
    42e8:	bc0c      	pop	{r2, r3}
    42ea:	4690      	mov	r8, r2
    42ec:	4699      	mov	r9, r3
    42ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return ERR_NOT_FOUND;
    42f0:	200a      	movs	r0, #10
    42f2:	4240      	negs	r0, r0
    42f4:	e7f8      	b.n	42e8 <cdcdf_acm_enable+0xac>
			return ERR_NOT_FOUND;
    42f6:	200a      	movs	r0, #10
    42f8:	4240      	negs	r0, r0
    42fa:	e7f5      	b.n	42e8 <cdcdf_acm_enable+0xac>
				return ERR_ALREADY_INITIALIZED;
    42fc:	2012      	movs	r0, #18
    42fe:	4240      	negs	r0, r0
    4300:	e7f2      	b.n	42e8 <cdcdf_acm_enable+0xac>
				return ERR_NO_RESOURCE;
    4302:	201c      	movs	r0, #28
    4304:	4240      	negs	r0, r0
    4306:	e7ef      	b.n	42e8 <cdcdf_acm_enable+0xac>
				return ERR_NOT_INITIALIZED;
    4308:	2014      	movs	r0, #20
    430a:	4240      	negs	r0, r0
    430c:	e7ec      	b.n	42e8 <cdcdf_acm_enable+0xac>
    430e:	46c0      	nop			; (mov r8, r8)
    4310:	00004c21 	.word	0x00004c21
    4314:	00001d85 	.word	0x00001d85
    4318:	00004c3f 	.word	0x00004c3f
    431c:	00001cf1 	.word	0x00001cf1
    4320:	20001070 	.word	0x20001070

00004324 <cdcdf_acm_disable>:
{
    4324:	b570      	push	{r4, r5, r6, lr}
	struct cdcdf_acm_func_data *func_data = (struct cdcdf_acm_func_data *)(drv->func_data);
    4326:	6885      	ldr	r5, [r0, #8]
	if (desc) {
    4328:	2900      	cmp	r1, #0
    432a:	d01a      	beq.n	4362 <cdcdf_acm_disable+0x3e>
		ifc_desc.bInterfaceClass = desc->sod[5];
    432c:	680b      	ldr	r3, [r1, #0]
    432e:	795b      	ldrb	r3, [r3, #5]
		if ((ifc_desc.bInterfaceClass != CDC_CLASS_COMM) && (ifc_desc.bInterfaceClass != CDC_CLASS_DATA)) {
    4330:	2b02      	cmp	r3, #2
    4332:	d018      	beq.n	4366 <cdcdf_acm_disable+0x42>
    4334:	2b0a      	cmp	r3, #10
    4336:	d124      	bne.n	4382 <cdcdf_acm_disable+0x5e>
    4338:	2400      	movs	r4, #0
    433a:	e001      	b.n	4340 <cdcdf_acm_disable+0x1c>
	for (i = 0; i < 2; i++) {
    433c:	3401      	adds	r4, #1
    433e:	b2e4      	uxtb	r4, r4
    4340:	2c01      	cmp	r4, #1
    4342:	d812      	bhi.n	436a <cdcdf_acm_disable+0x46>
		if (func_data->func_iface[i] == 0xFF) {
    4344:	5d2b      	ldrb	r3, [r5, r4]
    4346:	2bff      	cmp	r3, #255	; 0xff
    4348:	d0f8      	beq.n	433c <cdcdf_acm_disable+0x18>
			func_data->func_iface[i] = 0xFF;
    434a:	23ff      	movs	r3, #255	; 0xff
    434c:	552b      	strb	r3, [r5, r4]
			if (func_data->func_ep_in[i] != 0xFF) {
    434e:	192b      	adds	r3, r5, r4
    4350:	7898      	ldrb	r0, [r3, #2]
    4352:	28ff      	cmp	r0, #255	; 0xff
    4354:	d0f2      	beq.n	433c <cdcdf_acm_disable+0x18>
				usb_d_ep_deinit(func_data->func_ep_in[i]);
    4356:	4b0c      	ldr	r3, [pc, #48]	; (4388 <cdcdf_acm_disable+0x64>)
    4358:	4798      	blx	r3
				func_data->func_ep_in[i] = 0xFF;
    435a:	192e      	adds	r6, r5, r4
    435c:	22ff      	movs	r2, #255	; 0xff
    435e:	70b2      	strb	r2, [r6, #2]
    4360:	e7ec      	b.n	433c <cdcdf_acm_disable+0x18>
    4362:	2400      	movs	r4, #0
    4364:	e7ec      	b.n	4340 <cdcdf_acm_disable+0x1c>
    4366:	2400      	movs	r4, #0
    4368:	e7ea      	b.n	4340 <cdcdf_acm_disable+0x1c>
	if (func_data->func_ep_out != 0xFF) {
    436a:	7928      	ldrb	r0, [r5, #4]
    436c:	28ff      	cmp	r0, #255	; 0xff
    436e:	d003      	beq.n	4378 <cdcdf_acm_disable+0x54>
		usb_d_ep_deinit(func_data->func_ep_out);
    4370:	4b05      	ldr	r3, [pc, #20]	; (4388 <cdcdf_acm_disable+0x64>)
    4372:	4798      	blx	r3
		func_data->func_ep_out = 0xFF;
    4374:	23ff      	movs	r3, #255	; 0xff
    4376:	712b      	strb	r3, [r5, #4]
	_cdcdf_acm_funcd.enabled = false;
    4378:	2200      	movs	r2, #0
    437a:	4b04      	ldr	r3, [pc, #16]	; (438c <cdcdf_acm_disable+0x68>)
    437c:	755a      	strb	r2, [r3, #21]
	return ERR_NONE;
    437e:	2000      	movs	r0, #0
}
    4380:	bd70      	pop	{r4, r5, r6, pc}
			return ERR_NOT_FOUND;
    4382:	200a      	movs	r0, #10
    4384:	4240      	negs	r0, r0
    4386:	e7fb      	b.n	4380 <cdcdf_acm_disable+0x5c>
    4388:	00001d59 	.word	0x00001d59
    438c:	20001070 	.word	0x20001070

00004390 <cdcdf_acm_ctrl>:
{
    4390:	b510      	push	{r4, lr}
	switch (ctrl) {
    4392:	2901      	cmp	r1, #1
    4394:	d00a      	beq.n	43ac <cdcdf_acm_ctrl+0x1c>
    4396:	2900      	cmp	r1, #0
    4398:	d004      	beq.n	43a4 <cdcdf_acm_ctrl+0x14>
    439a:	2902      	cmp	r1, #2
    439c:	d10a      	bne.n	43b4 <cdcdf_acm_ctrl+0x24>
		return ERR_UNSUPPORTED_OP;
    439e:	201b      	movs	r0, #27
    43a0:	4240      	negs	r0, r0
}
    43a2:	bd10      	pop	{r4, pc}
		return cdcdf_acm_enable(drv, (struct usbd_descriptors *)param);
    43a4:	0011      	movs	r1, r2
    43a6:	4b05      	ldr	r3, [pc, #20]	; (43bc <cdcdf_acm_ctrl+0x2c>)
    43a8:	4798      	blx	r3
    43aa:	e7fa      	b.n	43a2 <cdcdf_acm_ctrl+0x12>
		return cdcdf_acm_disable(drv, (struct usbd_descriptors *)param);
    43ac:	0011      	movs	r1, r2
    43ae:	4b04      	ldr	r3, [pc, #16]	; (43c0 <cdcdf_acm_ctrl+0x30>)
    43b0:	4798      	blx	r3
    43b2:	e7f6      	b.n	43a2 <cdcdf_acm_ctrl+0x12>
		return ERR_INVALID_ARG;
    43b4:	200d      	movs	r0, #13
    43b6:	4240      	negs	r0, r0
    43b8:	e7f3      	b.n	43a2 <cdcdf_acm_ctrl+0x12>
    43ba:	46c0      	nop			; (mov r8, r8)
    43bc:	0000423d 	.word	0x0000423d
    43c0:	00004325 	.word	0x00004325

000043c4 <cdcdf_acm_init>:

/**
 * \brief Initialize the USB CDC ACM Function Driver
 */
int32_t cdcdf_acm_init(void)
{
    43c4:	b510      	push	{r4, lr}
	if (usbdc_get_state() > USBD_S_POWER) {
    43c6:	4b0b      	ldr	r3, [pc, #44]	; (43f4 <cdcdf_acm_init+0x30>)
    43c8:	4798      	blx	r3
    43ca:	2801      	cmp	r0, #1
    43cc:	d80e      	bhi.n	43ec <cdcdf_acm_init+0x28>
		return ERR_DENIED;
	}

	_cdcdf_acm.ctrl      = cdcdf_acm_ctrl;
    43ce:	480a      	ldr	r0, [pc, #40]	; (43f8 <cdcdf_acm_init+0x34>)
    43d0:	4b0a      	ldr	r3, [pc, #40]	; (43fc <cdcdf_acm_init+0x38>)
    43d2:	61c3      	str	r3, [r0, #28]
	_cdcdf_acm.func_data = &_cdcdf_acm_funcd;
    43d4:	0003      	movs	r3, r0
    43d6:	3310      	adds	r3, #16
    43d8:	6203      	str	r3, [r0, #32]

	usbdc_register_function(&_cdcdf_acm);
    43da:	3018      	adds	r0, #24
    43dc:	4b08      	ldr	r3, [pc, #32]	; (4400 <cdcdf_acm_init+0x3c>)
    43de:	4798      	blx	r3
	usbdc_register_handler(USBDC_HDL_REQ, &cdcdf_acm_req_h);
    43e0:	4908      	ldr	r1, [pc, #32]	; (4404 <cdcdf_acm_init+0x40>)
    43e2:	2001      	movs	r0, #1
    43e4:	4b08      	ldr	r3, [pc, #32]	; (4408 <cdcdf_acm_init+0x44>)
    43e6:	4798      	blx	r3
	return ERR_NONE;
    43e8:	2000      	movs	r0, #0
}
    43ea:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
    43ec:	2011      	movs	r0, #17
    43ee:	4240      	negs	r0, r0
    43f0:	e7fb      	b.n	43ea <cdcdf_acm_init+0x26>
    43f2:	46c0      	nop			; (mov r8, r8)
    43f4:	00004c11 	.word	0x00004c11
    43f8:	20001070 	.word	0x20001070
    43fc:	00004391 	.word	0x00004391
    4400:	00004ba9 	.word	0x00004ba9
    4404:	20000064 	.word	0x20000064
    4408:	00004b11 	.word	0x00004b11

0000440c <usbdc_unconfig>:

/**
 * \brief Unconfig, close all interfaces
 */
static void usbdc_unconfig(void)
{
    440c:	b510      	push	{r4, lr}
	struct usbdf_driver *func = (struct usbdf_driver *)usbdc.func_list.head;
    440e:	4b06      	ldr	r3, [pc, #24]	; (4428 <usbdc_unconfig+0x1c>)
    4410:	691c      	ldr	r4, [r3, #16]
	while (NULL != func) {
    4412:	e005      	b.n	4420 <usbdc_unconfig+0x14>
		func->ctrl(func, USBDF_DISABLE, NULL);
    4414:	2200      	movs	r2, #0
    4416:	2101      	movs	r1, #1
    4418:	0020      	movs	r0, r4
    441a:	6863      	ldr	r3, [r4, #4]
    441c:	4798      	blx	r3
		func = func->next;
    441e:	6824      	ldr	r4, [r4, #0]
	while (NULL != func) {
    4420:	2c00      	cmp	r4, #0
    4422:	d1f7      	bne.n	4414 <usbdc_unconfig+0x8>
	}
}
    4424:	bd10      	pop	{r4, pc}
    4426:	46c0      	nop			; (mov r8, r8)
    4428:	20001094 	.word	0x20001094

0000442c <usbdc_sof_notify>:
	}
}

/** Invoke all registered SOF callbacks. */
static void usbdc_sof_notify(void)
{
    442c:	b510      	push	{r4, lr}
	struct usbdc_sof_handler *sof = (struct usbdc_sof_handler *)usbdc.handlers.sof_list.head;
    442e:	4b06      	ldr	r3, [pc, #24]	; (4448 <usbdc_sof_notify+0x1c>)
    4430:	685c      	ldr	r4, [r3, #4]

	while (sof != NULL) {
    4432:	e000      	b.n	4436 <usbdc_sof_notify+0xa>
		if (NULL != sof->cb) {
			sof->cb();
		}
		sof = sof->next;
    4434:	6824      	ldr	r4, [r4, #0]
	while (sof != NULL) {
    4436:	2c00      	cmp	r4, #0
    4438:	d004      	beq.n	4444 <usbdc_sof_notify+0x18>
		if (NULL != sof->cb) {
    443a:	6863      	ldr	r3, [r4, #4]
    443c:	2b00      	cmp	r3, #0
    443e:	d0f9      	beq.n	4434 <usbdc_sof_notify+0x8>
			sof->cb();
    4440:	4798      	blx	r3
    4442:	e7f7      	b.n	4434 <usbdc_sof_notify+0x8>
	}
}
    4444:	bd10      	pop	{r4, pc}
    4446:	46c0      	nop			; (mov r8, r8)
    4448:	20001094 	.word	0x20001094

0000444c <usbdc_change_notify>:

/** Invoke all registered Change notification callbacks. */
static void usbdc_change_notify(enum usbdc_change_type change, uint32_t value)
{
    444c:	b570      	push	{r4, r5, r6, lr}
    444e:	0006      	movs	r6, r0
    4450:	000d      	movs	r5, r1
	struct usbdc_change_handler *cg = (struct usbdc_change_handler *)usbdc.handlers.change_list.head;
    4452:	4b07      	ldr	r3, [pc, #28]	; (4470 <usbdc_change_notify+0x24>)
    4454:	68dc      	ldr	r4, [r3, #12]

	while (cg != NULL) {
    4456:	e000      	b.n	445a <usbdc_change_notify+0xe>
		if (NULL != cg->cb) {
			cg->cb(change, value);
		}
		cg = cg->next;
    4458:	6824      	ldr	r4, [r4, #0]
	while (cg != NULL) {
    445a:	2c00      	cmp	r4, #0
    445c:	d006      	beq.n	446c <usbdc_change_notify+0x20>
		if (NULL != cg->cb) {
    445e:	6863      	ldr	r3, [r4, #4]
    4460:	2b00      	cmp	r3, #0
    4462:	d0f9      	beq.n	4458 <usbdc_change_notify+0xc>
			cg->cb(change, value);
    4464:	0029      	movs	r1, r5
    4466:	0030      	movs	r0, r6
    4468:	4798      	blx	r3
    446a:	e7f5      	b.n	4458 <usbdc_change_notify+0xc>
	}
}
    446c:	bd70      	pop	{r4, r5, r6, pc}
    446e:	46c0      	nop			; (mov r8, r8)
    4470:	20001094 	.word	0x20001094

00004474 <usbdc_request_handler>:

/** Invoke all registered request callbacks until request handled. */
static int32_t usbdc_request_handler(uint8_t ep, struct usb_req *req, enum usb_ctrl_stage stage)
{
    4474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4476:	0007      	movs	r7, r0
    4478:	000e      	movs	r6, r1
    447a:	0015      	movs	r5, r2
	struct usbdc_req_handler *h = (struct usbdc_req_handler *)usbdc.handlers.req_list.head;
    447c:	4b0b      	ldr	r3, [pc, #44]	; (44ac <usbdc_request_handler+0x38>)
    447e:	689c      	ldr	r4, [r3, #8]
	int32_t                   rc;

	while (h != NULL) {
    4480:	e000      	b.n	4484 <usbdc_request_handler+0x10>
				return true;
			} else if (ERR_NOT_FOUND != rc) {
				return -1;
			}
		}
		h = h->next;
    4482:	6824      	ldr	r4, [r4, #0]
	while (h != NULL) {
    4484:	2c00      	cmp	r4, #0
    4486:	d00d      	beq.n	44a4 <usbdc_request_handler+0x30>
		if (NULL != h->cb) {
    4488:	6863      	ldr	r3, [r4, #4]
    448a:	2b00      	cmp	r3, #0
    448c:	d0f9      	beq.n	4482 <usbdc_request_handler+0xe>
			rc = h->cb(ep, req, stage);
    448e:	002a      	movs	r2, r5
    4490:	0031      	movs	r1, r6
    4492:	0038      	movs	r0, r7
    4494:	4798      	blx	r3
			if (0 == rc) {
    4496:	2800      	cmp	r0, #0
    4498:	d006      	beq.n	44a8 <usbdc_request_handler+0x34>
			} else if (ERR_NOT_FOUND != rc) {
    449a:	300a      	adds	r0, #10
    449c:	d0f1      	beq.n	4482 <usbdc_request_handler+0xe>
				return -1;
    449e:	2001      	movs	r0, #1
    44a0:	4240      	negs	r0, r0
    44a2:	e000      	b.n	44a6 <usbdc_request_handler+0x32>
	}
	return false;
    44a4:	2000      	movs	r0, #0
}
    44a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				return true;
    44a8:	2001      	movs	r0, #1
    44aa:	e7fc      	b.n	44a6 <usbdc_request_handler+0x32>
    44ac:	20001094 	.word	0x20001094

000044b0 <usbd_sof_cb>:

/**
 * \brief Callback invoked on USB device SOF
 */
static void usbd_sof_cb(void)
{
    44b0:	b510      	push	{r4, lr}
	usbdc_sof_notify();
    44b2:	4b01      	ldr	r3, [pc, #4]	; (44b8 <usbd_sof_cb+0x8>)
    44b4:	4798      	blx	r3
}
    44b6:	bd10      	pop	{r4, pc}
    44b8:	0000442d 	.word	0x0000442d

000044bc <usbdc_ctrl_data_end>:
/**
 * \brief When control data stage is end
 * \param[in] req Pointer to the request.
 */
static bool usbdc_ctrl_data_end(struct usb_req *req)
{
    44bc:	b510      	push	{r4, lr}
    44be:	0001      	movs	r1, r0
	usbdc_request_handler(0, req, USB_DATA_STAGE);
    44c0:	2201      	movs	r2, #1
    44c2:	2000      	movs	r0, #0
    44c4:	4b01      	ldr	r3, [pc, #4]	; (44cc <usbdc_ctrl_data_end+0x10>)
    44c6:	4798      	blx	r3
	return false;
}
    44c8:	2000      	movs	r0, #0
    44ca:	bd10      	pop	{r4, pc}
    44cc:	00004475 	.word	0x00004475

000044d0 <usbdc_set_address>:
{
    44d0:	b510      	push	{r4, lr}
	usb_d_set_address(addr);
    44d2:	4b01      	ldr	r3, [pc, #4]	; (44d8 <usbdc_set_address+0x8>)
    44d4:	4798      	blx	r3
}
    44d6:	bd10      	pop	{r4, pc}
    44d8:	00001ce5 	.word	0x00001ce5

000044dc <usbdc_ctrl_status_end>:
{
    44dc:	b510      	push	{r4, lr}
    44de:	0004      	movs	r4, r0
	if (req->bmRequestType != USB_REQT_TYPE_STANDARD) {
    44e0:	7803      	ldrb	r3, [r0, #0]
    44e2:	2b00      	cmp	r3, #0
    44e4:	d112      	bne.n	450c <usbdc_ctrl_status_end+0x30>
	switch (req->bRequest) {
    44e6:	7843      	ldrb	r3, [r0, #1]
    44e8:	2b05      	cmp	r3, #5
    44ea:	d012      	beq.n	4512 <usbdc_ctrl_status_end+0x36>
    44ec:	2b09      	cmp	r3, #9
    44ee:	d10d      	bne.n	450c <usbdc_ctrl_status_end+0x30>
		usbdc.cfg_value = req->wValue;
    44f0:	7882      	ldrb	r2, [r0, #2]
    44f2:	4b10      	ldr	r3, [pc, #64]	; (4534 <usbdc_ctrl_status_end+0x58>)
    44f4:	76da      	strb	r2, [r3, #27]
		usbdc.state     = req->wValue ? USBD_S_CONFIG : USBD_S_ADDRESS;
    44f6:	7882      	ldrb	r2, [r0, #2]
    44f8:	78c3      	ldrb	r3, [r0, #3]
    44fa:	021b      	lsls	r3, r3, #8
    44fc:	4313      	orrs	r3, r2
    44fe:	d106      	bne.n	450e <usbdc_ctrl_status_end+0x32>
    4500:	2103      	movs	r1, #3
    4502:	4b0c      	ldr	r3, [pc, #48]	; (4534 <usbdc_ctrl_status_end+0x58>)
    4504:	7699      	strb	r1, [r3, #26]
		usbdc_change_notify(USBDC_C_STATE, usbdc.state);
    4506:	2001      	movs	r0, #1
    4508:	4b0b      	ldr	r3, [pc, #44]	; (4538 <usbdc_ctrl_status_end+0x5c>)
    450a:	4798      	blx	r3
}
    450c:	bd10      	pop	{r4, pc}
		usbdc.state     = req->wValue ? USBD_S_CONFIG : USBD_S_ADDRESS;
    450e:	2104      	movs	r1, #4
    4510:	e7f7      	b.n	4502 <usbdc_ctrl_status_end+0x26>
		usbdc_set_address(req->wValue);
    4512:	7880      	ldrb	r0, [r0, #2]
    4514:	4b09      	ldr	r3, [pc, #36]	; (453c <usbdc_ctrl_status_end+0x60>)
    4516:	4798      	blx	r3
		usbdc.state = req->wValue ? USBD_S_ADDRESS : USBD_S_DEFAULT;
    4518:	78a2      	ldrb	r2, [r4, #2]
    451a:	78e3      	ldrb	r3, [r4, #3]
    451c:	021b      	lsls	r3, r3, #8
    451e:	4313      	orrs	r3, r2
    4520:	d006      	beq.n	4530 <usbdc_ctrl_status_end+0x54>
    4522:	2103      	movs	r1, #3
    4524:	4b03      	ldr	r3, [pc, #12]	; (4534 <usbdc_ctrl_status_end+0x58>)
    4526:	7699      	strb	r1, [r3, #26]
		usbdc_change_notify(USBDC_C_STATE, usbdc.state);
    4528:	2001      	movs	r0, #1
    452a:	4b03      	ldr	r3, [pc, #12]	; (4538 <usbdc_ctrl_status_end+0x5c>)
    452c:	4798      	blx	r3
		break;
    452e:	e7ed      	b.n	450c <usbdc_ctrl_status_end+0x30>
		usbdc.state = req->wValue ? USBD_S_ADDRESS : USBD_S_DEFAULT;
    4530:	2102      	movs	r1, #2
    4532:	e7f7      	b.n	4524 <usbdc_ctrl_status_end+0x48>
    4534:	20001094 	.word	0x20001094
    4538:	0000444d 	.word	0x0000444d
    453c:	000044d1 	.word	0x000044d1

00004540 <usbdc_cb_ctl_done>:
 * \return Data has error or not.
 * \retval true There is data error, protocol error.
 * \retval false There is no data error.
 */
static bool usbdc_cb_ctl_done(const uint8_t ep, const enum usb_xfer_code code, struct usb_req *req)
{
    4540:	b510      	push	{r4, lr}
	(void)ep;

	switch (code) {
    4542:	2900      	cmp	r1, #0
    4544:	d003      	beq.n	454e <usbdc_cb_ctl_done+0xe>
    4546:	2901      	cmp	r1, #1
    4548:	d006      	beq.n	4558 <usbdc_cb_ctl_done+0x18>
	case USB_XFER_DATA:
		return usbdc_ctrl_data_end(req);
	default:
		break;
	}
	return false;
    454a:	2000      	movs	r0, #0
    454c:	e003      	b.n	4556 <usbdc_cb_ctl_done+0x16>
		usbdc_ctrl_status_end(req);
    454e:	0010      	movs	r0, r2
    4550:	4b03      	ldr	r3, [pc, #12]	; (4560 <usbdc_cb_ctl_done+0x20>)
    4552:	4798      	blx	r3
	return false;
    4554:	2000      	movs	r0, #0
}
    4556:	bd10      	pop	{r4, pc}
		return usbdc_ctrl_data_end(req);
    4558:	0010      	movs	r0, r2
    455a:	4b02      	ldr	r3, [pc, #8]	; (4564 <usbdc_cb_ctl_done+0x24>)
    455c:	4798      	blx	r3
    455e:	e7fa      	b.n	4556 <usbdc_cb_ctl_done+0x16>
    4560:	000044dd 	.word	0x000044dd
    4564:	000044bd 	.word	0x000044bd

00004568 <usbdc_set_config>:
{
    4568:	b530      	push	{r4, r5, lr}
    456a:	b083      	sub	sp, #12
    456c:	1e02      	subs	r2, r0, #0
	if (cfg_value == 0) {
    456e:	d014      	beq.n	459a <usbdc_set_config+0x32>
		cfg_desc = usb_find_cfg_desc(usbdc.desces.ls_fs->sod, usbdc.desces.ls_fs->eod, cfg_value);
    4570:	4b1e      	ldr	r3, [pc, #120]	; (45ec <usbdc_set_config+0x84>)
    4572:	681b      	ldr	r3, [r3, #0]
    4574:	6818      	ldr	r0, [r3, #0]
    4576:	6859      	ldr	r1, [r3, #4]
    4578:	4b1d      	ldr	r3, [pc, #116]	; (45f0 <usbdc_set_config+0x88>)
    457a:	4798      	blx	r3
	if (NULL == cfg_desc) {
    457c:	2800      	cmp	r0, #0
    457e:	d032      	beq.n	45e6 <usbdc_set_config+0x7e>
	return (ptr[0] + (ptr[1] << 8));
    4580:	7881      	ldrb	r1, [r0, #2]
    4582:	78c3      	ldrb	r3, [r0, #3]
    4584:	021b      	lsls	r3, r3, #8
    4586:	18c9      	adds	r1, r1, r3
    4588:	b289      	uxth	r1, r1
	desc.eod  = cfg_desc + total_len;
    458a:	1841      	adds	r1, r0, r1
    458c:	9101      	str	r1, [sp, #4]
	desc.sod  = usb_find_desc(cfg_desc, desc.eod, USB_DT_INTERFACE);
    458e:	2204      	movs	r2, #4
    4590:	4b18      	ldr	r3, [pc, #96]	; (45f4 <usbdc_set_config+0x8c>)
    4592:	4798      	blx	r3
    4594:	9000      	str	r0, [sp, #0]
	uint8_t                 last_iface = 0xFF;
    4596:	24ff      	movs	r4, #255	; 0xff
	while (NULL != desc.sod) {
    4598:	e00d      	b.n	45b6 <usbdc_set_config+0x4e>
		usbdc_unconfig();
    459a:	4b17      	ldr	r3, [pc, #92]	; (45f8 <usbdc_set_config+0x90>)
    459c:	4798      	blx	r3
		return true;
    459e:	2001      	movs	r0, #1
    45a0:	e01f      	b.n	45e2 <usbdc_set_config+0x7a>
			last_iface = desc.sod[2];
    45a2:	002c      	movs	r4, r5
		desc.sod = usb_desc_next(desc.sod);
    45a4:	9800      	ldr	r0, [sp, #0]
	return desc[0];
    45a6:	7803      	ldrb	r3, [r0, #0]
	return (desc + usb_desc_len(desc));
    45a8:	18c0      	adds	r0, r0, r3
    45aa:	9000      	str	r0, [sp, #0]
		desc.sod = usb_find_desc(desc.sod, desc.eod, USB_DT_INTERFACE);
    45ac:	2204      	movs	r2, #4
    45ae:	9901      	ldr	r1, [sp, #4]
    45b0:	4b10      	ldr	r3, [pc, #64]	; (45f4 <usbdc_set_config+0x8c>)
    45b2:	4798      	blx	r3
    45b4:	9000      	str	r0, [sp, #0]
	while (NULL != desc.sod) {
    45b6:	9b00      	ldr	r3, [sp, #0]
    45b8:	2b00      	cmp	r3, #0
    45ba:	d011      	beq.n	45e0 <usbdc_set_config+0x78>
		if (last_iface != desc.sod[2] /* bInterfaceNumber */) {
    45bc:	789d      	ldrb	r5, [r3, #2]
    45be:	42ac      	cmp	r4, r5
    45c0:	d0f0      	beq.n	45a4 <usbdc_set_config+0x3c>
			func       = (struct usbdf_driver *)usbdc.func_list.head;
    45c2:	4b0a      	ldr	r3, [pc, #40]	; (45ec <usbdc_set_config+0x84>)
    45c4:	691c      	ldr	r4, [r3, #16]
			while (NULL != func) {
    45c6:	2c00      	cmp	r4, #0
    45c8:	d0eb      	beq.n	45a2 <usbdc_set_config+0x3a>
				if (func->ctrl(func, USBDF_ENABLE, &desc)) {
    45ca:	466a      	mov	r2, sp
    45cc:	2100      	movs	r1, #0
    45ce:	0020      	movs	r0, r4
    45d0:	6863      	ldr	r3, [r4, #4]
    45d2:	4798      	blx	r3
    45d4:	2800      	cmp	r0, #0
    45d6:	d001      	beq.n	45dc <usbdc_set_config+0x74>
					func = func->next;
    45d8:	6824      	ldr	r4, [r4, #0]
    45da:	e7f4      	b.n	45c6 <usbdc_set_config+0x5e>
			last_iface = desc.sod[2];
    45dc:	002c      	movs	r4, r5
    45de:	e7e1      	b.n	45a4 <usbdc_set_config+0x3c>
	return true;
    45e0:	2001      	movs	r0, #1
}
    45e2:	b003      	add	sp, #12
    45e4:	bd30      	pop	{r4, r5, pc}
		return false;
    45e6:	2000      	movs	r0, #0
    45e8:	e7fb      	b.n	45e2 <usbdc_set_config+0x7a>
    45ea:	46c0      	nop			; (mov r8, r8)
    45ec:	20001094 	.word	0x20001094
    45f0:	00004c65 	.word	0x00004c65
    45f4:	00004c21 	.word	0x00004c21
    45f8:	0000440d 	.word	0x0000440d

000045fc <usbdc_reset>:

/**
 * \brief USB Device Core Reset
 */
void usbdc_reset(void)
{
    45fc:	b510      	push	{r4, lr}
	usbdc_unconfig();
    45fe:	4b0d      	ldr	r3, [pc, #52]	; (4634 <usbdc_reset+0x38>)
    4600:	4798      	blx	r3

	usbdc.state       = USBD_S_DEFAULT;
    4602:	4c0d      	ldr	r4, [pc, #52]	; (4638 <usbdc_reset+0x3c>)
    4604:	2302      	movs	r3, #2
    4606:	76a3      	strb	r3, [r4, #26]
	usbdc.cfg_value   = 0;
    4608:	2300      	movs	r3, #0
    460a:	76e3      	strb	r3, [r4, #27]
	usbdc.ifc_alt_map = 0;
    460c:	7763      	strb	r3, [r4, #29]

	// Setup EP0
	usb_d_ep_deinit(0);
    460e:	2000      	movs	r0, #0
    4610:	4b0a      	ldr	r3, [pc, #40]	; (463c <usbdc_reset+0x40>)
    4612:	4798      	blx	r3
	usb_d_ep0_init(usbdc.ctrl_size);
    4614:	7f20      	ldrb	r0, [r4, #28]
    4616:	4b0a      	ldr	r3, [pc, #40]	; (4640 <usbdc_reset+0x44>)
    4618:	4798      	blx	r3
	usb_d_ep_register_callback(0, USB_D_EP_CB_SETUP, (FUNC_PTR)usbdc_cb_ctl_req);
    461a:	4a0a      	ldr	r2, [pc, #40]	; (4644 <usbdc_reset+0x48>)
    461c:	2100      	movs	r1, #0
    461e:	2000      	movs	r0, #0
    4620:	4c09      	ldr	r4, [pc, #36]	; (4648 <usbdc_reset+0x4c>)
    4622:	47a0      	blx	r4
	usb_d_ep_register_callback(0, USB_D_EP_CB_XFER, (FUNC_PTR)usbdc_cb_ctl_done);
    4624:	4a09      	ldr	r2, [pc, #36]	; (464c <usbdc_reset+0x50>)
    4626:	2102      	movs	r1, #2
    4628:	2000      	movs	r0, #0
    462a:	47a0      	blx	r4
	usb_d_ep_enable(0);
    462c:	2000      	movs	r0, #0
    462e:	4b08      	ldr	r3, [pc, #32]	; (4650 <usbdc_reset+0x54>)
    4630:	4798      	blx	r3
}
    4632:	bd10      	pop	{r4, pc}
    4634:	0000440d 	.word	0x0000440d
    4638:	20001094 	.word	0x20001094
    463c:	00001d59 	.word	0x00001d59
    4640:	00001d45 	.word	0x00001d45
    4644:	00004ac5 	.word	0x00004ac5
    4648:	00001f61 	.word	0x00001f61
    464c:	00004541 	.word	0x00004541
    4650:	00001d85 	.word	0x00001d85

00004654 <usbd_event_cb>:
 * \brief Callback invoked on USB device events
 * \param[in] ev Event code.
 * \param[in] param Event parameter for event handling.
 */
static void usbd_event_cb(const enum usb_event ev, const uint32_t param)
{
    4654:	b510      	push	{r4, lr}
	(void)param;

	switch (ev) {
    4656:	2800      	cmp	r0, #0
    4658:	d002      	beq.n	4660 <usbd_event_cb+0xc>
    465a:	2801      	cmp	r0, #1
    465c:	d004      	beq.n	4668 <usbd_event_cb+0x14>
		break;

	default:
		break;
	}
}
    465e:	bd10      	pop	{r4, pc}
		usbdc_change_notify(USBDC_C_CONN, param);
    4660:	2000      	movs	r0, #0
    4662:	4b03      	ldr	r3, [pc, #12]	; (4670 <usbd_event_cb+0x1c>)
    4664:	4798      	blx	r3
		break;
    4666:	e7fa      	b.n	465e <usbd_event_cb+0xa>
		usbdc_reset();
    4668:	4b02      	ldr	r3, [pc, #8]	; (4674 <usbd_event_cb+0x20>)
    466a:	4798      	blx	r3
}
    466c:	e7f7      	b.n	465e <usbd_event_cb+0xa>
    466e:	46c0      	nop			; (mov r8, r8)
    4670:	0000444d 	.word	0x0000444d
    4674:	000045fd 	.word	0x000045fd

00004678 <usbdc_xfer>:

/**
 * \brief Issue USB device transfer
 */
int32_t usbdc_xfer(uint8_t ep, uint8_t *buf, uint32_t size, bool zlp)
{
    4678:	b510      	push	{r4, lr}
    467a:	b084      	sub	sp, #16
	struct usb_d_transfer xfer = {(uint8_t *)buf, size, ep, zlp};
    467c:	ac01      	add	r4, sp, #4
    467e:	9101      	str	r1, [sp, #4]
    4680:	9202      	str	r2, [sp, #8]
    4682:	7220      	strb	r0, [r4, #8]
    4684:	7263      	strb	r3, [r4, #9]
	return usb_d_ep_transfer(&xfer);
    4686:	0020      	movs	r0, r4
    4688:	4b01      	ldr	r3, [pc, #4]	; (4690 <usbdc_xfer+0x18>)
    468a:	4798      	blx	r3
}
    468c:	b004      	add	sp, #16
    468e:	bd10      	pop	{r4, pc}
    4690:	00001dd5 	.word	0x00001dd5

00004694 <usbdc_clear_ftr_req>:
{
    4694:	b510      	push	{r4, lr}
    4696:	0004      	movs	r4, r0
	switch (req->bmRequestType & USB_REQT_RECIP_MASK) {
    4698:	780a      	ldrb	r2, [r1, #0]
    469a:	231f      	movs	r3, #31
    469c:	4013      	ands	r3, r2
    469e:	2b02      	cmp	r3, #2
    46a0:	d112      	bne.n	46c8 <usbdc_clear_ftr_req+0x34>
		if (req->wLength != 0) {
    46a2:	798a      	ldrb	r2, [r1, #6]
    46a4:	79cb      	ldrb	r3, [r1, #7]
    46a6:	021b      	lsls	r3, r3, #8
    46a8:	4313      	orrs	r3, r2
    46aa:	d001      	beq.n	46b0 <usbdc_clear_ftr_req+0x1c>
			return false;
    46ac:	2000      	movs	r0, #0
    46ae:	e00c      	b.n	46ca <usbdc_clear_ftr_req+0x36>
		usb_d_ep_halt(req->wIndex & 0xFF, USB_EP_HALT_CLR);
    46b0:	7908      	ldrb	r0, [r1, #4]
    46b2:	2100      	movs	r1, #0
    46b4:	4b05      	ldr	r3, [pc, #20]	; (46cc <usbdc_clear_ftr_req+0x38>)
    46b6:	4798      	blx	r3
		usbdc_xfer(ep, NULL, 0, true);
    46b8:	2301      	movs	r3, #1
    46ba:	2200      	movs	r2, #0
    46bc:	2100      	movs	r1, #0
    46be:	0020      	movs	r0, r4
    46c0:	4c03      	ldr	r4, [pc, #12]	; (46d0 <usbdc_clear_ftr_req+0x3c>)
    46c2:	47a0      	blx	r4
		return true;
    46c4:	2001      	movs	r0, #1
    46c6:	e000      	b.n	46ca <usbdc_clear_ftr_req+0x36>
		return false;
    46c8:	2000      	movs	r0, #0
}
    46ca:	bd10      	pop	{r4, pc}
    46cc:	00001ef9 	.word	0x00001ef9
    46d0:	00004679 	.word	0x00004679

000046d4 <usbdc_set_ftr_req>:
{
    46d4:	b510      	push	{r4, lr}
    46d6:	0004      	movs	r4, r0
	switch (req->bmRequestType & USB_REQT_RECIP_MASK) {
    46d8:	780a      	ldrb	r2, [r1, #0]
    46da:	231f      	movs	r3, #31
    46dc:	4013      	ands	r3, r2
    46de:	2b02      	cmp	r3, #2
    46e0:	d112      	bne.n	4708 <usbdc_set_ftr_req+0x34>
		if (req->wLength != 0) {
    46e2:	798a      	ldrb	r2, [r1, #6]
    46e4:	79cb      	ldrb	r3, [r1, #7]
    46e6:	021b      	lsls	r3, r3, #8
    46e8:	4313      	orrs	r3, r2
    46ea:	d001      	beq.n	46f0 <usbdc_set_ftr_req+0x1c>
			return false;
    46ec:	2000      	movs	r0, #0
    46ee:	e00c      	b.n	470a <usbdc_set_ftr_req+0x36>
		usb_d_ep_halt(req->wIndex & 0xFF, USB_EP_HALT_SET);
    46f0:	7908      	ldrb	r0, [r1, #4]
    46f2:	2101      	movs	r1, #1
    46f4:	4b05      	ldr	r3, [pc, #20]	; (470c <usbdc_set_ftr_req+0x38>)
    46f6:	4798      	blx	r3
		usbdc_xfer(ep, NULL, 0, true);
    46f8:	2301      	movs	r3, #1
    46fa:	2200      	movs	r2, #0
    46fc:	2100      	movs	r1, #0
    46fe:	0020      	movs	r0, r4
    4700:	4c03      	ldr	r4, [pc, #12]	; (4710 <usbdc_set_ftr_req+0x3c>)
    4702:	47a0      	blx	r4
		return true;
    4704:	2001      	movs	r0, #1
    4706:	e000      	b.n	470a <usbdc_set_ftr_req+0x36>
		return false;
    4708:	2000      	movs	r0, #0
}
    470a:	bd10      	pop	{r4, pc}
    470c:	00001ef9 	.word	0x00001ef9
    4710:	00004679 	.word	0x00004679

00004714 <usbdc_set_interface>:
{
    4714:	b570      	push	{r4, r5, r6, lr}
    4716:	b082      	sub	sp, #8
    4718:	0005      	movs	r5, r0
    471a:	000c      	movs	r4, r1
		ifc = usb_find_cfg_desc(usbdc.desces.ls_fs->sod, usbdc.desces.ls_fs->eod, usbdc.cfg_value);
    471c:	4b2a      	ldr	r3, [pc, #168]	; (47c8 <usbdc_set_interface+0xb4>)
    471e:	681a      	ldr	r2, [r3, #0]
    4720:	6810      	ldr	r0, [r2, #0]
    4722:	6851      	ldr	r1, [r2, #4]
    4724:	7eda      	ldrb	r2, [r3, #27]
    4726:	4b29      	ldr	r3, [pc, #164]	; (47cc <usbdc_set_interface+0xb8>)
    4728:	4798      	blx	r3
	if (NULL == ifc) {
    472a:	2800      	cmp	r0, #0
    472c:	d045      	beq.n	47ba <usbdc_set_interface+0xa6>
	desc.sod = ifc;
    472e:	9000      	str	r0, [sp, #0]
	return (ptr[0] + (ptr[1] << 8));
    4730:	7881      	ldrb	r1, [r0, #2]
    4732:	78c3      	ldrb	r3, [r0, #3]
    4734:	021b      	lsls	r3, r3, #8
    4736:	18c9      	adds	r1, r1, r3
    4738:	b289      	uxth	r1, r1
	desc.eod = ifc + usb_cfg_desc_total_len(ifc);
    473a:	1841      	adds	r1, r0, r1
    473c:	9101      	str	r1, [sp, #4]
	if (NULL == (ifc = usb_find_desc(desc.sod, desc.eod, USB_DT_INTERFACE))) {
    473e:	2204      	movs	r2, #4
    4740:	4b23      	ldr	r3, [pc, #140]	; (47d0 <usbdc_set_interface+0xbc>)
    4742:	4798      	blx	r3
    4744:	2800      	cmp	r0, #0
    4746:	d10b      	bne.n	4760 <usbdc_set_interface+0x4c>
		return false;
    4748:	2000      	movs	r0, #0
    474a:	e039      	b.n	47c0 <usbdc_set_interface+0xac>
		desc.sod = usb_desc_next(desc.sod);
    474c:	9800      	ldr	r0, [sp, #0]
	return desc[0];
    474e:	7803      	ldrb	r3, [r0, #0]
	return (desc + usb_desc_len(desc));
    4750:	18c0      	adds	r0, r0, r3
    4752:	9000      	str	r0, [sp, #0]
		ifc      = usb_find_desc(desc.sod, desc.eod, USB_DT_INTERFACE);
    4754:	2204      	movs	r2, #4
    4756:	9901      	ldr	r1, [sp, #4]
    4758:	4b1d      	ldr	r3, [pc, #116]	; (47d0 <usbdc_set_interface+0xbc>)
    475a:	4798      	blx	r3
		if (NULL == ifc) {
    475c:	2800      	cmp	r0, #0
    475e:	d02e      	beq.n	47be <usbdc_set_interface+0xaa>
	while (ifc[2] != ifc_id || ifc[3] != alt_set) {
    4760:	7883      	ldrb	r3, [r0, #2]
    4762:	42a3      	cmp	r3, r4
    4764:	d1f2      	bne.n	474c <usbdc_set_interface+0x38>
    4766:	78c3      	ldrb	r3, [r0, #3]
    4768:	42ab      	cmp	r3, r5
    476a:	d1ef      	bne.n	474c <usbdc_set_interface+0x38>
	desc.sod = ifc;
    476c:	9000      	str	r0, [sp, #0]
	func     = (struct usbdf_driver *)usbdc.func_list.head;
    476e:	4b16      	ldr	r3, [pc, #88]	; (47c8 <usbdc_set_interface+0xb4>)
    4770:	691e      	ldr	r6, [r3, #16]
	while (NULL != func) {
    4772:	2e00      	cmp	r6, #0
    4774:	d01f      	beq.n	47b6 <usbdc_set_interface+0xa2>
		if (func->ctrl(func, USBDF_DISABLE, &desc)) {
    4776:	466a      	mov	r2, sp
    4778:	2101      	movs	r1, #1
    477a:	0030      	movs	r0, r6
    477c:	6873      	ldr	r3, [r6, #4]
    477e:	4798      	blx	r3
    4780:	2800      	cmp	r0, #0
    4782:	d001      	beq.n	4788 <usbdc_set_interface+0x74>
			func = func->next;
    4784:	6836      	ldr	r6, [r6, #0]
    4786:	e7f4      	b.n	4772 <usbdc_set_interface+0x5e>
		} else if (ERR_NONE == func->ctrl(func, USBDF_ENABLE, &desc)) {
    4788:	6873      	ldr	r3, [r6, #4]
    478a:	466a      	mov	r2, sp
    478c:	2100      	movs	r1, #0
    478e:	0030      	movs	r0, r6
    4790:	4798      	blx	r3
    4792:	2800      	cmp	r0, #0
    4794:	d116      	bne.n	47c4 <usbdc_set_interface+0xb0>
			if (alt_set) {
    4796:	2d00      	cmp	r5, #0
    4798:	d005      	beq.n	47a6 <usbdc_set_interface+0x92>
				usbdc.ifc_alt_map |= 1 << ifc_id;
    479a:	2201      	movs	r2, #1
    479c:	40a2      	lsls	r2, r4
    479e:	490a      	ldr	r1, [pc, #40]	; (47c8 <usbdc_set_interface+0xb4>)
    47a0:	7f4b      	ldrb	r3, [r1, #29]
    47a2:	4313      	orrs	r3, r2
    47a4:	774b      	strb	r3, [r1, #29]
			usbdc_xfer(0, NULL, 0, 0);
    47a6:	2300      	movs	r3, #0
    47a8:	2200      	movs	r2, #0
    47aa:	2100      	movs	r1, #0
    47ac:	2000      	movs	r0, #0
    47ae:	4c09      	ldr	r4, [pc, #36]	; (47d4 <usbdc_set_interface+0xc0>)
    47b0:	47a0      	blx	r4
			return true;
    47b2:	2001      	movs	r0, #1
    47b4:	e004      	b.n	47c0 <usbdc_set_interface+0xac>
	return false;
    47b6:	2000      	movs	r0, #0
    47b8:	e002      	b.n	47c0 <usbdc_set_interface+0xac>
		return false;
    47ba:	2000      	movs	r0, #0
    47bc:	e000      	b.n	47c0 <usbdc_set_interface+0xac>
			return false;
    47be:	2000      	movs	r0, #0
}
    47c0:	b002      	add	sp, #8
    47c2:	bd70      	pop	{r4, r5, r6, pc}
			return false;
    47c4:	2000      	movs	r0, #0
    47c6:	e7fb      	b.n	47c0 <usbdc_set_interface+0xac>
    47c8:	20001094 	.word	0x20001094
    47cc:	00004c65 	.word	0x00004c65
    47d0:	00004c21 	.word	0x00004c21
    47d4:	00004679 	.word	0x00004679

000047d8 <usbdc_set_req>:
{
    47d8:	b510      	push	{r4, lr}
    47da:	0004      	movs	r4, r0
	switch (req->bRequest) {
    47dc:	784b      	ldrb	r3, [r1, #1]
    47de:	2b0b      	cmp	r3, #11
    47e0:	d82d      	bhi.n	483e <usbdc_set_req+0x66>
    47e2:	009b      	lsls	r3, r3, #2
    47e4:	4a17      	ldr	r2, [pc, #92]	; (4844 <usbdc_set_req+0x6c>)
    47e6:	58d3      	ldr	r3, [r2, r3]
    47e8:	469f      	mov	pc, r3
		return (ERR_NONE == usbdc_xfer(ep, NULL, 0, true));
    47ea:	2301      	movs	r3, #1
    47ec:	2200      	movs	r2, #0
    47ee:	2100      	movs	r1, #0
    47f0:	4c15      	ldr	r4, [pc, #84]	; (4848 <usbdc_set_req+0x70>)
    47f2:	47a0      	blx	r4
    47f4:	4243      	negs	r3, r0
    47f6:	4158      	adcs	r0, r3
    47f8:	b2c0      	uxtb	r0, r0
}
    47fa:	bd10      	pop	{r4, pc}
		if (!usbdc_set_config(req->wValue)) {
    47fc:	7888      	ldrb	r0, [r1, #2]
    47fe:	4b13      	ldr	r3, [pc, #76]	; (484c <usbdc_set_req+0x74>)
    4800:	4798      	blx	r3
    4802:	2800      	cmp	r0, #0
    4804:	d0f9      	beq.n	47fa <usbdc_set_req+0x22>
		return (ERR_NONE == usbdc_xfer(ep, NULL, 0, true));
    4806:	2301      	movs	r3, #1
    4808:	2200      	movs	r2, #0
    480a:	2100      	movs	r1, #0
    480c:	0020      	movs	r0, r4
    480e:	4c0e      	ldr	r4, [pc, #56]	; (4848 <usbdc_set_req+0x70>)
    4810:	47a0      	blx	r4
    4812:	4243      	negs	r3, r0
    4814:	4158      	adcs	r0, r3
    4816:	b2c0      	uxtb	r0, r0
    4818:	e7ef      	b.n	47fa <usbdc_set_req+0x22>
		return usbdc_clear_ftr_req(ep, req);
    481a:	4b0d      	ldr	r3, [pc, #52]	; (4850 <usbdc_set_req+0x78>)
    481c:	4798      	blx	r3
    481e:	e7ec      	b.n	47fa <usbdc_set_req+0x22>
		return usbdc_set_ftr_req(ep, req);
    4820:	4b0c      	ldr	r3, [pc, #48]	; (4854 <usbdc_set_req+0x7c>)
    4822:	4798      	blx	r3
    4824:	e7e9      	b.n	47fa <usbdc_set_req+0x22>
		return usbdc_set_interface(req->wValue, req->wIndex);
    4826:	790a      	ldrb	r2, [r1, #4]
    4828:	794b      	ldrb	r3, [r1, #5]
    482a:	021b      	lsls	r3, r3, #8
    482c:	4313      	orrs	r3, r2
    482e:	788a      	ldrb	r2, [r1, #2]
    4830:	78c8      	ldrb	r0, [r1, #3]
    4832:	0200      	lsls	r0, r0, #8
    4834:	4310      	orrs	r0, r2
    4836:	0019      	movs	r1, r3
    4838:	4b07      	ldr	r3, [pc, #28]	; (4858 <usbdc_set_req+0x80>)
    483a:	4798      	blx	r3
    483c:	e7dd      	b.n	47fa <usbdc_set_req+0x22>
		return false;
    483e:	2000      	movs	r0, #0
    4840:	e7db      	b.n	47fa <usbdc_set_req+0x22>
    4842:	46c0      	nop			; (mov r8, r8)
    4844:	0000e2c4 	.word	0x0000e2c4
    4848:	00004679 	.word	0x00004679
    484c:	00004569 	.word	0x00004569
    4850:	00004695 	.word	0x00004695
    4854:	000046d5 	.word	0x000046d5
    4858:	00004715 	.word	0x00004715

0000485c <usbdc_get_dev_desc>:
{
    485c:	b570      	push	{r4, r5, r6, lr}
    485e:	0005      	movs	r5, r0
	uint16_t length   = req->wLength;
    4860:	798b      	ldrb	r3, [r1, #6]
    4862:	79cc      	ldrb	r4, [r1, #7]
    4864:	0224      	lsls	r4, r4, #8
    4866:	431c      	orrs	r4, r3
	if (length > 0x12) {
    4868:	2c12      	cmp	r4, #18
    486a:	d900      	bls.n	486e <usbdc_get_dev_desc+0x12>
		length = 0x12;
    486c:	2412      	movs	r4, #18
		dev_desc = usb_find_desc(usbdc.desces.ls_fs->sod, usbdc.desces.ls_fs->eod, USB_DT_DEVICE);
    486e:	4b0b      	ldr	r3, [pc, #44]	; (489c <usbdc_get_dev_desc+0x40>)
    4870:	681b      	ldr	r3, [r3, #0]
    4872:	6818      	ldr	r0, [r3, #0]
    4874:	6859      	ldr	r1, [r3, #4]
    4876:	2201      	movs	r2, #1
    4878:	4b09      	ldr	r3, [pc, #36]	; (48a0 <usbdc_get_dev_desc+0x44>)
    487a:	4798      	blx	r3
	if (!dev_desc) {
    487c:	2800      	cmp	r0, #0
    487e:	d00b      	beq.n	4898 <usbdc_get_dev_desc+0x3c>
	if (ERR_NONE != usbdc_xfer(ep, dev_desc, length, false)) {
    4880:	2300      	movs	r3, #0
    4882:	0022      	movs	r2, r4
    4884:	0001      	movs	r1, r0
    4886:	0028      	movs	r0, r5
    4888:	4c06      	ldr	r4, [pc, #24]	; (48a4 <usbdc_get_dev_desc+0x48>)
    488a:	47a0      	blx	r4
    488c:	2800      	cmp	r0, #0
    488e:	d101      	bne.n	4894 <usbdc_get_dev_desc+0x38>
	return true;
    4890:	2001      	movs	r0, #1
}
    4892:	bd70      	pop	{r4, r5, r6, pc}
		return false;
    4894:	2000      	movs	r0, #0
    4896:	e7fc      	b.n	4892 <usbdc_get_dev_desc+0x36>
		return false;
    4898:	2000      	movs	r0, #0
    489a:	e7fa      	b.n	4892 <usbdc_get_dev_desc+0x36>
    489c:	20001094 	.word	0x20001094
    48a0:	00004c21 	.word	0x00004c21
    48a4:	00004679 	.word	0x00004679

000048a8 <usbdc_get_cfg_desc>:
{
    48a8:	b570      	push	{r4, r5, r6, lr}
    48aa:	0005      	movs	r5, r0
	uint16_t length   = req->wLength;
    48ac:	798b      	ldrb	r3, [r1, #6]
    48ae:	79ce      	ldrb	r6, [r1, #7]
    48b0:	0236      	lsls	r6, r6, #8
    48b2:	431e      	orrs	r6, r3
	uint8_t  index    = req->wValue & 0x00FF;
    48b4:	788a      	ldrb	r2, [r1, #2]
	bool     need_zlp = !(length & (usbdc.ctrl_size - 1));
    48b6:	4b13      	ldr	r3, [pc, #76]	; (4904 <usbdc_get_cfg_desc+0x5c>)
    48b8:	7f1c      	ldrb	r4, [r3, #28]
    48ba:	3c01      	subs	r4, #1
    48bc:	4034      	ands	r4, r6
    48be:	4261      	negs	r1, r4
    48c0:	414c      	adcs	r4, r1
    48c2:	b2e4      	uxtb	r4, r4
		cfg_desc = usb_find_cfg_desc(usbdc.desces.ls_fs->sod, usbdc.desces.ls_fs->eod, index + 1);
    48c4:	681b      	ldr	r3, [r3, #0]
    48c6:	6818      	ldr	r0, [r3, #0]
    48c8:	6859      	ldr	r1, [r3, #4]
    48ca:	3201      	adds	r2, #1
    48cc:	b2d2      	uxtb	r2, r2
    48ce:	4b0e      	ldr	r3, [pc, #56]	; (4908 <usbdc_get_cfg_desc+0x60>)
    48d0:	4798      	blx	r3
	if (NULL == cfg_desc) {
    48d2:	2800      	cmp	r0, #0
    48d4:	d013      	beq.n	48fe <usbdc_get_cfg_desc+0x56>
	return (ptr[0] + (ptr[1] << 8));
    48d6:	7882      	ldrb	r2, [r0, #2]
    48d8:	78c3      	ldrb	r3, [r0, #3]
    48da:	021b      	lsls	r3, r3, #8
    48dc:	18d2      	adds	r2, r2, r3
    48de:	b292      	uxth	r2, r2
	if (length <= total_len) {
    48e0:	4296      	cmp	r6, r2
    48e2:	d801      	bhi.n	48e8 <usbdc_get_cfg_desc+0x40>
	uint16_t length   = req->wLength;
    48e4:	0032      	movs	r2, r6
		need_zlp = false;
    48e6:	2400      	movs	r4, #0
	if (ERR_NONE != usbdc_xfer(ep, cfg_desc, length, need_zlp)) {
    48e8:	0023      	movs	r3, r4
    48ea:	0001      	movs	r1, r0
    48ec:	0028      	movs	r0, r5
    48ee:	4c07      	ldr	r4, [pc, #28]	; (490c <usbdc_get_cfg_desc+0x64>)
    48f0:	47a0      	blx	r4
    48f2:	2800      	cmp	r0, #0
    48f4:	d101      	bne.n	48fa <usbdc_get_cfg_desc+0x52>
	return true;
    48f6:	2001      	movs	r0, #1
}
    48f8:	bd70      	pop	{r4, r5, r6, pc}
		return false;
    48fa:	2000      	movs	r0, #0
    48fc:	e7fc      	b.n	48f8 <usbdc_get_cfg_desc+0x50>
		return false;
    48fe:	2000      	movs	r0, #0
    4900:	e7fa      	b.n	48f8 <usbdc_get_cfg_desc+0x50>
    4902:	46c0      	nop			; (mov r8, r8)
    4904:	20001094 	.word	0x20001094
    4908:	00004c65 	.word	0x00004c65
    490c:	00004679 	.word	0x00004679

00004910 <usbdc_get_str_desc>:
{
    4910:	b570      	push	{r4, r5, r6, lr}
    4912:	0005      	movs	r5, r0
	uint16_t length   = req->wLength;
    4914:	798b      	ldrb	r3, [r1, #6]
    4916:	79ce      	ldrb	r6, [r1, #7]
    4918:	0236      	lsls	r6, r6, #8
    491a:	431e      	orrs	r6, r3
	uint8_t  index    = req->wValue & 0x00FF;
    491c:	788a      	ldrb	r2, [r1, #2]
	bool     need_zlp = !(length & (usbdc.ctrl_size - 1));
    491e:	4b10      	ldr	r3, [pc, #64]	; (4960 <usbdc_get_str_desc+0x50>)
    4920:	7f1c      	ldrb	r4, [r3, #28]
    4922:	3c01      	subs	r4, #1
    4924:	4034      	ands	r4, r6
    4926:	4261      	negs	r1, r4
    4928:	414c      	adcs	r4, r1
    492a:	b2e4      	uxtb	r4, r4
	str_desc = usb_find_str_desc(usbdc.desces.ls_fs->sod, usbdc.desces.ls_fs->eod, index);
    492c:	681b      	ldr	r3, [r3, #0]
    492e:	6818      	ldr	r0, [r3, #0]
    4930:	6859      	ldr	r1, [r3, #4]
    4932:	4b0c      	ldr	r3, [pc, #48]	; (4964 <usbdc_get_str_desc+0x54>)
    4934:	4798      	blx	r3
	if (NULL == str_desc) {
    4936:	2800      	cmp	r0, #0
    4938:	d00f      	beq.n	495a <usbdc_get_str_desc+0x4a>
	if (length <= str_desc[0]) {
    493a:	7802      	ldrb	r2, [r0, #0]
    493c:	4296      	cmp	r6, r2
    493e:	d801      	bhi.n	4944 <usbdc_get_str_desc+0x34>
	uint16_t length   = req->wLength;
    4940:	0032      	movs	r2, r6
		need_zlp = false;
    4942:	2400      	movs	r4, #0
	if (ERR_NONE != usbdc_xfer(ep, str_desc, length, need_zlp)) {
    4944:	0023      	movs	r3, r4
    4946:	0001      	movs	r1, r0
    4948:	0028      	movs	r0, r5
    494a:	4c07      	ldr	r4, [pc, #28]	; (4968 <usbdc_get_str_desc+0x58>)
    494c:	47a0      	blx	r4
    494e:	2800      	cmp	r0, #0
    4950:	d101      	bne.n	4956 <usbdc_get_str_desc+0x46>
	return true;
    4952:	2001      	movs	r0, #1
}
    4954:	bd70      	pop	{r4, r5, r6, pc}
		return false;
    4956:	2000      	movs	r0, #0
    4958:	e7fc      	b.n	4954 <usbdc_get_str_desc+0x44>
		return false;
    495a:	2000      	movs	r0, #0
    495c:	e7fa      	b.n	4954 <usbdc_get_str_desc+0x44>
    495e:	46c0      	nop			; (mov r8, r8)
    4960:	20001094 	.word	0x20001094
    4964:	00004ca9 	.word	0x00004ca9
    4968:	00004679 	.word	0x00004679

0000496c <usbdc_get_desc_req>:
{
    496c:	b510      	push	{r4, lr}
	uint8_t type = (uint8_t)(req->wValue >> 8);
    496e:	78cb      	ldrb	r3, [r1, #3]
	switch (type) {
    4970:	2b02      	cmp	r3, #2
    4972:	d008      	beq.n	4986 <usbdc_get_desc_req+0x1a>
    4974:	2b03      	cmp	r3, #3
    4976:	d009      	beq.n	498c <usbdc_get_desc_req+0x20>
    4978:	2b01      	cmp	r3, #1
    497a:	d001      	beq.n	4980 <usbdc_get_desc_req+0x14>
	return false;
    497c:	2000      	movs	r0, #0
    497e:	e001      	b.n	4984 <usbdc_get_desc_req+0x18>
		return usbdc_get_dev_desc(ep, req);
    4980:	4b04      	ldr	r3, [pc, #16]	; (4994 <usbdc_get_desc_req+0x28>)
    4982:	4798      	blx	r3
}
    4984:	bd10      	pop	{r4, pc}
		return usbdc_get_cfg_desc(ep, req);
    4986:	4b04      	ldr	r3, [pc, #16]	; (4998 <usbdc_get_desc_req+0x2c>)
    4988:	4798      	blx	r3
    498a:	e7fb      	b.n	4984 <usbdc_get_desc_req+0x18>
		return usbdc_get_str_desc(ep, req);
    498c:	4b03      	ldr	r3, [pc, #12]	; (499c <usbdc_get_desc_req+0x30>)
    498e:	4798      	blx	r3
    4990:	e7f8      	b.n	4984 <usbdc_get_desc_req+0x18>
    4992:	46c0      	nop			; (mov r8, r8)
    4994:	0000485d 	.word	0x0000485d
    4998:	000048a9 	.word	0x000048a9
    499c:	00004911 	.word	0x00004911

000049a0 <usbdc_get_status_req>:
{
    49a0:	b530      	push	{r4, r5, lr}
    49a2:	b083      	sub	sp, #12
    49a4:	0004      	movs	r4, r0
	switch (req->bmRequestType & USB_REQT_RECIP_MASK) {
    49a6:	780a      	ldrb	r2, [r1, #0]
    49a8:	231f      	movs	r3, #31
    49aa:	4013      	ands	r3, r2
    49ac:	b2da      	uxtb	r2, r3
    49ae:	2a01      	cmp	r2, #1
    49b0:	d903      	bls.n	49ba <usbdc_get_status_req+0x1a>
    49b2:	2b02      	cmp	r3, #2
    49b4:	d012      	beq.n	49dc <usbdc_get_status_req+0x3c>
		return false;
    49b6:	2000      	movs	r0, #0
    49b8:	e00e      	b.n	49d8 <usbdc_get_status_req+0x38>
		st = 0;
    49ba:	2300      	movs	r3, #0
    49bc:	9301      	str	r3, [sp, #4]
	memcpy(usbdc.ctrl_buf, &st, 2);
    49be:	4d0d      	ldr	r5, [pc, #52]	; (49f4 <usbdc_get_status_req+0x54>)
    49c0:	2202      	movs	r2, #2
    49c2:	a901      	add	r1, sp, #4
    49c4:	6968      	ldr	r0, [r5, #20]
    49c6:	4b0c      	ldr	r3, [pc, #48]	; (49f8 <usbdc_get_status_req+0x58>)
    49c8:	4798      	blx	r3
	usbdc_xfer(ep, usbdc.ctrl_buf, 2, false);
    49ca:	6969      	ldr	r1, [r5, #20]
    49cc:	2300      	movs	r3, #0
    49ce:	2202      	movs	r2, #2
    49d0:	0020      	movs	r0, r4
    49d2:	4c0a      	ldr	r4, [pc, #40]	; (49fc <usbdc_get_status_req+0x5c>)
    49d4:	47a0      	blx	r4
	return true;
    49d6:	2001      	movs	r0, #1
}
    49d8:	b003      	add	sp, #12
    49da:	bd30      	pop	{r4, r5, pc}
		st = usb_d_ep_halt(req->wIndex & 0xFF, USB_EP_HALT_GET);
    49dc:	7908      	ldrb	r0, [r1, #4]
    49de:	2102      	movs	r1, #2
    49e0:	4b07      	ldr	r3, [pc, #28]	; (4a00 <usbdc_get_status_req+0x60>)
    49e2:	4798      	blx	r3
		if (st < 0) {
    49e4:	2800      	cmp	r0, #0
    49e6:	db03      	blt.n	49f0 <usbdc_get_status_req+0x50>
		st = st & 0x1;
    49e8:	2301      	movs	r3, #1
    49ea:	4018      	ands	r0, r3
    49ec:	9001      	str	r0, [sp, #4]
		break;
    49ee:	e7e6      	b.n	49be <usbdc_get_status_req+0x1e>
			return false;
    49f0:	2000      	movs	r0, #0
    49f2:	e7f1      	b.n	49d8 <usbdc_get_status_req+0x38>
    49f4:	20001094 	.word	0x20001094
    49f8:	0000926d 	.word	0x0000926d
    49fc:	00004679 	.word	0x00004679
    4a00:	00001ef9 	.word	0x00001ef9

00004a04 <usbdc_get_interface>:
{
    4a04:	b570      	push	{r4, r5, r6, lr}
    4a06:	0005      	movs	r5, r0
	struct usbdf_driver *func = (struct usbdf_driver *)usbdc.func_list.head;
    4a08:	4b16      	ldr	r3, [pc, #88]	; (4a64 <usbdc_get_interface+0x60>)
    4a0a:	691c      	ldr	r4, [r3, #16]
	if (!(usbdc.ifc_alt_map & (1 << req->wIndex))) {
    4a0c:	7f5a      	ldrb	r2, [r3, #29]
    4a0e:	7901      	ldrb	r1, [r0, #4]
    4a10:	7943      	ldrb	r3, [r0, #5]
    4a12:	021b      	lsls	r3, r3, #8
    4a14:	430b      	orrs	r3, r1
    4a16:	411a      	asrs	r2, r3
    4a18:	07d3      	lsls	r3, r2, #31
    4a1a:	d50a      	bpl.n	4a32 <usbdc_get_interface+0x2e>
	while (NULL != func) {
    4a1c:	2c00      	cmp	r4, #0
    4a1e:	d01f      	beq.n	4a60 <usbdc_get_interface+0x5c>
		if (0 > (rc = func->ctrl(func, USBDF_GET_IFACE, req))) {
    4a20:	002a      	movs	r2, r5
    4a22:	2102      	movs	r1, #2
    4a24:	0020      	movs	r0, r4
    4a26:	6863      	ldr	r3, [r4, #4]
    4a28:	4798      	blx	r3
    4a2a:	2800      	cmp	r0, #0
    4a2c:	da0d      	bge.n	4a4a <usbdc_get_interface+0x46>
			func = func->next;
    4a2e:	6824      	ldr	r4, [r4, #0]
    4a30:	e7f4      	b.n	4a1c <usbdc_get_interface+0x18>
		usbdc.ctrl_buf[0] = 0;
    4a32:	4b0c      	ldr	r3, [pc, #48]	; (4a64 <usbdc_get_interface+0x60>)
    4a34:	2200      	movs	r2, #0
    4a36:	6959      	ldr	r1, [r3, #20]
    4a38:	700a      	strb	r2, [r1, #0]
		usbdc_xfer(0, usbdc.ctrl_buf, 1, false);
    4a3a:	6959      	ldr	r1, [r3, #20]
    4a3c:	2300      	movs	r3, #0
    4a3e:	3201      	adds	r2, #1
    4a40:	2000      	movs	r0, #0
    4a42:	4c09      	ldr	r4, [pc, #36]	; (4a68 <usbdc_get_interface+0x64>)
    4a44:	47a0      	blx	r4
		return true;
    4a46:	2001      	movs	r0, #1
    4a48:	e00b      	b.n	4a62 <usbdc_get_interface+0x5e>
			usbdc.ctrl_buf[0] = (uint8_t)rc;
    4a4a:	4b06      	ldr	r3, [pc, #24]	; (4a64 <usbdc_get_interface+0x60>)
    4a4c:	695a      	ldr	r2, [r3, #20]
    4a4e:	7010      	strb	r0, [r2, #0]
			usbdc_xfer(0, usbdc.ctrl_buf, 1, false);
    4a50:	6959      	ldr	r1, [r3, #20]
    4a52:	2300      	movs	r3, #0
    4a54:	2201      	movs	r2, #1
    4a56:	2000      	movs	r0, #0
    4a58:	4c03      	ldr	r4, [pc, #12]	; (4a68 <usbdc_get_interface+0x64>)
    4a5a:	47a0      	blx	r4
			return true;
    4a5c:	2001      	movs	r0, #1
    4a5e:	e000      	b.n	4a62 <usbdc_get_interface+0x5e>
	return false;
    4a60:	2000      	movs	r0, #0
}
    4a62:	bd70      	pop	{r4, r5, r6, pc}
    4a64:	20001094 	.word	0x20001094
    4a68:	00004679 	.word	0x00004679

00004a6c <usbdc_get_req>:
{
    4a6c:	b510      	push	{r4, lr}
	switch (req->bRequest) {
    4a6e:	784b      	ldrb	r3, [r1, #1]
    4a70:	2b06      	cmp	r3, #6
    4a72:	d00d      	beq.n	4a90 <usbdc_get_req+0x24>
    4a74:	d907      	bls.n	4a86 <usbdc_get_req+0x1a>
    4a76:	2b08      	cmp	r3, #8
    4a78:	d00d      	beq.n	4a96 <usbdc_get_req+0x2a>
    4a7a:	2b0a      	cmp	r3, #10
    4a7c:	d116      	bne.n	4aac <usbdc_get_req+0x40>
		return usbdc_get_interface(req);
    4a7e:	0008      	movs	r0, r1
    4a80:	4b0b      	ldr	r3, [pc, #44]	; (4ab0 <usbdc_get_req+0x44>)
    4a82:	4798      	blx	r3
    4a84:	e006      	b.n	4a94 <usbdc_get_req+0x28>
	switch (req->bRequest) {
    4a86:	2b00      	cmp	r3, #0
    4a88:	d110      	bne.n	4aac <usbdc_get_req+0x40>
		return usbdc_get_status_req(ep, req);
    4a8a:	4b0a      	ldr	r3, [pc, #40]	; (4ab4 <usbdc_get_req+0x48>)
    4a8c:	4798      	blx	r3
    4a8e:	e001      	b.n	4a94 <usbdc_get_req+0x28>
		return usbdc_get_desc_req(ep, req);
    4a90:	4b09      	ldr	r3, [pc, #36]	; (4ab8 <usbdc_get_req+0x4c>)
    4a92:	4798      	blx	r3
}
    4a94:	bd10      	pop	{r4, pc}
		*(uint8_t *)usbdc.ctrl_buf = usbdc.cfg_value;
    4a96:	4b09      	ldr	r3, [pc, #36]	; (4abc <usbdc_get_req+0x50>)
    4a98:	7eda      	ldrb	r2, [r3, #27]
    4a9a:	6959      	ldr	r1, [r3, #20]
    4a9c:	700a      	strb	r2, [r1, #0]
		usbdc_xfer(ep, usbdc.ctrl_buf, 1, false);
    4a9e:	6959      	ldr	r1, [r3, #20]
    4aa0:	2300      	movs	r3, #0
    4aa2:	2201      	movs	r2, #1
    4aa4:	4c06      	ldr	r4, [pc, #24]	; (4ac0 <usbdc_get_req+0x54>)
    4aa6:	47a0      	blx	r4
		return true;
    4aa8:	2001      	movs	r0, #1
    4aaa:	e7f3      	b.n	4a94 <usbdc_get_req+0x28>
		return false;
    4aac:	2000      	movs	r0, #0
    4aae:	e7f1      	b.n	4a94 <usbdc_get_req+0x28>
    4ab0:	00004a05 	.word	0x00004a05
    4ab4:	000049a1 	.word	0x000049a1
    4ab8:	0000496d 	.word	0x0000496d
    4abc:	20001094 	.word	0x20001094
    4ac0:	00004679 	.word	0x00004679

00004ac4 <usbdc_cb_ctl_req>:
{
    4ac4:	b570      	push	{r4, r5, r6, lr}
    4ac6:	0005      	movs	r5, r0
    4ac8:	000c      	movs	r4, r1
	switch (usbdc_request_handler(ep, req, USB_SETUP_STAGE)) {
    4aca:	2200      	movs	r2, #0
    4acc:	4b0d      	ldr	r3, [pc, #52]	; (4b04 <usbdc_cb_ctl_req+0x40>)
    4ace:	4798      	blx	r3
    4ad0:	1c43      	adds	r3, r0, #1
    4ad2:	d014      	beq.n	4afe <usbdc_cb_ctl_req+0x3a>
    4ad4:	2801      	cmp	r0, #1
    4ad6:	d013      	beq.n	4b00 <usbdc_cb_ctl_req+0x3c>
	switch (req->bmRequestType & (USB_REQT_TYPE_MASK | USB_REQT_DIR_IN)) {
    4ad8:	7823      	ldrb	r3, [r4, #0]
    4ada:	221f      	movs	r2, #31
    4adc:	4393      	bics	r3, r2
    4ade:	d004      	beq.n	4aea <usbdc_cb_ctl_req+0x26>
    4ae0:	b2db      	uxtb	r3, r3
    4ae2:	2b80      	cmp	r3, #128	; 0x80
    4ae4:	d006      	beq.n	4af4 <usbdc_cb_ctl_req+0x30>
		return false;
    4ae6:	2000      	movs	r0, #0
    4ae8:	e00a      	b.n	4b00 <usbdc_cb_ctl_req+0x3c>
		return usbdc_set_req(ep, req);
    4aea:	0021      	movs	r1, r4
    4aec:	0028      	movs	r0, r5
    4aee:	4b06      	ldr	r3, [pc, #24]	; (4b08 <usbdc_cb_ctl_req+0x44>)
    4af0:	4798      	blx	r3
    4af2:	e005      	b.n	4b00 <usbdc_cb_ctl_req+0x3c>
		return usbdc_get_req(ep, req);
    4af4:	0021      	movs	r1, r4
    4af6:	0028      	movs	r0, r5
    4af8:	4b04      	ldr	r3, [pc, #16]	; (4b0c <usbdc_cb_ctl_req+0x48>)
    4afa:	4798      	blx	r3
    4afc:	e000      	b.n	4b00 <usbdc_cb_ctl_req+0x3c>
		return false;
    4afe:	2000      	movs	r0, #0
}
    4b00:	bd70      	pop	{r4, r5, r6, pc}
    4b02:	46c0      	nop			; (mov r8, r8)
    4b04:	00004475 	.word	0x00004475
    4b08:	000047d9 	.word	0x000047d9
    4b0c:	00004a6d 	.word	0x00004a6d

00004b10 <usbdc_register_handler>:

/**
 * \brief Register the handler
 */
void usbdc_register_handler(enum usbdc_handler_type type, const struct usbdc_handler *h)
{
    4b10:	b510      	push	{r4, lr}
	switch (type) {
    4b12:	2801      	cmp	r0, #1
    4b14:	d009      	beq.n	4b2a <usbdc_register_handler+0x1a>
    4b16:	2800      	cmp	r0, #0
    4b18:	d002      	beq.n	4b20 <usbdc_register_handler+0x10>
    4b1a:	2802      	cmp	r0, #2
    4b1c:	d00a      	beq.n	4b34 <usbdc_register_handler+0x24>
		list_insert_at_end(&usbdc.handlers.change_list, (void *)h);
		break;
	default:
		break;
	}
}
    4b1e:	bd10      	pop	{r4, pc}
		list_insert_at_end(&usbdc.handlers.sof_list, (void *)h);
    4b20:	4807      	ldr	r0, [pc, #28]	; (4b40 <usbdc_register_handler+0x30>)
    4b22:	3004      	adds	r0, #4
    4b24:	4b07      	ldr	r3, [pc, #28]	; (4b44 <usbdc_register_handler+0x34>)
    4b26:	4798      	blx	r3
		break;
    4b28:	e7f9      	b.n	4b1e <usbdc_register_handler+0xe>
		list_insert_at_end(&usbdc.handlers.req_list, (void *)h);
    4b2a:	4805      	ldr	r0, [pc, #20]	; (4b40 <usbdc_register_handler+0x30>)
    4b2c:	3008      	adds	r0, #8
    4b2e:	4b05      	ldr	r3, [pc, #20]	; (4b44 <usbdc_register_handler+0x34>)
    4b30:	4798      	blx	r3
		break;
    4b32:	e7f4      	b.n	4b1e <usbdc_register_handler+0xe>
		list_insert_at_end(&usbdc.handlers.change_list, (void *)h);
    4b34:	4802      	ldr	r0, [pc, #8]	; (4b40 <usbdc_register_handler+0x30>)
    4b36:	300c      	adds	r0, #12
    4b38:	4b02      	ldr	r3, [pc, #8]	; (4b44 <usbdc_register_handler+0x34>)
    4b3a:	4798      	blx	r3
}
    4b3c:	e7ef      	b.n	4b1e <usbdc_register_handler+0xe>
    4b3e:	46c0      	nop			; (mov r8, r8)
    4b40:	20001094 	.word	0x20001094
    4b44:	00002005 	.word	0x00002005

00004b48 <usbdc_init>:

/**
 * \brief Initialize the USB device core driver
 */
int32_t usbdc_init(uint8_t *ctrl_buf)
{
    4b48:	b570      	push	{r4, r5, r6, lr}
    4b4a:	0004      	movs	r4, r0
	ASSERT(ctrl_buf);
    4b4c:	1e43      	subs	r3, r0, #1
    4b4e:	4198      	sbcs	r0, r3
    4b50:	b2c0      	uxtb	r0, r0
    4b52:	4a0c      	ldr	r2, [pc, #48]	; (4b84 <usbdc_init+0x3c>)
    4b54:	490c      	ldr	r1, [pc, #48]	; (4b88 <usbdc_init+0x40>)
    4b56:	4b0d      	ldr	r3, [pc, #52]	; (4b8c <usbdc_init+0x44>)
    4b58:	4798      	blx	r3

	int32_t rc;

	rc = usb_d_init();
    4b5a:	4b0d      	ldr	r3, [pc, #52]	; (4b90 <usbdc_init+0x48>)
    4b5c:	4798      	blx	r3
	if (rc < 0) {
    4b5e:	2800      	cmp	r0, #0
    4b60:	db0e      	blt.n	4b80 <usbdc_init+0x38>
		return rc;
	}

	memset(&usbdc, 0, sizeof(usbdc));
    4b62:	4d0c      	ldr	r5, [pc, #48]	; (4b94 <usbdc_init+0x4c>)
    4b64:	2220      	movs	r2, #32
    4b66:	2100      	movs	r1, #0
    4b68:	0028      	movs	r0, r5
    4b6a:	4b0b      	ldr	r3, [pc, #44]	; (4b98 <usbdc_init+0x50>)
    4b6c:	4798      	blx	r3
	usbdc.ctrl_buf = ctrl_buf;
    4b6e:	616c      	str	r4, [r5, #20]
	usb_d_register_callback(USB_D_CB_SOF, (FUNC_PTR)usbd_sof_cb);
    4b70:	490a      	ldr	r1, [pc, #40]	; (4b9c <usbdc_init+0x54>)
    4b72:	2000      	movs	r0, #0
    4b74:	4c0a      	ldr	r4, [pc, #40]	; (4ba0 <usbdc_init+0x58>)
    4b76:	47a0      	blx	r4
	usb_d_register_callback(USB_D_CB_EVENT, (FUNC_PTR)usbd_event_cb);
    4b78:	490a      	ldr	r1, [pc, #40]	; (4ba4 <usbdc_init+0x5c>)
    4b7a:	2001      	movs	r0, #1
    4b7c:	47a0      	blx	r4

	return 0;
    4b7e:	2000      	movs	r0, #0
}
    4b80:	bd70      	pop	{r4, r5, r6, pc}
    4b82:	46c0      	nop			; (mov r8, r8)
    4b84:	00000355 	.word	0x00000355
    4b88:	0000e2f4 	.word	0x0000e2f4
    4b8c:	00001fb1 	.word	0x00001fb1
    4b90:	00001c55 	.word	0x00001c55
    4b94:	20001094 	.word	0x20001094
    4b98:	000092f1 	.word	0x000092f1
    4b9c:	000044b1 	.word	0x000044b1
    4ba0:	00001cc1 	.word	0x00001cc1
    4ba4:	00004655 	.word	0x00004655

00004ba8 <usbdc_register_function>:
 * \brief Register/unregister function support of a USB device function
 *
 * Must be invoked when USB device is stopped.
 */
void usbdc_register_function(struct usbdf_driver *func)
{
    4ba8:	b510      	push	{r4, lr}
    4baa:	0001      	movs	r1, r0
	list_insert_at_end(&usbdc.func_list, func);
    4bac:	4802      	ldr	r0, [pc, #8]	; (4bb8 <usbdc_register_function+0x10>)
    4bae:	3010      	adds	r0, #16
    4bb0:	4b02      	ldr	r3, [pc, #8]	; (4bbc <usbdc_register_function+0x14>)
    4bb2:	4798      	blx	r3
}
    4bb4:	bd10      	pop	{r4, pc}
    4bb6:	46c0      	nop			; (mov r8, r8)
    4bb8:	20001094 	.word	0x20001094
    4bbc:	00002005 	.word	0x00002005

00004bc0 <usbdc_start>:

/**
 * \brief Start the USB device driver with specific descriptors set
 */
int32_t usbdc_start(struct usbd_descriptors *desces)
{
    4bc0:	b510      	push	{r4, lr}
	if (usbdc.state >= USBD_S_POWER) {
    4bc2:	4b0b      	ldr	r3, [pc, #44]	; (4bf0 <usbdc_start+0x30>)
    4bc4:	7e9b      	ldrb	r3, [r3, #26]
    4bc6:	2b00      	cmp	r3, #0
    4bc8:	d10c      	bne.n	4be4 <usbdc_start+0x24>
		return ERR_BUSY;
	}

	if (desces) {
    4bca:	2800      	cmp	r0, #0
    4bcc:	d00d      	beq.n	4bea <usbdc_start+0x2a>
		usbdc.desces.ls_fs = desces;
    4bce:	4b08      	ldr	r3, [pc, #32]	; (4bf0 <usbdc_start+0x30>)
    4bd0:	6018      	str	r0, [r3, #0]
#endif
	} else {
		return ERR_BAD_DATA;
	}

	usbdc.ctrl_size = desces->sod[7];
    4bd2:	6802      	ldr	r2, [r0, #0]
    4bd4:	79d2      	ldrb	r2, [r2, #7]
    4bd6:	771a      	strb	r2, [r3, #28]
	usbdc.state     = USBD_S_POWER;
    4bd8:	2201      	movs	r2, #1
    4bda:	769a      	strb	r2, [r3, #26]
	usb_d_enable();
    4bdc:	4b05      	ldr	r3, [pc, #20]	; (4bf4 <usbdc_start+0x34>)
    4bde:	4798      	blx	r3
	return ERR_NONE;
    4be0:	2000      	movs	r0, #0
}
    4be2:	bd10      	pop	{r4, pc}
		return ERR_BUSY;
    4be4:	2004      	movs	r0, #4
    4be6:	4240      	negs	r0, r0
    4be8:	e7fb      	b.n	4be2 <usbdc_start+0x22>
		return ERR_BAD_DATA;
    4bea:	2009      	movs	r0, #9
    4bec:	4240      	negs	r0, r0
    4bee:	e7f8      	b.n	4be2 <usbdc_start+0x22>
    4bf0:	20001094 	.word	0x20001094
    4bf4:	00001ccd 	.word	0x00001ccd

00004bf8 <usbdc_attach>:

/**
 * \brief Attach the USB device to host
 */
void usbdc_attach(void)
{
    4bf8:	b510      	push	{r4, lr}
	usb_d_attach();
    4bfa:	4b01      	ldr	r3, [pc, #4]	; (4c00 <usbdc_attach+0x8>)
    4bfc:	4798      	blx	r3
}
    4bfe:	bd10      	pop	{r4, pc}
    4c00:	00001cd9 	.word	0x00001cd9

00004c04 <usbdc_get_ctrl_buffer>:
/**
 * \brief Return USB Device endpoint0 buffer
 */
uint8_t *usbdc_get_ctrl_buffer(void)
{
	return usbdc.ctrl_buf;
    4c04:	4b01      	ldr	r3, [pc, #4]	; (4c0c <usbdc_get_ctrl_buffer+0x8>)
    4c06:	6958      	ldr	r0, [r3, #20]
}
    4c08:	4770      	bx	lr
    4c0a:	46c0      	nop			; (mov r8, r8)
    4c0c:	20001094 	.word	0x20001094

00004c10 <usbdc_get_state>:
/**
 * \brief Return current USB state
 */
uint8_t usbdc_get_state(void)
{
	if (usbdc.state & USBD_S_SUSPEND) {
    4c10:	4b02      	ldr	r3, [pc, #8]	; (4c1c <usbdc_get_state+0xc>)
    4c12:	7e98      	ldrb	r0, [r3, #26]
    4c14:	06c3      	lsls	r3, r0, #27
    4c16:	d500      	bpl.n	4c1a <usbdc_get_state+0xa>
		return USBD_S_SUSPEND;
    4c18:	2010      	movs	r0, #16
	}
	return usbdc.state;
}
    4c1a:	4770      	bx	lr
    4c1c:	20001094 	.word	0x20001094

00004c20 <usb_find_desc>:
#define _param_error_check(cond) ASSERT(cond)
#define _desc_len_check() ASSERT(usb_desc_len(desc) >= 2)
#endif

uint8_t *usb_find_desc(uint8_t *desc, uint8_t *eof, uint8_t type)
{
    4c20:	b510      	push	{r4, lr}
	_param_error_check(desc && eof && (desc < eof));

	while (desc < eof) {
    4c22:	4288      	cmp	r0, r1
    4c24:	d207      	bcs.n	4c36 <usb_find_desc+0x16>
	return desc[0];
    4c26:	7803      	ldrb	r3, [r0, #0]
		_desc_len_check();
    4c28:	2b01      	cmp	r3, #1
    4c2a:	d906      	bls.n	4c3a <usb_find_desc+0x1a>
	return desc[1];
    4c2c:	7844      	ldrb	r4, [r0, #1]
		if (type == usb_desc_type(desc)) {
    4c2e:	4294      	cmp	r4, r2
    4c30:	d002      	beq.n	4c38 <usb_find_desc+0x18>
	return (desc + usb_desc_len(desc));
    4c32:	18c0      	adds	r0, r0, r3
    4c34:	e7f5      	b.n	4c22 <usb_find_desc+0x2>
			return desc;
		}
		desc = usb_desc_next(desc);
	}
	return NULL;
    4c36:	2000      	movs	r0, #0
}
    4c38:	bd10      	pop	{r4, pc}
		_desc_len_check();
    4c3a:	2000      	movs	r0, #0
    4c3c:	e7fc      	b.n	4c38 <usb_find_desc+0x18>

00004c3e <usb_find_ep_desc>:

uint8_t *usb_find_ep_desc(uint8_t *desc, uint8_t *eof)
{
	_param_error_check(desc && eof && (desc < eof));

	while (desc < eof) {
    4c3e:	4288      	cmp	r0, r1
    4c40:	d209      	bcs.n	4c56 <usb_find_ep_desc+0x18>
	return desc[0];
    4c42:	7803      	ldrb	r3, [r0, #0]
		_desc_len_check();
    4c44:	2b01      	cmp	r3, #1
    4c46:	d908      	bls.n	4c5a <usb_find_ep_desc+0x1c>
	return desc[1];
    4c48:	7842      	ldrb	r2, [r0, #1]
		if (USB_DT_INTERFACE == usb_desc_type(desc)) {
    4c4a:	2a04      	cmp	r2, #4
    4c4c:	d007      	beq.n	4c5e <usb_find_ep_desc+0x20>
			break;
		}
		if (USB_DT_ENDPOINT == usb_desc_type(desc)) {
    4c4e:	2a05      	cmp	r2, #5
    4c50:	d002      	beq.n	4c58 <usb_find_ep_desc+0x1a>
	return (desc + usb_desc_len(desc));
    4c52:	18c0      	adds	r0, r0, r3
    4c54:	e7f3      	b.n	4c3e <usb_find_ep_desc>
			return desc;
		}
		desc = usb_desc_next(desc);
	}
	return NULL;
    4c56:	2000      	movs	r0, #0
}
    4c58:	4770      	bx	lr
		_desc_len_check();
    4c5a:	2000      	movs	r0, #0
    4c5c:	e7fc      	b.n	4c58 <usb_find_ep_desc+0x1a>
	return NULL;
    4c5e:	2000      	movs	r0, #0
    4c60:	e7fa      	b.n	4c58 <usb_find_ep_desc+0x1a>
	...

00004c64 <usb_find_cfg_desc>:

uint8_t *usb_find_cfg_desc(uint8_t *desc, uint8_t *eof, uint8_t cfg_value)
{
    4c64:	b570      	push	{r4, r5, r6, lr}
    4c66:	000c      	movs	r4, r1
    4c68:	0015      	movs	r5, r2
	_param_error_check(desc && eof && (desc < eof));

	desc = usb_find_desc(desc, eof, USB_DT_CONFIG);
    4c6a:	2202      	movs	r2, #2
    4c6c:	4b0d      	ldr	r3, [pc, #52]	; (4ca4 <usb_find_cfg_desc+0x40>)
    4c6e:	4798      	blx	r3
	if (!desc) {
    4c70:	2800      	cmp	r0, #0
    4c72:	d012      	beq.n	4c9a <usb_find_cfg_desc+0x36>
		return NULL;
	}
	while (desc < eof) {
    4c74:	42a0      	cmp	r0, r4
    4c76:	d20f      	bcs.n	4c98 <usb_find_cfg_desc+0x34>
	return desc[0];
    4c78:	7803      	ldrb	r3, [r0, #0]
		_desc_len_check();
    4c7a:	2b01      	cmp	r3, #1
    4c7c:	d90e      	bls.n	4c9c <usb_find_cfg_desc+0x38>
		if (desc[1] != USB_DT_CONFIG) {
    4c7e:	7843      	ldrb	r3, [r0, #1]
    4c80:	2b02      	cmp	r3, #2
    4c82:	d10d      	bne.n	4ca0 <usb_find_cfg_desc+0x3c>
			break;
		}
		if (desc[5] == cfg_value) {
    4c84:	7943      	ldrb	r3, [r0, #5]
    4c86:	42ab      	cmp	r3, r5
    4c88:	d007      	beq.n	4c9a <usb_find_cfg_desc+0x36>
	return (ptr[0] + (ptr[1] << 8));
    4c8a:	7883      	ldrb	r3, [r0, #2]
    4c8c:	78c2      	ldrb	r2, [r0, #3]
    4c8e:	0212      	lsls	r2, r2, #8
    4c90:	189b      	adds	r3, r3, r2
    4c92:	b29b      	uxth	r3, r3
 *  \param[in] cfg_desc Byte pointer to the descriptor start address
 *  \return Byte pointer to descriptor after configuration end
 */
static inline uint8_t *usb_cfg_desc_next(uint8_t *cfg_desc)
{
	return (cfg_desc + usb_cfg_desc_total_len(cfg_desc));
    4c94:	18c0      	adds	r0, r0, r3
    4c96:	e7ed      	b.n	4c74 <usb_find_cfg_desc+0x10>
			return desc;
		}
		desc = usb_cfg_desc_next(desc);
	}
	return NULL;
    4c98:	2000      	movs	r0, #0
}
    4c9a:	bd70      	pop	{r4, r5, r6, pc}
		_desc_len_check();
    4c9c:	2000      	movs	r0, #0
    4c9e:	e7fc      	b.n	4c9a <usb_find_cfg_desc+0x36>
	return NULL;
    4ca0:	2000      	movs	r0, #0
    4ca2:	e7fa      	b.n	4c9a <usb_find_cfg_desc+0x36>
    4ca4:	00004c21 	.word	0x00004c21

00004ca8 <usb_find_str_desc>:
	}
	return NULL;
}

uint8_t *usb_find_str_desc(uint8_t *desc, uint8_t *eof, uint8_t str_index)
{
    4ca8:	b570      	push	{r4, r5, r6, lr}
    4caa:	000d      	movs	r5, r1
    4cac:	0016      	movs	r6, r2
	uint8_t i;

	_param_error_check(desc && eof && (desc < eof));

	for (i = 0; desc < eof;) {
    4cae:	2400      	movs	r4, #0
    4cb0:	42a8      	cmp	r0, r5
    4cb2:	d20e      	bcs.n	4cd2 <usb_find_str_desc+0x2a>
		desc = usb_find_desc(desc, eof, USB_DT_STRING);
    4cb4:	2203      	movs	r2, #3
    4cb6:	0029      	movs	r1, r5
    4cb8:	4b08      	ldr	r3, [pc, #32]	; (4cdc <usb_find_str_desc+0x34>)
    4cba:	4798      	blx	r3
		if (desc) {
    4cbc:	2800      	cmp	r0, #0
    4cbe:	d009      	beq.n	4cd4 <usb_find_str_desc+0x2c>
	return desc[0];
    4cc0:	7803      	ldrb	r3, [r0, #0]
			_desc_len_check();
    4cc2:	2b01      	cmp	r3, #1
    4cc4:	d907      	bls.n	4cd6 <usb_find_str_desc+0x2e>
			if (i == str_index) {
    4cc6:	42b4      	cmp	r4, r6
    4cc8:	d004      	beq.n	4cd4 <usb_find_str_desc+0x2c>
				return desc;
			}
			i++;
    4cca:	3401      	adds	r4, #1
    4ccc:	b2e4      	uxtb	r4, r4
	return (desc + usb_desc_len(desc));
    4cce:	18c0      	adds	r0, r0, r3
    4cd0:	e7ee      	b.n	4cb0 <usb_find_str_desc+0x8>
			desc = usb_desc_next(desc);
		} else {
			return NULL;
		}
	}
	return NULL;
    4cd2:	2000      	movs	r0, #0
}
    4cd4:	bd70      	pop	{r4, r5, r6, pc}
			_desc_len_check();
    4cd6:	2000      	movs	r0, #0
    4cd8:	e7fc      	b.n	4cd4 <usb_find_str_desc+0x2c>
    4cda:	46c0      	nop			; (mov r8, r8)
    4cdc:	00004c21 	.word	0x00004c21

00004ce0 <__aeabi_atexit>:
    4ce0:	000b      	movs	r3, r1
    4ce2:	b510      	push	{r4, lr}
    4ce4:	0001      	movs	r1, r0
    4ce6:	0018      	movs	r0, r3
    4ce8:	f004 fa8e 	bl	9208 <__cxa_atexit>
    4cec:	bd10      	pop	{r4, pc}
    4cee:	46c0      	nop			; (mov r8, r8)

00004cf0 <floor>:
    4cf0:	4a45      	ldr	r2, [pc, #276]	; (4e08 <floor+0x118>)
    4cf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4cf4:	4657      	mov	r7, sl
    4cf6:	4692      	mov	sl, r2
    4cf8:	004b      	lsls	r3, r1, #1
    4cfa:	0d5b      	lsrs	r3, r3, #21
    4cfc:	449a      	add	sl, r3
    4cfe:	464e      	mov	r6, r9
    4d00:	4645      	mov	r5, r8
    4d02:	46de      	mov	lr, fp
    4d04:	4652      	mov	r2, sl
    4d06:	b5e0      	push	{r5, r6, r7, lr}
    4d08:	000c      	movs	r4, r1
    4d0a:	0005      	movs	r5, r0
    4d0c:	000e      	movs	r6, r1
    4d0e:	4689      	mov	r9, r1
    4d10:	0007      	movs	r7, r0
    4d12:	2a13      	cmp	r2, #19
    4d14:	dc22      	bgt.n	4d5c <floor+0x6c>
    4d16:	2a00      	cmp	r2, #0
    4d18:	db47      	blt.n	4daa <floor+0xba>
    4d1a:	4652      	mov	r2, sl
    4d1c:	4b3b      	ldr	r3, [pc, #236]	; (4e0c <floor+0x11c>)
    4d1e:	4113      	asrs	r3, r2
    4d20:	4698      	mov	r8, r3
    4d22:	000b      	movs	r3, r1
    4d24:	4642      	mov	r2, r8
    4d26:	4013      	ands	r3, r2
    4d28:	4303      	orrs	r3, r0
    4d2a:	d011      	beq.n	4d50 <floor+0x60>
    4d2c:	4a38      	ldr	r2, [pc, #224]	; (4e10 <floor+0x120>)
    4d2e:	4b39      	ldr	r3, [pc, #228]	; (4e14 <floor+0x124>)
    4d30:	f002 fc26 	bl	7580 <__aeabi_dadd>
    4d34:	2200      	movs	r2, #0
    4d36:	2300      	movs	r3, #0
    4d38:	f001 fd86 	bl	6848 <__aeabi_dcmpgt>
    4d3c:	2800      	cmp	r0, #0
    4d3e:	d005      	beq.n	4d4c <floor+0x5c>
    4d40:	2c00      	cmp	r4, #0
    4d42:	db41      	blt.n	4dc8 <floor+0xd8>
    4d44:	464e      	mov	r6, r9
    4d46:	4643      	mov	r3, r8
    4d48:	2700      	movs	r7, #0
    4d4a:	439e      	bics	r6, r3
    4d4c:	0038      	movs	r0, r7
    4d4e:	0031      	movs	r1, r6
    4d50:	bc3c      	pop	{r2, r3, r4, r5}
    4d52:	4690      	mov	r8, r2
    4d54:	4699      	mov	r9, r3
    4d56:	46a2      	mov	sl, r4
    4d58:	46ab      	mov	fp, r5
    4d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d5c:	4652      	mov	r2, sl
    4d5e:	2a33      	cmp	r2, #51	; 0x33
    4d60:	dd08      	ble.n	4d74 <floor+0x84>
    4d62:	2380      	movs	r3, #128	; 0x80
    4d64:	00db      	lsls	r3, r3, #3
    4d66:	459a      	cmp	sl, r3
    4d68:	d1f2      	bne.n	4d50 <floor+0x60>
    4d6a:	0002      	movs	r2, r0
    4d6c:	000b      	movs	r3, r1
    4d6e:	f002 fc07 	bl	7580 <__aeabi_dadd>
    4d72:	e7ed      	b.n	4d50 <floor+0x60>
    4d74:	4a28      	ldr	r2, [pc, #160]	; (4e18 <floor+0x128>)
    4d76:	4694      	mov	ip, r2
    4d78:	2201      	movs	r2, #1
    4d7a:	4463      	add	r3, ip
    4d7c:	4252      	negs	r2, r2
    4d7e:	40da      	lsrs	r2, r3
    4d80:	4693      	mov	fp, r2
    4d82:	4202      	tst	r2, r0
    4d84:	d0e4      	beq.n	4d50 <floor+0x60>
    4d86:	4a22      	ldr	r2, [pc, #136]	; (4e10 <floor+0x120>)
    4d88:	4b22      	ldr	r3, [pc, #136]	; (4e14 <floor+0x124>)
    4d8a:	f002 fbf9 	bl	7580 <__aeabi_dadd>
    4d8e:	2200      	movs	r2, #0
    4d90:	2300      	movs	r3, #0
    4d92:	f001 fd59 	bl	6848 <__aeabi_dcmpgt>
    4d96:	2800      	cmp	r0, #0
    4d98:	d0d8      	beq.n	4d4c <floor+0x5c>
    4d9a:	2c00      	cmp	r4, #0
    4d9c:	db1a      	blt.n	4dd4 <floor+0xe4>
    4d9e:	465b      	mov	r3, fp
    4da0:	464e      	mov	r6, r9
    4da2:	439f      	bics	r7, r3
    4da4:	0038      	movs	r0, r7
    4da6:	0031      	movs	r1, r6
    4da8:	e7d2      	b.n	4d50 <floor+0x60>
    4daa:	4a19      	ldr	r2, [pc, #100]	; (4e10 <floor+0x120>)
    4dac:	4b19      	ldr	r3, [pc, #100]	; (4e14 <floor+0x124>)
    4dae:	f002 fbe7 	bl	7580 <__aeabi_dadd>
    4db2:	2200      	movs	r2, #0
    4db4:	2300      	movs	r3, #0
    4db6:	f001 fd47 	bl	6848 <__aeabi_dcmpgt>
    4dba:	2800      	cmp	r0, #0
    4dbc:	d0c6      	beq.n	4d4c <floor+0x5c>
    4dbe:	2c00      	cmp	r4, #0
    4dc0:	db16      	blt.n	4df0 <floor+0x100>
    4dc2:	2700      	movs	r7, #0
    4dc4:	2600      	movs	r6, #0
    4dc6:	e7c1      	b.n	4d4c <floor+0x5c>
    4dc8:	2380      	movs	r3, #128	; 0x80
    4dca:	4652      	mov	r2, sl
    4dcc:	035b      	lsls	r3, r3, #13
    4dce:	4113      	asrs	r3, r2
    4dd0:	4499      	add	r9, r3
    4dd2:	e7b7      	b.n	4d44 <floor+0x54>
    4dd4:	4653      	mov	r3, sl
    4dd6:	2b14      	cmp	r3, #20
    4dd8:	d012      	beq.n	4e00 <floor+0x110>
    4dda:	2334      	movs	r3, #52	; 0x34
    4ddc:	4652      	mov	r2, sl
    4dde:	2701      	movs	r7, #1
    4de0:	1a9b      	subs	r3, r3, r2
    4de2:	409f      	lsls	r7, r3
    4de4:	197f      	adds	r7, r7, r5
    4de6:	42af      	cmp	r7, r5
    4de8:	419b      	sbcs	r3, r3
    4dea:	425b      	negs	r3, r3
    4dec:	4499      	add	r9, r3
    4dee:	e7d6      	b.n	4d9e <floor+0xae>
    4df0:	0064      	lsls	r4, r4, #1
    4df2:	0864      	lsrs	r4, r4, #1
    4df4:	4325      	orrs	r5, r4
    4df6:	2700      	movs	r7, #0
    4df8:	2d00      	cmp	r5, #0
    4dfa:	d0a7      	beq.n	4d4c <floor+0x5c>
    4dfc:	4e07      	ldr	r6, [pc, #28]	; (4e1c <floor+0x12c>)
    4dfe:	e7a5      	b.n	4d4c <floor+0x5c>
    4e00:	3b13      	subs	r3, #19
    4e02:	469c      	mov	ip, r3
    4e04:	44e1      	add	r9, ip
    4e06:	e7ca      	b.n	4d9e <floor+0xae>
    4e08:	fffffc01 	.word	0xfffffc01
    4e0c:	000fffff 	.word	0x000fffff
    4e10:	8800759c 	.word	0x8800759c
    4e14:	7e37e43c 	.word	0x7e37e43c
    4e18:	fffffbed 	.word	0xfffffbed
    4e1c:	bff00000 	.word	0xbff00000

00004e20 <log>:
    4e20:	b5f0      	push	{r4, r5, r6, r7, lr}
    4e22:	46c6      	mov	lr, r8
    4e24:	b500      	push	{lr}
    4e26:	b08c      	sub	sp, #48	; 0x30
    4e28:	0004      	movs	r4, r0
    4e2a:	000d      	movs	r5, r1
    4e2c:	f000 fa2c 	bl	5288 <__ieee754_log>
    4e30:	4b3a      	ldr	r3, [pc, #232]	; (4f1c <log+0xfc>)
    4e32:	0006      	movs	r6, r0
    4e34:	781b      	ldrb	r3, [r3, #0]
    4e36:	000f      	movs	r7, r1
    4e38:	b25b      	sxtb	r3, r3
    4e3a:	4698      	mov	r8, r3
    4e3c:	3301      	adds	r3, #1
    4e3e:	d00f      	beq.n	4e60 <log+0x40>
    4e40:	0022      	movs	r2, r4
    4e42:	002b      	movs	r3, r5
    4e44:	0020      	movs	r0, r4
    4e46:	0029      	movs	r1, r5
    4e48:	f004 f874 	bl	8f34 <__aeabi_dcmpun>
    4e4c:	2800      	cmp	r0, #0
    4e4e:	d107      	bne.n	4e60 <log+0x40>
    4e50:	2200      	movs	r2, #0
    4e52:	2300      	movs	r3, #0
    4e54:	0020      	movs	r0, r4
    4e56:	0029      	movs	r1, r5
    4e58:	f001 fcf6 	bl	6848 <__aeabi_dcmpgt>
    4e5c:	2800      	cmp	r0, #0
    4e5e:	d005      	beq.n	4e6c <log+0x4c>
    4e60:	0030      	movs	r0, r6
    4e62:	0039      	movs	r1, r7
    4e64:	b00c      	add	sp, #48	; 0x30
    4e66:	bc04      	pop	{r2}
    4e68:	4690      	mov	r8, r2
    4e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4e6c:	4b2c      	ldr	r3, [pc, #176]	; (4f20 <log+0x100>)
    4e6e:	900a      	str	r0, [sp, #40]	; 0x28
    4e70:	9303      	str	r3, [sp, #12]
    4e72:	4643      	mov	r3, r8
    4e74:	9404      	str	r4, [sp, #16]
    4e76:	9505      	str	r5, [sp, #20]
    4e78:	9406      	str	r4, [sp, #24]
    4e7a:	9507      	str	r5, [sp, #28]
    4e7c:	2b00      	cmp	r3, #0
    4e7e:	d11a      	bne.n	4eb6 <log+0x96>
    4e80:	22e0      	movs	r2, #224	; 0xe0
    4e82:	4b28      	ldr	r3, [pc, #160]	; (4f24 <log+0x104>)
    4e84:	0612      	lsls	r2, r2, #24
    4e86:	9208      	str	r2, [sp, #32]
    4e88:	9309      	str	r3, [sp, #36]	; 0x24
    4e8a:	0020      	movs	r0, r4
    4e8c:	2200      	movs	r2, #0
    4e8e:	2300      	movs	r3, #0
    4e90:	0029      	movs	r1, r5
    4e92:	f001 fcbf 	bl	6814 <__aeabi_dcmpeq>
    4e96:	2800      	cmp	r0, #0
    4e98:	d038      	beq.n	4f0c <log+0xec>
    4e9a:	2302      	movs	r3, #2
    4e9c:	9302      	str	r3, [sp, #8]
    4e9e:	a802      	add	r0, sp, #8
    4ea0:	f001 fa18 	bl	62d4 <matherr>
    4ea4:	2800      	cmp	r0, #0
    4ea6:	d017      	beq.n	4ed8 <log+0xb8>
    4ea8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4eaa:	9301      	str	r3, [sp, #4]
    4eac:	2b00      	cmp	r3, #0
    4eae:	d118      	bne.n	4ee2 <log+0xc2>
    4eb0:	9e08      	ldr	r6, [sp, #32]
    4eb2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    4eb4:	e7d4      	b.n	4e60 <log+0x40>
    4eb6:	2200      	movs	r2, #0
    4eb8:	4b1b      	ldr	r3, [pc, #108]	; (4f28 <log+0x108>)
    4eba:	0020      	movs	r0, r4
    4ebc:	9208      	str	r2, [sp, #32]
    4ebe:	9309      	str	r3, [sp, #36]	; 0x24
    4ec0:	0029      	movs	r1, r5
    4ec2:	2200      	movs	r2, #0
    4ec4:	2300      	movs	r3, #0
    4ec6:	f001 fca5 	bl	6814 <__aeabi_dcmpeq>
    4eca:	2800      	cmp	r0, #0
    4ecc:	d00f      	beq.n	4eee <log+0xce>
    4ece:	2302      	movs	r3, #2
    4ed0:	9302      	str	r3, [sp, #8]
    4ed2:	4643      	mov	r3, r8
    4ed4:	2b02      	cmp	r3, #2
    4ed6:	d1e2      	bne.n	4e9e <log+0x7e>
    4ed8:	f004 f99e 	bl	9218 <__errno>
    4edc:	2322      	movs	r3, #34	; 0x22
    4ede:	6003      	str	r3, [r0, #0]
    4ee0:	e7e2      	b.n	4ea8 <log+0x88>
    4ee2:	f004 f999 	bl	9218 <__errno>
    4ee6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4ee8:	9301      	str	r3, [sp, #4]
    4eea:	6003      	str	r3, [r0, #0]
    4eec:	e7e0      	b.n	4eb0 <log+0x90>
    4eee:	2301      	movs	r3, #1
    4ef0:	9302      	str	r3, [sp, #8]
    4ef2:	4643      	mov	r3, r8
    4ef4:	2b02      	cmp	r3, #2
    4ef6:	d10b      	bne.n	4f10 <log+0xf0>
    4ef8:	f004 f98e 	bl	9218 <__errno>
    4efc:	2321      	movs	r3, #33	; 0x21
    4efe:	6003      	str	r3, [r0, #0]
    4f00:	480a      	ldr	r0, [pc, #40]	; (4f2c <log+0x10c>)
    4f02:	f001 f9e9 	bl	62d8 <nan>
    4f06:	9008      	str	r0, [sp, #32]
    4f08:	9109      	str	r1, [sp, #36]	; 0x24
    4f0a:	e7cd      	b.n	4ea8 <log+0x88>
    4f0c:	2301      	movs	r3, #1
    4f0e:	9302      	str	r3, [sp, #8]
    4f10:	a802      	add	r0, sp, #8
    4f12:	f001 f9df 	bl	62d4 <matherr>
    4f16:	2800      	cmp	r0, #0
    4f18:	d1f2      	bne.n	4f00 <log+0xe0>
    4f1a:	e7ed      	b.n	4ef8 <log+0xd8>
    4f1c:	2000006c 	.word	0x2000006c
    4f20:	0000e30c 	.word	0x0000e30c
    4f24:	c7efffff 	.word	0xc7efffff
    4f28:	fff00000 	.word	0xfff00000
    4f2c:	0000e07c 	.word	0x0000e07c

00004f30 <pow>:
    4f30:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f32:	4657      	mov	r7, sl
    4f34:	464e      	mov	r6, r9
    4f36:	46de      	mov	lr, fp
    4f38:	4645      	mov	r5, r8
    4f3a:	b5e0      	push	{r5, r6, r7, lr}
    4f3c:	b08f      	sub	sp, #60	; 0x3c
    4f3e:	001d      	movs	r5, r3
    4f40:	0006      	movs	r6, r0
    4f42:	000f      	movs	r7, r1
    4f44:	0014      	movs	r4, r2
    4f46:	f000 fba1 	bl	568c <__ieee754_pow>
    4f4a:	4bc7      	ldr	r3, [pc, #796]	; (5268 <pow+0x338>)
    4f4c:	9000      	str	r0, [sp, #0]
    4f4e:	9101      	str	r1, [sp, #4]
    4f50:	469a      	mov	sl, r3
    4f52:	781b      	ldrb	r3, [r3, #0]
    4f54:	b25b      	sxtb	r3, r3
    4f56:	4699      	mov	r9, r3
    4f58:	3301      	adds	r3, #1
    4f5a:	d03e      	beq.n	4fda <pow+0xaa>
    4f5c:	0022      	movs	r2, r4
    4f5e:	002b      	movs	r3, r5
    4f60:	0020      	movs	r0, r4
    4f62:	0029      	movs	r1, r5
    4f64:	f003 ffe6 	bl	8f34 <__aeabi_dcmpun>
    4f68:	4683      	mov	fp, r0
    4f6a:	2800      	cmp	r0, #0
    4f6c:	d135      	bne.n	4fda <pow+0xaa>
    4f6e:	0032      	movs	r2, r6
    4f70:	003b      	movs	r3, r7
    4f72:	0030      	movs	r0, r6
    4f74:	0039      	movs	r1, r7
    4f76:	f003 ffdd 	bl	8f34 <__aeabi_dcmpun>
    4f7a:	2200      	movs	r2, #0
    4f7c:	9003      	str	r0, [sp, #12]
    4f7e:	2800      	cmp	r0, #0
    4f80:	d000      	beq.n	4f84 <pow+0x54>
    4f82:	e0b6      	b.n	50f2 <pow+0x1c2>
    4f84:	2300      	movs	r3, #0
    4f86:	0030      	movs	r0, r6
    4f88:	0039      	movs	r1, r7
    4f8a:	f001 fc43 	bl	6814 <__aeabi_dcmpeq>
    4f8e:	2800      	cmp	r0, #0
    4f90:	d02c      	beq.n	4fec <pow+0xbc>
    4f92:	2200      	movs	r2, #0
    4f94:	2300      	movs	r3, #0
    4f96:	0020      	movs	r0, r4
    4f98:	0029      	movs	r1, r5
    4f9a:	f001 fc3b 	bl	6814 <__aeabi_dcmpeq>
    4f9e:	4683      	mov	fp, r0
    4fa0:	2800      	cmp	r0, #0
    4fa2:	d100      	bne.n	4fa6 <pow+0x76>
    4fa4:	e077      	b.n	5096 <pow+0x166>
    4fa6:	ab04      	add	r3, sp, #16
    4fa8:	4698      	mov	r8, r3
    4faa:	2301      	movs	r3, #1
    4fac:	4642      	mov	r2, r8
    4fae:	9304      	str	r3, [sp, #16]
    4fb0:	4bae      	ldr	r3, [pc, #696]	; (526c <pow+0x33c>)
    4fb2:	6053      	str	r3, [r2, #4]
    4fb4:	4643      	mov	r3, r8
    4fb6:	9a03      	ldr	r2, [sp, #12]
    4fb8:	611c      	str	r4, [r3, #16]
    4fba:	615d      	str	r5, [r3, #20]
    4fbc:	621a      	str	r2, [r3, #32]
    4fbe:	609e      	str	r6, [r3, #8]
    4fc0:	60df      	str	r7, [r3, #12]
    4fc2:	4642      	mov	r2, r8
    4fc4:	2300      	movs	r3, #0
    4fc6:	2400      	movs	r4, #0
    4fc8:	6193      	str	r3, [r2, #24]
    4fca:	61d4      	str	r4, [r2, #28]
    4fcc:	464b      	mov	r3, r9
    4fce:	2b00      	cmp	r3, #0
    4fd0:	d04d      	beq.n	506e <pow+0x13e>
    4fd2:	2300      	movs	r3, #0
    4fd4:	4ca6      	ldr	r4, [pc, #664]	; (5270 <pow+0x340>)
    4fd6:	9300      	str	r3, [sp, #0]
    4fd8:	9401      	str	r4, [sp, #4]
    4fda:	9800      	ldr	r0, [sp, #0]
    4fdc:	9901      	ldr	r1, [sp, #4]
    4fde:	b00f      	add	sp, #60	; 0x3c
    4fe0:	bc3c      	pop	{r2, r3, r4, r5}
    4fe2:	4690      	mov	r8, r2
    4fe4:	4699      	mov	r9, r3
    4fe6:	46a2      	mov	sl, r4
    4fe8:	46ab      	mov	fp, r5
    4fea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4fec:	9800      	ldr	r0, [sp, #0]
    4fee:	9901      	ldr	r1, [sp, #4]
    4ff0:	f001 f966 	bl	62c0 <finite>
    4ff4:	4681      	mov	r9, r0
    4ff6:	2800      	cmp	r0, #0
    4ff8:	d100      	bne.n	4ffc <pow+0xcc>
    4ffa:	e09b      	b.n	5134 <pow+0x204>
    4ffc:	9800      	ldr	r0, [sp, #0]
    4ffe:	9901      	ldr	r1, [sp, #4]
    5000:	2200      	movs	r2, #0
    5002:	2300      	movs	r3, #0
    5004:	f001 fc06 	bl	6814 <__aeabi_dcmpeq>
    5008:	2800      	cmp	r0, #0
    500a:	d0e6      	beq.n	4fda <pow+0xaa>
    500c:	0030      	movs	r0, r6
    500e:	0039      	movs	r1, r7
    5010:	f001 f956 	bl	62c0 <finite>
    5014:	2800      	cmp	r0, #0
    5016:	d0e0      	beq.n	4fda <pow+0xaa>
    5018:	0020      	movs	r0, r4
    501a:	0029      	movs	r1, r5
    501c:	f001 f950 	bl	62c0 <finite>
    5020:	2800      	cmp	r0, #0
    5022:	d0da      	beq.n	4fda <pow+0xaa>
    5024:	ab04      	add	r3, sp, #16
    5026:	4698      	mov	r8, r3
    5028:	2304      	movs	r3, #4
    502a:	4642      	mov	r2, r8
    502c:	9304      	str	r3, [sp, #16]
    502e:	4b8f      	ldr	r3, [pc, #572]	; (526c <pow+0x33c>)
    5030:	6114      	str	r4, [r2, #16]
    5032:	6155      	str	r5, [r2, #20]
    5034:	6053      	str	r3, [r2, #4]
    5036:	2300      	movs	r3, #0
    5038:	2400      	movs	r4, #0
    503a:	6213      	str	r3, [r2, #32]
    503c:	2300      	movs	r3, #0
    503e:	6193      	str	r3, [r2, #24]
    5040:	61d4      	str	r4, [r2, #28]
    5042:	4653      	mov	r3, sl
    5044:	781b      	ldrb	r3, [r3, #0]
    5046:	6096      	str	r6, [r2, #8]
    5048:	60d7      	str	r7, [r2, #12]
    504a:	b25b      	sxtb	r3, r3
    504c:	2b02      	cmp	r3, #2
    504e:	d004      	beq.n	505a <pow+0x12a>
    5050:	4640      	mov	r0, r8
    5052:	f001 f93f 	bl	62d4 <matherr>
    5056:	2800      	cmp	r0, #0
    5058:	d10e      	bne.n	5078 <pow+0x148>
    505a:	f004 f8dd 	bl	9218 <__errno>
    505e:	2322      	movs	r3, #34	; 0x22
    5060:	6003      	str	r3, [r0, #0]
    5062:	e009      	b.n	5078 <pow+0x148>
    5064:	4642      	mov	r2, r8
    5066:	2300      	movs	r3, #0
    5068:	2400      	movs	r4, #0
    506a:	6193      	str	r3, [r2, #24]
    506c:	61d4      	str	r4, [r2, #28]
    506e:	4640      	mov	r0, r8
    5070:	f001 f930 	bl	62d4 <matherr>
    5074:	2800      	cmp	r0, #0
    5076:	d037      	beq.n	50e8 <pow+0x1b8>
    5078:	4643      	mov	r3, r8
    507a:	6a1b      	ldr	r3, [r3, #32]
    507c:	2b00      	cmp	r3, #0
    507e:	d004      	beq.n	508a <pow+0x15a>
    5080:	f004 f8ca 	bl	9218 <__errno>
    5084:	4643      	mov	r3, r8
    5086:	6a1b      	ldr	r3, [r3, #32]
    5088:	6003      	str	r3, [r0, #0]
    508a:	4643      	mov	r3, r8
    508c:	69dc      	ldr	r4, [r3, #28]
    508e:	699b      	ldr	r3, [r3, #24]
    5090:	9300      	str	r3, [sp, #0]
    5092:	9401      	str	r4, [sp, #4]
    5094:	e7a1      	b.n	4fda <pow+0xaa>
    5096:	0020      	movs	r0, r4
    5098:	0029      	movs	r1, r5
    509a:	f001 f911 	bl	62c0 <finite>
    509e:	2800      	cmp	r0, #0
    50a0:	d09b      	beq.n	4fda <pow+0xaa>
    50a2:	2200      	movs	r2, #0
    50a4:	2300      	movs	r3, #0
    50a6:	0020      	movs	r0, r4
    50a8:	0029      	movs	r1, r5
    50aa:	f001 fbb9 	bl	6820 <__aeabi_dcmplt>
    50ae:	2800      	cmp	r0, #0
    50b0:	d100      	bne.n	50b4 <pow+0x184>
    50b2:	e792      	b.n	4fda <pow+0xaa>
    50b4:	ab04      	add	r3, sp, #16
    50b6:	4698      	mov	r8, r3
    50b8:	2301      	movs	r3, #1
    50ba:	4642      	mov	r2, r8
    50bc:	9304      	str	r3, [sp, #16]
    50be:	4b6b      	ldr	r3, [pc, #428]	; (526c <pow+0x33c>)
    50c0:	6053      	str	r3, [r2, #4]
    50c2:	4643      	mov	r3, r8
    50c4:	465a      	mov	r2, fp
    50c6:	609e      	str	r6, [r3, #8]
    50c8:	60df      	str	r7, [r3, #12]
    50ca:	621a      	str	r2, [r3, #32]
    50cc:	611c      	str	r4, [r3, #16]
    50ce:	615d      	str	r5, [r3, #20]
    50d0:	4653      	mov	r3, sl
    50d2:	781b      	ldrb	r3, [r3, #0]
    50d4:	b25b      	sxtb	r3, r3
    50d6:	2b00      	cmp	r3, #0
    50d8:	d0c4      	beq.n	5064 <pow+0x134>
    50da:	2000      	movs	r0, #0
    50dc:	4642      	mov	r2, r8
    50de:	4965      	ldr	r1, [pc, #404]	; (5274 <pow+0x344>)
    50e0:	6190      	str	r0, [r2, #24]
    50e2:	61d1      	str	r1, [r2, #28]
    50e4:	2b02      	cmp	r3, #2
    50e6:	d1c2      	bne.n	506e <pow+0x13e>
    50e8:	f004 f896 	bl	9218 <__errno>
    50ec:	2321      	movs	r3, #33	; 0x21
    50ee:	6003      	str	r3, [r0, #0]
    50f0:	e7c2      	b.n	5078 <pow+0x148>
    50f2:	2300      	movs	r3, #0
    50f4:	0020      	movs	r0, r4
    50f6:	0029      	movs	r1, r5
    50f8:	f001 fb8c 	bl	6814 <__aeabi_dcmpeq>
    50fc:	2800      	cmp	r0, #0
    50fe:	d100      	bne.n	5102 <pow+0x1d2>
    5100:	e76b      	b.n	4fda <pow+0xaa>
    5102:	ab04      	add	r3, sp, #16
    5104:	4698      	mov	r8, r3
    5106:	2301      	movs	r3, #1
    5108:	4642      	mov	r2, r8
    510a:	9304      	str	r3, [sp, #16]
    510c:	4b57      	ldr	r3, [pc, #348]	; (526c <pow+0x33c>)
    510e:	4641      	mov	r1, r8
    5110:	6053      	str	r3, [r2, #4]
    5112:	4643      	mov	r3, r8
    5114:	465a      	mov	r2, fp
    5116:	621a      	str	r2, [r3, #32]
    5118:	2200      	movs	r2, #0
    511a:	609e      	str	r6, [r3, #8]
    511c:	60df      	str	r7, [r3, #12]
    511e:	611c      	str	r4, [r3, #16]
    5120:	615d      	str	r5, [r3, #20]
    5122:	4b53      	ldr	r3, [pc, #332]	; (5270 <pow+0x340>)
    5124:	618a      	str	r2, [r1, #24]
    5126:	61cb      	str	r3, [r1, #28]
    5128:	9200      	str	r2, [sp, #0]
    512a:	9301      	str	r3, [sp, #4]
    512c:	464b      	mov	r3, r9
    512e:	2b02      	cmp	r3, #2
    5130:	d19d      	bne.n	506e <pow+0x13e>
    5132:	e752      	b.n	4fda <pow+0xaa>
    5134:	0030      	movs	r0, r6
    5136:	0039      	movs	r1, r7
    5138:	f001 f8c2 	bl	62c0 <finite>
    513c:	2800      	cmp	r0, #0
    513e:	d100      	bne.n	5142 <pow+0x212>
    5140:	e75c      	b.n	4ffc <pow+0xcc>
    5142:	0020      	movs	r0, r4
    5144:	0029      	movs	r1, r5
    5146:	f001 f8bb 	bl	62c0 <finite>
    514a:	2800      	cmp	r0, #0
    514c:	d100      	bne.n	5150 <pow+0x220>
    514e:	e755      	b.n	4ffc <pow+0xcc>
    5150:	9800      	ldr	r0, [sp, #0]
    5152:	9901      	ldr	r1, [sp, #4]
    5154:	000b      	movs	r3, r1
    5156:	0002      	movs	r2, r0
    5158:	f003 feec 	bl	8f34 <__aeabi_dcmpun>
    515c:	ab04      	add	r3, sp, #16
    515e:	4698      	mov	r8, r3
    5160:	2800      	cmp	r0, #0
    5162:	d161      	bne.n	5228 <pow+0x2f8>
    5164:	2303      	movs	r3, #3
    5166:	4642      	mov	r2, r8
    5168:	9304      	str	r3, [sp, #16]
    516a:	4b40      	ldr	r3, [pc, #256]	; (526c <pow+0x33c>)
    516c:	6210      	str	r0, [r2, #32]
    516e:	6053      	str	r3, [r2, #4]
    5170:	4653      	mov	r3, sl
    5172:	781b      	ldrb	r3, [r3, #0]
    5174:	6096      	str	r6, [r2, #8]
    5176:	60d7      	str	r7, [r2, #12]
    5178:	b25b      	sxtb	r3, r3
    517a:	6114      	str	r4, [r2, #16]
    517c:	6155      	str	r5, [r2, #20]
    517e:	4699      	mov	r9, r3
    5180:	2b00      	cmp	r3, #0
    5182:	d12f      	bne.n	51e4 <pow+0x2b4>
    5184:	22e0      	movs	r2, #224	; 0xe0
    5186:	4641      	mov	r1, r8
    5188:	4b3b      	ldr	r3, [pc, #236]	; (5278 <pow+0x348>)
    518a:	0612      	lsls	r2, r2, #24
    518c:	618a      	str	r2, [r1, #24]
    518e:	61cb      	str	r3, [r1, #28]
    5190:	0030      	movs	r0, r6
    5192:	2200      	movs	r2, #0
    5194:	2300      	movs	r3, #0
    5196:	0039      	movs	r1, r7
    5198:	f001 fb42 	bl	6820 <__aeabi_dcmplt>
    519c:	2800      	cmp	r0, #0
    519e:	d100      	bne.n	51a2 <pow+0x272>
    51a0:	e756      	b.n	5050 <pow+0x120>
    51a2:	2200      	movs	r2, #0
    51a4:	4b35      	ldr	r3, [pc, #212]	; (527c <pow+0x34c>)
    51a6:	0020      	movs	r0, r4
    51a8:	0029      	movs	r1, r5
    51aa:	f003 f92d 	bl	8408 <__aeabi_dmul>
    51ae:	0004      	movs	r4, r0
    51b0:	000d      	movs	r5, r1
    51b2:	f001 f897 	bl	62e4 <rint>
    51b6:	0002      	movs	r2, r0
    51b8:	000b      	movs	r3, r1
    51ba:	0020      	movs	r0, r4
    51bc:	0029      	movs	r1, r5
    51be:	f001 fb29 	bl	6814 <__aeabi_dcmpeq>
    51c2:	2800      	cmp	r0, #0
    51c4:	d105      	bne.n	51d2 <pow+0x2a2>
    51c6:	22e0      	movs	r2, #224	; 0xe0
    51c8:	4b2d      	ldr	r3, [pc, #180]	; (5280 <pow+0x350>)
    51ca:	0612      	lsls	r2, r2, #24
    51cc:	4641      	mov	r1, r8
    51ce:	618a      	str	r2, [r1, #24]
    51d0:	61cb      	str	r3, [r1, #28]
    51d2:	4653      	mov	r3, sl
    51d4:	781b      	ldrb	r3, [r3, #0]
    51d6:	b25b      	sxtb	r3, r3
    51d8:	4699      	mov	r9, r3
    51da:	464b      	mov	r3, r9
    51dc:	2b02      	cmp	r3, #2
    51de:	d000      	beq.n	51e2 <pow+0x2b2>
    51e0:	e736      	b.n	5050 <pow+0x120>
    51e2:	e73a      	b.n	505a <pow+0x12a>
    51e4:	2200      	movs	r2, #0
    51e6:	4641      	mov	r1, r8
    51e8:	4b26      	ldr	r3, [pc, #152]	; (5284 <pow+0x354>)
    51ea:	0030      	movs	r0, r6
    51ec:	618a      	str	r2, [r1, #24]
    51ee:	61cb      	str	r3, [r1, #28]
    51f0:	2200      	movs	r2, #0
    51f2:	2300      	movs	r3, #0
    51f4:	0039      	movs	r1, r7
    51f6:	f001 fb13 	bl	6820 <__aeabi_dcmplt>
    51fa:	2800      	cmp	r0, #0
    51fc:	d0ed      	beq.n	51da <pow+0x2aa>
    51fe:	2200      	movs	r2, #0
    5200:	4b1e      	ldr	r3, [pc, #120]	; (527c <pow+0x34c>)
    5202:	0020      	movs	r0, r4
    5204:	0029      	movs	r1, r5
    5206:	f003 f8ff 	bl	8408 <__aeabi_dmul>
    520a:	0004      	movs	r4, r0
    520c:	000d      	movs	r5, r1
    520e:	f001 f869 	bl	62e4 <rint>
    5212:	0002      	movs	r2, r0
    5214:	000b      	movs	r3, r1
    5216:	0020      	movs	r0, r4
    5218:	0029      	movs	r1, r5
    521a:	f001 fafb 	bl	6814 <__aeabi_dcmpeq>
    521e:	2800      	cmp	r0, #0
    5220:	d1d7      	bne.n	51d2 <pow+0x2a2>
    5222:	2200      	movs	r2, #0
    5224:	4b13      	ldr	r3, [pc, #76]	; (5274 <pow+0x344>)
    5226:	e7d1      	b.n	51cc <pow+0x29c>
    5228:	2301      	movs	r3, #1
    522a:	4642      	mov	r2, r8
    522c:	9304      	str	r3, [sp, #16]
    522e:	4b0f      	ldr	r3, [pc, #60]	; (526c <pow+0x33c>)
    5230:	6053      	str	r3, [r2, #4]
    5232:	4643      	mov	r3, r8
    5234:	464a      	mov	r2, r9
    5236:	611c      	str	r4, [r3, #16]
    5238:	615d      	str	r5, [r3, #20]
    523a:	621a      	str	r2, [r3, #32]
    523c:	609e      	str	r6, [r3, #8]
    523e:	60df      	str	r7, [r3, #12]
    5240:	2400      	movs	r4, #0
    5242:	4653      	mov	r3, sl
    5244:	571c      	ldrsb	r4, [r3, r4]
    5246:	2c00      	cmp	r4, #0
    5248:	d100      	bne.n	524c <pow+0x31c>
    524a:	e70b      	b.n	5064 <pow+0x134>
    524c:	2300      	movs	r3, #0
    524e:	2200      	movs	r2, #0
    5250:	0019      	movs	r1, r3
    5252:	0010      	movs	r0, r2
    5254:	f002 fca4 	bl	7ba0 <__aeabi_ddiv>
    5258:	4643      	mov	r3, r8
    525a:	6198      	str	r0, [r3, #24]
    525c:	61d9      	str	r1, [r3, #28]
    525e:	2c02      	cmp	r4, #2
    5260:	d100      	bne.n	5264 <pow+0x334>
    5262:	e741      	b.n	50e8 <pow+0x1b8>
    5264:	e703      	b.n	506e <pow+0x13e>
    5266:	46c0      	nop			; (mov r8, r8)
    5268:	2000006c 	.word	0x2000006c
    526c:	0000e310 	.word	0x0000e310
    5270:	3ff00000 	.word	0x3ff00000
    5274:	fff00000 	.word	0xfff00000
    5278:	47efffff 	.word	0x47efffff
    527c:	3fe00000 	.word	0x3fe00000
    5280:	c7efffff 	.word	0xc7efffff
    5284:	7ff00000 	.word	0x7ff00000

00005288 <__ieee754_log>:
    5288:	b5f0      	push	{r4, r5, r6, r7, lr}
    528a:	46d6      	mov	lr, sl
    528c:	464f      	mov	r7, r9
    528e:	4646      	mov	r6, r8
    5290:	b5c0      	push	{r6, r7, lr}
    5292:	4ada      	ldr	r2, [pc, #872]	; (55fc <__ieee754_log+0x374>)
    5294:	b088      	sub	sp, #32
    5296:	000b      	movs	r3, r1
    5298:	4291      	cmp	r1, r2
    529a:	dc55      	bgt.n	5348 <__ieee754_log+0xc0>
    529c:	004a      	lsls	r2, r1, #1
    529e:	0852      	lsrs	r2, r2, #1
    52a0:	4302      	orrs	r2, r0
    52a2:	d100      	bne.n	52a6 <__ieee754_log+0x1e>
    52a4:	e0ef      	b.n	5486 <__ieee754_log+0x1fe>
    52a6:	2900      	cmp	r1, #0
    52a8:	da00      	bge.n	52ac <__ieee754_log+0x24>
    52aa:	e179      	b.n	55a0 <__ieee754_log+0x318>
    52ac:	4bd4      	ldr	r3, [pc, #848]	; (5600 <__ieee754_log+0x378>)
    52ae:	2200      	movs	r2, #0
    52b0:	f003 f8aa 	bl	8408 <__aeabi_dmul>
    52b4:	2536      	movs	r5, #54	; 0x36
    52b6:	4cd3      	ldr	r4, [pc, #844]	; (5604 <__ieee754_log+0x37c>)
    52b8:	000b      	movs	r3, r1
    52ba:	426d      	negs	r5, r5
    52bc:	42a3      	cmp	r3, r4
    52be:	dc47      	bgt.n	5350 <__ieee754_log+0xc8>
    52c0:	151a      	asrs	r2, r3, #20
    52c2:	4cd1      	ldr	r4, [pc, #836]	; (5608 <__ieee754_log+0x380>)
    52c4:	031b      	lsls	r3, r3, #12
    52c6:	0b1b      	lsrs	r3, r3, #12
    52c8:	4698      	mov	r8, r3
    52ca:	46a4      	mov	ip, r4
    52cc:	2480      	movs	r4, #128	; 0x80
    52ce:	4bcf      	ldr	r3, [pc, #828]	; (560c <__ieee754_log+0x384>)
    52d0:	0364      	lsls	r4, r4, #13
    52d2:	4443      	add	r3, r8
    52d4:	4023      	ands	r3, r4
    52d6:	4cce      	ldr	r4, [pc, #824]	; (5610 <__ieee754_log+0x388>)
    52d8:	4462      	add	r2, ip
    52da:	1952      	adds	r2, r2, r5
    52dc:	405c      	eors	r4, r3
    52de:	4645      	mov	r5, r8
    52e0:	151b      	asrs	r3, r3, #20
    52e2:	4699      	mov	r9, r3
    52e4:	4325      	orrs	r5, r4
    52e6:	4bca      	ldr	r3, [pc, #808]	; (5610 <__ieee754_log+0x388>)
    52e8:	0029      	movs	r1, r5
    52ea:	4491      	add	r9, r2
    52ec:	2200      	movs	r2, #0
    52ee:	f003 fb0b 	bl	8908 <__aeabi_dsub>
    52f2:	4643      	mov	r3, r8
    52f4:	3302      	adds	r3, #2
    52f6:	031b      	lsls	r3, r3, #12
    52f8:	0006      	movs	r6, r0
    52fa:	000f      	movs	r7, r1
    52fc:	0b1b      	lsrs	r3, r3, #12
    52fe:	2200      	movs	r2, #0
    5300:	2b02      	cmp	r3, #2
    5302:	dc2f      	bgt.n	5364 <__ieee754_log+0xdc>
    5304:	2300      	movs	r3, #0
    5306:	f001 fa85 	bl	6814 <__aeabi_dcmpeq>
    530a:	2800      	cmp	r0, #0
    530c:	d100      	bne.n	5310 <__ieee754_log+0x88>
    530e:	e0c1      	b.n	5494 <__ieee754_log+0x20c>
    5310:	464b      	mov	r3, r9
    5312:	2b00      	cmp	r3, #0
    5314:	d100      	bne.n	5318 <__ieee754_log+0x90>
    5316:	e14c      	b.n	55b2 <__ieee754_log+0x32a>
    5318:	4648      	mov	r0, r9
    531a:	f003 fe5f 	bl	8fdc <__aeabi_i2d>
    531e:	4abd      	ldr	r2, [pc, #756]	; (5614 <__ieee754_log+0x38c>)
    5320:	4bbd      	ldr	r3, [pc, #756]	; (5618 <__ieee754_log+0x390>)
    5322:	0004      	movs	r4, r0
    5324:	000d      	movs	r5, r1
    5326:	f003 f86f 	bl	8408 <__aeabi_dmul>
    532a:	4abc      	ldr	r2, [pc, #752]	; (561c <__ieee754_log+0x394>)
    532c:	0006      	movs	r6, r0
    532e:	000f      	movs	r7, r1
    5330:	4bbb      	ldr	r3, [pc, #748]	; (5620 <__ieee754_log+0x398>)
    5332:	0020      	movs	r0, r4
    5334:	0029      	movs	r1, r5
    5336:	f003 f867 	bl	8408 <__aeabi_dmul>
    533a:	0002      	movs	r2, r0
    533c:	000b      	movs	r3, r1
    533e:	0030      	movs	r0, r6
    5340:	0039      	movs	r1, r7
    5342:	f002 f91d 	bl	7580 <__aeabi_dadd>
    5346:	e007      	b.n	5358 <__ieee754_log+0xd0>
    5348:	4cae      	ldr	r4, [pc, #696]	; (5604 <__ieee754_log+0x37c>)
    534a:	2500      	movs	r5, #0
    534c:	42a3      	cmp	r3, r4
    534e:	ddb7      	ble.n	52c0 <__ieee754_log+0x38>
    5350:	0002      	movs	r2, r0
    5352:	000b      	movs	r3, r1
    5354:	f002 f914 	bl	7580 <__aeabi_dadd>
    5358:	b008      	add	sp, #32
    535a:	bc1c      	pop	{r2, r3, r4}
    535c:	4690      	mov	r8, r2
    535e:	4699      	mov	r9, r3
    5360:	46a2      	mov	sl, r4
    5362:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5364:	2380      	movs	r3, #128	; 0x80
    5366:	05db      	lsls	r3, r3, #23
    5368:	f002 f90a 	bl	7580 <__aeabi_dadd>
    536c:	0002      	movs	r2, r0
    536e:	000b      	movs	r3, r1
    5370:	0030      	movs	r0, r6
    5372:	0039      	movs	r1, r7
    5374:	f002 fc14 	bl	7ba0 <__aeabi_ddiv>
    5378:	0004      	movs	r4, r0
    537a:	4648      	mov	r0, r9
    537c:	000d      	movs	r5, r1
    537e:	f003 fe2d 	bl	8fdc <__aeabi_i2d>
    5382:	0022      	movs	r2, r4
    5384:	9002      	str	r0, [sp, #8]
    5386:	9103      	str	r1, [sp, #12]
    5388:	002b      	movs	r3, r5
    538a:	0020      	movs	r0, r4
    538c:	0029      	movs	r1, r5
    538e:	9404      	str	r4, [sp, #16]
    5390:	9505      	str	r5, [sp, #20]
    5392:	f003 f839 	bl	8408 <__aeabi_dmul>
    5396:	0004      	movs	r4, r0
    5398:	000d      	movs	r5, r1
    539a:	4ba2      	ldr	r3, [pc, #648]	; (5624 <__ieee754_log+0x39c>)
    539c:	0002      	movs	r2, r0
    539e:	4443      	add	r3, r8
    53a0:	469a      	mov	sl, r3
    53a2:	000b      	movs	r3, r1
    53a4:	9400      	str	r4, [sp, #0]
    53a6:	9501      	str	r5, [sp, #4]
    53a8:	f003 f82e 	bl	8408 <__aeabi_dmul>
    53ac:	0004      	movs	r4, r0
    53ae:	000d      	movs	r5, r1
    53b0:	4a9d      	ldr	r2, [pc, #628]	; (5628 <__ieee754_log+0x3a0>)
    53b2:	4b9e      	ldr	r3, [pc, #632]	; (562c <__ieee754_log+0x3a4>)
    53b4:	f003 f828 	bl	8408 <__aeabi_dmul>
    53b8:	4a9d      	ldr	r2, [pc, #628]	; (5630 <__ieee754_log+0x3a8>)
    53ba:	4b9e      	ldr	r3, [pc, #632]	; (5634 <__ieee754_log+0x3ac>)
    53bc:	f002 f8e0 	bl	7580 <__aeabi_dadd>
    53c0:	0022      	movs	r2, r4
    53c2:	002b      	movs	r3, r5
    53c4:	f003 f820 	bl	8408 <__aeabi_dmul>
    53c8:	4a9b      	ldr	r2, [pc, #620]	; (5638 <__ieee754_log+0x3b0>)
    53ca:	4b9c      	ldr	r3, [pc, #624]	; (563c <__ieee754_log+0x3b4>)
    53cc:	f002 f8d8 	bl	7580 <__aeabi_dadd>
    53d0:	0022      	movs	r2, r4
    53d2:	002b      	movs	r3, r5
    53d4:	f003 f818 	bl	8408 <__aeabi_dmul>
    53d8:	4a99      	ldr	r2, [pc, #612]	; (5640 <__ieee754_log+0x3b8>)
    53da:	4b9a      	ldr	r3, [pc, #616]	; (5644 <__ieee754_log+0x3bc>)
    53dc:	f002 f8d0 	bl	7580 <__aeabi_dadd>
    53e0:	9a00      	ldr	r2, [sp, #0]
    53e2:	9b01      	ldr	r3, [sp, #4]
    53e4:	f003 f810 	bl	8408 <__aeabi_dmul>
    53e8:	4a97      	ldr	r2, [pc, #604]	; (5648 <__ieee754_log+0x3c0>)
    53ea:	9000      	str	r0, [sp, #0]
    53ec:	9101      	str	r1, [sp, #4]
    53ee:	4b97      	ldr	r3, [pc, #604]	; (564c <__ieee754_log+0x3c4>)
    53f0:	0020      	movs	r0, r4
    53f2:	0029      	movs	r1, r5
    53f4:	f003 f808 	bl	8408 <__aeabi_dmul>
    53f8:	4a95      	ldr	r2, [pc, #596]	; (5650 <__ieee754_log+0x3c8>)
    53fa:	4b96      	ldr	r3, [pc, #600]	; (5654 <__ieee754_log+0x3cc>)
    53fc:	f002 f8c0 	bl	7580 <__aeabi_dadd>
    5400:	0022      	movs	r2, r4
    5402:	002b      	movs	r3, r5
    5404:	f003 f800 	bl	8408 <__aeabi_dmul>
    5408:	4a93      	ldr	r2, [pc, #588]	; (5658 <__ieee754_log+0x3d0>)
    540a:	4b94      	ldr	r3, [pc, #592]	; (565c <__ieee754_log+0x3d4>)
    540c:	f002 f8b8 	bl	7580 <__aeabi_dadd>
    5410:	0022      	movs	r2, r4
    5412:	002b      	movs	r3, r5
    5414:	f002 fff8 	bl	8408 <__aeabi_dmul>
    5418:	000b      	movs	r3, r1
    541a:	0002      	movs	r2, r0
    541c:	9800      	ldr	r0, [sp, #0]
    541e:	9901      	ldr	r1, [sp, #4]
    5420:	f002 f8ae 	bl	7580 <__aeabi_dadd>
    5424:	000d      	movs	r5, r1
    5426:	4641      	mov	r1, r8
    5428:	4b8d      	ldr	r3, [pc, #564]	; (5660 <__ieee754_log+0x3d8>)
    542a:	0004      	movs	r4, r0
    542c:	1a5b      	subs	r3, r3, r1
    542e:	4651      	mov	r1, sl
    5430:	430b      	orrs	r3, r1
    5432:	2b00      	cmp	r3, #0
    5434:	dd54      	ble.n	54e0 <__ieee754_log+0x258>
    5436:	2200      	movs	r2, #0
    5438:	4b8a      	ldr	r3, [pc, #552]	; (5664 <__ieee754_log+0x3dc>)
    543a:	0030      	movs	r0, r6
    543c:	0039      	movs	r1, r7
    543e:	f002 ffe3 	bl	8408 <__aeabi_dmul>
    5442:	0032      	movs	r2, r6
    5444:	003b      	movs	r3, r7
    5446:	f002 ffdf 	bl	8408 <__aeabi_dmul>
    544a:	464b      	mov	r3, r9
    544c:	000a      	movs	r2, r1
    544e:	0001      	movs	r1, r0
    5450:	9100      	str	r1, [sp, #0]
    5452:	9201      	str	r2, [sp, #4]
    5454:	2b00      	cmp	r3, #0
    5456:	d172      	bne.n	553e <__ieee754_log+0x2b6>
    5458:	0013      	movs	r3, r2
    545a:	0029      	movs	r1, r5
    545c:	0002      	movs	r2, r0
    545e:	0020      	movs	r0, r4
    5460:	f002 f88e 	bl	7580 <__aeabi_dadd>
    5464:	9a04      	ldr	r2, [sp, #16]
    5466:	9b05      	ldr	r3, [sp, #20]
    5468:	f002 ffce 	bl	8408 <__aeabi_dmul>
    546c:	0002      	movs	r2, r0
    546e:	000b      	movs	r3, r1
    5470:	9800      	ldr	r0, [sp, #0]
    5472:	9901      	ldr	r1, [sp, #4]
    5474:	f003 fa48 	bl	8908 <__aeabi_dsub>
    5478:	0002      	movs	r2, r0
    547a:	000b      	movs	r3, r1
    547c:	0030      	movs	r0, r6
    547e:	0039      	movs	r1, r7
    5480:	f003 fa42 	bl	8908 <__aeabi_dsub>
    5484:	e768      	b.n	5358 <__ieee754_log+0xd0>
    5486:	2200      	movs	r2, #0
    5488:	2300      	movs	r3, #0
    548a:	2000      	movs	r0, #0
    548c:	4976      	ldr	r1, [pc, #472]	; (5668 <__ieee754_log+0x3e0>)
    548e:	f002 fb87 	bl	7ba0 <__aeabi_ddiv>
    5492:	e761      	b.n	5358 <__ieee754_log+0xd0>
    5494:	4a75      	ldr	r2, [pc, #468]	; (566c <__ieee754_log+0x3e4>)
    5496:	4b76      	ldr	r3, [pc, #472]	; (5670 <__ieee754_log+0x3e8>)
    5498:	0030      	movs	r0, r6
    549a:	0039      	movs	r1, r7
    549c:	f002 ffb4 	bl	8408 <__aeabi_dmul>
    54a0:	0002      	movs	r2, r0
    54a2:	000b      	movs	r3, r1
    54a4:	2000      	movs	r0, #0
    54a6:	496f      	ldr	r1, [pc, #444]	; (5664 <__ieee754_log+0x3dc>)
    54a8:	f003 fa2e 	bl	8908 <__aeabi_dsub>
    54ac:	0032      	movs	r2, r6
    54ae:	0004      	movs	r4, r0
    54b0:	000d      	movs	r5, r1
    54b2:	003b      	movs	r3, r7
    54b4:	0030      	movs	r0, r6
    54b6:	0039      	movs	r1, r7
    54b8:	f002 ffa6 	bl	8408 <__aeabi_dmul>
    54bc:	000b      	movs	r3, r1
    54be:	0002      	movs	r2, r0
    54c0:	0029      	movs	r1, r5
    54c2:	0020      	movs	r0, r4
    54c4:	f002 ffa0 	bl	8408 <__aeabi_dmul>
    54c8:	464b      	mov	r3, r9
    54ca:	0004      	movs	r4, r0
    54cc:	000d      	movs	r5, r1
    54ce:	2b00      	cmp	r3, #0
    54d0:	d172      	bne.n	55b8 <__ieee754_log+0x330>
    54d2:	0002      	movs	r2, r0
    54d4:	000b      	movs	r3, r1
    54d6:	0030      	movs	r0, r6
    54d8:	0039      	movs	r1, r7
    54da:	f003 fa15 	bl	8908 <__aeabi_dsub>
    54de:	e73b      	b.n	5358 <__ieee754_log+0xd0>
    54e0:	464b      	mov	r3, r9
    54e2:	2b00      	cmp	r3, #0
    54e4:	d100      	bne.n	54e8 <__ieee754_log+0x260>
    54e6:	e0c5      	b.n	5674 <__ieee754_log+0x3ec>
    54e8:	9802      	ldr	r0, [sp, #8]
    54ea:	9903      	ldr	r1, [sp, #12]
    54ec:	4a49      	ldr	r2, [pc, #292]	; (5614 <__ieee754_log+0x38c>)
    54ee:	4b4a      	ldr	r3, [pc, #296]	; (5618 <__ieee754_log+0x390>)
    54f0:	f002 ff8a 	bl	8408 <__aeabi_dmul>
    54f4:	0022      	movs	r2, r4
    54f6:	9000      	str	r0, [sp, #0]
    54f8:	9101      	str	r1, [sp, #4]
    54fa:	002b      	movs	r3, r5
    54fc:	0030      	movs	r0, r6
    54fe:	0039      	movs	r1, r7
    5500:	f003 fa02 	bl	8908 <__aeabi_dsub>
    5504:	9a04      	ldr	r2, [sp, #16]
    5506:	9b05      	ldr	r3, [sp, #20]
    5508:	f002 ff7e 	bl	8408 <__aeabi_dmul>
    550c:	4a43      	ldr	r2, [pc, #268]	; (561c <__ieee754_log+0x394>)
    550e:	0004      	movs	r4, r0
    5510:	000d      	movs	r5, r1
    5512:	9802      	ldr	r0, [sp, #8]
    5514:	9903      	ldr	r1, [sp, #12]
    5516:	4b42      	ldr	r3, [pc, #264]	; (5620 <__ieee754_log+0x398>)
    5518:	f002 ff76 	bl	8408 <__aeabi_dmul>
    551c:	0002      	movs	r2, r0
    551e:	000b      	movs	r3, r1
    5520:	0020      	movs	r0, r4
    5522:	0029      	movs	r1, r5
    5524:	f003 f9f0 	bl	8908 <__aeabi_dsub>
    5528:	0032      	movs	r2, r6
    552a:	003b      	movs	r3, r7
    552c:	f003 f9ec 	bl	8908 <__aeabi_dsub>
    5530:	0002      	movs	r2, r0
    5532:	000b      	movs	r3, r1
    5534:	9800      	ldr	r0, [sp, #0]
    5536:	9901      	ldr	r1, [sp, #4]
    5538:	f003 f9e6 	bl	8908 <__aeabi_dsub>
    553c:	e70c      	b.n	5358 <__ieee754_log+0xd0>
    553e:	4a35      	ldr	r2, [pc, #212]	; (5614 <__ieee754_log+0x38c>)
    5540:	4b35      	ldr	r3, [pc, #212]	; (5618 <__ieee754_log+0x390>)
    5542:	9802      	ldr	r0, [sp, #8]
    5544:	9903      	ldr	r1, [sp, #12]
    5546:	f002 ff5f 	bl	8408 <__aeabi_dmul>
    554a:	9a00      	ldr	r2, [sp, #0]
    554c:	9b01      	ldr	r3, [sp, #4]
    554e:	9006      	str	r0, [sp, #24]
    5550:	9107      	str	r1, [sp, #28]
    5552:	0020      	movs	r0, r4
    5554:	0029      	movs	r1, r5
    5556:	f002 f813 	bl	7580 <__aeabi_dadd>
    555a:	9a04      	ldr	r2, [sp, #16]
    555c:	9b05      	ldr	r3, [sp, #20]
    555e:	f002 ff53 	bl	8408 <__aeabi_dmul>
    5562:	4a2e      	ldr	r2, [pc, #184]	; (561c <__ieee754_log+0x394>)
    5564:	0004      	movs	r4, r0
    5566:	000d      	movs	r5, r1
    5568:	9802      	ldr	r0, [sp, #8]
    556a:	9903      	ldr	r1, [sp, #12]
    556c:	4b2c      	ldr	r3, [pc, #176]	; (5620 <__ieee754_log+0x398>)
    556e:	f002 ff4b 	bl	8408 <__aeabi_dmul>
    5572:	0002      	movs	r2, r0
    5574:	000b      	movs	r3, r1
    5576:	0020      	movs	r0, r4
    5578:	0029      	movs	r1, r5
    557a:	f002 f801 	bl	7580 <__aeabi_dadd>
    557e:	0002      	movs	r2, r0
    5580:	000b      	movs	r3, r1
    5582:	9800      	ldr	r0, [sp, #0]
    5584:	9901      	ldr	r1, [sp, #4]
    5586:	f003 f9bf 	bl	8908 <__aeabi_dsub>
    558a:	0032      	movs	r2, r6
    558c:	003b      	movs	r3, r7
    558e:	f003 f9bb 	bl	8908 <__aeabi_dsub>
    5592:	0002      	movs	r2, r0
    5594:	000b      	movs	r3, r1
    5596:	9806      	ldr	r0, [sp, #24]
    5598:	9907      	ldr	r1, [sp, #28]
    559a:	f003 f9b5 	bl	8908 <__aeabi_dsub>
    559e:	e6db      	b.n	5358 <__ieee754_log+0xd0>
    55a0:	0002      	movs	r2, r0
    55a2:	000b      	movs	r3, r1
    55a4:	f003 f9b0 	bl	8908 <__aeabi_dsub>
    55a8:	2200      	movs	r2, #0
    55aa:	2300      	movs	r3, #0
    55ac:	f002 faf8 	bl	7ba0 <__aeabi_ddiv>
    55b0:	e6d2      	b.n	5358 <__ieee754_log+0xd0>
    55b2:	2000      	movs	r0, #0
    55b4:	2100      	movs	r1, #0
    55b6:	e6cf      	b.n	5358 <__ieee754_log+0xd0>
    55b8:	4648      	mov	r0, r9
    55ba:	f003 fd0f 	bl	8fdc <__aeabi_i2d>
    55be:	4a15      	ldr	r2, [pc, #84]	; (5614 <__ieee754_log+0x38c>)
    55c0:	4b15      	ldr	r3, [pc, #84]	; (5618 <__ieee754_log+0x390>)
    55c2:	9000      	str	r0, [sp, #0]
    55c4:	9101      	str	r1, [sp, #4]
    55c6:	f002 ff1f 	bl	8408 <__aeabi_dmul>
    55ca:	4a14      	ldr	r2, [pc, #80]	; (561c <__ieee754_log+0x394>)
    55cc:	9002      	str	r0, [sp, #8]
    55ce:	9103      	str	r1, [sp, #12]
    55d0:	9800      	ldr	r0, [sp, #0]
    55d2:	9901      	ldr	r1, [sp, #4]
    55d4:	4b12      	ldr	r3, [pc, #72]	; (5620 <__ieee754_log+0x398>)
    55d6:	f002 ff17 	bl	8408 <__aeabi_dmul>
    55da:	0002      	movs	r2, r0
    55dc:	000b      	movs	r3, r1
    55de:	0020      	movs	r0, r4
    55e0:	0029      	movs	r1, r5
    55e2:	f003 f991 	bl	8908 <__aeabi_dsub>
    55e6:	0032      	movs	r2, r6
    55e8:	003b      	movs	r3, r7
    55ea:	f003 f98d 	bl	8908 <__aeabi_dsub>
    55ee:	0002      	movs	r2, r0
    55f0:	000b      	movs	r3, r1
    55f2:	9802      	ldr	r0, [sp, #8]
    55f4:	9903      	ldr	r1, [sp, #12]
    55f6:	f003 f987 	bl	8908 <__aeabi_dsub>
    55fa:	e6ad      	b.n	5358 <__ieee754_log+0xd0>
    55fc:	000fffff 	.word	0x000fffff
    5600:	43500000 	.word	0x43500000
    5604:	7fefffff 	.word	0x7fefffff
    5608:	fffffc01 	.word	0xfffffc01
    560c:	00095f64 	.word	0x00095f64
    5610:	3ff00000 	.word	0x3ff00000
    5614:	fee00000 	.word	0xfee00000
    5618:	3fe62e42 	.word	0x3fe62e42
    561c:	35793c76 	.word	0x35793c76
    5620:	3dea39ef 	.word	0x3dea39ef
    5624:	fff9eb86 	.word	0xfff9eb86
    5628:	df3e5244 	.word	0xdf3e5244
    562c:	3fc2f112 	.word	0x3fc2f112
    5630:	96cb03de 	.word	0x96cb03de
    5634:	3fc74664 	.word	0x3fc74664
    5638:	94229359 	.word	0x94229359
    563c:	3fd24924 	.word	0x3fd24924
    5640:	55555593 	.word	0x55555593
    5644:	3fe55555 	.word	0x3fe55555
    5648:	d078c69f 	.word	0xd078c69f
    564c:	3fc39a09 	.word	0x3fc39a09
    5650:	1d8e78af 	.word	0x1d8e78af
    5654:	3fcc71c5 	.word	0x3fcc71c5
    5658:	9997fa04 	.word	0x9997fa04
    565c:	3fd99999 	.word	0x3fd99999
    5660:	0006b851 	.word	0x0006b851
    5664:	3fe00000 	.word	0x3fe00000
    5668:	c3500000 	.word	0xc3500000
    566c:	55555555 	.word	0x55555555
    5670:	3fd55555 	.word	0x3fd55555
    5674:	0022      	movs	r2, r4
    5676:	002b      	movs	r3, r5
    5678:	0030      	movs	r0, r6
    567a:	0039      	movs	r1, r7
    567c:	f003 f944 	bl	8908 <__aeabi_dsub>
    5680:	9a04      	ldr	r2, [sp, #16]
    5682:	9b05      	ldr	r3, [sp, #20]
    5684:	f002 fec0 	bl	8408 <__aeabi_dmul>
    5688:	e6f6      	b.n	5478 <__ieee754_log+0x1f0>
    568a:	46c0      	nop			; (mov r8, r8)

0000568c <__ieee754_pow>:
    568c:	b5f0      	push	{r4, r5, r6, r7, lr}
    568e:	4657      	mov	r7, sl
    5690:	464e      	mov	r6, r9
    5692:	4645      	mov	r5, r8
    5694:	46de      	mov	lr, fp
    5696:	001c      	movs	r4, r3
    5698:	0013      	movs	r3, r2
    569a:	b5e0      	push	{r5, r6, r7, lr}
    569c:	0065      	lsls	r5, r4, #1
    569e:	b091      	sub	sp, #68	; 0x44
    56a0:	086d      	lsrs	r5, r5, #1
    56a2:	9300      	str	r3, [sp, #0]
    56a4:	9401      	str	r4, [sp, #4]
    56a6:	0007      	movs	r7, r0
    56a8:	000e      	movs	r6, r1
    56aa:	4680      	mov	r8, r0
    56ac:	4689      	mov	r9, r1
    56ae:	46a2      	mov	sl, r4
    56b0:	432b      	orrs	r3, r5
    56b2:	d031      	beq.n	5718 <__ieee754_pow+0x8c>
    56b4:	4b67      	ldr	r3, [pc, #412]	; (5854 <__ieee754_pow+0x1c8>)
    56b6:	0074      	lsls	r4, r6, #1
    56b8:	0864      	lsrs	r4, r4, #1
    56ba:	429c      	cmp	r4, r3
    56bc:	dc27      	bgt.n	570e <__ieee754_pow+0x82>
    56be:	d024      	beq.n	570a <__ieee754_pow+0x7e>
    56c0:	429d      	cmp	r5, r3
    56c2:	dc24      	bgt.n	570e <__ieee754_pow+0x82>
    56c4:	4b63      	ldr	r3, [pc, #396]	; (5854 <__ieee754_pow+0x1c8>)
    56c6:	429d      	cmp	r5, r3
    56c8:	d100      	bne.n	56cc <__ieee754_pow+0x40>
    56ca:	e081      	b.n	57d0 <__ieee754_pow+0x144>
    56cc:	2300      	movs	r3, #0
    56ce:	469b      	mov	fp, r3
    56d0:	464b      	mov	r3, r9
    56d2:	2b00      	cmp	r3, #0
    56d4:	da00      	bge.n	56d8 <__ieee754_pow+0x4c>
    56d6:	e07f      	b.n	57d8 <__ieee754_pow+0x14c>
    56d8:	2a00      	cmp	r2, #0
    56da:	d12c      	bne.n	5736 <__ieee754_pow+0xaa>
    56dc:	4b5d      	ldr	r3, [pc, #372]	; (5854 <__ieee754_pow+0x1c8>)
    56de:	429d      	cmp	r5, r3
    56e0:	d100      	bne.n	56e4 <__ieee754_pow+0x58>
    56e2:	e097      	b.n	5814 <__ieee754_pow+0x188>
    56e4:	4b5c      	ldr	r3, [pc, #368]	; (5858 <__ieee754_pow+0x1cc>)
    56e6:	429d      	cmp	r5, r3
    56e8:	d066      	beq.n	57b8 <__ieee754_pow+0x12c>
    56ea:	2380      	movs	r3, #128	; 0x80
    56ec:	05db      	lsls	r3, r3, #23
    56ee:	459a      	cmp	sl, r3
    56f0:	d100      	bne.n	56f4 <__ieee754_pow+0x68>
    56f2:	e3b9      	b.n	5e68 <__ieee754_pow+0x7dc>
    56f4:	4b59      	ldr	r3, [pc, #356]	; (585c <__ieee754_pow+0x1d0>)
    56f6:	459a      	cmp	sl, r3
    56f8:	d11d      	bne.n	5736 <__ieee754_pow+0xaa>
    56fa:	464b      	mov	r3, r9
    56fc:	2b00      	cmp	r3, #0
    56fe:	db1a      	blt.n	5736 <__ieee754_pow+0xaa>
    5700:	0038      	movs	r0, r7
    5702:	0031      	movs	r1, r6
    5704:	f000 fcf8 	bl	60f8 <__ieee754_sqrt>
    5708:	e008      	b.n	571c <__ieee754_pow+0x90>
    570a:	2800      	cmp	r0, #0
    570c:	d00d      	beq.n	572a <__ieee754_pow+0x9e>
    570e:	4b54      	ldr	r3, [pc, #336]	; (5860 <__ieee754_pow+0x1d4>)
    5710:	469c      	mov	ip, r3
    5712:	4464      	add	r4, ip
    5714:	4327      	orrs	r7, r4
    5716:	d10a      	bne.n	572e <__ieee754_pow+0xa2>
    5718:	2000      	movs	r0, #0
    571a:	494f      	ldr	r1, [pc, #316]	; (5858 <__ieee754_pow+0x1cc>)
    571c:	b011      	add	sp, #68	; 0x44
    571e:	bc3c      	pop	{r2, r3, r4, r5}
    5720:	4690      	mov	r8, r2
    5722:	4699      	mov	r9, r3
    5724:	46a2      	mov	sl, r4
    5726:	46ab      	mov	fp, r5
    5728:	bdf0      	pop	{r4, r5, r6, r7, pc}
    572a:	42a5      	cmp	r5, r4
    572c:	ddca      	ble.n	56c4 <__ieee754_pow+0x38>
    572e:	484d      	ldr	r0, [pc, #308]	; (5864 <__ieee754_pow+0x1d8>)
    5730:	f000 fdd2 	bl	62d8 <nan>
    5734:	e7f2      	b.n	571c <__ieee754_pow+0x90>
    5736:	0038      	movs	r0, r7
    5738:	0031      	movs	r1, r6
    573a:	f000 fdbd 	bl	62b8 <fabs>
    573e:	4643      	mov	r3, r8
    5740:	2b00      	cmp	r3, #0
    5742:	d11d      	bne.n	5780 <__ieee754_pow+0xf4>
    5744:	2c00      	cmp	r4, #0
    5746:	d004      	beq.n	5752 <__ieee754_pow+0xc6>
    5748:	4a43      	ldr	r2, [pc, #268]	; (5858 <__ieee754_pow+0x1cc>)
    574a:	00b3      	lsls	r3, r6, #2
    574c:	089b      	lsrs	r3, r3, #2
    574e:	4293      	cmp	r3, r2
    5750:	d116      	bne.n	5780 <__ieee754_pow+0xf4>
    5752:	4653      	mov	r3, sl
    5754:	2b00      	cmp	r3, #0
    5756:	da00      	bge.n	575a <__ieee754_pow+0xce>
    5758:	e3c5      	b.n	5ee6 <__ieee754_pow+0x85a>
    575a:	464b      	mov	r3, r9
    575c:	2b00      	cmp	r3, #0
    575e:	dadd      	bge.n	571c <__ieee754_pow+0x90>
    5760:	4b3f      	ldr	r3, [pc, #252]	; (5860 <__ieee754_pow+0x1d4>)
    5762:	469c      	mov	ip, r3
    5764:	465b      	mov	r3, fp
    5766:	4464      	add	r4, ip
    5768:	431c      	orrs	r4, r3
    576a:	d101      	bne.n	5770 <__ieee754_pow+0xe4>
    576c:	f000 fc53 	bl	6016 <__ieee754_pow+0x98a>
    5770:	465b      	mov	r3, fp
    5772:	2b01      	cmp	r3, #1
    5774:	d1d2      	bne.n	571c <__ieee754_pow+0x90>
    5776:	2480      	movs	r4, #128	; 0x80
    5778:	0624      	lsls	r4, r4, #24
    577a:	190b      	adds	r3, r1, r4
    577c:	0019      	movs	r1, r3
    577e:	e7cd      	b.n	571c <__ieee754_pow+0x90>
    5780:	0ff3      	lsrs	r3, r6, #31
    5782:	3b01      	subs	r3, #1
    5784:	4698      	mov	r8, r3
    5786:	465b      	mov	r3, fp
    5788:	4642      	mov	r2, r8
    578a:	4313      	orrs	r3, r2
    578c:	d057      	beq.n	583e <__ieee754_pow+0x1b2>
    578e:	4b36      	ldr	r3, [pc, #216]	; (5868 <__ieee754_pow+0x1dc>)
    5790:	429d      	cmp	r5, r3
    5792:	dd77      	ble.n	5884 <__ieee754_pow+0x1f8>
    5794:	4b35      	ldr	r3, [pc, #212]	; (586c <__ieee754_pow+0x1e0>)
    5796:	429d      	cmp	r5, r3
    5798:	dc00      	bgt.n	579c <__ieee754_pow+0x110>
    579a:	e3b1      	b.n	5f00 <__ieee754_pow+0x874>
    579c:	4b34      	ldr	r3, [pc, #208]	; (5870 <__ieee754_pow+0x1e4>)
    579e:	429c      	cmp	r4, r3
    57a0:	dc00      	bgt.n	57a4 <__ieee754_pow+0x118>
    57a2:	e3a8      	b.n	5ef6 <__ieee754_pow+0x86a>
    57a4:	4653      	mov	r3, sl
    57a6:	2b00      	cmp	r3, #0
    57a8:	dd43      	ble.n	5832 <__ieee754_pow+0x1a6>
    57aa:	4a32      	ldr	r2, [pc, #200]	; (5874 <__ieee754_pow+0x1e8>)
    57ac:	4b32      	ldr	r3, [pc, #200]	; (5878 <__ieee754_pow+0x1ec>)
    57ae:	0010      	movs	r0, r2
    57b0:	0019      	movs	r1, r3
    57b2:	f002 fe29 	bl	8408 <__aeabi_dmul>
    57b6:	e7b1      	b.n	571c <__ieee754_pow+0x90>
    57b8:	4653      	mov	r3, sl
    57ba:	0038      	movs	r0, r7
    57bc:	0031      	movs	r1, r6
    57be:	2b00      	cmp	r3, #0
    57c0:	daac      	bge.n	571c <__ieee754_pow+0x90>
    57c2:	003a      	movs	r2, r7
    57c4:	0033      	movs	r3, r6
    57c6:	2000      	movs	r0, #0
    57c8:	4923      	ldr	r1, [pc, #140]	; (5858 <__ieee754_pow+0x1cc>)
    57ca:	f002 f9e9 	bl	7ba0 <__aeabi_ddiv>
    57ce:	e7a5      	b.n	571c <__ieee754_pow+0x90>
    57d0:	2a00      	cmp	r2, #0
    57d2:	d100      	bne.n	57d6 <__ieee754_pow+0x14a>
    57d4:	e77a      	b.n	56cc <__ieee754_pow+0x40>
    57d6:	e79a      	b.n	570e <__ieee754_pow+0x82>
    57d8:	4b28      	ldr	r3, [pc, #160]	; (587c <__ieee754_pow+0x1f0>)
    57da:	429d      	cmp	r5, r3
    57dc:	dc2c      	bgt.n	5838 <__ieee754_pow+0x1ac>
    57de:	4b24      	ldr	r3, [pc, #144]	; (5870 <__ieee754_pow+0x1e4>)
    57e0:	429d      	cmp	r5, r3
    57e2:	dc00      	bgt.n	57e6 <__ieee754_pow+0x15a>
    57e4:	e778      	b.n	56d8 <__ieee754_pow+0x4c>
    57e6:	4926      	ldr	r1, [pc, #152]	; (5880 <__ieee754_pow+0x1f4>)
    57e8:	152b      	asrs	r3, r5, #20
    57ea:	468c      	mov	ip, r1
    57ec:	4463      	add	r3, ip
    57ee:	2b14      	cmp	r3, #20
    57f0:	dc01      	bgt.n	57f6 <__ieee754_pow+0x16a>
    57f2:	f000 fbf3 	bl	5fdc <__ieee754_pow+0x950>
    57f6:	2134      	movs	r1, #52	; 0x34
    57f8:	1acb      	subs	r3, r1, r3
    57fa:	9900      	ldr	r1, [sp, #0]
    57fc:	40d9      	lsrs	r1, r3
    57fe:	0008      	movs	r0, r1
    5800:	4098      	lsls	r0, r3
    5802:	4282      	cmp	r2, r0
    5804:	d000      	beq.n	5808 <__ieee754_pow+0x17c>
    5806:	e767      	b.n	56d8 <__ieee754_pow+0x4c>
    5808:	2301      	movs	r3, #1
    580a:	4019      	ands	r1, r3
    580c:	3301      	adds	r3, #1
    580e:	1a5b      	subs	r3, r3, r1
    5810:	469b      	mov	fp, r3
    5812:	e761      	b.n	56d8 <__ieee754_pow+0x4c>
    5814:	4b12      	ldr	r3, [pc, #72]	; (5860 <__ieee754_pow+0x1d4>)
    5816:	18e3      	adds	r3, r4, r3
    5818:	431f      	orrs	r7, r3
    581a:	d100      	bne.n	581e <__ieee754_pow+0x192>
    581c:	e77c      	b.n	5718 <__ieee754_pow+0x8c>
    581e:	4b14      	ldr	r3, [pc, #80]	; (5870 <__ieee754_pow+0x1e4>)
    5820:	429c      	cmp	r4, r3
    5822:	dc00      	bgt.n	5826 <__ieee754_pow+0x19a>
    5824:	e327      	b.n	5e76 <__ieee754_pow+0x7ea>
    5826:	9800      	ldr	r0, [sp, #0]
    5828:	9901      	ldr	r1, [sp, #4]
    582a:	4653      	mov	r3, sl
    582c:	2b00      	cmp	r3, #0
    582e:	db00      	blt.n	5832 <__ieee754_pow+0x1a6>
    5830:	e774      	b.n	571c <__ieee754_pow+0x90>
    5832:	2000      	movs	r0, #0
    5834:	2100      	movs	r1, #0
    5836:	e771      	b.n	571c <__ieee754_pow+0x90>
    5838:	2302      	movs	r3, #2
    583a:	469b      	mov	fp, r3
    583c:	e74c      	b.n	56d8 <__ieee754_pow+0x4c>
    583e:	003a      	movs	r2, r7
    5840:	0033      	movs	r3, r6
    5842:	0038      	movs	r0, r7
    5844:	0031      	movs	r1, r6
    5846:	f003 f85f 	bl	8908 <__aeabi_dsub>
    584a:	0002      	movs	r2, r0
    584c:	000b      	movs	r3, r1
    584e:	f002 f9a7 	bl	7ba0 <__aeabi_ddiv>
    5852:	e763      	b.n	571c <__ieee754_pow+0x90>
    5854:	7ff00000 	.word	0x7ff00000
    5858:	3ff00000 	.word	0x3ff00000
    585c:	3fe00000 	.word	0x3fe00000
    5860:	c0100000 	.word	0xc0100000
    5864:	0000e07c 	.word	0x0000e07c
    5868:	41e00000 	.word	0x41e00000
    586c:	43f00000 	.word	0x43f00000
    5870:	3fefffff 	.word	0x3fefffff
    5874:	8800759c 	.word	0x8800759c
    5878:	7e37e43c 	.word	0x7e37e43c
    587c:	433fffff 	.word	0x433fffff
    5880:	fffffc01 	.word	0xfffffc01
    5884:	4be9      	ldr	r3, [pc, #932]	; (5c2c <__ieee754_pow+0x5a0>)
    5886:	2200      	movs	r2, #0
    5888:	429c      	cmp	r4, r3
    588a:	dc06      	bgt.n	589a <__ieee754_pow+0x20e>
    588c:	2200      	movs	r2, #0
    588e:	4be8      	ldr	r3, [pc, #928]	; (5c30 <__ieee754_pow+0x5a4>)
    5890:	f002 fdba 	bl	8408 <__aeabi_dmul>
    5894:	2235      	movs	r2, #53	; 0x35
    5896:	000c      	movs	r4, r1
    5898:	4252      	negs	r2, r2
    589a:	4de6      	ldr	r5, [pc, #920]	; (5c34 <__ieee754_pow+0x5a8>)
    589c:	1523      	asrs	r3, r4, #20
    589e:	46ac      	mov	ip, r5
    58a0:	4463      	add	r3, ip
    58a2:	4699      	mov	r9, r3
    58a4:	0324      	lsls	r4, r4, #12
    58a6:	4de4      	ldr	r5, [pc, #912]	; (5c38 <__ieee754_pow+0x5ac>)
    58a8:	4be4      	ldr	r3, [pc, #912]	; (5c3c <__ieee754_pow+0x5b0>)
    58aa:	0b24      	lsrs	r4, r4, #12
    58ac:	4491      	add	r9, r2
    58ae:	4325      	orrs	r5, r4
    58b0:	429c      	cmp	r4, r3
    58b2:	dd09      	ble.n	58c8 <__ieee754_pow+0x23c>
    58b4:	4be2      	ldr	r3, [pc, #904]	; (5c40 <__ieee754_pow+0x5b4>)
    58b6:	429c      	cmp	r4, r3
    58b8:	dc00      	bgt.n	58bc <__ieee754_pow+0x230>
    58ba:	e3b6      	b.n	602a <__ieee754_pow+0x99e>
    58bc:	2301      	movs	r3, #1
    58be:	469c      	mov	ip, r3
    58c0:	4be0      	ldr	r3, [pc, #896]	; (5c44 <__ieee754_pow+0x5b8>)
    58c2:	44e1      	add	r9, ip
    58c4:	469c      	mov	ip, r3
    58c6:	4465      	add	r5, ip
    58c8:	2300      	movs	r3, #0
    58ca:	2400      	movs	r4, #0
    58cc:	2200      	movs	r2, #0
    58ce:	9308      	str	r3, [sp, #32]
    58d0:	9409      	str	r4, [sp, #36]	; 0x24
    58d2:	930c      	str	r3, [sp, #48]	; 0x30
    58d4:	940d      	str	r4, [sp, #52]	; 0x34
    58d6:	2400      	movs	r4, #0
    58d8:	4bd7      	ldr	r3, [pc, #860]	; (5c38 <__ieee754_pow+0x5ac>)
    58da:	9206      	str	r2, [sp, #24]
    58dc:	9307      	str	r3, [sp, #28]
    58de:	9a06      	ldr	r2, [sp, #24]
    58e0:	9b07      	ldr	r3, [sp, #28]
    58e2:	0029      	movs	r1, r5
    58e4:	900a      	str	r0, [sp, #40]	; 0x28
    58e6:	910b      	str	r1, [sp, #44]	; 0x2c
    58e8:	f003 f80e 	bl	8908 <__aeabi_dsub>
    58ec:	9a06      	ldr	r2, [sp, #24]
    58ee:	9b07      	ldr	r3, [sp, #28]
    58f0:	0006      	movs	r6, r0
    58f2:	000f      	movs	r7, r1
    58f4:	980a      	ldr	r0, [sp, #40]	; 0x28
    58f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
    58f8:	f001 fe42 	bl	7580 <__aeabi_dadd>
    58fc:	0002      	movs	r2, r0
    58fe:	000b      	movs	r3, r1
    5900:	2000      	movs	r0, #0
    5902:	49cd      	ldr	r1, [pc, #820]	; (5c38 <__ieee754_pow+0x5ac>)
    5904:	f002 f94c 	bl	7ba0 <__aeabi_ddiv>
    5908:	000a      	movs	r2, r1
    590a:	0001      	movs	r1, r0
    590c:	0013      	movs	r3, r2
    590e:	910e      	str	r1, [sp, #56]	; 0x38
    5910:	920f      	str	r2, [sp, #60]	; 0x3c
    5912:	0002      	movs	r2, r0
    5914:	0039      	movs	r1, r7
    5916:	0030      	movs	r0, r6
    5918:	f002 fd76 	bl	8408 <__aeabi_dmul>
    591c:	000a      	movs	r2, r1
    591e:	0001      	movs	r1, r0
    5920:	2080      	movs	r0, #128	; 0x80
    5922:	9104      	str	r1, [sp, #16]
    5924:	9205      	str	r2, [sp, #20]
    5926:	0013      	movs	r3, r2
    5928:	2200      	movs	r2, #0
    592a:	1069      	asrs	r1, r5, #1
    592c:	2580      	movs	r5, #128	; 0x80
    592e:	0300      	lsls	r0, r0, #12
    5930:	4684      	mov	ip, r0
    5932:	9202      	str	r2, [sp, #8]
    5934:	9303      	str	r3, [sp, #12]
    5936:	2200      	movs	r2, #0
    5938:	05ad      	lsls	r5, r5, #22
    593a:	430d      	orrs	r5, r1
    593c:	4465      	add	r5, ip
    593e:	192b      	adds	r3, r5, r4
    5940:	9802      	ldr	r0, [sp, #8]
    5942:	9903      	ldr	r1, [sp, #12]
    5944:	0014      	movs	r4, r2
    5946:	001d      	movs	r5, r3
    5948:	f002 fd5e 	bl	8408 <__aeabi_dmul>
    594c:	0002      	movs	r2, r0
    594e:	000b      	movs	r3, r1
    5950:	0030      	movs	r0, r6
    5952:	0039      	movs	r1, r7
    5954:	f002 ffd8 	bl	8908 <__aeabi_dsub>
    5958:	9a06      	ldr	r2, [sp, #24]
    595a:	9b07      	ldr	r3, [sp, #28]
    595c:	0006      	movs	r6, r0
    595e:	000f      	movs	r7, r1
    5960:	0020      	movs	r0, r4
    5962:	0029      	movs	r1, r5
    5964:	f002 ffd0 	bl	8908 <__aeabi_dsub>
    5968:	0002      	movs	r2, r0
    596a:	000b      	movs	r3, r1
    596c:	980a      	ldr	r0, [sp, #40]	; 0x28
    596e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    5970:	f002 ffca 	bl	8908 <__aeabi_dsub>
    5974:	9a02      	ldr	r2, [sp, #8]
    5976:	9b03      	ldr	r3, [sp, #12]
    5978:	f002 fd46 	bl	8408 <__aeabi_dmul>
    597c:	0002      	movs	r2, r0
    597e:	000b      	movs	r3, r1
    5980:	0030      	movs	r0, r6
    5982:	0039      	movs	r1, r7
    5984:	f002 ffc0 	bl	8908 <__aeabi_dsub>
    5988:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    598a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    598c:	f002 fd3c 	bl	8408 <__aeabi_dmul>
    5990:	9d04      	ldr	r5, [sp, #16]
    5992:	9e05      	ldr	r6, [sp, #20]
    5994:	9006      	str	r0, [sp, #24]
    5996:	9107      	str	r1, [sp, #28]
    5998:	002a      	movs	r2, r5
    599a:	0033      	movs	r3, r6
    599c:	0028      	movs	r0, r5
    599e:	0031      	movs	r1, r6
    59a0:	f002 fd32 	bl	8408 <__aeabi_dmul>
    59a4:	0006      	movs	r6, r0
    59a6:	000f      	movs	r7, r1
    59a8:	4aa7      	ldr	r2, [pc, #668]	; (5c48 <__ieee754_pow+0x5bc>)
    59aa:	4ba8      	ldr	r3, [pc, #672]	; (5c4c <__ieee754_pow+0x5c0>)
    59ac:	f002 fd2c 	bl	8408 <__aeabi_dmul>
    59b0:	4aa7      	ldr	r2, [pc, #668]	; (5c50 <__ieee754_pow+0x5c4>)
    59b2:	4ba8      	ldr	r3, [pc, #672]	; (5c54 <__ieee754_pow+0x5c8>)
    59b4:	f001 fde4 	bl	7580 <__aeabi_dadd>
    59b8:	0032      	movs	r2, r6
    59ba:	003b      	movs	r3, r7
    59bc:	f002 fd24 	bl	8408 <__aeabi_dmul>
    59c0:	4aa5      	ldr	r2, [pc, #660]	; (5c58 <__ieee754_pow+0x5cc>)
    59c2:	4ba6      	ldr	r3, [pc, #664]	; (5c5c <__ieee754_pow+0x5d0>)
    59c4:	f001 fddc 	bl	7580 <__aeabi_dadd>
    59c8:	0032      	movs	r2, r6
    59ca:	003b      	movs	r3, r7
    59cc:	f002 fd1c 	bl	8408 <__aeabi_dmul>
    59d0:	4aa3      	ldr	r2, [pc, #652]	; (5c60 <__ieee754_pow+0x5d4>)
    59d2:	4ba4      	ldr	r3, [pc, #656]	; (5c64 <__ieee754_pow+0x5d8>)
    59d4:	f001 fdd4 	bl	7580 <__aeabi_dadd>
    59d8:	0032      	movs	r2, r6
    59da:	003b      	movs	r3, r7
    59dc:	f002 fd14 	bl	8408 <__aeabi_dmul>
    59e0:	4aa1      	ldr	r2, [pc, #644]	; (5c68 <__ieee754_pow+0x5dc>)
    59e2:	4ba2      	ldr	r3, [pc, #648]	; (5c6c <__ieee754_pow+0x5e0>)
    59e4:	f001 fdcc 	bl	7580 <__aeabi_dadd>
    59e8:	0032      	movs	r2, r6
    59ea:	003b      	movs	r3, r7
    59ec:	f002 fd0c 	bl	8408 <__aeabi_dmul>
    59f0:	4a9f      	ldr	r2, [pc, #636]	; (5c70 <__ieee754_pow+0x5e4>)
    59f2:	4ba0      	ldr	r3, [pc, #640]	; (5c74 <__ieee754_pow+0x5e8>)
    59f4:	f001 fdc4 	bl	7580 <__aeabi_dadd>
    59f8:	0032      	movs	r2, r6
    59fa:	0004      	movs	r4, r0
    59fc:	000d      	movs	r5, r1
    59fe:	003b      	movs	r3, r7
    5a00:	0030      	movs	r0, r6
    5a02:	0039      	movs	r1, r7
    5a04:	f002 fd00 	bl	8408 <__aeabi_dmul>
    5a08:	0002      	movs	r2, r0
    5a0a:	000b      	movs	r3, r1
    5a0c:	0020      	movs	r0, r4
    5a0e:	0029      	movs	r1, r5
    5a10:	f002 fcfa 	bl	8408 <__aeabi_dmul>
    5a14:	9e02      	ldr	r6, [sp, #8]
    5a16:	9f03      	ldr	r7, [sp, #12]
    5a18:	0004      	movs	r4, r0
    5a1a:	000d      	movs	r5, r1
    5a1c:	9804      	ldr	r0, [sp, #16]
    5a1e:	9905      	ldr	r1, [sp, #20]
    5a20:	0032      	movs	r2, r6
    5a22:	003b      	movs	r3, r7
    5a24:	f001 fdac 	bl	7580 <__aeabi_dadd>
    5a28:	9a06      	ldr	r2, [sp, #24]
    5a2a:	9b07      	ldr	r3, [sp, #28]
    5a2c:	f002 fcec 	bl	8408 <__aeabi_dmul>
    5a30:	0022      	movs	r2, r4
    5a32:	002b      	movs	r3, r5
    5a34:	f001 fda4 	bl	7580 <__aeabi_dadd>
    5a38:	0032      	movs	r2, r6
    5a3a:	900a      	str	r0, [sp, #40]	; 0x28
    5a3c:	910b      	str	r1, [sp, #44]	; 0x2c
    5a3e:	003b      	movs	r3, r7
    5a40:	0030      	movs	r0, r6
    5a42:	0039      	movs	r1, r7
    5a44:	9602      	str	r6, [sp, #8]
    5a46:	9703      	str	r7, [sp, #12]
    5a48:	f002 fcde 	bl	8408 <__aeabi_dmul>
    5a4c:	2200      	movs	r2, #0
    5a4e:	4b8a      	ldr	r3, [pc, #552]	; (5c78 <__ieee754_pow+0x5ec>)
    5a50:	0004      	movs	r4, r0
    5a52:	000d      	movs	r5, r1
    5a54:	f001 fd94 	bl	7580 <__aeabi_dadd>
    5a58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5a5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5a5c:	f001 fd90 	bl	7580 <__aeabi_dadd>
    5a60:	2600      	movs	r6, #0
    5a62:	000f      	movs	r7, r1
    5a64:	0032      	movs	r2, r6
    5a66:	000b      	movs	r3, r1
    5a68:	9802      	ldr	r0, [sp, #8]
    5a6a:	9903      	ldr	r1, [sp, #12]
    5a6c:	f002 fccc 	bl	8408 <__aeabi_dmul>
    5a70:	2200      	movs	r2, #0
    5a72:	9002      	str	r0, [sp, #8]
    5a74:	9103      	str	r1, [sp, #12]
    5a76:	4b80      	ldr	r3, [pc, #512]	; (5c78 <__ieee754_pow+0x5ec>)
    5a78:	0030      	movs	r0, r6
    5a7a:	0039      	movs	r1, r7
    5a7c:	f002 ff44 	bl	8908 <__aeabi_dsub>
    5a80:	0022      	movs	r2, r4
    5a82:	002b      	movs	r3, r5
    5a84:	f002 ff40 	bl	8908 <__aeabi_dsub>
    5a88:	0002      	movs	r2, r0
    5a8a:	000b      	movs	r3, r1
    5a8c:	980a      	ldr	r0, [sp, #40]	; 0x28
    5a8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    5a90:	f002 ff3a 	bl	8908 <__aeabi_dsub>
    5a94:	9a04      	ldr	r2, [sp, #16]
    5a96:	9b05      	ldr	r3, [sp, #20]
    5a98:	f002 fcb6 	bl	8408 <__aeabi_dmul>
    5a9c:	0032      	movs	r2, r6
    5a9e:	0004      	movs	r4, r0
    5aa0:	000d      	movs	r5, r1
    5aa2:	9806      	ldr	r0, [sp, #24]
    5aa4:	9907      	ldr	r1, [sp, #28]
    5aa6:	003b      	movs	r3, r7
    5aa8:	f002 fcae 	bl	8408 <__aeabi_dmul>
    5aac:	0002      	movs	r2, r0
    5aae:	000b      	movs	r3, r1
    5ab0:	0020      	movs	r0, r4
    5ab2:	0029      	movs	r1, r5
    5ab4:	f001 fd64 	bl	7580 <__aeabi_dadd>
    5ab8:	0004      	movs	r4, r0
    5aba:	000d      	movs	r5, r1
    5abc:	0002      	movs	r2, r0
    5abe:	000b      	movs	r3, r1
    5ac0:	9802      	ldr	r0, [sp, #8]
    5ac2:	9903      	ldr	r1, [sp, #12]
    5ac4:	f001 fd5c 	bl	7580 <__aeabi_dadd>
    5ac8:	2600      	movs	r6, #0
    5aca:	22e0      	movs	r2, #224	; 0xe0
    5acc:	4b6b      	ldr	r3, [pc, #428]	; (5c7c <__ieee754_pow+0x5f0>)
    5ace:	0612      	lsls	r2, r2, #24
    5ad0:	0030      	movs	r0, r6
    5ad2:	000f      	movs	r7, r1
    5ad4:	f002 fc98 	bl	8408 <__aeabi_dmul>
    5ad8:	9a02      	ldr	r2, [sp, #8]
    5ada:	9b03      	ldr	r3, [sp, #12]
    5adc:	9004      	str	r0, [sp, #16]
    5ade:	9105      	str	r1, [sp, #20]
    5ae0:	0030      	movs	r0, r6
    5ae2:	0039      	movs	r1, r7
    5ae4:	f002 ff10 	bl	8908 <__aeabi_dsub>
    5ae8:	0002      	movs	r2, r0
    5aea:	000b      	movs	r3, r1
    5aec:	0020      	movs	r0, r4
    5aee:	0029      	movs	r1, r5
    5af0:	f002 ff0a 	bl	8908 <__aeabi_dsub>
    5af4:	4a62      	ldr	r2, [pc, #392]	; (5c80 <__ieee754_pow+0x5f4>)
    5af6:	4b61      	ldr	r3, [pc, #388]	; (5c7c <__ieee754_pow+0x5f0>)
    5af8:	f002 fc86 	bl	8408 <__aeabi_dmul>
    5afc:	4a61      	ldr	r2, [pc, #388]	; (5c84 <__ieee754_pow+0x5f8>)
    5afe:	0004      	movs	r4, r0
    5b00:	000d      	movs	r5, r1
    5b02:	4b61      	ldr	r3, [pc, #388]	; (5c88 <__ieee754_pow+0x5fc>)
    5b04:	0030      	movs	r0, r6
    5b06:	0039      	movs	r1, r7
    5b08:	f002 fc7e 	bl	8408 <__aeabi_dmul>
    5b0c:	0002      	movs	r2, r0
    5b0e:	000b      	movs	r3, r1
    5b10:	0020      	movs	r0, r4
    5b12:	0029      	movs	r1, r5
    5b14:	f001 fd34 	bl	7580 <__aeabi_dadd>
    5b18:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5b1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5b1c:	f001 fd30 	bl	7580 <__aeabi_dadd>
    5b20:	0006      	movs	r6, r0
    5b22:	4648      	mov	r0, r9
    5b24:	000f      	movs	r7, r1
    5b26:	f003 fa59 	bl	8fdc <__aeabi_i2d>
    5b2a:	0004      	movs	r4, r0
    5b2c:	000d      	movs	r5, r1
    5b2e:	9804      	ldr	r0, [sp, #16]
    5b30:	9905      	ldr	r1, [sp, #20]
    5b32:	0032      	movs	r2, r6
    5b34:	003b      	movs	r3, r7
    5b36:	f001 fd23 	bl	7580 <__aeabi_dadd>
    5b3a:	9a08      	ldr	r2, [sp, #32]
    5b3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5b3e:	f001 fd1f 	bl	7580 <__aeabi_dadd>
    5b42:	0022      	movs	r2, r4
    5b44:	002b      	movs	r3, r5
    5b46:	f001 fd1b 	bl	7580 <__aeabi_dadd>
    5b4a:	2000      	movs	r0, #0
    5b4c:	0022      	movs	r2, r4
    5b4e:	002b      	movs	r3, r5
    5b50:	9002      	str	r0, [sp, #8]
    5b52:	9103      	str	r1, [sp, #12]
    5b54:	f002 fed8 	bl	8908 <__aeabi_dsub>
    5b58:	9a08      	ldr	r2, [sp, #32]
    5b5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5b5c:	f002 fed4 	bl	8908 <__aeabi_dsub>
    5b60:	9a04      	ldr	r2, [sp, #16]
    5b62:	9b05      	ldr	r3, [sp, #20]
    5b64:	f002 fed0 	bl	8908 <__aeabi_dsub>
    5b68:	0002      	movs	r2, r0
    5b6a:	000b      	movs	r3, r1
    5b6c:	0030      	movs	r0, r6
    5b6e:	0039      	movs	r1, r7
    5b70:	f002 feca 	bl	8908 <__aeabi_dsub>
    5b74:	9004      	str	r0, [sp, #16]
    5b76:	9105      	str	r1, [sp, #20]
    5b78:	465b      	mov	r3, fp
    5b7a:	4642      	mov	r2, r8
    5b7c:	3b01      	subs	r3, #1
    5b7e:	4313      	orrs	r3, r2
    5b80:	d100      	bne.n	5b84 <__ieee754_pow+0x4f8>
    5b82:	e1ab      	b.n	5edc <__ieee754_pow+0x850>
    5b84:	2300      	movs	r3, #0
    5b86:	4c2c      	ldr	r4, [pc, #176]	; (5c38 <__ieee754_pow+0x5ac>)
    5b88:	9306      	str	r3, [sp, #24]
    5b8a:	9407      	str	r4, [sp, #28]
    5b8c:	9800      	ldr	r0, [sp, #0]
    5b8e:	9901      	ldr	r1, [sp, #4]
    5b90:	2600      	movs	r6, #0
    5b92:	000b      	movs	r3, r1
    5b94:	0032      	movs	r2, r6
    5b96:	000f      	movs	r7, r1
    5b98:	f002 feb6 	bl	8908 <__aeabi_dsub>
    5b9c:	9a02      	ldr	r2, [sp, #8]
    5b9e:	9b03      	ldr	r3, [sp, #12]
    5ba0:	f002 fc32 	bl	8408 <__aeabi_dmul>
    5ba4:	9a00      	ldr	r2, [sp, #0]
    5ba6:	9b01      	ldr	r3, [sp, #4]
    5ba8:	0004      	movs	r4, r0
    5baa:	000d      	movs	r5, r1
    5bac:	9804      	ldr	r0, [sp, #16]
    5bae:	9905      	ldr	r1, [sp, #20]
    5bb0:	f002 fc2a 	bl	8408 <__aeabi_dmul>
    5bb4:	0002      	movs	r2, r0
    5bb6:	000b      	movs	r3, r1
    5bb8:	0020      	movs	r0, r4
    5bba:	0029      	movs	r1, r5
    5bbc:	f001 fce0 	bl	7580 <__aeabi_dadd>
    5bc0:	0004      	movs	r4, r0
    5bc2:	000d      	movs	r5, r1
    5bc4:	9802      	ldr	r0, [sp, #8]
    5bc6:	9903      	ldr	r1, [sp, #12]
    5bc8:	0032      	movs	r2, r6
    5bca:	003b      	movs	r3, r7
    5bcc:	9400      	str	r4, [sp, #0]
    5bce:	9501      	str	r5, [sp, #4]
    5bd0:	f002 fc1a 	bl	8408 <__aeabi_dmul>
    5bd4:	0002      	movs	r2, r0
    5bd6:	000b      	movs	r3, r1
    5bd8:	0006      	movs	r6, r0
    5bda:	000f      	movs	r7, r1
    5bdc:	0020      	movs	r0, r4
    5bde:	0029      	movs	r1, r5
    5be0:	f001 fcce 	bl	7580 <__aeabi_dadd>
    5be4:	4b29      	ldr	r3, [pc, #164]	; (5c8c <__ieee754_pow+0x600>)
    5be6:	0004      	movs	r4, r0
    5be8:	000d      	movs	r5, r1
    5bea:	0002      	movs	r2, r0
    5bec:	468b      	mov	fp, r1
    5bee:	4299      	cmp	r1, r3
    5bf0:	dc00      	bgt.n	5bf4 <__ieee754_pow+0x568>
    5bf2:	e14f      	b.n	5e94 <__ieee754_pow+0x808>
    5bf4:	4b26      	ldr	r3, [pc, #152]	; (5c90 <__ieee754_pow+0x604>)
    5bf6:	18cb      	adds	r3, r1, r3
    5bf8:	4303      	orrs	r3, r0
    5bfa:	d000      	beq.n	5bfe <__ieee754_pow+0x572>
    5bfc:	e1e2      	b.n	5fc4 <__ieee754_pow+0x938>
    5bfe:	9800      	ldr	r0, [sp, #0]
    5c00:	9901      	ldr	r1, [sp, #4]
    5c02:	4a24      	ldr	r2, [pc, #144]	; (5c94 <__ieee754_pow+0x608>)
    5c04:	4b24      	ldr	r3, [pc, #144]	; (5c98 <__ieee754_pow+0x60c>)
    5c06:	f001 fcbb 	bl	7580 <__aeabi_dadd>
    5c0a:	0032      	movs	r2, r6
    5c0c:	9002      	str	r0, [sp, #8]
    5c0e:	9103      	str	r1, [sp, #12]
    5c10:	003b      	movs	r3, r7
    5c12:	0020      	movs	r0, r4
    5c14:	0029      	movs	r1, r5
    5c16:	f002 fe77 	bl	8908 <__aeabi_dsub>
    5c1a:	0002      	movs	r2, r0
    5c1c:	000b      	movs	r3, r1
    5c1e:	9802      	ldr	r0, [sp, #8]
    5c20:	9903      	ldr	r1, [sp, #12]
    5c22:	f000 fe11 	bl	6848 <__aeabi_dcmpgt>
    5c26:	46aa      	mov	sl, r5
    5c28:	e038      	b.n	5c9c <__ieee754_pow+0x610>
    5c2a:	46c0      	nop			; (mov r8, r8)
    5c2c:	000fffff 	.word	0x000fffff
    5c30:	43400000 	.word	0x43400000
    5c34:	fffffc01 	.word	0xfffffc01
    5c38:	3ff00000 	.word	0x3ff00000
    5c3c:	0003988e 	.word	0x0003988e
    5c40:	000bb679 	.word	0x000bb679
    5c44:	fff00000 	.word	0xfff00000
    5c48:	4a454eef 	.word	0x4a454eef
    5c4c:	3fca7e28 	.word	0x3fca7e28
    5c50:	93c9db65 	.word	0x93c9db65
    5c54:	3fcd864a 	.word	0x3fcd864a
    5c58:	a91d4101 	.word	0xa91d4101
    5c5c:	3fd17460 	.word	0x3fd17460
    5c60:	518f264d 	.word	0x518f264d
    5c64:	3fd55555 	.word	0x3fd55555
    5c68:	db6fabff 	.word	0xdb6fabff
    5c6c:	3fdb6db6 	.word	0x3fdb6db6
    5c70:	33333303 	.word	0x33333303
    5c74:	3fe33333 	.word	0x3fe33333
    5c78:	40080000 	.word	0x40080000
    5c7c:	3feec709 	.word	0x3feec709
    5c80:	dc3a03fd 	.word	0xdc3a03fd
    5c84:	145b01f5 	.word	0x145b01f5
    5c88:	be3e2fe0 	.word	0xbe3e2fe0
    5c8c:	408fffff 	.word	0x408fffff
    5c90:	bf700000 	.word	0xbf700000
    5c94:	652b82fe 	.word	0x652b82fe
    5c98:	3c971547 	.word	0x3c971547
    5c9c:	2800      	cmp	r0, #0
    5c9e:	d000      	beq.n	5ca2 <__ieee754_pow+0x616>
    5ca0:	e190      	b.n	5fc4 <__ieee754_pow+0x938>
    5ca2:	4aec      	ldr	r2, [pc, #944]	; (6054 <__ieee754_pow+0x9c8>)
    5ca4:	4653      	mov	r3, sl
    5ca6:	4694      	mov	ip, r2
    5ca8:	2280      	movs	r2, #128	; 0x80
    5caa:	0352      	lsls	r2, r2, #13
    5cac:	0011      	movs	r1, r2
    5cae:	151b      	asrs	r3, r3, #20
    5cb0:	4463      	add	r3, ip
    5cb2:	4119      	asrs	r1, r3
    5cb4:	000b      	movs	r3, r1
    5cb6:	4690      	mov	r8, r2
    5cb8:	4ae7      	ldr	r2, [pc, #924]	; (6058 <__ieee754_pow+0x9cc>)
    5cba:	445b      	add	r3, fp
    5cbc:	4694      	mov	ip, r2
    5cbe:	005c      	lsls	r4, r3, #1
    5cc0:	0d64      	lsrs	r4, r4, #21
    5cc2:	4de6      	ldr	r5, [pc, #920]	; (605c <__ieee754_pow+0x9d0>)
    5cc4:	4464      	add	r4, ip
    5cc6:	4125      	asrs	r5, r4
    5cc8:	001a      	movs	r2, r3
    5cca:	43aa      	bics	r2, r5
    5ccc:	0011      	movs	r1, r2
    5cce:	4642      	mov	r2, r8
    5cd0:	031b      	lsls	r3, r3, #12
    5cd2:	0b1b      	lsrs	r3, r3, #12
    5cd4:	4313      	orrs	r3, r2
    5cd6:	2214      	movs	r2, #20
    5cd8:	1b14      	subs	r4, r2, r4
    5cda:	4123      	asrs	r3, r4
    5cdc:	4699      	mov	r9, r3
    5cde:	465b      	mov	r3, fp
    5ce0:	2000      	movs	r0, #0
    5ce2:	2b00      	cmp	r3, #0
    5ce4:	da00      	bge.n	5ce8 <__ieee754_pow+0x65c>
    5ce6:	e1b0      	b.n	604a <__ieee754_pow+0x9be>
    5ce8:	0002      	movs	r2, r0
    5cea:	000b      	movs	r3, r1
    5cec:	0030      	movs	r0, r6
    5cee:	0039      	movs	r1, r7
    5cf0:	f002 fe0a 	bl	8908 <__aeabi_dsub>
    5cf4:	000b      	movs	r3, r1
    5cf6:	0002      	movs	r2, r0
    5cf8:	0006      	movs	r6, r0
    5cfa:	000f      	movs	r7, r1
    5cfc:	9800      	ldr	r0, [sp, #0]
    5cfe:	9901      	ldr	r1, [sp, #4]
    5d00:	f001 fc3e 	bl	7580 <__aeabi_dadd>
    5d04:	464b      	mov	r3, r9
    5d06:	051b      	lsls	r3, r3, #20
    5d08:	000d      	movs	r5, r1
    5d0a:	4698      	mov	r8, r3
    5d0c:	2400      	movs	r4, #0
    5d0e:	2200      	movs	r2, #0
    5d10:	4bd3      	ldr	r3, [pc, #844]	; (6060 <__ieee754_pow+0x9d4>)
    5d12:	0020      	movs	r0, r4
    5d14:	0029      	movs	r1, r5
    5d16:	f002 fb77 	bl	8408 <__aeabi_dmul>
    5d1a:	0032      	movs	r2, r6
    5d1c:	9002      	str	r0, [sp, #8]
    5d1e:	9103      	str	r1, [sp, #12]
    5d20:	003b      	movs	r3, r7
    5d22:	0020      	movs	r0, r4
    5d24:	0029      	movs	r1, r5
    5d26:	f002 fdef 	bl	8908 <__aeabi_dsub>
    5d2a:	0002      	movs	r2, r0
    5d2c:	000b      	movs	r3, r1
    5d2e:	9800      	ldr	r0, [sp, #0]
    5d30:	9901      	ldr	r1, [sp, #4]
    5d32:	f002 fde9 	bl	8908 <__aeabi_dsub>
    5d36:	4acb      	ldr	r2, [pc, #812]	; (6064 <__ieee754_pow+0x9d8>)
    5d38:	4bcb      	ldr	r3, [pc, #812]	; (6068 <__ieee754_pow+0x9dc>)
    5d3a:	f002 fb65 	bl	8408 <__aeabi_dmul>
    5d3e:	4acb      	ldr	r2, [pc, #812]	; (606c <__ieee754_pow+0x9e0>)
    5d40:	0006      	movs	r6, r0
    5d42:	000f      	movs	r7, r1
    5d44:	4bca      	ldr	r3, [pc, #808]	; (6070 <__ieee754_pow+0x9e4>)
    5d46:	0020      	movs	r0, r4
    5d48:	0029      	movs	r1, r5
    5d4a:	f002 fb5d 	bl	8408 <__aeabi_dmul>
    5d4e:	0002      	movs	r2, r0
    5d50:	000b      	movs	r3, r1
    5d52:	0030      	movs	r0, r6
    5d54:	0039      	movs	r1, r7
    5d56:	f001 fc13 	bl	7580 <__aeabi_dadd>
    5d5a:	0004      	movs	r4, r0
    5d5c:	000d      	movs	r5, r1
    5d5e:	0002      	movs	r2, r0
    5d60:	000b      	movs	r3, r1
    5d62:	9802      	ldr	r0, [sp, #8]
    5d64:	9903      	ldr	r1, [sp, #12]
    5d66:	f001 fc0b 	bl	7580 <__aeabi_dadd>
    5d6a:	9a02      	ldr	r2, [sp, #8]
    5d6c:	9b03      	ldr	r3, [sp, #12]
    5d6e:	0006      	movs	r6, r0
    5d70:	000f      	movs	r7, r1
    5d72:	f002 fdc9 	bl	8908 <__aeabi_dsub>
    5d76:	0002      	movs	r2, r0
    5d78:	000b      	movs	r3, r1
    5d7a:	0020      	movs	r0, r4
    5d7c:	0029      	movs	r1, r5
    5d7e:	f002 fdc3 	bl	8908 <__aeabi_dsub>
    5d82:	0032      	movs	r2, r6
    5d84:	9000      	str	r0, [sp, #0]
    5d86:	9101      	str	r1, [sp, #4]
    5d88:	003b      	movs	r3, r7
    5d8a:	0030      	movs	r0, r6
    5d8c:	0039      	movs	r1, r7
    5d8e:	f002 fb3b 	bl	8408 <__aeabi_dmul>
    5d92:	0004      	movs	r4, r0
    5d94:	000d      	movs	r5, r1
    5d96:	4ab7      	ldr	r2, [pc, #732]	; (6074 <__ieee754_pow+0x9e8>)
    5d98:	4bb7      	ldr	r3, [pc, #732]	; (6078 <__ieee754_pow+0x9ec>)
    5d9a:	f002 fb35 	bl	8408 <__aeabi_dmul>
    5d9e:	4ab7      	ldr	r2, [pc, #732]	; (607c <__ieee754_pow+0x9f0>)
    5da0:	4bb7      	ldr	r3, [pc, #732]	; (6080 <__ieee754_pow+0x9f4>)
    5da2:	f002 fdb1 	bl	8908 <__aeabi_dsub>
    5da6:	0022      	movs	r2, r4
    5da8:	002b      	movs	r3, r5
    5daa:	f002 fb2d 	bl	8408 <__aeabi_dmul>
    5dae:	4ab5      	ldr	r2, [pc, #724]	; (6084 <__ieee754_pow+0x9f8>)
    5db0:	4bb5      	ldr	r3, [pc, #724]	; (6088 <__ieee754_pow+0x9fc>)
    5db2:	f001 fbe5 	bl	7580 <__aeabi_dadd>
    5db6:	0022      	movs	r2, r4
    5db8:	002b      	movs	r3, r5
    5dba:	f002 fb25 	bl	8408 <__aeabi_dmul>
    5dbe:	4ab3      	ldr	r2, [pc, #716]	; (608c <__ieee754_pow+0xa00>)
    5dc0:	4bb3      	ldr	r3, [pc, #716]	; (6090 <__ieee754_pow+0xa04>)
    5dc2:	f002 fda1 	bl	8908 <__aeabi_dsub>
    5dc6:	0022      	movs	r2, r4
    5dc8:	002b      	movs	r3, r5
    5dca:	f002 fb1d 	bl	8408 <__aeabi_dmul>
    5dce:	4ab1      	ldr	r2, [pc, #708]	; (6094 <__ieee754_pow+0xa08>)
    5dd0:	4bb1      	ldr	r3, [pc, #708]	; (6098 <__ieee754_pow+0xa0c>)
    5dd2:	f001 fbd5 	bl	7580 <__aeabi_dadd>
    5dd6:	0022      	movs	r2, r4
    5dd8:	002b      	movs	r3, r5
    5dda:	f002 fb15 	bl	8408 <__aeabi_dmul>
    5dde:	0002      	movs	r2, r0
    5de0:	000b      	movs	r3, r1
    5de2:	0030      	movs	r0, r6
    5de4:	0039      	movs	r1, r7
    5de6:	f002 fd8f 	bl	8908 <__aeabi_dsub>
    5dea:	0004      	movs	r4, r0
    5dec:	000d      	movs	r5, r1
    5dee:	0002      	movs	r2, r0
    5df0:	000b      	movs	r3, r1
    5df2:	0030      	movs	r0, r6
    5df4:	0039      	movs	r1, r7
    5df6:	f002 fb07 	bl	8408 <__aeabi_dmul>
    5dfa:	2380      	movs	r3, #128	; 0x80
    5dfc:	9002      	str	r0, [sp, #8]
    5dfe:	9103      	str	r1, [sp, #12]
    5e00:	2200      	movs	r2, #0
    5e02:	05db      	lsls	r3, r3, #23
    5e04:	0020      	movs	r0, r4
    5e06:	0029      	movs	r1, r5
    5e08:	f002 fd7e 	bl	8908 <__aeabi_dsub>
    5e0c:	0002      	movs	r2, r0
    5e0e:	000b      	movs	r3, r1
    5e10:	9802      	ldr	r0, [sp, #8]
    5e12:	9903      	ldr	r1, [sp, #12]
    5e14:	f001 fec4 	bl	7ba0 <__aeabi_ddiv>
    5e18:	9a00      	ldr	r2, [sp, #0]
    5e1a:	9b01      	ldr	r3, [sp, #4]
    5e1c:	0004      	movs	r4, r0
    5e1e:	000d      	movs	r5, r1
    5e20:	0030      	movs	r0, r6
    5e22:	0039      	movs	r1, r7
    5e24:	f002 faf0 	bl	8408 <__aeabi_dmul>
    5e28:	9a00      	ldr	r2, [sp, #0]
    5e2a:	9b01      	ldr	r3, [sp, #4]
    5e2c:	f001 fba8 	bl	7580 <__aeabi_dadd>
    5e30:	0002      	movs	r2, r0
    5e32:	000b      	movs	r3, r1
    5e34:	0020      	movs	r0, r4
    5e36:	0029      	movs	r1, r5
    5e38:	f002 fd66 	bl	8908 <__aeabi_dsub>
    5e3c:	0032      	movs	r2, r6
    5e3e:	003b      	movs	r3, r7
    5e40:	f002 fd62 	bl	8908 <__aeabi_dsub>
    5e44:	0002      	movs	r2, r0
    5e46:	000b      	movs	r3, r1
    5e48:	2000      	movs	r0, #0
    5e4a:	4994      	ldr	r1, [pc, #592]	; (609c <__ieee754_pow+0xa10>)
    5e4c:	f002 fd5c 	bl	8908 <__aeabi_dsub>
    5e50:	4643      	mov	r3, r8
    5e52:	185b      	adds	r3, r3, r1
    5e54:	151a      	asrs	r2, r3, #20
    5e56:	2a00      	cmp	r2, #0
    5e58:	dc00      	bgt.n	5e5c <__ieee754_pow+0x7d0>
    5e5a:	e149      	b.n	60f0 <__ieee754_pow+0xa64>
    5e5c:	0019      	movs	r1, r3
    5e5e:	9a06      	ldr	r2, [sp, #24]
    5e60:	9b07      	ldr	r3, [sp, #28]
    5e62:	f002 fad1 	bl	8408 <__aeabi_dmul>
    5e66:	e459      	b.n	571c <__ieee754_pow+0x90>
    5e68:	003a      	movs	r2, r7
    5e6a:	0033      	movs	r3, r6
    5e6c:	0038      	movs	r0, r7
    5e6e:	0031      	movs	r1, r6
    5e70:	f002 faca 	bl	8408 <__aeabi_dmul>
    5e74:	e452      	b.n	571c <__ieee754_pow+0x90>
    5e76:	4653      	mov	r3, sl
    5e78:	2b00      	cmp	r3, #0
    5e7a:	db00      	blt.n	5e7e <__ieee754_pow+0x7f2>
    5e7c:	e4d9      	b.n	5832 <__ieee754_pow+0x1a6>
    5e7e:	9c00      	ldr	r4, [sp, #0]
    5e80:	9d01      	ldr	r5, [sp, #4]
    5e82:	2280      	movs	r2, #128	; 0x80
    5e84:	0612      	lsls	r2, r2, #24
    5e86:	002b      	movs	r3, r5
    5e88:	4694      	mov	ip, r2
    5e8a:	4463      	add	r3, ip
    5e8c:	0020      	movs	r0, r4
    5e8e:	0019      	movs	r1, r3
    5e90:	f7ff fc44 	bl	571c <__ieee754_pow+0x90>
    5e94:	004b      	lsls	r3, r1, #1
    5e96:	085b      	lsrs	r3, r3, #1
    5e98:	469a      	mov	sl, r3
    5e9a:	4b81      	ldr	r3, [pc, #516]	; (60a0 <__ieee754_pow+0xa14>)
    5e9c:	459a      	cmp	sl, r3
    5e9e:	dc00      	bgt.n	5ea2 <__ieee754_pow+0x816>
    5ea0:	e0b1      	b.n	6006 <__ieee754_pow+0x97a>
    5ea2:	4b80      	ldr	r3, [pc, #512]	; (60a4 <__ieee754_pow+0xa18>)
    5ea4:	445b      	add	r3, fp
    5ea6:	431a      	orrs	r2, r3
    5ea8:	d10c      	bne.n	5ec4 <__ieee754_pow+0x838>
    5eaa:	0032      	movs	r2, r6
    5eac:	003b      	movs	r3, r7
    5eae:	f002 fd2b 	bl	8908 <__aeabi_dsub>
    5eb2:	0002      	movs	r2, r0
    5eb4:	000b      	movs	r3, r1
    5eb6:	9800      	ldr	r0, [sp, #0]
    5eb8:	9901      	ldr	r1, [sp, #4]
    5eba:	f000 fcbb 	bl	6834 <__aeabi_dcmple>
    5ebe:	2800      	cmp	r0, #0
    5ec0:	d100      	bne.n	5ec4 <__ieee754_pow+0x838>
    5ec2:	e6ee      	b.n	5ca2 <__ieee754_pow+0x616>
    5ec4:	9806      	ldr	r0, [sp, #24]
    5ec6:	9907      	ldr	r1, [sp, #28]
    5ec8:	4a77      	ldr	r2, [pc, #476]	; (60a8 <__ieee754_pow+0xa1c>)
    5eca:	4b78      	ldr	r3, [pc, #480]	; (60ac <__ieee754_pow+0xa20>)
    5ecc:	f002 fa9c 	bl	8408 <__aeabi_dmul>
    5ed0:	4a75      	ldr	r2, [pc, #468]	; (60a8 <__ieee754_pow+0xa1c>)
    5ed2:	4b76      	ldr	r3, [pc, #472]	; (60ac <__ieee754_pow+0xa20>)
    5ed4:	f002 fa98 	bl	8408 <__aeabi_dmul>
    5ed8:	f7ff fc20 	bl	571c <__ieee754_pow+0x90>
    5edc:	2300      	movs	r3, #0
    5ede:	4c74      	ldr	r4, [pc, #464]	; (60b0 <__ieee754_pow+0xa24>)
    5ee0:	9306      	str	r3, [sp, #24]
    5ee2:	9407      	str	r4, [sp, #28]
    5ee4:	e652      	b.n	5b8c <__ieee754_pow+0x500>
    5ee6:	0002      	movs	r2, r0
    5ee8:	000b      	movs	r3, r1
    5eea:	2000      	movs	r0, #0
    5eec:	496b      	ldr	r1, [pc, #428]	; (609c <__ieee754_pow+0xa10>)
    5eee:	f001 fe57 	bl	7ba0 <__aeabi_ddiv>
    5ef2:	f7ff fc32 	bl	575a <__ieee754_pow+0xce>
    5ef6:	4653      	mov	r3, sl
    5ef8:	2b00      	cmp	r3, #0
    5efa:	db00      	blt.n	5efe <__ieee754_pow+0x872>
    5efc:	e499      	b.n	5832 <__ieee754_pow+0x1a6>
    5efe:	e454      	b.n	57aa <__ieee754_pow+0x11e>
    5f00:	4b6c      	ldr	r3, [pc, #432]	; (60b4 <__ieee754_pow+0xa28>)
    5f02:	429c      	cmp	r4, r3
    5f04:	ddf7      	ble.n	5ef6 <__ieee754_pow+0x86a>
    5f06:	4b65      	ldr	r3, [pc, #404]	; (609c <__ieee754_pow+0xa10>)
    5f08:	429c      	cmp	r4, r3
    5f0a:	dd00      	ble.n	5f0e <__ieee754_pow+0x882>
    5f0c:	e44a      	b.n	57a4 <__ieee754_pow+0x118>
    5f0e:	2200      	movs	r2, #0
    5f10:	4b62      	ldr	r3, [pc, #392]	; (609c <__ieee754_pow+0xa10>)
    5f12:	f002 fcf9 	bl	8908 <__aeabi_dsub>
    5f16:	22c0      	movs	r2, #192	; 0xc0
    5f18:	4b67      	ldr	r3, [pc, #412]	; (60b8 <__ieee754_pow+0xa2c>)
    5f1a:	05d2      	lsls	r2, r2, #23
    5f1c:	0004      	movs	r4, r0
    5f1e:	000d      	movs	r5, r1
    5f20:	f002 fa72 	bl	8408 <__aeabi_dmul>
    5f24:	4a65      	ldr	r2, [pc, #404]	; (60bc <__ieee754_pow+0xa30>)
    5f26:	0006      	movs	r6, r0
    5f28:	000f      	movs	r7, r1
    5f2a:	4b65      	ldr	r3, [pc, #404]	; (60c0 <__ieee754_pow+0xa34>)
    5f2c:	0020      	movs	r0, r4
    5f2e:	0029      	movs	r1, r5
    5f30:	f002 fa6a 	bl	8408 <__aeabi_dmul>
    5f34:	2200      	movs	r2, #0
    5f36:	9002      	str	r0, [sp, #8]
    5f38:	9103      	str	r1, [sp, #12]
    5f3a:	4b62      	ldr	r3, [pc, #392]	; (60c4 <__ieee754_pow+0xa38>)
    5f3c:	0020      	movs	r0, r4
    5f3e:	0029      	movs	r1, r5
    5f40:	f002 fa62 	bl	8408 <__aeabi_dmul>
    5f44:	0002      	movs	r2, r0
    5f46:	000b      	movs	r3, r1
    5f48:	485f      	ldr	r0, [pc, #380]	; (60c8 <__ieee754_pow+0xa3c>)
    5f4a:	4960      	ldr	r1, [pc, #384]	; (60cc <__ieee754_pow+0xa40>)
    5f4c:	f002 fcdc 	bl	8908 <__aeabi_dsub>
    5f50:	0022      	movs	r2, r4
    5f52:	002b      	movs	r3, r5
    5f54:	f002 fa58 	bl	8408 <__aeabi_dmul>
    5f58:	0002      	movs	r2, r0
    5f5a:	000b      	movs	r3, r1
    5f5c:	2000      	movs	r0, #0
    5f5e:	495c      	ldr	r1, [pc, #368]	; (60d0 <__ieee754_pow+0xa44>)
    5f60:	f002 fcd2 	bl	8908 <__aeabi_dsub>
    5f64:	0022      	movs	r2, r4
    5f66:	9004      	str	r0, [sp, #16]
    5f68:	9105      	str	r1, [sp, #20]
    5f6a:	002b      	movs	r3, r5
    5f6c:	0020      	movs	r0, r4
    5f6e:	0029      	movs	r1, r5
    5f70:	f002 fa4a 	bl	8408 <__aeabi_dmul>
    5f74:	0002      	movs	r2, r0
    5f76:	000b      	movs	r3, r1
    5f78:	9804      	ldr	r0, [sp, #16]
    5f7a:	9905      	ldr	r1, [sp, #20]
    5f7c:	f002 fa44 	bl	8408 <__aeabi_dmul>
    5f80:	4a54      	ldr	r2, [pc, #336]	; (60d4 <__ieee754_pow+0xa48>)
    5f82:	4b4d      	ldr	r3, [pc, #308]	; (60b8 <__ieee754_pow+0xa2c>)
    5f84:	f002 fa40 	bl	8408 <__aeabi_dmul>
    5f88:	0002      	movs	r2, r0
    5f8a:	000b      	movs	r3, r1
    5f8c:	9802      	ldr	r0, [sp, #8]
    5f8e:	9903      	ldr	r1, [sp, #12]
    5f90:	f002 fcba 	bl	8908 <__aeabi_dsub>
    5f94:	0002      	movs	r2, r0
    5f96:	000b      	movs	r3, r1
    5f98:	0004      	movs	r4, r0
    5f9a:	000d      	movs	r5, r1
    5f9c:	0030      	movs	r0, r6
    5f9e:	0039      	movs	r1, r7
    5fa0:	f001 faee 	bl	7580 <__aeabi_dadd>
    5fa4:	2000      	movs	r0, #0
    5fa6:	0032      	movs	r2, r6
    5fa8:	003b      	movs	r3, r7
    5faa:	9002      	str	r0, [sp, #8]
    5fac:	9103      	str	r1, [sp, #12]
    5fae:	f002 fcab 	bl	8908 <__aeabi_dsub>
    5fb2:	0002      	movs	r2, r0
    5fb4:	000b      	movs	r3, r1
    5fb6:	0020      	movs	r0, r4
    5fb8:	0029      	movs	r1, r5
    5fba:	f002 fca5 	bl	8908 <__aeabi_dsub>
    5fbe:	9004      	str	r0, [sp, #16]
    5fc0:	9105      	str	r1, [sp, #20]
    5fc2:	e5d9      	b.n	5b78 <__ieee754_pow+0x4ec>
    5fc4:	4a44      	ldr	r2, [pc, #272]	; (60d8 <__ieee754_pow+0xa4c>)
    5fc6:	4b45      	ldr	r3, [pc, #276]	; (60dc <__ieee754_pow+0xa50>)
    5fc8:	9806      	ldr	r0, [sp, #24]
    5fca:	9907      	ldr	r1, [sp, #28]
    5fcc:	f002 fa1c 	bl	8408 <__aeabi_dmul>
    5fd0:	4a41      	ldr	r2, [pc, #260]	; (60d8 <__ieee754_pow+0xa4c>)
    5fd2:	4b42      	ldr	r3, [pc, #264]	; (60dc <__ieee754_pow+0xa50>)
    5fd4:	f002 fa18 	bl	8408 <__aeabi_dmul>
    5fd8:	f7ff fba0 	bl	571c <__ieee754_pow+0x90>
    5fdc:	2a00      	cmp	r2, #0
    5fde:	d001      	beq.n	5fe4 <__ieee754_pow+0x958>
    5fe0:	f7ff fba9 	bl	5736 <__ieee754_pow+0xaa>
    5fe4:	3214      	adds	r2, #20
    5fe6:	1ad3      	subs	r3, r2, r3
    5fe8:	002a      	movs	r2, r5
    5fea:	411a      	asrs	r2, r3
    5fec:	0011      	movs	r1, r2
    5fee:	4099      	lsls	r1, r3
    5ff0:	428d      	cmp	r5, r1
    5ff2:	d001      	beq.n	5ff8 <__ieee754_pow+0x96c>
    5ff4:	f7ff fb76 	bl	56e4 <__ieee754_pow+0x58>
    5ff8:	2301      	movs	r3, #1
    5ffa:	401a      	ands	r2, r3
    5ffc:	18db      	adds	r3, r3, r3
    5ffe:	1a9b      	subs	r3, r3, r2
    6000:	469b      	mov	fp, r3
    6002:	f7ff fb6f 	bl	56e4 <__ieee754_pow+0x58>
    6006:	2200      	movs	r2, #0
    6008:	4b31      	ldr	r3, [pc, #196]	; (60d0 <__ieee754_pow+0xa44>)
    600a:	4690      	mov	r8, r2
    600c:	4691      	mov	r9, r2
    600e:	459a      	cmp	sl, r3
    6010:	dc00      	bgt.n	6014 <__ieee754_pow+0x988>
    6012:	e67b      	b.n	5d0c <__ieee754_pow+0x680>
    6014:	e645      	b.n	5ca2 <__ieee754_pow+0x616>
    6016:	0002      	movs	r2, r0
    6018:	000b      	movs	r3, r1
    601a:	f002 fc75 	bl	8908 <__aeabi_dsub>
    601e:	0002      	movs	r2, r0
    6020:	000b      	movs	r3, r1
    6022:	f001 fdbd 	bl	7ba0 <__aeabi_ddiv>
    6026:	f7ff fb79 	bl	571c <__ieee754_pow+0x90>
    602a:	2380      	movs	r3, #128	; 0x80
    602c:	4c2c      	ldr	r4, [pc, #176]	; (60e0 <__ieee754_pow+0xa54>)
    602e:	05db      	lsls	r3, r3, #23
    6030:	9308      	str	r3, [sp, #32]
    6032:	9409      	str	r4, [sp, #36]	; 0x24
    6034:	4b2b      	ldr	r3, [pc, #172]	; (60e4 <__ieee754_pow+0xa58>)
    6036:	4c2c      	ldr	r4, [pc, #176]	; (60e8 <__ieee754_pow+0xa5c>)
    6038:	2200      	movs	r2, #0
    603a:	930c      	str	r3, [sp, #48]	; 0x30
    603c:	940d      	str	r4, [sp, #52]	; 0x34
    603e:	2480      	movs	r4, #128	; 0x80
    6040:	4b2a      	ldr	r3, [pc, #168]	; (60ec <__ieee754_pow+0xa60>)
    6042:	02e4      	lsls	r4, r4, #11
    6044:	9206      	str	r2, [sp, #24]
    6046:	9307      	str	r3, [sp, #28]
    6048:	e449      	b.n	58de <__ieee754_pow+0x252>
    604a:	464b      	mov	r3, r9
    604c:	425b      	negs	r3, r3
    604e:	4699      	mov	r9, r3
    6050:	e64a      	b.n	5ce8 <__ieee754_pow+0x65c>
    6052:	46c0      	nop			; (mov r8, r8)
    6054:	fffffc02 	.word	0xfffffc02
    6058:	fffffc01 	.word	0xfffffc01
    605c:	000fffff 	.word	0x000fffff
    6060:	3fe62e43 	.word	0x3fe62e43
    6064:	fefa39ef 	.word	0xfefa39ef
    6068:	3fe62e42 	.word	0x3fe62e42
    606c:	0ca86c39 	.word	0x0ca86c39
    6070:	be205c61 	.word	0xbe205c61
    6074:	72bea4d0 	.word	0x72bea4d0
    6078:	3e663769 	.word	0x3e663769
    607c:	c5d26bf1 	.word	0xc5d26bf1
    6080:	3ebbbd41 	.word	0x3ebbbd41
    6084:	af25de2c 	.word	0xaf25de2c
    6088:	3f11566a 	.word	0x3f11566a
    608c:	16bebd93 	.word	0x16bebd93
    6090:	3f66c16c 	.word	0x3f66c16c
    6094:	5555553e 	.word	0x5555553e
    6098:	3fc55555 	.word	0x3fc55555
    609c:	3ff00000 	.word	0x3ff00000
    60a0:	4090cbff 	.word	0x4090cbff
    60a4:	3f6f3400 	.word	0x3f6f3400
    60a8:	c2f8f359 	.word	0xc2f8f359
    60ac:	01a56e1f 	.word	0x01a56e1f
    60b0:	bff00000 	.word	0xbff00000
    60b4:	3feffffe 	.word	0x3feffffe
    60b8:	3ff71547 	.word	0x3ff71547
    60bc:	f85ddf44 	.word	0xf85ddf44
    60c0:	3e54ae0b 	.word	0x3e54ae0b
    60c4:	3fd00000 	.word	0x3fd00000
    60c8:	55555555 	.word	0x55555555
    60cc:	3fd55555 	.word	0x3fd55555
    60d0:	3fe00000 	.word	0x3fe00000
    60d4:	652b82fe 	.word	0x652b82fe
    60d8:	8800759c 	.word	0x8800759c
    60dc:	7e37e43c 	.word	0x7e37e43c
    60e0:	3fe2b803 	.word	0x3fe2b803
    60e4:	43cfd006 	.word	0x43cfd006
    60e8:	3e4cfdeb 	.word	0x3e4cfdeb
    60ec:	3ff80000 	.word	0x3ff80000
    60f0:	464a      	mov	r2, r9
    60f2:	f000 f999 	bl	6428 <scalbn>
    60f6:	e6b2      	b.n	5e5e <__ieee754_pow+0x7d2>

000060f8 <__ieee754_sqrt>:
    60f8:	4b6c      	ldr	r3, [pc, #432]	; (62ac <__ieee754_sqrt+0x1b4>)
    60fa:	b5f0      	push	{r4, r5, r6, r7, lr}
    60fc:	000a      	movs	r2, r1
    60fe:	4646      	mov	r6, r8
    6100:	000d      	movs	r5, r1
    6102:	46d6      	mov	lr, sl
    6104:	464f      	mov	r7, r9
    6106:	0019      	movs	r1, r3
    6108:	b5c0      	push	{r6, r7, lr}
    610a:	0004      	movs	r4, r0
    610c:	0006      	movs	r6, r0
    610e:	4029      	ands	r1, r5
    6110:	4299      	cmp	r1, r3
    6112:	d100      	bne.n	6116 <__ieee754_sqrt+0x1e>
    6114:	e0a7      	b.n	6266 <__ieee754_sqrt+0x16e>
    6116:	2d00      	cmp	r5, #0
    6118:	dc00      	bgt.n	611c <__ieee754_sqrt+0x24>
    611a:	e081      	b.n	6220 <__ieee754_sqrt+0x128>
    611c:	152f      	asrs	r7, r5, #20
    611e:	d100      	bne.n	6122 <__ieee754_sqrt+0x2a>
    6120:	e08e      	b.n	6240 <__ieee754_sqrt+0x148>
    6122:	4b63      	ldr	r3, [pc, #396]	; (62b0 <__ieee754_sqrt+0x1b8>)
    6124:	0312      	lsls	r2, r2, #12
    6126:	469c      	mov	ip, r3
    6128:	2380      	movs	r3, #128	; 0x80
    612a:	0b12      	lsrs	r2, r2, #12
    612c:	035b      	lsls	r3, r3, #13
    612e:	4467      	add	r7, ip
    6130:	431a      	orrs	r2, r3
    6132:	07fb      	lsls	r3, r7, #31
    6134:	d468      	bmi.n	6208 <__ieee754_sqrt+0x110>
    6136:	107b      	asrs	r3, r7, #1
    6138:	469c      	mov	ip, r3
    613a:	0fe3      	lsrs	r3, r4, #31
    613c:	189b      	adds	r3, r3, r2
    613e:	189b      	adds	r3, r3, r2
    6140:	2280      	movs	r2, #128	; 0x80
    6142:	2116      	movs	r1, #22
    6144:	2600      	movs	r6, #0
    6146:	2500      	movs	r5, #0
    6148:	0064      	lsls	r4, r4, #1
    614a:	0392      	lsls	r2, r2, #14
    614c:	18a8      	adds	r0, r5, r2
    614e:	4298      	cmp	r0, r3
    6150:	dc02      	bgt.n	6158 <__ieee754_sqrt+0x60>
    6152:	1885      	adds	r5, r0, r2
    6154:	1a1b      	subs	r3, r3, r0
    6156:	18b6      	adds	r6, r6, r2
    6158:	0fe0      	lsrs	r0, r4, #31
    615a:	005b      	lsls	r3, r3, #1
    615c:	3901      	subs	r1, #1
    615e:	181b      	adds	r3, r3, r0
    6160:	0064      	lsls	r4, r4, #1
    6162:	0852      	lsrs	r2, r2, #1
    6164:	2900      	cmp	r1, #0
    6166:	d1f1      	bne.n	614c <__ieee754_sqrt+0x54>
    6168:	2200      	movs	r2, #0
    616a:	4692      	mov	sl, r2
    616c:	4690      	mov	r8, r2
    616e:	2280      	movs	r2, #128	; 0x80
    6170:	2020      	movs	r0, #32
    6172:	0612      	lsls	r2, r2, #24
    6174:	e009      	b.n	618a <__ieee754_sqrt+0x92>
    6176:	42ab      	cmp	r3, r5
    6178:	d038      	beq.n	61ec <__ieee754_sqrt+0xf4>
    617a:	0fe1      	lsrs	r1, r4, #31
    617c:	18c9      	adds	r1, r1, r3
    617e:	3801      	subs	r0, #1
    6180:	18cb      	adds	r3, r1, r3
    6182:	0064      	lsls	r4, r4, #1
    6184:	0852      	lsrs	r2, r2, #1
    6186:	2800      	cmp	r0, #0
    6188:	d018      	beq.n	61bc <__ieee754_sqrt+0xc4>
    618a:	4641      	mov	r1, r8
    618c:	1851      	adds	r1, r2, r1
    618e:	42ab      	cmp	r3, r5
    6190:	ddf1      	ble.n	6176 <__ieee754_sqrt+0x7e>
    6192:	188f      	adds	r7, r1, r2
    6194:	46b8      	mov	r8, r7
    6196:	46a9      	mov	r9, r5
    6198:	2900      	cmp	r1, #0
    619a:	db30      	blt.n	61fe <__ieee754_sqrt+0x106>
    619c:	1b5b      	subs	r3, r3, r5
    619e:	428c      	cmp	r4, r1
    61a0:	41ad      	sbcs	r5, r5
    61a2:	426d      	negs	r5, r5
    61a4:	1b5b      	subs	r3, r3, r5
    61a6:	1a64      	subs	r4, r4, r1
    61a8:	0fe1      	lsrs	r1, r4, #31
    61aa:	18c9      	adds	r1, r1, r3
    61ac:	3801      	subs	r0, #1
    61ae:	4492      	add	sl, r2
    61b0:	464d      	mov	r5, r9
    61b2:	18cb      	adds	r3, r1, r3
    61b4:	0064      	lsls	r4, r4, #1
    61b6:	0852      	lsrs	r2, r2, #1
    61b8:	2800      	cmp	r0, #0
    61ba:	d1e6      	bne.n	618a <__ieee754_sqrt+0x92>
    61bc:	4323      	orrs	r3, r4
    61be:	d128      	bne.n	6212 <__ieee754_sqrt+0x11a>
    61c0:	4653      	mov	r3, sl
    61c2:	085b      	lsrs	r3, r3, #1
    61c4:	493b      	ldr	r1, [pc, #236]	; (62b4 <__ieee754_sqrt+0x1bc>)
    61c6:	1072      	asrs	r2, r6, #1
    61c8:	4688      	mov	r8, r1
    61ca:	4442      	add	r2, r8
    61cc:	07f1      	lsls	r1, r6, #31
    61ce:	d502      	bpl.n	61d6 <__ieee754_sqrt+0xde>
    61d0:	2180      	movs	r1, #128	; 0x80
    61d2:	0609      	lsls	r1, r1, #24
    61d4:	430b      	orrs	r3, r1
    61d6:	4661      	mov	r1, ip
    61d8:	001e      	movs	r6, r3
    61da:	050f      	lsls	r7, r1, #20
    61dc:	18bd      	adds	r5, r7, r2
    61de:	0030      	movs	r0, r6
    61e0:	0029      	movs	r1, r5
    61e2:	bc1c      	pop	{r2, r3, r4}
    61e4:	4690      	mov	r8, r2
    61e6:	4699      	mov	r9, r3
    61e8:	46a2      	mov	sl, r4
    61ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    61ec:	42a1      	cmp	r1, r4
    61ee:	d8c4      	bhi.n	617a <__ieee754_sqrt+0x82>
    61f0:	188f      	adds	r7, r1, r2
    61f2:	46b8      	mov	r8, r7
    61f4:	2900      	cmp	r1, #0
    61f6:	db42      	blt.n	627e <__ieee754_sqrt+0x186>
    61f8:	4699      	mov	r9, r3
    61fa:	2300      	movs	r3, #0
    61fc:	e7d3      	b.n	61a6 <__ieee754_sqrt+0xae>
    61fe:	2f00      	cmp	r7, #0
    6200:	db2f      	blt.n	6262 <__ieee754_sqrt+0x16a>
    6202:	1c6f      	adds	r7, r5, #1
    6204:	46b9      	mov	r9, r7
    6206:	e7c9      	b.n	619c <__ieee754_sqrt+0xa4>
    6208:	0fe1      	lsrs	r1, r4, #31
    620a:	0052      	lsls	r2, r2, #1
    620c:	188a      	adds	r2, r1, r2
    620e:	0064      	lsls	r4, r4, #1
    6210:	e791      	b.n	6136 <__ieee754_sqrt+0x3e>
    6212:	4653      	mov	r3, sl
    6214:	3301      	adds	r3, #1
    6216:	d035      	beq.n	6284 <__ieee754_sqrt+0x18c>
    6218:	4653      	mov	r3, sl
    621a:	3301      	adds	r3, #1
    621c:	085b      	lsrs	r3, r3, #1
    621e:	e7d1      	b.n	61c4 <__ieee754_sqrt+0xcc>
    6220:	006b      	lsls	r3, r5, #1
    6222:	085b      	lsrs	r3, r3, #1
    6224:	4303      	orrs	r3, r0
    6226:	d0da      	beq.n	61de <__ieee754_sqrt+0xe6>
    6228:	2700      	movs	r7, #0
    622a:	2d00      	cmp	r5, #0
    622c:	d132      	bne.n	6294 <__ieee754_sqrt+0x19c>
    622e:	0ae2      	lsrs	r2, r4, #11
    6230:	3f15      	subs	r7, #21
    6232:	0564      	lsls	r4, r4, #21
    6234:	2a00      	cmp	r2, #0
    6236:	d0fa      	beq.n	622e <__ieee754_sqrt+0x136>
    6238:	2380      	movs	r3, #128	; 0x80
    623a:	035b      	lsls	r3, r3, #13
    623c:	421a      	tst	r2, r3
    623e:	d124      	bne.n	628a <__ieee754_sqrt+0x192>
    6240:	2080      	movs	r0, #128	; 0x80
    6242:	2300      	movs	r3, #0
    6244:	0340      	lsls	r0, r0, #13
    6246:	e000      	b.n	624a <__ieee754_sqrt+0x152>
    6248:	000b      	movs	r3, r1
    624a:	0052      	lsls	r2, r2, #1
    624c:	1c59      	adds	r1, r3, #1
    624e:	4202      	tst	r2, r0
    6250:	d0fa      	beq.n	6248 <__ieee754_sqrt+0x150>
    6252:	2020      	movs	r0, #32
    6254:	1a40      	subs	r0, r0, r1
    6256:	1aff      	subs	r7, r7, r3
    6258:	0023      	movs	r3, r4
    625a:	40c3      	lsrs	r3, r0
    625c:	408c      	lsls	r4, r1
    625e:	431a      	orrs	r2, r3
    6260:	e75f      	b.n	6122 <__ieee754_sqrt+0x2a>
    6262:	46a9      	mov	r9, r5
    6264:	e79a      	b.n	619c <__ieee754_sqrt+0xa4>
    6266:	002b      	movs	r3, r5
    6268:	0002      	movs	r2, r0
    626a:	0029      	movs	r1, r5
    626c:	f002 f8cc 	bl	8408 <__aeabi_dmul>
    6270:	0032      	movs	r2, r6
    6272:	002b      	movs	r3, r5
    6274:	f001 f984 	bl	7580 <__aeabi_dadd>
    6278:	0006      	movs	r6, r0
    627a:	000d      	movs	r5, r1
    627c:	e7af      	b.n	61de <__ieee754_sqrt+0xe6>
    627e:	2f00      	cmp	r7, #0
    6280:	dabf      	bge.n	6202 <__ieee754_sqrt+0x10a>
    6282:	e7b9      	b.n	61f8 <__ieee754_sqrt+0x100>
    6284:	3601      	adds	r6, #1
    6286:	2300      	movs	r3, #0
    6288:	e79c      	b.n	61c4 <__ieee754_sqrt+0xcc>
    628a:	2301      	movs	r3, #1
    628c:	2100      	movs	r1, #0
    628e:	2020      	movs	r0, #32
    6290:	425b      	negs	r3, r3
    6292:	e7e0      	b.n	6256 <__ieee754_sqrt+0x15e>
    6294:	002b      	movs	r3, r5
    6296:	0002      	movs	r2, r0
    6298:	0029      	movs	r1, r5
    629a:	f002 fb35 	bl	8908 <__aeabi_dsub>
    629e:	0002      	movs	r2, r0
    62a0:	000b      	movs	r3, r1
    62a2:	f001 fc7d 	bl	7ba0 <__aeabi_ddiv>
    62a6:	0006      	movs	r6, r0
    62a8:	000d      	movs	r5, r1
    62aa:	e798      	b.n	61de <__ieee754_sqrt+0xe6>
    62ac:	7ff00000 	.word	0x7ff00000
    62b0:	fffffc01 	.word	0xfffffc01
    62b4:	3fe00000 	.word	0x3fe00000

000062b8 <fabs>:
    62b8:	0049      	lsls	r1, r1, #1
    62ba:	084b      	lsrs	r3, r1, #1
    62bc:	0019      	movs	r1, r3
    62be:	4770      	bx	lr

000062c0 <finite>:
    62c0:	4b03      	ldr	r3, [pc, #12]	; (62d0 <finite+0x10>)
    62c2:	0048      	lsls	r0, r1, #1
    62c4:	469c      	mov	ip, r3
    62c6:	0840      	lsrs	r0, r0, #1
    62c8:	4460      	add	r0, ip
    62ca:	0fc0      	lsrs	r0, r0, #31
    62cc:	4770      	bx	lr
    62ce:	46c0      	nop			; (mov r8, r8)
    62d0:	80100000 	.word	0x80100000

000062d4 <matherr>:
    62d4:	2000      	movs	r0, #0
    62d6:	4770      	bx	lr

000062d8 <nan>:
    62d8:	2000      	movs	r0, #0
    62da:	4901      	ldr	r1, [pc, #4]	; (62e0 <nan+0x8>)
    62dc:	4770      	bx	lr
    62de:	46c0      	nop			; (mov r8, r8)
    62e0:	7ff80000 	.word	0x7ff80000

000062e4 <rint>:
    62e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    62e6:	46c6      	mov	lr, r8
    62e8:	b500      	push	{lr}
    62ea:	0fcb      	lsrs	r3, r1, #31
    62ec:	4698      	mov	r8, r3
    62ee:	4c4a      	ldr	r4, [pc, #296]	; (6418 <rint+0x134>)
    62f0:	004b      	lsls	r3, r1, #1
    62f2:	0d5b      	lsrs	r3, r3, #21
    62f4:	191e      	adds	r6, r3, r4
    62f6:	b082      	sub	sp, #8
    62f8:	0007      	movs	r7, r0
    62fa:	000a      	movs	r2, r1
    62fc:	2e13      	cmp	r6, #19
    62fe:	dc35      	bgt.n	636c <rint+0x88>
    6300:	2e00      	cmp	r6, #0
    6302:	db57      	blt.n	63b4 <rint+0xd0>
    6304:	4b45      	ldr	r3, [pc, #276]	; (641c <rint+0x138>)
    6306:	0004      	movs	r4, r0
    6308:	4133      	asrs	r3, r6
    630a:	001f      	movs	r7, r3
    630c:	400f      	ands	r7, r1
    630e:	4307      	orrs	r7, r0
    6310:	000d      	movs	r5, r1
    6312:	2f00      	cmp	r7, #0
    6314:	d024      	beq.n	6360 <rint+0x7c>
    6316:	085b      	lsrs	r3, r3, #1
    6318:	001c      	movs	r4, r3
    631a:	400c      	ands	r4, r1
    631c:	4320      	orrs	r0, r4
    631e:	2700      	movs	r7, #0
    6320:	2800      	cmp	r0, #0
    6322:	d007      	beq.n	6334 <rint+0x50>
    6324:	2e13      	cmp	r6, #19
    6326:	d100      	bne.n	632a <rint+0x46>
    6328:	e073      	b.n	6412 <rint+0x12e>
    632a:	2280      	movs	r2, #128	; 0x80
    632c:	02d2      	lsls	r2, r2, #11
    632e:	4132      	asrs	r2, r6
    6330:	4399      	bics	r1, r3
    6332:	430a      	orrs	r2, r1
    6334:	4643      	mov	r3, r8
    6336:	00de      	lsls	r6, r3, #3
    6338:	4b39      	ldr	r3, [pc, #228]	; (6420 <rint+0x13c>)
    633a:	0011      	movs	r1, r2
    633c:	199e      	adds	r6, r3, r6
    633e:	6834      	ldr	r4, [r6, #0]
    6340:	6875      	ldr	r5, [r6, #4]
    6342:	0038      	movs	r0, r7
    6344:	0022      	movs	r2, r4
    6346:	002b      	movs	r3, r5
    6348:	f001 f91a 	bl	7580 <__aeabi_dadd>
    634c:	9000      	str	r0, [sp, #0]
    634e:	9101      	str	r1, [sp, #4]
    6350:	9800      	ldr	r0, [sp, #0]
    6352:	9901      	ldr	r1, [sp, #4]
    6354:	0022      	movs	r2, r4
    6356:	002b      	movs	r3, r5
    6358:	f002 fad6 	bl	8908 <__aeabi_dsub>
    635c:	0004      	movs	r4, r0
    635e:	000d      	movs	r5, r1
    6360:	0020      	movs	r0, r4
    6362:	0029      	movs	r1, r5
    6364:	b002      	add	sp, #8
    6366:	bc04      	pop	{r2}
    6368:	4690      	mov	r8, r2
    636a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    636c:	2e33      	cmp	r6, #51	; 0x33
    636e:	dd0c      	ble.n	638a <rint+0xa6>
    6370:	2380      	movs	r3, #128	; 0x80
    6372:	0004      	movs	r4, r0
    6374:	00db      	lsls	r3, r3, #3
    6376:	000d      	movs	r5, r1
    6378:	429e      	cmp	r6, r3
    637a:	d1f1      	bne.n	6360 <rint+0x7c>
    637c:	0002      	movs	r2, r0
    637e:	000b      	movs	r3, r1
    6380:	f001 f8fe 	bl	7580 <__aeabi_dadd>
    6384:	0004      	movs	r4, r0
    6386:	000d      	movs	r5, r1
    6388:	e7ea      	b.n	6360 <rint+0x7c>
    638a:	4c26      	ldr	r4, [pc, #152]	; (6424 <rint+0x140>)
    638c:	000d      	movs	r5, r1
    638e:	46a4      	mov	ip, r4
    6390:	2401      	movs	r4, #1
    6392:	4463      	add	r3, ip
    6394:	4264      	negs	r4, r4
    6396:	40dc      	lsrs	r4, r3
    6398:	46a4      	mov	ip, r4
    639a:	4661      	mov	r1, ip
    639c:	0004      	movs	r4, r0
    639e:	4201      	tst	r1, r0
    63a0:	d0de      	beq.n	6360 <rint+0x7c>
    63a2:	0849      	lsrs	r1, r1, #1
    63a4:	4201      	tst	r1, r0
    63a6:	d0c5      	beq.n	6334 <rint+0x50>
    63a8:	2780      	movs	r7, #128	; 0x80
    63aa:	05ff      	lsls	r7, r7, #23
    63ac:	411f      	asrs	r7, r3
    63ae:	4388      	bics	r0, r1
    63b0:	4307      	orrs	r7, r0
    63b2:	e7bf      	b.n	6334 <rint+0x50>
    63b4:	004b      	lsls	r3, r1, #1
    63b6:	085b      	lsrs	r3, r3, #1
    63b8:	4303      	orrs	r3, r0
    63ba:	0004      	movs	r4, r0
    63bc:	000d      	movs	r5, r1
    63be:	2b00      	cmp	r3, #0
    63c0:	d0ce      	beq.n	6360 <rint+0x7c>
    63c2:	030b      	lsls	r3, r1, #12
    63c4:	0b1b      	lsrs	r3, r3, #12
    63c6:	4303      	orrs	r3, r0
    63c8:	001a      	movs	r2, r3
    63ca:	425b      	negs	r3, r3
    63cc:	4313      	orrs	r3, r2
    63ce:	2280      	movs	r2, #128	; 0x80
    63d0:	0b1b      	lsrs	r3, r3, #12
    63d2:	0312      	lsls	r2, r2, #12
    63d4:	4013      	ands	r3, r2
    63d6:	0c4a      	lsrs	r2, r1, #17
    63d8:	0452      	lsls	r2, r2, #17
    63da:	4313      	orrs	r3, r2
    63dc:	0019      	movs	r1, r3
    63de:	4643      	mov	r3, r8
    63e0:	00da      	lsls	r2, r3, #3
    63e2:	4b0f      	ldr	r3, [pc, #60]	; (6420 <rint+0x13c>)
    63e4:	189b      	adds	r3, r3, r2
    63e6:	681c      	ldr	r4, [r3, #0]
    63e8:	685d      	ldr	r5, [r3, #4]
    63ea:	0022      	movs	r2, r4
    63ec:	002b      	movs	r3, r5
    63ee:	f001 f8c7 	bl	7580 <__aeabi_dadd>
    63f2:	9000      	str	r0, [sp, #0]
    63f4:	9101      	str	r1, [sp, #4]
    63f6:	9800      	ldr	r0, [sp, #0]
    63f8:	9901      	ldr	r1, [sp, #4]
    63fa:	0022      	movs	r2, r4
    63fc:	002b      	movs	r3, r5
    63fe:	f002 fa83 	bl	8908 <__aeabi_dsub>
    6402:	4642      	mov	r2, r8
    6404:	004b      	lsls	r3, r1, #1
    6406:	085b      	lsrs	r3, r3, #1
    6408:	07d6      	lsls	r6, r2, #31
    640a:	4333      	orrs	r3, r6
    640c:	0004      	movs	r4, r0
    640e:	001d      	movs	r5, r3
    6410:	e7a6      	b.n	6360 <rint+0x7c>
    6412:	2780      	movs	r7, #128	; 0x80
    6414:	063f      	lsls	r7, r7, #24
    6416:	e788      	b.n	632a <rint+0x46>
    6418:	fffffc01 	.word	0xfffffc01
    641c:	000fffff 	.word	0x000fffff
    6420:	0000e318 	.word	0x0000e318
    6424:	fffffbed 	.word	0xfffffbed

00006428 <scalbn>:
    6428:	004b      	lsls	r3, r1, #1
    642a:	b570      	push	{r4, r5, r6, lr}
    642c:	0d5b      	lsrs	r3, r3, #21
    642e:	0014      	movs	r4, r2
    6430:	000a      	movs	r2, r1
    6432:	2b00      	cmp	r3, #0
    6434:	d11a      	bne.n	646c <scalbn+0x44>
    6436:	004b      	lsls	r3, r1, #1
    6438:	085b      	lsrs	r3, r3, #1
    643a:	4303      	orrs	r3, r0
    643c:	d015      	beq.n	646a <scalbn+0x42>
    643e:	2200      	movs	r2, #0
    6440:	4b22      	ldr	r3, [pc, #136]	; (64cc <scalbn+0xa4>)
    6442:	f001 ffe1 	bl	8408 <__aeabi_dmul>
    6446:	4b22      	ldr	r3, [pc, #136]	; (64d0 <scalbn+0xa8>)
    6448:	000a      	movs	r2, r1
    644a:	429c      	cmp	r4, r3
    644c:	db22      	blt.n	6494 <scalbn+0x6c>
    644e:	004b      	lsls	r3, r1, #1
    6450:	0d5b      	lsrs	r3, r3, #21
    6452:	3b36      	subs	r3, #54	; 0x36
    6454:	4d1f      	ldr	r5, [pc, #124]	; (64d4 <scalbn+0xac>)
    6456:	18e3      	adds	r3, r4, r3
    6458:	42ab      	cmp	r3, r5
    645a:	dc20      	bgt.n	649e <scalbn+0x76>
    645c:	2b00      	cmp	r3, #0
    645e:	dd0d      	ble.n	647c <scalbn+0x54>
    6460:	4c1d      	ldr	r4, [pc, #116]	; (64d8 <scalbn+0xb0>)
    6462:	051b      	lsls	r3, r3, #20
    6464:	4022      	ands	r2, r4
    6466:	431a      	orrs	r2, r3
    6468:	0011      	movs	r1, r2
    646a:	bd70      	pop	{r4, r5, r6, pc}
    646c:	4d1b      	ldr	r5, [pc, #108]	; (64dc <scalbn+0xb4>)
    646e:	42ab      	cmp	r3, r5
    6470:	d1f0      	bne.n	6454 <scalbn+0x2c>
    6472:	0002      	movs	r2, r0
    6474:	000b      	movs	r3, r1
    6476:	f001 f883 	bl	7580 <__aeabi_dadd>
    647a:	e7f6      	b.n	646a <scalbn+0x42>
    647c:	001d      	movs	r5, r3
    647e:	3535      	adds	r5, #53	; 0x35
    6480:	da18      	bge.n	64b4 <scalbn+0x8c>
    6482:	4b17      	ldr	r3, [pc, #92]	; (64e0 <scalbn+0xb8>)
    6484:	0002      	movs	r2, r0
    6486:	429c      	cmp	r4, r3
    6488:	dc0a      	bgt.n	64a0 <scalbn+0x78>
    648a:	000b      	movs	r3, r1
    648c:	4815      	ldr	r0, [pc, #84]	; (64e4 <scalbn+0xbc>)
    648e:	4916      	ldr	r1, [pc, #88]	; (64e8 <scalbn+0xc0>)
    6490:	f000 f832 	bl	64f8 <copysign>
    6494:	4a13      	ldr	r2, [pc, #76]	; (64e4 <scalbn+0xbc>)
    6496:	4b14      	ldr	r3, [pc, #80]	; (64e8 <scalbn+0xc0>)
    6498:	f001 ffb6 	bl	8408 <__aeabi_dmul>
    649c:	e7e5      	b.n	646a <scalbn+0x42>
    649e:	0002      	movs	r2, r0
    64a0:	000b      	movs	r3, r1
    64a2:	4812      	ldr	r0, [pc, #72]	; (64ec <scalbn+0xc4>)
    64a4:	4912      	ldr	r1, [pc, #72]	; (64f0 <scalbn+0xc8>)
    64a6:	f000 f827 	bl	64f8 <copysign>
    64aa:	4a10      	ldr	r2, [pc, #64]	; (64ec <scalbn+0xc4>)
    64ac:	4b10      	ldr	r3, [pc, #64]	; (64f0 <scalbn+0xc8>)
    64ae:	f001 ffab 	bl	8408 <__aeabi_dmul>
    64b2:	e7da      	b.n	646a <scalbn+0x42>
    64b4:	4c08      	ldr	r4, [pc, #32]	; (64d8 <scalbn+0xb0>)
    64b6:	3336      	adds	r3, #54	; 0x36
    64b8:	4022      	ands	r2, r4
    64ba:	051b      	lsls	r3, r3, #20
    64bc:	4313      	orrs	r3, r2
    64be:	0019      	movs	r1, r3
    64c0:	2200      	movs	r2, #0
    64c2:	4b0c      	ldr	r3, [pc, #48]	; (64f4 <scalbn+0xcc>)
    64c4:	f001 ffa0 	bl	8408 <__aeabi_dmul>
    64c8:	e7cf      	b.n	646a <scalbn+0x42>
    64ca:	46c0      	nop			; (mov r8, r8)
    64cc:	43500000 	.word	0x43500000
    64d0:	ffff3cb0 	.word	0xffff3cb0
    64d4:	000007fe 	.word	0x000007fe
    64d8:	800fffff 	.word	0x800fffff
    64dc:	000007ff 	.word	0x000007ff
    64e0:	0000c350 	.word	0x0000c350
    64e4:	c2f8f359 	.word	0xc2f8f359
    64e8:	01a56e1f 	.word	0x01a56e1f
    64ec:	8800759c 	.word	0x8800759c
    64f0:	7e37e43c 	.word	0x7e37e43c
    64f4:	3c900000 	.word	0x3c900000

000064f8 <copysign>:
    64f8:	b530      	push	{r4, r5, lr}
    64fa:	004a      	lsls	r2, r1, #1
    64fc:	0fdb      	lsrs	r3, r3, #31
    64fe:	07db      	lsls	r3, r3, #31
    6500:	0852      	lsrs	r2, r2, #1
    6502:	431a      	orrs	r2, r3
    6504:	0011      	movs	r1, r2
    6506:	bd30      	pop	{r4, r5, pc}

00006508 <__udivsi3>:
    6508:	2200      	movs	r2, #0
    650a:	0843      	lsrs	r3, r0, #1
    650c:	428b      	cmp	r3, r1
    650e:	d374      	bcc.n	65fa <__udivsi3+0xf2>
    6510:	0903      	lsrs	r3, r0, #4
    6512:	428b      	cmp	r3, r1
    6514:	d35f      	bcc.n	65d6 <__udivsi3+0xce>
    6516:	0a03      	lsrs	r3, r0, #8
    6518:	428b      	cmp	r3, r1
    651a:	d344      	bcc.n	65a6 <__udivsi3+0x9e>
    651c:	0b03      	lsrs	r3, r0, #12
    651e:	428b      	cmp	r3, r1
    6520:	d328      	bcc.n	6574 <__udivsi3+0x6c>
    6522:	0c03      	lsrs	r3, r0, #16
    6524:	428b      	cmp	r3, r1
    6526:	d30d      	bcc.n	6544 <__udivsi3+0x3c>
    6528:	22ff      	movs	r2, #255	; 0xff
    652a:	0209      	lsls	r1, r1, #8
    652c:	ba12      	rev	r2, r2
    652e:	0c03      	lsrs	r3, r0, #16
    6530:	428b      	cmp	r3, r1
    6532:	d302      	bcc.n	653a <__udivsi3+0x32>
    6534:	1212      	asrs	r2, r2, #8
    6536:	0209      	lsls	r1, r1, #8
    6538:	d065      	beq.n	6606 <__udivsi3+0xfe>
    653a:	0b03      	lsrs	r3, r0, #12
    653c:	428b      	cmp	r3, r1
    653e:	d319      	bcc.n	6574 <__udivsi3+0x6c>
    6540:	e000      	b.n	6544 <__udivsi3+0x3c>
    6542:	0a09      	lsrs	r1, r1, #8
    6544:	0bc3      	lsrs	r3, r0, #15
    6546:	428b      	cmp	r3, r1
    6548:	d301      	bcc.n	654e <__udivsi3+0x46>
    654a:	03cb      	lsls	r3, r1, #15
    654c:	1ac0      	subs	r0, r0, r3
    654e:	4152      	adcs	r2, r2
    6550:	0b83      	lsrs	r3, r0, #14
    6552:	428b      	cmp	r3, r1
    6554:	d301      	bcc.n	655a <__udivsi3+0x52>
    6556:	038b      	lsls	r3, r1, #14
    6558:	1ac0      	subs	r0, r0, r3
    655a:	4152      	adcs	r2, r2
    655c:	0b43      	lsrs	r3, r0, #13
    655e:	428b      	cmp	r3, r1
    6560:	d301      	bcc.n	6566 <__udivsi3+0x5e>
    6562:	034b      	lsls	r3, r1, #13
    6564:	1ac0      	subs	r0, r0, r3
    6566:	4152      	adcs	r2, r2
    6568:	0b03      	lsrs	r3, r0, #12
    656a:	428b      	cmp	r3, r1
    656c:	d301      	bcc.n	6572 <__udivsi3+0x6a>
    656e:	030b      	lsls	r3, r1, #12
    6570:	1ac0      	subs	r0, r0, r3
    6572:	4152      	adcs	r2, r2
    6574:	0ac3      	lsrs	r3, r0, #11
    6576:	428b      	cmp	r3, r1
    6578:	d301      	bcc.n	657e <__udivsi3+0x76>
    657a:	02cb      	lsls	r3, r1, #11
    657c:	1ac0      	subs	r0, r0, r3
    657e:	4152      	adcs	r2, r2
    6580:	0a83      	lsrs	r3, r0, #10
    6582:	428b      	cmp	r3, r1
    6584:	d301      	bcc.n	658a <__udivsi3+0x82>
    6586:	028b      	lsls	r3, r1, #10
    6588:	1ac0      	subs	r0, r0, r3
    658a:	4152      	adcs	r2, r2
    658c:	0a43      	lsrs	r3, r0, #9
    658e:	428b      	cmp	r3, r1
    6590:	d301      	bcc.n	6596 <__udivsi3+0x8e>
    6592:	024b      	lsls	r3, r1, #9
    6594:	1ac0      	subs	r0, r0, r3
    6596:	4152      	adcs	r2, r2
    6598:	0a03      	lsrs	r3, r0, #8
    659a:	428b      	cmp	r3, r1
    659c:	d301      	bcc.n	65a2 <__udivsi3+0x9a>
    659e:	020b      	lsls	r3, r1, #8
    65a0:	1ac0      	subs	r0, r0, r3
    65a2:	4152      	adcs	r2, r2
    65a4:	d2cd      	bcs.n	6542 <__udivsi3+0x3a>
    65a6:	09c3      	lsrs	r3, r0, #7
    65a8:	428b      	cmp	r3, r1
    65aa:	d301      	bcc.n	65b0 <__udivsi3+0xa8>
    65ac:	01cb      	lsls	r3, r1, #7
    65ae:	1ac0      	subs	r0, r0, r3
    65b0:	4152      	adcs	r2, r2
    65b2:	0983      	lsrs	r3, r0, #6
    65b4:	428b      	cmp	r3, r1
    65b6:	d301      	bcc.n	65bc <__udivsi3+0xb4>
    65b8:	018b      	lsls	r3, r1, #6
    65ba:	1ac0      	subs	r0, r0, r3
    65bc:	4152      	adcs	r2, r2
    65be:	0943      	lsrs	r3, r0, #5
    65c0:	428b      	cmp	r3, r1
    65c2:	d301      	bcc.n	65c8 <__udivsi3+0xc0>
    65c4:	014b      	lsls	r3, r1, #5
    65c6:	1ac0      	subs	r0, r0, r3
    65c8:	4152      	adcs	r2, r2
    65ca:	0903      	lsrs	r3, r0, #4
    65cc:	428b      	cmp	r3, r1
    65ce:	d301      	bcc.n	65d4 <__udivsi3+0xcc>
    65d0:	010b      	lsls	r3, r1, #4
    65d2:	1ac0      	subs	r0, r0, r3
    65d4:	4152      	adcs	r2, r2
    65d6:	08c3      	lsrs	r3, r0, #3
    65d8:	428b      	cmp	r3, r1
    65da:	d301      	bcc.n	65e0 <__udivsi3+0xd8>
    65dc:	00cb      	lsls	r3, r1, #3
    65de:	1ac0      	subs	r0, r0, r3
    65e0:	4152      	adcs	r2, r2
    65e2:	0883      	lsrs	r3, r0, #2
    65e4:	428b      	cmp	r3, r1
    65e6:	d301      	bcc.n	65ec <__udivsi3+0xe4>
    65e8:	008b      	lsls	r3, r1, #2
    65ea:	1ac0      	subs	r0, r0, r3
    65ec:	4152      	adcs	r2, r2
    65ee:	0843      	lsrs	r3, r0, #1
    65f0:	428b      	cmp	r3, r1
    65f2:	d301      	bcc.n	65f8 <__udivsi3+0xf0>
    65f4:	004b      	lsls	r3, r1, #1
    65f6:	1ac0      	subs	r0, r0, r3
    65f8:	4152      	adcs	r2, r2
    65fa:	1a41      	subs	r1, r0, r1
    65fc:	d200      	bcs.n	6600 <__udivsi3+0xf8>
    65fe:	4601      	mov	r1, r0
    6600:	4152      	adcs	r2, r2
    6602:	4610      	mov	r0, r2
    6604:	4770      	bx	lr
    6606:	e7ff      	b.n	6608 <__udivsi3+0x100>
    6608:	b501      	push	{r0, lr}
    660a:	2000      	movs	r0, #0
    660c:	f000 f8f0 	bl	67f0 <__aeabi_idiv0>
    6610:	bd02      	pop	{r1, pc}
    6612:	46c0      	nop			; (mov r8, r8)

00006614 <__aeabi_uidivmod>:
    6614:	2900      	cmp	r1, #0
    6616:	d0f7      	beq.n	6608 <__udivsi3+0x100>
    6618:	e776      	b.n	6508 <__udivsi3>
    661a:	4770      	bx	lr

0000661c <__divsi3>:
    661c:	4603      	mov	r3, r0
    661e:	430b      	orrs	r3, r1
    6620:	d47f      	bmi.n	6722 <__divsi3+0x106>
    6622:	2200      	movs	r2, #0
    6624:	0843      	lsrs	r3, r0, #1
    6626:	428b      	cmp	r3, r1
    6628:	d374      	bcc.n	6714 <__divsi3+0xf8>
    662a:	0903      	lsrs	r3, r0, #4
    662c:	428b      	cmp	r3, r1
    662e:	d35f      	bcc.n	66f0 <__divsi3+0xd4>
    6630:	0a03      	lsrs	r3, r0, #8
    6632:	428b      	cmp	r3, r1
    6634:	d344      	bcc.n	66c0 <__divsi3+0xa4>
    6636:	0b03      	lsrs	r3, r0, #12
    6638:	428b      	cmp	r3, r1
    663a:	d328      	bcc.n	668e <__divsi3+0x72>
    663c:	0c03      	lsrs	r3, r0, #16
    663e:	428b      	cmp	r3, r1
    6640:	d30d      	bcc.n	665e <__divsi3+0x42>
    6642:	22ff      	movs	r2, #255	; 0xff
    6644:	0209      	lsls	r1, r1, #8
    6646:	ba12      	rev	r2, r2
    6648:	0c03      	lsrs	r3, r0, #16
    664a:	428b      	cmp	r3, r1
    664c:	d302      	bcc.n	6654 <__divsi3+0x38>
    664e:	1212      	asrs	r2, r2, #8
    6650:	0209      	lsls	r1, r1, #8
    6652:	d065      	beq.n	6720 <__divsi3+0x104>
    6654:	0b03      	lsrs	r3, r0, #12
    6656:	428b      	cmp	r3, r1
    6658:	d319      	bcc.n	668e <__divsi3+0x72>
    665a:	e000      	b.n	665e <__divsi3+0x42>
    665c:	0a09      	lsrs	r1, r1, #8
    665e:	0bc3      	lsrs	r3, r0, #15
    6660:	428b      	cmp	r3, r1
    6662:	d301      	bcc.n	6668 <__divsi3+0x4c>
    6664:	03cb      	lsls	r3, r1, #15
    6666:	1ac0      	subs	r0, r0, r3
    6668:	4152      	adcs	r2, r2
    666a:	0b83      	lsrs	r3, r0, #14
    666c:	428b      	cmp	r3, r1
    666e:	d301      	bcc.n	6674 <__divsi3+0x58>
    6670:	038b      	lsls	r3, r1, #14
    6672:	1ac0      	subs	r0, r0, r3
    6674:	4152      	adcs	r2, r2
    6676:	0b43      	lsrs	r3, r0, #13
    6678:	428b      	cmp	r3, r1
    667a:	d301      	bcc.n	6680 <__divsi3+0x64>
    667c:	034b      	lsls	r3, r1, #13
    667e:	1ac0      	subs	r0, r0, r3
    6680:	4152      	adcs	r2, r2
    6682:	0b03      	lsrs	r3, r0, #12
    6684:	428b      	cmp	r3, r1
    6686:	d301      	bcc.n	668c <__divsi3+0x70>
    6688:	030b      	lsls	r3, r1, #12
    668a:	1ac0      	subs	r0, r0, r3
    668c:	4152      	adcs	r2, r2
    668e:	0ac3      	lsrs	r3, r0, #11
    6690:	428b      	cmp	r3, r1
    6692:	d301      	bcc.n	6698 <__divsi3+0x7c>
    6694:	02cb      	lsls	r3, r1, #11
    6696:	1ac0      	subs	r0, r0, r3
    6698:	4152      	adcs	r2, r2
    669a:	0a83      	lsrs	r3, r0, #10
    669c:	428b      	cmp	r3, r1
    669e:	d301      	bcc.n	66a4 <__divsi3+0x88>
    66a0:	028b      	lsls	r3, r1, #10
    66a2:	1ac0      	subs	r0, r0, r3
    66a4:	4152      	adcs	r2, r2
    66a6:	0a43      	lsrs	r3, r0, #9
    66a8:	428b      	cmp	r3, r1
    66aa:	d301      	bcc.n	66b0 <__divsi3+0x94>
    66ac:	024b      	lsls	r3, r1, #9
    66ae:	1ac0      	subs	r0, r0, r3
    66b0:	4152      	adcs	r2, r2
    66b2:	0a03      	lsrs	r3, r0, #8
    66b4:	428b      	cmp	r3, r1
    66b6:	d301      	bcc.n	66bc <__divsi3+0xa0>
    66b8:	020b      	lsls	r3, r1, #8
    66ba:	1ac0      	subs	r0, r0, r3
    66bc:	4152      	adcs	r2, r2
    66be:	d2cd      	bcs.n	665c <__divsi3+0x40>
    66c0:	09c3      	lsrs	r3, r0, #7
    66c2:	428b      	cmp	r3, r1
    66c4:	d301      	bcc.n	66ca <__divsi3+0xae>
    66c6:	01cb      	lsls	r3, r1, #7
    66c8:	1ac0      	subs	r0, r0, r3
    66ca:	4152      	adcs	r2, r2
    66cc:	0983      	lsrs	r3, r0, #6
    66ce:	428b      	cmp	r3, r1
    66d0:	d301      	bcc.n	66d6 <__divsi3+0xba>
    66d2:	018b      	lsls	r3, r1, #6
    66d4:	1ac0      	subs	r0, r0, r3
    66d6:	4152      	adcs	r2, r2
    66d8:	0943      	lsrs	r3, r0, #5
    66da:	428b      	cmp	r3, r1
    66dc:	d301      	bcc.n	66e2 <__divsi3+0xc6>
    66de:	014b      	lsls	r3, r1, #5
    66e0:	1ac0      	subs	r0, r0, r3
    66e2:	4152      	adcs	r2, r2
    66e4:	0903      	lsrs	r3, r0, #4
    66e6:	428b      	cmp	r3, r1
    66e8:	d301      	bcc.n	66ee <__divsi3+0xd2>
    66ea:	010b      	lsls	r3, r1, #4
    66ec:	1ac0      	subs	r0, r0, r3
    66ee:	4152      	adcs	r2, r2
    66f0:	08c3      	lsrs	r3, r0, #3
    66f2:	428b      	cmp	r3, r1
    66f4:	d301      	bcc.n	66fa <__divsi3+0xde>
    66f6:	00cb      	lsls	r3, r1, #3
    66f8:	1ac0      	subs	r0, r0, r3
    66fa:	4152      	adcs	r2, r2
    66fc:	0883      	lsrs	r3, r0, #2
    66fe:	428b      	cmp	r3, r1
    6700:	d301      	bcc.n	6706 <__divsi3+0xea>
    6702:	008b      	lsls	r3, r1, #2
    6704:	1ac0      	subs	r0, r0, r3
    6706:	4152      	adcs	r2, r2
    6708:	0843      	lsrs	r3, r0, #1
    670a:	428b      	cmp	r3, r1
    670c:	d301      	bcc.n	6712 <__divsi3+0xf6>
    670e:	004b      	lsls	r3, r1, #1
    6710:	1ac0      	subs	r0, r0, r3
    6712:	4152      	adcs	r2, r2
    6714:	1a41      	subs	r1, r0, r1
    6716:	d200      	bcs.n	671a <__divsi3+0xfe>
    6718:	4601      	mov	r1, r0
    671a:	4152      	adcs	r2, r2
    671c:	4610      	mov	r0, r2
    671e:	4770      	bx	lr
    6720:	e05d      	b.n	67de <__divsi3+0x1c2>
    6722:	0fca      	lsrs	r2, r1, #31
    6724:	d000      	beq.n	6728 <__divsi3+0x10c>
    6726:	4249      	negs	r1, r1
    6728:	1003      	asrs	r3, r0, #32
    672a:	d300      	bcc.n	672e <__divsi3+0x112>
    672c:	4240      	negs	r0, r0
    672e:	4053      	eors	r3, r2
    6730:	2200      	movs	r2, #0
    6732:	469c      	mov	ip, r3
    6734:	0903      	lsrs	r3, r0, #4
    6736:	428b      	cmp	r3, r1
    6738:	d32d      	bcc.n	6796 <__divsi3+0x17a>
    673a:	0a03      	lsrs	r3, r0, #8
    673c:	428b      	cmp	r3, r1
    673e:	d312      	bcc.n	6766 <__divsi3+0x14a>
    6740:	22fc      	movs	r2, #252	; 0xfc
    6742:	0189      	lsls	r1, r1, #6
    6744:	ba12      	rev	r2, r2
    6746:	0a03      	lsrs	r3, r0, #8
    6748:	428b      	cmp	r3, r1
    674a:	d30c      	bcc.n	6766 <__divsi3+0x14a>
    674c:	0189      	lsls	r1, r1, #6
    674e:	1192      	asrs	r2, r2, #6
    6750:	428b      	cmp	r3, r1
    6752:	d308      	bcc.n	6766 <__divsi3+0x14a>
    6754:	0189      	lsls	r1, r1, #6
    6756:	1192      	asrs	r2, r2, #6
    6758:	428b      	cmp	r3, r1
    675a:	d304      	bcc.n	6766 <__divsi3+0x14a>
    675c:	0189      	lsls	r1, r1, #6
    675e:	d03a      	beq.n	67d6 <__divsi3+0x1ba>
    6760:	1192      	asrs	r2, r2, #6
    6762:	e000      	b.n	6766 <__divsi3+0x14a>
    6764:	0989      	lsrs	r1, r1, #6
    6766:	09c3      	lsrs	r3, r0, #7
    6768:	428b      	cmp	r3, r1
    676a:	d301      	bcc.n	6770 <__divsi3+0x154>
    676c:	01cb      	lsls	r3, r1, #7
    676e:	1ac0      	subs	r0, r0, r3
    6770:	4152      	adcs	r2, r2
    6772:	0983      	lsrs	r3, r0, #6
    6774:	428b      	cmp	r3, r1
    6776:	d301      	bcc.n	677c <__divsi3+0x160>
    6778:	018b      	lsls	r3, r1, #6
    677a:	1ac0      	subs	r0, r0, r3
    677c:	4152      	adcs	r2, r2
    677e:	0943      	lsrs	r3, r0, #5
    6780:	428b      	cmp	r3, r1
    6782:	d301      	bcc.n	6788 <__divsi3+0x16c>
    6784:	014b      	lsls	r3, r1, #5
    6786:	1ac0      	subs	r0, r0, r3
    6788:	4152      	adcs	r2, r2
    678a:	0903      	lsrs	r3, r0, #4
    678c:	428b      	cmp	r3, r1
    678e:	d301      	bcc.n	6794 <__divsi3+0x178>
    6790:	010b      	lsls	r3, r1, #4
    6792:	1ac0      	subs	r0, r0, r3
    6794:	4152      	adcs	r2, r2
    6796:	08c3      	lsrs	r3, r0, #3
    6798:	428b      	cmp	r3, r1
    679a:	d301      	bcc.n	67a0 <__divsi3+0x184>
    679c:	00cb      	lsls	r3, r1, #3
    679e:	1ac0      	subs	r0, r0, r3
    67a0:	4152      	adcs	r2, r2
    67a2:	0883      	lsrs	r3, r0, #2
    67a4:	428b      	cmp	r3, r1
    67a6:	d301      	bcc.n	67ac <__divsi3+0x190>
    67a8:	008b      	lsls	r3, r1, #2
    67aa:	1ac0      	subs	r0, r0, r3
    67ac:	4152      	adcs	r2, r2
    67ae:	d2d9      	bcs.n	6764 <__divsi3+0x148>
    67b0:	0843      	lsrs	r3, r0, #1
    67b2:	428b      	cmp	r3, r1
    67b4:	d301      	bcc.n	67ba <__divsi3+0x19e>
    67b6:	004b      	lsls	r3, r1, #1
    67b8:	1ac0      	subs	r0, r0, r3
    67ba:	4152      	adcs	r2, r2
    67bc:	1a41      	subs	r1, r0, r1
    67be:	d200      	bcs.n	67c2 <__divsi3+0x1a6>
    67c0:	4601      	mov	r1, r0
    67c2:	4663      	mov	r3, ip
    67c4:	4152      	adcs	r2, r2
    67c6:	105b      	asrs	r3, r3, #1
    67c8:	4610      	mov	r0, r2
    67ca:	d301      	bcc.n	67d0 <__divsi3+0x1b4>
    67cc:	4240      	negs	r0, r0
    67ce:	2b00      	cmp	r3, #0
    67d0:	d500      	bpl.n	67d4 <__divsi3+0x1b8>
    67d2:	4249      	negs	r1, r1
    67d4:	4770      	bx	lr
    67d6:	4663      	mov	r3, ip
    67d8:	105b      	asrs	r3, r3, #1
    67da:	d300      	bcc.n	67de <__divsi3+0x1c2>
    67dc:	4240      	negs	r0, r0
    67de:	b501      	push	{r0, lr}
    67e0:	2000      	movs	r0, #0
    67e2:	f000 f805 	bl	67f0 <__aeabi_idiv0>
    67e6:	bd02      	pop	{r1, pc}

000067e8 <__aeabi_idivmod>:
    67e8:	2900      	cmp	r1, #0
    67ea:	d0f8      	beq.n	67de <__divsi3+0x1c2>
    67ec:	e716      	b.n	661c <__divsi3>
    67ee:	4770      	bx	lr

000067f0 <__aeabi_idiv0>:
    67f0:	4770      	bx	lr
    67f2:	46c0      	nop			; (mov r8, r8)

000067f4 <__aeabi_cdrcmple>:
    67f4:	4684      	mov	ip, r0
    67f6:	1c10      	adds	r0, r2, #0
    67f8:	4662      	mov	r2, ip
    67fa:	468c      	mov	ip, r1
    67fc:	1c19      	adds	r1, r3, #0
    67fe:	4663      	mov	r3, ip
    6800:	e000      	b.n	6804 <__aeabi_cdcmpeq>
    6802:	46c0      	nop			; (mov r8, r8)

00006804 <__aeabi_cdcmpeq>:
    6804:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    6806:	f001 fd9d 	bl	8344 <__ledf2>
    680a:	2800      	cmp	r0, #0
    680c:	d401      	bmi.n	6812 <__aeabi_cdcmpeq+0xe>
    680e:	2100      	movs	r1, #0
    6810:	42c8      	cmn	r0, r1
    6812:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006814 <__aeabi_dcmpeq>:
    6814:	b510      	push	{r4, lr}
    6816:	f001 fcf7 	bl	8208 <__eqdf2>
    681a:	4240      	negs	r0, r0
    681c:	3001      	adds	r0, #1
    681e:	bd10      	pop	{r4, pc}

00006820 <__aeabi_dcmplt>:
    6820:	b510      	push	{r4, lr}
    6822:	f001 fd8f 	bl	8344 <__ledf2>
    6826:	2800      	cmp	r0, #0
    6828:	db01      	blt.n	682e <__aeabi_dcmplt+0xe>
    682a:	2000      	movs	r0, #0
    682c:	bd10      	pop	{r4, pc}
    682e:	2001      	movs	r0, #1
    6830:	bd10      	pop	{r4, pc}
    6832:	46c0      	nop			; (mov r8, r8)

00006834 <__aeabi_dcmple>:
    6834:	b510      	push	{r4, lr}
    6836:	f001 fd85 	bl	8344 <__ledf2>
    683a:	2800      	cmp	r0, #0
    683c:	dd01      	ble.n	6842 <__aeabi_dcmple+0xe>
    683e:	2000      	movs	r0, #0
    6840:	bd10      	pop	{r4, pc}
    6842:	2001      	movs	r0, #1
    6844:	bd10      	pop	{r4, pc}
    6846:	46c0      	nop			; (mov r8, r8)

00006848 <__aeabi_dcmpgt>:
    6848:	b510      	push	{r4, lr}
    684a:	f001 fd17 	bl	827c <__gedf2>
    684e:	2800      	cmp	r0, #0
    6850:	dc01      	bgt.n	6856 <__aeabi_dcmpgt+0xe>
    6852:	2000      	movs	r0, #0
    6854:	bd10      	pop	{r4, pc}
    6856:	2001      	movs	r0, #1
    6858:	bd10      	pop	{r4, pc}
    685a:	46c0      	nop			; (mov r8, r8)

0000685c <__aeabi_dcmpge>:
    685c:	b510      	push	{r4, lr}
    685e:	f001 fd0d 	bl	827c <__gedf2>
    6862:	2800      	cmp	r0, #0
    6864:	da01      	bge.n	686a <__aeabi_dcmpge+0xe>
    6866:	2000      	movs	r0, #0
    6868:	bd10      	pop	{r4, pc}
    686a:	2001      	movs	r0, #1
    686c:	bd10      	pop	{r4, pc}
    686e:	46c0      	nop			; (mov r8, r8)

00006870 <__aeabi_cfrcmple>:
    6870:	4684      	mov	ip, r0
    6872:	1c08      	adds	r0, r1, #0
    6874:	4661      	mov	r1, ip
    6876:	e7ff      	b.n	6878 <__aeabi_cfcmpeq>

00006878 <__aeabi_cfcmpeq>:
    6878:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    687a:	f000 fb33 	bl	6ee4 <__lesf2>
    687e:	2800      	cmp	r0, #0
    6880:	d401      	bmi.n	6886 <__aeabi_cfcmpeq+0xe>
    6882:	2100      	movs	r1, #0
    6884:	42c8      	cmn	r0, r1
    6886:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006888 <__aeabi_fcmpeq>:
    6888:	b510      	push	{r4, lr}
    688a:	f000 fac5 	bl	6e18 <__eqsf2>
    688e:	4240      	negs	r0, r0
    6890:	3001      	adds	r0, #1
    6892:	bd10      	pop	{r4, pc}

00006894 <__aeabi_fcmplt>:
    6894:	b510      	push	{r4, lr}
    6896:	f000 fb25 	bl	6ee4 <__lesf2>
    689a:	2800      	cmp	r0, #0
    689c:	db01      	blt.n	68a2 <__aeabi_fcmplt+0xe>
    689e:	2000      	movs	r0, #0
    68a0:	bd10      	pop	{r4, pc}
    68a2:	2001      	movs	r0, #1
    68a4:	bd10      	pop	{r4, pc}
    68a6:	46c0      	nop			; (mov r8, r8)

000068a8 <__aeabi_fcmple>:
    68a8:	b510      	push	{r4, lr}
    68aa:	f000 fb1b 	bl	6ee4 <__lesf2>
    68ae:	2800      	cmp	r0, #0
    68b0:	dd01      	ble.n	68b6 <__aeabi_fcmple+0xe>
    68b2:	2000      	movs	r0, #0
    68b4:	bd10      	pop	{r4, pc}
    68b6:	2001      	movs	r0, #1
    68b8:	bd10      	pop	{r4, pc}
    68ba:	46c0      	nop			; (mov r8, r8)

000068bc <__aeabi_fcmpgt>:
    68bc:	b510      	push	{r4, lr}
    68be:	f000 fad1 	bl	6e64 <__gesf2>
    68c2:	2800      	cmp	r0, #0
    68c4:	dc01      	bgt.n	68ca <__aeabi_fcmpgt+0xe>
    68c6:	2000      	movs	r0, #0
    68c8:	bd10      	pop	{r4, pc}
    68ca:	2001      	movs	r0, #1
    68cc:	bd10      	pop	{r4, pc}
    68ce:	46c0      	nop			; (mov r8, r8)

000068d0 <__aeabi_fcmpge>:
    68d0:	b510      	push	{r4, lr}
    68d2:	f000 fac7 	bl	6e64 <__gesf2>
    68d6:	2800      	cmp	r0, #0
    68d8:	da01      	bge.n	68de <__aeabi_fcmpge+0xe>
    68da:	2000      	movs	r0, #0
    68dc:	bd10      	pop	{r4, pc}
    68de:	2001      	movs	r0, #1
    68e0:	bd10      	pop	{r4, pc}
    68e2:	46c0      	nop			; (mov r8, r8)

000068e4 <__aeabi_uldivmod>:
    68e4:	2b00      	cmp	r3, #0
    68e6:	d111      	bne.n	690c <__aeabi_uldivmod+0x28>
    68e8:	2a00      	cmp	r2, #0
    68ea:	d10f      	bne.n	690c <__aeabi_uldivmod+0x28>
    68ec:	2900      	cmp	r1, #0
    68ee:	d100      	bne.n	68f2 <__aeabi_uldivmod+0xe>
    68f0:	2800      	cmp	r0, #0
    68f2:	d002      	beq.n	68fa <__aeabi_uldivmod+0x16>
    68f4:	2100      	movs	r1, #0
    68f6:	43c9      	mvns	r1, r1
    68f8:	1c08      	adds	r0, r1, #0
    68fa:	b407      	push	{r0, r1, r2}
    68fc:	4802      	ldr	r0, [pc, #8]	; (6908 <__aeabi_uldivmod+0x24>)
    68fe:	a102      	add	r1, pc, #8	; (adr r1, 6908 <__aeabi_uldivmod+0x24>)
    6900:	1840      	adds	r0, r0, r1
    6902:	9002      	str	r0, [sp, #8]
    6904:	bd03      	pop	{r0, r1, pc}
    6906:	46c0      	nop			; (mov r8, r8)
    6908:	fffffee9 	.word	0xfffffee9
    690c:	b403      	push	{r0, r1}
    690e:	4668      	mov	r0, sp
    6910:	b501      	push	{r0, lr}
    6912:	9802      	ldr	r0, [sp, #8]
    6914:	f000 f82e 	bl	6974 <__udivmoddi4>
    6918:	9b01      	ldr	r3, [sp, #4]
    691a:	469e      	mov	lr, r3
    691c:	b002      	add	sp, #8
    691e:	bc0c      	pop	{r2, r3}
    6920:	4770      	bx	lr
    6922:	46c0      	nop			; (mov r8, r8)

00006924 <__ffssi2>:
    6924:	b510      	push	{r4, lr}
    6926:	2300      	movs	r3, #0
    6928:	2800      	cmp	r0, #0
    692a:	d002      	beq.n	6932 <__ffssi2+0xe>
    692c:	f002 fc4c 	bl	91c8 <__ctzsi2>
    6930:	1c43      	adds	r3, r0, #1
    6932:	0018      	movs	r0, r3
    6934:	bd10      	pop	{r4, pc}
    6936:	46c0      	nop			; (mov r8, r8)

00006938 <__aeabi_d2uiz>:
    6938:	b570      	push	{r4, r5, r6, lr}
    693a:	2200      	movs	r2, #0
    693c:	4b0c      	ldr	r3, [pc, #48]	; (6970 <__aeabi_d2uiz+0x38>)
    693e:	0004      	movs	r4, r0
    6940:	000d      	movs	r5, r1
    6942:	f7ff ff8b 	bl	685c <__aeabi_dcmpge>
    6946:	2800      	cmp	r0, #0
    6948:	d104      	bne.n	6954 <__aeabi_d2uiz+0x1c>
    694a:	0020      	movs	r0, r4
    694c:	0029      	movs	r1, r5
    694e:	f002 fb11 	bl	8f74 <__aeabi_d2iz>
    6952:	bd70      	pop	{r4, r5, r6, pc}
    6954:	4b06      	ldr	r3, [pc, #24]	; (6970 <__aeabi_d2uiz+0x38>)
    6956:	2200      	movs	r2, #0
    6958:	0020      	movs	r0, r4
    695a:	0029      	movs	r1, r5
    695c:	f001 ffd4 	bl	8908 <__aeabi_dsub>
    6960:	f002 fb08 	bl	8f74 <__aeabi_d2iz>
    6964:	2380      	movs	r3, #128	; 0x80
    6966:	061b      	lsls	r3, r3, #24
    6968:	469c      	mov	ip, r3
    696a:	4460      	add	r0, ip
    696c:	e7f1      	b.n	6952 <__aeabi_d2uiz+0x1a>
    696e:	46c0      	nop			; (mov r8, r8)
    6970:	41e00000 	.word	0x41e00000

00006974 <__udivmoddi4>:
    6974:	b5f0      	push	{r4, r5, r6, r7, lr}
    6976:	4657      	mov	r7, sl
    6978:	464e      	mov	r6, r9
    697a:	4645      	mov	r5, r8
    697c:	46de      	mov	lr, fp
    697e:	b5e0      	push	{r5, r6, r7, lr}
    6980:	0004      	movs	r4, r0
    6982:	b083      	sub	sp, #12
    6984:	000d      	movs	r5, r1
    6986:	4692      	mov	sl, r2
    6988:	4699      	mov	r9, r3
    698a:	428b      	cmp	r3, r1
    698c:	d82f      	bhi.n	69ee <__udivmoddi4+0x7a>
    698e:	d02c      	beq.n	69ea <__udivmoddi4+0x76>
    6990:	4649      	mov	r1, r9
    6992:	4650      	mov	r0, sl
    6994:	f002 fc0c 	bl	91b0 <__clzdi2>
    6998:	0029      	movs	r1, r5
    699a:	0006      	movs	r6, r0
    699c:	0020      	movs	r0, r4
    699e:	f002 fc07 	bl	91b0 <__clzdi2>
    69a2:	1a33      	subs	r3, r6, r0
    69a4:	4698      	mov	r8, r3
    69a6:	3b20      	subs	r3, #32
    69a8:	469b      	mov	fp, r3
    69aa:	d500      	bpl.n	69ae <__udivmoddi4+0x3a>
    69ac:	e074      	b.n	6a98 <__udivmoddi4+0x124>
    69ae:	4653      	mov	r3, sl
    69b0:	465a      	mov	r2, fp
    69b2:	4093      	lsls	r3, r2
    69b4:	001f      	movs	r7, r3
    69b6:	4653      	mov	r3, sl
    69b8:	4642      	mov	r2, r8
    69ba:	4093      	lsls	r3, r2
    69bc:	001e      	movs	r6, r3
    69be:	42af      	cmp	r7, r5
    69c0:	d829      	bhi.n	6a16 <__udivmoddi4+0xa2>
    69c2:	d026      	beq.n	6a12 <__udivmoddi4+0x9e>
    69c4:	465b      	mov	r3, fp
    69c6:	1ba4      	subs	r4, r4, r6
    69c8:	41bd      	sbcs	r5, r7
    69ca:	2b00      	cmp	r3, #0
    69cc:	da00      	bge.n	69d0 <__udivmoddi4+0x5c>
    69ce:	e079      	b.n	6ac4 <__udivmoddi4+0x150>
    69d0:	2200      	movs	r2, #0
    69d2:	2300      	movs	r3, #0
    69d4:	9200      	str	r2, [sp, #0]
    69d6:	9301      	str	r3, [sp, #4]
    69d8:	2301      	movs	r3, #1
    69da:	465a      	mov	r2, fp
    69dc:	4093      	lsls	r3, r2
    69de:	9301      	str	r3, [sp, #4]
    69e0:	2301      	movs	r3, #1
    69e2:	4642      	mov	r2, r8
    69e4:	4093      	lsls	r3, r2
    69e6:	9300      	str	r3, [sp, #0]
    69e8:	e019      	b.n	6a1e <__udivmoddi4+0xaa>
    69ea:	4282      	cmp	r2, r0
    69ec:	d9d0      	bls.n	6990 <__udivmoddi4+0x1c>
    69ee:	2200      	movs	r2, #0
    69f0:	2300      	movs	r3, #0
    69f2:	9200      	str	r2, [sp, #0]
    69f4:	9301      	str	r3, [sp, #4]
    69f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    69f8:	2b00      	cmp	r3, #0
    69fa:	d001      	beq.n	6a00 <__udivmoddi4+0x8c>
    69fc:	601c      	str	r4, [r3, #0]
    69fe:	605d      	str	r5, [r3, #4]
    6a00:	9800      	ldr	r0, [sp, #0]
    6a02:	9901      	ldr	r1, [sp, #4]
    6a04:	b003      	add	sp, #12
    6a06:	bc3c      	pop	{r2, r3, r4, r5}
    6a08:	4690      	mov	r8, r2
    6a0a:	4699      	mov	r9, r3
    6a0c:	46a2      	mov	sl, r4
    6a0e:	46ab      	mov	fp, r5
    6a10:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6a12:	42a3      	cmp	r3, r4
    6a14:	d9d6      	bls.n	69c4 <__udivmoddi4+0x50>
    6a16:	2200      	movs	r2, #0
    6a18:	2300      	movs	r3, #0
    6a1a:	9200      	str	r2, [sp, #0]
    6a1c:	9301      	str	r3, [sp, #4]
    6a1e:	4643      	mov	r3, r8
    6a20:	2b00      	cmp	r3, #0
    6a22:	d0e8      	beq.n	69f6 <__udivmoddi4+0x82>
    6a24:	07fb      	lsls	r3, r7, #31
    6a26:	0872      	lsrs	r2, r6, #1
    6a28:	431a      	orrs	r2, r3
    6a2a:	4646      	mov	r6, r8
    6a2c:	087b      	lsrs	r3, r7, #1
    6a2e:	e00e      	b.n	6a4e <__udivmoddi4+0xda>
    6a30:	42ab      	cmp	r3, r5
    6a32:	d101      	bne.n	6a38 <__udivmoddi4+0xc4>
    6a34:	42a2      	cmp	r2, r4
    6a36:	d80c      	bhi.n	6a52 <__udivmoddi4+0xde>
    6a38:	1aa4      	subs	r4, r4, r2
    6a3a:	419d      	sbcs	r5, r3
    6a3c:	2001      	movs	r0, #1
    6a3e:	1924      	adds	r4, r4, r4
    6a40:	416d      	adcs	r5, r5
    6a42:	2100      	movs	r1, #0
    6a44:	3e01      	subs	r6, #1
    6a46:	1824      	adds	r4, r4, r0
    6a48:	414d      	adcs	r5, r1
    6a4a:	2e00      	cmp	r6, #0
    6a4c:	d006      	beq.n	6a5c <__udivmoddi4+0xe8>
    6a4e:	42ab      	cmp	r3, r5
    6a50:	d9ee      	bls.n	6a30 <__udivmoddi4+0xbc>
    6a52:	3e01      	subs	r6, #1
    6a54:	1924      	adds	r4, r4, r4
    6a56:	416d      	adcs	r5, r5
    6a58:	2e00      	cmp	r6, #0
    6a5a:	d1f8      	bne.n	6a4e <__udivmoddi4+0xda>
    6a5c:	465b      	mov	r3, fp
    6a5e:	9800      	ldr	r0, [sp, #0]
    6a60:	9901      	ldr	r1, [sp, #4]
    6a62:	1900      	adds	r0, r0, r4
    6a64:	4169      	adcs	r1, r5
    6a66:	2b00      	cmp	r3, #0
    6a68:	db22      	blt.n	6ab0 <__udivmoddi4+0x13c>
    6a6a:	002b      	movs	r3, r5
    6a6c:	465a      	mov	r2, fp
    6a6e:	40d3      	lsrs	r3, r2
    6a70:	002a      	movs	r2, r5
    6a72:	4644      	mov	r4, r8
    6a74:	40e2      	lsrs	r2, r4
    6a76:	001c      	movs	r4, r3
    6a78:	465b      	mov	r3, fp
    6a7a:	0015      	movs	r5, r2
    6a7c:	2b00      	cmp	r3, #0
    6a7e:	db2c      	blt.n	6ada <__udivmoddi4+0x166>
    6a80:	0026      	movs	r6, r4
    6a82:	409e      	lsls	r6, r3
    6a84:	0033      	movs	r3, r6
    6a86:	0026      	movs	r6, r4
    6a88:	4647      	mov	r7, r8
    6a8a:	40be      	lsls	r6, r7
    6a8c:	0032      	movs	r2, r6
    6a8e:	1a80      	subs	r0, r0, r2
    6a90:	4199      	sbcs	r1, r3
    6a92:	9000      	str	r0, [sp, #0]
    6a94:	9101      	str	r1, [sp, #4]
    6a96:	e7ae      	b.n	69f6 <__udivmoddi4+0x82>
    6a98:	4642      	mov	r2, r8
    6a9a:	2320      	movs	r3, #32
    6a9c:	1a9b      	subs	r3, r3, r2
    6a9e:	4652      	mov	r2, sl
    6aa0:	40da      	lsrs	r2, r3
    6aa2:	4641      	mov	r1, r8
    6aa4:	0013      	movs	r3, r2
    6aa6:	464a      	mov	r2, r9
    6aa8:	408a      	lsls	r2, r1
    6aaa:	0017      	movs	r7, r2
    6aac:	431f      	orrs	r7, r3
    6aae:	e782      	b.n	69b6 <__udivmoddi4+0x42>
    6ab0:	4642      	mov	r2, r8
    6ab2:	2320      	movs	r3, #32
    6ab4:	1a9b      	subs	r3, r3, r2
    6ab6:	002a      	movs	r2, r5
    6ab8:	4646      	mov	r6, r8
    6aba:	409a      	lsls	r2, r3
    6abc:	0023      	movs	r3, r4
    6abe:	40f3      	lsrs	r3, r6
    6ac0:	4313      	orrs	r3, r2
    6ac2:	e7d5      	b.n	6a70 <__udivmoddi4+0xfc>
    6ac4:	4642      	mov	r2, r8
    6ac6:	2320      	movs	r3, #32
    6ac8:	2100      	movs	r1, #0
    6aca:	1a9b      	subs	r3, r3, r2
    6acc:	2200      	movs	r2, #0
    6ace:	9100      	str	r1, [sp, #0]
    6ad0:	9201      	str	r2, [sp, #4]
    6ad2:	2201      	movs	r2, #1
    6ad4:	40da      	lsrs	r2, r3
    6ad6:	9201      	str	r2, [sp, #4]
    6ad8:	e782      	b.n	69e0 <__udivmoddi4+0x6c>
    6ada:	4642      	mov	r2, r8
    6adc:	2320      	movs	r3, #32
    6ade:	0026      	movs	r6, r4
    6ae0:	1a9b      	subs	r3, r3, r2
    6ae2:	40de      	lsrs	r6, r3
    6ae4:	002f      	movs	r7, r5
    6ae6:	46b4      	mov	ip, r6
    6ae8:	4097      	lsls	r7, r2
    6aea:	4666      	mov	r6, ip
    6aec:	003b      	movs	r3, r7
    6aee:	4333      	orrs	r3, r6
    6af0:	e7c9      	b.n	6a86 <__udivmoddi4+0x112>
    6af2:	46c0      	nop			; (mov r8, r8)

00006af4 <__aeabi_fadd>:
    6af4:	b5f0      	push	{r4, r5, r6, r7, lr}
    6af6:	46c6      	mov	lr, r8
    6af8:	024e      	lsls	r6, r1, #9
    6afa:	0247      	lsls	r7, r0, #9
    6afc:	0a76      	lsrs	r6, r6, #9
    6afe:	0a7b      	lsrs	r3, r7, #9
    6b00:	0044      	lsls	r4, r0, #1
    6b02:	0fc5      	lsrs	r5, r0, #31
    6b04:	00f7      	lsls	r7, r6, #3
    6b06:	0048      	lsls	r0, r1, #1
    6b08:	4698      	mov	r8, r3
    6b0a:	b500      	push	{lr}
    6b0c:	0e24      	lsrs	r4, r4, #24
    6b0e:	002a      	movs	r2, r5
    6b10:	00db      	lsls	r3, r3, #3
    6b12:	0e00      	lsrs	r0, r0, #24
    6b14:	0fc9      	lsrs	r1, r1, #31
    6b16:	46bc      	mov	ip, r7
    6b18:	428d      	cmp	r5, r1
    6b1a:	d067      	beq.n	6bec <__aeabi_fadd+0xf8>
    6b1c:	1a22      	subs	r2, r4, r0
    6b1e:	2a00      	cmp	r2, #0
    6b20:	dc00      	bgt.n	6b24 <__aeabi_fadd+0x30>
    6b22:	e0a5      	b.n	6c70 <__aeabi_fadd+0x17c>
    6b24:	2800      	cmp	r0, #0
    6b26:	d13a      	bne.n	6b9e <__aeabi_fadd+0xaa>
    6b28:	2f00      	cmp	r7, #0
    6b2a:	d100      	bne.n	6b2e <__aeabi_fadd+0x3a>
    6b2c:	e093      	b.n	6c56 <__aeabi_fadd+0x162>
    6b2e:	1e51      	subs	r1, r2, #1
    6b30:	2900      	cmp	r1, #0
    6b32:	d000      	beq.n	6b36 <__aeabi_fadd+0x42>
    6b34:	e0bc      	b.n	6cb0 <__aeabi_fadd+0x1bc>
    6b36:	2401      	movs	r4, #1
    6b38:	1bdb      	subs	r3, r3, r7
    6b3a:	015a      	lsls	r2, r3, #5
    6b3c:	d546      	bpl.n	6bcc <__aeabi_fadd+0xd8>
    6b3e:	019b      	lsls	r3, r3, #6
    6b40:	099e      	lsrs	r6, r3, #6
    6b42:	0030      	movs	r0, r6
    6b44:	f002 fb16 	bl	9174 <__clzsi2>
    6b48:	3805      	subs	r0, #5
    6b4a:	4086      	lsls	r6, r0
    6b4c:	4284      	cmp	r4, r0
    6b4e:	dd00      	ble.n	6b52 <__aeabi_fadd+0x5e>
    6b50:	e09d      	b.n	6c8e <__aeabi_fadd+0x19a>
    6b52:	1b04      	subs	r4, r0, r4
    6b54:	0032      	movs	r2, r6
    6b56:	2020      	movs	r0, #32
    6b58:	3401      	adds	r4, #1
    6b5a:	40e2      	lsrs	r2, r4
    6b5c:	1b04      	subs	r4, r0, r4
    6b5e:	40a6      	lsls	r6, r4
    6b60:	0033      	movs	r3, r6
    6b62:	1e5e      	subs	r6, r3, #1
    6b64:	41b3      	sbcs	r3, r6
    6b66:	2400      	movs	r4, #0
    6b68:	4313      	orrs	r3, r2
    6b6a:	075a      	lsls	r2, r3, #29
    6b6c:	d004      	beq.n	6b78 <__aeabi_fadd+0x84>
    6b6e:	220f      	movs	r2, #15
    6b70:	401a      	ands	r2, r3
    6b72:	2a04      	cmp	r2, #4
    6b74:	d000      	beq.n	6b78 <__aeabi_fadd+0x84>
    6b76:	3304      	adds	r3, #4
    6b78:	015a      	lsls	r2, r3, #5
    6b7a:	d529      	bpl.n	6bd0 <__aeabi_fadd+0xdc>
    6b7c:	3401      	adds	r4, #1
    6b7e:	2cff      	cmp	r4, #255	; 0xff
    6b80:	d100      	bne.n	6b84 <__aeabi_fadd+0x90>
    6b82:	e081      	b.n	6c88 <__aeabi_fadd+0x194>
    6b84:	002a      	movs	r2, r5
    6b86:	019b      	lsls	r3, r3, #6
    6b88:	0a5b      	lsrs	r3, r3, #9
    6b8a:	b2e4      	uxtb	r4, r4
    6b8c:	025b      	lsls	r3, r3, #9
    6b8e:	05e4      	lsls	r4, r4, #23
    6b90:	0a58      	lsrs	r0, r3, #9
    6b92:	07d2      	lsls	r2, r2, #31
    6b94:	4320      	orrs	r0, r4
    6b96:	4310      	orrs	r0, r2
    6b98:	bc04      	pop	{r2}
    6b9a:	4690      	mov	r8, r2
    6b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6b9e:	2cff      	cmp	r4, #255	; 0xff
    6ba0:	d0e3      	beq.n	6b6a <__aeabi_fadd+0x76>
    6ba2:	2180      	movs	r1, #128	; 0x80
    6ba4:	0038      	movs	r0, r7
    6ba6:	04c9      	lsls	r1, r1, #19
    6ba8:	4308      	orrs	r0, r1
    6baa:	4684      	mov	ip, r0
    6bac:	2a1b      	cmp	r2, #27
    6bae:	dd00      	ble.n	6bb2 <__aeabi_fadd+0xbe>
    6bb0:	e082      	b.n	6cb8 <__aeabi_fadd+0x1c4>
    6bb2:	2020      	movs	r0, #32
    6bb4:	4661      	mov	r1, ip
    6bb6:	40d1      	lsrs	r1, r2
    6bb8:	1a82      	subs	r2, r0, r2
    6bba:	4660      	mov	r0, ip
    6bbc:	4090      	lsls	r0, r2
    6bbe:	0002      	movs	r2, r0
    6bc0:	1e50      	subs	r0, r2, #1
    6bc2:	4182      	sbcs	r2, r0
    6bc4:	430a      	orrs	r2, r1
    6bc6:	1a9b      	subs	r3, r3, r2
    6bc8:	015a      	lsls	r2, r3, #5
    6bca:	d4b8      	bmi.n	6b3e <__aeabi_fadd+0x4a>
    6bcc:	075a      	lsls	r2, r3, #29
    6bce:	d1ce      	bne.n	6b6e <__aeabi_fadd+0x7a>
    6bd0:	08de      	lsrs	r6, r3, #3
    6bd2:	002a      	movs	r2, r5
    6bd4:	2cff      	cmp	r4, #255	; 0xff
    6bd6:	d13a      	bne.n	6c4e <__aeabi_fadd+0x15a>
    6bd8:	2e00      	cmp	r6, #0
    6bda:	d100      	bne.n	6bde <__aeabi_fadd+0xea>
    6bdc:	e0ae      	b.n	6d3c <__aeabi_fadd+0x248>
    6bde:	2380      	movs	r3, #128	; 0x80
    6be0:	03db      	lsls	r3, r3, #15
    6be2:	4333      	orrs	r3, r6
    6be4:	025b      	lsls	r3, r3, #9
    6be6:	0a5b      	lsrs	r3, r3, #9
    6be8:	24ff      	movs	r4, #255	; 0xff
    6bea:	e7cf      	b.n	6b8c <__aeabi_fadd+0x98>
    6bec:	1a21      	subs	r1, r4, r0
    6bee:	2900      	cmp	r1, #0
    6bf0:	dd52      	ble.n	6c98 <__aeabi_fadd+0x1a4>
    6bf2:	2800      	cmp	r0, #0
    6bf4:	d031      	beq.n	6c5a <__aeabi_fadd+0x166>
    6bf6:	2cff      	cmp	r4, #255	; 0xff
    6bf8:	d0b7      	beq.n	6b6a <__aeabi_fadd+0x76>
    6bfa:	2080      	movs	r0, #128	; 0x80
    6bfc:	003e      	movs	r6, r7
    6bfe:	04c0      	lsls	r0, r0, #19
    6c00:	4306      	orrs	r6, r0
    6c02:	46b4      	mov	ip, r6
    6c04:	291b      	cmp	r1, #27
    6c06:	dd00      	ble.n	6c0a <__aeabi_fadd+0x116>
    6c08:	e0aa      	b.n	6d60 <__aeabi_fadd+0x26c>
    6c0a:	2620      	movs	r6, #32
    6c0c:	4660      	mov	r0, ip
    6c0e:	40c8      	lsrs	r0, r1
    6c10:	1a71      	subs	r1, r6, r1
    6c12:	4666      	mov	r6, ip
    6c14:	408e      	lsls	r6, r1
    6c16:	0031      	movs	r1, r6
    6c18:	1e4e      	subs	r6, r1, #1
    6c1a:	41b1      	sbcs	r1, r6
    6c1c:	4301      	orrs	r1, r0
    6c1e:	185b      	adds	r3, r3, r1
    6c20:	0159      	lsls	r1, r3, #5
    6c22:	d5d3      	bpl.n	6bcc <__aeabi_fadd+0xd8>
    6c24:	3401      	adds	r4, #1
    6c26:	2cff      	cmp	r4, #255	; 0xff
    6c28:	d100      	bne.n	6c2c <__aeabi_fadd+0x138>
    6c2a:	e087      	b.n	6d3c <__aeabi_fadd+0x248>
    6c2c:	2201      	movs	r2, #1
    6c2e:	4978      	ldr	r1, [pc, #480]	; (6e10 <__aeabi_fadd+0x31c>)
    6c30:	401a      	ands	r2, r3
    6c32:	085b      	lsrs	r3, r3, #1
    6c34:	400b      	ands	r3, r1
    6c36:	4313      	orrs	r3, r2
    6c38:	e797      	b.n	6b6a <__aeabi_fadd+0x76>
    6c3a:	2c00      	cmp	r4, #0
    6c3c:	d000      	beq.n	6c40 <__aeabi_fadd+0x14c>
    6c3e:	e0a7      	b.n	6d90 <__aeabi_fadd+0x29c>
    6c40:	2b00      	cmp	r3, #0
    6c42:	d000      	beq.n	6c46 <__aeabi_fadd+0x152>
    6c44:	e0b6      	b.n	6db4 <__aeabi_fadd+0x2c0>
    6c46:	1e3b      	subs	r3, r7, #0
    6c48:	d162      	bne.n	6d10 <__aeabi_fadd+0x21c>
    6c4a:	2600      	movs	r6, #0
    6c4c:	2200      	movs	r2, #0
    6c4e:	0273      	lsls	r3, r6, #9
    6c50:	0a5b      	lsrs	r3, r3, #9
    6c52:	b2e4      	uxtb	r4, r4
    6c54:	e79a      	b.n	6b8c <__aeabi_fadd+0x98>
    6c56:	0014      	movs	r4, r2
    6c58:	e787      	b.n	6b6a <__aeabi_fadd+0x76>
    6c5a:	2f00      	cmp	r7, #0
    6c5c:	d04d      	beq.n	6cfa <__aeabi_fadd+0x206>
    6c5e:	1e48      	subs	r0, r1, #1
    6c60:	2800      	cmp	r0, #0
    6c62:	d157      	bne.n	6d14 <__aeabi_fadd+0x220>
    6c64:	4463      	add	r3, ip
    6c66:	2401      	movs	r4, #1
    6c68:	015a      	lsls	r2, r3, #5
    6c6a:	d5af      	bpl.n	6bcc <__aeabi_fadd+0xd8>
    6c6c:	2402      	movs	r4, #2
    6c6e:	e7dd      	b.n	6c2c <__aeabi_fadd+0x138>
    6c70:	2a00      	cmp	r2, #0
    6c72:	d124      	bne.n	6cbe <__aeabi_fadd+0x1ca>
    6c74:	1c62      	adds	r2, r4, #1
    6c76:	b2d2      	uxtb	r2, r2
    6c78:	2a01      	cmp	r2, #1
    6c7a:	ddde      	ble.n	6c3a <__aeabi_fadd+0x146>
    6c7c:	1bde      	subs	r6, r3, r7
    6c7e:	0172      	lsls	r2, r6, #5
    6c80:	d535      	bpl.n	6cee <__aeabi_fadd+0x1fa>
    6c82:	1afe      	subs	r6, r7, r3
    6c84:	000d      	movs	r5, r1
    6c86:	e75c      	b.n	6b42 <__aeabi_fadd+0x4e>
    6c88:	002a      	movs	r2, r5
    6c8a:	2300      	movs	r3, #0
    6c8c:	e77e      	b.n	6b8c <__aeabi_fadd+0x98>
    6c8e:	0033      	movs	r3, r6
    6c90:	4a60      	ldr	r2, [pc, #384]	; (6e14 <__aeabi_fadd+0x320>)
    6c92:	1a24      	subs	r4, r4, r0
    6c94:	4013      	ands	r3, r2
    6c96:	e768      	b.n	6b6a <__aeabi_fadd+0x76>
    6c98:	2900      	cmp	r1, #0
    6c9a:	d163      	bne.n	6d64 <__aeabi_fadd+0x270>
    6c9c:	1c61      	adds	r1, r4, #1
    6c9e:	b2c8      	uxtb	r0, r1
    6ca0:	2801      	cmp	r0, #1
    6ca2:	dd4e      	ble.n	6d42 <__aeabi_fadd+0x24e>
    6ca4:	29ff      	cmp	r1, #255	; 0xff
    6ca6:	d049      	beq.n	6d3c <__aeabi_fadd+0x248>
    6ca8:	4463      	add	r3, ip
    6caa:	085b      	lsrs	r3, r3, #1
    6cac:	000c      	movs	r4, r1
    6cae:	e75c      	b.n	6b6a <__aeabi_fadd+0x76>
    6cb0:	2aff      	cmp	r2, #255	; 0xff
    6cb2:	d041      	beq.n	6d38 <__aeabi_fadd+0x244>
    6cb4:	000a      	movs	r2, r1
    6cb6:	e779      	b.n	6bac <__aeabi_fadd+0xb8>
    6cb8:	2201      	movs	r2, #1
    6cba:	1a9b      	subs	r3, r3, r2
    6cbc:	e784      	b.n	6bc8 <__aeabi_fadd+0xd4>
    6cbe:	2c00      	cmp	r4, #0
    6cc0:	d01d      	beq.n	6cfe <__aeabi_fadd+0x20a>
    6cc2:	28ff      	cmp	r0, #255	; 0xff
    6cc4:	d022      	beq.n	6d0c <__aeabi_fadd+0x218>
    6cc6:	2480      	movs	r4, #128	; 0x80
    6cc8:	04e4      	lsls	r4, r4, #19
    6cca:	4252      	negs	r2, r2
    6ccc:	4323      	orrs	r3, r4
    6cce:	2a1b      	cmp	r2, #27
    6cd0:	dd00      	ble.n	6cd4 <__aeabi_fadd+0x1e0>
    6cd2:	e08a      	b.n	6dea <__aeabi_fadd+0x2f6>
    6cd4:	001c      	movs	r4, r3
    6cd6:	2520      	movs	r5, #32
    6cd8:	40d4      	lsrs	r4, r2
    6cda:	1aaa      	subs	r2, r5, r2
    6cdc:	4093      	lsls	r3, r2
    6cde:	1e5a      	subs	r2, r3, #1
    6ce0:	4193      	sbcs	r3, r2
    6ce2:	4323      	orrs	r3, r4
    6ce4:	4662      	mov	r2, ip
    6ce6:	0004      	movs	r4, r0
    6ce8:	1ad3      	subs	r3, r2, r3
    6cea:	000d      	movs	r5, r1
    6cec:	e725      	b.n	6b3a <__aeabi_fadd+0x46>
    6cee:	2e00      	cmp	r6, #0
    6cf0:	d000      	beq.n	6cf4 <__aeabi_fadd+0x200>
    6cf2:	e726      	b.n	6b42 <__aeabi_fadd+0x4e>
    6cf4:	2200      	movs	r2, #0
    6cf6:	2400      	movs	r4, #0
    6cf8:	e7a9      	b.n	6c4e <__aeabi_fadd+0x15a>
    6cfa:	000c      	movs	r4, r1
    6cfc:	e735      	b.n	6b6a <__aeabi_fadd+0x76>
    6cfe:	2b00      	cmp	r3, #0
    6d00:	d04d      	beq.n	6d9e <__aeabi_fadd+0x2aa>
    6d02:	43d2      	mvns	r2, r2
    6d04:	2a00      	cmp	r2, #0
    6d06:	d0ed      	beq.n	6ce4 <__aeabi_fadd+0x1f0>
    6d08:	28ff      	cmp	r0, #255	; 0xff
    6d0a:	d1e0      	bne.n	6cce <__aeabi_fadd+0x1da>
    6d0c:	4663      	mov	r3, ip
    6d0e:	24ff      	movs	r4, #255	; 0xff
    6d10:	000d      	movs	r5, r1
    6d12:	e72a      	b.n	6b6a <__aeabi_fadd+0x76>
    6d14:	29ff      	cmp	r1, #255	; 0xff
    6d16:	d00f      	beq.n	6d38 <__aeabi_fadd+0x244>
    6d18:	0001      	movs	r1, r0
    6d1a:	e773      	b.n	6c04 <__aeabi_fadd+0x110>
    6d1c:	2b00      	cmp	r3, #0
    6d1e:	d061      	beq.n	6de4 <__aeabi_fadd+0x2f0>
    6d20:	24ff      	movs	r4, #255	; 0xff
    6d22:	2f00      	cmp	r7, #0
    6d24:	d100      	bne.n	6d28 <__aeabi_fadd+0x234>
    6d26:	e720      	b.n	6b6a <__aeabi_fadd+0x76>
    6d28:	2280      	movs	r2, #128	; 0x80
    6d2a:	4641      	mov	r1, r8
    6d2c:	03d2      	lsls	r2, r2, #15
    6d2e:	4211      	tst	r1, r2
    6d30:	d002      	beq.n	6d38 <__aeabi_fadd+0x244>
    6d32:	4216      	tst	r6, r2
    6d34:	d100      	bne.n	6d38 <__aeabi_fadd+0x244>
    6d36:	003b      	movs	r3, r7
    6d38:	24ff      	movs	r4, #255	; 0xff
    6d3a:	e716      	b.n	6b6a <__aeabi_fadd+0x76>
    6d3c:	24ff      	movs	r4, #255	; 0xff
    6d3e:	2300      	movs	r3, #0
    6d40:	e724      	b.n	6b8c <__aeabi_fadd+0x98>
    6d42:	2c00      	cmp	r4, #0
    6d44:	d1ea      	bne.n	6d1c <__aeabi_fadd+0x228>
    6d46:	2b00      	cmp	r3, #0
    6d48:	d058      	beq.n	6dfc <__aeabi_fadd+0x308>
    6d4a:	2f00      	cmp	r7, #0
    6d4c:	d100      	bne.n	6d50 <__aeabi_fadd+0x25c>
    6d4e:	e70c      	b.n	6b6a <__aeabi_fadd+0x76>
    6d50:	4463      	add	r3, ip
    6d52:	015a      	lsls	r2, r3, #5
    6d54:	d400      	bmi.n	6d58 <__aeabi_fadd+0x264>
    6d56:	e739      	b.n	6bcc <__aeabi_fadd+0xd8>
    6d58:	4a2e      	ldr	r2, [pc, #184]	; (6e14 <__aeabi_fadd+0x320>)
    6d5a:	000c      	movs	r4, r1
    6d5c:	4013      	ands	r3, r2
    6d5e:	e704      	b.n	6b6a <__aeabi_fadd+0x76>
    6d60:	2101      	movs	r1, #1
    6d62:	e75c      	b.n	6c1e <__aeabi_fadd+0x12a>
    6d64:	2c00      	cmp	r4, #0
    6d66:	d11e      	bne.n	6da6 <__aeabi_fadd+0x2b2>
    6d68:	2b00      	cmp	r3, #0
    6d6a:	d040      	beq.n	6dee <__aeabi_fadd+0x2fa>
    6d6c:	43c9      	mvns	r1, r1
    6d6e:	2900      	cmp	r1, #0
    6d70:	d00b      	beq.n	6d8a <__aeabi_fadd+0x296>
    6d72:	28ff      	cmp	r0, #255	; 0xff
    6d74:	d036      	beq.n	6de4 <__aeabi_fadd+0x2f0>
    6d76:	291b      	cmp	r1, #27
    6d78:	dc47      	bgt.n	6e0a <__aeabi_fadd+0x316>
    6d7a:	001c      	movs	r4, r3
    6d7c:	2620      	movs	r6, #32
    6d7e:	40cc      	lsrs	r4, r1
    6d80:	1a71      	subs	r1, r6, r1
    6d82:	408b      	lsls	r3, r1
    6d84:	1e59      	subs	r1, r3, #1
    6d86:	418b      	sbcs	r3, r1
    6d88:	4323      	orrs	r3, r4
    6d8a:	4463      	add	r3, ip
    6d8c:	0004      	movs	r4, r0
    6d8e:	e747      	b.n	6c20 <__aeabi_fadd+0x12c>
    6d90:	2b00      	cmp	r3, #0
    6d92:	d118      	bne.n	6dc6 <__aeabi_fadd+0x2d2>
    6d94:	1e3b      	subs	r3, r7, #0
    6d96:	d02d      	beq.n	6df4 <__aeabi_fadd+0x300>
    6d98:	000d      	movs	r5, r1
    6d9a:	24ff      	movs	r4, #255	; 0xff
    6d9c:	e6e5      	b.n	6b6a <__aeabi_fadd+0x76>
    6d9e:	003b      	movs	r3, r7
    6da0:	0004      	movs	r4, r0
    6da2:	000d      	movs	r5, r1
    6da4:	e6e1      	b.n	6b6a <__aeabi_fadd+0x76>
    6da6:	28ff      	cmp	r0, #255	; 0xff
    6da8:	d01c      	beq.n	6de4 <__aeabi_fadd+0x2f0>
    6daa:	2480      	movs	r4, #128	; 0x80
    6dac:	04e4      	lsls	r4, r4, #19
    6dae:	4249      	negs	r1, r1
    6db0:	4323      	orrs	r3, r4
    6db2:	e7e0      	b.n	6d76 <__aeabi_fadd+0x282>
    6db4:	2f00      	cmp	r7, #0
    6db6:	d100      	bne.n	6dba <__aeabi_fadd+0x2c6>
    6db8:	e6d7      	b.n	6b6a <__aeabi_fadd+0x76>
    6dba:	1bde      	subs	r6, r3, r7
    6dbc:	0172      	lsls	r2, r6, #5
    6dbe:	d51f      	bpl.n	6e00 <__aeabi_fadd+0x30c>
    6dc0:	1afb      	subs	r3, r7, r3
    6dc2:	000d      	movs	r5, r1
    6dc4:	e6d1      	b.n	6b6a <__aeabi_fadd+0x76>
    6dc6:	24ff      	movs	r4, #255	; 0xff
    6dc8:	2f00      	cmp	r7, #0
    6dca:	d100      	bne.n	6dce <__aeabi_fadd+0x2da>
    6dcc:	e6cd      	b.n	6b6a <__aeabi_fadd+0x76>
    6dce:	2280      	movs	r2, #128	; 0x80
    6dd0:	4640      	mov	r0, r8
    6dd2:	03d2      	lsls	r2, r2, #15
    6dd4:	4210      	tst	r0, r2
    6dd6:	d0af      	beq.n	6d38 <__aeabi_fadd+0x244>
    6dd8:	4216      	tst	r6, r2
    6dda:	d1ad      	bne.n	6d38 <__aeabi_fadd+0x244>
    6ddc:	003b      	movs	r3, r7
    6dde:	000d      	movs	r5, r1
    6de0:	24ff      	movs	r4, #255	; 0xff
    6de2:	e6c2      	b.n	6b6a <__aeabi_fadd+0x76>
    6de4:	4663      	mov	r3, ip
    6de6:	24ff      	movs	r4, #255	; 0xff
    6de8:	e6bf      	b.n	6b6a <__aeabi_fadd+0x76>
    6dea:	2301      	movs	r3, #1
    6dec:	e77a      	b.n	6ce4 <__aeabi_fadd+0x1f0>
    6dee:	003b      	movs	r3, r7
    6df0:	0004      	movs	r4, r0
    6df2:	e6ba      	b.n	6b6a <__aeabi_fadd+0x76>
    6df4:	2680      	movs	r6, #128	; 0x80
    6df6:	2200      	movs	r2, #0
    6df8:	03f6      	lsls	r6, r6, #15
    6dfa:	e6f0      	b.n	6bde <__aeabi_fadd+0xea>
    6dfc:	003b      	movs	r3, r7
    6dfe:	e6b4      	b.n	6b6a <__aeabi_fadd+0x76>
    6e00:	1e33      	subs	r3, r6, #0
    6e02:	d000      	beq.n	6e06 <__aeabi_fadd+0x312>
    6e04:	e6e2      	b.n	6bcc <__aeabi_fadd+0xd8>
    6e06:	2200      	movs	r2, #0
    6e08:	e721      	b.n	6c4e <__aeabi_fadd+0x15a>
    6e0a:	2301      	movs	r3, #1
    6e0c:	e7bd      	b.n	6d8a <__aeabi_fadd+0x296>
    6e0e:	46c0      	nop			; (mov r8, r8)
    6e10:	7dffffff 	.word	0x7dffffff
    6e14:	fbffffff 	.word	0xfbffffff

00006e18 <__eqsf2>:
    6e18:	b570      	push	{r4, r5, r6, lr}
    6e1a:	0042      	lsls	r2, r0, #1
    6e1c:	0245      	lsls	r5, r0, #9
    6e1e:	024e      	lsls	r6, r1, #9
    6e20:	004c      	lsls	r4, r1, #1
    6e22:	0fc3      	lsrs	r3, r0, #31
    6e24:	0a6d      	lsrs	r5, r5, #9
    6e26:	0e12      	lsrs	r2, r2, #24
    6e28:	0a76      	lsrs	r6, r6, #9
    6e2a:	0e24      	lsrs	r4, r4, #24
    6e2c:	0fc9      	lsrs	r1, r1, #31
    6e2e:	2001      	movs	r0, #1
    6e30:	2aff      	cmp	r2, #255	; 0xff
    6e32:	d006      	beq.n	6e42 <__eqsf2+0x2a>
    6e34:	2cff      	cmp	r4, #255	; 0xff
    6e36:	d003      	beq.n	6e40 <__eqsf2+0x28>
    6e38:	42a2      	cmp	r2, r4
    6e3a:	d101      	bne.n	6e40 <__eqsf2+0x28>
    6e3c:	42b5      	cmp	r5, r6
    6e3e:	d006      	beq.n	6e4e <__eqsf2+0x36>
    6e40:	bd70      	pop	{r4, r5, r6, pc}
    6e42:	2d00      	cmp	r5, #0
    6e44:	d1fc      	bne.n	6e40 <__eqsf2+0x28>
    6e46:	2cff      	cmp	r4, #255	; 0xff
    6e48:	d1fa      	bne.n	6e40 <__eqsf2+0x28>
    6e4a:	2e00      	cmp	r6, #0
    6e4c:	d1f8      	bne.n	6e40 <__eqsf2+0x28>
    6e4e:	428b      	cmp	r3, r1
    6e50:	d006      	beq.n	6e60 <__eqsf2+0x48>
    6e52:	2001      	movs	r0, #1
    6e54:	2a00      	cmp	r2, #0
    6e56:	d1f3      	bne.n	6e40 <__eqsf2+0x28>
    6e58:	0028      	movs	r0, r5
    6e5a:	1e45      	subs	r5, r0, #1
    6e5c:	41a8      	sbcs	r0, r5
    6e5e:	e7ef      	b.n	6e40 <__eqsf2+0x28>
    6e60:	2000      	movs	r0, #0
    6e62:	e7ed      	b.n	6e40 <__eqsf2+0x28>

00006e64 <__gesf2>:
    6e64:	b5f0      	push	{r4, r5, r6, r7, lr}
    6e66:	0042      	lsls	r2, r0, #1
    6e68:	0245      	lsls	r5, r0, #9
    6e6a:	024c      	lsls	r4, r1, #9
    6e6c:	0fc3      	lsrs	r3, r0, #31
    6e6e:	0048      	lsls	r0, r1, #1
    6e70:	0a6d      	lsrs	r5, r5, #9
    6e72:	0e12      	lsrs	r2, r2, #24
    6e74:	0a64      	lsrs	r4, r4, #9
    6e76:	0e00      	lsrs	r0, r0, #24
    6e78:	0fc9      	lsrs	r1, r1, #31
    6e7a:	2aff      	cmp	r2, #255	; 0xff
    6e7c:	d01e      	beq.n	6ebc <__gesf2+0x58>
    6e7e:	28ff      	cmp	r0, #255	; 0xff
    6e80:	d021      	beq.n	6ec6 <__gesf2+0x62>
    6e82:	2a00      	cmp	r2, #0
    6e84:	d10a      	bne.n	6e9c <__gesf2+0x38>
    6e86:	426e      	negs	r6, r5
    6e88:	416e      	adcs	r6, r5
    6e8a:	b2f6      	uxtb	r6, r6
    6e8c:	2800      	cmp	r0, #0
    6e8e:	d10f      	bne.n	6eb0 <__gesf2+0x4c>
    6e90:	2c00      	cmp	r4, #0
    6e92:	d10d      	bne.n	6eb0 <__gesf2+0x4c>
    6e94:	2000      	movs	r0, #0
    6e96:	2d00      	cmp	r5, #0
    6e98:	d009      	beq.n	6eae <__gesf2+0x4a>
    6e9a:	e005      	b.n	6ea8 <__gesf2+0x44>
    6e9c:	2800      	cmp	r0, #0
    6e9e:	d101      	bne.n	6ea4 <__gesf2+0x40>
    6ea0:	2c00      	cmp	r4, #0
    6ea2:	d001      	beq.n	6ea8 <__gesf2+0x44>
    6ea4:	428b      	cmp	r3, r1
    6ea6:	d011      	beq.n	6ecc <__gesf2+0x68>
    6ea8:	2101      	movs	r1, #1
    6eaa:	4258      	negs	r0, r3
    6eac:	4308      	orrs	r0, r1
    6eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6eb0:	2e00      	cmp	r6, #0
    6eb2:	d0f7      	beq.n	6ea4 <__gesf2+0x40>
    6eb4:	2001      	movs	r0, #1
    6eb6:	3901      	subs	r1, #1
    6eb8:	4308      	orrs	r0, r1
    6eba:	e7f8      	b.n	6eae <__gesf2+0x4a>
    6ebc:	2d00      	cmp	r5, #0
    6ebe:	d0de      	beq.n	6e7e <__gesf2+0x1a>
    6ec0:	2002      	movs	r0, #2
    6ec2:	4240      	negs	r0, r0
    6ec4:	e7f3      	b.n	6eae <__gesf2+0x4a>
    6ec6:	2c00      	cmp	r4, #0
    6ec8:	d0db      	beq.n	6e82 <__gesf2+0x1e>
    6eca:	e7f9      	b.n	6ec0 <__gesf2+0x5c>
    6ecc:	4282      	cmp	r2, r0
    6ece:	dceb      	bgt.n	6ea8 <__gesf2+0x44>
    6ed0:	db04      	blt.n	6edc <__gesf2+0x78>
    6ed2:	42a5      	cmp	r5, r4
    6ed4:	d8e8      	bhi.n	6ea8 <__gesf2+0x44>
    6ed6:	2000      	movs	r0, #0
    6ed8:	42a5      	cmp	r5, r4
    6eda:	d2e8      	bcs.n	6eae <__gesf2+0x4a>
    6edc:	2101      	movs	r1, #1
    6ede:	1e58      	subs	r0, r3, #1
    6ee0:	4308      	orrs	r0, r1
    6ee2:	e7e4      	b.n	6eae <__gesf2+0x4a>

00006ee4 <__lesf2>:
    6ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
    6ee6:	0042      	lsls	r2, r0, #1
    6ee8:	024d      	lsls	r5, r1, #9
    6eea:	004c      	lsls	r4, r1, #1
    6eec:	0246      	lsls	r6, r0, #9
    6eee:	0a76      	lsrs	r6, r6, #9
    6ef0:	0e12      	lsrs	r2, r2, #24
    6ef2:	0fc3      	lsrs	r3, r0, #31
    6ef4:	0a6d      	lsrs	r5, r5, #9
    6ef6:	0e24      	lsrs	r4, r4, #24
    6ef8:	0fc9      	lsrs	r1, r1, #31
    6efa:	2aff      	cmp	r2, #255	; 0xff
    6efc:	d016      	beq.n	6f2c <__lesf2+0x48>
    6efe:	2cff      	cmp	r4, #255	; 0xff
    6f00:	d018      	beq.n	6f34 <__lesf2+0x50>
    6f02:	2a00      	cmp	r2, #0
    6f04:	d10a      	bne.n	6f1c <__lesf2+0x38>
    6f06:	4270      	negs	r0, r6
    6f08:	4170      	adcs	r0, r6
    6f0a:	b2c0      	uxtb	r0, r0
    6f0c:	2c00      	cmp	r4, #0
    6f0e:	d015      	beq.n	6f3c <__lesf2+0x58>
    6f10:	2800      	cmp	r0, #0
    6f12:	d005      	beq.n	6f20 <__lesf2+0x3c>
    6f14:	2001      	movs	r0, #1
    6f16:	3901      	subs	r1, #1
    6f18:	4308      	orrs	r0, r1
    6f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6f1c:	2c00      	cmp	r4, #0
    6f1e:	d013      	beq.n	6f48 <__lesf2+0x64>
    6f20:	4299      	cmp	r1, r3
    6f22:	d014      	beq.n	6f4e <__lesf2+0x6a>
    6f24:	2001      	movs	r0, #1
    6f26:	425b      	negs	r3, r3
    6f28:	4318      	orrs	r0, r3
    6f2a:	e7f6      	b.n	6f1a <__lesf2+0x36>
    6f2c:	2002      	movs	r0, #2
    6f2e:	2e00      	cmp	r6, #0
    6f30:	d1f3      	bne.n	6f1a <__lesf2+0x36>
    6f32:	e7e4      	b.n	6efe <__lesf2+0x1a>
    6f34:	2002      	movs	r0, #2
    6f36:	2d00      	cmp	r5, #0
    6f38:	d1ef      	bne.n	6f1a <__lesf2+0x36>
    6f3a:	e7e2      	b.n	6f02 <__lesf2+0x1e>
    6f3c:	2d00      	cmp	r5, #0
    6f3e:	d1e7      	bne.n	6f10 <__lesf2+0x2c>
    6f40:	2000      	movs	r0, #0
    6f42:	2e00      	cmp	r6, #0
    6f44:	d0e9      	beq.n	6f1a <__lesf2+0x36>
    6f46:	e7ed      	b.n	6f24 <__lesf2+0x40>
    6f48:	2d00      	cmp	r5, #0
    6f4a:	d1e9      	bne.n	6f20 <__lesf2+0x3c>
    6f4c:	e7ea      	b.n	6f24 <__lesf2+0x40>
    6f4e:	42a2      	cmp	r2, r4
    6f50:	dc06      	bgt.n	6f60 <__lesf2+0x7c>
    6f52:	dbdf      	blt.n	6f14 <__lesf2+0x30>
    6f54:	42ae      	cmp	r6, r5
    6f56:	d803      	bhi.n	6f60 <__lesf2+0x7c>
    6f58:	2000      	movs	r0, #0
    6f5a:	42ae      	cmp	r6, r5
    6f5c:	d3da      	bcc.n	6f14 <__lesf2+0x30>
    6f5e:	e7dc      	b.n	6f1a <__lesf2+0x36>
    6f60:	2001      	movs	r0, #1
    6f62:	4249      	negs	r1, r1
    6f64:	4308      	orrs	r0, r1
    6f66:	e7d8      	b.n	6f1a <__lesf2+0x36>

00006f68 <__aeabi_fmul>:
    6f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6f6a:	4657      	mov	r7, sl
    6f6c:	464e      	mov	r6, r9
    6f6e:	4645      	mov	r5, r8
    6f70:	46de      	mov	lr, fp
    6f72:	b5e0      	push	{r5, r6, r7, lr}
    6f74:	0247      	lsls	r7, r0, #9
    6f76:	0046      	lsls	r6, r0, #1
    6f78:	4688      	mov	r8, r1
    6f7a:	0a7f      	lsrs	r7, r7, #9
    6f7c:	0e36      	lsrs	r6, r6, #24
    6f7e:	0fc4      	lsrs	r4, r0, #31
    6f80:	2e00      	cmp	r6, #0
    6f82:	d047      	beq.n	7014 <__aeabi_fmul+0xac>
    6f84:	2eff      	cmp	r6, #255	; 0xff
    6f86:	d024      	beq.n	6fd2 <__aeabi_fmul+0x6a>
    6f88:	00fb      	lsls	r3, r7, #3
    6f8a:	2780      	movs	r7, #128	; 0x80
    6f8c:	04ff      	lsls	r7, r7, #19
    6f8e:	431f      	orrs	r7, r3
    6f90:	2300      	movs	r3, #0
    6f92:	4699      	mov	r9, r3
    6f94:	469a      	mov	sl, r3
    6f96:	3e7f      	subs	r6, #127	; 0x7f
    6f98:	4643      	mov	r3, r8
    6f9a:	025d      	lsls	r5, r3, #9
    6f9c:	0058      	lsls	r0, r3, #1
    6f9e:	0fdb      	lsrs	r3, r3, #31
    6fa0:	0a6d      	lsrs	r5, r5, #9
    6fa2:	0e00      	lsrs	r0, r0, #24
    6fa4:	4698      	mov	r8, r3
    6fa6:	d043      	beq.n	7030 <__aeabi_fmul+0xc8>
    6fa8:	28ff      	cmp	r0, #255	; 0xff
    6faa:	d03b      	beq.n	7024 <__aeabi_fmul+0xbc>
    6fac:	00eb      	lsls	r3, r5, #3
    6fae:	2580      	movs	r5, #128	; 0x80
    6fb0:	2200      	movs	r2, #0
    6fb2:	04ed      	lsls	r5, r5, #19
    6fb4:	431d      	orrs	r5, r3
    6fb6:	387f      	subs	r0, #127	; 0x7f
    6fb8:	1836      	adds	r6, r6, r0
    6fba:	1c73      	adds	r3, r6, #1
    6fbc:	4641      	mov	r1, r8
    6fbe:	469b      	mov	fp, r3
    6fc0:	464b      	mov	r3, r9
    6fc2:	4061      	eors	r1, r4
    6fc4:	4313      	orrs	r3, r2
    6fc6:	2b0f      	cmp	r3, #15
    6fc8:	d864      	bhi.n	7094 <__aeabi_fmul+0x12c>
    6fca:	4875      	ldr	r0, [pc, #468]	; (71a0 <__aeabi_fmul+0x238>)
    6fcc:	009b      	lsls	r3, r3, #2
    6fce:	58c3      	ldr	r3, [r0, r3]
    6fd0:	469f      	mov	pc, r3
    6fd2:	2f00      	cmp	r7, #0
    6fd4:	d142      	bne.n	705c <__aeabi_fmul+0xf4>
    6fd6:	2308      	movs	r3, #8
    6fd8:	4699      	mov	r9, r3
    6fda:	3b06      	subs	r3, #6
    6fdc:	26ff      	movs	r6, #255	; 0xff
    6fde:	469a      	mov	sl, r3
    6fe0:	e7da      	b.n	6f98 <__aeabi_fmul+0x30>
    6fe2:	4641      	mov	r1, r8
    6fe4:	2a02      	cmp	r2, #2
    6fe6:	d028      	beq.n	703a <__aeabi_fmul+0xd2>
    6fe8:	2a03      	cmp	r2, #3
    6fea:	d100      	bne.n	6fee <__aeabi_fmul+0x86>
    6fec:	e0ce      	b.n	718c <__aeabi_fmul+0x224>
    6fee:	2a01      	cmp	r2, #1
    6ff0:	d000      	beq.n	6ff4 <__aeabi_fmul+0x8c>
    6ff2:	e0ac      	b.n	714e <__aeabi_fmul+0x1e6>
    6ff4:	4011      	ands	r1, r2
    6ff6:	2000      	movs	r0, #0
    6ff8:	2200      	movs	r2, #0
    6ffa:	b2cc      	uxtb	r4, r1
    6ffc:	0240      	lsls	r0, r0, #9
    6ffe:	05d2      	lsls	r2, r2, #23
    7000:	0a40      	lsrs	r0, r0, #9
    7002:	07e4      	lsls	r4, r4, #31
    7004:	4310      	orrs	r0, r2
    7006:	4320      	orrs	r0, r4
    7008:	bc3c      	pop	{r2, r3, r4, r5}
    700a:	4690      	mov	r8, r2
    700c:	4699      	mov	r9, r3
    700e:	46a2      	mov	sl, r4
    7010:	46ab      	mov	fp, r5
    7012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7014:	2f00      	cmp	r7, #0
    7016:	d115      	bne.n	7044 <__aeabi_fmul+0xdc>
    7018:	2304      	movs	r3, #4
    701a:	4699      	mov	r9, r3
    701c:	3b03      	subs	r3, #3
    701e:	2600      	movs	r6, #0
    7020:	469a      	mov	sl, r3
    7022:	e7b9      	b.n	6f98 <__aeabi_fmul+0x30>
    7024:	20ff      	movs	r0, #255	; 0xff
    7026:	2202      	movs	r2, #2
    7028:	2d00      	cmp	r5, #0
    702a:	d0c5      	beq.n	6fb8 <__aeabi_fmul+0x50>
    702c:	2203      	movs	r2, #3
    702e:	e7c3      	b.n	6fb8 <__aeabi_fmul+0x50>
    7030:	2d00      	cmp	r5, #0
    7032:	d119      	bne.n	7068 <__aeabi_fmul+0x100>
    7034:	2000      	movs	r0, #0
    7036:	2201      	movs	r2, #1
    7038:	e7be      	b.n	6fb8 <__aeabi_fmul+0x50>
    703a:	2401      	movs	r4, #1
    703c:	22ff      	movs	r2, #255	; 0xff
    703e:	400c      	ands	r4, r1
    7040:	2000      	movs	r0, #0
    7042:	e7db      	b.n	6ffc <__aeabi_fmul+0x94>
    7044:	0038      	movs	r0, r7
    7046:	f002 f895 	bl	9174 <__clzsi2>
    704a:	2676      	movs	r6, #118	; 0x76
    704c:	1f43      	subs	r3, r0, #5
    704e:	409f      	lsls	r7, r3
    7050:	2300      	movs	r3, #0
    7052:	4276      	negs	r6, r6
    7054:	1a36      	subs	r6, r6, r0
    7056:	4699      	mov	r9, r3
    7058:	469a      	mov	sl, r3
    705a:	e79d      	b.n	6f98 <__aeabi_fmul+0x30>
    705c:	230c      	movs	r3, #12
    705e:	4699      	mov	r9, r3
    7060:	3b09      	subs	r3, #9
    7062:	26ff      	movs	r6, #255	; 0xff
    7064:	469a      	mov	sl, r3
    7066:	e797      	b.n	6f98 <__aeabi_fmul+0x30>
    7068:	0028      	movs	r0, r5
    706a:	f002 f883 	bl	9174 <__clzsi2>
    706e:	1f43      	subs	r3, r0, #5
    7070:	409d      	lsls	r5, r3
    7072:	2376      	movs	r3, #118	; 0x76
    7074:	425b      	negs	r3, r3
    7076:	1a18      	subs	r0, r3, r0
    7078:	2200      	movs	r2, #0
    707a:	e79d      	b.n	6fb8 <__aeabi_fmul+0x50>
    707c:	2080      	movs	r0, #128	; 0x80
    707e:	2400      	movs	r4, #0
    7080:	03c0      	lsls	r0, r0, #15
    7082:	22ff      	movs	r2, #255	; 0xff
    7084:	e7ba      	b.n	6ffc <__aeabi_fmul+0x94>
    7086:	003d      	movs	r5, r7
    7088:	4652      	mov	r2, sl
    708a:	e7ab      	b.n	6fe4 <__aeabi_fmul+0x7c>
    708c:	003d      	movs	r5, r7
    708e:	0021      	movs	r1, r4
    7090:	4652      	mov	r2, sl
    7092:	e7a7      	b.n	6fe4 <__aeabi_fmul+0x7c>
    7094:	0c3b      	lsrs	r3, r7, #16
    7096:	469c      	mov	ip, r3
    7098:	042a      	lsls	r2, r5, #16
    709a:	0c12      	lsrs	r2, r2, #16
    709c:	0c2b      	lsrs	r3, r5, #16
    709e:	0014      	movs	r4, r2
    70a0:	4660      	mov	r0, ip
    70a2:	4665      	mov	r5, ip
    70a4:	043f      	lsls	r7, r7, #16
    70a6:	0c3f      	lsrs	r7, r7, #16
    70a8:	437c      	muls	r4, r7
    70aa:	4342      	muls	r2, r0
    70ac:	435d      	muls	r5, r3
    70ae:	437b      	muls	r3, r7
    70b0:	0c27      	lsrs	r7, r4, #16
    70b2:	189b      	adds	r3, r3, r2
    70b4:	18ff      	adds	r7, r7, r3
    70b6:	42ba      	cmp	r2, r7
    70b8:	d903      	bls.n	70c2 <__aeabi_fmul+0x15a>
    70ba:	2380      	movs	r3, #128	; 0x80
    70bc:	025b      	lsls	r3, r3, #9
    70be:	469c      	mov	ip, r3
    70c0:	4465      	add	r5, ip
    70c2:	0424      	lsls	r4, r4, #16
    70c4:	043a      	lsls	r2, r7, #16
    70c6:	0c24      	lsrs	r4, r4, #16
    70c8:	1912      	adds	r2, r2, r4
    70ca:	0193      	lsls	r3, r2, #6
    70cc:	1e5c      	subs	r4, r3, #1
    70ce:	41a3      	sbcs	r3, r4
    70d0:	0c3f      	lsrs	r7, r7, #16
    70d2:	0e92      	lsrs	r2, r2, #26
    70d4:	197d      	adds	r5, r7, r5
    70d6:	431a      	orrs	r2, r3
    70d8:	01ad      	lsls	r5, r5, #6
    70da:	4315      	orrs	r5, r2
    70dc:	012b      	lsls	r3, r5, #4
    70de:	d504      	bpl.n	70ea <__aeabi_fmul+0x182>
    70e0:	2301      	movs	r3, #1
    70e2:	465e      	mov	r6, fp
    70e4:	086a      	lsrs	r2, r5, #1
    70e6:	401d      	ands	r5, r3
    70e8:	4315      	orrs	r5, r2
    70ea:	0032      	movs	r2, r6
    70ec:	327f      	adds	r2, #127	; 0x7f
    70ee:	2a00      	cmp	r2, #0
    70f0:	dd25      	ble.n	713e <__aeabi_fmul+0x1d6>
    70f2:	076b      	lsls	r3, r5, #29
    70f4:	d004      	beq.n	7100 <__aeabi_fmul+0x198>
    70f6:	230f      	movs	r3, #15
    70f8:	402b      	ands	r3, r5
    70fa:	2b04      	cmp	r3, #4
    70fc:	d000      	beq.n	7100 <__aeabi_fmul+0x198>
    70fe:	3504      	adds	r5, #4
    7100:	012b      	lsls	r3, r5, #4
    7102:	d503      	bpl.n	710c <__aeabi_fmul+0x1a4>
    7104:	0032      	movs	r2, r6
    7106:	4b27      	ldr	r3, [pc, #156]	; (71a4 <__aeabi_fmul+0x23c>)
    7108:	3280      	adds	r2, #128	; 0x80
    710a:	401d      	ands	r5, r3
    710c:	2afe      	cmp	r2, #254	; 0xfe
    710e:	dc94      	bgt.n	703a <__aeabi_fmul+0xd2>
    7110:	2401      	movs	r4, #1
    7112:	01a8      	lsls	r0, r5, #6
    7114:	0a40      	lsrs	r0, r0, #9
    7116:	b2d2      	uxtb	r2, r2
    7118:	400c      	ands	r4, r1
    711a:	e76f      	b.n	6ffc <__aeabi_fmul+0x94>
    711c:	2080      	movs	r0, #128	; 0x80
    711e:	03c0      	lsls	r0, r0, #15
    7120:	4207      	tst	r7, r0
    7122:	d007      	beq.n	7134 <__aeabi_fmul+0x1cc>
    7124:	4205      	tst	r5, r0
    7126:	d105      	bne.n	7134 <__aeabi_fmul+0x1cc>
    7128:	4328      	orrs	r0, r5
    712a:	0240      	lsls	r0, r0, #9
    712c:	0a40      	lsrs	r0, r0, #9
    712e:	4644      	mov	r4, r8
    7130:	22ff      	movs	r2, #255	; 0xff
    7132:	e763      	b.n	6ffc <__aeabi_fmul+0x94>
    7134:	4338      	orrs	r0, r7
    7136:	0240      	lsls	r0, r0, #9
    7138:	0a40      	lsrs	r0, r0, #9
    713a:	22ff      	movs	r2, #255	; 0xff
    713c:	e75e      	b.n	6ffc <__aeabi_fmul+0x94>
    713e:	2401      	movs	r4, #1
    7140:	1aa3      	subs	r3, r4, r2
    7142:	2b1b      	cmp	r3, #27
    7144:	dd05      	ble.n	7152 <__aeabi_fmul+0x1ea>
    7146:	400c      	ands	r4, r1
    7148:	2200      	movs	r2, #0
    714a:	2000      	movs	r0, #0
    714c:	e756      	b.n	6ffc <__aeabi_fmul+0x94>
    714e:	465e      	mov	r6, fp
    7150:	e7cb      	b.n	70ea <__aeabi_fmul+0x182>
    7152:	002a      	movs	r2, r5
    7154:	2020      	movs	r0, #32
    7156:	40da      	lsrs	r2, r3
    7158:	1ac3      	subs	r3, r0, r3
    715a:	409d      	lsls	r5, r3
    715c:	002b      	movs	r3, r5
    715e:	1e5d      	subs	r5, r3, #1
    7160:	41ab      	sbcs	r3, r5
    7162:	4313      	orrs	r3, r2
    7164:	075a      	lsls	r2, r3, #29
    7166:	d004      	beq.n	7172 <__aeabi_fmul+0x20a>
    7168:	220f      	movs	r2, #15
    716a:	401a      	ands	r2, r3
    716c:	2a04      	cmp	r2, #4
    716e:	d000      	beq.n	7172 <__aeabi_fmul+0x20a>
    7170:	3304      	adds	r3, #4
    7172:	015a      	lsls	r2, r3, #5
    7174:	d504      	bpl.n	7180 <__aeabi_fmul+0x218>
    7176:	2401      	movs	r4, #1
    7178:	2201      	movs	r2, #1
    717a:	400c      	ands	r4, r1
    717c:	2000      	movs	r0, #0
    717e:	e73d      	b.n	6ffc <__aeabi_fmul+0x94>
    7180:	2401      	movs	r4, #1
    7182:	019b      	lsls	r3, r3, #6
    7184:	0a58      	lsrs	r0, r3, #9
    7186:	400c      	ands	r4, r1
    7188:	2200      	movs	r2, #0
    718a:	e737      	b.n	6ffc <__aeabi_fmul+0x94>
    718c:	2080      	movs	r0, #128	; 0x80
    718e:	2401      	movs	r4, #1
    7190:	03c0      	lsls	r0, r0, #15
    7192:	4328      	orrs	r0, r5
    7194:	0240      	lsls	r0, r0, #9
    7196:	0a40      	lsrs	r0, r0, #9
    7198:	400c      	ands	r4, r1
    719a:	22ff      	movs	r2, #255	; 0xff
    719c:	e72e      	b.n	6ffc <__aeabi_fmul+0x94>
    719e:	46c0      	nop			; (mov r8, r8)
    71a0:	0000e328 	.word	0x0000e328
    71a4:	f7ffffff 	.word	0xf7ffffff

000071a8 <__aeabi_fsub>:
    71a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    71aa:	464f      	mov	r7, r9
    71ac:	46d6      	mov	lr, sl
    71ae:	4646      	mov	r6, r8
    71b0:	0044      	lsls	r4, r0, #1
    71b2:	b5c0      	push	{r6, r7, lr}
    71b4:	0fc2      	lsrs	r2, r0, #31
    71b6:	0247      	lsls	r7, r0, #9
    71b8:	0248      	lsls	r0, r1, #9
    71ba:	0a40      	lsrs	r0, r0, #9
    71bc:	4684      	mov	ip, r0
    71be:	4666      	mov	r6, ip
    71c0:	0a7b      	lsrs	r3, r7, #9
    71c2:	0048      	lsls	r0, r1, #1
    71c4:	0fc9      	lsrs	r1, r1, #31
    71c6:	469a      	mov	sl, r3
    71c8:	0e24      	lsrs	r4, r4, #24
    71ca:	0015      	movs	r5, r2
    71cc:	00db      	lsls	r3, r3, #3
    71ce:	0e00      	lsrs	r0, r0, #24
    71d0:	4689      	mov	r9, r1
    71d2:	00f6      	lsls	r6, r6, #3
    71d4:	28ff      	cmp	r0, #255	; 0xff
    71d6:	d100      	bne.n	71da <__aeabi_fsub+0x32>
    71d8:	e08f      	b.n	72fa <__aeabi_fsub+0x152>
    71da:	2101      	movs	r1, #1
    71dc:	464f      	mov	r7, r9
    71de:	404f      	eors	r7, r1
    71e0:	0039      	movs	r1, r7
    71e2:	4291      	cmp	r1, r2
    71e4:	d066      	beq.n	72b4 <__aeabi_fsub+0x10c>
    71e6:	1a22      	subs	r2, r4, r0
    71e8:	2a00      	cmp	r2, #0
    71ea:	dc00      	bgt.n	71ee <__aeabi_fsub+0x46>
    71ec:	e09d      	b.n	732a <__aeabi_fsub+0x182>
    71ee:	2800      	cmp	r0, #0
    71f0:	d13d      	bne.n	726e <__aeabi_fsub+0xc6>
    71f2:	2e00      	cmp	r6, #0
    71f4:	d100      	bne.n	71f8 <__aeabi_fsub+0x50>
    71f6:	e08b      	b.n	7310 <__aeabi_fsub+0x168>
    71f8:	1e51      	subs	r1, r2, #1
    71fa:	2900      	cmp	r1, #0
    71fc:	d000      	beq.n	7200 <__aeabi_fsub+0x58>
    71fe:	e0b5      	b.n	736c <__aeabi_fsub+0x1c4>
    7200:	2401      	movs	r4, #1
    7202:	1b9b      	subs	r3, r3, r6
    7204:	015a      	lsls	r2, r3, #5
    7206:	d544      	bpl.n	7292 <__aeabi_fsub+0xea>
    7208:	019b      	lsls	r3, r3, #6
    720a:	099f      	lsrs	r7, r3, #6
    720c:	0038      	movs	r0, r7
    720e:	f001 ffb1 	bl	9174 <__clzsi2>
    7212:	3805      	subs	r0, #5
    7214:	4087      	lsls	r7, r0
    7216:	4284      	cmp	r4, r0
    7218:	dd00      	ble.n	721c <__aeabi_fsub+0x74>
    721a:	e096      	b.n	734a <__aeabi_fsub+0x1a2>
    721c:	1b04      	subs	r4, r0, r4
    721e:	003a      	movs	r2, r7
    7220:	2020      	movs	r0, #32
    7222:	3401      	adds	r4, #1
    7224:	40e2      	lsrs	r2, r4
    7226:	1b04      	subs	r4, r0, r4
    7228:	40a7      	lsls	r7, r4
    722a:	003b      	movs	r3, r7
    722c:	1e5f      	subs	r7, r3, #1
    722e:	41bb      	sbcs	r3, r7
    7230:	2400      	movs	r4, #0
    7232:	4313      	orrs	r3, r2
    7234:	075a      	lsls	r2, r3, #29
    7236:	d004      	beq.n	7242 <__aeabi_fsub+0x9a>
    7238:	220f      	movs	r2, #15
    723a:	401a      	ands	r2, r3
    723c:	2a04      	cmp	r2, #4
    723e:	d000      	beq.n	7242 <__aeabi_fsub+0x9a>
    7240:	3304      	adds	r3, #4
    7242:	015a      	lsls	r2, r3, #5
    7244:	d527      	bpl.n	7296 <__aeabi_fsub+0xee>
    7246:	3401      	adds	r4, #1
    7248:	2cff      	cmp	r4, #255	; 0xff
    724a:	d100      	bne.n	724e <__aeabi_fsub+0xa6>
    724c:	e079      	b.n	7342 <__aeabi_fsub+0x19a>
    724e:	2201      	movs	r2, #1
    7250:	019b      	lsls	r3, r3, #6
    7252:	0a5b      	lsrs	r3, r3, #9
    7254:	b2e4      	uxtb	r4, r4
    7256:	402a      	ands	r2, r5
    7258:	025b      	lsls	r3, r3, #9
    725a:	05e4      	lsls	r4, r4, #23
    725c:	0a58      	lsrs	r0, r3, #9
    725e:	07d2      	lsls	r2, r2, #31
    7260:	4320      	orrs	r0, r4
    7262:	4310      	orrs	r0, r2
    7264:	bc1c      	pop	{r2, r3, r4}
    7266:	4690      	mov	r8, r2
    7268:	4699      	mov	r9, r3
    726a:	46a2      	mov	sl, r4
    726c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    726e:	2cff      	cmp	r4, #255	; 0xff
    7270:	d0e0      	beq.n	7234 <__aeabi_fsub+0x8c>
    7272:	2180      	movs	r1, #128	; 0x80
    7274:	04c9      	lsls	r1, r1, #19
    7276:	430e      	orrs	r6, r1
    7278:	2a1b      	cmp	r2, #27
    727a:	dc7b      	bgt.n	7374 <__aeabi_fsub+0x1cc>
    727c:	0031      	movs	r1, r6
    727e:	2020      	movs	r0, #32
    7280:	40d1      	lsrs	r1, r2
    7282:	1a82      	subs	r2, r0, r2
    7284:	4096      	lsls	r6, r2
    7286:	1e72      	subs	r2, r6, #1
    7288:	4196      	sbcs	r6, r2
    728a:	430e      	orrs	r6, r1
    728c:	1b9b      	subs	r3, r3, r6
    728e:	015a      	lsls	r2, r3, #5
    7290:	d4ba      	bmi.n	7208 <__aeabi_fsub+0x60>
    7292:	075a      	lsls	r2, r3, #29
    7294:	d1d0      	bne.n	7238 <__aeabi_fsub+0x90>
    7296:	2201      	movs	r2, #1
    7298:	08df      	lsrs	r7, r3, #3
    729a:	402a      	ands	r2, r5
    729c:	2cff      	cmp	r4, #255	; 0xff
    729e:	d133      	bne.n	7308 <__aeabi_fsub+0x160>
    72a0:	2f00      	cmp	r7, #0
    72a2:	d100      	bne.n	72a6 <__aeabi_fsub+0xfe>
    72a4:	e0a8      	b.n	73f8 <__aeabi_fsub+0x250>
    72a6:	2380      	movs	r3, #128	; 0x80
    72a8:	03db      	lsls	r3, r3, #15
    72aa:	433b      	orrs	r3, r7
    72ac:	025b      	lsls	r3, r3, #9
    72ae:	0a5b      	lsrs	r3, r3, #9
    72b0:	24ff      	movs	r4, #255	; 0xff
    72b2:	e7d1      	b.n	7258 <__aeabi_fsub+0xb0>
    72b4:	1a21      	subs	r1, r4, r0
    72b6:	2900      	cmp	r1, #0
    72b8:	dd4c      	ble.n	7354 <__aeabi_fsub+0x1ac>
    72ba:	2800      	cmp	r0, #0
    72bc:	d02a      	beq.n	7314 <__aeabi_fsub+0x16c>
    72be:	2cff      	cmp	r4, #255	; 0xff
    72c0:	d0b8      	beq.n	7234 <__aeabi_fsub+0x8c>
    72c2:	2080      	movs	r0, #128	; 0x80
    72c4:	04c0      	lsls	r0, r0, #19
    72c6:	4306      	orrs	r6, r0
    72c8:	291b      	cmp	r1, #27
    72ca:	dd00      	ble.n	72ce <__aeabi_fsub+0x126>
    72cc:	e0af      	b.n	742e <__aeabi_fsub+0x286>
    72ce:	0030      	movs	r0, r6
    72d0:	2720      	movs	r7, #32
    72d2:	40c8      	lsrs	r0, r1
    72d4:	1a79      	subs	r1, r7, r1
    72d6:	408e      	lsls	r6, r1
    72d8:	1e71      	subs	r1, r6, #1
    72da:	418e      	sbcs	r6, r1
    72dc:	4306      	orrs	r6, r0
    72de:	199b      	adds	r3, r3, r6
    72e0:	0159      	lsls	r1, r3, #5
    72e2:	d5d6      	bpl.n	7292 <__aeabi_fsub+0xea>
    72e4:	3401      	adds	r4, #1
    72e6:	2cff      	cmp	r4, #255	; 0xff
    72e8:	d100      	bne.n	72ec <__aeabi_fsub+0x144>
    72ea:	e085      	b.n	73f8 <__aeabi_fsub+0x250>
    72ec:	2201      	movs	r2, #1
    72ee:	497a      	ldr	r1, [pc, #488]	; (74d8 <__aeabi_fsub+0x330>)
    72f0:	401a      	ands	r2, r3
    72f2:	085b      	lsrs	r3, r3, #1
    72f4:	400b      	ands	r3, r1
    72f6:	4313      	orrs	r3, r2
    72f8:	e79c      	b.n	7234 <__aeabi_fsub+0x8c>
    72fa:	2e00      	cmp	r6, #0
    72fc:	d000      	beq.n	7300 <__aeabi_fsub+0x158>
    72fe:	e770      	b.n	71e2 <__aeabi_fsub+0x3a>
    7300:	e76b      	b.n	71da <__aeabi_fsub+0x32>
    7302:	1e3b      	subs	r3, r7, #0
    7304:	d1c5      	bne.n	7292 <__aeabi_fsub+0xea>
    7306:	2200      	movs	r2, #0
    7308:	027b      	lsls	r3, r7, #9
    730a:	0a5b      	lsrs	r3, r3, #9
    730c:	b2e4      	uxtb	r4, r4
    730e:	e7a3      	b.n	7258 <__aeabi_fsub+0xb0>
    7310:	0014      	movs	r4, r2
    7312:	e78f      	b.n	7234 <__aeabi_fsub+0x8c>
    7314:	2e00      	cmp	r6, #0
    7316:	d04d      	beq.n	73b4 <__aeabi_fsub+0x20c>
    7318:	1e48      	subs	r0, r1, #1
    731a:	2800      	cmp	r0, #0
    731c:	d157      	bne.n	73ce <__aeabi_fsub+0x226>
    731e:	199b      	adds	r3, r3, r6
    7320:	2401      	movs	r4, #1
    7322:	015a      	lsls	r2, r3, #5
    7324:	d5b5      	bpl.n	7292 <__aeabi_fsub+0xea>
    7326:	2402      	movs	r4, #2
    7328:	e7e0      	b.n	72ec <__aeabi_fsub+0x144>
    732a:	2a00      	cmp	r2, #0
    732c:	d125      	bne.n	737a <__aeabi_fsub+0x1d2>
    732e:	1c62      	adds	r2, r4, #1
    7330:	b2d2      	uxtb	r2, r2
    7332:	2a01      	cmp	r2, #1
    7334:	dd72      	ble.n	741c <__aeabi_fsub+0x274>
    7336:	1b9f      	subs	r7, r3, r6
    7338:	017a      	lsls	r2, r7, #5
    733a:	d535      	bpl.n	73a8 <__aeabi_fsub+0x200>
    733c:	1af7      	subs	r7, r6, r3
    733e:	000d      	movs	r5, r1
    7340:	e764      	b.n	720c <__aeabi_fsub+0x64>
    7342:	2201      	movs	r2, #1
    7344:	2300      	movs	r3, #0
    7346:	402a      	ands	r2, r5
    7348:	e786      	b.n	7258 <__aeabi_fsub+0xb0>
    734a:	003b      	movs	r3, r7
    734c:	4a63      	ldr	r2, [pc, #396]	; (74dc <__aeabi_fsub+0x334>)
    734e:	1a24      	subs	r4, r4, r0
    7350:	4013      	ands	r3, r2
    7352:	e76f      	b.n	7234 <__aeabi_fsub+0x8c>
    7354:	2900      	cmp	r1, #0
    7356:	d16c      	bne.n	7432 <__aeabi_fsub+0x28a>
    7358:	1c61      	adds	r1, r4, #1
    735a:	b2c8      	uxtb	r0, r1
    735c:	2801      	cmp	r0, #1
    735e:	dd4e      	ble.n	73fe <__aeabi_fsub+0x256>
    7360:	29ff      	cmp	r1, #255	; 0xff
    7362:	d049      	beq.n	73f8 <__aeabi_fsub+0x250>
    7364:	199b      	adds	r3, r3, r6
    7366:	085b      	lsrs	r3, r3, #1
    7368:	000c      	movs	r4, r1
    736a:	e763      	b.n	7234 <__aeabi_fsub+0x8c>
    736c:	2aff      	cmp	r2, #255	; 0xff
    736e:	d041      	beq.n	73f4 <__aeabi_fsub+0x24c>
    7370:	000a      	movs	r2, r1
    7372:	e781      	b.n	7278 <__aeabi_fsub+0xd0>
    7374:	2601      	movs	r6, #1
    7376:	1b9b      	subs	r3, r3, r6
    7378:	e789      	b.n	728e <__aeabi_fsub+0xe6>
    737a:	2c00      	cmp	r4, #0
    737c:	d01c      	beq.n	73b8 <__aeabi_fsub+0x210>
    737e:	28ff      	cmp	r0, #255	; 0xff
    7380:	d021      	beq.n	73c6 <__aeabi_fsub+0x21e>
    7382:	2480      	movs	r4, #128	; 0x80
    7384:	04e4      	lsls	r4, r4, #19
    7386:	4252      	negs	r2, r2
    7388:	4323      	orrs	r3, r4
    738a:	2a1b      	cmp	r2, #27
    738c:	dd00      	ble.n	7390 <__aeabi_fsub+0x1e8>
    738e:	e096      	b.n	74be <__aeabi_fsub+0x316>
    7390:	001c      	movs	r4, r3
    7392:	2520      	movs	r5, #32
    7394:	40d4      	lsrs	r4, r2
    7396:	1aaa      	subs	r2, r5, r2
    7398:	4093      	lsls	r3, r2
    739a:	1e5a      	subs	r2, r3, #1
    739c:	4193      	sbcs	r3, r2
    739e:	4323      	orrs	r3, r4
    73a0:	1af3      	subs	r3, r6, r3
    73a2:	0004      	movs	r4, r0
    73a4:	000d      	movs	r5, r1
    73a6:	e72d      	b.n	7204 <__aeabi_fsub+0x5c>
    73a8:	2f00      	cmp	r7, #0
    73aa:	d000      	beq.n	73ae <__aeabi_fsub+0x206>
    73ac:	e72e      	b.n	720c <__aeabi_fsub+0x64>
    73ae:	2200      	movs	r2, #0
    73b0:	2400      	movs	r4, #0
    73b2:	e7a9      	b.n	7308 <__aeabi_fsub+0x160>
    73b4:	000c      	movs	r4, r1
    73b6:	e73d      	b.n	7234 <__aeabi_fsub+0x8c>
    73b8:	2b00      	cmp	r3, #0
    73ba:	d058      	beq.n	746e <__aeabi_fsub+0x2c6>
    73bc:	43d2      	mvns	r2, r2
    73be:	2a00      	cmp	r2, #0
    73c0:	d0ee      	beq.n	73a0 <__aeabi_fsub+0x1f8>
    73c2:	28ff      	cmp	r0, #255	; 0xff
    73c4:	d1e1      	bne.n	738a <__aeabi_fsub+0x1e2>
    73c6:	0033      	movs	r3, r6
    73c8:	24ff      	movs	r4, #255	; 0xff
    73ca:	000d      	movs	r5, r1
    73cc:	e732      	b.n	7234 <__aeabi_fsub+0x8c>
    73ce:	29ff      	cmp	r1, #255	; 0xff
    73d0:	d010      	beq.n	73f4 <__aeabi_fsub+0x24c>
    73d2:	0001      	movs	r1, r0
    73d4:	e778      	b.n	72c8 <__aeabi_fsub+0x120>
    73d6:	2b00      	cmp	r3, #0
    73d8:	d06e      	beq.n	74b8 <__aeabi_fsub+0x310>
    73da:	24ff      	movs	r4, #255	; 0xff
    73dc:	2e00      	cmp	r6, #0
    73de:	d100      	bne.n	73e2 <__aeabi_fsub+0x23a>
    73e0:	e728      	b.n	7234 <__aeabi_fsub+0x8c>
    73e2:	2280      	movs	r2, #128	; 0x80
    73e4:	4651      	mov	r1, sl
    73e6:	03d2      	lsls	r2, r2, #15
    73e8:	4211      	tst	r1, r2
    73ea:	d003      	beq.n	73f4 <__aeabi_fsub+0x24c>
    73ec:	4661      	mov	r1, ip
    73ee:	4211      	tst	r1, r2
    73f0:	d100      	bne.n	73f4 <__aeabi_fsub+0x24c>
    73f2:	0033      	movs	r3, r6
    73f4:	24ff      	movs	r4, #255	; 0xff
    73f6:	e71d      	b.n	7234 <__aeabi_fsub+0x8c>
    73f8:	24ff      	movs	r4, #255	; 0xff
    73fa:	2300      	movs	r3, #0
    73fc:	e72c      	b.n	7258 <__aeabi_fsub+0xb0>
    73fe:	2c00      	cmp	r4, #0
    7400:	d1e9      	bne.n	73d6 <__aeabi_fsub+0x22e>
    7402:	2b00      	cmp	r3, #0
    7404:	d063      	beq.n	74ce <__aeabi_fsub+0x326>
    7406:	2e00      	cmp	r6, #0
    7408:	d100      	bne.n	740c <__aeabi_fsub+0x264>
    740a:	e713      	b.n	7234 <__aeabi_fsub+0x8c>
    740c:	199b      	adds	r3, r3, r6
    740e:	015a      	lsls	r2, r3, #5
    7410:	d400      	bmi.n	7414 <__aeabi_fsub+0x26c>
    7412:	e73e      	b.n	7292 <__aeabi_fsub+0xea>
    7414:	4a31      	ldr	r2, [pc, #196]	; (74dc <__aeabi_fsub+0x334>)
    7416:	000c      	movs	r4, r1
    7418:	4013      	ands	r3, r2
    741a:	e70b      	b.n	7234 <__aeabi_fsub+0x8c>
    741c:	2c00      	cmp	r4, #0
    741e:	d11e      	bne.n	745e <__aeabi_fsub+0x2b6>
    7420:	2b00      	cmp	r3, #0
    7422:	d12f      	bne.n	7484 <__aeabi_fsub+0x2dc>
    7424:	2e00      	cmp	r6, #0
    7426:	d04f      	beq.n	74c8 <__aeabi_fsub+0x320>
    7428:	0033      	movs	r3, r6
    742a:	000d      	movs	r5, r1
    742c:	e702      	b.n	7234 <__aeabi_fsub+0x8c>
    742e:	2601      	movs	r6, #1
    7430:	e755      	b.n	72de <__aeabi_fsub+0x136>
    7432:	2c00      	cmp	r4, #0
    7434:	d11f      	bne.n	7476 <__aeabi_fsub+0x2ce>
    7436:	2b00      	cmp	r3, #0
    7438:	d043      	beq.n	74c2 <__aeabi_fsub+0x31a>
    743a:	43c9      	mvns	r1, r1
    743c:	2900      	cmp	r1, #0
    743e:	d00b      	beq.n	7458 <__aeabi_fsub+0x2b0>
    7440:	28ff      	cmp	r0, #255	; 0xff
    7442:	d039      	beq.n	74b8 <__aeabi_fsub+0x310>
    7444:	291b      	cmp	r1, #27
    7446:	dc44      	bgt.n	74d2 <__aeabi_fsub+0x32a>
    7448:	001c      	movs	r4, r3
    744a:	2720      	movs	r7, #32
    744c:	40cc      	lsrs	r4, r1
    744e:	1a79      	subs	r1, r7, r1
    7450:	408b      	lsls	r3, r1
    7452:	1e59      	subs	r1, r3, #1
    7454:	418b      	sbcs	r3, r1
    7456:	4323      	orrs	r3, r4
    7458:	199b      	adds	r3, r3, r6
    745a:	0004      	movs	r4, r0
    745c:	e740      	b.n	72e0 <__aeabi_fsub+0x138>
    745e:	2b00      	cmp	r3, #0
    7460:	d11a      	bne.n	7498 <__aeabi_fsub+0x2f0>
    7462:	2e00      	cmp	r6, #0
    7464:	d124      	bne.n	74b0 <__aeabi_fsub+0x308>
    7466:	2780      	movs	r7, #128	; 0x80
    7468:	2200      	movs	r2, #0
    746a:	03ff      	lsls	r7, r7, #15
    746c:	e71b      	b.n	72a6 <__aeabi_fsub+0xfe>
    746e:	0033      	movs	r3, r6
    7470:	0004      	movs	r4, r0
    7472:	000d      	movs	r5, r1
    7474:	e6de      	b.n	7234 <__aeabi_fsub+0x8c>
    7476:	28ff      	cmp	r0, #255	; 0xff
    7478:	d01e      	beq.n	74b8 <__aeabi_fsub+0x310>
    747a:	2480      	movs	r4, #128	; 0x80
    747c:	04e4      	lsls	r4, r4, #19
    747e:	4249      	negs	r1, r1
    7480:	4323      	orrs	r3, r4
    7482:	e7df      	b.n	7444 <__aeabi_fsub+0x29c>
    7484:	2e00      	cmp	r6, #0
    7486:	d100      	bne.n	748a <__aeabi_fsub+0x2e2>
    7488:	e6d4      	b.n	7234 <__aeabi_fsub+0x8c>
    748a:	1b9f      	subs	r7, r3, r6
    748c:	017a      	lsls	r2, r7, #5
    748e:	d400      	bmi.n	7492 <__aeabi_fsub+0x2ea>
    7490:	e737      	b.n	7302 <__aeabi_fsub+0x15a>
    7492:	1af3      	subs	r3, r6, r3
    7494:	000d      	movs	r5, r1
    7496:	e6cd      	b.n	7234 <__aeabi_fsub+0x8c>
    7498:	24ff      	movs	r4, #255	; 0xff
    749a:	2e00      	cmp	r6, #0
    749c:	d100      	bne.n	74a0 <__aeabi_fsub+0x2f8>
    749e:	e6c9      	b.n	7234 <__aeabi_fsub+0x8c>
    74a0:	2280      	movs	r2, #128	; 0x80
    74a2:	4650      	mov	r0, sl
    74a4:	03d2      	lsls	r2, r2, #15
    74a6:	4210      	tst	r0, r2
    74a8:	d0a4      	beq.n	73f4 <__aeabi_fsub+0x24c>
    74aa:	4660      	mov	r0, ip
    74ac:	4210      	tst	r0, r2
    74ae:	d1a1      	bne.n	73f4 <__aeabi_fsub+0x24c>
    74b0:	0033      	movs	r3, r6
    74b2:	000d      	movs	r5, r1
    74b4:	24ff      	movs	r4, #255	; 0xff
    74b6:	e6bd      	b.n	7234 <__aeabi_fsub+0x8c>
    74b8:	0033      	movs	r3, r6
    74ba:	24ff      	movs	r4, #255	; 0xff
    74bc:	e6ba      	b.n	7234 <__aeabi_fsub+0x8c>
    74be:	2301      	movs	r3, #1
    74c0:	e76e      	b.n	73a0 <__aeabi_fsub+0x1f8>
    74c2:	0033      	movs	r3, r6
    74c4:	0004      	movs	r4, r0
    74c6:	e6b5      	b.n	7234 <__aeabi_fsub+0x8c>
    74c8:	2700      	movs	r7, #0
    74ca:	2200      	movs	r2, #0
    74cc:	e71c      	b.n	7308 <__aeabi_fsub+0x160>
    74ce:	0033      	movs	r3, r6
    74d0:	e6b0      	b.n	7234 <__aeabi_fsub+0x8c>
    74d2:	2301      	movs	r3, #1
    74d4:	e7c0      	b.n	7458 <__aeabi_fsub+0x2b0>
    74d6:	46c0      	nop			; (mov r8, r8)
    74d8:	7dffffff 	.word	0x7dffffff
    74dc:	fbffffff 	.word	0xfbffffff

000074e0 <__aeabi_i2f>:
    74e0:	b570      	push	{r4, r5, r6, lr}
    74e2:	2800      	cmp	r0, #0
    74e4:	d030      	beq.n	7548 <__aeabi_i2f+0x68>
    74e6:	17c3      	asrs	r3, r0, #31
    74e8:	18c4      	adds	r4, r0, r3
    74ea:	405c      	eors	r4, r3
    74ec:	0fc5      	lsrs	r5, r0, #31
    74ee:	0020      	movs	r0, r4
    74f0:	f001 fe40 	bl	9174 <__clzsi2>
    74f4:	239e      	movs	r3, #158	; 0x9e
    74f6:	1a1b      	subs	r3, r3, r0
    74f8:	2b96      	cmp	r3, #150	; 0x96
    74fa:	dc0d      	bgt.n	7518 <__aeabi_i2f+0x38>
    74fc:	2296      	movs	r2, #150	; 0x96
    74fe:	1ad2      	subs	r2, r2, r3
    7500:	4094      	lsls	r4, r2
    7502:	002a      	movs	r2, r5
    7504:	0264      	lsls	r4, r4, #9
    7506:	0a64      	lsrs	r4, r4, #9
    7508:	b2db      	uxtb	r3, r3
    750a:	0264      	lsls	r4, r4, #9
    750c:	05db      	lsls	r3, r3, #23
    750e:	0a60      	lsrs	r0, r4, #9
    7510:	07d2      	lsls	r2, r2, #31
    7512:	4318      	orrs	r0, r3
    7514:	4310      	orrs	r0, r2
    7516:	bd70      	pop	{r4, r5, r6, pc}
    7518:	2b99      	cmp	r3, #153	; 0x99
    751a:	dc19      	bgt.n	7550 <__aeabi_i2f+0x70>
    751c:	2299      	movs	r2, #153	; 0x99
    751e:	1ad2      	subs	r2, r2, r3
    7520:	2a00      	cmp	r2, #0
    7522:	dd29      	ble.n	7578 <__aeabi_i2f+0x98>
    7524:	4094      	lsls	r4, r2
    7526:	0022      	movs	r2, r4
    7528:	4c14      	ldr	r4, [pc, #80]	; (757c <__aeabi_i2f+0x9c>)
    752a:	4014      	ands	r4, r2
    752c:	0751      	lsls	r1, r2, #29
    752e:	d004      	beq.n	753a <__aeabi_i2f+0x5a>
    7530:	210f      	movs	r1, #15
    7532:	400a      	ands	r2, r1
    7534:	2a04      	cmp	r2, #4
    7536:	d000      	beq.n	753a <__aeabi_i2f+0x5a>
    7538:	3404      	adds	r4, #4
    753a:	0162      	lsls	r2, r4, #5
    753c:	d413      	bmi.n	7566 <__aeabi_i2f+0x86>
    753e:	01a4      	lsls	r4, r4, #6
    7540:	0a64      	lsrs	r4, r4, #9
    7542:	b2db      	uxtb	r3, r3
    7544:	002a      	movs	r2, r5
    7546:	e7e0      	b.n	750a <__aeabi_i2f+0x2a>
    7548:	2200      	movs	r2, #0
    754a:	2300      	movs	r3, #0
    754c:	2400      	movs	r4, #0
    754e:	e7dc      	b.n	750a <__aeabi_i2f+0x2a>
    7550:	2205      	movs	r2, #5
    7552:	0021      	movs	r1, r4
    7554:	1a12      	subs	r2, r2, r0
    7556:	40d1      	lsrs	r1, r2
    7558:	22b9      	movs	r2, #185	; 0xb9
    755a:	1ad2      	subs	r2, r2, r3
    755c:	4094      	lsls	r4, r2
    755e:	1e62      	subs	r2, r4, #1
    7560:	4194      	sbcs	r4, r2
    7562:	430c      	orrs	r4, r1
    7564:	e7da      	b.n	751c <__aeabi_i2f+0x3c>
    7566:	4b05      	ldr	r3, [pc, #20]	; (757c <__aeabi_i2f+0x9c>)
    7568:	002a      	movs	r2, r5
    756a:	401c      	ands	r4, r3
    756c:	239f      	movs	r3, #159	; 0x9f
    756e:	01a4      	lsls	r4, r4, #6
    7570:	1a1b      	subs	r3, r3, r0
    7572:	0a64      	lsrs	r4, r4, #9
    7574:	b2db      	uxtb	r3, r3
    7576:	e7c8      	b.n	750a <__aeabi_i2f+0x2a>
    7578:	0022      	movs	r2, r4
    757a:	e7d5      	b.n	7528 <__aeabi_i2f+0x48>
    757c:	fbffffff 	.word	0xfbffffff

00007580 <__aeabi_dadd>:
    7580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7582:	4645      	mov	r5, r8
    7584:	46de      	mov	lr, fp
    7586:	4657      	mov	r7, sl
    7588:	464e      	mov	r6, r9
    758a:	030c      	lsls	r4, r1, #12
    758c:	b5e0      	push	{r5, r6, r7, lr}
    758e:	004e      	lsls	r6, r1, #1
    7590:	0fc9      	lsrs	r1, r1, #31
    7592:	4688      	mov	r8, r1
    7594:	000d      	movs	r5, r1
    7596:	0a61      	lsrs	r1, r4, #9
    7598:	0f44      	lsrs	r4, r0, #29
    759a:	430c      	orrs	r4, r1
    759c:	00c7      	lsls	r7, r0, #3
    759e:	0319      	lsls	r1, r3, #12
    75a0:	0058      	lsls	r0, r3, #1
    75a2:	0fdb      	lsrs	r3, r3, #31
    75a4:	469b      	mov	fp, r3
    75a6:	0a4b      	lsrs	r3, r1, #9
    75a8:	0f51      	lsrs	r1, r2, #29
    75aa:	430b      	orrs	r3, r1
    75ac:	0d76      	lsrs	r6, r6, #21
    75ae:	0d40      	lsrs	r0, r0, #21
    75b0:	0019      	movs	r1, r3
    75b2:	00d2      	lsls	r2, r2, #3
    75b4:	45d8      	cmp	r8, fp
    75b6:	d100      	bne.n	75ba <__aeabi_dadd+0x3a>
    75b8:	e0ae      	b.n	7718 <__aeabi_dadd+0x198>
    75ba:	1a35      	subs	r5, r6, r0
    75bc:	2d00      	cmp	r5, #0
    75be:	dc00      	bgt.n	75c2 <__aeabi_dadd+0x42>
    75c0:	e0f6      	b.n	77b0 <__aeabi_dadd+0x230>
    75c2:	2800      	cmp	r0, #0
    75c4:	d10f      	bne.n	75e6 <__aeabi_dadd+0x66>
    75c6:	4313      	orrs	r3, r2
    75c8:	d100      	bne.n	75cc <__aeabi_dadd+0x4c>
    75ca:	e0db      	b.n	7784 <__aeabi_dadd+0x204>
    75cc:	1e6b      	subs	r3, r5, #1
    75ce:	2b00      	cmp	r3, #0
    75d0:	d000      	beq.n	75d4 <__aeabi_dadd+0x54>
    75d2:	e137      	b.n	7844 <__aeabi_dadd+0x2c4>
    75d4:	1aba      	subs	r2, r7, r2
    75d6:	4297      	cmp	r7, r2
    75d8:	41bf      	sbcs	r7, r7
    75da:	1a64      	subs	r4, r4, r1
    75dc:	427f      	negs	r7, r7
    75de:	1be4      	subs	r4, r4, r7
    75e0:	2601      	movs	r6, #1
    75e2:	0017      	movs	r7, r2
    75e4:	e024      	b.n	7630 <__aeabi_dadd+0xb0>
    75e6:	4bc6      	ldr	r3, [pc, #792]	; (7900 <__aeabi_dadd+0x380>)
    75e8:	429e      	cmp	r6, r3
    75ea:	d04d      	beq.n	7688 <__aeabi_dadd+0x108>
    75ec:	2380      	movs	r3, #128	; 0x80
    75ee:	041b      	lsls	r3, r3, #16
    75f0:	4319      	orrs	r1, r3
    75f2:	2d38      	cmp	r5, #56	; 0x38
    75f4:	dd00      	ble.n	75f8 <__aeabi_dadd+0x78>
    75f6:	e107      	b.n	7808 <__aeabi_dadd+0x288>
    75f8:	2d1f      	cmp	r5, #31
    75fa:	dd00      	ble.n	75fe <__aeabi_dadd+0x7e>
    75fc:	e138      	b.n	7870 <__aeabi_dadd+0x2f0>
    75fe:	2020      	movs	r0, #32
    7600:	1b43      	subs	r3, r0, r5
    7602:	469a      	mov	sl, r3
    7604:	000b      	movs	r3, r1
    7606:	4650      	mov	r0, sl
    7608:	4083      	lsls	r3, r0
    760a:	4699      	mov	r9, r3
    760c:	0013      	movs	r3, r2
    760e:	4648      	mov	r0, r9
    7610:	40eb      	lsrs	r3, r5
    7612:	4318      	orrs	r0, r3
    7614:	0003      	movs	r3, r0
    7616:	4650      	mov	r0, sl
    7618:	4082      	lsls	r2, r0
    761a:	1e50      	subs	r0, r2, #1
    761c:	4182      	sbcs	r2, r0
    761e:	40e9      	lsrs	r1, r5
    7620:	431a      	orrs	r2, r3
    7622:	1aba      	subs	r2, r7, r2
    7624:	1a61      	subs	r1, r4, r1
    7626:	4297      	cmp	r7, r2
    7628:	41a4      	sbcs	r4, r4
    762a:	0017      	movs	r7, r2
    762c:	4264      	negs	r4, r4
    762e:	1b0c      	subs	r4, r1, r4
    7630:	0223      	lsls	r3, r4, #8
    7632:	d562      	bpl.n	76fa <__aeabi_dadd+0x17a>
    7634:	0264      	lsls	r4, r4, #9
    7636:	0a65      	lsrs	r5, r4, #9
    7638:	2d00      	cmp	r5, #0
    763a:	d100      	bne.n	763e <__aeabi_dadd+0xbe>
    763c:	e0df      	b.n	77fe <__aeabi_dadd+0x27e>
    763e:	0028      	movs	r0, r5
    7640:	f001 fd98 	bl	9174 <__clzsi2>
    7644:	0003      	movs	r3, r0
    7646:	3b08      	subs	r3, #8
    7648:	2b1f      	cmp	r3, #31
    764a:	dd00      	ble.n	764e <__aeabi_dadd+0xce>
    764c:	e0d2      	b.n	77f4 <__aeabi_dadd+0x274>
    764e:	2220      	movs	r2, #32
    7650:	003c      	movs	r4, r7
    7652:	1ad2      	subs	r2, r2, r3
    7654:	409d      	lsls	r5, r3
    7656:	40d4      	lsrs	r4, r2
    7658:	409f      	lsls	r7, r3
    765a:	4325      	orrs	r5, r4
    765c:	429e      	cmp	r6, r3
    765e:	dd00      	ble.n	7662 <__aeabi_dadd+0xe2>
    7660:	e0c4      	b.n	77ec <__aeabi_dadd+0x26c>
    7662:	1b9e      	subs	r6, r3, r6
    7664:	1c73      	adds	r3, r6, #1
    7666:	2b1f      	cmp	r3, #31
    7668:	dd00      	ble.n	766c <__aeabi_dadd+0xec>
    766a:	e0f1      	b.n	7850 <__aeabi_dadd+0x2d0>
    766c:	2220      	movs	r2, #32
    766e:	0038      	movs	r0, r7
    7670:	0029      	movs	r1, r5
    7672:	1ad2      	subs	r2, r2, r3
    7674:	40d8      	lsrs	r0, r3
    7676:	4091      	lsls	r1, r2
    7678:	4097      	lsls	r7, r2
    767a:	002c      	movs	r4, r5
    767c:	4301      	orrs	r1, r0
    767e:	1e78      	subs	r0, r7, #1
    7680:	4187      	sbcs	r7, r0
    7682:	40dc      	lsrs	r4, r3
    7684:	2600      	movs	r6, #0
    7686:	430f      	orrs	r7, r1
    7688:	077b      	lsls	r3, r7, #29
    768a:	d009      	beq.n	76a0 <__aeabi_dadd+0x120>
    768c:	230f      	movs	r3, #15
    768e:	403b      	ands	r3, r7
    7690:	2b04      	cmp	r3, #4
    7692:	d005      	beq.n	76a0 <__aeabi_dadd+0x120>
    7694:	1d3b      	adds	r3, r7, #4
    7696:	42bb      	cmp	r3, r7
    7698:	41bf      	sbcs	r7, r7
    769a:	427f      	negs	r7, r7
    769c:	19e4      	adds	r4, r4, r7
    769e:	001f      	movs	r7, r3
    76a0:	0223      	lsls	r3, r4, #8
    76a2:	d52c      	bpl.n	76fe <__aeabi_dadd+0x17e>
    76a4:	4b96      	ldr	r3, [pc, #600]	; (7900 <__aeabi_dadd+0x380>)
    76a6:	3601      	adds	r6, #1
    76a8:	429e      	cmp	r6, r3
    76aa:	d100      	bne.n	76ae <__aeabi_dadd+0x12e>
    76ac:	e09a      	b.n	77e4 <__aeabi_dadd+0x264>
    76ae:	4645      	mov	r5, r8
    76b0:	4b94      	ldr	r3, [pc, #592]	; (7904 <__aeabi_dadd+0x384>)
    76b2:	08ff      	lsrs	r7, r7, #3
    76b4:	401c      	ands	r4, r3
    76b6:	0760      	lsls	r0, r4, #29
    76b8:	0576      	lsls	r6, r6, #21
    76ba:	0264      	lsls	r4, r4, #9
    76bc:	4307      	orrs	r7, r0
    76be:	0b24      	lsrs	r4, r4, #12
    76c0:	0d76      	lsrs	r6, r6, #21
    76c2:	2100      	movs	r1, #0
    76c4:	0324      	lsls	r4, r4, #12
    76c6:	0b23      	lsrs	r3, r4, #12
    76c8:	0d0c      	lsrs	r4, r1, #20
    76ca:	4a8f      	ldr	r2, [pc, #572]	; (7908 <__aeabi_dadd+0x388>)
    76cc:	0524      	lsls	r4, r4, #20
    76ce:	431c      	orrs	r4, r3
    76d0:	4014      	ands	r4, r2
    76d2:	0533      	lsls	r3, r6, #20
    76d4:	4323      	orrs	r3, r4
    76d6:	005b      	lsls	r3, r3, #1
    76d8:	07ed      	lsls	r5, r5, #31
    76da:	085b      	lsrs	r3, r3, #1
    76dc:	432b      	orrs	r3, r5
    76de:	0038      	movs	r0, r7
    76e0:	0019      	movs	r1, r3
    76e2:	bc3c      	pop	{r2, r3, r4, r5}
    76e4:	4690      	mov	r8, r2
    76e6:	4699      	mov	r9, r3
    76e8:	46a2      	mov	sl, r4
    76ea:	46ab      	mov	fp, r5
    76ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    76ee:	4664      	mov	r4, ip
    76f0:	4304      	orrs	r4, r0
    76f2:	d100      	bne.n	76f6 <__aeabi_dadd+0x176>
    76f4:	e211      	b.n	7b1a <__aeabi_dadd+0x59a>
    76f6:	0004      	movs	r4, r0
    76f8:	4667      	mov	r7, ip
    76fa:	077b      	lsls	r3, r7, #29
    76fc:	d1c6      	bne.n	768c <__aeabi_dadd+0x10c>
    76fe:	4645      	mov	r5, r8
    7700:	0760      	lsls	r0, r4, #29
    7702:	08ff      	lsrs	r7, r7, #3
    7704:	4307      	orrs	r7, r0
    7706:	08e4      	lsrs	r4, r4, #3
    7708:	4b7d      	ldr	r3, [pc, #500]	; (7900 <__aeabi_dadd+0x380>)
    770a:	429e      	cmp	r6, r3
    770c:	d030      	beq.n	7770 <__aeabi_dadd+0x1f0>
    770e:	0324      	lsls	r4, r4, #12
    7710:	0576      	lsls	r6, r6, #21
    7712:	0b24      	lsrs	r4, r4, #12
    7714:	0d76      	lsrs	r6, r6, #21
    7716:	e7d4      	b.n	76c2 <__aeabi_dadd+0x142>
    7718:	1a33      	subs	r3, r6, r0
    771a:	469a      	mov	sl, r3
    771c:	2b00      	cmp	r3, #0
    771e:	dd78      	ble.n	7812 <__aeabi_dadd+0x292>
    7720:	2800      	cmp	r0, #0
    7722:	d031      	beq.n	7788 <__aeabi_dadd+0x208>
    7724:	4876      	ldr	r0, [pc, #472]	; (7900 <__aeabi_dadd+0x380>)
    7726:	4286      	cmp	r6, r0
    7728:	d0ae      	beq.n	7688 <__aeabi_dadd+0x108>
    772a:	2080      	movs	r0, #128	; 0x80
    772c:	0400      	lsls	r0, r0, #16
    772e:	4301      	orrs	r1, r0
    7730:	4653      	mov	r3, sl
    7732:	2b38      	cmp	r3, #56	; 0x38
    7734:	dc00      	bgt.n	7738 <__aeabi_dadd+0x1b8>
    7736:	e0e9      	b.n	790c <__aeabi_dadd+0x38c>
    7738:	430a      	orrs	r2, r1
    773a:	1e51      	subs	r1, r2, #1
    773c:	418a      	sbcs	r2, r1
    773e:	2100      	movs	r1, #0
    7740:	19d2      	adds	r2, r2, r7
    7742:	42ba      	cmp	r2, r7
    7744:	41bf      	sbcs	r7, r7
    7746:	1909      	adds	r1, r1, r4
    7748:	427c      	negs	r4, r7
    774a:	0017      	movs	r7, r2
    774c:	190c      	adds	r4, r1, r4
    774e:	0223      	lsls	r3, r4, #8
    7750:	d5d3      	bpl.n	76fa <__aeabi_dadd+0x17a>
    7752:	4b6b      	ldr	r3, [pc, #428]	; (7900 <__aeabi_dadd+0x380>)
    7754:	3601      	adds	r6, #1
    7756:	429e      	cmp	r6, r3
    7758:	d100      	bne.n	775c <__aeabi_dadd+0x1dc>
    775a:	e13a      	b.n	79d2 <__aeabi_dadd+0x452>
    775c:	2001      	movs	r0, #1
    775e:	4b69      	ldr	r3, [pc, #420]	; (7904 <__aeabi_dadd+0x384>)
    7760:	401c      	ands	r4, r3
    7762:	087b      	lsrs	r3, r7, #1
    7764:	4007      	ands	r7, r0
    7766:	431f      	orrs	r7, r3
    7768:	07e0      	lsls	r0, r4, #31
    776a:	4307      	orrs	r7, r0
    776c:	0864      	lsrs	r4, r4, #1
    776e:	e78b      	b.n	7688 <__aeabi_dadd+0x108>
    7770:	0023      	movs	r3, r4
    7772:	433b      	orrs	r3, r7
    7774:	d100      	bne.n	7778 <__aeabi_dadd+0x1f8>
    7776:	e1cb      	b.n	7b10 <__aeabi_dadd+0x590>
    7778:	2280      	movs	r2, #128	; 0x80
    777a:	0312      	lsls	r2, r2, #12
    777c:	4314      	orrs	r4, r2
    777e:	0324      	lsls	r4, r4, #12
    7780:	0b24      	lsrs	r4, r4, #12
    7782:	e79e      	b.n	76c2 <__aeabi_dadd+0x142>
    7784:	002e      	movs	r6, r5
    7786:	e77f      	b.n	7688 <__aeabi_dadd+0x108>
    7788:	0008      	movs	r0, r1
    778a:	4310      	orrs	r0, r2
    778c:	d100      	bne.n	7790 <__aeabi_dadd+0x210>
    778e:	e0b4      	b.n	78fa <__aeabi_dadd+0x37a>
    7790:	1e58      	subs	r0, r3, #1
    7792:	2800      	cmp	r0, #0
    7794:	d000      	beq.n	7798 <__aeabi_dadd+0x218>
    7796:	e0de      	b.n	7956 <__aeabi_dadd+0x3d6>
    7798:	18ba      	adds	r2, r7, r2
    779a:	42ba      	cmp	r2, r7
    779c:	419b      	sbcs	r3, r3
    779e:	1864      	adds	r4, r4, r1
    77a0:	425b      	negs	r3, r3
    77a2:	18e4      	adds	r4, r4, r3
    77a4:	0017      	movs	r7, r2
    77a6:	2601      	movs	r6, #1
    77a8:	0223      	lsls	r3, r4, #8
    77aa:	d5a6      	bpl.n	76fa <__aeabi_dadd+0x17a>
    77ac:	2602      	movs	r6, #2
    77ae:	e7d5      	b.n	775c <__aeabi_dadd+0x1dc>
    77b0:	2d00      	cmp	r5, #0
    77b2:	d16e      	bne.n	7892 <__aeabi_dadd+0x312>
    77b4:	1c70      	adds	r0, r6, #1
    77b6:	0540      	lsls	r0, r0, #21
    77b8:	0d40      	lsrs	r0, r0, #21
    77ba:	2801      	cmp	r0, #1
    77bc:	dc00      	bgt.n	77c0 <__aeabi_dadd+0x240>
    77be:	e0f9      	b.n	79b4 <__aeabi_dadd+0x434>
    77c0:	1ab8      	subs	r0, r7, r2
    77c2:	4684      	mov	ip, r0
    77c4:	4287      	cmp	r7, r0
    77c6:	4180      	sbcs	r0, r0
    77c8:	1ae5      	subs	r5, r4, r3
    77ca:	4240      	negs	r0, r0
    77cc:	1a2d      	subs	r5, r5, r0
    77ce:	0228      	lsls	r0, r5, #8
    77d0:	d400      	bmi.n	77d4 <__aeabi_dadd+0x254>
    77d2:	e089      	b.n	78e8 <__aeabi_dadd+0x368>
    77d4:	1bd7      	subs	r7, r2, r7
    77d6:	42ba      	cmp	r2, r7
    77d8:	4192      	sbcs	r2, r2
    77da:	1b1c      	subs	r4, r3, r4
    77dc:	4252      	negs	r2, r2
    77de:	1aa5      	subs	r5, r4, r2
    77e0:	46d8      	mov	r8, fp
    77e2:	e729      	b.n	7638 <__aeabi_dadd+0xb8>
    77e4:	4645      	mov	r5, r8
    77e6:	2400      	movs	r4, #0
    77e8:	2700      	movs	r7, #0
    77ea:	e76a      	b.n	76c2 <__aeabi_dadd+0x142>
    77ec:	4c45      	ldr	r4, [pc, #276]	; (7904 <__aeabi_dadd+0x384>)
    77ee:	1af6      	subs	r6, r6, r3
    77f0:	402c      	ands	r4, r5
    77f2:	e749      	b.n	7688 <__aeabi_dadd+0x108>
    77f4:	003d      	movs	r5, r7
    77f6:	3828      	subs	r0, #40	; 0x28
    77f8:	4085      	lsls	r5, r0
    77fa:	2700      	movs	r7, #0
    77fc:	e72e      	b.n	765c <__aeabi_dadd+0xdc>
    77fe:	0038      	movs	r0, r7
    7800:	f001 fcb8 	bl	9174 <__clzsi2>
    7804:	3020      	adds	r0, #32
    7806:	e71d      	b.n	7644 <__aeabi_dadd+0xc4>
    7808:	430a      	orrs	r2, r1
    780a:	1e51      	subs	r1, r2, #1
    780c:	418a      	sbcs	r2, r1
    780e:	2100      	movs	r1, #0
    7810:	e707      	b.n	7622 <__aeabi_dadd+0xa2>
    7812:	2b00      	cmp	r3, #0
    7814:	d000      	beq.n	7818 <__aeabi_dadd+0x298>
    7816:	e0f3      	b.n	7a00 <__aeabi_dadd+0x480>
    7818:	1c70      	adds	r0, r6, #1
    781a:	0543      	lsls	r3, r0, #21
    781c:	0d5b      	lsrs	r3, r3, #21
    781e:	2b01      	cmp	r3, #1
    7820:	dc00      	bgt.n	7824 <__aeabi_dadd+0x2a4>
    7822:	e0ad      	b.n	7980 <__aeabi_dadd+0x400>
    7824:	4b36      	ldr	r3, [pc, #216]	; (7900 <__aeabi_dadd+0x380>)
    7826:	4298      	cmp	r0, r3
    7828:	d100      	bne.n	782c <__aeabi_dadd+0x2ac>
    782a:	e0d1      	b.n	79d0 <__aeabi_dadd+0x450>
    782c:	18ba      	adds	r2, r7, r2
    782e:	42ba      	cmp	r2, r7
    7830:	41bf      	sbcs	r7, r7
    7832:	1864      	adds	r4, r4, r1
    7834:	427f      	negs	r7, r7
    7836:	19e4      	adds	r4, r4, r7
    7838:	07e7      	lsls	r7, r4, #31
    783a:	0852      	lsrs	r2, r2, #1
    783c:	4317      	orrs	r7, r2
    783e:	0864      	lsrs	r4, r4, #1
    7840:	0006      	movs	r6, r0
    7842:	e721      	b.n	7688 <__aeabi_dadd+0x108>
    7844:	482e      	ldr	r0, [pc, #184]	; (7900 <__aeabi_dadd+0x380>)
    7846:	4285      	cmp	r5, r0
    7848:	d100      	bne.n	784c <__aeabi_dadd+0x2cc>
    784a:	e093      	b.n	7974 <__aeabi_dadd+0x3f4>
    784c:	001d      	movs	r5, r3
    784e:	e6d0      	b.n	75f2 <__aeabi_dadd+0x72>
    7850:	0029      	movs	r1, r5
    7852:	3e1f      	subs	r6, #31
    7854:	40f1      	lsrs	r1, r6
    7856:	2b20      	cmp	r3, #32
    7858:	d100      	bne.n	785c <__aeabi_dadd+0x2dc>
    785a:	e08d      	b.n	7978 <__aeabi_dadd+0x3f8>
    785c:	2240      	movs	r2, #64	; 0x40
    785e:	1ad3      	subs	r3, r2, r3
    7860:	409d      	lsls	r5, r3
    7862:	432f      	orrs	r7, r5
    7864:	1e7d      	subs	r5, r7, #1
    7866:	41af      	sbcs	r7, r5
    7868:	2400      	movs	r4, #0
    786a:	430f      	orrs	r7, r1
    786c:	2600      	movs	r6, #0
    786e:	e744      	b.n	76fa <__aeabi_dadd+0x17a>
    7870:	002b      	movs	r3, r5
    7872:	0008      	movs	r0, r1
    7874:	3b20      	subs	r3, #32
    7876:	40d8      	lsrs	r0, r3
    7878:	0003      	movs	r3, r0
    787a:	2d20      	cmp	r5, #32
    787c:	d100      	bne.n	7880 <__aeabi_dadd+0x300>
    787e:	e07d      	b.n	797c <__aeabi_dadd+0x3fc>
    7880:	2040      	movs	r0, #64	; 0x40
    7882:	1b45      	subs	r5, r0, r5
    7884:	40a9      	lsls	r1, r5
    7886:	430a      	orrs	r2, r1
    7888:	1e51      	subs	r1, r2, #1
    788a:	418a      	sbcs	r2, r1
    788c:	2100      	movs	r1, #0
    788e:	431a      	orrs	r2, r3
    7890:	e6c7      	b.n	7622 <__aeabi_dadd+0xa2>
    7892:	2e00      	cmp	r6, #0
    7894:	d050      	beq.n	7938 <__aeabi_dadd+0x3b8>
    7896:	4e1a      	ldr	r6, [pc, #104]	; (7900 <__aeabi_dadd+0x380>)
    7898:	42b0      	cmp	r0, r6
    789a:	d057      	beq.n	794c <__aeabi_dadd+0x3cc>
    789c:	2680      	movs	r6, #128	; 0x80
    789e:	426b      	negs	r3, r5
    78a0:	4699      	mov	r9, r3
    78a2:	0436      	lsls	r6, r6, #16
    78a4:	4334      	orrs	r4, r6
    78a6:	464b      	mov	r3, r9
    78a8:	2b38      	cmp	r3, #56	; 0x38
    78aa:	dd00      	ble.n	78ae <__aeabi_dadd+0x32e>
    78ac:	e0d6      	b.n	7a5c <__aeabi_dadd+0x4dc>
    78ae:	2b1f      	cmp	r3, #31
    78b0:	dd00      	ble.n	78b4 <__aeabi_dadd+0x334>
    78b2:	e135      	b.n	7b20 <__aeabi_dadd+0x5a0>
    78b4:	2620      	movs	r6, #32
    78b6:	1af5      	subs	r5, r6, r3
    78b8:	0026      	movs	r6, r4
    78ba:	40ae      	lsls	r6, r5
    78bc:	46b2      	mov	sl, r6
    78be:	003e      	movs	r6, r7
    78c0:	40de      	lsrs	r6, r3
    78c2:	46ac      	mov	ip, r5
    78c4:	0035      	movs	r5, r6
    78c6:	4656      	mov	r6, sl
    78c8:	432e      	orrs	r6, r5
    78ca:	4665      	mov	r5, ip
    78cc:	40af      	lsls	r7, r5
    78ce:	1e7d      	subs	r5, r7, #1
    78d0:	41af      	sbcs	r7, r5
    78d2:	40dc      	lsrs	r4, r3
    78d4:	4337      	orrs	r7, r6
    78d6:	1bd7      	subs	r7, r2, r7
    78d8:	42ba      	cmp	r2, r7
    78da:	4192      	sbcs	r2, r2
    78dc:	1b0c      	subs	r4, r1, r4
    78de:	4252      	negs	r2, r2
    78e0:	1aa4      	subs	r4, r4, r2
    78e2:	0006      	movs	r6, r0
    78e4:	46d8      	mov	r8, fp
    78e6:	e6a3      	b.n	7630 <__aeabi_dadd+0xb0>
    78e8:	4664      	mov	r4, ip
    78ea:	4667      	mov	r7, ip
    78ec:	432c      	orrs	r4, r5
    78ee:	d000      	beq.n	78f2 <__aeabi_dadd+0x372>
    78f0:	e6a2      	b.n	7638 <__aeabi_dadd+0xb8>
    78f2:	2500      	movs	r5, #0
    78f4:	2600      	movs	r6, #0
    78f6:	2700      	movs	r7, #0
    78f8:	e706      	b.n	7708 <__aeabi_dadd+0x188>
    78fa:	001e      	movs	r6, r3
    78fc:	e6c4      	b.n	7688 <__aeabi_dadd+0x108>
    78fe:	46c0      	nop			; (mov r8, r8)
    7900:	000007ff 	.word	0x000007ff
    7904:	ff7fffff 	.word	0xff7fffff
    7908:	800fffff 	.word	0x800fffff
    790c:	2b1f      	cmp	r3, #31
    790e:	dc63      	bgt.n	79d8 <__aeabi_dadd+0x458>
    7910:	2020      	movs	r0, #32
    7912:	1ac3      	subs	r3, r0, r3
    7914:	0008      	movs	r0, r1
    7916:	4098      	lsls	r0, r3
    7918:	469c      	mov	ip, r3
    791a:	4683      	mov	fp, r0
    791c:	4653      	mov	r3, sl
    791e:	0010      	movs	r0, r2
    7920:	40d8      	lsrs	r0, r3
    7922:	0003      	movs	r3, r0
    7924:	4658      	mov	r0, fp
    7926:	4318      	orrs	r0, r3
    7928:	4663      	mov	r3, ip
    792a:	409a      	lsls	r2, r3
    792c:	1e53      	subs	r3, r2, #1
    792e:	419a      	sbcs	r2, r3
    7930:	4653      	mov	r3, sl
    7932:	4302      	orrs	r2, r0
    7934:	40d9      	lsrs	r1, r3
    7936:	e703      	b.n	7740 <__aeabi_dadd+0x1c0>
    7938:	0026      	movs	r6, r4
    793a:	433e      	orrs	r6, r7
    793c:	d006      	beq.n	794c <__aeabi_dadd+0x3cc>
    793e:	43eb      	mvns	r3, r5
    7940:	4699      	mov	r9, r3
    7942:	2b00      	cmp	r3, #0
    7944:	d0c7      	beq.n	78d6 <__aeabi_dadd+0x356>
    7946:	4e94      	ldr	r6, [pc, #592]	; (7b98 <__aeabi_dadd+0x618>)
    7948:	42b0      	cmp	r0, r6
    794a:	d1ac      	bne.n	78a6 <__aeabi_dadd+0x326>
    794c:	000c      	movs	r4, r1
    794e:	0017      	movs	r7, r2
    7950:	0006      	movs	r6, r0
    7952:	46d8      	mov	r8, fp
    7954:	e698      	b.n	7688 <__aeabi_dadd+0x108>
    7956:	4b90      	ldr	r3, [pc, #576]	; (7b98 <__aeabi_dadd+0x618>)
    7958:	459a      	cmp	sl, r3
    795a:	d00b      	beq.n	7974 <__aeabi_dadd+0x3f4>
    795c:	4682      	mov	sl, r0
    795e:	e6e7      	b.n	7730 <__aeabi_dadd+0x1b0>
    7960:	2800      	cmp	r0, #0
    7962:	d000      	beq.n	7966 <__aeabi_dadd+0x3e6>
    7964:	e09e      	b.n	7aa4 <__aeabi_dadd+0x524>
    7966:	0018      	movs	r0, r3
    7968:	4310      	orrs	r0, r2
    796a:	d100      	bne.n	796e <__aeabi_dadd+0x3ee>
    796c:	e0e9      	b.n	7b42 <__aeabi_dadd+0x5c2>
    796e:	001c      	movs	r4, r3
    7970:	0017      	movs	r7, r2
    7972:	46d8      	mov	r8, fp
    7974:	4e88      	ldr	r6, [pc, #544]	; (7b98 <__aeabi_dadd+0x618>)
    7976:	e687      	b.n	7688 <__aeabi_dadd+0x108>
    7978:	2500      	movs	r5, #0
    797a:	e772      	b.n	7862 <__aeabi_dadd+0x2e2>
    797c:	2100      	movs	r1, #0
    797e:	e782      	b.n	7886 <__aeabi_dadd+0x306>
    7980:	0023      	movs	r3, r4
    7982:	433b      	orrs	r3, r7
    7984:	2e00      	cmp	r6, #0
    7986:	d000      	beq.n	798a <__aeabi_dadd+0x40a>
    7988:	e0ab      	b.n	7ae2 <__aeabi_dadd+0x562>
    798a:	2b00      	cmp	r3, #0
    798c:	d100      	bne.n	7990 <__aeabi_dadd+0x410>
    798e:	e0e7      	b.n	7b60 <__aeabi_dadd+0x5e0>
    7990:	000b      	movs	r3, r1
    7992:	4313      	orrs	r3, r2
    7994:	d100      	bne.n	7998 <__aeabi_dadd+0x418>
    7996:	e677      	b.n	7688 <__aeabi_dadd+0x108>
    7998:	18ba      	adds	r2, r7, r2
    799a:	42ba      	cmp	r2, r7
    799c:	41bf      	sbcs	r7, r7
    799e:	1864      	adds	r4, r4, r1
    79a0:	427f      	negs	r7, r7
    79a2:	19e4      	adds	r4, r4, r7
    79a4:	0223      	lsls	r3, r4, #8
    79a6:	d400      	bmi.n	79aa <__aeabi_dadd+0x42a>
    79a8:	e0f2      	b.n	7b90 <__aeabi_dadd+0x610>
    79aa:	4b7c      	ldr	r3, [pc, #496]	; (7b9c <__aeabi_dadd+0x61c>)
    79ac:	0017      	movs	r7, r2
    79ae:	401c      	ands	r4, r3
    79b0:	0006      	movs	r6, r0
    79b2:	e669      	b.n	7688 <__aeabi_dadd+0x108>
    79b4:	0020      	movs	r0, r4
    79b6:	4338      	orrs	r0, r7
    79b8:	2e00      	cmp	r6, #0
    79ba:	d1d1      	bne.n	7960 <__aeabi_dadd+0x3e0>
    79bc:	2800      	cmp	r0, #0
    79be:	d15b      	bne.n	7a78 <__aeabi_dadd+0x4f8>
    79c0:	001c      	movs	r4, r3
    79c2:	4314      	orrs	r4, r2
    79c4:	d100      	bne.n	79c8 <__aeabi_dadd+0x448>
    79c6:	e0a8      	b.n	7b1a <__aeabi_dadd+0x59a>
    79c8:	001c      	movs	r4, r3
    79ca:	0017      	movs	r7, r2
    79cc:	46d8      	mov	r8, fp
    79ce:	e65b      	b.n	7688 <__aeabi_dadd+0x108>
    79d0:	0006      	movs	r6, r0
    79d2:	2400      	movs	r4, #0
    79d4:	2700      	movs	r7, #0
    79d6:	e697      	b.n	7708 <__aeabi_dadd+0x188>
    79d8:	4650      	mov	r0, sl
    79da:	000b      	movs	r3, r1
    79dc:	3820      	subs	r0, #32
    79de:	40c3      	lsrs	r3, r0
    79e0:	4699      	mov	r9, r3
    79e2:	4653      	mov	r3, sl
    79e4:	2b20      	cmp	r3, #32
    79e6:	d100      	bne.n	79ea <__aeabi_dadd+0x46a>
    79e8:	e095      	b.n	7b16 <__aeabi_dadd+0x596>
    79ea:	2340      	movs	r3, #64	; 0x40
    79ec:	4650      	mov	r0, sl
    79ee:	1a1b      	subs	r3, r3, r0
    79f0:	4099      	lsls	r1, r3
    79f2:	430a      	orrs	r2, r1
    79f4:	1e51      	subs	r1, r2, #1
    79f6:	418a      	sbcs	r2, r1
    79f8:	464b      	mov	r3, r9
    79fa:	2100      	movs	r1, #0
    79fc:	431a      	orrs	r2, r3
    79fe:	e69f      	b.n	7740 <__aeabi_dadd+0x1c0>
    7a00:	2e00      	cmp	r6, #0
    7a02:	d130      	bne.n	7a66 <__aeabi_dadd+0x4e6>
    7a04:	0026      	movs	r6, r4
    7a06:	433e      	orrs	r6, r7
    7a08:	d067      	beq.n	7ada <__aeabi_dadd+0x55a>
    7a0a:	43db      	mvns	r3, r3
    7a0c:	469a      	mov	sl, r3
    7a0e:	2b00      	cmp	r3, #0
    7a10:	d01c      	beq.n	7a4c <__aeabi_dadd+0x4cc>
    7a12:	4e61      	ldr	r6, [pc, #388]	; (7b98 <__aeabi_dadd+0x618>)
    7a14:	42b0      	cmp	r0, r6
    7a16:	d060      	beq.n	7ada <__aeabi_dadd+0x55a>
    7a18:	4653      	mov	r3, sl
    7a1a:	2b38      	cmp	r3, #56	; 0x38
    7a1c:	dd00      	ble.n	7a20 <__aeabi_dadd+0x4a0>
    7a1e:	e096      	b.n	7b4e <__aeabi_dadd+0x5ce>
    7a20:	2b1f      	cmp	r3, #31
    7a22:	dd00      	ble.n	7a26 <__aeabi_dadd+0x4a6>
    7a24:	e09f      	b.n	7b66 <__aeabi_dadd+0x5e6>
    7a26:	2620      	movs	r6, #32
    7a28:	1af3      	subs	r3, r6, r3
    7a2a:	0026      	movs	r6, r4
    7a2c:	409e      	lsls	r6, r3
    7a2e:	469c      	mov	ip, r3
    7a30:	46b3      	mov	fp, r6
    7a32:	4653      	mov	r3, sl
    7a34:	003e      	movs	r6, r7
    7a36:	40de      	lsrs	r6, r3
    7a38:	0033      	movs	r3, r6
    7a3a:	465e      	mov	r6, fp
    7a3c:	431e      	orrs	r6, r3
    7a3e:	4663      	mov	r3, ip
    7a40:	409f      	lsls	r7, r3
    7a42:	1e7b      	subs	r3, r7, #1
    7a44:	419f      	sbcs	r7, r3
    7a46:	4653      	mov	r3, sl
    7a48:	40dc      	lsrs	r4, r3
    7a4a:	4337      	orrs	r7, r6
    7a4c:	18bf      	adds	r7, r7, r2
    7a4e:	4297      	cmp	r7, r2
    7a50:	4192      	sbcs	r2, r2
    7a52:	1864      	adds	r4, r4, r1
    7a54:	4252      	negs	r2, r2
    7a56:	18a4      	adds	r4, r4, r2
    7a58:	0006      	movs	r6, r0
    7a5a:	e678      	b.n	774e <__aeabi_dadd+0x1ce>
    7a5c:	4327      	orrs	r7, r4
    7a5e:	1e7c      	subs	r4, r7, #1
    7a60:	41a7      	sbcs	r7, r4
    7a62:	2400      	movs	r4, #0
    7a64:	e737      	b.n	78d6 <__aeabi_dadd+0x356>
    7a66:	4e4c      	ldr	r6, [pc, #304]	; (7b98 <__aeabi_dadd+0x618>)
    7a68:	42b0      	cmp	r0, r6
    7a6a:	d036      	beq.n	7ada <__aeabi_dadd+0x55a>
    7a6c:	2680      	movs	r6, #128	; 0x80
    7a6e:	425b      	negs	r3, r3
    7a70:	0436      	lsls	r6, r6, #16
    7a72:	469a      	mov	sl, r3
    7a74:	4334      	orrs	r4, r6
    7a76:	e7cf      	b.n	7a18 <__aeabi_dadd+0x498>
    7a78:	0018      	movs	r0, r3
    7a7a:	4310      	orrs	r0, r2
    7a7c:	d100      	bne.n	7a80 <__aeabi_dadd+0x500>
    7a7e:	e603      	b.n	7688 <__aeabi_dadd+0x108>
    7a80:	1ab8      	subs	r0, r7, r2
    7a82:	4684      	mov	ip, r0
    7a84:	4567      	cmp	r7, ip
    7a86:	41ad      	sbcs	r5, r5
    7a88:	1ae0      	subs	r0, r4, r3
    7a8a:	426d      	negs	r5, r5
    7a8c:	1b40      	subs	r0, r0, r5
    7a8e:	0205      	lsls	r5, r0, #8
    7a90:	d400      	bmi.n	7a94 <__aeabi_dadd+0x514>
    7a92:	e62c      	b.n	76ee <__aeabi_dadd+0x16e>
    7a94:	1bd7      	subs	r7, r2, r7
    7a96:	42ba      	cmp	r2, r7
    7a98:	4192      	sbcs	r2, r2
    7a9a:	1b1c      	subs	r4, r3, r4
    7a9c:	4252      	negs	r2, r2
    7a9e:	1aa4      	subs	r4, r4, r2
    7aa0:	46d8      	mov	r8, fp
    7aa2:	e5f1      	b.n	7688 <__aeabi_dadd+0x108>
    7aa4:	0018      	movs	r0, r3
    7aa6:	4310      	orrs	r0, r2
    7aa8:	d100      	bne.n	7aac <__aeabi_dadd+0x52c>
    7aaa:	e763      	b.n	7974 <__aeabi_dadd+0x3f4>
    7aac:	08f8      	lsrs	r0, r7, #3
    7aae:	0767      	lsls	r7, r4, #29
    7ab0:	4307      	orrs	r7, r0
    7ab2:	2080      	movs	r0, #128	; 0x80
    7ab4:	08e4      	lsrs	r4, r4, #3
    7ab6:	0300      	lsls	r0, r0, #12
    7ab8:	4204      	tst	r4, r0
    7aba:	d008      	beq.n	7ace <__aeabi_dadd+0x54e>
    7abc:	08dd      	lsrs	r5, r3, #3
    7abe:	4205      	tst	r5, r0
    7ac0:	d105      	bne.n	7ace <__aeabi_dadd+0x54e>
    7ac2:	08d2      	lsrs	r2, r2, #3
    7ac4:	0759      	lsls	r1, r3, #29
    7ac6:	4311      	orrs	r1, r2
    7ac8:	000f      	movs	r7, r1
    7aca:	002c      	movs	r4, r5
    7acc:	46d8      	mov	r8, fp
    7ace:	0f7b      	lsrs	r3, r7, #29
    7ad0:	00e4      	lsls	r4, r4, #3
    7ad2:	431c      	orrs	r4, r3
    7ad4:	00ff      	lsls	r7, r7, #3
    7ad6:	4e30      	ldr	r6, [pc, #192]	; (7b98 <__aeabi_dadd+0x618>)
    7ad8:	e5d6      	b.n	7688 <__aeabi_dadd+0x108>
    7ada:	000c      	movs	r4, r1
    7adc:	0017      	movs	r7, r2
    7ade:	0006      	movs	r6, r0
    7ae0:	e5d2      	b.n	7688 <__aeabi_dadd+0x108>
    7ae2:	2b00      	cmp	r3, #0
    7ae4:	d038      	beq.n	7b58 <__aeabi_dadd+0x5d8>
    7ae6:	000b      	movs	r3, r1
    7ae8:	4313      	orrs	r3, r2
    7aea:	d100      	bne.n	7aee <__aeabi_dadd+0x56e>
    7aec:	e742      	b.n	7974 <__aeabi_dadd+0x3f4>
    7aee:	08f8      	lsrs	r0, r7, #3
    7af0:	0767      	lsls	r7, r4, #29
    7af2:	4307      	orrs	r7, r0
    7af4:	2080      	movs	r0, #128	; 0x80
    7af6:	08e4      	lsrs	r4, r4, #3
    7af8:	0300      	lsls	r0, r0, #12
    7afa:	4204      	tst	r4, r0
    7afc:	d0e7      	beq.n	7ace <__aeabi_dadd+0x54e>
    7afe:	08cb      	lsrs	r3, r1, #3
    7b00:	4203      	tst	r3, r0
    7b02:	d1e4      	bne.n	7ace <__aeabi_dadd+0x54e>
    7b04:	08d2      	lsrs	r2, r2, #3
    7b06:	0749      	lsls	r1, r1, #29
    7b08:	4311      	orrs	r1, r2
    7b0a:	000f      	movs	r7, r1
    7b0c:	001c      	movs	r4, r3
    7b0e:	e7de      	b.n	7ace <__aeabi_dadd+0x54e>
    7b10:	2700      	movs	r7, #0
    7b12:	2400      	movs	r4, #0
    7b14:	e5d5      	b.n	76c2 <__aeabi_dadd+0x142>
    7b16:	2100      	movs	r1, #0
    7b18:	e76b      	b.n	79f2 <__aeabi_dadd+0x472>
    7b1a:	2500      	movs	r5, #0
    7b1c:	2700      	movs	r7, #0
    7b1e:	e5f3      	b.n	7708 <__aeabi_dadd+0x188>
    7b20:	464e      	mov	r6, r9
    7b22:	0025      	movs	r5, r4
    7b24:	3e20      	subs	r6, #32
    7b26:	40f5      	lsrs	r5, r6
    7b28:	464b      	mov	r3, r9
    7b2a:	002e      	movs	r6, r5
    7b2c:	2b20      	cmp	r3, #32
    7b2e:	d02d      	beq.n	7b8c <__aeabi_dadd+0x60c>
    7b30:	2540      	movs	r5, #64	; 0x40
    7b32:	1aed      	subs	r5, r5, r3
    7b34:	40ac      	lsls	r4, r5
    7b36:	4327      	orrs	r7, r4
    7b38:	1e7c      	subs	r4, r7, #1
    7b3a:	41a7      	sbcs	r7, r4
    7b3c:	2400      	movs	r4, #0
    7b3e:	4337      	orrs	r7, r6
    7b40:	e6c9      	b.n	78d6 <__aeabi_dadd+0x356>
    7b42:	2480      	movs	r4, #128	; 0x80
    7b44:	2500      	movs	r5, #0
    7b46:	0324      	lsls	r4, r4, #12
    7b48:	4e13      	ldr	r6, [pc, #76]	; (7b98 <__aeabi_dadd+0x618>)
    7b4a:	2700      	movs	r7, #0
    7b4c:	e5dc      	b.n	7708 <__aeabi_dadd+0x188>
    7b4e:	4327      	orrs	r7, r4
    7b50:	1e7c      	subs	r4, r7, #1
    7b52:	41a7      	sbcs	r7, r4
    7b54:	2400      	movs	r4, #0
    7b56:	e779      	b.n	7a4c <__aeabi_dadd+0x4cc>
    7b58:	000c      	movs	r4, r1
    7b5a:	0017      	movs	r7, r2
    7b5c:	4e0e      	ldr	r6, [pc, #56]	; (7b98 <__aeabi_dadd+0x618>)
    7b5e:	e593      	b.n	7688 <__aeabi_dadd+0x108>
    7b60:	000c      	movs	r4, r1
    7b62:	0017      	movs	r7, r2
    7b64:	e590      	b.n	7688 <__aeabi_dadd+0x108>
    7b66:	4656      	mov	r6, sl
    7b68:	0023      	movs	r3, r4
    7b6a:	3e20      	subs	r6, #32
    7b6c:	40f3      	lsrs	r3, r6
    7b6e:	4699      	mov	r9, r3
    7b70:	4653      	mov	r3, sl
    7b72:	2b20      	cmp	r3, #32
    7b74:	d00e      	beq.n	7b94 <__aeabi_dadd+0x614>
    7b76:	2340      	movs	r3, #64	; 0x40
    7b78:	4656      	mov	r6, sl
    7b7a:	1b9b      	subs	r3, r3, r6
    7b7c:	409c      	lsls	r4, r3
    7b7e:	4327      	orrs	r7, r4
    7b80:	1e7c      	subs	r4, r7, #1
    7b82:	41a7      	sbcs	r7, r4
    7b84:	464b      	mov	r3, r9
    7b86:	2400      	movs	r4, #0
    7b88:	431f      	orrs	r7, r3
    7b8a:	e75f      	b.n	7a4c <__aeabi_dadd+0x4cc>
    7b8c:	2400      	movs	r4, #0
    7b8e:	e7d2      	b.n	7b36 <__aeabi_dadd+0x5b6>
    7b90:	0017      	movs	r7, r2
    7b92:	e5b2      	b.n	76fa <__aeabi_dadd+0x17a>
    7b94:	2400      	movs	r4, #0
    7b96:	e7f2      	b.n	7b7e <__aeabi_dadd+0x5fe>
    7b98:	000007ff 	.word	0x000007ff
    7b9c:	ff7fffff 	.word	0xff7fffff

00007ba0 <__aeabi_ddiv>:
    7ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
    7ba2:	4657      	mov	r7, sl
    7ba4:	4645      	mov	r5, r8
    7ba6:	46de      	mov	lr, fp
    7ba8:	464e      	mov	r6, r9
    7baa:	b5e0      	push	{r5, r6, r7, lr}
    7bac:	004c      	lsls	r4, r1, #1
    7bae:	030e      	lsls	r6, r1, #12
    7bb0:	b087      	sub	sp, #28
    7bb2:	4683      	mov	fp, r0
    7bb4:	4692      	mov	sl, r2
    7bb6:	001d      	movs	r5, r3
    7bb8:	4680      	mov	r8, r0
    7bba:	0b36      	lsrs	r6, r6, #12
    7bbc:	0d64      	lsrs	r4, r4, #21
    7bbe:	0fcf      	lsrs	r7, r1, #31
    7bc0:	2c00      	cmp	r4, #0
    7bc2:	d04f      	beq.n	7c64 <__aeabi_ddiv+0xc4>
    7bc4:	4b6f      	ldr	r3, [pc, #444]	; (7d84 <__aeabi_ddiv+0x1e4>)
    7bc6:	429c      	cmp	r4, r3
    7bc8:	d035      	beq.n	7c36 <__aeabi_ddiv+0x96>
    7bca:	2380      	movs	r3, #128	; 0x80
    7bcc:	0f42      	lsrs	r2, r0, #29
    7bce:	041b      	lsls	r3, r3, #16
    7bd0:	00f6      	lsls	r6, r6, #3
    7bd2:	4313      	orrs	r3, r2
    7bd4:	4333      	orrs	r3, r6
    7bd6:	4699      	mov	r9, r3
    7bd8:	00c3      	lsls	r3, r0, #3
    7bda:	4698      	mov	r8, r3
    7bdc:	4b6a      	ldr	r3, [pc, #424]	; (7d88 <__aeabi_ddiv+0x1e8>)
    7bde:	2600      	movs	r6, #0
    7be0:	469c      	mov	ip, r3
    7be2:	2300      	movs	r3, #0
    7be4:	4464      	add	r4, ip
    7be6:	9303      	str	r3, [sp, #12]
    7be8:	032b      	lsls	r3, r5, #12
    7bea:	0b1b      	lsrs	r3, r3, #12
    7bec:	469b      	mov	fp, r3
    7bee:	006b      	lsls	r3, r5, #1
    7bf0:	0fed      	lsrs	r5, r5, #31
    7bf2:	4650      	mov	r0, sl
    7bf4:	0d5b      	lsrs	r3, r3, #21
    7bf6:	9501      	str	r5, [sp, #4]
    7bf8:	d05e      	beq.n	7cb8 <__aeabi_ddiv+0x118>
    7bfa:	4a62      	ldr	r2, [pc, #392]	; (7d84 <__aeabi_ddiv+0x1e4>)
    7bfc:	4293      	cmp	r3, r2
    7bfe:	d053      	beq.n	7ca8 <__aeabi_ddiv+0x108>
    7c00:	465a      	mov	r2, fp
    7c02:	00d1      	lsls	r1, r2, #3
    7c04:	2280      	movs	r2, #128	; 0x80
    7c06:	0f40      	lsrs	r0, r0, #29
    7c08:	0412      	lsls	r2, r2, #16
    7c0a:	4302      	orrs	r2, r0
    7c0c:	430a      	orrs	r2, r1
    7c0e:	4693      	mov	fp, r2
    7c10:	4652      	mov	r2, sl
    7c12:	00d1      	lsls	r1, r2, #3
    7c14:	4a5c      	ldr	r2, [pc, #368]	; (7d88 <__aeabi_ddiv+0x1e8>)
    7c16:	4694      	mov	ip, r2
    7c18:	2200      	movs	r2, #0
    7c1a:	4463      	add	r3, ip
    7c1c:	0038      	movs	r0, r7
    7c1e:	4068      	eors	r0, r5
    7c20:	4684      	mov	ip, r0
    7c22:	9002      	str	r0, [sp, #8]
    7c24:	1ae4      	subs	r4, r4, r3
    7c26:	4316      	orrs	r6, r2
    7c28:	2e0f      	cmp	r6, #15
    7c2a:	d900      	bls.n	7c2e <__aeabi_ddiv+0x8e>
    7c2c:	e0b4      	b.n	7d98 <__aeabi_ddiv+0x1f8>
    7c2e:	4b57      	ldr	r3, [pc, #348]	; (7d8c <__aeabi_ddiv+0x1ec>)
    7c30:	00b6      	lsls	r6, r6, #2
    7c32:	599b      	ldr	r3, [r3, r6]
    7c34:	469f      	mov	pc, r3
    7c36:	0003      	movs	r3, r0
    7c38:	4333      	orrs	r3, r6
    7c3a:	4699      	mov	r9, r3
    7c3c:	d16c      	bne.n	7d18 <__aeabi_ddiv+0x178>
    7c3e:	2300      	movs	r3, #0
    7c40:	4698      	mov	r8, r3
    7c42:	3302      	adds	r3, #2
    7c44:	2608      	movs	r6, #8
    7c46:	9303      	str	r3, [sp, #12]
    7c48:	e7ce      	b.n	7be8 <__aeabi_ddiv+0x48>
    7c4a:	46cb      	mov	fp, r9
    7c4c:	4641      	mov	r1, r8
    7c4e:	9a03      	ldr	r2, [sp, #12]
    7c50:	9701      	str	r7, [sp, #4]
    7c52:	2a02      	cmp	r2, #2
    7c54:	d165      	bne.n	7d22 <__aeabi_ddiv+0x182>
    7c56:	9b01      	ldr	r3, [sp, #4]
    7c58:	4c4a      	ldr	r4, [pc, #296]	; (7d84 <__aeabi_ddiv+0x1e4>)
    7c5a:	469c      	mov	ip, r3
    7c5c:	2300      	movs	r3, #0
    7c5e:	2200      	movs	r2, #0
    7c60:	4698      	mov	r8, r3
    7c62:	e06b      	b.n	7d3c <__aeabi_ddiv+0x19c>
    7c64:	0003      	movs	r3, r0
    7c66:	4333      	orrs	r3, r6
    7c68:	4699      	mov	r9, r3
    7c6a:	d04e      	beq.n	7d0a <__aeabi_ddiv+0x16a>
    7c6c:	2e00      	cmp	r6, #0
    7c6e:	d100      	bne.n	7c72 <__aeabi_ddiv+0xd2>
    7c70:	e1bc      	b.n	7fec <__aeabi_ddiv+0x44c>
    7c72:	0030      	movs	r0, r6
    7c74:	f001 fa7e 	bl	9174 <__clzsi2>
    7c78:	0003      	movs	r3, r0
    7c7a:	3b0b      	subs	r3, #11
    7c7c:	2b1c      	cmp	r3, #28
    7c7e:	dd00      	ble.n	7c82 <__aeabi_ddiv+0xe2>
    7c80:	e1ac      	b.n	7fdc <__aeabi_ddiv+0x43c>
    7c82:	221d      	movs	r2, #29
    7c84:	1ad3      	subs	r3, r2, r3
    7c86:	465a      	mov	r2, fp
    7c88:	0001      	movs	r1, r0
    7c8a:	40da      	lsrs	r2, r3
    7c8c:	3908      	subs	r1, #8
    7c8e:	408e      	lsls	r6, r1
    7c90:	0013      	movs	r3, r2
    7c92:	4333      	orrs	r3, r6
    7c94:	4699      	mov	r9, r3
    7c96:	465b      	mov	r3, fp
    7c98:	408b      	lsls	r3, r1
    7c9a:	4698      	mov	r8, r3
    7c9c:	2300      	movs	r3, #0
    7c9e:	4c3c      	ldr	r4, [pc, #240]	; (7d90 <__aeabi_ddiv+0x1f0>)
    7ca0:	2600      	movs	r6, #0
    7ca2:	1a24      	subs	r4, r4, r0
    7ca4:	9303      	str	r3, [sp, #12]
    7ca6:	e79f      	b.n	7be8 <__aeabi_ddiv+0x48>
    7ca8:	4651      	mov	r1, sl
    7caa:	465a      	mov	r2, fp
    7cac:	4311      	orrs	r1, r2
    7cae:	d129      	bne.n	7d04 <__aeabi_ddiv+0x164>
    7cb0:	2200      	movs	r2, #0
    7cb2:	4693      	mov	fp, r2
    7cb4:	3202      	adds	r2, #2
    7cb6:	e7b1      	b.n	7c1c <__aeabi_ddiv+0x7c>
    7cb8:	4659      	mov	r1, fp
    7cba:	4301      	orrs	r1, r0
    7cbc:	d01e      	beq.n	7cfc <__aeabi_ddiv+0x15c>
    7cbe:	465b      	mov	r3, fp
    7cc0:	2b00      	cmp	r3, #0
    7cc2:	d100      	bne.n	7cc6 <__aeabi_ddiv+0x126>
    7cc4:	e19e      	b.n	8004 <__aeabi_ddiv+0x464>
    7cc6:	4658      	mov	r0, fp
    7cc8:	f001 fa54 	bl	9174 <__clzsi2>
    7ccc:	0003      	movs	r3, r0
    7cce:	3b0b      	subs	r3, #11
    7cd0:	2b1c      	cmp	r3, #28
    7cd2:	dd00      	ble.n	7cd6 <__aeabi_ddiv+0x136>
    7cd4:	e18f      	b.n	7ff6 <__aeabi_ddiv+0x456>
    7cd6:	0002      	movs	r2, r0
    7cd8:	4659      	mov	r1, fp
    7cda:	3a08      	subs	r2, #8
    7cdc:	4091      	lsls	r1, r2
    7cde:	468b      	mov	fp, r1
    7ce0:	211d      	movs	r1, #29
    7ce2:	1acb      	subs	r3, r1, r3
    7ce4:	4651      	mov	r1, sl
    7ce6:	40d9      	lsrs	r1, r3
    7ce8:	000b      	movs	r3, r1
    7cea:	4659      	mov	r1, fp
    7cec:	430b      	orrs	r3, r1
    7cee:	4651      	mov	r1, sl
    7cf0:	469b      	mov	fp, r3
    7cf2:	4091      	lsls	r1, r2
    7cf4:	4b26      	ldr	r3, [pc, #152]	; (7d90 <__aeabi_ddiv+0x1f0>)
    7cf6:	2200      	movs	r2, #0
    7cf8:	1a1b      	subs	r3, r3, r0
    7cfa:	e78f      	b.n	7c1c <__aeabi_ddiv+0x7c>
    7cfc:	2300      	movs	r3, #0
    7cfe:	2201      	movs	r2, #1
    7d00:	469b      	mov	fp, r3
    7d02:	e78b      	b.n	7c1c <__aeabi_ddiv+0x7c>
    7d04:	4651      	mov	r1, sl
    7d06:	2203      	movs	r2, #3
    7d08:	e788      	b.n	7c1c <__aeabi_ddiv+0x7c>
    7d0a:	2300      	movs	r3, #0
    7d0c:	4698      	mov	r8, r3
    7d0e:	3301      	adds	r3, #1
    7d10:	2604      	movs	r6, #4
    7d12:	2400      	movs	r4, #0
    7d14:	9303      	str	r3, [sp, #12]
    7d16:	e767      	b.n	7be8 <__aeabi_ddiv+0x48>
    7d18:	2303      	movs	r3, #3
    7d1a:	46b1      	mov	r9, r6
    7d1c:	9303      	str	r3, [sp, #12]
    7d1e:	260c      	movs	r6, #12
    7d20:	e762      	b.n	7be8 <__aeabi_ddiv+0x48>
    7d22:	2a03      	cmp	r2, #3
    7d24:	d100      	bne.n	7d28 <__aeabi_ddiv+0x188>
    7d26:	e25c      	b.n	81e2 <__aeabi_ddiv+0x642>
    7d28:	9b01      	ldr	r3, [sp, #4]
    7d2a:	2a01      	cmp	r2, #1
    7d2c:	d000      	beq.n	7d30 <__aeabi_ddiv+0x190>
    7d2e:	e1e4      	b.n	80fa <__aeabi_ddiv+0x55a>
    7d30:	4013      	ands	r3, r2
    7d32:	469c      	mov	ip, r3
    7d34:	2300      	movs	r3, #0
    7d36:	2400      	movs	r4, #0
    7d38:	2200      	movs	r2, #0
    7d3a:	4698      	mov	r8, r3
    7d3c:	2100      	movs	r1, #0
    7d3e:	0312      	lsls	r2, r2, #12
    7d40:	0b13      	lsrs	r3, r2, #12
    7d42:	0d0a      	lsrs	r2, r1, #20
    7d44:	0512      	lsls	r2, r2, #20
    7d46:	431a      	orrs	r2, r3
    7d48:	0523      	lsls	r3, r4, #20
    7d4a:	4c12      	ldr	r4, [pc, #72]	; (7d94 <__aeabi_ddiv+0x1f4>)
    7d4c:	4640      	mov	r0, r8
    7d4e:	4022      	ands	r2, r4
    7d50:	4313      	orrs	r3, r2
    7d52:	4662      	mov	r2, ip
    7d54:	005b      	lsls	r3, r3, #1
    7d56:	07d2      	lsls	r2, r2, #31
    7d58:	085b      	lsrs	r3, r3, #1
    7d5a:	4313      	orrs	r3, r2
    7d5c:	0019      	movs	r1, r3
    7d5e:	b007      	add	sp, #28
    7d60:	bc3c      	pop	{r2, r3, r4, r5}
    7d62:	4690      	mov	r8, r2
    7d64:	4699      	mov	r9, r3
    7d66:	46a2      	mov	sl, r4
    7d68:	46ab      	mov	fp, r5
    7d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7d6c:	2300      	movs	r3, #0
    7d6e:	2280      	movs	r2, #128	; 0x80
    7d70:	469c      	mov	ip, r3
    7d72:	0312      	lsls	r2, r2, #12
    7d74:	4698      	mov	r8, r3
    7d76:	4c03      	ldr	r4, [pc, #12]	; (7d84 <__aeabi_ddiv+0x1e4>)
    7d78:	e7e0      	b.n	7d3c <__aeabi_ddiv+0x19c>
    7d7a:	2300      	movs	r3, #0
    7d7c:	4c01      	ldr	r4, [pc, #4]	; (7d84 <__aeabi_ddiv+0x1e4>)
    7d7e:	2200      	movs	r2, #0
    7d80:	4698      	mov	r8, r3
    7d82:	e7db      	b.n	7d3c <__aeabi_ddiv+0x19c>
    7d84:	000007ff 	.word	0x000007ff
    7d88:	fffffc01 	.word	0xfffffc01
    7d8c:	0000e368 	.word	0x0000e368
    7d90:	fffffc0d 	.word	0xfffffc0d
    7d94:	800fffff 	.word	0x800fffff
    7d98:	45d9      	cmp	r9, fp
    7d9a:	d900      	bls.n	7d9e <__aeabi_ddiv+0x1fe>
    7d9c:	e139      	b.n	8012 <__aeabi_ddiv+0x472>
    7d9e:	d100      	bne.n	7da2 <__aeabi_ddiv+0x202>
    7da0:	e134      	b.n	800c <__aeabi_ddiv+0x46c>
    7da2:	2300      	movs	r3, #0
    7da4:	4646      	mov	r6, r8
    7da6:	464d      	mov	r5, r9
    7da8:	469a      	mov	sl, r3
    7daa:	3c01      	subs	r4, #1
    7dac:	465b      	mov	r3, fp
    7dae:	0e0a      	lsrs	r2, r1, #24
    7db0:	021b      	lsls	r3, r3, #8
    7db2:	431a      	orrs	r2, r3
    7db4:	020b      	lsls	r3, r1, #8
    7db6:	0c17      	lsrs	r7, r2, #16
    7db8:	9303      	str	r3, [sp, #12]
    7dba:	0413      	lsls	r3, r2, #16
    7dbc:	0c1b      	lsrs	r3, r3, #16
    7dbe:	0039      	movs	r1, r7
    7dc0:	0028      	movs	r0, r5
    7dc2:	4690      	mov	r8, r2
    7dc4:	9301      	str	r3, [sp, #4]
    7dc6:	f7fe fb9f 	bl	6508 <__udivsi3>
    7dca:	0002      	movs	r2, r0
    7dcc:	9b01      	ldr	r3, [sp, #4]
    7dce:	4683      	mov	fp, r0
    7dd0:	435a      	muls	r2, r3
    7dd2:	0028      	movs	r0, r5
    7dd4:	0039      	movs	r1, r7
    7dd6:	4691      	mov	r9, r2
    7dd8:	f7fe fc1c 	bl	6614 <__aeabi_uidivmod>
    7ddc:	0c35      	lsrs	r5, r6, #16
    7dde:	0409      	lsls	r1, r1, #16
    7de0:	430d      	orrs	r5, r1
    7de2:	45a9      	cmp	r9, r5
    7de4:	d90d      	bls.n	7e02 <__aeabi_ddiv+0x262>
    7de6:	465b      	mov	r3, fp
    7de8:	4445      	add	r5, r8
    7dea:	3b01      	subs	r3, #1
    7dec:	45a8      	cmp	r8, r5
    7dee:	d900      	bls.n	7df2 <__aeabi_ddiv+0x252>
    7df0:	e13a      	b.n	8068 <__aeabi_ddiv+0x4c8>
    7df2:	45a9      	cmp	r9, r5
    7df4:	d800      	bhi.n	7df8 <__aeabi_ddiv+0x258>
    7df6:	e137      	b.n	8068 <__aeabi_ddiv+0x4c8>
    7df8:	2302      	movs	r3, #2
    7dfa:	425b      	negs	r3, r3
    7dfc:	469c      	mov	ip, r3
    7dfe:	4445      	add	r5, r8
    7e00:	44e3      	add	fp, ip
    7e02:	464b      	mov	r3, r9
    7e04:	1aeb      	subs	r3, r5, r3
    7e06:	0039      	movs	r1, r7
    7e08:	0018      	movs	r0, r3
    7e0a:	9304      	str	r3, [sp, #16]
    7e0c:	f7fe fb7c 	bl	6508 <__udivsi3>
    7e10:	9b01      	ldr	r3, [sp, #4]
    7e12:	0005      	movs	r5, r0
    7e14:	4343      	muls	r3, r0
    7e16:	0039      	movs	r1, r7
    7e18:	9804      	ldr	r0, [sp, #16]
    7e1a:	4699      	mov	r9, r3
    7e1c:	f7fe fbfa 	bl	6614 <__aeabi_uidivmod>
    7e20:	0433      	lsls	r3, r6, #16
    7e22:	0409      	lsls	r1, r1, #16
    7e24:	0c1b      	lsrs	r3, r3, #16
    7e26:	430b      	orrs	r3, r1
    7e28:	4599      	cmp	r9, r3
    7e2a:	d909      	bls.n	7e40 <__aeabi_ddiv+0x2a0>
    7e2c:	4443      	add	r3, r8
    7e2e:	1e6a      	subs	r2, r5, #1
    7e30:	4598      	cmp	r8, r3
    7e32:	d900      	bls.n	7e36 <__aeabi_ddiv+0x296>
    7e34:	e11a      	b.n	806c <__aeabi_ddiv+0x4cc>
    7e36:	4599      	cmp	r9, r3
    7e38:	d800      	bhi.n	7e3c <__aeabi_ddiv+0x29c>
    7e3a:	e117      	b.n	806c <__aeabi_ddiv+0x4cc>
    7e3c:	3d02      	subs	r5, #2
    7e3e:	4443      	add	r3, r8
    7e40:	464a      	mov	r2, r9
    7e42:	1a9b      	subs	r3, r3, r2
    7e44:	465a      	mov	r2, fp
    7e46:	0412      	lsls	r2, r2, #16
    7e48:	432a      	orrs	r2, r5
    7e4a:	9903      	ldr	r1, [sp, #12]
    7e4c:	4693      	mov	fp, r2
    7e4e:	0c10      	lsrs	r0, r2, #16
    7e50:	0c0a      	lsrs	r2, r1, #16
    7e52:	4691      	mov	r9, r2
    7e54:	0409      	lsls	r1, r1, #16
    7e56:	465a      	mov	r2, fp
    7e58:	0c09      	lsrs	r1, r1, #16
    7e5a:	464e      	mov	r6, r9
    7e5c:	000d      	movs	r5, r1
    7e5e:	0412      	lsls	r2, r2, #16
    7e60:	0c12      	lsrs	r2, r2, #16
    7e62:	4345      	muls	r5, r0
    7e64:	9105      	str	r1, [sp, #20]
    7e66:	4351      	muls	r1, r2
    7e68:	4372      	muls	r2, r6
    7e6a:	4370      	muls	r0, r6
    7e6c:	1952      	adds	r2, r2, r5
    7e6e:	0c0e      	lsrs	r6, r1, #16
    7e70:	18b2      	adds	r2, r6, r2
    7e72:	4295      	cmp	r5, r2
    7e74:	d903      	bls.n	7e7e <__aeabi_ddiv+0x2de>
    7e76:	2580      	movs	r5, #128	; 0x80
    7e78:	026d      	lsls	r5, r5, #9
    7e7a:	46ac      	mov	ip, r5
    7e7c:	4460      	add	r0, ip
    7e7e:	0c15      	lsrs	r5, r2, #16
    7e80:	0409      	lsls	r1, r1, #16
    7e82:	0412      	lsls	r2, r2, #16
    7e84:	0c09      	lsrs	r1, r1, #16
    7e86:	1828      	adds	r0, r5, r0
    7e88:	1852      	adds	r2, r2, r1
    7e8a:	4283      	cmp	r3, r0
    7e8c:	d200      	bcs.n	7e90 <__aeabi_ddiv+0x2f0>
    7e8e:	e0ce      	b.n	802e <__aeabi_ddiv+0x48e>
    7e90:	d100      	bne.n	7e94 <__aeabi_ddiv+0x2f4>
    7e92:	e0c8      	b.n	8026 <__aeabi_ddiv+0x486>
    7e94:	1a1d      	subs	r5, r3, r0
    7e96:	4653      	mov	r3, sl
    7e98:	1a9e      	subs	r6, r3, r2
    7e9a:	45b2      	cmp	sl, r6
    7e9c:	4192      	sbcs	r2, r2
    7e9e:	4252      	negs	r2, r2
    7ea0:	1aab      	subs	r3, r5, r2
    7ea2:	469a      	mov	sl, r3
    7ea4:	4598      	cmp	r8, r3
    7ea6:	d100      	bne.n	7eaa <__aeabi_ddiv+0x30a>
    7ea8:	e117      	b.n	80da <__aeabi_ddiv+0x53a>
    7eaa:	0039      	movs	r1, r7
    7eac:	0018      	movs	r0, r3
    7eae:	f7fe fb2b 	bl	6508 <__udivsi3>
    7eb2:	9b01      	ldr	r3, [sp, #4]
    7eb4:	0005      	movs	r5, r0
    7eb6:	4343      	muls	r3, r0
    7eb8:	0039      	movs	r1, r7
    7eba:	4650      	mov	r0, sl
    7ebc:	9304      	str	r3, [sp, #16]
    7ebe:	f7fe fba9 	bl	6614 <__aeabi_uidivmod>
    7ec2:	9804      	ldr	r0, [sp, #16]
    7ec4:	040b      	lsls	r3, r1, #16
    7ec6:	0c31      	lsrs	r1, r6, #16
    7ec8:	4319      	orrs	r1, r3
    7eca:	4288      	cmp	r0, r1
    7ecc:	d909      	bls.n	7ee2 <__aeabi_ddiv+0x342>
    7ece:	4441      	add	r1, r8
    7ed0:	1e6b      	subs	r3, r5, #1
    7ed2:	4588      	cmp	r8, r1
    7ed4:	d900      	bls.n	7ed8 <__aeabi_ddiv+0x338>
    7ed6:	e107      	b.n	80e8 <__aeabi_ddiv+0x548>
    7ed8:	4288      	cmp	r0, r1
    7eda:	d800      	bhi.n	7ede <__aeabi_ddiv+0x33e>
    7edc:	e104      	b.n	80e8 <__aeabi_ddiv+0x548>
    7ede:	3d02      	subs	r5, #2
    7ee0:	4441      	add	r1, r8
    7ee2:	9b04      	ldr	r3, [sp, #16]
    7ee4:	1acb      	subs	r3, r1, r3
    7ee6:	0018      	movs	r0, r3
    7ee8:	0039      	movs	r1, r7
    7eea:	9304      	str	r3, [sp, #16]
    7eec:	f7fe fb0c 	bl	6508 <__udivsi3>
    7ef0:	9b01      	ldr	r3, [sp, #4]
    7ef2:	4682      	mov	sl, r0
    7ef4:	4343      	muls	r3, r0
    7ef6:	0039      	movs	r1, r7
    7ef8:	9804      	ldr	r0, [sp, #16]
    7efa:	9301      	str	r3, [sp, #4]
    7efc:	f7fe fb8a 	bl	6614 <__aeabi_uidivmod>
    7f00:	9801      	ldr	r0, [sp, #4]
    7f02:	040b      	lsls	r3, r1, #16
    7f04:	0431      	lsls	r1, r6, #16
    7f06:	0c09      	lsrs	r1, r1, #16
    7f08:	4319      	orrs	r1, r3
    7f0a:	4288      	cmp	r0, r1
    7f0c:	d90d      	bls.n	7f2a <__aeabi_ddiv+0x38a>
    7f0e:	4653      	mov	r3, sl
    7f10:	4441      	add	r1, r8
    7f12:	3b01      	subs	r3, #1
    7f14:	4588      	cmp	r8, r1
    7f16:	d900      	bls.n	7f1a <__aeabi_ddiv+0x37a>
    7f18:	e0e8      	b.n	80ec <__aeabi_ddiv+0x54c>
    7f1a:	4288      	cmp	r0, r1
    7f1c:	d800      	bhi.n	7f20 <__aeabi_ddiv+0x380>
    7f1e:	e0e5      	b.n	80ec <__aeabi_ddiv+0x54c>
    7f20:	2302      	movs	r3, #2
    7f22:	425b      	negs	r3, r3
    7f24:	469c      	mov	ip, r3
    7f26:	4441      	add	r1, r8
    7f28:	44e2      	add	sl, ip
    7f2a:	9b01      	ldr	r3, [sp, #4]
    7f2c:	042d      	lsls	r5, r5, #16
    7f2e:	1ace      	subs	r6, r1, r3
    7f30:	4651      	mov	r1, sl
    7f32:	4329      	orrs	r1, r5
    7f34:	9d05      	ldr	r5, [sp, #20]
    7f36:	464f      	mov	r7, r9
    7f38:	002a      	movs	r2, r5
    7f3a:	040b      	lsls	r3, r1, #16
    7f3c:	0c08      	lsrs	r0, r1, #16
    7f3e:	0c1b      	lsrs	r3, r3, #16
    7f40:	435a      	muls	r2, r3
    7f42:	4345      	muls	r5, r0
    7f44:	437b      	muls	r3, r7
    7f46:	4378      	muls	r0, r7
    7f48:	195b      	adds	r3, r3, r5
    7f4a:	0c17      	lsrs	r7, r2, #16
    7f4c:	18fb      	adds	r3, r7, r3
    7f4e:	429d      	cmp	r5, r3
    7f50:	d903      	bls.n	7f5a <__aeabi_ddiv+0x3ba>
    7f52:	2580      	movs	r5, #128	; 0x80
    7f54:	026d      	lsls	r5, r5, #9
    7f56:	46ac      	mov	ip, r5
    7f58:	4460      	add	r0, ip
    7f5a:	0c1d      	lsrs	r5, r3, #16
    7f5c:	0412      	lsls	r2, r2, #16
    7f5e:	041b      	lsls	r3, r3, #16
    7f60:	0c12      	lsrs	r2, r2, #16
    7f62:	1828      	adds	r0, r5, r0
    7f64:	189b      	adds	r3, r3, r2
    7f66:	4286      	cmp	r6, r0
    7f68:	d200      	bcs.n	7f6c <__aeabi_ddiv+0x3cc>
    7f6a:	e093      	b.n	8094 <__aeabi_ddiv+0x4f4>
    7f6c:	d100      	bne.n	7f70 <__aeabi_ddiv+0x3d0>
    7f6e:	e08e      	b.n	808e <__aeabi_ddiv+0x4ee>
    7f70:	2301      	movs	r3, #1
    7f72:	4319      	orrs	r1, r3
    7f74:	4ba0      	ldr	r3, [pc, #640]	; (81f8 <__aeabi_ddiv+0x658>)
    7f76:	18e3      	adds	r3, r4, r3
    7f78:	2b00      	cmp	r3, #0
    7f7a:	dc00      	bgt.n	7f7e <__aeabi_ddiv+0x3de>
    7f7c:	e099      	b.n	80b2 <__aeabi_ddiv+0x512>
    7f7e:	074a      	lsls	r2, r1, #29
    7f80:	d000      	beq.n	7f84 <__aeabi_ddiv+0x3e4>
    7f82:	e09e      	b.n	80c2 <__aeabi_ddiv+0x522>
    7f84:	465a      	mov	r2, fp
    7f86:	01d2      	lsls	r2, r2, #7
    7f88:	d506      	bpl.n	7f98 <__aeabi_ddiv+0x3f8>
    7f8a:	465a      	mov	r2, fp
    7f8c:	4b9b      	ldr	r3, [pc, #620]	; (81fc <__aeabi_ddiv+0x65c>)
    7f8e:	401a      	ands	r2, r3
    7f90:	2380      	movs	r3, #128	; 0x80
    7f92:	4693      	mov	fp, r2
    7f94:	00db      	lsls	r3, r3, #3
    7f96:	18e3      	adds	r3, r4, r3
    7f98:	4a99      	ldr	r2, [pc, #612]	; (8200 <__aeabi_ddiv+0x660>)
    7f9a:	4293      	cmp	r3, r2
    7f9c:	dd68      	ble.n	8070 <__aeabi_ddiv+0x4d0>
    7f9e:	2301      	movs	r3, #1
    7fa0:	9a02      	ldr	r2, [sp, #8]
    7fa2:	4c98      	ldr	r4, [pc, #608]	; (8204 <__aeabi_ddiv+0x664>)
    7fa4:	401a      	ands	r2, r3
    7fa6:	2300      	movs	r3, #0
    7fa8:	4694      	mov	ip, r2
    7faa:	4698      	mov	r8, r3
    7fac:	2200      	movs	r2, #0
    7fae:	e6c5      	b.n	7d3c <__aeabi_ddiv+0x19c>
    7fb0:	2280      	movs	r2, #128	; 0x80
    7fb2:	464b      	mov	r3, r9
    7fb4:	0312      	lsls	r2, r2, #12
    7fb6:	4213      	tst	r3, r2
    7fb8:	d00a      	beq.n	7fd0 <__aeabi_ddiv+0x430>
    7fba:	465b      	mov	r3, fp
    7fbc:	4213      	tst	r3, r2
    7fbe:	d106      	bne.n	7fce <__aeabi_ddiv+0x42e>
    7fc0:	431a      	orrs	r2, r3
    7fc2:	0312      	lsls	r2, r2, #12
    7fc4:	0b12      	lsrs	r2, r2, #12
    7fc6:	46ac      	mov	ip, r5
    7fc8:	4688      	mov	r8, r1
    7fca:	4c8e      	ldr	r4, [pc, #568]	; (8204 <__aeabi_ddiv+0x664>)
    7fcc:	e6b6      	b.n	7d3c <__aeabi_ddiv+0x19c>
    7fce:	464b      	mov	r3, r9
    7fd0:	431a      	orrs	r2, r3
    7fd2:	0312      	lsls	r2, r2, #12
    7fd4:	0b12      	lsrs	r2, r2, #12
    7fd6:	46bc      	mov	ip, r7
    7fd8:	4c8a      	ldr	r4, [pc, #552]	; (8204 <__aeabi_ddiv+0x664>)
    7fda:	e6af      	b.n	7d3c <__aeabi_ddiv+0x19c>
    7fdc:	0003      	movs	r3, r0
    7fde:	465a      	mov	r2, fp
    7fe0:	3b28      	subs	r3, #40	; 0x28
    7fe2:	409a      	lsls	r2, r3
    7fe4:	2300      	movs	r3, #0
    7fe6:	4691      	mov	r9, r2
    7fe8:	4698      	mov	r8, r3
    7fea:	e657      	b.n	7c9c <__aeabi_ddiv+0xfc>
    7fec:	4658      	mov	r0, fp
    7fee:	f001 f8c1 	bl	9174 <__clzsi2>
    7ff2:	3020      	adds	r0, #32
    7ff4:	e640      	b.n	7c78 <__aeabi_ddiv+0xd8>
    7ff6:	0003      	movs	r3, r0
    7ff8:	4652      	mov	r2, sl
    7ffa:	3b28      	subs	r3, #40	; 0x28
    7ffc:	409a      	lsls	r2, r3
    7ffe:	2100      	movs	r1, #0
    8000:	4693      	mov	fp, r2
    8002:	e677      	b.n	7cf4 <__aeabi_ddiv+0x154>
    8004:	f001 f8b6 	bl	9174 <__clzsi2>
    8008:	3020      	adds	r0, #32
    800a:	e65f      	b.n	7ccc <__aeabi_ddiv+0x12c>
    800c:	4588      	cmp	r8, r1
    800e:	d200      	bcs.n	8012 <__aeabi_ddiv+0x472>
    8010:	e6c7      	b.n	7da2 <__aeabi_ddiv+0x202>
    8012:	464b      	mov	r3, r9
    8014:	07de      	lsls	r6, r3, #31
    8016:	085d      	lsrs	r5, r3, #1
    8018:	4643      	mov	r3, r8
    801a:	085b      	lsrs	r3, r3, #1
    801c:	431e      	orrs	r6, r3
    801e:	4643      	mov	r3, r8
    8020:	07db      	lsls	r3, r3, #31
    8022:	469a      	mov	sl, r3
    8024:	e6c2      	b.n	7dac <__aeabi_ddiv+0x20c>
    8026:	2500      	movs	r5, #0
    8028:	4592      	cmp	sl, r2
    802a:	d300      	bcc.n	802e <__aeabi_ddiv+0x48e>
    802c:	e733      	b.n	7e96 <__aeabi_ddiv+0x2f6>
    802e:	9e03      	ldr	r6, [sp, #12]
    8030:	4659      	mov	r1, fp
    8032:	46b4      	mov	ip, r6
    8034:	44e2      	add	sl, ip
    8036:	45b2      	cmp	sl, r6
    8038:	41ad      	sbcs	r5, r5
    803a:	426d      	negs	r5, r5
    803c:	4445      	add	r5, r8
    803e:	18eb      	adds	r3, r5, r3
    8040:	3901      	subs	r1, #1
    8042:	4598      	cmp	r8, r3
    8044:	d207      	bcs.n	8056 <__aeabi_ddiv+0x4b6>
    8046:	4298      	cmp	r0, r3
    8048:	d900      	bls.n	804c <__aeabi_ddiv+0x4ac>
    804a:	e07f      	b.n	814c <__aeabi_ddiv+0x5ac>
    804c:	d100      	bne.n	8050 <__aeabi_ddiv+0x4b0>
    804e:	e0bc      	b.n	81ca <__aeabi_ddiv+0x62a>
    8050:	1a1d      	subs	r5, r3, r0
    8052:	468b      	mov	fp, r1
    8054:	e71f      	b.n	7e96 <__aeabi_ddiv+0x2f6>
    8056:	4598      	cmp	r8, r3
    8058:	d1fa      	bne.n	8050 <__aeabi_ddiv+0x4b0>
    805a:	9d03      	ldr	r5, [sp, #12]
    805c:	4555      	cmp	r5, sl
    805e:	d9f2      	bls.n	8046 <__aeabi_ddiv+0x4a6>
    8060:	4643      	mov	r3, r8
    8062:	468b      	mov	fp, r1
    8064:	1a1d      	subs	r5, r3, r0
    8066:	e716      	b.n	7e96 <__aeabi_ddiv+0x2f6>
    8068:	469b      	mov	fp, r3
    806a:	e6ca      	b.n	7e02 <__aeabi_ddiv+0x262>
    806c:	0015      	movs	r5, r2
    806e:	e6e7      	b.n	7e40 <__aeabi_ddiv+0x2a0>
    8070:	465a      	mov	r2, fp
    8072:	08c9      	lsrs	r1, r1, #3
    8074:	0752      	lsls	r2, r2, #29
    8076:	430a      	orrs	r2, r1
    8078:	055b      	lsls	r3, r3, #21
    807a:	4690      	mov	r8, r2
    807c:	0d5c      	lsrs	r4, r3, #21
    807e:	465a      	mov	r2, fp
    8080:	2301      	movs	r3, #1
    8082:	9902      	ldr	r1, [sp, #8]
    8084:	0252      	lsls	r2, r2, #9
    8086:	4019      	ands	r1, r3
    8088:	0b12      	lsrs	r2, r2, #12
    808a:	468c      	mov	ip, r1
    808c:	e656      	b.n	7d3c <__aeabi_ddiv+0x19c>
    808e:	2b00      	cmp	r3, #0
    8090:	d100      	bne.n	8094 <__aeabi_ddiv+0x4f4>
    8092:	e76f      	b.n	7f74 <__aeabi_ddiv+0x3d4>
    8094:	4446      	add	r6, r8
    8096:	1e4a      	subs	r2, r1, #1
    8098:	45b0      	cmp	r8, r6
    809a:	d929      	bls.n	80f0 <__aeabi_ddiv+0x550>
    809c:	0011      	movs	r1, r2
    809e:	4286      	cmp	r6, r0
    80a0:	d000      	beq.n	80a4 <__aeabi_ddiv+0x504>
    80a2:	e765      	b.n	7f70 <__aeabi_ddiv+0x3d0>
    80a4:	9a03      	ldr	r2, [sp, #12]
    80a6:	4293      	cmp	r3, r2
    80a8:	d000      	beq.n	80ac <__aeabi_ddiv+0x50c>
    80aa:	e761      	b.n	7f70 <__aeabi_ddiv+0x3d0>
    80ac:	e762      	b.n	7f74 <__aeabi_ddiv+0x3d4>
    80ae:	2101      	movs	r1, #1
    80b0:	4249      	negs	r1, r1
    80b2:	2001      	movs	r0, #1
    80b4:	1ac2      	subs	r2, r0, r3
    80b6:	2a38      	cmp	r2, #56	; 0x38
    80b8:	dd21      	ble.n	80fe <__aeabi_ddiv+0x55e>
    80ba:	9b02      	ldr	r3, [sp, #8]
    80bc:	4003      	ands	r3, r0
    80be:	469c      	mov	ip, r3
    80c0:	e638      	b.n	7d34 <__aeabi_ddiv+0x194>
    80c2:	220f      	movs	r2, #15
    80c4:	400a      	ands	r2, r1
    80c6:	2a04      	cmp	r2, #4
    80c8:	d100      	bne.n	80cc <__aeabi_ddiv+0x52c>
    80ca:	e75b      	b.n	7f84 <__aeabi_ddiv+0x3e4>
    80cc:	000a      	movs	r2, r1
    80ce:	1d11      	adds	r1, r2, #4
    80d0:	4291      	cmp	r1, r2
    80d2:	4192      	sbcs	r2, r2
    80d4:	4252      	negs	r2, r2
    80d6:	4493      	add	fp, r2
    80d8:	e754      	b.n	7f84 <__aeabi_ddiv+0x3e4>
    80da:	4b47      	ldr	r3, [pc, #284]	; (81f8 <__aeabi_ddiv+0x658>)
    80dc:	18e3      	adds	r3, r4, r3
    80de:	2b00      	cmp	r3, #0
    80e0:	dde5      	ble.n	80ae <__aeabi_ddiv+0x50e>
    80e2:	2201      	movs	r2, #1
    80e4:	4252      	negs	r2, r2
    80e6:	e7f2      	b.n	80ce <__aeabi_ddiv+0x52e>
    80e8:	001d      	movs	r5, r3
    80ea:	e6fa      	b.n	7ee2 <__aeabi_ddiv+0x342>
    80ec:	469a      	mov	sl, r3
    80ee:	e71c      	b.n	7f2a <__aeabi_ddiv+0x38a>
    80f0:	42b0      	cmp	r0, r6
    80f2:	d839      	bhi.n	8168 <__aeabi_ddiv+0x5c8>
    80f4:	d06e      	beq.n	81d4 <__aeabi_ddiv+0x634>
    80f6:	0011      	movs	r1, r2
    80f8:	e73a      	b.n	7f70 <__aeabi_ddiv+0x3d0>
    80fa:	9302      	str	r3, [sp, #8]
    80fc:	e73a      	b.n	7f74 <__aeabi_ddiv+0x3d4>
    80fe:	2a1f      	cmp	r2, #31
    8100:	dc3c      	bgt.n	817c <__aeabi_ddiv+0x5dc>
    8102:	2320      	movs	r3, #32
    8104:	1a9b      	subs	r3, r3, r2
    8106:	000c      	movs	r4, r1
    8108:	4658      	mov	r0, fp
    810a:	4099      	lsls	r1, r3
    810c:	4098      	lsls	r0, r3
    810e:	1e4b      	subs	r3, r1, #1
    8110:	4199      	sbcs	r1, r3
    8112:	465b      	mov	r3, fp
    8114:	40d4      	lsrs	r4, r2
    8116:	40d3      	lsrs	r3, r2
    8118:	4320      	orrs	r0, r4
    811a:	4308      	orrs	r0, r1
    811c:	001a      	movs	r2, r3
    811e:	0743      	lsls	r3, r0, #29
    8120:	d009      	beq.n	8136 <__aeabi_ddiv+0x596>
    8122:	230f      	movs	r3, #15
    8124:	4003      	ands	r3, r0
    8126:	2b04      	cmp	r3, #4
    8128:	d005      	beq.n	8136 <__aeabi_ddiv+0x596>
    812a:	0001      	movs	r1, r0
    812c:	1d08      	adds	r0, r1, #4
    812e:	4288      	cmp	r0, r1
    8130:	419b      	sbcs	r3, r3
    8132:	425b      	negs	r3, r3
    8134:	18d2      	adds	r2, r2, r3
    8136:	0213      	lsls	r3, r2, #8
    8138:	d53a      	bpl.n	81b0 <__aeabi_ddiv+0x610>
    813a:	2301      	movs	r3, #1
    813c:	9a02      	ldr	r2, [sp, #8]
    813e:	2401      	movs	r4, #1
    8140:	401a      	ands	r2, r3
    8142:	2300      	movs	r3, #0
    8144:	4694      	mov	ip, r2
    8146:	4698      	mov	r8, r3
    8148:	2200      	movs	r2, #0
    814a:	e5f7      	b.n	7d3c <__aeabi_ddiv+0x19c>
    814c:	2102      	movs	r1, #2
    814e:	4249      	negs	r1, r1
    8150:	468c      	mov	ip, r1
    8152:	9d03      	ldr	r5, [sp, #12]
    8154:	44e3      	add	fp, ip
    8156:	46ac      	mov	ip, r5
    8158:	44e2      	add	sl, ip
    815a:	45aa      	cmp	sl, r5
    815c:	41ad      	sbcs	r5, r5
    815e:	426d      	negs	r5, r5
    8160:	4445      	add	r5, r8
    8162:	18ed      	adds	r5, r5, r3
    8164:	1a2d      	subs	r5, r5, r0
    8166:	e696      	b.n	7e96 <__aeabi_ddiv+0x2f6>
    8168:	1e8a      	subs	r2, r1, #2
    816a:	9903      	ldr	r1, [sp, #12]
    816c:	004d      	lsls	r5, r1, #1
    816e:	428d      	cmp	r5, r1
    8170:	4189      	sbcs	r1, r1
    8172:	4249      	negs	r1, r1
    8174:	4441      	add	r1, r8
    8176:	1876      	adds	r6, r6, r1
    8178:	9503      	str	r5, [sp, #12]
    817a:	e78f      	b.n	809c <__aeabi_ddiv+0x4fc>
    817c:	201f      	movs	r0, #31
    817e:	4240      	negs	r0, r0
    8180:	1ac3      	subs	r3, r0, r3
    8182:	4658      	mov	r0, fp
    8184:	40d8      	lsrs	r0, r3
    8186:	0003      	movs	r3, r0
    8188:	2a20      	cmp	r2, #32
    818a:	d028      	beq.n	81de <__aeabi_ddiv+0x63e>
    818c:	2040      	movs	r0, #64	; 0x40
    818e:	465d      	mov	r5, fp
    8190:	1a82      	subs	r2, r0, r2
    8192:	4095      	lsls	r5, r2
    8194:	4329      	orrs	r1, r5
    8196:	1e4a      	subs	r2, r1, #1
    8198:	4191      	sbcs	r1, r2
    819a:	4319      	orrs	r1, r3
    819c:	2307      	movs	r3, #7
    819e:	2200      	movs	r2, #0
    81a0:	400b      	ands	r3, r1
    81a2:	d009      	beq.n	81b8 <__aeabi_ddiv+0x618>
    81a4:	230f      	movs	r3, #15
    81a6:	2200      	movs	r2, #0
    81a8:	400b      	ands	r3, r1
    81aa:	0008      	movs	r0, r1
    81ac:	2b04      	cmp	r3, #4
    81ae:	d1bd      	bne.n	812c <__aeabi_ddiv+0x58c>
    81b0:	0001      	movs	r1, r0
    81b2:	0753      	lsls	r3, r2, #29
    81b4:	0252      	lsls	r2, r2, #9
    81b6:	0b12      	lsrs	r2, r2, #12
    81b8:	08c9      	lsrs	r1, r1, #3
    81ba:	4319      	orrs	r1, r3
    81bc:	2301      	movs	r3, #1
    81be:	4688      	mov	r8, r1
    81c0:	9902      	ldr	r1, [sp, #8]
    81c2:	2400      	movs	r4, #0
    81c4:	4019      	ands	r1, r3
    81c6:	468c      	mov	ip, r1
    81c8:	e5b8      	b.n	7d3c <__aeabi_ddiv+0x19c>
    81ca:	4552      	cmp	r2, sl
    81cc:	d8be      	bhi.n	814c <__aeabi_ddiv+0x5ac>
    81ce:	468b      	mov	fp, r1
    81d0:	2500      	movs	r5, #0
    81d2:	e660      	b.n	7e96 <__aeabi_ddiv+0x2f6>
    81d4:	9d03      	ldr	r5, [sp, #12]
    81d6:	429d      	cmp	r5, r3
    81d8:	d3c6      	bcc.n	8168 <__aeabi_ddiv+0x5c8>
    81da:	0011      	movs	r1, r2
    81dc:	e762      	b.n	80a4 <__aeabi_ddiv+0x504>
    81de:	2500      	movs	r5, #0
    81e0:	e7d8      	b.n	8194 <__aeabi_ddiv+0x5f4>
    81e2:	2280      	movs	r2, #128	; 0x80
    81e4:	465b      	mov	r3, fp
    81e6:	0312      	lsls	r2, r2, #12
    81e8:	431a      	orrs	r2, r3
    81ea:	9b01      	ldr	r3, [sp, #4]
    81ec:	0312      	lsls	r2, r2, #12
    81ee:	0b12      	lsrs	r2, r2, #12
    81f0:	469c      	mov	ip, r3
    81f2:	4688      	mov	r8, r1
    81f4:	4c03      	ldr	r4, [pc, #12]	; (8204 <__aeabi_ddiv+0x664>)
    81f6:	e5a1      	b.n	7d3c <__aeabi_ddiv+0x19c>
    81f8:	000003ff 	.word	0x000003ff
    81fc:	feffffff 	.word	0xfeffffff
    8200:	000007fe 	.word	0x000007fe
    8204:	000007ff 	.word	0x000007ff

00008208 <__eqdf2>:
    8208:	b5f0      	push	{r4, r5, r6, r7, lr}
    820a:	464f      	mov	r7, r9
    820c:	4646      	mov	r6, r8
    820e:	46d6      	mov	lr, sl
    8210:	005c      	lsls	r4, r3, #1
    8212:	b5c0      	push	{r6, r7, lr}
    8214:	031f      	lsls	r7, r3, #12
    8216:	0fdb      	lsrs	r3, r3, #31
    8218:	469a      	mov	sl, r3
    821a:	4b17      	ldr	r3, [pc, #92]	; (8278 <__eqdf2+0x70>)
    821c:	030e      	lsls	r6, r1, #12
    821e:	004d      	lsls	r5, r1, #1
    8220:	4684      	mov	ip, r0
    8222:	4680      	mov	r8, r0
    8224:	0b36      	lsrs	r6, r6, #12
    8226:	0d6d      	lsrs	r5, r5, #21
    8228:	0fc9      	lsrs	r1, r1, #31
    822a:	4691      	mov	r9, r2
    822c:	0b3f      	lsrs	r7, r7, #12
    822e:	0d64      	lsrs	r4, r4, #21
    8230:	2001      	movs	r0, #1
    8232:	429d      	cmp	r5, r3
    8234:	d008      	beq.n	8248 <__eqdf2+0x40>
    8236:	429c      	cmp	r4, r3
    8238:	d001      	beq.n	823e <__eqdf2+0x36>
    823a:	42a5      	cmp	r5, r4
    823c:	d00b      	beq.n	8256 <__eqdf2+0x4e>
    823e:	bc1c      	pop	{r2, r3, r4}
    8240:	4690      	mov	r8, r2
    8242:	4699      	mov	r9, r3
    8244:	46a2      	mov	sl, r4
    8246:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8248:	4663      	mov	r3, ip
    824a:	4333      	orrs	r3, r6
    824c:	d1f7      	bne.n	823e <__eqdf2+0x36>
    824e:	42ac      	cmp	r4, r5
    8250:	d1f5      	bne.n	823e <__eqdf2+0x36>
    8252:	433a      	orrs	r2, r7
    8254:	d1f3      	bne.n	823e <__eqdf2+0x36>
    8256:	2001      	movs	r0, #1
    8258:	42be      	cmp	r6, r7
    825a:	d1f0      	bne.n	823e <__eqdf2+0x36>
    825c:	45c8      	cmp	r8, r9
    825e:	d1ee      	bne.n	823e <__eqdf2+0x36>
    8260:	4551      	cmp	r1, sl
    8262:	d007      	beq.n	8274 <__eqdf2+0x6c>
    8264:	2d00      	cmp	r5, #0
    8266:	d1ea      	bne.n	823e <__eqdf2+0x36>
    8268:	4663      	mov	r3, ip
    826a:	431e      	orrs	r6, r3
    826c:	0030      	movs	r0, r6
    826e:	1e46      	subs	r6, r0, #1
    8270:	41b0      	sbcs	r0, r6
    8272:	e7e4      	b.n	823e <__eqdf2+0x36>
    8274:	2000      	movs	r0, #0
    8276:	e7e2      	b.n	823e <__eqdf2+0x36>
    8278:	000007ff 	.word	0x000007ff

0000827c <__gedf2>:
    827c:	b5f0      	push	{r4, r5, r6, r7, lr}
    827e:	4645      	mov	r5, r8
    8280:	46de      	mov	lr, fp
    8282:	4657      	mov	r7, sl
    8284:	464e      	mov	r6, r9
    8286:	b5e0      	push	{r5, r6, r7, lr}
    8288:	031f      	lsls	r7, r3, #12
    828a:	0b3d      	lsrs	r5, r7, #12
    828c:	4f2c      	ldr	r7, [pc, #176]	; (8340 <__gedf2+0xc4>)
    828e:	030e      	lsls	r6, r1, #12
    8290:	004c      	lsls	r4, r1, #1
    8292:	46ab      	mov	fp, r5
    8294:	005d      	lsls	r5, r3, #1
    8296:	4684      	mov	ip, r0
    8298:	0b36      	lsrs	r6, r6, #12
    829a:	0d64      	lsrs	r4, r4, #21
    829c:	0fc9      	lsrs	r1, r1, #31
    829e:	4690      	mov	r8, r2
    82a0:	0d6d      	lsrs	r5, r5, #21
    82a2:	0fdb      	lsrs	r3, r3, #31
    82a4:	42bc      	cmp	r4, r7
    82a6:	d02a      	beq.n	82fe <__gedf2+0x82>
    82a8:	4f25      	ldr	r7, [pc, #148]	; (8340 <__gedf2+0xc4>)
    82aa:	42bd      	cmp	r5, r7
    82ac:	d02d      	beq.n	830a <__gedf2+0x8e>
    82ae:	2c00      	cmp	r4, #0
    82b0:	d10f      	bne.n	82d2 <__gedf2+0x56>
    82b2:	4330      	orrs	r0, r6
    82b4:	0007      	movs	r7, r0
    82b6:	4681      	mov	r9, r0
    82b8:	4278      	negs	r0, r7
    82ba:	4178      	adcs	r0, r7
    82bc:	b2c0      	uxtb	r0, r0
    82be:	2d00      	cmp	r5, #0
    82c0:	d117      	bne.n	82f2 <__gedf2+0x76>
    82c2:	465f      	mov	r7, fp
    82c4:	433a      	orrs	r2, r7
    82c6:	d114      	bne.n	82f2 <__gedf2+0x76>
    82c8:	464b      	mov	r3, r9
    82ca:	2000      	movs	r0, #0
    82cc:	2b00      	cmp	r3, #0
    82ce:	d00a      	beq.n	82e6 <__gedf2+0x6a>
    82d0:	e006      	b.n	82e0 <__gedf2+0x64>
    82d2:	2d00      	cmp	r5, #0
    82d4:	d102      	bne.n	82dc <__gedf2+0x60>
    82d6:	4658      	mov	r0, fp
    82d8:	4302      	orrs	r2, r0
    82da:	d001      	beq.n	82e0 <__gedf2+0x64>
    82dc:	4299      	cmp	r1, r3
    82de:	d018      	beq.n	8312 <__gedf2+0x96>
    82e0:	4248      	negs	r0, r1
    82e2:	2101      	movs	r1, #1
    82e4:	4308      	orrs	r0, r1
    82e6:	bc3c      	pop	{r2, r3, r4, r5}
    82e8:	4690      	mov	r8, r2
    82ea:	4699      	mov	r9, r3
    82ec:	46a2      	mov	sl, r4
    82ee:	46ab      	mov	fp, r5
    82f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    82f2:	2800      	cmp	r0, #0
    82f4:	d0f2      	beq.n	82dc <__gedf2+0x60>
    82f6:	2001      	movs	r0, #1
    82f8:	3b01      	subs	r3, #1
    82fa:	4318      	orrs	r0, r3
    82fc:	e7f3      	b.n	82e6 <__gedf2+0x6a>
    82fe:	0037      	movs	r7, r6
    8300:	4307      	orrs	r7, r0
    8302:	d0d1      	beq.n	82a8 <__gedf2+0x2c>
    8304:	2002      	movs	r0, #2
    8306:	4240      	negs	r0, r0
    8308:	e7ed      	b.n	82e6 <__gedf2+0x6a>
    830a:	465f      	mov	r7, fp
    830c:	4317      	orrs	r7, r2
    830e:	d0ce      	beq.n	82ae <__gedf2+0x32>
    8310:	e7f8      	b.n	8304 <__gedf2+0x88>
    8312:	42ac      	cmp	r4, r5
    8314:	dce4      	bgt.n	82e0 <__gedf2+0x64>
    8316:	da03      	bge.n	8320 <__gedf2+0xa4>
    8318:	1e48      	subs	r0, r1, #1
    831a:	2101      	movs	r1, #1
    831c:	4308      	orrs	r0, r1
    831e:	e7e2      	b.n	82e6 <__gedf2+0x6a>
    8320:	455e      	cmp	r6, fp
    8322:	d8dd      	bhi.n	82e0 <__gedf2+0x64>
    8324:	d006      	beq.n	8334 <__gedf2+0xb8>
    8326:	2000      	movs	r0, #0
    8328:	455e      	cmp	r6, fp
    832a:	d2dc      	bcs.n	82e6 <__gedf2+0x6a>
    832c:	2301      	movs	r3, #1
    832e:	1e48      	subs	r0, r1, #1
    8330:	4318      	orrs	r0, r3
    8332:	e7d8      	b.n	82e6 <__gedf2+0x6a>
    8334:	45c4      	cmp	ip, r8
    8336:	d8d3      	bhi.n	82e0 <__gedf2+0x64>
    8338:	2000      	movs	r0, #0
    833a:	45c4      	cmp	ip, r8
    833c:	d3f6      	bcc.n	832c <__gedf2+0xb0>
    833e:	e7d2      	b.n	82e6 <__gedf2+0x6a>
    8340:	000007ff 	.word	0x000007ff

00008344 <__ledf2>:
    8344:	b5f0      	push	{r4, r5, r6, r7, lr}
    8346:	464e      	mov	r6, r9
    8348:	4645      	mov	r5, r8
    834a:	46de      	mov	lr, fp
    834c:	4657      	mov	r7, sl
    834e:	005c      	lsls	r4, r3, #1
    8350:	b5e0      	push	{r5, r6, r7, lr}
    8352:	031f      	lsls	r7, r3, #12
    8354:	0fdb      	lsrs	r3, r3, #31
    8356:	4699      	mov	r9, r3
    8358:	4b2a      	ldr	r3, [pc, #168]	; (8404 <__ledf2+0xc0>)
    835a:	030e      	lsls	r6, r1, #12
    835c:	004d      	lsls	r5, r1, #1
    835e:	0fc9      	lsrs	r1, r1, #31
    8360:	4684      	mov	ip, r0
    8362:	0b36      	lsrs	r6, r6, #12
    8364:	0d6d      	lsrs	r5, r5, #21
    8366:	468b      	mov	fp, r1
    8368:	4690      	mov	r8, r2
    836a:	0b3f      	lsrs	r7, r7, #12
    836c:	0d64      	lsrs	r4, r4, #21
    836e:	429d      	cmp	r5, r3
    8370:	d020      	beq.n	83b4 <__ledf2+0x70>
    8372:	4b24      	ldr	r3, [pc, #144]	; (8404 <__ledf2+0xc0>)
    8374:	429c      	cmp	r4, r3
    8376:	d022      	beq.n	83be <__ledf2+0x7a>
    8378:	2d00      	cmp	r5, #0
    837a:	d112      	bne.n	83a2 <__ledf2+0x5e>
    837c:	4330      	orrs	r0, r6
    837e:	4243      	negs	r3, r0
    8380:	4143      	adcs	r3, r0
    8382:	b2db      	uxtb	r3, r3
    8384:	2c00      	cmp	r4, #0
    8386:	d01f      	beq.n	83c8 <__ledf2+0x84>
    8388:	2b00      	cmp	r3, #0
    838a:	d00c      	beq.n	83a6 <__ledf2+0x62>
    838c:	464b      	mov	r3, r9
    838e:	2001      	movs	r0, #1
    8390:	3b01      	subs	r3, #1
    8392:	4303      	orrs	r3, r0
    8394:	0018      	movs	r0, r3
    8396:	bc3c      	pop	{r2, r3, r4, r5}
    8398:	4690      	mov	r8, r2
    839a:	4699      	mov	r9, r3
    839c:	46a2      	mov	sl, r4
    839e:	46ab      	mov	fp, r5
    83a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    83a2:	2c00      	cmp	r4, #0
    83a4:	d016      	beq.n	83d4 <__ledf2+0x90>
    83a6:	45cb      	cmp	fp, r9
    83a8:	d017      	beq.n	83da <__ledf2+0x96>
    83aa:	465b      	mov	r3, fp
    83ac:	4259      	negs	r1, r3
    83ae:	2301      	movs	r3, #1
    83b0:	430b      	orrs	r3, r1
    83b2:	e7ef      	b.n	8394 <__ledf2+0x50>
    83b4:	0031      	movs	r1, r6
    83b6:	2302      	movs	r3, #2
    83b8:	4301      	orrs	r1, r0
    83ba:	d1eb      	bne.n	8394 <__ledf2+0x50>
    83bc:	e7d9      	b.n	8372 <__ledf2+0x2e>
    83be:	0039      	movs	r1, r7
    83c0:	2302      	movs	r3, #2
    83c2:	4311      	orrs	r1, r2
    83c4:	d1e6      	bne.n	8394 <__ledf2+0x50>
    83c6:	e7d7      	b.n	8378 <__ledf2+0x34>
    83c8:	433a      	orrs	r2, r7
    83ca:	d1dd      	bne.n	8388 <__ledf2+0x44>
    83cc:	2300      	movs	r3, #0
    83ce:	2800      	cmp	r0, #0
    83d0:	d0e0      	beq.n	8394 <__ledf2+0x50>
    83d2:	e7ea      	b.n	83aa <__ledf2+0x66>
    83d4:	433a      	orrs	r2, r7
    83d6:	d1e6      	bne.n	83a6 <__ledf2+0x62>
    83d8:	e7e7      	b.n	83aa <__ledf2+0x66>
    83da:	42a5      	cmp	r5, r4
    83dc:	dce5      	bgt.n	83aa <__ledf2+0x66>
    83de:	db05      	blt.n	83ec <__ledf2+0xa8>
    83e0:	42be      	cmp	r6, r7
    83e2:	d8e2      	bhi.n	83aa <__ledf2+0x66>
    83e4:	d007      	beq.n	83f6 <__ledf2+0xb2>
    83e6:	2300      	movs	r3, #0
    83e8:	42be      	cmp	r6, r7
    83ea:	d2d3      	bcs.n	8394 <__ledf2+0x50>
    83ec:	4659      	mov	r1, fp
    83ee:	2301      	movs	r3, #1
    83f0:	3901      	subs	r1, #1
    83f2:	430b      	orrs	r3, r1
    83f4:	e7ce      	b.n	8394 <__ledf2+0x50>
    83f6:	45c4      	cmp	ip, r8
    83f8:	d8d7      	bhi.n	83aa <__ledf2+0x66>
    83fa:	2300      	movs	r3, #0
    83fc:	45c4      	cmp	ip, r8
    83fe:	d3f5      	bcc.n	83ec <__ledf2+0xa8>
    8400:	e7c8      	b.n	8394 <__ledf2+0x50>
    8402:	46c0      	nop			; (mov r8, r8)
    8404:	000007ff 	.word	0x000007ff

00008408 <__aeabi_dmul>:
    8408:	b5f0      	push	{r4, r5, r6, r7, lr}
    840a:	4657      	mov	r7, sl
    840c:	4645      	mov	r5, r8
    840e:	46de      	mov	lr, fp
    8410:	464e      	mov	r6, r9
    8412:	b5e0      	push	{r5, r6, r7, lr}
    8414:	030c      	lsls	r4, r1, #12
    8416:	4698      	mov	r8, r3
    8418:	004e      	lsls	r6, r1, #1
    841a:	0b23      	lsrs	r3, r4, #12
    841c:	b087      	sub	sp, #28
    841e:	0007      	movs	r7, r0
    8420:	4692      	mov	sl, r2
    8422:	469b      	mov	fp, r3
    8424:	0d76      	lsrs	r6, r6, #21
    8426:	0fcd      	lsrs	r5, r1, #31
    8428:	2e00      	cmp	r6, #0
    842a:	d06b      	beq.n	8504 <__aeabi_dmul+0xfc>
    842c:	4b6d      	ldr	r3, [pc, #436]	; (85e4 <__aeabi_dmul+0x1dc>)
    842e:	429e      	cmp	r6, r3
    8430:	d035      	beq.n	849e <__aeabi_dmul+0x96>
    8432:	2480      	movs	r4, #128	; 0x80
    8434:	465b      	mov	r3, fp
    8436:	0f42      	lsrs	r2, r0, #29
    8438:	0424      	lsls	r4, r4, #16
    843a:	00db      	lsls	r3, r3, #3
    843c:	4314      	orrs	r4, r2
    843e:	431c      	orrs	r4, r3
    8440:	00c3      	lsls	r3, r0, #3
    8442:	4699      	mov	r9, r3
    8444:	4b68      	ldr	r3, [pc, #416]	; (85e8 <__aeabi_dmul+0x1e0>)
    8446:	46a3      	mov	fp, r4
    8448:	469c      	mov	ip, r3
    844a:	2300      	movs	r3, #0
    844c:	2700      	movs	r7, #0
    844e:	4466      	add	r6, ip
    8450:	9302      	str	r3, [sp, #8]
    8452:	4643      	mov	r3, r8
    8454:	031c      	lsls	r4, r3, #12
    8456:	005a      	lsls	r2, r3, #1
    8458:	0fdb      	lsrs	r3, r3, #31
    845a:	4650      	mov	r0, sl
    845c:	0b24      	lsrs	r4, r4, #12
    845e:	0d52      	lsrs	r2, r2, #21
    8460:	4698      	mov	r8, r3
    8462:	d100      	bne.n	8466 <__aeabi_dmul+0x5e>
    8464:	e076      	b.n	8554 <__aeabi_dmul+0x14c>
    8466:	4b5f      	ldr	r3, [pc, #380]	; (85e4 <__aeabi_dmul+0x1dc>)
    8468:	429a      	cmp	r2, r3
    846a:	d06d      	beq.n	8548 <__aeabi_dmul+0x140>
    846c:	2380      	movs	r3, #128	; 0x80
    846e:	0f41      	lsrs	r1, r0, #29
    8470:	041b      	lsls	r3, r3, #16
    8472:	430b      	orrs	r3, r1
    8474:	495c      	ldr	r1, [pc, #368]	; (85e8 <__aeabi_dmul+0x1e0>)
    8476:	00e4      	lsls	r4, r4, #3
    8478:	468c      	mov	ip, r1
    847a:	431c      	orrs	r4, r3
    847c:	00c3      	lsls	r3, r0, #3
    847e:	2000      	movs	r0, #0
    8480:	4462      	add	r2, ip
    8482:	4641      	mov	r1, r8
    8484:	18b6      	adds	r6, r6, r2
    8486:	4069      	eors	r1, r5
    8488:	1c72      	adds	r2, r6, #1
    848a:	9101      	str	r1, [sp, #4]
    848c:	4694      	mov	ip, r2
    848e:	4307      	orrs	r7, r0
    8490:	2f0f      	cmp	r7, #15
    8492:	d900      	bls.n	8496 <__aeabi_dmul+0x8e>
    8494:	e0b0      	b.n	85f8 <__aeabi_dmul+0x1f0>
    8496:	4a55      	ldr	r2, [pc, #340]	; (85ec <__aeabi_dmul+0x1e4>)
    8498:	00bf      	lsls	r7, r7, #2
    849a:	59d2      	ldr	r2, [r2, r7]
    849c:	4697      	mov	pc, r2
    849e:	465b      	mov	r3, fp
    84a0:	4303      	orrs	r3, r0
    84a2:	4699      	mov	r9, r3
    84a4:	d000      	beq.n	84a8 <__aeabi_dmul+0xa0>
    84a6:	e087      	b.n	85b8 <__aeabi_dmul+0x1b0>
    84a8:	2300      	movs	r3, #0
    84aa:	469b      	mov	fp, r3
    84ac:	3302      	adds	r3, #2
    84ae:	2708      	movs	r7, #8
    84b0:	9302      	str	r3, [sp, #8]
    84b2:	e7ce      	b.n	8452 <__aeabi_dmul+0x4a>
    84b4:	4642      	mov	r2, r8
    84b6:	9201      	str	r2, [sp, #4]
    84b8:	2802      	cmp	r0, #2
    84ba:	d067      	beq.n	858c <__aeabi_dmul+0x184>
    84bc:	2803      	cmp	r0, #3
    84be:	d100      	bne.n	84c2 <__aeabi_dmul+0xba>
    84c0:	e20e      	b.n	88e0 <__aeabi_dmul+0x4d8>
    84c2:	2801      	cmp	r0, #1
    84c4:	d000      	beq.n	84c8 <__aeabi_dmul+0xc0>
    84c6:	e162      	b.n	878e <__aeabi_dmul+0x386>
    84c8:	2300      	movs	r3, #0
    84ca:	2400      	movs	r4, #0
    84cc:	2200      	movs	r2, #0
    84ce:	4699      	mov	r9, r3
    84d0:	9901      	ldr	r1, [sp, #4]
    84d2:	4001      	ands	r1, r0
    84d4:	b2cd      	uxtb	r5, r1
    84d6:	2100      	movs	r1, #0
    84d8:	0312      	lsls	r2, r2, #12
    84da:	0d0b      	lsrs	r3, r1, #20
    84dc:	0b12      	lsrs	r2, r2, #12
    84de:	051b      	lsls	r3, r3, #20
    84e0:	4313      	orrs	r3, r2
    84e2:	4a43      	ldr	r2, [pc, #268]	; (85f0 <__aeabi_dmul+0x1e8>)
    84e4:	0524      	lsls	r4, r4, #20
    84e6:	4013      	ands	r3, r2
    84e8:	431c      	orrs	r4, r3
    84ea:	0064      	lsls	r4, r4, #1
    84ec:	07ed      	lsls	r5, r5, #31
    84ee:	0864      	lsrs	r4, r4, #1
    84f0:	432c      	orrs	r4, r5
    84f2:	4648      	mov	r0, r9
    84f4:	0021      	movs	r1, r4
    84f6:	b007      	add	sp, #28
    84f8:	bc3c      	pop	{r2, r3, r4, r5}
    84fa:	4690      	mov	r8, r2
    84fc:	4699      	mov	r9, r3
    84fe:	46a2      	mov	sl, r4
    8500:	46ab      	mov	fp, r5
    8502:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8504:	4303      	orrs	r3, r0
    8506:	4699      	mov	r9, r3
    8508:	d04f      	beq.n	85aa <__aeabi_dmul+0x1a2>
    850a:	465b      	mov	r3, fp
    850c:	2b00      	cmp	r3, #0
    850e:	d100      	bne.n	8512 <__aeabi_dmul+0x10a>
    8510:	e189      	b.n	8826 <__aeabi_dmul+0x41e>
    8512:	4658      	mov	r0, fp
    8514:	f000 fe2e 	bl	9174 <__clzsi2>
    8518:	0003      	movs	r3, r0
    851a:	3b0b      	subs	r3, #11
    851c:	2b1c      	cmp	r3, #28
    851e:	dd00      	ble.n	8522 <__aeabi_dmul+0x11a>
    8520:	e17a      	b.n	8818 <__aeabi_dmul+0x410>
    8522:	221d      	movs	r2, #29
    8524:	1ad3      	subs	r3, r2, r3
    8526:	003a      	movs	r2, r7
    8528:	0001      	movs	r1, r0
    852a:	465c      	mov	r4, fp
    852c:	40da      	lsrs	r2, r3
    852e:	3908      	subs	r1, #8
    8530:	408c      	lsls	r4, r1
    8532:	0013      	movs	r3, r2
    8534:	408f      	lsls	r7, r1
    8536:	4323      	orrs	r3, r4
    8538:	469b      	mov	fp, r3
    853a:	46b9      	mov	r9, r7
    853c:	2300      	movs	r3, #0
    853e:	4e2d      	ldr	r6, [pc, #180]	; (85f4 <__aeabi_dmul+0x1ec>)
    8540:	2700      	movs	r7, #0
    8542:	1a36      	subs	r6, r6, r0
    8544:	9302      	str	r3, [sp, #8]
    8546:	e784      	b.n	8452 <__aeabi_dmul+0x4a>
    8548:	4653      	mov	r3, sl
    854a:	4323      	orrs	r3, r4
    854c:	d12a      	bne.n	85a4 <__aeabi_dmul+0x19c>
    854e:	2400      	movs	r4, #0
    8550:	2002      	movs	r0, #2
    8552:	e796      	b.n	8482 <__aeabi_dmul+0x7a>
    8554:	4653      	mov	r3, sl
    8556:	4323      	orrs	r3, r4
    8558:	d020      	beq.n	859c <__aeabi_dmul+0x194>
    855a:	2c00      	cmp	r4, #0
    855c:	d100      	bne.n	8560 <__aeabi_dmul+0x158>
    855e:	e157      	b.n	8810 <__aeabi_dmul+0x408>
    8560:	0020      	movs	r0, r4
    8562:	f000 fe07 	bl	9174 <__clzsi2>
    8566:	0003      	movs	r3, r0
    8568:	3b0b      	subs	r3, #11
    856a:	2b1c      	cmp	r3, #28
    856c:	dd00      	ble.n	8570 <__aeabi_dmul+0x168>
    856e:	e149      	b.n	8804 <__aeabi_dmul+0x3fc>
    8570:	211d      	movs	r1, #29
    8572:	1acb      	subs	r3, r1, r3
    8574:	4651      	mov	r1, sl
    8576:	0002      	movs	r2, r0
    8578:	40d9      	lsrs	r1, r3
    857a:	4653      	mov	r3, sl
    857c:	3a08      	subs	r2, #8
    857e:	4094      	lsls	r4, r2
    8580:	4093      	lsls	r3, r2
    8582:	430c      	orrs	r4, r1
    8584:	4a1b      	ldr	r2, [pc, #108]	; (85f4 <__aeabi_dmul+0x1ec>)
    8586:	1a12      	subs	r2, r2, r0
    8588:	2000      	movs	r0, #0
    858a:	e77a      	b.n	8482 <__aeabi_dmul+0x7a>
    858c:	2501      	movs	r5, #1
    858e:	9b01      	ldr	r3, [sp, #4]
    8590:	4c14      	ldr	r4, [pc, #80]	; (85e4 <__aeabi_dmul+0x1dc>)
    8592:	401d      	ands	r5, r3
    8594:	2300      	movs	r3, #0
    8596:	2200      	movs	r2, #0
    8598:	4699      	mov	r9, r3
    859a:	e79c      	b.n	84d6 <__aeabi_dmul+0xce>
    859c:	2400      	movs	r4, #0
    859e:	2200      	movs	r2, #0
    85a0:	2001      	movs	r0, #1
    85a2:	e76e      	b.n	8482 <__aeabi_dmul+0x7a>
    85a4:	4653      	mov	r3, sl
    85a6:	2003      	movs	r0, #3
    85a8:	e76b      	b.n	8482 <__aeabi_dmul+0x7a>
    85aa:	2300      	movs	r3, #0
    85ac:	469b      	mov	fp, r3
    85ae:	3301      	adds	r3, #1
    85b0:	2704      	movs	r7, #4
    85b2:	2600      	movs	r6, #0
    85b4:	9302      	str	r3, [sp, #8]
    85b6:	e74c      	b.n	8452 <__aeabi_dmul+0x4a>
    85b8:	2303      	movs	r3, #3
    85ba:	4681      	mov	r9, r0
    85bc:	270c      	movs	r7, #12
    85be:	9302      	str	r3, [sp, #8]
    85c0:	e747      	b.n	8452 <__aeabi_dmul+0x4a>
    85c2:	2280      	movs	r2, #128	; 0x80
    85c4:	2300      	movs	r3, #0
    85c6:	2500      	movs	r5, #0
    85c8:	0312      	lsls	r2, r2, #12
    85ca:	4699      	mov	r9, r3
    85cc:	4c05      	ldr	r4, [pc, #20]	; (85e4 <__aeabi_dmul+0x1dc>)
    85ce:	e782      	b.n	84d6 <__aeabi_dmul+0xce>
    85d0:	465c      	mov	r4, fp
    85d2:	464b      	mov	r3, r9
    85d4:	9802      	ldr	r0, [sp, #8]
    85d6:	e76f      	b.n	84b8 <__aeabi_dmul+0xb0>
    85d8:	465c      	mov	r4, fp
    85da:	464b      	mov	r3, r9
    85dc:	9501      	str	r5, [sp, #4]
    85de:	9802      	ldr	r0, [sp, #8]
    85e0:	e76a      	b.n	84b8 <__aeabi_dmul+0xb0>
    85e2:	46c0      	nop			; (mov r8, r8)
    85e4:	000007ff 	.word	0x000007ff
    85e8:	fffffc01 	.word	0xfffffc01
    85ec:	0000e3a8 	.word	0x0000e3a8
    85f0:	800fffff 	.word	0x800fffff
    85f4:	fffffc0d 	.word	0xfffffc0d
    85f8:	464a      	mov	r2, r9
    85fa:	4649      	mov	r1, r9
    85fc:	0c17      	lsrs	r7, r2, #16
    85fe:	0c1a      	lsrs	r2, r3, #16
    8600:	041b      	lsls	r3, r3, #16
    8602:	0c1b      	lsrs	r3, r3, #16
    8604:	0408      	lsls	r0, r1, #16
    8606:	0019      	movs	r1, r3
    8608:	0c00      	lsrs	r0, r0, #16
    860a:	4341      	muls	r1, r0
    860c:	0015      	movs	r5, r2
    860e:	4688      	mov	r8, r1
    8610:	0019      	movs	r1, r3
    8612:	437d      	muls	r5, r7
    8614:	4379      	muls	r1, r7
    8616:	9503      	str	r5, [sp, #12]
    8618:	4689      	mov	r9, r1
    861a:	0029      	movs	r1, r5
    861c:	0015      	movs	r5, r2
    861e:	4345      	muls	r5, r0
    8620:	444d      	add	r5, r9
    8622:	9502      	str	r5, [sp, #8]
    8624:	4645      	mov	r5, r8
    8626:	0c2d      	lsrs	r5, r5, #16
    8628:	46aa      	mov	sl, r5
    862a:	9d02      	ldr	r5, [sp, #8]
    862c:	4455      	add	r5, sl
    862e:	45a9      	cmp	r9, r5
    8630:	d906      	bls.n	8640 <__aeabi_dmul+0x238>
    8632:	468a      	mov	sl, r1
    8634:	2180      	movs	r1, #128	; 0x80
    8636:	0249      	lsls	r1, r1, #9
    8638:	4689      	mov	r9, r1
    863a:	44ca      	add	sl, r9
    863c:	4651      	mov	r1, sl
    863e:	9103      	str	r1, [sp, #12]
    8640:	0c29      	lsrs	r1, r5, #16
    8642:	9104      	str	r1, [sp, #16]
    8644:	4641      	mov	r1, r8
    8646:	0409      	lsls	r1, r1, #16
    8648:	042d      	lsls	r5, r5, #16
    864a:	0c09      	lsrs	r1, r1, #16
    864c:	4688      	mov	r8, r1
    864e:	0029      	movs	r1, r5
    8650:	0c25      	lsrs	r5, r4, #16
    8652:	0424      	lsls	r4, r4, #16
    8654:	4441      	add	r1, r8
    8656:	0c24      	lsrs	r4, r4, #16
    8658:	9105      	str	r1, [sp, #20]
    865a:	0021      	movs	r1, r4
    865c:	4341      	muls	r1, r0
    865e:	4688      	mov	r8, r1
    8660:	0021      	movs	r1, r4
    8662:	4379      	muls	r1, r7
    8664:	468a      	mov	sl, r1
    8666:	4368      	muls	r0, r5
    8668:	4641      	mov	r1, r8
    866a:	4450      	add	r0, sl
    866c:	4681      	mov	r9, r0
    866e:	0c08      	lsrs	r0, r1, #16
    8670:	4448      	add	r0, r9
    8672:	436f      	muls	r7, r5
    8674:	4582      	cmp	sl, r0
    8676:	d903      	bls.n	8680 <__aeabi_dmul+0x278>
    8678:	2180      	movs	r1, #128	; 0x80
    867a:	0249      	lsls	r1, r1, #9
    867c:	4689      	mov	r9, r1
    867e:	444f      	add	r7, r9
    8680:	0c01      	lsrs	r1, r0, #16
    8682:	4689      	mov	r9, r1
    8684:	0039      	movs	r1, r7
    8686:	4449      	add	r1, r9
    8688:	9102      	str	r1, [sp, #8]
    868a:	4641      	mov	r1, r8
    868c:	040f      	lsls	r7, r1, #16
    868e:	9904      	ldr	r1, [sp, #16]
    8690:	0c3f      	lsrs	r7, r7, #16
    8692:	4688      	mov	r8, r1
    8694:	0400      	lsls	r0, r0, #16
    8696:	19c0      	adds	r0, r0, r7
    8698:	4480      	add	r8, r0
    869a:	4641      	mov	r1, r8
    869c:	9104      	str	r1, [sp, #16]
    869e:	4659      	mov	r1, fp
    86a0:	0c0f      	lsrs	r7, r1, #16
    86a2:	0409      	lsls	r1, r1, #16
    86a4:	0c09      	lsrs	r1, r1, #16
    86a6:	4688      	mov	r8, r1
    86a8:	4359      	muls	r1, r3
    86aa:	468a      	mov	sl, r1
    86ac:	0039      	movs	r1, r7
    86ae:	4351      	muls	r1, r2
    86b0:	4689      	mov	r9, r1
    86b2:	4641      	mov	r1, r8
    86b4:	434a      	muls	r2, r1
    86b6:	4651      	mov	r1, sl
    86b8:	0c09      	lsrs	r1, r1, #16
    86ba:	468b      	mov	fp, r1
    86bc:	437b      	muls	r3, r7
    86be:	18d2      	adds	r2, r2, r3
    86c0:	445a      	add	r2, fp
    86c2:	4293      	cmp	r3, r2
    86c4:	d903      	bls.n	86ce <__aeabi_dmul+0x2c6>
    86c6:	2380      	movs	r3, #128	; 0x80
    86c8:	025b      	lsls	r3, r3, #9
    86ca:	469b      	mov	fp, r3
    86cc:	44d9      	add	r9, fp
    86ce:	4651      	mov	r1, sl
    86d0:	0409      	lsls	r1, r1, #16
    86d2:	0c09      	lsrs	r1, r1, #16
    86d4:	468a      	mov	sl, r1
    86d6:	4641      	mov	r1, r8
    86d8:	4361      	muls	r1, r4
    86da:	437c      	muls	r4, r7
    86dc:	0c13      	lsrs	r3, r2, #16
    86de:	0412      	lsls	r2, r2, #16
    86e0:	444b      	add	r3, r9
    86e2:	4452      	add	r2, sl
    86e4:	46a1      	mov	r9, r4
    86e6:	468a      	mov	sl, r1
    86e8:	003c      	movs	r4, r7
    86ea:	4641      	mov	r1, r8
    86ec:	436c      	muls	r4, r5
    86ee:	434d      	muls	r5, r1
    86f0:	4651      	mov	r1, sl
    86f2:	444d      	add	r5, r9
    86f4:	0c0f      	lsrs	r7, r1, #16
    86f6:	197d      	adds	r5, r7, r5
    86f8:	45a9      	cmp	r9, r5
    86fa:	d903      	bls.n	8704 <__aeabi_dmul+0x2fc>
    86fc:	2180      	movs	r1, #128	; 0x80
    86fe:	0249      	lsls	r1, r1, #9
    8700:	4688      	mov	r8, r1
    8702:	4444      	add	r4, r8
    8704:	9f04      	ldr	r7, [sp, #16]
    8706:	9903      	ldr	r1, [sp, #12]
    8708:	46b8      	mov	r8, r7
    870a:	4441      	add	r1, r8
    870c:	468b      	mov	fp, r1
    870e:	4583      	cmp	fp, r0
    8710:	4180      	sbcs	r0, r0
    8712:	4241      	negs	r1, r0
    8714:	4688      	mov	r8, r1
    8716:	4651      	mov	r1, sl
    8718:	0408      	lsls	r0, r1, #16
    871a:	042f      	lsls	r7, r5, #16
    871c:	0c00      	lsrs	r0, r0, #16
    871e:	183f      	adds	r7, r7, r0
    8720:	4658      	mov	r0, fp
    8722:	9902      	ldr	r1, [sp, #8]
    8724:	1810      	adds	r0, r2, r0
    8726:	4689      	mov	r9, r1
    8728:	4290      	cmp	r0, r2
    872a:	4192      	sbcs	r2, r2
    872c:	444f      	add	r7, r9
    872e:	46ba      	mov	sl, r7
    8730:	4252      	negs	r2, r2
    8732:	4699      	mov	r9, r3
    8734:	4693      	mov	fp, r2
    8736:	44c2      	add	sl, r8
    8738:	44d1      	add	r9, sl
    873a:	44cb      	add	fp, r9
    873c:	428f      	cmp	r7, r1
    873e:	41bf      	sbcs	r7, r7
    8740:	45c2      	cmp	sl, r8
    8742:	4189      	sbcs	r1, r1
    8744:	4599      	cmp	r9, r3
    8746:	419b      	sbcs	r3, r3
    8748:	4593      	cmp	fp, r2
    874a:	4192      	sbcs	r2, r2
    874c:	427f      	negs	r7, r7
    874e:	4249      	negs	r1, r1
    8750:	0c2d      	lsrs	r5, r5, #16
    8752:	4252      	negs	r2, r2
    8754:	430f      	orrs	r7, r1
    8756:	425b      	negs	r3, r3
    8758:	4313      	orrs	r3, r2
    875a:	197f      	adds	r7, r7, r5
    875c:	18ff      	adds	r7, r7, r3
    875e:	465b      	mov	r3, fp
    8760:	193c      	adds	r4, r7, r4
    8762:	0ddb      	lsrs	r3, r3, #23
    8764:	9a05      	ldr	r2, [sp, #20]
    8766:	0264      	lsls	r4, r4, #9
    8768:	431c      	orrs	r4, r3
    876a:	0243      	lsls	r3, r0, #9
    876c:	4313      	orrs	r3, r2
    876e:	1e5d      	subs	r5, r3, #1
    8770:	41ab      	sbcs	r3, r5
    8772:	465a      	mov	r2, fp
    8774:	0dc0      	lsrs	r0, r0, #23
    8776:	4303      	orrs	r3, r0
    8778:	0252      	lsls	r2, r2, #9
    877a:	4313      	orrs	r3, r2
    877c:	01e2      	lsls	r2, r4, #7
    877e:	d556      	bpl.n	882e <__aeabi_dmul+0x426>
    8780:	2001      	movs	r0, #1
    8782:	085a      	lsrs	r2, r3, #1
    8784:	4003      	ands	r3, r0
    8786:	4313      	orrs	r3, r2
    8788:	07e2      	lsls	r2, r4, #31
    878a:	4313      	orrs	r3, r2
    878c:	0864      	lsrs	r4, r4, #1
    878e:	485a      	ldr	r0, [pc, #360]	; (88f8 <__aeabi_dmul+0x4f0>)
    8790:	4460      	add	r0, ip
    8792:	2800      	cmp	r0, #0
    8794:	dd4d      	ble.n	8832 <__aeabi_dmul+0x42a>
    8796:	075a      	lsls	r2, r3, #29
    8798:	d009      	beq.n	87ae <__aeabi_dmul+0x3a6>
    879a:	220f      	movs	r2, #15
    879c:	401a      	ands	r2, r3
    879e:	2a04      	cmp	r2, #4
    87a0:	d005      	beq.n	87ae <__aeabi_dmul+0x3a6>
    87a2:	1d1a      	adds	r2, r3, #4
    87a4:	429a      	cmp	r2, r3
    87a6:	419b      	sbcs	r3, r3
    87a8:	425b      	negs	r3, r3
    87aa:	18e4      	adds	r4, r4, r3
    87ac:	0013      	movs	r3, r2
    87ae:	01e2      	lsls	r2, r4, #7
    87b0:	d504      	bpl.n	87bc <__aeabi_dmul+0x3b4>
    87b2:	2080      	movs	r0, #128	; 0x80
    87b4:	4a51      	ldr	r2, [pc, #324]	; (88fc <__aeabi_dmul+0x4f4>)
    87b6:	00c0      	lsls	r0, r0, #3
    87b8:	4014      	ands	r4, r2
    87ba:	4460      	add	r0, ip
    87bc:	4a50      	ldr	r2, [pc, #320]	; (8900 <__aeabi_dmul+0x4f8>)
    87be:	4290      	cmp	r0, r2
    87c0:	dd00      	ble.n	87c4 <__aeabi_dmul+0x3bc>
    87c2:	e6e3      	b.n	858c <__aeabi_dmul+0x184>
    87c4:	2501      	movs	r5, #1
    87c6:	08db      	lsrs	r3, r3, #3
    87c8:	0762      	lsls	r2, r4, #29
    87ca:	431a      	orrs	r2, r3
    87cc:	0264      	lsls	r4, r4, #9
    87ce:	9b01      	ldr	r3, [sp, #4]
    87d0:	4691      	mov	r9, r2
    87d2:	0b22      	lsrs	r2, r4, #12
    87d4:	0544      	lsls	r4, r0, #21
    87d6:	0d64      	lsrs	r4, r4, #21
    87d8:	401d      	ands	r5, r3
    87da:	e67c      	b.n	84d6 <__aeabi_dmul+0xce>
    87dc:	2280      	movs	r2, #128	; 0x80
    87de:	4659      	mov	r1, fp
    87e0:	0312      	lsls	r2, r2, #12
    87e2:	4211      	tst	r1, r2
    87e4:	d008      	beq.n	87f8 <__aeabi_dmul+0x3f0>
    87e6:	4214      	tst	r4, r2
    87e8:	d106      	bne.n	87f8 <__aeabi_dmul+0x3f0>
    87ea:	4322      	orrs	r2, r4
    87ec:	0312      	lsls	r2, r2, #12
    87ee:	0b12      	lsrs	r2, r2, #12
    87f0:	4645      	mov	r5, r8
    87f2:	4699      	mov	r9, r3
    87f4:	4c43      	ldr	r4, [pc, #268]	; (8904 <__aeabi_dmul+0x4fc>)
    87f6:	e66e      	b.n	84d6 <__aeabi_dmul+0xce>
    87f8:	465b      	mov	r3, fp
    87fa:	431a      	orrs	r2, r3
    87fc:	0312      	lsls	r2, r2, #12
    87fe:	0b12      	lsrs	r2, r2, #12
    8800:	4c40      	ldr	r4, [pc, #256]	; (8904 <__aeabi_dmul+0x4fc>)
    8802:	e668      	b.n	84d6 <__aeabi_dmul+0xce>
    8804:	0003      	movs	r3, r0
    8806:	4654      	mov	r4, sl
    8808:	3b28      	subs	r3, #40	; 0x28
    880a:	409c      	lsls	r4, r3
    880c:	2300      	movs	r3, #0
    880e:	e6b9      	b.n	8584 <__aeabi_dmul+0x17c>
    8810:	f000 fcb0 	bl	9174 <__clzsi2>
    8814:	3020      	adds	r0, #32
    8816:	e6a6      	b.n	8566 <__aeabi_dmul+0x15e>
    8818:	0003      	movs	r3, r0
    881a:	3b28      	subs	r3, #40	; 0x28
    881c:	409f      	lsls	r7, r3
    881e:	2300      	movs	r3, #0
    8820:	46bb      	mov	fp, r7
    8822:	4699      	mov	r9, r3
    8824:	e68a      	b.n	853c <__aeabi_dmul+0x134>
    8826:	f000 fca5 	bl	9174 <__clzsi2>
    882a:	3020      	adds	r0, #32
    882c:	e674      	b.n	8518 <__aeabi_dmul+0x110>
    882e:	46b4      	mov	ip, r6
    8830:	e7ad      	b.n	878e <__aeabi_dmul+0x386>
    8832:	2501      	movs	r5, #1
    8834:	1a2a      	subs	r2, r5, r0
    8836:	2a38      	cmp	r2, #56	; 0x38
    8838:	dd06      	ble.n	8848 <__aeabi_dmul+0x440>
    883a:	9b01      	ldr	r3, [sp, #4]
    883c:	2400      	movs	r4, #0
    883e:	401d      	ands	r5, r3
    8840:	2300      	movs	r3, #0
    8842:	2200      	movs	r2, #0
    8844:	4699      	mov	r9, r3
    8846:	e646      	b.n	84d6 <__aeabi_dmul+0xce>
    8848:	2a1f      	cmp	r2, #31
    884a:	dc21      	bgt.n	8890 <__aeabi_dmul+0x488>
    884c:	2520      	movs	r5, #32
    884e:	0020      	movs	r0, r4
    8850:	1aad      	subs	r5, r5, r2
    8852:	001e      	movs	r6, r3
    8854:	40ab      	lsls	r3, r5
    8856:	40a8      	lsls	r0, r5
    8858:	40d6      	lsrs	r6, r2
    885a:	1e5d      	subs	r5, r3, #1
    885c:	41ab      	sbcs	r3, r5
    885e:	4330      	orrs	r0, r6
    8860:	4318      	orrs	r0, r3
    8862:	40d4      	lsrs	r4, r2
    8864:	0743      	lsls	r3, r0, #29
    8866:	d009      	beq.n	887c <__aeabi_dmul+0x474>
    8868:	230f      	movs	r3, #15
    886a:	4003      	ands	r3, r0
    886c:	2b04      	cmp	r3, #4
    886e:	d005      	beq.n	887c <__aeabi_dmul+0x474>
    8870:	0003      	movs	r3, r0
    8872:	1d18      	adds	r0, r3, #4
    8874:	4298      	cmp	r0, r3
    8876:	419b      	sbcs	r3, r3
    8878:	425b      	negs	r3, r3
    887a:	18e4      	adds	r4, r4, r3
    887c:	0223      	lsls	r3, r4, #8
    887e:	d521      	bpl.n	88c4 <__aeabi_dmul+0x4bc>
    8880:	2501      	movs	r5, #1
    8882:	9b01      	ldr	r3, [sp, #4]
    8884:	2401      	movs	r4, #1
    8886:	401d      	ands	r5, r3
    8888:	2300      	movs	r3, #0
    888a:	2200      	movs	r2, #0
    888c:	4699      	mov	r9, r3
    888e:	e622      	b.n	84d6 <__aeabi_dmul+0xce>
    8890:	251f      	movs	r5, #31
    8892:	0021      	movs	r1, r4
    8894:	426d      	negs	r5, r5
    8896:	1a28      	subs	r0, r5, r0
    8898:	40c1      	lsrs	r1, r0
    889a:	0008      	movs	r0, r1
    889c:	2a20      	cmp	r2, #32
    889e:	d01d      	beq.n	88dc <__aeabi_dmul+0x4d4>
    88a0:	355f      	adds	r5, #95	; 0x5f
    88a2:	1aaa      	subs	r2, r5, r2
    88a4:	4094      	lsls	r4, r2
    88a6:	4323      	orrs	r3, r4
    88a8:	1e5c      	subs	r4, r3, #1
    88aa:	41a3      	sbcs	r3, r4
    88ac:	2507      	movs	r5, #7
    88ae:	4303      	orrs	r3, r0
    88b0:	401d      	ands	r5, r3
    88b2:	2200      	movs	r2, #0
    88b4:	2d00      	cmp	r5, #0
    88b6:	d009      	beq.n	88cc <__aeabi_dmul+0x4c4>
    88b8:	220f      	movs	r2, #15
    88ba:	2400      	movs	r4, #0
    88bc:	401a      	ands	r2, r3
    88be:	0018      	movs	r0, r3
    88c0:	2a04      	cmp	r2, #4
    88c2:	d1d6      	bne.n	8872 <__aeabi_dmul+0x46a>
    88c4:	0003      	movs	r3, r0
    88c6:	0765      	lsls	r5, r4, #29
    88c8:	0264      	lsls	r4, r4, #9
    88ca:	0b22      	lsrs	r2, r4, #12
    88cc:	08db      	lsrs	r3, r3, #3
    88ce:	432b      	orrs	r3, r5
    88d0:	2501      	movs	r5, #1
    88d2:	4699      	mov	r9, r3
    88d4:	9b01      	ldr	r3, [sp, #4]
    88d6:	2400      	movs	r4, #0
    88d8:	401d      	ands	r5, r3
    88da:	e5fc      	b.n	84d6 <__aeabi_dmul+0xce>
    88dc:	2400      	movs	r4, #0
    88de:	e7e2      	b.n	88a6 <__aeabi_dmul+0x49e>
    88e0:	2280      	movs	r2, #128	; 0x80
    88e2:	2501      	movs	r5, #1
    88e4:	0312      	lsls	r2, r2, #12
    88e6:	4322      	orrs	r2, r4
    88e8:	9901      	ldr	r1, [sp, #4]
    88ea:	0312      	lsls	r2, r2, #12
    88ec:	0b12      	lsrs	r2, r2, #12
    88ee:	400d      	ands	r5, r1
    88f0:	4699      	mov	r9, r3
    88f2:	4c04      	ldr	r4, [pc, #16]	; (8904 <__aeabi_dmul+0x4fc>)
    88f4:	e5ef      	b.n	84d6 <__aeabi_dmul+0xce>
    88f6:	46c0      	nop			; (mov r8, r8)
    88f8:	000003ff 	.word	0x000003ff
    88fc:	feffffff 	.word	0xfeffffff
    8900:	000007fe 	.word	0x000007fe
    8904:	000007ff 	.word	0x000007ff

00008908 <__aeabi_dsub>:
    8908:	b5f0      	push	{r4, r5, r6, r7, lr}
    890a:	4646      	mov	r6, r8
    890c:	46d6      	mov	lr, sl
    890e:	464f      	mov	r7, r9
    8910:	030c      	lsls	r4, r1, #12
    8912:	b5c0      	push	{r6, r7, lr}
    8914:	0fcd      	lsrs	r5, r1, #31
    8916:	004e      	lsls	r6, r1, #1
    8918:	0a61      	lsrs	r1, r4, #9
    891a:	0f44      	lsrs	r4, r0, #29
    891c:	430c      	orrs	r4, r1
    891e:	00c1      	lsls	r1, r0, #3
    8920:	0058      	lsls	r0, r3, #1
    8922:	0d40      	lsrs	r0, r0, #21
    8924:	4684      	mov	ip, r0
    8926:	468a      	mov	sl, r1
    8928:	000f      	movs	r7, r1
    892a:	0319      	lsls	r1, r3, #12
    892c:	0f50      	lsrs	r0, r2, #29
    892e:	0a49      	lsrs	r1, r1, #9
    8930:	4301      	orrs	r1, r0
    8932:	48c6      	ldr	r0, [pc, #792]	; (8c4c <__aeabi_dsub+0x344>)
    8934:	0d76      	lsrs	r6, r6, #21
    8936:	46a8      	mov	r8, r5
    8938:	0fdb      	lsrs	r3, r3, #31
    893a:	00d2      	lsls	r2, r2, #3
    893c:	4584      	cmp	ip, r0
    893e:	d100      	bne.n	8942 <__aeabi_dsub+0x3a>
    8940:	e0d8      	b.n	8af4 <__aeabi_dsub+0x1ec>
    8942:	2001      	movs	r0, #1
    8944:	4043      	eors	r3, r0
    8946:	42ab      	cmp	r3, r5
    8948:	d100      	bne.n	894c <__aeabi_dsub+0x44>
    894a:	e0a6      	b.n	8a9a <__aeabi_dsub+0x192>
    894c:	4660      	mov	r0, ip
    894e:	1a35      	subs	r5, r6, r0
    8950:	2d00      	cmp	r5, #0
    8952:	dc00      	bgt.n	8956 <__aeabi_dsub+0x4e>
    8954:	e105      	b.n	8b62 <__aeabi_dsub+0x25a>
    8956:	2800      	cmp	r0, #0
    8958:	d110      	bne.n	897c <__aeabi_dsub+0x74>
    895a:	000b      	movs	r3, r1
    895c:	4313      	orrs	r3, r2
    895e:	d100      	bne.n	8962 <__aeabi_dsub+0x5a>
    8960:	e0d7      	b.n	8b12 <__aeabi_dsub+0x20a>
    8962:	1e6b      	subs	r3, r5, #1
    8964:	2b00      	cmp	r3, #0
    8966:	d000      	beq.n	896a <__aeabi_dsub+0x62>
    8968:	e14b      	b.n	8c02 <__aeabi_dsub+0x2fa>
    896a:	4653      	mov	r3, sl
    896c:	1a9f      	subs	r7, r3, r2
    896e:	45ba      	cmp	sl, r7
    8970:	4180      	sbcs	r0, r0
    8972:	1a64      	subs	r4, r4, r1
    8974:	4240      	negs	r0, r0
    8976:	1a24      	subs	r4, r4, r0
    8978:	2601      	movs	r6, #1
    897a:	e01e      	b.n	89ba <__aeabi_dsub+0xb2>
    897c:	4bb3      	ldr	r3, [pc, #716]	; (8c4c <__aeabi_dsub+0x344>)
    897e:	429e      	cmp	r6, r3
    8980:	d048      	beq.n	8a14 <__aeabi_dsub+0x10c>
    8982:	2380      	movs	r3, #128	; 0x80
    8984:	041b      	lsls	r3, r3, #16
    8986:	4319      	orrs	r1, r3
    8988:	2d38      	cmp	r5, #56	; 0x38
    898a:	dd00      	ble.n	898e <__aeabi_dsub+0x86>
    898c:	e119      	b.n	8bc2 <__aeabi_dsub+0x2ba>
    898e:	2d1f      	cmp	r5, #31
    8990:	dd00      	ble.n	8994 <__aeabi_dsub+0x8c>
    8992:	e14c      	b.n	8c2e <__aeabi_dsub+0x326>
    8994:	2320      	movs	r3, #32
    8996:	000f      	movs	r7, r1
    8998:	1b5b      	subs	r3, r3, r5
    899a:	0010      	movs	r0, r2
    899c:	409a      	lsls	r2, r3
    899e:	409f      	lsls	r7, r3
    89a0:	40e8      	lsrs	r0, r5
    89a2:	1e53      	subs	r3, r2, #1
    89a4:	419a      	sbcs	r2, r3
    89a6:	40e9      	lsrs	r1, r5
    89a8:	4307      	orrs	r7, r0
    89aa:	4317      	orrs	r7, r2
    89ac:	4653      	mov	r3, sl
    89ae:	1bdf      	subs	r7, r3, r7
    89b0:	1a61      	subs	r1, r4, r1
    89b2:	45ba      	cmp	sl, r7
    89b4:	41a4      	sbcs	r4, r4
    89b6:	4264      	negs	r4, r4
    89b8:	1b0c      	subs	r4, r1, r4
    89ba:	0223      	lsls	r3, r4, #8
    89bc:	d400      	bmi.n	89c0 <__aeabi_dsub+0xb8>
    89be:	e0c5      	b.n	8b4c <__aeabi_dsub+0x244>
    89c0:	0264      	lsls	r4, r4, #9
    89c2:	0a65      	lsrs	r5, r4, #9
    89c4:	2d00      	cmp	r5, #0
    89c6:	d100      	bne.n	89ca <__aeabi_dsub+0xc2>
    89c8:	e0f6      	b.n	8bb8 <__aeabi_dsub+0x2b0>
    89ca:	0028      	movs	r0, r5
    89cc:	f000 fbd2 	bl	9174 <__clzsi2>
    89d0:	0003      	movs	r3, r0
    89d2:	3b08      	subs	r3, #8
    89d4:	2b1f      	cmp	r3, #31
    89d6:	dd00      	ble.n	89da <__aeabi_dsub+0xd2>
    89d8:	e0e9      	b.n	8bae <__aeabi_dsub+0x2a6>
    89da:	2220      	movs	r2, #32
    89dc:	003c      	movs	r4, r7
    89de:	1ad2      	subs	r2, r2, r3
    89e0:	409d      	lsls	r5, r3
    89e2:	40d4      	lsrs	r4, r2
    89e4:	409f      	lsls	r7, r3
    89e6:	4325      	orrs	r5, r4
    89e8:	429e      	cmp	r6, r3
    89ea:	dd00      	ble.n	89ee <__aeabi_dsub+0xe6>
    89ec:	e0db      	b.n	8ba6 <__aeabi_dsub+0x29e>
    89ee:	1b9e      	subs	r6, r3, r6
    89f0:	1c73      	adds	r3, r6, #1
    89f2:	2b1f      	cmp	r3, #31
    89f4:	dd00      	ble.n	89f8 <__aeabi_dsub+0xf0>
    89f6:	e10a      	b.n	8c0e <__aeabi_dsub+0x306>
    89f8:	2220      	movs	r2, #32
    89fa:	0038      	movs	r0, r7
    89fc:	1ad2      	subs	r2, r2, r3
    89fe:	0029      	movs	r1, r5
    8a00:	4097      	lsls	r7, r2
    8a02:	002c      	movs	r4, r5
    8a04:	4091      	lsls	r1, r2
    8a06:	40d8      	lsrs	r0, r3
    8a08:	1e7a      	subs	r2, r7, #1
    8a0a:	4197      	sbcs	r7, r2
    8a0c:	40dc      	lsrs	r4, r3
    8a0e:	2600      	movs	r6, #0
    8a10:	4301      	orrs	r1, r0
    8a12:	430f      	orrs	r7, r1
    8a14:	077b      	lsls	r3, r7, #29
    8a16:	d009      	beq.n	8a2c <__aeabi_dsub+0x124>
    8a18:	230f      	movs	r3, #15
    8a1a:	403b      	ands	r3, r7
    8a1c:	2b04      	cmp	r3, #4
    8a1e:	d005      	beq.n	8a2c <__aeabi_dsub+0x124>
    8a20:	1d3b      	adds	r3, r7, #4
    8a22:	42bb      	cmp	r3, r7
    8a24:	41bf      	sbcs	r7, r7
    8a26:	427f      	negs	r7, r7
    8a28:	19e4      	adds	r4, r4, r7
    8a2a:	001f      	movs	r7, r3
    8a2c:	0223      	lsls	r3, r4, #8
    8a2e:	d525      	bpl.n	8a7c <__aeabi_dsub+0x174>
    8a30:	4b86      	ldr	r3, [pc, #536]	; (8c4c <__aeabi_dsub+0x344>)
    8a32:	3601      	adds	r6, #1
    8a34:	429e      	cmp	r6, r3
    8a36:	d100      	bne.n	8a3a <__aeabi_dsub+0x132>
    8a38:	e0af      	b.n	8b9a <__aeabi_dsub+0x292>
    8a3a:	4b85      	ldr	r3, [pc, #532]	; (8c50 <__aeabi_dsub+0x348>)
    8a3c:	2501      	movs	r5, #1
    8a3e:	401c      	ands	r4, r3
    8a40:	4643      	mov	r3, r8
    8a42:	0762      	lsls	r2, r4, #29
    8a44:	08ff      	lsrs	r7, r7, #3
    8a46:	0264      	lsls	r4, r4, #9
    8a48:	0576      	lsls	r6, r6, #21
    8a4a:	4317      	orrs	r7, r2
    8a4c:	0b24      	lsrs	r4, r4, #12
    8a4e:	0d76      	lsrs	r6, r6, #21
    8a50:	401d      	ands	r5, r3
    8a52:	2100      	movs	r1, #0
    8a54:	0324      	lsls	r4, r4, #12
    8a56:	0b23      	lsrs	r3, r4, #12
    8a58:	0d0c      	lsrs	r4, r1, #20
    8a5a:	4a7e      	ldr	r2, [pc, #504]	; (8c54 <__aeabi_dsub+0x34c>)
    8a5c:	0524      	lsls	r4, r4, #20
    8a5e:	431c      	orrs	r4, r3
    8a60:	4014      	ands	r4, r2
    8a62:	0533      	lsls	r3, r6, #20
    8a64:	4323      	orrs	r3, r4
    8a66:	005b      	lsls	r3, r3, #1
    8a68:	07ed      	lsls	r5, r5, #31
    8a6a:	085b      	lsrs	r3, r3, #1
    8a6c:	432b      	orrs	r3, r5
    8a6e:	0038      	movs	r0, r7
    8a70:	0019      	movs	r1, r3
    8a72:	bc1c      	pop	{r2, r3, r4}
    8a74:	4690      	mov	r8, r2
    8a76:	4699      	mov	r9, r3
    8a78:	46a2      	mov	sl, r4
    8a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8a7c:	2501      	movs	r5, #1
    8a7e:	4643      	mov	r3, r8
    8a80:	0762      	lsls	r2, r4, #29
    8a82:	08ff      	lsrs	r7, r7, #3
    8a84:	4317      	orrs	r7, r2
    8a86:	08e4      	lsrs	r4, r4, #3
    8a88:	401d      	ands	r5, r3
    8a8a:	4b70      	ldr	r3, [pc, #448]	; (8c4c <__aeabi_dsub+0x344>)
    8a8c:	429e      	cmp	r6, r3
    8a8e:	d036      	beq.n	8afe <__aeabi_dsub+0x1f6>
    8a90:	0324      	lsls	r4, r4, #12
    8a92:	0576      	lsls	r6, r6, #21
    8a94:	0b24      	lsrs	r4, r4, #12
    8a96:	0d76      	lsrs	r6, r6, #21
    8a98:	e7db      	b.n	8a52 <__aeabi_dsub+0x14a>
    8a9a:	4663      	mov	r3, ip
    8a9c:	1af3      	subs	r3, r6, r3
    8a9e:	2b00      	cmp	r3, #0
    8aa0:	dc00      	bgt.n	8aa4 <__aeabi_dsub+0x19c>
    8aa2:	e094      	b.n	8bce <__aeabi_dsub+0x2c6>
    8aa4:	4660      	mov	r0, ip
    8aa6:	2800      	cmp	r0, #0
    8aa8:	d035      	beq.n	8b16 <__aeabi_dsub+0x20e>
    8aaa:	4868      	ldr	r0, [pc, #416]	; (8c4c <__aeabi_dsub+0x344>)
    8aac:	4286      	cmp	r6, r0
    8aae:	d0b1      	beq.n	8a14 <__aeabi_dsub+0x10c>
    8ab0:	2780      	movs	r7, #128	; 0x80
    8ab2:	043f      	lsls	r7, r7, #16
    8ab4:	4339      	orrs	r1, r7
    8ab6:	2b38      	cmp	r3, #56	; 0x38
    8ab8:	dc00      	bgt.n	8abc <__aeabi_dsub+0x1b4>
    8aba:	e0fd      	b.n	8cb8 <__aeabi_dsub+0x3b0>
    8abc:	430a      	orrs	r2, r1
    8abe:	0017      	movs	r7, r2
    8ac0:	2100      	movs	r1, #0
    8ac2:	1e7a      	subs	r2, r7, #1
    8ac4:	4197      	sbcs	r7, r2
    8ac6:	4457      	add	r7, sl
    8ac8:	4557      	cmp	r7, sl
    8aca:	4180      	sbcs	r0, r0
    8acc:	1909      	adds	r1, r1, r4
    8ace:	4244      	negs	r4, r0
    8ad0:	190c      	adds	r4, r1, r4
    8ad2:	0223      	lsls	r3, r4, #8
    8ad4:	d53a      	bpl.n	8b4c <__aeabi_dsub+0x244>
    8ad6:	4b5d      	ldr	r3, [pc, #372]	; (8c4c <__aeabi_dsub+0x344>)
    8ad8:	3601      	adds	r6, #1
    8ada:	429e      	cmp	r6, r3
    8adc:	d100      	bne.n	8ae0 <__aeabi_dsub+0x1d8>
    8ade:	e14b      	b.n	8d78 <__aeabi_dsub+0x470>
    8ae0:	2201      	movs	r2, #1
    8ae2:	4b5b      	ldr	r3, [pc, #364]	; (8c50 <__aeabi_dsub+0x348>)
    8ae4:	401c      	ands	r4, r3
    8ae6:	087b      	lsrs	r3, r7, #1
    8ae8:	4017      	ands	r7, r2
    8aea:	431f      	orrs	r7, r3
    8aec:	07e2      	lsls	r2, r4, #31
    8aee:	4317      	orrs	r7, r2
    8af0:	0864      	lsrs	r4, r4, #1
    8af2:	e78f      	b.n	8a14 <__aeabi_dsub+0x10c>
    8af4:	0008      	movs	r0, r1
    8af6:	4310      	orrs	r0, r2
    8af8:	d000      	beq.n	8afc <__aeabi_dsub+0x1f4>
    8afa:	e724      	b.n	8946 <__aeabi_dsub+0x3e>
    8afc:	e721      	b.n	8942 <__aeabi_dsub+0x3a>
    8afe:	0023      	movs	r3, r4
    8b00:	433b      	orrs	r3, r7
    8b02:	d100      	bne.n	8b06 <__aeabi_dsub+0x1fe>
    8b04:	e1b9      	b.n	8e7a <__aeabi_dsub+0x572>
    8b06:	2280      	movs	r2, #128	; 0x80
    8b08:	0312      	lsls	r2, r2, #12
    8b0a:	4314      	orrs	r4, r2
    8b0c:	0324      	lsls	r4, r4, #12
    8b0e:	0b24      	lsrs	r4, r4, #12
    8b10:	e79f      	b.n	8a52 <__aeabi_dsub+0x14a>
    8b12:	002e      	movs	r6, r5
    8b14:	e77e      	b.n	8a14 <__aeabi_dsub+0x10c>
    8b16:	0008      	movs	r0, r1
    8b18:	4310      	orrs	r0, r2
    8b1a:	d100      	bne.n	8b1e <__aeabi_dsub+0x216>
    8b1c:	e0ca      	b.n	8cb4 <__aeabi_dsub+0x3ac>
    8b1e:	1e58      	subs	r0, r3, #1
    8b20:	4684      	mov	ip, r0
    8b22:	2800      	cmp	r0, #0
    8b24:	d000      	beq.n	8b28 <__aeabi_dsub+0x220>
    8b26:	e0e7      	b.n	8cf8 <__aeabi_dsub+0x3f0>
    8b28:	4452      	add	r2, sl
    8b2a:	4552      	cmp	r2, sl
    8b2c:	4180      	sbcs	r0, r0
    8b2e:	1864      	adds	r4, r4, r1
    8b30:	4240      	negs	r0, r0
    8b32:	1824      	adds	r4, r4, r0
    8b34:	0017      	movs	r7, r2
    8b36:	2601      	movs	r6, #1
    8b38:	0223      	lsls	r3, r4, #8
    8b3a:	d507      	bpl.n	8b4c <__aeabi_dsub+0x244>
    8b3c:	2602      	movs	r6, #2
    8b3e:	e7cf      	b.n	8ae0 <__aeabi_dsub+0x1d8>
    8b40:	4664      	mov	r4, ip
    8b42:	432c      	orrs	r4, r5
    8b44:	d100      	bne.n	8b48 <__aeabi_dsub+0x240>
    8b46:	e1b3      	b.n	8eb0 <__aeabi_dsub+0x5a8>
    8b48:	002c      	movs	r4, r5
    8b4a:	4667      	mov	r7, ip
    8b4c:	077b      	lsls	r3, r7, #29
    8b4e:	d000      	beq.n	8b52 <__aeabi_dsub+0x24a>
    8b50:	e762      	b.n	8a18 <__aeabi_dsub+0x110>
    8b52:	0763      	lsls	r3, r4, #29
    8b54:	08ff      	lsrs	r7, r7, #3
    8b56:	431f      	orrs	r7, r3
    8b58:	2501      	movs	r5, #1
    8b5a:	4643      	mov	r3, r8
    8b5c:	08e4      	lsrs	r4, r4, #3
    8b5e:	401d      	ands	r5, r3
    8b60:	e793      	b.n	8a8a <__aeabi_dsub+0x182>
    8b62:	2d00      	cmp	r5, #0
    8b64:	d178      	bne.n	8c58 <__aeabi_dsub+0x350>
    8b66:	1c75      	adds	r5, r6, #1
    8b68:	056d      	lsls	r5, r5, #21
    8b6a:	0d6d      	lsrs	r5, r5, #21
    8b6c:	2d01      	cmp	r5, #1
    8b6e:	dc00      	bgt.n	8b72 <__aeabi_dsub+0x26a>
    8b70:	e0f2      	b.n	8d58 <__aeabi_dsub+0x450>
    8b72:	4650      	mov	r0, sl
    8b74:	1a80      	subs	r0, r0, r2
    8b76:	4582      	cmp	sl, r0
    8b78:	41bf      	sbcs	r7, r7
    8b7a:	1a65      	subs	r5, r4, r1
    8b7c:	427f      	negs	r7, r7
    8b7e:	1bed      	subs	r5, r5, r7
    8b80:	4684      	mov	ip, r0
    8b82:	0228      	lsls	r0, r5, #8
    8b84:	d400      	bmi.n	8b88 <__aeabi_dsub+0x280>
    8b86:	e08c      	b.n	8ca2 <__aeabi_dsub+0x39a>
    8b88:	4650      	mov	r0, sl
    8b8a:	1a17      	subs	r7, r2, r0
    8b8c:	42ba      	cmp	r2, r7
    8b8e:	4192      	sbcs	r2, r2
    8b90:	1b0c      	subs	r4, r1, r4
    8b92:	4255      	negs	r5, r2
    8b94:	1b65      	subs	r5, r4, r5
    8b96:	4698      	mov	r8, r3
    8b98:	e714      	b.n	89c4 <__aeabi_dsub+0xbc>
    8b9a:	2501      	movs	r5, #1
    8b9c:	4643      	mov	r3, r8
    8b9e:	2400      	movs	r4, #0
    8ba0:	401d      	ands	r5, r3
    8ba2:	2700      	movs	r7, #0
    8ba4:	e755      	b.n	8a52 <__aeabi_dsub+0x14a>
    8ba6:	4c2a      	ldr	r4, [pc, #168]	; (8c50 <__aeabi_dsub+0x348>)
    8ba8:	1af6      	subs	r6, r6, r3
    8baa:	402c      	ands	r4, r5
    8bac:	e732      	b.n	8a14 <__aeabi_dsub+0x10c>
    8bae:	003d      	movs	r5, r7
    8bb0:	3828      	subs	r0, #40	; 0x28
    8bb2:	4085      	lsls	r5, r0
    8bb4:	2700      	movs	r7, #0
    8bb6:	e717      	b.n	89e8 <__aeabi_dsub+0xe0>
    8bb8:	0038      	movs	r0, r7
    8bba:	f000 fadb 	bl	9174 <__clzsi2>
    8bbe:	3020      	adds	r0, #32
    8bc0:	e706      	b.n	89d0 <__aeabi_dsub+0xc8>
    8bc2:	430a      	orrs	r2, r1
    8bc4:	0017      	movs	r7, r2
    8bc6:	2100      	movs	r1, #0
    8bc8:	1e7a      	subs	r2, r7, #1
    8bca:	4197      	sbcs	r7, r2
    8bcc:	e6ee      	b.n	89ac <__aeabi_dsub+0xa4>
    8bce:	2b00      	cmp	r3, #0
    8bd0:	d000      	beq.n	8bd4 <__aeabi_dsub+0x2cc>
    8bd2:	e0e5      	b.n	8da0 <__aeabi_dsub+0x498>
    8bd4:	1c73      	adds	r3, r6, #1
    8bd6:	469c      	mov	ip, r3
    8bd8:	055b      	lsls	r3, r3, #21
    8bda:	0d5b      	lsrs	r3, r3, #21
    8bdc:	2b01      	cmp	r3, #1
    8bde:	dc00      	bgt.n	8be2 <__aeabi_dsub+0x2da>
    8be0:	e09f      	b.n	8d22 <__aeabi_dsub+0x41a>
    8be2:	4b1a      	ldr	r3, [pc, #104]	; (8c4c <__aeabi_dsub+0x344>)
    8be4:	459c      	cmp	ip, r3
    8be6:	d100      	bne.n	8bea <__aeabi_dsub+0x2e2>
    8be8:	e0c5      	b.n	8d76 <__aeabi_dsub+0x46e>
    8bea:	4452      	add	r2, sl
    8bec:	4552      	cmp	r2, sl
    8bee:	4180      	sbcs	r0, r0
    8bf0:	1864      	adds	r4, r4, r1
    8bf2:	4240      	negs	r0, r0
    8bf4:	1824      	adds	r4, r4, r0
    8bf6:	07e7      	lsls	r7, r4, #31
    8bf8:	0852      	lsrs	r2, r2, #1
    8bfa:	4317      	orrs	r7, r2
    8bfc:	0864      	lsrs	r4, r4, #1
    8bfe:	4666      	mov	r6, ip
    8c00:	e708      	b.n	8a14 <__aeabi_dsub+0x10c>
    8c02:	4812      	ldr	r0, [pc, #72]	; (8c4c <__aeabi_dsub+0x344>)
    8c04:	4285      	cmp	r5, r0
    8c06:	d100      	bne.n	8c0a <__aeabi_dsub+0x302>
    8c08:	e085      	b.n	8d16 <__aeabi_dsub+0x40e>
    8c0a:	001d      	movs	r5, r3
    8c0c:	e6bc      	b.n	8988 <__aeabi_dsub+0x80>
    8c0e:	0029      	movs	r1, r5
    8c10:	3e1f      	subs	r6, #31
    8c12:	40f1      	lsrs	r1, r6
    8c14:	2b20      	cmp	r3, #32
    8c16:	d100      	bne.n	8c1a <__aeabi_dsub+0x312>
    8c18:	e07f      	b.n	8d1a <__aeabi_dsub+0x412>
    8c1a:	2240      	movs	r2, #64	; 0x40
    8c1c:	1ad3      	subs	r3, r2, r3
    8c1e:	409d      	lsls	r5, r3
    8c20:	432f      	orrs	r7, r5
    8c22:	1e7d      	subs	r5, r7, #1
    8c24:	41af      	sbcs	r7, r5
    8c26:	2400      	movs	r4, #0
    8c28:	430f      	orrs	r7, r1
    8c2a:	2600      	movs	r6, #0
    8c2c:	e78e      	b.n	8b4c <__aeabi_dsub+0x244>
    8c2e:	002b      	movs	r3, r5
    8c30:	000f      	movs	r7, r1
    8c32:	3b20      	subs	r3, #32
    8c34:	40df      	lsrs	r7, r3
    8c36:	2d20      	cmp	r5, #32
    8c38:	d071      	beq.n	8d1e <__aeabi_dsub+0x416>
    8c3a:	2340      	movs	r3, #64	; 0x40
    8c3c:	1b5d      	subs	r5, r3, r5
    8c3e:	40a9      	lsls	r1, r5
    8c40:	430a      	orrs	r2, r1
    8c42:	1e51      	subs	r1, r2, #1
    8c44:	418a      	sbcs	r2, r1
    8c46:	2100      	movs	r1, #0
    8c48:	4317      	orrs	r7, r2
    8c4a:	e6af      	b.n	89ac <__aeabi_dsub+0xa4>
    8c4c:	000007ff 	.word	0x000007ff
    8c50:	ff7fffff 	.word	0xff7fffff
    8c54:	800fffff 	.word	0x800fffff
    8c58:	2e00      	cmp	r6, #0
    8c5a:	d03e      	beq.n	8cda <__aeabi_dsub+0x3d2>
    8c5c:	4eb3      	ldr	r6, [pc, #716]	; (8f2c <__aeabi_dsub+0x624>)
    8c5e:	45b4      	cmp	ip, r6
    8c60:	d045      	beq.n	8cee <__aeabi_dsub+0x3e6>
    8c62:	2680      	movs	r6, #128	; 0x80
    8c64:	0436      	lsls	r6, r6, #16
    8c66:	426d      	negs	r5, r5
    8c68:	4334      	orrs	r4, r6
    8c6a:	2d38      	cmp	r5, #56	; 0x38
    8c6c:	dd00      	ble.n	8c70 <__aeabi_dsub+0x368>
    8c6e:	e0a8      	b.n	8dc2 <__aeabi_dsub+0x4ba>
    8c70:	2d1f      	cmp	r5, #31
    8c72:	dd00      	ble.n	8c76 <__aeabi_dsub+0x36e>
    8c74:	e11f      	b.n	8eb6 <__aeabi_dsub+0x5ae>
    8c76:	2620      	movs	r6, #32
    8c78:	0027      	movs	r7, r4
    8c7a:	4650      	mov	r0, sl
    8c7c:	1b76      	subs	r6, r6, r5
    8c7e:	40b7      	lsls	r7, r6
    8c80:	40e8      	lsrs	r0, r5
    8c82:	4307      	orrs	r7, r0
    8c84:	4650      	mov	r0, sl
    8c86:	40b0      	lsls	r0, r6
    8c88:	1e46      	subs	r6, r0, #1
    8c8a:	41b0      	sbcs	r0, r6
    8c8c:	40ec      	lsrs	r4, r5
    8c8e:	4338      	orrs	r0, r7
    8c90:	1a17      	subs	r7, r2, r0
    8c92:	42ba      	cmp	r2, r7
    8c94:	4192      	sbcs	r2, r2
    8c96:	1b0c      	subs	r4, r1, r4
    8c98:	4252      	negs	r2, r2
    8c9a:	1aa4      	subs	r4, r4, r2
    8c9c:	4666      	mov	r6, ip
    8c9e:	4698      	mov	r8, r3
    8ca0:	e68b      	b.n	89ba <__aeabi_dsub+0xb2>
    8ca2:	4664      	mov	r4, ip
    8ca4:	4667      	mov	r7, ip
    8ca6:	432c      	orrs	r4, r5
    8ca8:	d000      	beq.n	8cac <__aeabi_dsub+0x3a4>
    8caa:	e68b      	b.n	89c4 <__aeabi_dsub+0xbc>
    8cac:	2500      	movs	r5, #0
    8cae:	2600      	movs	r6, #0
    8cb0:	2700      	movs	r7, #0
    8cb2:	e6ea      	b.n	8a8a <__aeabi_dsub+0x182>
    8cb4:	001e      	movs	r6, r3
    8cb6:	e6ad      	b.n	8a14 <__aeabi_dsub+0x10c>
    8cb8:	2b1f      	cmp	r3, #31
    8cba:	dc60      	bgt.n	8d7e <__aeabi_dsub+0x476>
    8cbc:	2720      	movs	r7, #32
    8cbe:	1af8      	subs	r0, r7, r3
    8cc0:	000f      	movs	r7, r1
    8cc2:	4684      	mov	ip, r0
    8cc4:	4087      	lsls	r7, r0
    8cc6:	0010      	movs	r0, r2
    8cc8:	40d8      	lsrs	r0, r3
    8cca:	4307      	orrs	r7, r0
    8ccc:	4660      	mov	r0, ip
    8cce:	4082      	lsls	r2, r0
    8cd0:	1e50      	subs	r0, r2, #1
    8cd2:	4182      	sbcs	r2, r0
    8cd4:	40d9      	lsrs	r1, r3
    8cd6:	4317      	orrs	r7, r2
    8cd8:	e6f5      	b.n	8ac6 <__aeabi_dsub+0x1be>
    8cda:	0026      	movs	r6, r4
    8cdc:	4650      	mov	r0, sl
    8cde:	4306      	orrs	r6, r0
    8ce0:	d005      	beq.n	8cee <__aeabi_dsub+0x3e6>
    8ce2:	43ed      	mvns	r5, r5
    8ce4:	2d00      	cmp	r5, #0
    8ce6:	d0d3      	beq.n	8c90 <__aeabi_dsub+0x388>
    8ce8:	4e90      	ldr	r6, [pc, #576]	; (8f2c <__aeabi_dsub+0x624>)
    8cea:	45b4      	cmp	ip, r6
    8cec:	d1bd      	bne.n	8c6a <__aeabi_dsub+0x362>
    8cee:	000c      	movs	r4, r1
    8cf0:	0017      	movs	r7, r2
    8cf2:	4666      	mov	r6, ip
    8cf4:	4698      	mov	r8, r3
    8cf6:	e68d      	b.n	8a14 <__aeabi_dsub+0x10c>
    8cf8:	488c      	ldr	r0, [pc, #560]	; (8f2c <__aeabi_dsub+0x624>)
    8cfa:	4283      	cmp	r3, r0
    8cfc:	d00b      	beq.n	8d16 <__aeabi_dsub+0x40e>
    8cfe:	4663      	mov	r3, ip
    8d00:	e6d9      	b.n	8ab6 <__aeabi_dsub+0x1ae>
    8d02:	2d00      	cmp	r5, #0
    8d04:	d000      	beq.n	8d08 <__aeabi_dsub+0x400>
    8d06:	e096      	b.n	8e36 <__aeabi_dsub+0x52e>
    8d08:	0008      	movs	r0, r1
    8d0a:	4310      	orrs	r0, r2
    8d0c:	d100      	bne.n	8d10 <__aeabi_dsub+0x408>
    8d0e:	e0e2      	b.n	8ed6 <__aeabi_dsub+0x5ce>
    8d10:	000c      	movs	r4, r1
    8d12:	0017      	movs	r7, r2
    8d14:	4698      	mov	r8, r3
    8d16:	4e85      	ldr	r6, [pc, #532]	; (8f2c <__aeabi_dsub+0x624>)
    8d18:	e67c      	b.n	8a14 <__aeabi_dsub+0x10c>
    8d1a:	2500      	movs	r5, #0
    8d1c:	e780      	b.n	8c20 <__aeabi_dsub+0x318>
    8d1e:	2100      	movs	r1, #0
    8d20:	e78e      	b.n	8c40 <__aeabi_dsub+0x338>
    8d22:	0023      	movs	r3, r4
    8d24:	4650      	mov	r0, sl
    8d26:	4303      	orrs	r3, r0
    8d28:	2e00      	cmp	r6, #0
    8d2a:	d000      	beq.n	8d2e <__aeabi_dsub+0x426>
    8d2c:	e0a8      	b.n	8e80 <__aeabi_dsub+0x578>
    8d2e:	2b00      	cmp	r3, #0
    8d30:	d100      	bne.n	8d34 <__aeabi_dsub+0x42c>
    8d32:	e0de      	b.n	8ef2 <__aeabi_dsub+0x5ea>
    8d34:	000b      	movs	r3, r1
    8d36:	4313      	orrs	r3, r2
    8d38:	d100      	bne.n	8d3c <__aeabi_dsub+0x434>
    8d3a:	e66b      	b.n	8a14 <__aeabi_dsub+0x10c>
    8d3c:	4452      	add	r2, sl
    8d3e:	4552      	cmp	r2, sl
    8d40:	4180      	sbcs	r0, r0
    8d42:	1864      	adds	r4, r4, r1
    8d44:	4240      	negs	r0, r0
    8d46:	1824      	adds	r4, r4, r0
    8d48:	0017      	movs	r7, r2
    8d4a:	0223      	lsls	r3, r4, #8
    8d4c:	d400      	bmi.n	8d50 <__aeabi_dsub+0x448>
    8d4e:	e6fd      	b.n	8b4c <__aeabi_dsub+0x244>
    8d50:	4b77      	ldr	r3, [pc, #476]	; (8f30 <__aeabi_dsub+0x628>)
    8d52:	4666      	mov	r6, ip
    8d54:	401c      	ands	r4, r3
    8d56:	e65d      	b.n	8a14 <__aeabi_dsub+0x10c>
    8d58:	0025      	movs	r5, r4
    8d5a:	4650      	mov	r0, sl
    8d5c:	4305      	orrs	r5, r0
    8d5e:	2e00      	cmp	r6, #0
    8d60:	d1cf      	bne.n	8d02 <__aeabi_dsub+0x3fa>
    8d62:	2d00      	cmp	r5, #0
    8d64:	d14f      	bne.n	8e06 <__aeabi_dsub+0x4fe>
    8d66:	000c      	movs	r4, r1
    8d68:	4314      	orrs	r4, r2
    8d6a:	d100      	bne.n	8d6e <__aeabi_dsub+0x466>
    8d6c:	e0a0      	b.n	8eb0 <__aeabi_dsub+0x5a8>
    8d6e:	000c      	movs	r4, r1
    8d70:	0017      	movs	r7, r2
    8d72:	4698      	mov	r8, r3
    8d74:	e64e      	b.n	8a14 <__aeabi_dsub+0x10c>
    8d76:	4666      	mov	r6, ip
    8d78:	2400      	movs	r4, #0
    8d7a:	2700      	movs	r7, #0
    8d7c:	e685      	b.n	8a8a <__aeabi_dsub+0x182>
    8d7e:	001f      	movs	r7, r3
    8d80:	0008      	movs	r0, r1
    8d82:	3f20      	subs	r7, #32
    8d84:	40f8      	lsrs	r0, r7
    8d86:	0007      	movs	r7, r0
    8d88:	2b20      	cmp	r3, #32
    8d8a:	d100      	bne.n	8d8e <__aeabi_dsub+0x486>
    8d8c:	e08e      	b.n	8eac <__aeabi_dsub+0x5a4>
    8d8e:	2040      	movs	r0, #64	; 0x40
    8d90:	1ac3      	subs	r3, r0, r3
    8d92:	4099      	lsls	r1, r3
    8d94:	430a      	orrs	r2, r1
    8d96:	1e51      	subs	r1, r2, #1
    8d98:	418a      	sbcs	r2, r1
    8d9a:	2100      	movs	r1, #0
    8d9c:	4317      	orrs	r7, r2
    8d9e:	e692      	b.n	8ac6 <__aeabi_dsub+0x1be>
    8da0:	2e00      	cmp	r6, #0
    8da2:	d114      	bne.n	8dce <__aeabi_dsub+0x4c6>
    8da4:	0026      	movs	r6, r4
    8da6:	4650      	mov	r0, sl
    8da8:	4306      	orrs	r6, r0
    8daa:	d062      	beq.n	8e72 <__aeabi_dsub+0x56a>
    8dac:	43db      	mvns	r3, r3
    8dae:	2b00      	cmp	r3, #0
    8db0:	d15c      	bne.n	8e6c <__aeabi_dsub+0x564>
    8db2:	1887      	adds	r7, r0, r2
    8db4:	4297      	cmp	r7, r2
    8db6:	4192      	sbcs	r2, r2
    8db8:	1864      	adds	r4, r4, r1
    8dba:	4252      	negs	r2, r2
    8dbc:	18a4      	adds	r4, r4, r2
    8dbe:	4666      	mov	r6, ip
    8dc0:	e687      	b.n	8ad2 <__aeabi_dsub+0x1ca>
    8dc2:	4650      	mov	r0, sl
    8dc4:	4320      	orrs	r0, r4
    8dc6:	1e44      	subs	r4, r0, #1
    8dc8:	41a0      	sbcs	r0, r4
    8dca:	2400      	movs	r4, #0
    8dcc:	e760      	b.n	8c90 <__aeabi_dsub+0x388>
    8dce:	4e57      	ldr	r6, [pc, #348]	; (8f2c <__aeabi_dsub+0x624>)
    8dd0:	45b4      	cmp	ip, r6
    8dd2:	d04e      	beq.n	8e72 <__aeabi_dsub+0x56a>
    8dd4:	2680      	movs	r6, #128	; 0x80
    8dd6:	0436      	lsls	r6, r6, #16
    8dd8:	425b      	negs	r3, r3
    8dda:	4334      	orrs	r4, r6
    8ddc:	2b38      	cmp	r3, #56	; 0x38
    8dde:	dd00      	ble.n	8de2 <__aeabi_dsub+0x4da>
    8de0:	e07f      	b.n	8ee2 <__aeabi_dsub+0x5da>
    8de2:	2b1f      	cmp	r3, #31
    8de4:	dd00      	ble.n	8de8 <__aeabi_dsub+0x4e0>
    8de6:	e08b      	b.n	8f00 <__aeabi_dsub+0x5f8>
    8de8:	2620      	movs	r6, #32
    8dea:	0027      	movs	r7, r4
    8dec:	4650      	mov	r0, sl
    8dee:	1af6      	subs	r6, r6, r3
    8df0:	40b7      	lsls	r7, r6
    8df2:	40d8      	lsrs	r0, r3
    8df4:	4307      	orrs	r7, r0
    8df6:	4650      	mov	r0, sl
    8df8:	40b0      	lsls	r0, r6
    8dfa:	1e46      	subs	r6, r0, #1
    8dfc:	41b0      	sbcs	r0, r6
    8dfe:	4307      	orrs	r7, r0
    8e00:	40dc      	lsrs	r4, r3
    8e02:	18bf      	adds	r7, r7, r2
    8e04:	e7d6      	b.n	8db4 <__aeabi_dsub+0x4ac>
    8e06:	000d      	movs	r5, r1
    8e08:	4315      	orrs	r5, r2
    8e0a:	d100      	bne.n	8e0e <__aeabi_dsub+0x506>
    8e0c:	e602      	b.n	8a14 <__aeabi_dsub+0x10c>
    8e0e:	4650      	mov	r0, sl
    8e10:	1a80      	subs	r0, r0, r2
    8e12:	4582      	cmp	sl, r0
    8e14:	41bf      	sbcs	r7, r7
    8e16:	1a65      	subs	r5, r4, r1
    8e18:	427f      	negs	r7, r7
    8e1a:	1bed      	subs	r5, r5, r7
    8e1c:	4684      	mov	ip, r0
    8e1e:	0228      	lsls	r0, r5, #8
    8e20:	d400      	bmi.n	8e24 <__aeabi_dsub+0x51c>
    8e22:	e68d      	b.n	8b40 <__aeabi_dsub+0x238>
    8e24:	4650      	mov	r0, sl
    8e26:	1a17      	subs	r7, r2, r0
    8e28:	42ba      	cmp	r2, r7
    8e2a:	4192      	sbcs	r2, r2
    8e2c:	1b0c      	subs	r4, r1, r4
    8e2e:	4252      	negs	r2, r2
    8e30:	1aa4      	subs	r4, r4, r2
    8e32:	4698      	mov	r8, r3
    8e34:	e5ee      	b.n	8a14 <__aeabi_dsub+0x10c>
    8e36:	000d      	movs	r5, r1
    8e38:	4315      	orrs	r5, r2
    8e3a:	d100      	bne.n	8e3e <__aeabi_dsub+0x536>
    8e3c:	e76b      	b.n	8d16 <__aeabi_dsub+0x40e>
    8e3e:	4650      	mov	r0, sl
    8e40:	0767      	lsls	r7, r4, #29
    8e42:	08c0      	lsrs	r0, r0, #3
    8e44:	4307      	orrs	r7, r0
    8e46:	2080      	movs	r0, #128	; 0x80
    8e48:	08e4      	lsrs	r4, r4, #3
    8e4a:	0300      	lsls	r0, r0, #12
    8e4c:	4204      	tst	r4, r0
    8e4e:	d007      	beq.n	8e60 <__aeabi_dsub+0x558>
    8e50:	08cd      	lsrs	r5, r1, #3
    8e52:	4205      	tst	r5, r0
    8e54:	d104      	bne.n	8e60 <__aeabi_dsub+0x558>
    8e56:	002c      	movs	r4, r5
    8e58:	4698      	mov	r8, r3
    8e5a:	08d7      	lsrs	r7, r2, #3
    8e5c:	0749      	lsls	r1, r1, #29
    8e5e:	430f      	orrs	r7, r1
    8e60:	0f7b      	lsrs	r3, r7, #29
    8e62:	00e4      	lsls	r4, r4, #3
    8e64:	431c      	orrs	r4, r3
    8e66:	00ff      	lsls	r7, r7, #3
    8e68:	4e30      	ldr	r6, [pc, #192]	; (8f2c <__aeabi_dsub+0x624>)
    8e6a:	e5d3      	b.n	8a14 <__aeabi_dsub+0x10c>
    8e6c:	4e2f      	ldr	r6, [pc, #188]	; (8f2c <__aeabi_dsub+0x624>)
    8e6e:	45b4      	cmp	ip, r6
    8e70:	d1b4      	bne.n	8ddc <__aeabi_dsub+0x4d4>
    8e72:	000c      	movs	r4, r1
    8e74:	0017      	movs	r7, r2
    8e76:	4666      	mov	r6, ip
    8e78:	e5cc      	b.n	8a14 <__aeabi_dsub+0x10c>
    8e7a:	2700      	movs	r7, #0
    8e7c:	2400      	movs	r4, #0
    8e7e:	e5e8      	b.n	8a52 <__aeabi_dsub+0x14a>
    8e80:	2b00      	cmp	r3, #0
    8e82:	d039      	beq.n	8ef8 <__aeabi_dsub+0x5f0>
    8e84:	000b      	movs	r3, r1
    8e86:	4313      	orrs	r3, r2
    8e88:	d100      	bne.n	8e8c <__aeabi_dsub+0x584>
    8e8a:	e744      	b.n	8d16 <__aeabi_dsub+0x40e>
    8e8c:	08c0      	lsrs	r0, r0, #3
    8e8e:	0767      	lsls	r7, r4, #29
    8e90:	4307      	orrs	r7, r0
    8e92:	2080      	movs	r0, #128	; 0x80
    8e94:	08e4      	lsrs	r4, r4, #3
    8e96:	0300      	lsls	r0, r0, #12
    8e98:	4204      	tst	r4, r0
    8e9a:	d0e1      	beq.n	8e60 <__aeabi_dsub+0x558>
    8e9c:	08cb      	lsrs	r3, r1, #3
    8e9e:	4203      	tst	r3, r0
    8ea0:	d1de      	bne.n	8e60 <__aeabi_dsub+0x558>
    8ea2:	08d7      	lsrs	r7, r2, #3
    8ea4:	0749      	lsls	r1, r1, #29
    8ea6:	430f      	orrs	r7, r1
    8ea8:	001c      	movs	r4, r3
    8eaa:	e7d9      	b.n	8e60 <__aeabi_dsub+0x558>
    8eac:	2100      	movs	r1, #0
    8eae:	e771      	b.n	8d94 <__aeabi_dsub+0x48c>
    8eb0:	2500      	movs	r5, #0
    8eb2:	2700      	movs	r7, #0
    8eb4:	e5e9      	b.n	8a8a <__aeabi_dsub+0x182>
    8eb6:	002e      	movs	r6, r5
    8eb8:	0027      	movs	r7, r4
    8eba:	3e20      	subs	r6, #32
    8ebc:	40f7      	lsrs	r7, r6
    8ebe:	2d20      	cmp	r5, #32
    8ec0:	d02f      	beq.n	8f22 <__aeabi_dsub+0x61a>
    8ec2:	2640      	movs	r6, #64	; 0x40
    8ec4:	1b75      	subs	r5, r6, r5
    8ec6:	40ac      	lsls	r4, r5
    8ec8:	4650      	mov	r0, sl
    8eca:	4320      	orrs	r0, r4
    8ecc:	1e44      	subs	r4, r0, #1
    8ece:	41a0      	sbcs	r0, r4
    8ed0:	2400      	movs	r4, #0
    8ed2:	4338      	orrs	r0, r7
    8ed4:	e6dc      	b.n	8c90 <__aeabi_dsub+0x388>
    8ed6:	2480      	movs	r4, #128	; 0x80
    8ed8:	2500      	movs	r5, #0
    8eda:	0324      	lsls	r4, r4, #12
    8edc:	4e13      	ldr	r6, [pc, #76]	; (8f2c <__aeabi_dsub+0x624>)
    8ede:	2700      	movs	r7, #0
    8ee0:	e5d3      	b.n	8a8a <__aeabi_dsub+0x182>
    8ee2:	4650      	mov	r0, sl
    8ee4:	4320      	orrs	r0, r4
    8ee6:	0007      	movs	r7, r0
    8ee8:	1e78      	subs	r0, r7, #1
    8eea:	4187      	sbcs	r7, r0
    8eec:	2400      	movs	r4, #0
    8eee:	18bf      	adds	r7, r7, r2
    8ef0:	e760      	b.n	8db4 <__aeabi_dsub+0x4ac>
    8ef2:	000c      	movs	r4, r1
    8ef4:	0017      	movs	r7, r2
    8ef6:	e58d      	b.n	8a14 <__aeabi_dsub+0x10c>
    8ef8:	000c      	movs	r4, r1
    8efa:	0017      	movs	r7, r2
    8efc:	4e0b      	ldr	r6, [pc, #44]	; (8f2c <__aeabi_dsub+0x624>)
    8efe:	e589      	b.n	8a14 <__aeabi_dsub+0x10c>
    8f00:	001e      	movs	r6, r3
    8f02:	0027      	movs	r7, r4
    8f04:	3e20      	subs	r6, #32
    8f06:	40f7      	lsrs	r7, r6
    8f08:	2b20      	cmp	r3, #32
    8f0a:	d00c      	beq.n	8f26 <__aeabi_dsub+0x61e>
    8f0c:	2640      	movs	r6, #64	; 0x40
    8f0e:	1af3      	subs	r3, r6, r3
    8f10:	409c      	lsls	r4, r3
    8f12:	4650      	mov	r0, sl
    8f14:	4320      	orrs	r0, r4
    8f16:	1e44      	subs	r4, r0, #1
    8f18:	41a0      	sbcs	r0, r4
    8f1a:	4307      	orrs	r7, r0
    8f1c:	2400      	movs	r4, #0
    8f1e:	18bf      	adds	r7, r7, r2
    8f20:	e748      	b.n	8db4 <__aeabi_dsub+0x4ac>
    8f22:	2400      	movs	r4, #0
    8f24:	e7d0      	b.n	8ec8 <__aeabi_dsub+0x5c0>
    8f26:	2400      	movs	r4, #0
    8f28:	e7f3      	b.n	8f12 <__aeabi_dsub+0x60a>
    8f2a:	46c0      	nop			; (mov r8, r8)
    8f2c:	000007ff 	.word	0x000007ff
    8f30:	ff7fffff 	.word	0xff7fffff

00008f34 <__aeabi_dcmpun>:
    8f34:	b570      	push	{r4, r5, r6, lr}
    8f36:	4e0e      	ldr	r6, [pc, #56]	; (8f70 <__aeabi_dcmpun+0x3c>)
    8f38:	030d      	lsls	r5, r1, #12
    8f3a:	031c      	lsls	r4, r3, #12
    8f3c:	0049      	lsls	r1, r1, #1
    8f3e:	005b      	lsls	r3, r3, #1
    8f40:	0b2d      	lsrs	r5, r5, #12
    8f42:	0d49      	lsrs	r1, r1, #21
    8f44:	0b24      	lsrs	r4, r4, #12
    8f46:	0d5b      	lsrs	r3, r3, #21
    8f48:	42b1      	cmp	r1, r6
    8f4a:	d004      	beq.n	8f56 <__aeabi_dcmpun+0x22>
    8f4c:	4908      	ldr	r1, [pc, #32]	; (8f70 <__aeabi_dcmpun+0x3c>)
    8f4e:	2000      	movs	r0, #0
    8f50:	428b      	cmp	r3, r1
    8f52:	d008      	beq.n	8f66 <__aeabi_dcmpun+0x32>
    8f54:	bd70      	pop	{r4, r5, r6, pc}
    8f56:	4305      	orrs	r5, r0
    8f58:	2001      	movs	r0, #1
    8f5a:	2d00      	cmp	r5, #0
    8f5c:	d1fa      	bne.n	8f54 <__aeabi_dcmpun+0x20>
    8f5e:	4904      	ldr	r1, [pc, #16]	; (8f70 <__aeabi_dcmpun+0x3c>)
    8f60:	2000      	movs	r0, #0
    8f62:	428b      	cmp	r3, r1
    8f64:	d1f6      	bne.n	8f54 <__aeabi_dcmpun+0x20>
    8f66:	4314      	orrs	r4, r2
    8f68:	0020      	movs	r0, r4
    8f6a:	1e44      	subs	r4, r0, #1
    8f6c:	41a0      	sbcs	r0, r4
    8f6e:	e7f1      	b.n	8f54 <__aeabi_dcmpun+0x20>
    8f70:	000007ff 	.word	0x000007ff

00008f74 <__aeabi_d2iz>:
    8f74:	b530      	push	{r4, r5, lr}
    8f76:	4d13      	ldr	r5, [pc, #76]	; (8fc4 <__aeabi_d2iz+0x50>)
    8f78:	030a      	lsls	r2, r1, #12
    8f7a:	004b      	lsls	r3, r1, #1
    8f7c:	0b12      	lsrs	r2, r2, #12
    8f7e:	0d5b      	lsrs	r3, r3, #21
    8f80:	0fc9      	lsrs	r1, r1, #31
    8f82:	2400      	movs	r4, #0
    8f84:	42ab      	cmp	r3, r5
    8f86:	dd10      	ble.n	8faa <__aeabi_d2iz+0x36>
    8f88:	4c0f      	ldr	r4, [pc, #60]	; (8fc8 <__aeabi_d2iz+0x54>)
    8f8a:	42a3      	cmp	r3, r4
    8f8c:	dc0f      	bgt.n	8fae <__aeabi_d2iz+0x3a>
    8f8e:	2480      	movs	r4, #128	; 0x80
    8f90:	4d0e      	ldr	r5, [pc, #56]	; (8fcc <__aeabi_d2iz+0x58>)
    8f92:	0364      	lsls	r4, r4, #13
    8f94:	4322      	orrs	r2, r4
    8f96:	1aed      	subs	r5, r5, r3
    8f98:	2d1f      	cmp	r5, #31
    8f9a:	dd0b      	ble.n	8fb4 <__aeabi_d2iz+0x40>
    8f9c:	480c      	ldr	r0, [pc, #48]	; (8fd0 <__aeabi_d2iz+0x5c>)
    8f9e:	1ac3      	subs	r3, r0, r3
    8fa0:	40da      	lsrs	r2, r3
    8fa2:	4254      	negs	r4, r2
    8fa4:	2900      	cmp	r1, #0
    8fa6:	d100      	bne.n	8faa <__aeabi_d2iz+0x36>
    8fa8:	0014      	movs	r4, r2
    8faa:	0020      	movs	r0, r4
    8fac:	bd30      	pop	{r4, r5, pc}
    8fae:	4b09      	ldr	r3, [pc, #36]	; (8fd4 <__aeabi_d2iz+0x60>)
    8fb0:	18cc      	adds	r4, r1, r3
    8fb2:	e7fa      	b.n	8faa <__aeabi_d2iz+0x36>
    8fb4:	4c08      	ldr	r4, [pc, #32]	; (8fd8 <__aeabi_d2iz+0x64>)
    8fb6:	40e8      	lsrs	r0, r5
    8fb8:	46a4      	mov	ip, r4
    8fba:	4463      	add	r3, ip
    8fbc:	409a      	lsls	r2, r3
    8fbe:	4302      	orrs	r2, r0
    8fc0:	e7ef      	b.n	8fa2 <__aeabi_d2iz+0x2e>
    8fc2:	46c0      	nop			; (mov r8, r8)
    8fc4:	000003fe 	.word	0x000003fe
    8fc8:	0000041d 	.word	0x0000041d
    8fcc:	00000433 	.word	0x00000433
    8fd0:	00000413 	.word	0x00000413
    8fd4:	7fffffff 	.word	0x7fffffff
    8fd8:	fffffbed 	.word	0xfffffbed

00008fdc <__aeabi_i2d>:
    8fdc:	b570      	push	{r4, r5, r6, lr}
    8fde:	2800      	cmp	r0, #0
    8fe0:	d030      	beq.n	9044 <__aeabi_i2d+0x68>
    8fe2:	17c3      	asrs	r3, r0, #31
    8fe4:	18c4      	adds	r4, r0, r3
    8fe6:	405c      	eors	r4, r3
    8fe8:	0fc5      	lsrs	r5, r0, #31
    8fea:	0020      	movs	r0, r4
    8fec:	f000 f8c2 	bl	9174 <__clzsi2>
    8ff0:	4b17      	ldr	r3, [pc, #92]	; (9050 <__aeabi_i2d+0x74>)
    8ff2:	4a18      	ldr	r2, [pc, #96]	; (9054 <__aeabi_i2d+0x78>)
    8ff4:	1a1b      	subs	r3, r3, r0
    8ff6:	1ad2      	subs	r2, r2, r3
    8ff8:	2a1f      	cmp	r2, #31
    8ffa:	dd18      	ble.n	902e <__aeabi_i2d+0x52>
    8ffc:	4a16      	ldr	r2, [pc, #88]	; (9058 <__aeabi_i2d+0x7c>)
    8ffe:	1ad2      	subs	r2, r2, r3
    9000:	4094      	lsls	r4, r2
    9002:	2200      	movs	r2, #0
    9004:	0324      	lsls	r4, r4, #12
    9006:	055b      	lsls	r3, r3, #21
    9008:	0b24      	lsrs	r4, r4, #12
    900a:	0d5b      	lsrs	r3, r3, #21
    900c:	2100      	movs	r1, #0
    900e:	0010      	movs	r0, r2
    9010:	0324      	lsls	r4, r4, #12
    9012:	0d0a      	lsrs	r2, r1, #20
    9014:	0b24      	lsrs	r4, r4, #12
    9016:	0512      	lsls	r2, r2, #20
    9018:	4322      	orrs	r2, r4
    901a:	4c10      	ldr	r4, [pc, #64]	; (905c <__aeabi_i2d+0x80>)
    901c:	051b      	lsls	r3, r3, #20
    901e:	4022      	ands	r2, r4
    9020:	4313      	orrs	r3, r2
    9022:	005b      	lsls	r3, r3, #1
    9024:	07ed      	lsls	r5, r5, #31
    9026:	085b      	lsrs	r3, r3, #1
    9028:	432b      	orrs	r3, r5
    902a:	0019      	movs	r1, r3
    902c:	bd70      	pop	{r4, r5, r6, pc}
    902e:	0021      	movs	r1, r4
    9030:	4091      	lsls	r1, r2
    9032:	000a      	movs	r2, r1
    9034:	210b      	movs	r1, #11
    9036:	1a08      	subs	r0, r1, r0
    9038:	40c4      	lsrs	r4, r0
    903a:	055b      	lsls	r3, r3, #21
    903c:	0324      	lsls	r4, r4, #12
    903e:	0b24      	lsrs	r4, r4, #12
    9040:	0d5b      	lsrs	r3, r3, #21
    9042:	e7e3      	b.n	900c <__aeabi_i2d+0x30>
    9044:	2500      	movs	r5, #0
    9046:	2300      	movs	r3, #0
    9048:	2400      	movs	r4, #0
    904a:	2200      	movs	r2, #0
    904c:	e7de      	b.n	900c <__aeabi_i2d+0x30>
    904e:	46c0      	nop			; (mov r8, r8)
    9050:	0000041e 	.word	0x0000041e
    9054:	00000433 	.word	0x00000433
    9058:	00000413 	.word	0x00000413
    905c:	800fffff 	.word	0x800fffff

00009060 <__aeabi_ui2d>:
    9060:	b510      	push	{r4, lr}
    9062:	1e04      	subs	r4, r0, #0
    9064:	d028      	beq.n	90b8 <__aeabi_ui2d+0x58>
    9066:	f000 f885 	bl	9174 <__clzsi2>
    906a:	4b15      	ldr	r3, [pc, #84]	; (90c0 <__aeabi_ui2d+0x60>)
    906c:	4a15      	ldr	r2, [pc, #84]	; (90c4 <__aeabi_ui2d+0x64>)
    906e:	1a1b      	subs	r3, r3, r0
    9070:	1ad2      	subs	r2, r2, r3
    9072:	2a1f      	cmp	r2, #31
    9074:	dd15      	ble.n	90a2 <__aeabi_ui2d+0x42>
    9076:	4a14      	ldr	r2, [pc, #80]	; (90c8 <__aeabi_ui2d+0x68>)
    9078:	1ad2      	subs	r2, r2, r3
    907a:	4094      	lsls	r4, r2
    907c:	2200      	movs	r2, #0
    907e:	0324      	lsls	r4, r4, #12
    9080:	055b      	lsls	r3, r3, #21
    9082:	0b24      	lsrs	r4, r4, #12
    9084:	0d5b      	lsrs	r3, r3, #21
    9086:	2100      	movs	r1, #0
    9088:	0010      	movs	r0, r2
    908a:	0324      	lsls	r4, r4, #12
    908c:	0d0a      	lsrs	r2, r1, #20
    908e:	0b24      	lsrs	r4, r4, #12
    9090:	0512      	lsls	r2, r2, #20
    9092:	4322      	orrs	r2, r4
    9094:	4c0d      	ldr	r4, [pc, #52]	; (90cc <__aeabi_ui2d+0x6c>)
    9096:	051b      	lsls	r3, r3, #20
    9098:	4022      	ands	r2, r4
    909a:	4313      	orrs	r3, r2
    909c:	005b      	lsls	r3, r3, #1
    909e:	0859      	lsrs	r1, r3, #1
    90a0:	bd10      	pop	{r4, pc}
    90a2:	0021      	movs	r1, r4
    90a4:	4091      	lsls	r1, r2
    90a6:	000a      	movs	r2, r1
    90a8:	210b      	movs	r1, #11
    90aa:	1a08      	subs	r0, r1, r0
    90ac:	40c4      	lsrs	r4, r0
    90ae:	055b      	lsls	r3, r3, #21
    90b0:	0324      	lsls	r4, r4, #12
    90b2:	0b24      	lsrs	r4, r4, #12
    90b4:	0d5b      	lsrs	r3, r3, #21
    90b6:	e7e6      	b.n	9086 <__aeabi_ui2d+0x26>
    90b8:	2300      	movs	r3, #0
    90ba:	2400      	movs	r4, #0
    90bc:	2200      	movs	r2, #0
    90be:	e7e2      	b.n	9086 <__aeabi_ui2d+0x26>
    90c0:	0000041e 	.word	0x0000041e
    90c4:	00000433 	.word	0x00000433
    90c8:	00000413 	.word	0x00000413
    90cc:	800fffff 	.word	0x800fffff

000090d0 <__aeabi_f2d>:
    90d0:	0041      	lsls	r1, r0, #1
    90d2:	0e09      	lsrs	r1, r1, #24
    90d4:	1c4b      	adds	r3, r1, #1
    90d6:	b570      	push	{r4, r5, r6, lr}
    90d8:	b2db      	uxtb	r3, r3
    90da:	0246      	lsls	r6, r0, #9
    90dc:	0a75      	lsrs	r5, r6, #9
    90de:	0fc4      	lsrs	r4, r0, #31
    90e0:	2b01      	cmp	r3, #1
    90e2:	dd14      	ble.n	910e <__aeabi_f2d+0x3e>
    90e4:	23e0      	movs	r3, #224	; 0xe0
    90e6:	009b      	lsls	r3, r3, #2
    90e8:	076d      	lsls	r5, r5, #29
    90ea:	0b36      	lsrs	r6, r6, #12
    90ec:	18cb      	adds	r3, r1, r3
    90ee:	2100      	movs	r1, #0
    90f0:	0d0a      	lsrs	r2, r1, #20
    90f2:	0028      	movs	r0, r5
    90f4:	0512      	lsls	r2, r2, #20
    90f6:	4d1c      	ldr	r5, [pc, #112]	; (9168 <__aeabi_f2d+0x98>)
    90f8:	4332      	orrs	r2, r6
    90fa:	055b      	lsls	r3, r3, #21
    90fc:	402a      	ands	r2, r5
    90fe:	085b      	lsrs	r3, r3, #1
    9100:	4313      	orrs	r3, r2
    9102:	005b      	lsls	r3, r3, #1
    9104:	07e4      	lsls	r4, r4, #31
    9106:	085b      	lsrs	r3, r3, #1
    9108:	4323      	orrs	r3, r4
    910a:	0019      	movs	r1, r3
    910c:	bd70      	pop	{r4, r5, r6, pc}
    910e:	2900      	cmp	r1, #0
    9110:	d114      	bne.n	913c <__aeabi_f2d+0x6c>
    9112:	2d00      	cmp	r5, #0
    9114:	d01e      	beq.n	9154 <__aeabi_f2d+0x84>
    9116:	0028      	movs	r0, r5
    9118:	f000 f82c 	bl	9174 <__clzsi2>
    911c:	280a      	cmp	r0, #10
    911e:	dc1c      	bgt.n	915a <__aeabi_f2d+0x8a>
    9120:	230b      	movs	r3, #11
    9122:	002a      	movs	r2, r5
    9124:	1a1b      	subs	r3, r3, r0
    9126:	40da      	lsrs	r2, r3
    9128:	0003      	movs	r3, r0
    912a:	3315      	adds	r3, #21
    912c:	409d      	lsls	r5, r3
    912e:	4b0f      	ldr	r3, [pc, #60]	; (916c <__aeabi_f2d+0x9c>)
    9130:	0312      	lsls	r2, r2, #12
    9132:	1a1b      	subs	r3, r3, r0
    9134:	055b      	lsls	r3, r3, #21
    9136:	0b16      	lsrs	r6, r2, #12
    9138:	0d5b      	lsrs	r3, r3, #21
    913a:	e7d8      	b.n	90ee <__aeabi_f2d+0x1e>
    913c:	2d00      	cmp	r5, #0
    913e:	d006      	beq.n	914e <__aeabi_f2d+0x7e>
    9140:	0b32      	lsrs	r2, r6, #12
    9142:	2680      	movs	r6, #128	; 0x80
    9144:	0336      	lsls	r6, r6, #12
    9146:	076d      	lsls	r5, r5, #29
    9148:	4316      	orrs	r6, r2
    914a:	4b09      	ldr	r3, [pc, #36]	; (9170 <__aeabi_f2d+0xa0>)
    914c:	e7cf      	b.n	90ee <__aeabi_f2d+0x1e>
    914e:	4b08      	ldr	r3, [pc, #32]	; (9170 <__aeabi_f2d+0xa0>)
    9150:	2600      	movs	r6, #0
    9152:	e7cc      	b.n	90ee <__aeabi_f2d+0x1e>
    9154:	2300      	movs	r3, #0
    9156:	2600      	movs	r6, #0
    9158:	e7c9      	b.n	90ee <__aeabi_f2d+0x1e>
    915a:	0003      	movs	r3, r0
    915c:	002a      	movs	r2, r5
    915e:	3b0b      	subs	r3, #11
    9160:	409a      	lsls	r2, r3
    9162:	2500      	movs	r5, #0
    9164:	e7e3      	b.n	912e <__aeabi_f2d+0x5e>
    9166:	46c0      	nop			; (mov r8, r8)
    9168:	800fffff 	.word	0x800fffff
    916c:	00000389 	.word	0x00000389
    9170:	000007ff 	.word	0x000007ff

00009174 <__clzsi2>:
    9174:	211c      	movs	r1, #28
    9176:	2301      	movs	r3, #1
    9178:	041b      	lsls	r3, r3, #16
    917a:	4298      	cmp	r0, r3
    917c:	d301      	bcc.n	9182 <__clzsi2+0xe>
    917e:	0c00      	lsrs	r0, r0, #16
    9180:	3910      	subs	r1, #16
    9182:	0a1b      	lsrs	r3, r3, #8
    9184:	4298      	cmp	r0, r3
    9186:	d301      	bcc.n	918c <__clzsi2+0x18>
    9188:	0a00      	lsrs	r0, r0, #8
    918a:	3908      	subs	r1, #8
    918c:	091b      	lsrs	r3, r3, #4
    918e:	4298      	cmp	r0, r3
    9190:	d301      	bcc.n	9196 <__clzsi2+0x22>
    9192:	0900      	lsrs	r0, r0, #4
    9194:	3904      	subs	r1, #4
    9196:	a202      	add	r2, pc, #8	; (adr r2, 91a0 <__clzsi2+0x2c>)
    9198:	5c10      	ldrb	r0, [r2, r0]
    919a:	1840      	adds	r0, r0, r1
    919c:	4770      	bx	lr
    919e:	46c0      	nop			; (mov r8, r8)
    91a0:	02020304 	.word	0x02020304
    91a4:	01010101 	.word	0x01010101
	...

000091b0 <__clzdi2>:
    91b0:	b510      	push	{r4, lr}
    91b2:	2900      	cmp	r1, #0
    91b4:	d103      	bne.n	91be <__clzdi2+0xe>
    91b6:	f7ff ffdd 	bl	9174 <__clzsi2>
    91ba:	3020      	adds	r0, #32
    91bc:	e002      	b.n	91c4 <__clzdi2+0x14>
    91be:	1c08      	adds	r0, r1, #0
    91c0:	f7ff ffd8 	bl	9174 <__clzsi2>
    91c4:	bd10      	pop	{r4, pc}
    91c6:	46c0      	nop			; (mov r8, r8)

000091c8 <__ctzsi2>:
    91c8:	4241      	negs	r1, r0
    91ca:	4008      	ands	r0, r1
    91cc:	211c      	movs	r1, #28
    91ce:	2301      	movs	r3, #1
    91d0:	041b      	lsls	r3, r3, #16
    91d2:	4298      	cmp	r0, r3
    91d4:	d301      	bcc.n	91da <__ctzsi2+0x12>
    91d6:	0c00      	lsrs	r0, r0, #16
    91d8:	3910      	subs	r1, #16
    91da:	0a1b      	lsrs	r3, r3, #8
    91dc:	4298      	cmp	r0, r3
    91de:	d301      	bcc.n	91e4 <__ctzsi2+0x1c>
    91e0:	0a00      	lsrs	r0, r0, #8
    91e2:	3908      	subs	r1, #8
    91e4:	091b      	lsrs	r3, r3, #4
    91e6:	4298      	cmp	r0, r3
    91e8:	d301      	bcc.n	91ee <__ctzsi2+0x26>
    91ea:	0900      	lsrs	r0, r0, #4
    91ec:	3904      	subs	r1, #4
    91ee:	a202      	add	r2, pc, #8	; (adr r2, 91f8 <__ctzsi2+0x30>)
    91f0:	5c10      	ldrb	r0, [r2, r0]
    91f2:	1a40      	subs	r0, r0, r1
    91f4:	4770      	bx	lr
    91f6:	46c0      	nop			; (mov r8, r8)
    91f8:	1d1d1c1b 	.word	0x1d1d1c1b
    91fc:	1e1e1e1e 	.word	0x1e1e1e1e
    9200:	1f1f1f1f 	.word	0x1f1f1f1f
    9204:	1f1f1f1f 	.word	0x1f1f1f1f

00009208 <__cxa_atexit>:
    9208:	b510      	push	{r4, lr}
    920a:	0013      	movs	r3, r2
    920c:	000a      	movs	r2, r1
    920e:	0001      	movs	r1, r0
    9210:	2002      	movs	r0, #2
    9212:	f001 fd6f 	bl	acf4 <__register_exitproc>
    9216:	bd10      	pop	{r4, pc}

00009218 <__errno>:
    9218:	4b01      	ldr	r3, [pc, #4]	; (9220 <__errno+0x8>)
    921a:	6818      	ldr	r0, [r3, #0]
    921c:	4770      	bx	lr
    921e:	46c0      	nop			; (mov r8, r8)
    9220:	20000070 	.word	0x20000070

00009224 <__libc_init_array>:
    9224:	b570      	push	{r4, r5, r6, lr}
    9226:	4e0d      	ldr	r6, [pc, #52]	; (925c <__libc_init_array+0x38>)
    9228:	4d0d      	ldr	r5, [pc, #52]	; (9260 <__libc_init_array+0x3c>)
    922a:	2400      	movs	r4, #0
    922c:	1bad      	subs	r5, r5, r6
    922e:	10ad      	asrs	r5, r5, #2
    9230:	d005      	beq.n	923e <__libc_init_array+0x1a>
    9232:	00a3      	lsls	r3, r4, #2
    9234:	58f3      	ldr	r3, [r6, r3]
    9236:	3401      	adds	r4, #1
    9238:	4798      	blx	r3
    923a:	42a5      	cmp	r5, r4
    923c:	d1f9      	bne.n	9232 <__libc_init_array+0xe>
    923e:	f005 facb 	bl	e7d8 <_init>
    9242:	4e08      	ldr	r6, [pc, #32]	; (9264 <__libc_init_array+0x40>)
    9244:	4d08      	ldr	r5, [pc, #32]	; (9268 <__libc_init_array+0x44>)
    9246:	2400      	movs	r4, #0
    9248:	1bad      	subs	r5, r5, r6
    924a:	10ad      	asrs	r5, r5, #2
    924c:	d005      	beq.n	925a <__libc_init_array+0x36>
    924e:	00a3      	lsls	r3, r4, #2
    9250:	58f3      	ldr	r3, [r6, r3]
    9252:	3401      	adds	r4, #1
    9254:	4798      	blx	r3
    9256:	42a5      	cmp	r5, r4
    9258:	d1f9      	bne.n	924e <__libc_init_array+0x2a>
    925a:	bd70      	pop	{r4, r5, r6, pc}
    925c:	0000e7e4 	.word	0x0000e7e4
    9260:	0000e7e4 	.word	0x0000e7e4
    9264:	0000e7e4 	.word	0x0000e7e4
    9268:	0000e7f4 	.word	0x0000e7f4

0000926c <memcpy>:
    926c:	b5f0      	push	{r4, r5, r6, r7, lr}
    926e:	0005      	movs	r5, r0
    9270:	2a0f      	cmp	r2, #15
    9272:	d92f      	bls.n	92d4 <memcpy+0x68>
    9274:	000b      	movs	r3, r1
    9276:	4303      	orrs	r3, r0
    9278:	079b      	lsls	r3, r3, #30
    927a:	d134      	bne.n	92e6 <memcpy+0x7a>
    927c:	0016      	movs	r6, r2
    927e:	000c      	movs	r4, r1
    9280:	0003      	movs	r3, r0
    9282:	3e10      	subs	r6, #16
    9284:	0935      	lsrs	r5, r6, #4
    9286:	3501      	adds	r5, #1
    9288:	012d      	lsls	r5, r5, #4
    928a:	1945      	adds	r5, r0, r5
    928c:	6827      	ldr	r7, [r4, #0]
    928e:	601f      	str	r7, [r3, #0]
    9290:	6867      	ldr	r7, [r4, #4]
    9292:	605f      	str	r7, [r3, #4]
    9294:	68a7      	ldr	r7, [r4, #8]
    9296:	609f      	str	r7, [r3, #8]
    9298:	68e7      	ldr	r7, [r4, #12]
    929a:	3410      	adds	r4, #16
    929c:	60df      	str	r7, [r3, #12]
    929e:	3310      	adds	r3, #16
    92a0:	429d      	cmp	r5, r3
    92a2:	d1f3      	bne.n	928c <memcpy+0x20>
    92a4:	230f      	movs	r3, #15
    92a6:	439e      	bics	r6, r3
    92a8:	3610      	adds	r6, #16
    92aa:	1985      	adds	r5, r0, r6
    92ac:	1989      	adds	r1, r1, r6
    92ae:	4013      	ands	r3, r2
    92b0:	2b03      	cmp	r3, #3
    92b2:	d91a      	bls.n	92ea <memcpy+0x7e>
    92b4:	1f1e      	subs	r6, r3, #4
    92b6:	2300      	movs	r3, #0
    92b8:	08b4      	lsrs	r4, r6, #2
    92ba:	3401      	adds	r4, #1
    92bc:	00a4      	lsls	r4, r4, #2
    92be:	58cf      	ldr	r7, [r1, r3]
    92c0:	50ef      	str	r7, [r5, r3]
    92c2:	3304      	adds	r3, #4
    92c4:	42a3      	cmp	r3, r4
    92c6:	d1fa      	bne.n	92be <memcpy+0x52>
    92c8:	2403      	movs	r4, #3
    92ca:	43a6      	bics	r6, r4
    92cc:	1d33      	adds	r3, r6, #4
    92ce:	4022      	ands	r2, r4
    92d0:	18c9      	adds	r1, r1, r3
    92d2:	18ed      	adds	r5, r5, r3
    92d4:	2a00      	cmp	r2, #0
    92d6:	d005      	beq.n	92e4 <memcpy+0x78>
    92d8:	2300      	movs	r3, #0
    92da:	5ccc      	ldrb	r4, [r1, r3]
    92dc:	54ec      	strb	r4, [r5, r3]
    92de:	3301      	adds	r3, #1
    92e0:	4293      	cmp	r3, r2
    92e2:	d1fa      	bne.n	92da <memcpy+0x6e>
    92e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    92e6:	0005      	movs	r5, r0
    92e8:	e7f6      	b.n	92d8 <memcpy+0x6c>
    92ea:	001a      	movs	r2, r3
    92ec:	e7f2      	b.n	92d4 <memcpy+0x68>
    92ee:	46c0      	nop			; (mov r8, r8)

000092f0 <memset>:
    92f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    92f2:	0783      	lsls	r3, r0, #30
    92f4:	d043      	beq.n	937e <memset+0x8e>
    92f6:	1e54      	subs	r4, r2, #1
    92f8:	2a00      	cmp	r2, #0
    92fa:	d03f      	beq.n	937c <memset+0x8c>
    92fc:	b2ce      	uxtb	r6, r1
    92fe:	0002      	movs	r2, r0
    9300:	2503      	movs	r5, #3
    9302:	e002      	b.n	930a <memset+0x1a>
    9304:	001a      	movs	r2, r3
    9306:	3c01      	subs	r4, #1
    9308:	d338      	bcc.n	937c <memset+0x8c>
    930a:	1c53      	adds	r3, r2, #1
    930c:	7016      	strb	r6, [r2, #0]
    930e:	422b      	tst	r3, r5
    9310:	d1f8      	bne.n	9304 <memset+0x14>
    9312:	2c03      	cmp	r4, #3
    9314:	d92a      	bls.n	936c <memset+0x7c>
    9316:	22ff      	movs	r2, #255	; 0xff
    9318:	400a      	ands	r2, r1
    931a:	0215      	lsls	r5, r2, #8
    931c:	4315      	orrs	r5, r2
    931e:	042a      	lsls	r2, r5, #16
    9320:	4315      	orrs	r5, r2
    9322:	2c0f      	cmp	r4, #15
    9324:	d914      	bls.n	9350 <memset+0x60>
    9326:	0027      	movs	r7, r4
    9328:	001a      	movs	r2, r3
    932a:	3f10      	subs	r7, #16
    932c:	093e      	lsrs	r6, r7, #4
    932e:	3601      	adds	r6, #1
    9330:	0136      	lsls	r6, r6, #4
    9332:	199e      	adds	r6, r3, r6
    9334:	6015      	str	r5, [r2, #0]
    9336:	6055      	str	r5, [r2, #4]
    9338:	6095      	str	r5, [r2, #8]
    933a:	60d5      	str	r5, [r2, #12]
    933c:	3210      	adds	r2, #16
    933e:	4296      	cmp	r6, r2
    9340:	d1f8      	bne.n	9334 <memset+0x44>
    9342:	220f      	movs	r2, #15
    9344:	4397      	bics	r7, r2
    9346:	3710      	adds	r7, #16
    9348:	19db      	adds	r3, r3, r7
    934a:	4014      	ands	r4, r2
    934c:	2c03      	cmp	r4, #3
    934e:	d90d      	bls.n	936c <memset+0x7c>
    9350:	001a      	movs	r2, r3
    9352:	1f27      	subs	r7, r4, #4
    9354:	08be      	lsrs	r6, r7, #2
    9356:	3601      	adds	r6, #1
    9358:	00b6      	lsls	r6, r6, #2
    935a:	199e      	adds	r6, r3, r6
    935c:	c220      	stmia	r2!, {r5}
    935e:	42b2      	cmp	r2, r6
    9360:	d1fc      	bne.n	935c <memset+0x6c>
    9362:	2203      	movs	r2, #3
    9364:	4397      	bics	r7, r2
    9366:	3704      	adds	r7, #4
    9368:	19db      	adds	r3, r3, r7
    936a:	4014      	ands	r4, r2
    936c:	2c00      	cmp	r4, #0
    936e:	d005      	beq.n	937c <memset+0x8c>
    9370:	b2c9      	uxtb	r1, r1
    9372:	191c      	adds	r4, r3, r4
    9374:	7019      	strb	r1, [r3, #0]
    9376:	3301      	adds	r3, #1
    9378:	429c      	cmp	r4, r3
    937a:	d1fb      	bne.n	9374 <memset+0x84>
    937c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    937e:	0014      	movs	r4, r2
    9380:	0003      	movs	r3, r0
    9382:	e7c6      	b.n	9312 <memset+0x22>

00009384 <printf>:
    9384:	b40f      	push	{r0, r1, r2, r3}
    9386:	b500      	push	{lr}
    9388:	4906      	ldr	r1, [pc, #24]	; (93a4 <printf+0x20>)
    938a:	b083      	sub	sp, #12
    938c:	ab04      	add	r3, sp, #16
    938e:	6808      	ldr	r0, [r1, #0]
    9390:	cb04      	ldmia	r3!, {r2}
    9392:	6881      	ldr	r1, [r0, #8]
    9394:	9301      	str	r3, [sp, #4]
    9396:	f000 f893 	bl	94c0 <_vfprintf_r>
    939a:	b003      	add	sp, #12
    939c:	bc08      	pop	{r3}
    939e:	b004      	add	sp, #16
    93a0:	4718      	bx	r3
    93a2:	46c0      	nop			; (mov r8, r8)
    93a4:	20000070 	.word	0x20000070

000093a8 <_puts_r>:
    93a8:	b530      	push	{r4, r5, lr}
    93aa:	0004      	movs	r4, r0
    93ac:	b089      	sub	sp, #36	; 0x24
    93ae:	0008      	movs	r0, r1
    93b0:	000d      	movs	r5, r1
    93b2:	f000 f853 	bl	945c <strlen>
    93b6:	ab04      	add	r3, sp, #16
    93b8:	4a21      	ldr	r2, [pc, #132]	; (9440 <_puts_r+0x98>)
    93ba:	9301      	str	r3, [sp, #4]
    93bc:	2302      	movs	r3, #2
    93be:	9206      	str	r2, [sp, #24]
    93c0:	2201      	movs	r2, #1
    93c2:	9302      	str	r3, [sp, #8]
    93c4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    93c6:	9005      	str	r0, [sp, #20]
    93c8:	3001      	adds	r0, #1
    93ca:	9504      	str	r5, [sp, #16]
    93cc:	9207      	str	r2, [sp, #28]
    93ce:	9003      	str	r0, [sp, #12]
    93d0:	68a5      	ldr	r5, [r4, #8]
    93d2:	2b00      	cmp	r3, #0
    93d4:	d02f      	beq.n	9436 <_puts_r+0x8e>
    93d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    93d8:	07db      	lsls	r3, r3, #31
    93da:	d424      	bmi.n	9426 <_puts_r+0x7e>
    93dc:	230c      	movs	r3, #12
    93de:	5eea      	ldrsh	r2, [r5, r3]
    93e0:	b291      	uxth	r1, r2
    93e2:	058b      	lsls	r3, r1, #22
    93e4:	d51c      	bpl.n	9420 <_puts_r+0x78>
    93e6:	2380      	movs	r3, #128	; 0x80
    93e8:	019b      	lsls	r3, r3, #6
    93ea:	4219      	tst	r1, r3
    93ec:	d105      	bne.n	93fa <_puts_r+0x52>
    93ee:	4313      	orrs	r3, r2
    93f0:	81ab      	strh	r3, [r5, #12]
    93f2:	6e6a      	ldr	r2, [r5, #100]	; 0x64
    93f4:	4b13      	ldr	r3, [pc, #76]	; (9444 <_puts_r+0x9c>)
    93f6:	4013      	ands	r3, r2
    93f8:	666b      	str	r3, [r5, #100]	; 0x64
    93fa:	0020      	movs	r0, r4
    93fc:	aa01      	add	r2, sp, #4
    93fe:	0029      	movs	r1, r5
    9400:	f002 fffe 	bl	c400 <__sfvwrite_r>
    9404:	1e44      	subs	r4, r0, #1
    9406:	41a0      	sbcs	r0, r4
    9408:	4244      	negs	r4, r0
    940a:	200a      	movs	r0, #10
    940c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    940e:	4304      	orrs	r4, r0
    9410:	07db      	lsls	r3, r3, #31
    9412:	d402      	bmi.n	941a <_puts_r+0x72>
    9414:	89ab      	ldrh	r3, [r5, #12]
    9416:	059b      	lsls	r3, r3, #22
    9418:	d509      	bpl.n	942e <_puts_r+0x86>
    941a:	0020      	movs	r0, r4
    941c:	b009      	add	sp, #36	; 0x24
    941e:	bd30      	pop	{r4, r5, pc}
    9420:	6da8      	ldr	r0, [r5, #88]	; 0x58
    9422:	f003 f9a7 	bl	c774 <__retarget_lock_acquire_recursive>
    9426:	230c      	movs	r3, #12
    9428:	5eea      	ldrsh	r2, [r5, r3]
    942a:	b291      	uxth	r1, r2
    942c:	e7db      	b.n	93e6 <_puts_r+0x3e>
    942e:	6da8      	ldr	r0, [r5, #88]	; 0x58
    9430:	f003 f9a2 	bl	c778 <__retarget_lock_release_recursive>
    9434:	e7f1      	b.n	941a <_puts_r+0x72>
    9436:	0020      	movs	r0, r4
    9438:	f002 fe5a 	bl	c0f0 <__sinit>
    943c:	e7cb      	b.n	93d6 <_puts_r+0x2e>
    943e:	46c0      	nop			; (mov r8, r8)
    9440:	0000e3ec 	.word	0x0000e3ec
    9444:	ffffdfff 	.word	0xffffdfff

00009448 <puts>:
    9448:	b510      	push	{r4, lr}
    944a:	4b03      	ldr	r3, [pc, #12]	; (9458 <puts+0x10>)
    944c:	0001      	movs	r1, r0
    944e:	6818      	ldr	r0, [r3, #0]
    9450:	f7ff ffaa 	bl	93a8 <_puts_r>
    9454:	bd10      	pop	{r4, pc}
    9456:	46c0      	nop			; (mov r8, r8)
    9458:	20000070 	.word	0x20000070

0000945c <strlen>:
    945c:	b510      	push	{r4, lr}
    945e:	0783      	lsls	r3, r0, #30
    9460:	d025      	beq.n	94ae <strlen+0x52>
    9462:	7803      	ldrb	r3, [r0, #0]
    9464:	2b00      	cmp	r3, #0
    9466:	d024      	beq.n	94b2 <strlen+0x56>
    9468:	0003      	movs	r3, r0
    946a:	2103      	movs	r1, #3
    946c:	e002      	b.n	9474 <strlen+0x18>
    946e:	781a      	ldrb	r2, [r3, #0]
    9470:	2a00      	cmp	r2, #0
    9472:	d01a      	beq.n	94aa <strlen+0x4e>
    9474:	3301      	adds	r3, #1
    9476:	420b      	tst	r3, r1
    9478:	d1f9      	bne.n	946e <strlen+0x12>
    947a:	6819      	ldr	r1, [r3, #0]
    947c:	4a0e      	ldr	r2, [pc, #56]	; (94b8 <strlen+0x5c>)
    947e:	4c0f      	ldr	r4, [pc, #60]	; (94bc <strlen+0x60>)
    9480:	188a      	adds	r2, r1, r2
    9482:	438a      	bics	r2, r1
    9484:	4222      	tst	r2, r4
    9486:	d106      	bne.n	9496 <strlen+0x3a>
    9488:	3304      	adds	r3, #4
    948a:	6819      	ldr	r1, [r3, #0]
    948c:	4a0a      	ldr	r2, [pc, #40]	; (94b8 <strlen+0x5c>)
    948e:	188a      	adds	r2, r1, r2
    9490:	438a      	bics	r2, r1
    9492:	4222      	tst	r2, r4
    9494:	d0f8      	beq.n	9488 <strlen+0x2c>
    9496:	001a      	movs	r2, r3
    9498:	781b      	ldrb	r3, [r3, #0]
    949a:	2b00      	cmp	r3, #0
    949c:	d003      	beq.n	94a6 <strlen+0x4a>
    949e:	3201      	adds	r2, #1
    94a0:	7811      	ldrb	r1, [r2, #0]
    94a2:	2900      	cmp	r1, #0
    94a4:	d1fb      	bne.n	949e <strlen+0x42>
    94a6:	1a10      	subs	r0, r2, r0
    94a8:	bd10      	pop	{r4, pc}
    94aa:	1a18      	subs	r0, r3, r0
    94ac:	e7fc      	b.n	94a8 <strlen+0x4c>
    94ae:	0003      	movs	r3, r0
    94b0:	e7e3      	b.n	947a <strlen+0x1e>
    94b2:	2000      	movs	r0, #0
    94b4:	e7f8      	b.n	94a8 <strlen+0x4c>
    94b6:	46c0      	nop			; (mov r8, r8)
    94b8:	fefefeff 	.word	0xfefefeff
    94bc:	80808080 	.word	0x80808080

000094c0 <_vfprintf_r>:
    94c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    94c2:	46de      	mov	lr, fp
    94c4:	464e      	mov	r6, r9
    94c6:	4645      	mov	r5, r8
    94c8:	4657      	mov	r7, sl
    94ca:	b5e0      	push	{r5, r6, r7, lr}
    94cc:	b0c3      	sub	sp, #268	; 0x10c
    94ce:	4689      	mov	r9, r1
    94d0:	0014      	movs	r4, r2
    94d2:	001d      	movs	r5, r3
    94d4:	930f      	str	r3, [sp, #60]	; 0x3c
    94d6:	0006      	movs	r6, r0
    94d8:	9006      	str	r0, [sp, #24]
    94da:	f003 f939 	bl	c750 <_localeconv_r>
    94de:	6803      	ldr	r3, [r0, #0]
    94e0:	0018      	movs	r0, r3
    94e2:	9318      	str	r3, [sp, #96]	; 0x60
    94e4:	f7ff ffba 	bl	945c <strlen>
    94e8:	9017      	str	r0, [sp, #92]	; 0x5c
    94ea:	2e00      	cmp	r6, #0
    94ec:	d004      	beq.n	94f8 <_vfprintf_r+0x38>
    94ee:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    94f0:	9307      	str	r3, [sp, #28]
    94f2:	2b00      	cmp	r3, #0
    94f4:	d100      	bne.n	94f8 <_vfprintf_r+0x38>
    94f6:	e0a7      	b.n	9648 <_vfprintf_r+0x188>
    94f8:	464b      	mov	r3, r9
    94fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    94fc:	07db      	lsls	r3, r3, #31
    94fe:	d478      	bmi.n	95f2 <_vfprintf_r+0x132>
    9500:	464b      	mov	r3, r9
    9502:	210c      	movs	r1, #12
    9504:	5e59      	ldrsh	r1, [r3, r1]
    9506:	b28b      	uxth	r3, r1
    9508:	059a      	lsls	r2, r3, #22
    950a:	d56e      	bpl.n	95ea <_vfprintf_r+0x12a>
    950c:	2280      	movs	r2, #128	; 0x80
    950e:	0192      	lsls	r2, r2, #6
    9510:	4213      	tst	r3, r2
    9512:	d109      	bne.n	9528 <_vfprintf_r+0x68>
    9514:	430a      	orrs	r2, r1
    9516:	464b      	mov	r3, r9
    9518:	4649      	mov	r1, r9
    951a:	819a      	strh	r2, [r3, #12]
    951c:	6e49      	ldr	r1, [r1, #100]	; 0x64
    951e:	4bcc      	ldr	r3, [pc, #816]	; (9850 <_vfprintf_r+0x390>)
    9520:	400b      	ands	r3, r1
    9522:	4649      	mov	r1, r9
    9524:	664b      	str	r3, [r1, #100]	; 0x64
    9526:	b293      	uxth	r3, r2
    9528:	071a      	lsls	r2, r3, #28
    952a:	d567      	bpl.n	95fc <_vfprintf_r+0x13c>
    952c:	464a      	mov	r2, r9
    952e:	6912      	ldr	r2, [r2, #16]
    9530:	2a00      	cmp	r2, #0
    9532:	d063      	beq.n	95fc <_vfprintf_r+0x13c>
    9534:	221a      	movs	r2, #26
    9536:	401a      	ands	r2, r3
    9538:	2a0a      	cmp	r2, #10
    953a:	d100      	bne.n	953e <_vfprintf_r+0x7e>
    953c:	e088      	b.n	9650 <_vfprintf_r+0x190>
    953e:	ab32      	add	r3, sp, #200	; 0xc8
    9540:	9325      	str	r3, [sp, #148]	; 0x94
    9542:	2300      	movs	r3, #0
    9544:	46cb      	mov	fp, r9
    9546:	af25      	add	r7, sp, #148	; 0x94
    9548:	60bb      	str	r3, [r7, #8]
    954a:	607b      	str	r3, [r7, #4]
    954c:	9407      	str	r4, [sp, #28]
    954e:	9314      	str	r3, [sp, #80]	; 0x50
    9550:	9316      	str	r3, [sp, #88]	; 0x58
    9552:	9315      	str	r3, [sp, #84]	; 0x54
    9554:	ae32      	add	r6, sp, #200	; 0xc8
    9556:	9319      	str	r3, [sp, #100]	; 0x64
    9558:	931a      	str	r3, [sp, #104]	; 0x68
    955a:	930a      	str	r3, [sp, #40]	; 0x28
    955c:	9c07      	ldr	r4, [sp, #28]
    955e:	7823      	ldrb	r3, [r4, #0]
    9560:	2b00      	cmp	r3, #0
    9562:	d101      	bne.n	9568 <_vfprintf_r+0xa8>
    9564:	f000 fd9e 	bl	a0a4 <_vfprintf_r+0xbe4>
    9568:	2b25      	cmp	r3, #37	; 0x25
    956a:	d103      	bne.n	9574 <_vfprintf_r+0xb4>
    956c:	f000 fd9a 	bl	a0a4 <_vfprintf_r+0xbe4>
    9570:	2b25      	cmp	r3, #37	; 0x25
    9572:	d003      	beq.n	957c <_vfprintf_r+0xbc>
    9574:	3401      	adds	r4, #1
    9576:	7823      	ldrb	r3, [r4, #0]
    9578:	2b00      	cmp	r3, #0
    957a:	d1f9      	bne.n	9570 <_vfprintf_r+0xb0>
    957c:	9b07      	ldr	r3, [sp, #28]
    957e:	1ae5      	subs	r5, r4, r3
    9580:	d010      	beq.n	95a4 <_vfprintf_r+0xe4>
    9582:	9b07      	ldr	r3, [sp, #28]
    9584:	6075      	str	r5, [r6, #4]
    9586:	6033      	str	r3, [r6, #0]
    9588:	68bb      	ldr	r3, [r7, #8]
    958a:	195b      	adds	r3, r3, r5
    958c:	60bb      	str	r3, [r7, #8]
    958e:	687b      	ldr	r3, [r7, #4]
    9590:	3301      	adds	r3, #1
    9592:	607b      	str	r3, [r7, #4]
    9594:	2b07      	cmp	r3, #7
    9596:	dc4c      	bgt.n	9632 <_vfprintf_r+0x172>
    9598:	3608      	adds	r6, #8
    959a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    959c:	469c      	mov	ip, r3
    959e:	44ac      	add	ip, r5
    95a0:	4663      	mov	r3, ip
    95a2:	930a      	str	r3, [sp, #40]	; 0x28
    95a4:	7823      	ldrb	r3, [r4, #0]
    95a6:	2b00      	cmp	r3, #0
    95a8:	d101      	bne.n	95ae <_vfprintf_r+0xee>
    95aa:	f000 fc99 	bl	9ee0 <_vfprintf_r+0xa20>
    95ae:	1c63      	adds	r3, r4, #1
    95b0:	9307      	str	r3, [sp, #28]
    95b2:	2300      	movs	r3, #0
    95b4:	aa16      	add	r2, sp, #88	; 0x58
    95b6:	77d3      	strb	r3, [r2, #31]
    95b8:	2201      	movs	r2, #1
    95ba:	4252      	negs	r2, r2
    95bc:	4692      	mov	sl, r2
    95be:	2200      	movs	r2, #0
    95c0:	920b      	str	r2, [sp, #44]	; 0x2c
    95c2:	3220      	adds	r2, #32
    95c4:	4691      	mov	r9, r2
    95c6:	3220      	adds	r2, #32
    95c8:	7863      	ldrb	r3, [r4, #1]
    95ca:	2100      	movs	r1, #0
    95cc:	2000      	movs	r0, #0
    95ce:	2400      	movs	r4, #0
    95d0:	4694      	mov	ip, r2
    95d2:	9a07      	ldr	r2, [sp, #28]
    95d4:	3201      	adds	r2, #1
    95d6:	9207      	str	r2, [sp, #28]
    95d8:	001a      	movs	r2, r3
    95da:	3a20      	subs	r2, #32
    95dc:	2a58      	cmp	r2, #88	; 0x58
    95de:	d900      	bls.n	95e2 <_vfprintf_r+0x122>
    95e0:	e2e7      	b.n	9bb2 <_vfprintf_r+0x6f2>
    95e2:	4d9c      	ldr	r5, [pc, #624]	; (9854 <_vfprintf_r+0x394>)
    95e4:	0092      	lsls	r2, r2, #2
    95e6:	58aa      	ldr	r2, [r5, r2]
    95e8:	4697      	mov	pc, r2
    95ea:	464b      	mov	r3, r9
    95ec:	6d98      	ldr	r0, [r3, #88]	; 0x58
    95ee:	f003 f8c1 	bl	c774 <__retarget_lock_acquire_recursive>
    95f2:	464b      	mov	r3, r9
    95f4:	210c      	movs	r1, #12
    95f6:	5e59      	ldrsh	r1, [r3, r1]
    95f8:	b28b      	uxth	r3, r1
    95fa:	e787      	b.n	950c <_vfprintf_r+0x4c>
    95fc:	4649      	mov	r1, r9
    95fe:	9806      	ldr	r0, [sp, #24]
    9600:	f001 fb0e 	bl	ac20 <__swsetup_r>
    9604:	464b      	mov	r3, r9
    9606:	2800      	cmp	r0, #0
    9608:	d03a      	beq.n	9680 <_vfprintf_r+0x1c0>
    960a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    960c:	07db      	lsls	r3, r3, #31
    960e:	d405      	bmi.n	961c <_vfprintf_r+0x15c>
    9610:	464b      	mov	r3, r9
    9612:	899b      	ldrh	r3, [r3, #12]
    9614:	059b      	lsls	r3, r3, #22
    9616:	d401      	bmi.n	961c <_vfprintf_r+0x15c>
    9618:	f000 ffcf 	bl	a5ba <_vfprintf_r+0x10fa>
    961c:	2301      	movs	r3, #1
    961e:	425b      	negs	r3, r3
    9620:	930a      	str	r3, [sp, #40]	; 0x28
    9622:	980a      	ldr	r0, [sp, #40]	; 0x28
    9624:	b043      	add	sp, #268	; 0x10c
    9626:	bc3c      	pop	{r2, r3, r4, r5}
    9628:	4690      	mov	r8, r2
    962a:	4699      	mov	r9, r3
    962c:	46a2      	mov	sl, r4
    962e:	46ab      	mov	fp, r5
    9630:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9632:	003a      	movs	r2, r7
    9634:	4659      	mov	r1, fp
    9636:	9806      	ldr	r0, [sp, #24]
    9638:	f004 fa14 	bl	da64 <__sprint_r>
    963c:	2800      	cmp	r0, #0
    963e:	d001      	beq.n	9644 <_vfprintf_r+0x184>
    9640:	f000 fcce 	bl	9fe0 <_vfprintf_r+0xb20>
    9644:	ae32      	add	r6, sp, #200	; 0xc8
    9646:	e7a8      	b.n	959a <_vfprintf_r+0xda>
    9648:	9806      	ldr	r0, [sp, #24]
    964a:	f002 fd51 	bl	c0f0 <__sinit>
    964e:	e753      	b.n	94f8 <_vfprintf_r+0x38>
    9650:	464a      	mov	r2, r9
    9652:	210e      	movs	r1, #14
    9654:	5e52      	ldrsh	r2, [r2, r1]
    9656:	2a00      	cmp	r2, #0
    9658:	da00      	bge.n	965c <_vfprintf_r+0x19c>
    965a:	e770      	b.n	953e <_vfprintf_r+0x7e>
    965c:	464a      	mov	r2, r9
    965e:	6e52      	ldr	r2, [r2, #100]	; 0x64
    9660:	07d2      	lsls	r2, r2, #31
    9662:	d405      	bmi.n	9670 <_vfprintf_r+0x1b0>
    9664:	059b      	lsls	r3, r3, #22
    9666:	d403      	bmi.n	9670 <_vfprintf_r+0x1b0>
    9668:	464b      	mov	r3, r9
    966a:	6d98      	ldr	r0, [r3, #88]	; 0x58
    966c:	f003 f884 	bl	c778 <__retarget_lock_release_recursive>
    9670:	002b      	movs	r3, r5
    9672:	0022      	movs	r2, r4
    9674:	4649      	mov	r1, r9
    9676:	9806      	ldr	r0, [sp, #24]
    9678:	f001 fa8e 	bl	ab98 <__sbprintf>
    967c:	900a      	str	r0, [sp, #40]	; 0x28
    967e:	e7d0      	b.n	9622 <_vfprintf_r+0x162>
    9680:	899b      	ldrh	r3, [r3, #12]
    9682:	e757      	b.n	9534 <_vfprintf_r+0x74>
    9684:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9686:	920f      	str	r2, [sp, #60]	; 0x3c
    9688:	425b      	negs	r3, r3
    968a:	930b      	str	r3, [sp, #44]	; 0x2c
    968c:	2304      	movs	r3, #4
    968e:	431c      	orrs	r4, r3
    9690:	9b07      	ldr	r3, [sp, #28]
    9692:	781b      	ldrb	r3, [r3, #0]
    9694:	e79d      	b.n	95d2 <_vfprintf_r+0x112>
    9696:	9b07      	ldr	r3, [sp, #28]
    9698:	2101      	movs	r1, #1
    969a:	781b      	ldrb	r3, [r3, #0]
    969c:	202b      	movs	r0, #43	; 0x2b
    969e:	e798      	b.n	95d2 <_vfprintf_r+0x112>
    96a0:	9b07      	ldr	r3, [sp, #28]
    96a2:	1c5a      	adds	r2, r3, #1
    96a4:	781b      	ldrb	r3, [r3, #0]
    96a6:	4690      	mov	r8, r2
    96a8:	2b2a      	cmp	r3, #42	; 0x2a
    96aa:	d101      	bne.n	96b0 <_vfprintf_r+0x1f0>
    96ac:	f001 fa38 	bl	ab20 <_vfprintf_r+0x1660>
    96b0:	001a      	movs	r2, r3
    96b2:	2500      	movs	r5, #0
    96b4:	3a30      	subs	r2, #48	; 0x30
    96b6:	46aa      	mov	sl, r5
    96b8:	2a09      	cmp	r2, #9
    96ba:	d901      	bls.n	96c0 <_vfprintf_r+0x200>
    96bc:	f001 f96d 	bl	a99a <_vfprintf_r+0x14da>
    96c0:	0025      	movs	r5, r4
    96c2:	4643      	mov	r3, r8
    96c4:	4654      	mov	r4, sl
    96c6:	4688      	mov	r8, r1
    96c8:	4682      	mov	sl, r0
    96ca:	00a1      	lsls	r1, r4, #2
    96cc:	190c      	adds	r4, r1, r4
    96ce:	7818      	ldrb	r0, [r3, #0]
    96d0:	0064      	lsls	r4, r4, #1
    96d2:	18a4      	adds	r4, r4, r2
    96d4:	0002      	movs	r2, r0
    96d6:	1c59      	adds	r1, r3, #1
    96d8:	3a30      	subs	r2, #48	; 0x30
    96da:	000b      	movs	r3, r1
    96dc:	2a09      	cmp	r2, #9
    96de:	d9f4      	bls.n	96ca <_vfprintf_r+0x20a>
    96e0:	9107      	str	r1, [sp, #28]
    96e2:	0003      	movs	r3, r0
    96e4:	4641      	mov	r1, r8
    96e6:	4650      	mov	r0, sl
    96e8:	46a2      	mov	sl, r4
    96ea:	002c      	movs	r4, r5
    96ec:	e774      	b.n	95d8 <_vfprintf_r+0x118>
    96ee:	9312      	str	r3, [sp, #72]	; 0x48
    96f0:	2900      	cmp	r1, #0
    96f2:	d001      	beq.n	96f8 <_vfprintf_r+0x238>
    96f4:	f001 fa2e 	bl	ab54 <_vfprintf_r+0x1694>
    96f8:	4b57      	ldr	r3, [pc, #348]	; (9858 <_vfprintf_r+0x398>)
    96fa:	9319      	str	r3, [sp, #100]	; 0x64
    96fc:	06a3      	lsls	r3, r4, #26
    96fe:	d501      	bpl.n	9704 <_vfprintf_r+0x244>
    9700:	f000 fe9a 	bl	a438 <_vfprintf_r+0xf78>
    9704:	06e3      	lsls	r3, r4, #27
    9706:	d501      	bpl.n	970c <_vfprintf_r+0x24c>
    9708:	f000 fd9a 	bl	a240 <_vfprintf_r+0xd80>
    970c:	0663      	lsls	r3, r4, #25
    970e:	d401      	bmi.n	9714 <_vfprintf_r+0x254>
    9710:	f000 fd96 	bl	a240 <_vfprintf_r+0xd80>
    9714:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9716:	881a      	ldrh	r2, [r3, #0]
    9718:	920c      	str	r2, [sp, #48]	; 0x30
    971a:	2200      	movs	r2, #0
    971c:	3304      	adds	r3, #4
    971e:	920d      	str	r2, [sp, #52]	; 0x34
    9720:	930f      	str	r3, [sp, #60]	; 0x3c
    9722:	07e3      	lsls	r3, r4, #31
    9724:	d401      	bmi.n	972a <_vfprintf_r+0x26a>
    9726:	f000 fd76 	bl	a216 <_vfprintf_r+0xd56>
    972a:	990c      	ldr	r1, [sp, #48]	; 0x30
    972c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    972e:	000b      	movs	r3, r1
    9730:	4313      	orrs	r3, r2
    9732:	001a      	movs	r2, r3
    9734:	2302      	movs	r3, #2
    9736:	2a00      	cmp	r2, #0
    9738:	d008      	beq.n	974c <_vfprintf_r+0x28c>
    973a:	2030      	movs	r0, #48	; 0x30
    973c:	a91e      	add	r1, sp, #120	; 0x78
    973e:	7008      	strb	r0, [r1, #0]
    9740:	2548      	movs	r5, #72	; 0x48
    9742:	4668      	mov	r0, sp
    9744:	1940      	adds	r0, r0, r5
    9746:	7800      	ldrb	r0, [r0, #0]
    9748:	431c      	orrs	r4, r3
    974a:	7048      	strb	r0, [r1, #1]
    974c:	2100      	movs	r1, #0
    974e:	4688      	mov	r8, r1
    9750:	a816      	add	r0, sp, #88	; 0x58
    9752:	77c1      	strb	r1, [r0, #31]
    9754:	4651      	mov	r1, sl
    9756:	3101      	adds	r1, #1
    9758:	d100      	bne.n	975c <_vfprintf_r+0x29c>
    975a:	e0e6      	b.n	992a <_vfprintf_r+0x46a>
    975c:	2180      	movs	r1, #128	; 0x80
    975e:	0020      	movs	r0, r4
    9760:	4388      	bics	r0, r1
    9762:	9009      	str	r0, [sp, #36]	; 0x24
    9764:	2a00      	cmp	r2, #0
    9766:	d000      	beq.n	976a <_vfprintf_r+0x2aa>
    9768:	e0e3      	b.n	9932 <_vfprintf_r+0x472>
    976a:	4652      	mov	r2, sl
    976c:	2a00      	cmp	r2, #0
    976e:	d001      	beq.n	9774 <_vfprintf_r+0x2b4>
    9770:	f000 fc38 	bl	9fe4 <_vfprintf_r+0xb24>
    9774:	2b00      	cmp	r3, #0
    9776:	d001      	beq.n	977c <_vfprintf_r+0x2bc>
    9778:	f000 fd0c 	bl	a194 <_vfprintf_r+0xcd4>
    977c:	2001      	movs	r0, #1
    977e:	ab32      	add	r3, sp, #200	; 0xc8
    9780:	4020      	ands	r0, r4
    9782:	900e      	str	r0, [sp, #56]	; 0x38
    9784:	9311      	str	r3, [sp, #68]	; 0x44
    9786:	d008      	beq.n	979a <_vfprintf_r+0x2da>
    9788:	2327      	movs	r3, #39	; 0x27
    978a:	2130      	movs	r1, #48	; 0x30
    978c:	aa28      	add	r2, sp, #160	; 0xa0
    978e:	54d1      	strb	r1, [r2, r3]
    9790:	aa16      	add	r2, sp, #88	; 0x58
    9792:	4694      	mov	ip, r2
    9794:	3348      	adds	r3, #72	; 0x48
    9796:	4463      	add	r3, ip
    9798:	9311      	str	r3, [sp, #68]	; 0x44
    979a:	4653      	mov	r3, sl
    979c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    979e:	9308      	str	r3, [sp, #32]
    97a0:	4592      	cmp	sl, r2
    97a2:	da00      	bge.n	97a6 <_vfprintf_r+0x2e6>
    97a4:	9208      	str	r2, [sp, #32]
    97a6:	2300      	movs	r3, #0
    97a8:	9313      	str	r3, [sp, #76]	; 0x4c
    97aa:	4643      	mov	r3, r8
    97ac:	2b00      	cmp	r3, #0
    97ae:	d002      	beq.n	97b6 <_vfprintf_r+0x2f6>
    97b0:	9b08      	ldr	r3, [sp, #32]
    97b2:	3301      	adds	r3, #1
    97b4:	9308      	str	r3, [sp, #32]
    97b6:	2302      	movs	r3, #2
    97b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    97ba:	401a      	ands	r2, r3
    97bc:	4691      	mov	r9, r2
    97be:	d002      	beq.n	97c6 <_vfprintf_r+0x306>
    97c0:	9b08      	ldr	r3, [sp, #32]
    97c2:	3302      	adds	r3, #2
    97c4:	9308      	str	r3, [sp, #32]
    97c6:	2384      	movs	r3, #132	; 0x84
    97c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    97ca:	401a      	ands	r2, r3
    97cc:	9210      	str	r2, [sp, #64]	; 0x40
    97ce:	d000      	beq.n	97d2 <_vfprintf_r+0x312>
    97d0:	e207      	b.n	9be2 <_vfprintf_r+0x722>
    97d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    97d4:	9a08      	ldr	r2, [sp, #32]
    97d6:	1a9c      	subs	r4, r3, r2
    97d8:	2c00      	cmp	r4, #0
    97da:	dc00      	bgt.n	97de <_vfprintf_r+0x31e>
    97dc:	e201      	b.n	9be2 <_vfprintf_r+0x722>
    97de:	491f      	ldr	r1, [pc, #124]	; (985c <_vfprintf_r+0x39c>)
    97e0:	68ba      	ldr	r2, [r7, #8]
    97e2:	687b      	ldr	r3, [r7, #4]
    97e4:	4688      	mov	r8, r1
    97e6:	2c10      	cmp	r4, #16
    97e8:	dd21      	ble.n	982e <_vfprintf_r+0x36e>
    97ea:	0031      	movs	r1, r6
    97ec:	2510      	movs	r5, #16
    97ee:	465e      	mov	r6, fp
    97f0:	e003      	b.n	97fa <_vfprintf_r+0x33a>
    97f2:	3c10      	subs	r4, #16
    97f4:	3108      	adds	r1, #8
    97f6:	2c10      	cmp	r4, #16
    97f8:	dd17      	ble.n	982a <_vfprintf_r+0x36a>
    97fa:	4640      	mov	r0, r8
    97fc:	3210      	adds	r2, #16
    97fe:	3301      	adds	r3, #1
    9800:	6008      	str	r0, [r1, #0]
    9802:	604d      	str	r5, [r1, #4]
    9804:	60ba      	str	r2, [r7, #8]
    9806:	607b      	str	r3, [r7, #4]
    9808:	2b07      	cmp	r3, #7
    980a:	ddf2      	ble.n	97f2 <_vfprintf_r+0x332>
    980c:	003a      	movs	r2, r7
    980e:	0031      	movs	r1, r6
    9810:	9806      	ldr	r0, [sp, #24]
    9812:	f004 f927 	bl	da64 <__sprint_r>
    9816:	2800      	cmp	r0, #0
    9818:	d001      	beq.n	981e <_vfprintf_r+0x35e>
    981a:	f000 fccf 	bl	a1bc <_vfprintf_r+0xcfc>
    981e:	3c10      	subs	r4, #16
    9820:	68ba      	ldr	r2, [r7, #8]
    9822:	687b      	ldr	r3, [r7, #4]
    9824:	a932      	add	r1, sp, #200	; 0xc8
    9826:	2c10      	cmp	r4, #16
    9828:	dce7      	bgt.n	97fa <_vfprintf_r+0x33a>
    982a:	46b3      	mov	fp, r6
    982c:	000e      	movs	r6, r1
    982e:	4641      	mov	r1, r8
    9830:	6074      	str	r4, [r6, #4]
    9832:	3301      	adds	r3, #1
    9834:	18a4      	adds	r4, r4, r2
    9836:	6031      	str	r1, [r6, #0]
    9838:	60bc      	str	r4, [r7, #8]
    983a:	607b      	str	r3, [r7, #4]
    983c:	2b07      	cmp	r3, #7
    983e:	dd01      	ble.n	9844 <_vfprintf_r+0x384>
    9840:	f000 fcae 	bl	a1a0 <_vfprintf_r+0xce0>
    9844:	ab16      	add	r3, sp, #88	; 0x58
    9846:	7fdb      	ldrb	r3, [r3, #31]
    9848:	3608      	adds	r6, #8
    984a:	4698      	mov	r8, r3
    984c:	e1ca      	b.n	9be4 <_vfprintf_r+0x724>
    984e:	46c0      	nop			; (mov r8, r8)
    9850:	ffffdfff 	.word	0xffffdfff
    9854:	0000e3f0 	.word	0x0000e3f0
    9858:	0000e578 	.word	0x0000e578
    985c:	0000e598 	.word	0x0000e598
    9860:	2200      	movs	r2, #0
    9862:	9d07      	ldr	r5, [sp, #28]
    9864:	3b30      	subs	r3, #48	; 0x30
    9866:	46a8      	mov	r8, r5
    9868:	920b      	str	r2, [sp, #44]	; 0x2c
    986a:	001a      	movs	r2, r3
    986c:	9408      	str	r4, [sp, #32]
    986e:	002c      	movs	r4, r5
    9870:	4655      	mov	r5, sl
    9872:	4682      	mov	sl, r0
    9874:	4640      	mov	r0, r8
    9876:	4688      	mov	r8, r1
    9878:	0011      	movs	r1, r2
    987a:	2200      	movs	r2, #0
    987c:	0093      	lsls	r3, r2, #2
    987e:	189a      	adds	r2, r3, r2
    9880:	7803      	ldrb	r3, [r0, #0]
    9882:	0052      	lsls	r2, r2, #1
    9884:	188a      	adds	r2, r1, r2
    9886:	0019      	movs	r1, r3
    9888:	3401      	adds	r4, #1
    988a:	3930      	subs	r1, #48	; 0x30
    988c:	0020      	movs	r0, r4
    988e:	2909      	cmp	r1, #9
    9890:	d9f4      	bls.n	987c <_vfprintf_r+0x3bc>
    9892:	9407      	str	r4, [sp, #28]
    9894:	4650      	mov	r0, sl
    9896:	9c08      	ldr	r4, [sp, #32]
    9898:	920b      	str	r2, [sp, #44]	; 0x2c
    989a:	4641      	mov	r1, r8
    989c:	46aa      	mov	sl, r5
    989e:	e69b      	b.n	95d8 <_vfprintf_r+0x118>
    98a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    98a2:	9312      	str	r3, [sp, #72]	; 0x48
    98a4:	6813      	ldr	r3, [r2, #0]
    98a6:	2120      	movs	r1, #32
    98a8:	9308      	str	r3, [sp, #32]
    98aa:	466b      	mov	r3, sp
    98ac:	185b      	adds	r3, r3, r1
    98ae:	781b      	ldrb	r3, [r3, #0]
    98b0:	ad28      	add	r5, sp, #160	; 0xa0
    98b2:	702b      	strb	r3, [r5, #0]
    98b4:	2300      	movs	r3, #0
    98b6:	a916      	add	r1, sp, #88	; 0x58
    98b8:	77cb      	strb	r3, [r1, #31]
    98ba:	0013      	movs	r3, r2
    98bc:	3304      	adds	r3, #4
    98be:	930f      	str	r3, [sp, #60]	; 0x3c
    98c0:	2300      	movs	r3, #0
    98c2:	9409      	str	r4, [sp, #36]	; 0x24
    98c4:	4698      	mov	r8, r3
    98c6:	3301      	adds	r3, #1
    98c8:	9308      	str	r3, [sp, #32]
    98ca:	930e      	str	r3, [sp, #56]	; 0x38
    98cc:	2300      	movs	r3, #0
    98ce:	9511      	str	r5, [sp, #68]	; 0x44
    98d0:	469a      	mov	sl, r3
    98d2:	9313      	str	r3, [sp, #76]	; 0x4c
    98d4:	e76f      	b.n	97b6 <_vfprintf_r+0x2f6>
    98d6:	9312      	str	r3, [sp, #72]	; 0x48
    98d8:	2900      	cmp	r1, #0
    98da:	d001      	beq.n	98e0 <_vfprintf_r+0x420>
    98dc:	f001 f94d 	bl	ab7a <_vfprintf_r+0x16ba>
    98e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    98e2:	06a3      	lsls	r3, r4, #26
    98e4:	d501      	bpl.n	98ea <_vfprintf_r+0x42a>
    98e6:	f000 fd5a 	bl	a39e <_vfprintf_r+0xede>
    98ea:	06e3      	lsls	r3, r4, #27
    98ec:	d501      	bpl.n	98f2 <_vfprintf_r+0x432>
    98ee:	f000 fcab 	bl	a248 <_vfprintf_r+0xd88>
    98f2:	0663      	lsls	r3, r4, #25
    98f4:	d401      	bmi.n	98fa <_vfprintf_r+0x43a>
    98f6:	f000 fca7 	bl	a248 <_vfprintf_r+0xd88>
    98fa:	2100      	movs	r1, #0
    98fc:	5e53      	ldrsh	r3, [r2, r1]
    98fe:	930c      	str	r3, [sp, #48]	; 0x30
    9900:	3204      	adds	r2, #4
    9902:	17db      	asrs	r3, r3, #31
    9904:	930d      	str	r3, [sp, #52]	; 0x34
    9906:	920f      	str	r2, [sp, #60]	; 0x3c
    9908:	2b00      	cmp	r3, #0
    990a:	da01      	bge.n	9910 <_vfprintf_r+0x450>
    990c:	f000 fdb2 	bl	a474 <_vfprintf_r+0xfb4>
    9910:	990c      	ldr	r1, [sp, #48]	; 0x30
    9912:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    9914:	0008      	movs	r0, r1
    9916:	4651      	mov	r1, sl
    9918:	ab16      	add	r3, sp, #88	; 0x58
    991a:	7fdb      	ldrb	r3, [r3, #31]
    991c:	4310      	orrs	r0, r2
    991e:	4698      	mov	r8, r3
    9920:	0002      	movs	r2, r0
    9922:	2301      	movs	r3, #1
    9924:	3101      	adds	r1, #1
    9926:	d000      	beq.n	992a <_vfprintf_r+0x46a>
    9928:	e718      	b.n	975c <_vfprintf_r+0x29c>
    992a:	2a00      	cmp	r2, #0
    992c:	d100      	bne.n	9930 <_vfprintf_r+0x470>
    992e:	e35a      	b.n	9fe6 <_vfprintf_r+0xb26>
    9930:	9409      	str	r4, [sp, #36]	; 0x24
    9932:	2b01      	cmp	r3, #1
    9934:	d101      	bne.n	993a <_vfprintf_r+0x47a>
    9936:	f000 fc06 	bl	a146 <_vfprintf_r+0xc86>
    993a:	2b02      	cmp	r3, #2
    993c:	d000      	beq.n	9940 <_vfprintf_r+0x480>
    993e:	e380      	b.n	a042 <_vfprintf_r+0xb82>
    9940:	9c19      	ldr	r4, [sp, #100]	; 0x64
    9942:	200f      	movs	r0, #15
    9944:	46a1      	mov	r9, r4
    9946:	46b4      	mov	ip, r6
    9948:	ab32      	add	r3, sp, #200	; 0xc8
    994a:	0019      	movs	r1, r3
    994c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    994e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9950:	0004      	movs	r4, r0
    9952:	464d      	mov	r5, r9
    9954:	4014      	ands	r4, r2
    9956:	5d2c      	ldrb	r4, [r5, r4]
    9958:	071e      	lsls	r6, r3, #28
    995a:	0915      	lsrs	r5, r2, #4
    995c:	3901      	subs	r1, #1
    995e:	432e      	orrs	r6, r5
    9960:	700c      	strb	r4, [r1, #0]
    9962:	091c      	lsrs	r4, r3, #4
    9964:	0023      	movs	r3, r4
    9966:	0034      	movs	r4, r6
    9968:	0032      	movs	r2, r6
    996a:	431c      	orrs	r4, r3
    996c:	d1f0      	bne.n	9950 <_vfprintf_r+0x490>
    996e:	920c      	str	r2, [sp, #48]	; 0x30
    9970:	930d      	str	r3, [sp, #52]	; 0x34
    9972:	ab32      	add	r3, sp, #200	; 0xc8
    9974:	1a5b      	subs	r3, r3, r1
    9976:	9111      	str	r1, [sp, #68]	; 0x44
    9978:	4666      	mov	r6, ip
    997a:	930e      	str	r3, [sp, #56]	; 0x38
    997c:	e70d      	b.n	979a <_vfprintf_r+0x2da>
    997e:	4663      	mov	r3, ip
    9980:	431c      	orrs	r4, r3
    9982:	9b07      	ldr	r3, [sp, #28]
    9984:	781b      	ldrb	r3, [r3, #0]
    9986:	e624      	b.n	95d2 <_vfprintf_r+0x112>
    9988:	9b07      	ldr	r3, [sp, #28]
    998a:	781b      	ldrb	r3, [r3, #0]
    998c:	2b6c      	cmp	r3, #108	; 0x6c
    998e:	d101      	bne.n	9994 <_vfprintf_r+0x4d4>
    9990:	f000 fe8c 	bl	a6ac <_vfprintf_r+0x11ec>
    9994:	2210      	movs	r2, #16
    9996:	4314      	orrs	r4, r2
    9998:	e61b      	b.n	95d2 <_vfprintf_r+0x112>
    999a:	2900      	cmp	r1, #0
    999c:	d001      	beq.n	99a2 <_vfprintf_r+0x4e2>
    999e:	f001 f8d5 	bl	ab4c <_vfprintf_r+0x168c>
    99a2:	06a3      	lsls	r3, r4, #26
    99a4:	d501      	bpl.n	99aa <_vfprintf_r+0x4ea>
    99a6:	f000 fe76 	bl	a696 <_vfprintf_r+0x11d6>
    99aa:	06e3      	lsls	r3, r4, #27
    99ac:	d500      	bpl.n	99b0 <_vfprintf_r+0x4f0>
    99ae:	e110      	b.n	9bd2 <_vfprintf_r+0x712>
    99b0:	0663      	lsls	r3, r4, #25
    99b2:	d400      	bmi.n	99b6 <_vfprintf_r+0x4f6>
    99b4:	e10d      	b.n	9bd2 <_vfprintf_r+0x712>
    99b6:	4669      	mov	r1, sp
    99b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    99ba:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    99bc:	681a      	ldr	r2, [r3, #0]
    99be:	3304      	adds	r3, #4
    99c0:	9208      	str	r2, [sp, #32]
    99c2:	8011      	strh	r1, [r2, #0]
    99c4:	930f      	str	r3, [sp, #60]	; 0x3c
    99c6:	e5c9      	b.n	955c <_vfprintf_r+0x9c>
    99c8:	990f      	ldr	r1, [sp, #60]	; 0x3c
    99ca:	2230      	movs	r2, #48	; 0x30
    99cc:	680b      	ldr	r3, [r1, #0]
    99ce:	930c      	str	r3, [sp, #48]	; 0x30
    99d0:	2300      	movs	r3, #0
    99d2:	930d      	str	r3, [sp, #52]	; 0x34
    99d4:	3302      	adds	r3, #2
    99d6:	431c      	orrs	r4, r3
    99d8:	ab1e      	add	r3, sp, #120	; 0x78
    99da:	701a      	strb	r2, [r3, #0]
    99dc:	3248      	adds	r2, #72	; 0x48
    99de:	705a      	strb	r2, [r3, #1]
    99e0:	000b      	movs	r3, r1
    99e2:	3304      	adds	r3, #4
    99e4:	930f      	str	r3, [sp, #60]	; 0x3c
    99e6:	4bc1      	ldr	r3, [pc, #772]	; (9cec <_vfprintf_r+0x82c>)
    99e8:	9212      	str	r2, [sp, #72]	; 0x48
    99ea:	9319      	str	r3, [sp, #100]	; 0x64
    99ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    99ee:	2302      	movs	r3, #2
    99f0:	e6ac      	b.n	974c <_vfprintf_r+0x28c>
    99f2:	464b      	mov	r3, r9
    99f4:	431c      	orrs	r4, r3
    99f6:	9b07      	ldr	r3, [sp, #28]
    99f8:	781b      	ldrb	r3, [r3, #0]
    99fa:	e5ea      	b.n	95d2 <_vfprintf_r+0x112>
    99fc:	9312      	str	r3, [sp, #72]	; 0x48
    99fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9a00:	a916      	add	r1, sp, #88	; 0x58
    9a02:	1d1d      	adds	r5, r3, #4
    9a04:	681b      	ldr	r3, [r3, #0]
    9a06:	001a      	movs	r2, r3
    9a08:	9311      	str	r3, [sp, #68]	; 0x44
    9a0a:	2300      	movs	r3, #0
    9a0c:	77cb      	strb	r3, [r1, #31]
    9a0e:	2a00      	cmp	r2, #0
    9a10:	d101      	bne.n	9a16 <_vfprintf_r+0x556>
    9a12:	f000 ff01 	bl	a818 <_vfprintf_r+0x1358>
    9a16:	4653      	mov	r3, sl
    9a18:	3301      	adds	r3, #1
    9a1a:	d101      	bne.n	9a20 <_vfprintf_r+0x560>
    9a1c:	f000 fe64 	bl	a6e8 <_vfprintf_r+0x1228>
    9a20:	4652      	mov	r2, sl
    9a22:	2100      	movs	r1, #0
    9a24:	9811      	ldr	r0, [sp, #68]	; 0x44
    9a26:	f003 f9d5 	bl	cdd4 <memchr>
    9a2a:	2800      	cmp	r0, #0
    9a2c:	d101      	bne.n	9a32 <_vfprintf_r+0x572>
    9a2e:	f000 ff78 	bl	a922 <_vfprintf_r+0x1462>
    9a32:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9a34:	1ac3      	subs	r3, r0, r3
    9a36:	001a      	movs	r2, r3
    9a38:	930e      	str	r3, [sp, #56]	; 0x38
    9a3a:	43db      	mvns	r3, r3
    9a3c:	17db      	asrs	r3, r3, #31
    9a3e:	401a      	ands	r2, r3
    9a40:	ab16      	add	r3, sp, #88	; 0x58
    9a42:	7fdb      	ldrb	r3, [r3, #31]
    9a44:	9208      	str	r2, [sp, #32]
    9a46:	4698      	mov	r8, r3
    9a48:	2300      	movs	r3, #0
    9a4a:	950f      	str	r5, [sp, #60]	; 0x3c
    9a4c:	9409      	str	r4, [sp, #36]	; 0x24
    9a4e:	469a      	mov	sl, r3
    9a50:	9313      	str	r3, [sp, #76]	; 0x4c
    9a52:	e6aa      	b.n	97aa <_vfprintf_r+0x2ea>
    9a54:	2308      	movs	r3, #8
    9a56:	431c      	orrs	r4, r3
    9a58:	9b07      	ldr	r3, [sp, #28]
    9a5a:	781b      	ldrb	r3, [r3, #0]
    9a5c:	e5b9      	b.n	95d2 <_vfprintf_r+0x112>
    9a5e:	9312      	str	r3, [sp, #72]	; 0x48
    9a60:	2310      	movs	r3, #16
    9a62:	431c      	orrs	r4, r3
    9a64:	06a3      	lsls	r3, r4, #26
    9a66:	d501      	bpl.n	9a6c <_vfprintf_r+0x5ac>
    9a68:	f000 fca7 	bl	a3ba <_vfprintf_r+0xefa>
    9a6c:	06e3      	lsls	r3, r4, #27
    9a6e:	d500      	bpl.n	9a72 <_vfprintf_r+0x5b2>
    9a70:	e3ee      	b.n	a250 <_vfprintf_r+0xd90>
    9a72:	0663      	lsls	r3, r4, #25
    9a74:	d400      	bmi.n	9a78 <_vfprintf_r+0x5b8>
    9a76:	e3eb      	b.n	a250 <_vfprintf_r+0xd90>
    9a78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9a7a:	881a      	ldrh	r2, [r3, #0]
    9a7c:	920c      	str	r2, [sp, #48]	; 0x30
    9a7e:	2200      	movs	r2, #0
    9a80:	3304      	adds	r3, #4
    9a82:	920d      	str	r2, [sp, #52]	; 0x34
    9a84:	930f      	str	r3, [sp, #60]	; 0x3c
    9a86:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9a88:	2300      	movs	r3, #0
    9a8a:	e65f      	b.n	974c <_vfprintf_r+0x28c>
    9a8c:	9312      	str	r3, [sp, #72]	; 0x48
    9a8e:	2310      	movs	r3, #16
    9a90:	431c      	orrs	r4, r3
    9a92:	06a3      	lsls	r3, r4, #26
    9a94:	d501      	bpl.n	9a9a <_vfprintf_r+0x5da>
    9a96:	f000 fcba 	bl	a40e <_vfprintf_r+0xf4e>
    9a9a:	06e3      	lsls	r3, r4, #27
    9a9c:	d500      	bpl.n	9aa0 <_vfprintf_r+0x5e0>
    9a9e:	e3da      	b.n	a256 <_vfprintf_r+0xd96>
    9aa0:	0663      	lsls	r3, r4, #25
    9aa2:	d400      	bmi.n	9aa6 <_vfprintf_r+0x5e6>
    9aa4:	e3d7      	b.n	a256 <_vfprintf_r+0xd96>
    9aa6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9aa8:	881a      	ldrh	r2, [r3, #0]
    9aaa:	920c      	str	r2, [sp, #48]	; 0x30
    9aac:	2200      	movs	r2, #0
    9aae:	3304      	adds	r3, #4
    9ab0:	920d      	str	r2, [sp, #52]	; 0x34
    9ab2:	930f      	str	r3, [sp, #60]	; 0x3c
    9ab4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9ab6:	2301      	movs	r3, #1
    9ab8:	e648      	b.n	974c <_vfprintf_r+0x28c>
    9aba:	9312      	str	r3, [sp, #72]	; 0x48
    9abc:	2900      	cmp	r1, #0
    9abe:	d001      	beq.n	9ac4 <_vfprintf_r+0x604>
    9ac0:	f001 f857 	bl	ab72 <_vfprintf_r+0x16b2>
    9ac4:	4b8a      	ldr	r3, [pc, #552]	; (9cf0 <_vfprintf_r+0x830>)
    9ac6:	9319      	str	r3, [sp, #100]	; 0x64
    9ac8:	e618      	b.n	96fc <_vfprintf_r+0x23c>
    9aca:	2301      	movs	r3, #1
    9acc:	431c      	orrs	r4, r3
    9ace:	9b07      	ldr	r3, [sp, #28]
    9ad0:	781b      	ldrb	r3, [r3, #0]
    9ad2:	e57e      	b.n	95d2 <_vfprintf_r+0x112>
    9ad4:	2380      	movs	r3, #128	; 0x80
    9ad6:	431c      	orrs	r4, r3
    9ad8:	9b07      	ldr	r3, [sp, #28]
    9ada:	781b      	ldrb	r3, [r3, #0]
    9adc:	e579      	b.n	95d2 <_vfprintf_r+0x112>
    9ade:	9b07      	ldr	r3, [sp, #28]
    9ae0:	781b      	ldrb	r3, [r3, #0]
    9ae2:	2800      	cmp	r0, #0
    9ae4:	d000      	beq.n	9ae8 <_vfprintf_r+0x628>
    9ae6:	e574      	b.n	95d2 <_vfprintf_r+0x112>
    9ae8:	2101      	movs	r1, #1
    9aea:	3020      	adds	r0, #32
    9aec:	e571      	b.n	95d2 <_vfprintf_r+0x112>
    9aee:	9312      	str	r3, [sp, #72]	; 0x48
    9af0:	2900      	cmp	r1, #0
    9af2:	d001      	beq.n	9af8 <_vfprintf_r+0x638>
    9af4:	f001 f839 	bl	ab6a <_vfprintf_r+0x16aa>
    9af8:	2207      	movs	r2, #7
    9afa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9afc:	3307      	adds	r3, #7
    9afe:	4393      	bics	r3, r2
    9b00:	3201      	adds	r2, #1
    9b02:	4694      	mov	ip, r2
    9b04:	449c      	add	ip, r3
    9b06:	4662      	mov	r2, ip
    9b08:	920f      	str	r2, [sp, #60]	; 0x3c
    9b0a:	681a      	ldr	r2, [r3, #0]
    9b0c:	9216      	str	r2, [sp, #88]	; 0x58
    9b0e:	685b      	ldr	r3, [r3, #4]
    9b10:	2201      	movs	r2, #1
    9b12:	9315      	str	r3, [sp, #84]	; 0x54
    9b14:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9b16:	9d16      	ldr	r5, [sp, #88]	; 0x58
    9b18:	005b      	lsls	r3, r3, #1
    9b1a:	085b      	lsrs	r3, r3, #1
    9b1c:	4698      	mov	r8, r3
    9b1e:	4252      	negs	r2, r2
    9b20:	4b74      	ldr	r3, [pc, #464]	; (9cf4 <_vfprintf_r+0x834>)
    9b22:	0028      	movs	r0, r5
    9b24:	4641      	mov	r1, r8
    9b26:	f7ff fa05 	bl	8f34 <__aeabi_dcmpun>
    9b2a:	2800      	cmp	r0, #0
    9b2c:	d001      	beq.n	9b32 <_vfprintf_r+0x672>
    9b2e:	f000 fcb4 	bl	a49a <_vfprintf_r+0xfda>
    9b32:	2201      	movs	r2, #1
    9b34:	4b6f      	ldr	r3, [pc, #444]	; (9cf4 <_vfprintf_r+0x834>)
    9b36:	4252      	negs	r2, r2
    9b38:	0028      	movs	r0, r5
    9b3a:	4641      	mov	r1, r8
    9b3c:	f7fc fe7a 	bl	6834 <__aeabi_dcmple>
    9b40:	2800      	cmp	r0, #0
    9b42:	d001      	beq.n	9b48 <_vfprintf_r+0x688>
    9b44:	f000 fca9 	bl	a49a <_vfprintf_r+0xfda>
    9b48:	2200      	movs	r2, #0
    9b4a:	2300      	movs	r3, #0
    9b4c:	9816      	ldr	r0, [sp, #88]	; 0x58
    9b4e:	9915      	ldr	r1, [sp, #84]	; 0x54
    9b50:	f7fc fe66 	bl	6820 <__aeabi_dcmplt>
    9b54:	2800      	cmp	r0, #0
    9b56:	d001      	beq.n	9b5c <_vfprintf_r+0x69c>
    9b58:	f000 fd55 	bl	a606 <_vfprintf_r+0x1146>
    9b5c:	ab16      	add	r3, sp, #88	; 0x58
    9b5e:	7fdb      	ldrb	r3, [r3, #31]
    9b60:	4698      	mov	r8, r3
    9b62:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9b64:	2b47      	cmp	r3, #71	; 0x47
    9b66:	dd01      	ble.n	9b6c <_vfprintf_r+0x6ac>
    9b68:	f000 fdb4 	bl	a6d4 <_vfprintf_r+0x1214>
    9b6c:	4b62      	ldr	r3, [pc, #392]	; (9cf8 <_vfprintf_r+0x838>)
    9b6e:	9311      	str	r3, [sp, #68]	; 0x44
    9b70:	2380      	movs	r3, #128	; 0x80
    9b72:	439c      	bics	r4, r3
    9b74:	3b7d      	subs	r3, #125	; 0x7d
    9b76:	9308      	str	r3, [sp, #32]
    9b78:	930e      	str	r3, [sp, #56]	; 0x38
    9b7a:	2300      	movs	r3, #0
    9b7c:	9409      	str	r4, [sp, #36]	; 0x24
    9b7e:	469a      	mov	sl, r3
    9b80:	9313      	str	r3, [sp, #76]	; 0x4c
    9b82:	e612      	b.n	97aa <_vfprintf_r+0x2ea>
    9b84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9b86:	1d1a      	adds	r2, r3, #4
    9b88:	681b      	ldr	r3, [r3, #0]
    9b8a:	930b      	str	r3, [sp, #44]	; 0x2c
    9b8c:	2b00      	cmp	r3, #0
    9b8e:	da00      	bge.n	9b92 <_vfprintf_r+0x6d2>
    9b90:	e578      	b.n	9684 <_vfprintf_r+0x1c4>
    9b92:	9b07      	ldr	r3, [sp, #28]
    9b94:	920f      	str	r2, [sp, #60]	; 0x3c
    9b96:	781b      	ldrb	r3, [r3, #0]
    9b98:	e51b      	b.n	95d2 <_vfprintf_r+0x112>
    9b9a:	9312      	str	r3, [sp, #72]	; 0x48
    9b9c:	2900      	cmp	r1, #0
    9b9e:	d001      	beq.n	9ba4 <_vfprintf_r+0x6e4>
    9ba0:	f000 ffcc 	bl	ab3c <_vfprintf_r+0x167c>
    9ba4:	2310      	movs	r3, #16
    9ba6:	431c      	orrs	r4, r3
    9ba8:	e69a      	b.n	98e0 <_vfprintf_r+0x420>
    9baa:	9312      	str	r3, [sp, #72]	; 0x48
    9bac:	e771      	b.n	9a92 <_vfprintf_r+0x5d2>
    9bae:	9312      	str	r3, [sp, #72]	; 0x48
    9bb0:	e758      	b.n	9a64 <_vfprintf_r+0x5a4>
    9bb2:	9312      	str	r3, [sp, #72]	; 0x48
    9bb4:	2900      	cmp	r1, #0
    9bb6:	d001      	beq.n	9bbc <_vfprintf_r+0x6fc>
    9bb8:	f000 ffd3 	bl	ab62 <_vfprintf_r+0x16a2>
    9bbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9bbe:	2b00      	cmp	r3, #0
    9bc0:	d100      	bne.n	9bc4 <_vfprintf_r+0x704>
    9bc2:	e18d      	b.n	9ee0 <_vfprintf_r+0xa20>
    9bc4:	ad28      	add	r5, sp, #160	; 0xa0
    9bc6:	702b      	strb	r3, [r5, #0]
    9bc8:	2300      	movs	r3, #0
    9bca:	aa16      	add	r2, sp, #88	; 0x58
    9bcc:	77d3      	strb	r3, [r2, #31]
    9bce:	9409      	str	r4, [sp, #36]	; 0x24
    9bd0:	e678      	b.n	98c4 <_vfprintf_r+0x404>
    9bd2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    9bd4:	990a      	ldr	r1, [sp, #40]	; 0x28
    9bd6:	6813      	ldr	r3, [r2, #0]
    9bd8:	6019      	str	r1, [r3, #0]
    9bda:	0013      	movs	r3, r2
    9bdc:	3304      	adds	r3, #4
    9bde:	930f      	str	r3, [sp, #60]	; 0x3c
    9be0:	e4bc      	b.n	955c <_vfprintf_r+0x9c>
    9be2:	68bc      	ldr	r4, [r7, #8]
    9be4:	4643      	mov	r3, r8
    9be6:	2b00      	cmp	r3, #0
    9be8:	d00f      	beq.n	9c0a <_vfprintf_r+0x74a>
    9bea:	aa16      	add	r2, sp, #88	; 0x58
    9bec:	231f      	movs	r3, #31
    9bee:	4694      	mov	ip, r2
    9bf0:	4463      	add	r3, ip
    9bf2:	6033      	str	r3, [r6, #0]
    9bf4:	2301      	movs	r3, #1
    9bf6:	6073      	str	r3, [r6, #4]
    9bf8:	687b      	ldr	r3, [r7, #4]
    9bfa:	3401      	adds	r4, #1
    9bfc:	3301      	adds	r3, #1
    9bfe:	60bc      	str	r4, [r7, #8]
    9c00:	607b      	str	r3, [r7, #4]
    9c02:	2b07      	cmp	r3, #7
    9c04:	dd00      	ble.n	9c08 <_vfprintf_r+0x748>
    9c06:	e203      	b.n	a010 <_vfprintf_r+0xb50>
    9c08:	3608      	adds	r6, #8
    9c0a:	464b      	mov	r3, r9
    9c0c:	2b00      	cmp	r3, #0
    9c0e:	d00c      	beq.n	9c2a <_vfprintf_r+0x76a>
    9c10:	ab1e      	add	r3, sp, #120	; 0x78
    9c12:	6033      	str	r3, [r6, #0]
    9c14:	2302      	movs	r3, #2
    9c16:	6073      	str	r3, [r6, #4]
    9c18:	687b      	ldr	r3, [r7, #4]
    9c1a:	3402      	adds	r4, #2
    9c1c:	3301      	adds	r3, #1
    9c1e:	60bc      	str	r4, [r7, #8]
    9c20:	607b      	str	r3, [r7, #4]
    9c22:	2b07      	cmp	r3, #7
    9c24:	dd00      	ble.n	9c28 <_vfprintf_r+0x768>
    9c26:	e1fd      	b.n	a024 <_vfprintf_r+0xb64>
    9c28:	3608      	adds	r6, #8
    9c2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9c2c:	2b80      	cmp	r3, #128	; 0x80
    9c2e:	d100      	bne.n	9c32 <_vfprintf_r+0x772>
    9c30:	e173      	b.n	9f1a <_vfprintf_r+0xa5a>
    9c32:	4653      	mov	r3, sl
    9c34:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    9c36:	1a9d      	subs	r5, r3, r2
    9c38:	2d00      	cmp	r5, #0
    9c3a:	dd32      	ble.n	9ca2 <_vfprintf_r+0x7e2>
    9c3c:	4a2f      	ldr	r2, [pc, #188]	; (9cfc <_vfprintf_r+0x83c>)
    9c3e:	687b      	ldr	r3, [r7, #4]
    9c40:	4691      	mov	r9, r2
    9c42:	2d10      	cmp	r5, #16
    9c44:	dd22      	ble.n	9c8c <_vfprintf_r+0x7cc>
    9c46:	2210      	movs	r2, #16
    9c48:	4692      	mov	sl, r2
    9c4a:	0022      	movs	r2, r4
    9c4c:	465c      	mov	r4, fp
    9c4e:	e003      	b.n	9c58 <_vfprintf_r+0x798>
    9c50:	3d10      	subs	r5, #16
    9c52:	3608      	adds	r6, #8
    9c54:	2d10      	cmp	r5, #16
    9c56:	dd17      	ble.n	9c88 <_vfprintf_r+0x7c8>
    9c58:	4649      	mov	r1, r9
    9c5a:	6031      	str	r1, [r6, #0]
    9c5c:	4651      	mov	r1, sl
    9c5e:	3210      	adds	r2, #16
    9c60:	3301      	adds	r3, #1
    9c62:	6071      	str	r1, [r6, #4]
    9c64:	60ba      	str	r2, [r7, #8]
    9c66:	607b      	str	r3, [r7, #4]
    9c68:	2b07      	cmp	r3, #7
    9c6a:	ddf1      	ble.n	9c50 <_vfprintf_r+0x790>
    9c6c:	003a      	movs	r2, r7
    9c6e:	0021      	movs	r1, r4
    9c70:	9806      	ldr	r0, [sp, #24]
    9c72:	f003 fef7 	bl	da64 <__sprint_r>
    9c76:	2800      	cmp	r0, #0
    9c78:	d000      	beq.n	9c7c <_vfprintf_r+0x7bc>
    9c7a:	e18a      	b.n	9f92 <_vfprintf_r+0xad2>
    9c7c:	3d10      	subs	r5, #16
    9c7e:	68ba      	ldr	r2, [r7, #8]
    9c80:	687b      	ldr	r3, [r7, #4]
    9c82:	ae32      	add	r6, sp, #200	; 0xc8
    9c84:	2d10      	cmp	r5, #16
    9c86:	dce7      	bgt.n	9c58 <_vfprintf_r+0x798>
    9c88:	46a3      	mov	fp, r4
    9c8a:	0014      	movs	r4, r2
    9c8c:	464a      	mov	r2, r9
    9c8e:	1964      	adds	r4, r4, r5
    9c90:	3301      	adds	r3, #1
    9c92:	6032      	str	r2, [r6, #0]
    9c94:	6075      	str	r5, [r6, #4]
    9c96:	60bc      	str	r4, [r7, #8]
    9c98:	607b      	str	r3, [r7, #4]
    9c9a:	2b07      	cmp	r3, #7
    9c9c:	dd00      	ble.n	9ca0 <_vfprintf_r+0x7e0>
    9c9e:	e1ad      	b.n	9ffc <_vfprintf_r+0xb3c>
    9ca0:	3608      	adds	r6, #8
    9ca2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9ca4:	05db      	lsls	r3, r3, #23
    9ca6:	d500      	bpl.n	9caa <_vfprintf_r+0x7ea>
    9ca8:	e0be      	b.n	9e28 <_vfprintf_r+0x968>
    9caa:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9cac:	6033      	str	r3, [r6, #0]
    9cae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9cb0:	469c      	mov	ip, r3
    9cb2:	6073      	str	r3, [r6, #4]
    9cb4:	687b      	ldr	r3, [r7, #4]
    9cb6:	4464      	add	r4, ip
    9cb8:	3301      	adds	r3, #1
    9cba:	60bc      	str	r4, [r7, #8]
    9cbc:	607b      	str	r3, [r7, #4]
    9cbe:	2b07      	cmp	r3, #7
    9cc0:	dd00      	ble.n	9cc4 <_vfprintf_r+0x804>
    9cc2:	e0a6      	b.n	9e12 <_vfprintf_r+0x952>
    9cc4:	3608      	adds	r6, #8
    9cc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9cc8:	075b      	lsls	r3, r3, #29
    9cca:	d54a      	bpl.n	9d62 <_vfprintf_r+0x8a2>
    9ccc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9cce:	9a08      	ldr	r2, [sp, #32]
    9cd0:	1a9d      	subs	r5, r3, r2
    9cd2:	2d00      	cmp	r5, #0
    9cd4:	dd45      	ble.n	9d62 <_vfprintf_r+0x8a2>
    9cd6:	4a0a      	ldr	r2, [pc, #40]	; (9d00 <_vfprintf_r+0x840>)
    9cd8:	687b      	ldr	r3, [r7, #4]
    9cda:	4690      	mov	r8, r2
    9cdc:	2d10      	cmp	r5, #16
    9cde:	dd2f      	ble.n	9d40 <_vfprintf_r+0x880>
    9ce0:	2210      	movs	r2, #16
    9ce2:	4691      	mov	r9, r2
    9ce4:	0022      	movs	r2, r4
    9ce6:	465c      	mov	r4, fp
    9ce8:	e010      	b.n	9d0c <_vfprintf_r+0x84c>
    9cea:	46c0      	nop			; (mov r8, r8)
    9cec:	0000e578 	.word	0x0000e578
    9cf0:	0000e564 	.word	0x0000e564
    9cf4:	7fefffff 	.word	0x7fefffff
    9cf8:	0000e554 	.word	0x0000e554
    9cfc:	0000e5a8 	.word	0x0000e5a8
    9d00:	0000e598 	.word	0x0000e598
    9d04:	3d10      	subs	r5, #16
    9d06:	3608      	adds	r6, #8
    9d08:	2d10      	cmp	r5, #16
    9d0a:	dd17      	ble.n	9d3c <_vfprintf_r+0x87c>
    9d0c:	49d1      	ldr	r1, [pc, #836]	; (a054 <_vfprintf_r+0xb94>)
    9d0e:	3210      	adds	r2, #16
    9d10:	6031      	str	r1, [r6, #0]
    9d12:	4649      	mov	r1, r9
    9d14:	3301      	adds	r3, #1
    9d16:	6071      	str	r1, [r6, #4]
    9d18:	60ba      	str	r2, [r7, #8]
    9d1a:	607b      	str	r3, [r7, #4]
    9d1c:	2b07      	cmp	r3, #7
    9d1e:	ddf1      	ble.n	9d04 <_vfprintf_r+0x844>
    9d20:	003a      	movs	r2, r7
    9d22:	0021      	movs	r1, r4
    9d24:	9806      	ldr	r0, [sp, #24]
    9d26:	f003 fe9d 	bl	da64 <__sprint_r>
    9d2a:	2800      	cmp	r0, #0
    9d2c:	d000      	beq.n	9d30 <_vfprintf_r+0x870>
    9d2e:	e130      	b.n	9f92 <_vfprintf_r+0xad2>
    9d30:	3d10      	subs	r5, #16
    9d32:	68ba      	ldr	r2, [r7, #8]
    9d34:	687b      	ldr	r3, [r7, #4]
    9d36:	ae32      	add	r6, sp, #200	; 0xc8
    9d38:	2d10      	cmp	r5, #16
    9d3a:	dce7      	bgt.n	9d0c <_vfprintf_r+0x84c>
    9d3c:	46a3      	mov	fp, r4
    9d3e:	0014      	movs	r4, r2
    9d40:	4642      	mov	r2, r8
    9d42:	1964      	adds	r4, r4, r5
    9d44:	3301      	adds	r3, #1
    9d46:	c624      	stmia	r6!, {r2, r5}
    9d48:	60bc      	str	r4, [r7, #8]
    9d4a:	607b      	str	r3, [r7, #4]
    9d4c:	2b07      	cmp	r3, #7
    9d4e:	dd08      	ble.n	9d62 <_vfprintf_r+0x8a2>
    9d50:	003a      	movs	r2, r7
    9d52:	4659      	mov	r1, fp
    9d54:	9806      	ldr	r0, [sp, #24]
    9d56:	f003 fe85 	bl	da64 <__sprint_r>
    9d5a:	2800      	cmp	r0, #0
    9d5c:	d000      	beq.n	9d60 <_vfprintf_r+0x8a0>
    9d5e:	e13f      	b.n	9fe0 <_vfprintf_r+0xb20>
    9d60:	68bc      	ldr	r4, [r7, #8]
    9d62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9d64:	9908      	ldr	r1, [sp, #32]
    9d66:	428b      	cmp	r3, r1
    9d68:	da00      	bge.n	9d6c <_vfprintf_r+0x8ac>
    9d6a:	000b      	movs	r3, r1
    9d6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9d6e:	4694      	mov	ip, r2
    9d70:	449c      	add	ip, r3
    9d72:	4663      	mov	r3, ip
    9d74:	930a      	str	r3, [sp, #40]	; 0x28
    9d76:	2c00      	cmp	r4, #0
    9d78:	d000      	beq.n	9d7c <_vfprintf_r+0x8bc>
    9d7a:	e129      	b.n	9fd0 <_vfprintf_r+0xb10>
    9d7c:	2300      	movs	r3, #0
    9d7e:	ae32      	add	r6, sp, #200	; 0xc8
    9d80:	607b      	str	r3, [r7, #4]
    9d82:	f7ff fbeb 	bl	955c <_vfprintf_r+0x9c>
    9d86:	9b14      	ldr	r3, [sp, #80]	; 0x50
    9d88:	2b01      	cmp	r3, #1
    9d8a:	dc00      	bgt.n	9d8e <_vfprintf_r+0x8ce>
    9d8c:	e103      	b.n	9f96 <_vfprintf_r+0xad6>
    9d8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9d90:	3401      	adds	r4, #1
    9d92:	6033      	str	r3, [r6, #0]
    9d94:	2301      	movs	r3, #1
    9d96:	6073      	str	r3, [r6, #4]
    9d98:	687b      	ldr	r3, [r7, #4]
    9d9a:	60bc      	str	r4, [r7, #8]
    9d9c:	3301      	adds	r3, #1
    9d9e:	607b      	str	r3, [r7, #4]
    9da0:	2b07      	cmp	r3, #7
    9da2:	dd00      	ble.n	9da6 <_vfprintf_r+0x8e6>
    9da4:	e2ef      	b.n	a386 <_vfprintf_r+0xec6>
    9da6:	3608      	adds	r6, #8
    9da8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    9daa:	3301      	adds	r3, #1
    9dac:	6032      	str	r2, [r6, #0]
    9dae:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    9db0:	4698      	mov	r8, r3
    9db2:	4694      	mov	ip, r2
    9db4:	4464      	add	r4, ip
    9db6:	6072      	str	r2, [r6, #4]
    9db8:	60bc      	str	r4, [r7, #8]
    9dba:	607b      	str	r3, [r7, #4]
    9dbc:	2b07      	cmp	r3, #7
    9dbe:	dd00      	ble.n	9dc2 <_vfprintf_r+0x902>
    9dc0:	e318      	b.n	a3f4 <_vfprintf_r+0xf34>
    9dc2:	3608      	adds	r6, #8
    9dc4:	2200      	movs	r2, #0
    9dc6:	2300      	movs	r3, #0
    9dc8:	9816      	ldr	r0, [sp, #88]	; 0x58
    9dca:	9915      	ldr	r1, [sp, #84]	; 0x54
    9dcc:	f7fc fd22 	bl	6814 <__aeabi_dcmpeq>
    9dd0:	2800      	cmp	r0, #0
    9dd2:	d000      	beq.n	9dd6 <_vfprintf_r+0x916>
    9dd4:	e1f4      	b.n	a1c0 <_vfprintf_r+0xd00>
    9dd6:	9d11      	ldr	r5, [sp, #68]	; 0x44
    9dd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    9dda:	3501      	adds	r5, #1
    9ddc:	3b01      	subs	r3, #1
    9dde:	6035      	str	r5, [r6, #0]
    9de0:	6073      	str	r3, [r6, #4]
    9de2:	18e4      	adds	r4, r4, r3
    9de4:	2301      	movs	r3, #1
    9de6:	469c      	mov	ip, r3
    9de8:	44e0      	add	r8, ip
    9dea:	4643      	mov	r3, r8
    9dec:	60bc      	str	r4, [r7, #8]
    9dee:	607b      	str	r3, [r7, #4]
    9df0:	2b07      	cmp	r3, #7
    9df2:	dd00      	ble.n	9df6 <_vfprintf_r+0x936>
    9df4:	e0e0      	b.n	9fb8 <_vfprintf_r+0xaf8>
    9df6:	3608      	adds	r6, #8
    9df8:	ab21      	add	r3, sp, #132	; 0x84
    9dfa:	6033      	str	r3, [r6, #0]
    9dfc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    9dfe:	469c      	mov	ip, r3
    9e00:	6073      	str	r3, [r6, #4]
    9e02:	4643      	mov	r3, r8
    9e04:	4464      	add	r4, ip
    9e06:	3301      	adds	r3, #1
    9e08:	60bc      	str	r4, [r7, #8]
    9e0a:	607b      	str	r3, [r7, #4]
    9e0c:	2b07      	cmp	r3, #7
    9e0e:	dc00      	bgt.n	9e12 <_vfprintf_r+0x952>
    9e10:	e758      	b.n	9cc4 <_vfprintf_r+0x804>
    9e12:	003a      	movs	r2, r7
    9e14:	4659      	mov	r1, fp
    9e16:	9806      	ldr	r0, [sp, #24]
    9e18:	f003 fe24 	bl	da64 <__sprint_r>
    9e1c:	2800      	cmp	r0, #0
    9e1e:	d000      	beq.n	9e22 <_vfprintf_r+0x962>
    9e20:	e0de      	b.n	9fe0 <_vfprintf_r+0xb20>
    9e22:	68bc      	ldr	r4, [r7, #8]
    9e24:	ae32      	add	r6, sp, #200	; 0xc8
    9e26:	e74e      	b.n	9cc6 <_vfprintf_r+0x806>
    9e28:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9e2a:	2b65      	cmp	r3, #101	; 0x65
    9e2c:	ddab      	ble.n	9d86 <_vfprintf_r+0x8c6>
    9e2e:	2200      	movs	r2, #0
    9e30:	2300      	movs	r3, #0
    9e32:	9816      	ldr	r0, [sp, #88]	; 0x58
    9e34:	9915      	ldr	r1, [sp, #84]	; 0x54
    9e36:	f7fc fced 	bl	6814 <__aeabi_dcmpeq>
    9e3a:	2800      	cmp	r0, #0
    9e3c:	d100      	bne.n	9e40 <_vfprintf_r+0x980>
    9e3e:	e134      	b.n	a0aa <_vfprintf_r+0xbea>
    9e40:	4b85      	ldr	r3, [pc, #532]	; (a058 <_vfprintf_r+0xb98>)
    9e42:	3401      	adds	r4, #1
    9e44:	6033      	str	r3, [r6, #0]
    9e46:	2301      	movs	r3, #1
    9e48:	6073      	str	r3, [r6, #4]
    9e4a:	687b      	ldr	r3, [r7, #4]
    9e4c:	60bc      	str	r4, [r7, #8]
    9e4e:	3301      	adds	r3, #1
    9e50:	607b      	str	r3, [r7, #4]
    9e52:	2b07      	cmp	r3, #7
    9e54:	dd00      	ble.n	9e58 <_vfprintf_r+0x998>
    9e56:	e3dc      	b.n	a612 <_vfprintf_r+0x1152>
    9e58:	3608      	adds	r6, #8
    9e5a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9e5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
    9e5e:	4293      	cmp	r3, r2
    9e60:	db03      	blt.n	9e6a <_vfprintf_r+0x9aa>
    9e62:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9e64:	07db      	lsls	r3, r3, #31
    9e66:	d400      	bmi.n	9e6a <_vfprintf_r+0x9aa>
    9e68:	e3b7      	b.n	a5da <_vfprintf_r+0x111a>
    9e6a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    9e6c:	68ba      	ldr	r2, [r7, #8]
    9e6e:	6033      	str	r3, [r6, #0]
    9e70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    9e72:	469c      	mov	ip, r3
    9e74:	6073      	str	r3, [r6, #4]
    9e76:	687b      	ldr	r3, [r7, #4]
    9e78:	4462      	add	r2, ip
    9e7a:	3301      	adds	r3, #1
    9e7c:	0014      	movs	r4, r2
    9e7e:	60ba      	str	r2, [r7, #8]
    9e80:	607b      	str	r3, [r7, #4]
    9e82:	2b07      	cmp	r3, #7
    9e84:	dd01      	ble.n	9e8a <_vfprintf_r+0x9ca>
    9e86:	f000 fc19 	bl	a6bc <_vfprintf_r+0x11fc>
    9e8a:	3608      	adds	r6, #8
    9e8c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    9e8e:	1e5d      	subs	r5, r3, #1
    9e90:	2d00      	cmp	r5, #0
    9e92:	dc00      	bgt.n	9e96 <_vfprintf_r+0x9d6>
    9e94:	e717      	b.n	9cc6 <_vfprintf_r+0x806>
    9e96:	4a71      	ldr	r2, [pc, #452]	; (a05c <_vfprintf_r+0xb9c>)
    9e98:	687b      	ldr	r3, [r7, #4]
    9e9a:	4691      	mov	r9, r2
    9e9c:	2d10      	cmp	r5, #16
    9e9e:	dc00      	bgt.n	9ea2 <_vfprintf_r+0x9e2>
    9ea0:	e1c3      	b.n	a22a <_vfprintf_r+0xd6a>
    9ea2:	2210      	movs	r2, #16
    9ea4:	4690      	mov	r8, r2
    9ea6:	0022      	movs	r2, r4
    9ea8:	464c      	mov	r4, r9
    9eaa:	46d9      	mov	r9, fp
    9eac:	e004      	b.n	9eb8 <_vfprintf_r+0x9f8>
    9eae:	3608      	adds	r6, #8
    9eb0:	3d10      	subs	r5, #16
    9eb2:	2d10      	cmp	r5, #16
    9eb4:	dc00      	bgt.n	9eb8 <_vfprintf_r+0x9f8>
    9eb6:	e37c      	b.n	a5b2 <_vfprintf_r+0x10f2>
    9eb8:	4641      	mov	r1, r8
    9eba:	3210      	adds	r2, #16
    9ebc:	3301      	adds	r3, #1
    9ebe:	6034      	str	r4, [r6, #0]
    9ec0:	6071      	str	r1, [r6, #4]
    9ec2:	60ba      	str	r2, [r7, #8]
    9ec4:	607b      	str	r3, [r7, #4]
    9ec6:	2b07      	cmp	r3, #7
    9ec8:	ddf1      	ble.n	9eae <_vfprintf_r+0x9ee>
    9eca:	003a      	movs	r2, r7
    9ecc:	4649      	mov	r1, r9
    9ece:	9806      	ldr	r0, [sp, #24]
    9ed0:	f003 fdc8 	bl	da64 <__sprint_r>
    9ed4:	2800      	cmp	r0, #0
    9ed6:	d10b      	bne.n	9ef0 <_vfprintf_r+0xa30>
    9ed8:	68ba      	ldr	r2, [r7, #8]
    9eda:	687b      	ldr	r3, [r7, #4]
    9edc:	ae32      	add	r6, sp, #200	; 0xc8
    9ede:	e7e7      	b.n	9eb0 <_vfprintf_r+0x9f0>
    9ee0:	68bb      	ldr	r3, [r7, #8]
    9ee2:	46d9      	mov	r9, fp
    9ee4:	2b00      	cmp	r3, #0
    9ee6:	d001      	beq.n	9eec <_vfprintf_r+0xa2c>
    9ee8:	f000 fd4c 	bl	a984 <_vfprintf_r+0x14c4>
    9eec:	2300      	movs	r3, #0
    9eee:	607b      	str	r3, [r7, #4]
    9ef0:	464b      	mov	r3, r9
    9ef2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    9ef4:	07db      	lsls	r3, r3, #31
    9ef6:	d40d      	bmi.n	9f14 <_vfprintf_r+0xa54>
    9ef8:	464b      	mov	r3, r9
    9efa:	899b      	ldrh	r3, [r3, #12]
    9efc:	059a      	lsls	r2, r3, #22
    9efe:	d505      	bpl.n	9f0c <_vfprintf_r+0xa4c>
    9f00:	065b      	lsls	r3, r3, #25
    9f02:	d401      	bmi.n	9f08 <_vfprintf_r+0xa48>
    9f04:	f7ff fb8d 	bl	9622 <_vfprintf_r+0x162>
    9f08:	f7ff fb88 	bl	961c <_vfprintf_r+0x15c>
    9f0c:	464b      	mov	r3, r9
    9f0e:	6d98      	ldr	r0, [r3, #88]	; 0x58
    9f10:	f002 fc32 	bl	c778 <__retarget_lock_release_recursive>
    9f14:	464b      	mov	r3, r9
    9f16:	899b      	ldrh	r3, [r3, #12]
    9f18:	e7f2      	b.n	9f00 <_vfprintf_r+0xa40>
    9f1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9f1c:	9a08      	ldr	r2, [sp, #32]
    9f1e:	1a9d      	subs	r5, r3, r2
    9f20:	2d00      	cmp	r5, #0
    9f22:	dc00      	bgt.n	9f26 <_vfprintf_r+0xa66>
    9f24:	e685      	b.n	9c32 <_vfprintf_r+0x772>
    9f26:	4a4d      	ldr	r2, [pc, #308]	; (a05c <_vfprintf_r+0xb9c>)
    9f28:	687b      	ldr	r3, [r7, #4]
    9f2a:	4691      	mov	r9, r2
    9f2c:	2d10      	cmp	r5, #16
    9f2e:	dd24      	ble.n	9f7a <_vfprintf_r+0xaba>
    9f30:	2210      	movs	r2, #16
    9f32:	0021      	movs	r1, r4
    9f34:	4690      	mov	r8, r2
    9f36:	465c      	mov	r4, fp
    9f38:	0032      	movs	r2, r6
    9f3a:	464e      	mov	r6, r9
    9f3c:	e003      	b.n	9f46 <_vfprintf_r+0xa86>
    9f3e:	3d10      	subs	r5, #16
    9f40:	3208      	adds	r2, #8
    9f42:	2d10      	cmp	r5, #16
    9f44:	dd15      	ble.n	9f72 <_vfprintf_r+0xab2>
    9f46:	4640      	mov	r0, r8
    9f48:	3110      	adds	r1, #16
    9f4a:	3301      	adds	r3, #1
    9f4c:	6016      	str	r6, [r2, #0]
    9f4e:	6050      	str	r0, [r2, #4]
    9f50:	60b9      	str	r1, [r7, #8]
    9f52:	607b      	str	r3, [r7, #4]
    9f54:	2b07      	cmp	r3, #7
    9f56:	ddf2      	ble.n	9f3e <_vfprintf_r+0xa7e>
    9f58:	003a      	movs	r2, r7
    9f5a:	0021      	movs	r1, r4
    9f5c:	9806      	ldr	r0, [sp, #24]
    9f5e:	f003 fd81 	bl	da64 <__sprint_r>
    9f62:	2800      	cmp	r0, #0
    9f64:	d115      	bne.n	9f92 <_vfprintf_r+0xad2>
    9f66:	3d10      	subs	r5, #16
    9f68:	68b9      	ldr	r1, [r7, #8]
    9f6a:	687b      	ldr	r3, [r7, #4]
    9f6c:	aa32      	add	r2, sp, #200	; 0xc8
    9f6e:	2d10      	cmp	r5, #16
    9f70:	dce9      	bgt.n	9f46 <_vfprintf_r+0xa86>
    9f72:	46a3      	mov	fp, r4
    9f74:	46b1      	mov	r9, r6
    9f76:	000c      	movs	r4, r1
    9f78:	0016      	movs	r6, r2
    9f7a:	464a      	mov	r2, r9
    9f7c:	1964      	adds	r4, r4, r5
    9f7e:	3301      	adds	r3, #1
    9f80:	6032      	str	r2, [r6, #0]
    9f82:	6075      	str	r5, [r6, #4]
    9f84:	60bc      	str	r4, [r7, #8]
    9f86:	607b      	str	r3, [r7, #4]
    9f88:	2b07      	cmp	r3, #7
    9f8a:	dd00      	ble.n	9f8e <_vfprintf_r+0xace>
    9f8c:	e263      	b.n	a456 <_vfprintf_r+0xf96>
    9f8e:	3608      	adds	r6, #8
    9f90:	e64f      	b.n	9c32 <_vfprintf_r+0x772>
    9f92:	46a1      	mov	r9, r4
    9f94:	e7ac      	b.n	9ef0 <_vfprintf_r+0xa30>
    9f96:	2301      	movs	r3, #1
    9f98:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9f9a:	4213      	tst	r3, r2
    9f9c:	d000      	beq.n	9fa0 <_vfprintf_r+0xae0>
    9f9e:	e6f6      	b.n	9d8e <_vfprintf_r+0x8ce>
    9fa0:	6073      	str	r3, [r6, #4]
    9fa2:	687b      	ldr	r3, [r7, #4]
    9fa4:	9a11      	ldr	r2, [sp, #68]	; 0x44
    9fa6:	3301      	adds	r3, #1
    9fa8:	3401      	adds	r4, #1
    9faa:	6032      	str	r2, [r6, #0]
    9fac:	60bc      	str	r4, [r7, #8]
    9fae:	4698      	mov	r8, r3
    9fb0:	607b      	str	r3, [r7, #4]
    9fb2:	2b07      	cmp	r3, #7
    9fb4:	dc00      	bgt.n	9fb8 <_vfprintf_r+0xaf8>
    9fb6:	e71e      	b.n	9df6 <_vfprintf_r+0x936>
    9fb8:	003a      	movs	r2, r7
    9fba:	4659      	mov	r1, fp
    9fbc:	9806      	ldr	r0, [sp, #24]
    9fbe:	f003 fd51 	bl	da64 <__sprint_r>
    9fc2:	2800      	cmp	r0, #0
    9fc4:	d10c      	bne.n	9fe0 <_vfprintf_r+0xb20>
    9fc6:	687b      	ldr	r3, [r7, #4]
    9fc8:	68bc      	ldr	r4, [r7, #8]
    9fca:	4698      	mov	r8, r3
    9fcc:	ae32      	add	r6, sp, #200	; 0xc8
    9fce:	e713      	b.n	9df8 <_vfprintf_r+0x938>
    9fd0:	003a      	movs	r2, r7
    9fd2:	4659      	mov	r1, fp
    9fd4:	9806      	ldr	r0, [sp, #24]
    9fd6:	f003 fd45 	bl	da64 <__sprint_r>
    9fda:	2800      	cmp	r0, #0
    9fdc:	d100      	bne.n	9fe0 <_vfprintf_r+0xb20>
    9fde:	e6cd      	b.n	9d7c <_vfprintf_r+0x8bc>
    9fe0:	46d9      	mov	r9, fp
    9fe2:	e785      	b.n	9ef0 <_vfprintf_r+0xa30>
    9fe4:	9c09      	ldr	r4, [sp, #36]	; 0x24
    9fe6:	2b01      	cmp	r3, #1
    9fe8:	d100      	bne.n	9fec <_vfprintf_r+0xb2c>
    9fea:	e148      	b.n	a27e <_vfprintf_r+0xdbe>
    9fec:	2b02      	cmp	r3, #2
    9fee:	d123      	bne.n	a038 <_vfprintf_r+0xb78>
    9ff0:	9409      	str	r4, [sp, #36]	; 0x24
    9ff2:	2300      	movs	r3, #0
    9ff4:	2400      	movs	r4, #0
    9ff6:	930c      	str	r3, [sp, #48]	; 0x30
    9ff8:	940d      	str	r4, [sp, #52]	; 0x34
    9ffa:	e4a1      	b.n	9940 <_vfprintf_r+0x480>
    9ffc:	003a      	movs	r2, r7
    9ffe:	4659      	mov	r1, fp
    a000:	9806      	ldr	r0, [sp, #24]
    a002:	f003 fd2f 	bl	da64 <__sprint_r>
    a006:	2800      	cmp	r0, #0
    a008:	d1ea      	bne.n	9fe0 <_vfprintf_r+0xb20>
    a00a:	68bc      	ldr	r4, [r7, #8]
    a00c:	ae32      	add	r6, sp, #200	; 0xc8
    a00e:	e648      	b.n	9ca2 <_vfprintf_r+0x7e2>
    a010:	003a      	movs	r2, r7
    a012:	4659      	mov	r1, fp
    a014:	9806      	ldr	r0, [sp, #24]
    a016:	f003 fd25 	bl	da64 <__sprint_r>
    a01a:	2800      	cmp	r0, #0
    a01c:	d1e0      	bne.n	9fe0 <_vfprintf_r+0xb20>
    a01e:	68bc      	ldr	r4, [r7, #8]
    a020:	ae32      	add	r6, sp, #200	; 0xc8
    a022:	e5f2      	b.n	9c0a <_vfprintf_r+0x74a>
    a024:	003a      	movs	r2, r7
    a026:	4659      	mov	r1, fp
    a028:	9806      	ldr	r0, [sp, #24]
    a02a:	f003 fd1b 	bl	da64 <__sprint_r>
    a02e:	2800      	cmp	r0, #0
    a030:	d1d6      	bne.n	9fe0 <_vfprintf_r+0xb20>
    a032:	68bc      	ldr	r4, [r7, #8]
    a034:	ae32      	add	r6, sp, #200	; 0xc8
    a036:	e5f8      	b.n	9c2a <_vfprintf_r+0x76a>
    a038:	9409      	str	r4, [sp, #36]	; 0x24
    a03a:	2300      	movs	r3, #0
    a03c:	2400      	movs	r4, #0
    a03e:	930c      	str	r3, [sp, #48]	; 0x30
    a040:	940d      	str	r4, [sp, #52]	; 0x34
    a042:	980c      	ldr	r0, [sp, #48]	; 0x30
    a044:	990d      	ldr	r1, [sp, #52]	; 0x34
    a046:	4653      	mov	r3, sl
    a048:	aa32      	add	r2, sp, #200	; 0xc8
    a04a:	4691      	mov	r9, r2
    a04c:	9308      	str	r3, [sp, #32]
    a04e:	46b2      	mov	sl, r6
    a050:	e007      	b.n	a062 <_vfprintf_r+0xba2>
    a052:	46c0      	nop			; (mov r8, r8)
    a054:	0000e598 	.word	0x0000e598
    a058:	0000e594 	.word	0x0000e594
    a05c:	0000e5a8 	.word	0x0000e5a8
    a060:	46a1      	mov	r9, r4
    a062:	074a      	lsls	r2, r1, #29
    a064:	4694      	mov	ip, r2
    a066:	464b      	mov	r3, r9
    a068:	4665      	mov	r5, ip
    a06a:	1e5c      	subs	r4, r3, #1
    a06c:	08c6      	lsrs	r6, r0, #3
    a06e:	2307      	movs	r3, #7
    a070:	08ca      	lsrs	r2, r1, #3
    a072:	4335      	orrs	r5, r6
    a074:	0011      	movs	r1, r2
    a076:	002a      	movs	r2, r5
    a078:	4003      	ands	r3, r0
    a07a:	3330      	adds	r3, #48	; 0x30
    a07c:	7023      	strb	r3, [r4, #0]
    a07e:	0028      	movs	r0, r5
    a080:	430a      	orrs	r2, r1
    a082:	d1ed      	bne.n	a060 <_vfprintf_r+0xba0>
    a084:	900c      	str	r0, [sp, #48]	; 0x30
    a086:	910d      	str	r1, [sp, #52]	; 0x34
    a088:	9908      	ldr	r1, [sp, #32]
    a08a:	4656      	mov	r6, sl
    a08c:	468a      	mov	sl, r1
    a08e:	9909      	ldr	r1, [sp, #36]	; 0x24
    a090:	464a      	mov	r2, r9
    a092:	9411      	str	r4, [sp, #68]	; 0x44
    a094:	07c9      	lsls	r1, r1, #31
    a096:	d500      	bpl.n	a09a <_vfprintf_r+0xbda>
    a098:	e0e0      	b.n	a25c <_vfprintf_r+0xd9c>
    a09a:	ab32      	add	r3, sp, #200	; 0xc8
    a09c:	1b1b      	subs	r3, r3, r4
    a09e:	930e      	str	r3, [sp, #56]	; 0x38
    a0a0:	f7ff fb7b 	bl	979a <_vfprintf_r+0x2da>
    a0a4:	9c07      	ldr	r4, [sp, #28]
    a0a6:	f7ff fa7d 	bl	95a4 <_vfprintf_r+0xe4>
    a0aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a0ac:	2800      	cmp	r0, #0
    a0ae:	dc00      	bgt.n	a0b2 <_vfprintf_r+0xbf2>
    a0b0:	e2b9      	b.n	a626 <_vfprintf_r+0x1166>
    a0b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a0b4:	9914      	ldr	r1, [sp, #80]	; 0x50
    a0b6:	0013      	movs	r3, r2
    a0b8:	4690      	mov	r8, r2
    a0ba:	428b      	cmp	r3, r1
    a0bc:	dd00      	ble.n	a0c0 <_vfprintf_r+0xc00>
    a0be:	4688      	mov	r8, r1
    a0c0:	4643      	mov	r3, r8
    a0c2:	2b00      	cmp	r3, #0
    a0c4:	dd0c      	ble.n	a0e0 <_vfprintf_r+0xc20>
    a0c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a0c8:	4444      	add	r4, r8
    a0ca:	6033      	str	r3, [r6, #0]
    a0cc:	4643      	mov	r3, r8
    a0ce:	6073      	str	r3, [r6, #4]
    a0d0:	687b      	ldr	r3, [r7, #4]
    a0d2:	60bc      	str	r4, [r7, #8]
    a0d4:	3301      	adds	r3, #1
    a0d6:	607b      	str	r3, [r7, #4]
    a0d8:	2b07      	cmp	r3, #7
    a0da:	dd00      	ble.n	a0de <_vfprintf_r+0xc1e>
    a0dc:	e389      	b.n	a7f2 <_vfprintf_r+0x1332>
    a0de:	3608      	adds	r6, #8
    a0e0:	4643      	mov	r3, r8
    a0e2:	43db      	mvns	r3, r3
    a0e4:	4642      	mov	r2, r8
    a0e6:	17db      	asrs	r3, r3, #31
    a0e8:	4013      	ands	r3, r2
    a0ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a0ec:	1ad3      	subs	r3, r2, r3
    a0ee:	4698      	mov	r8, r3
    a0f0:	2b00      	cmp	r3, #0
    a0f2:	dc00      	bgt.n	a0f6 <_vfprintf_r+0xc36>
    a0f4:	e0eb      	b.n	a2ce <_vfprintf_r+0xe0e>
    a0f6:	2b10      	cmp	r3, #16
    a0f8:	dc01      	bgt.n	a0fe <_vfprintf_r+0xc3e>
    a0fa:	f000 fcd9 	bl	aab0 <_vfprintf_r+0x15f0>
    a0fe:	4adc      	ldr	r2, [pc, #880]	; (a470 <_vfprintf_r+0xfb0>)
    a100:	687b      	ldr	r3, [r7, #4]
    a102:	4691      	mov	r9, r2
    a104:	2210      	movs	r2, #16
    a106:	464d      	mov	r5, r9
    a108:	4692      	mov	sl, r2
    a10a:	0022      	movs	r2, r4
    a10c:	4644      	mov	r4, r8
    a10e:	46d8      	mov	r8, fp
    a110:	e004      	b.n	a11c <_vfprintf_r+0xc5c>
    a112:	3608      	adds	r6, #8
    a114:	3c10      	subs	r4, #16
    a116:	2c10      	cmp	r4, #16
    a118:	dc00      	bgt.n	a11c <_vfprintf_r+0xc5c>
    a11a:	e0bf      	b.n	a29c <_vfprintf_r+0xddc>
    a11c:	4651      	mov	r1, sl
    a11e:	3210      	adds	r2, #16
    a120:	3301      	adds	r3, #1
    a122:	6035      	str	r5, [r6, #0]
    a124:	6071      	str	r1, [r6, #4]
    a126:	60ba      	str	r2, [r7, #8]
    a128:	607b      	str	r3, [r7, #4]
    a12a:	2b07      	cmp	r3, #7
    a12c:	ddf1      	ble.n	a112 <_vfprintf_r+0xc52>
    a12e:	003a      	movs	r2, r7
    a130:	4641      	mov	r1, r8
    a132:	9806      	ldr	r0, [sp, #24]
    a134:	f003 fc96 	bl	da64 <__sprint_r>
    a138:	2800      	cmp	r0, #0
    a13a:	d000      	beq.n	a13e <_vfprintf_r+0xc7e>
    a13c:	e3b6      	b.n	a8ac <_vfprintf_r+0x13ec>
    a13e:	68ba      	ldr	r2, [r7, #8]
    a140:	687b      	ldr	r3, [r7, #4]
    a142:	ae32      	add	r6, sp, #200	; 0xc8
    a144:	e7e6      	b.n	a114 <_vfprintf_r+0xc54>
    a146:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a148:	2b00      	cmp	r3, #0
    a14a:	d100      	bne.n	a14e <_vfprintf_r+0xc8e>
    a14c:	e092      	b.n	a274 <_vfprintf_r+0xdb4>
    a14e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    a150:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    a152:	ab32      	add	r3, sp, #200	; 0xc8
    a154:	46b1      	mov	r9, r6
    a156:	001e      	movs	r6, r3
    a158:	0020      	movs	r0, r4
    a15a:	0029      	movs	r1, r5
    a15c:	220a      	movs	r2, #10
    a15e:	2300      	movs	r3, #0
    a160:	f7fc fbc0 	bl	68e4 <__aeabi_uldivmod>
    a164:	3e01      	subs	r6, #1
    a166:	3230      	adds	r2, #48	; 0x30
    a168:	7032      	strb	r2, [r6, #0]
    a16a:	2300      	movs	r3, #0
    a16c:	0020      	movs	r0, r4
    a16e:	0029      	movs	r1, r5
    a170:	220a      	movs	r2, #10
    a172:	f7fc fbb7 	bl	68e4 <__aeabi_uldivmod>
    a176:	0003      	movs	r3, r0
    a178:	0004      	movs	r4, r0
    a17a:	000d      	movs	r5, r1
    a17c:	430b      	orrs	r3, r1
    a17e:	d1eb      	bne.n	a158 <_vfprintf_r+0xc98>
    a180:	0032      	movs	r2, r6
    a182:	ab32      	add	r3, sp, #200	; 0xc8
    a184:	1a9b      	subs	r3, r3, r2
    a186:	9611      	str	r6, [sp, #68]	; 0x44
    a188:	940c      	str	r4, [sp, #48]	; 0x30
    a18a:	950d      	str	r5, [sp, #52]	; 0x34
    a18c:	464e      	mov	r6, r9
    a18e:	930e      	str	r3, [sp, #56]	; 0x38
    a190:	f7ff fb03 	bl	979a <_vfprintf_r+0x2da>
    a194:	2300      	movs	r3, #0
    a196:	930e      	str	r3, [sp, #56]	; 0x38
    a198:	ab32      	add	r3, sp, #200	; 0xc8
    a19a:	9311      	str	r3, [sp, #68]	; 0x44
    a19c:	f7ff fafd 	bl	979a <_vfprintf_r+0x2da>
    a1a0:	003a      	movs	r2, r7
    a1a2:	4659      	mov	r1, fp
    a1a4:	9806      	ldr	r0, [sp, #24]
    a1a6:	f003 fc5d 	bl	da64 <__sprint_r>
    a1aa:	2800      	cmp	r0, #0
    a1ac:	d000      	beq.n	a1b0 <_vfprintf_r+0xcf0>
    a1ae:	e717      	b.n	9fe0 <_vfprintf_r+0xb20>
    a1b0:	ab16      	add	r3, sp, #88	; 0x58
    a1b2:	7fdb      	ldrb	r3, [r3, #31]
    a1b4:	68bc      	ldr	r4, [r7, #8]
    a1b6:	4698      	mov	r8, r3
    a1b8:	ae32      	add	r6, sp, #200	; 0xc8
    a1ba:	e513      	b.n	9be4 <_vfprintf_r+0x724>
    a1bc:	46b1      	mov	r9, r6
    a1be:	e697      	b.n	9ef0 <_vfprintf_r+0xa30>
    a1c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a1c2:	1e5d      	subs	r5, r3, #1
    a1c4:	2d00      	cmp	r5, #0
    a1c6:	dc00      	bgt.n	a1ca <_vfprintf_r+0xd0a>
    a1c8:	e616      	b.n	9df8 <_vfprintf_r+0x938>
    a1ca:	4ba9      	ldr	r3, [pc, #676]	; (a470 <_vfprintf_r+0xfb0>)
    a1cc:	4699      	mov	r9, r3
    a1ce:	2d10      	cmp	r5, #16
    a1d0:	dc00      	bgt.n	a1d4 <_vfprintf_r+0xd14>
    a1d2:	e10a      	b.n	a3ea <_vfprintf_r+0xf2a>
    a1d4:	2310      	movs	r3, #16
    a1d6:	0022      	movs	r2, r4
    a1d8:	469a      	mov	sl, r3
    a1da:	465c      	mov	r4, fp
    a1dc:	4643      	mov	r3, r8
    a1de:	e004      	b.n	a1ea <_vfprintf_r+0xd2a>
    a1e0:	3608      	adds	r6, #8
    a1e2:	3d10      	subs	r5, #16
    a1e4:	2d10      	cmp	r5, #16
    a1e6:	dc00      	bgt.n	a1ea <_vfprintf_r+0xd2a>
    a1e8:	e0fc      	b.n	a3e4 <_vfprintf_r+0xf24>
    a1ea:	4649      	mov	r1, r9
    a1ec:	6031      	str	r1, [r6, #0]
    a1ee:	4651      	mov	r1, sl
    a1f0:	3210      	adds	r2, #16
    a1f2:	3301      	adds	r3, #1
    a1f4:	6071      	str	r1, [r6, #4]
    a1f6:	60ba      	str	r2, [r7, #8]
    a1f8:	607b      	str	r3, [r7, #4]
    a1fa:	2b07      	cmp	r3, #7
    a1fc:	ddf0      	ble.n	a1e0 <_vfprintf_r+0xd20>
    a1fe:	003a      	movs	r2, r7
    a200:	0021      	movs	r1, r4
    a202:	9806      	ldr	r0, [sp, #24]
    a204:	f003 fc2e 	bl	da64 <__sprint_r>
    a208:	2800      	cmp	r0, #0
    a20a:	d000      	beq.n	a20e <_vfprintf_r+0xd4e>
    a20c:	e6c1      	b.n	9f92 <_vfprintf_r+0xad2>
    a20e:	68ba      	ldr	r2, [r7, #8]
    a210:	687b      	ldr	r3, [r7, #4]
    a212:	ae32      	add	r6, sp, #200	; 0xc8
    a214:	e7e5      	b.n	a1e2 <_vfprintf_r+0xd22>
    a216:	990c      	ldr	r1, [sp, #48]	; 0x30
    a218:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    a21a:	0008      	movs	r0, r1
    a21c:	4310      	orrs	r0, r2
    a21e:	2302      	movs	r3, #2
    a220:	0002      	movs	r2, r0
    a222:	f7ff fa93 	bl	974c <_vfprintf_r+0x28c>
    a226:	46a3      	mov	fp, r4
    a228:	0014      	movs	r4, r2
    a22a:	464a      	mov	r2, r9
    a22c:	1964      	adds	r4, r4, r5
    a22e:	3301      	adds	r3, #1
    a230:	6032      	str	r2, [r6, #0]
    a232:	6075      	str	r5, [r6, #4]
    a234:	60bc      	str	r4, [r7, #8]
    a236:	607b      	str	r3, [r7, #4]
    a238:	2b07      	cmp	r3, #7
    a23a:	dc00      	bgt.n	a23e <_vfprintf_r+0xd7e>
    a23c:	e542      	b.n	9cc4 <_vfprintf_r+0x804>
    a23e:	e5e8      	b.n	9e12 <_vfprintf_r+0x952>
    a240:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a242:	681a      	ldr	r2, [r3, #0]
    a244:	f7ff fa68 	bl	9718 <_vfprintf_r+0x258>
    a248:	6813      	ldr	r3, [r2, #0]
    a24a:	9308      	str	r3, [sp, #32]
    a24c:	f7ff fb57 	bl	98fe <_vfprintf_r+0x43e>
    a250:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a252:	681a      	ldr	r2, [r3, #0]
    a254:	e412      	b.n	9a7c <_vfprintf_r+0x5bc>
    a256:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a258:	681a      	ldr	r2, [r3, #0]
    a25a:	e426      	b.n	9aaa <_vfprintf_r+0x5ea>
    a25c:	2b30      	cmp	r3, #48	; 0x30
    a25e:	d100      	bne.n	a262 <_vfprintf_r+0xda2>
    a260:	e23c      	b.n	a6dc <_vfprintf_r+0x121c>
    a262:	2330      	movs	r3, #48	; 0x30
    a264:	3a02      	subs	r2, #2
    a266:	7013      	strb	r3, [r2, #0]
    a268:	ab32      	add	r3, sp, #200	; 0xc8
    a26a:	1a9b      	subs	r3, r3, r2
    a26c:	930e      	str	r3, [sp, #56]	; 0x38
    a26e:	9211      	str	r2, [sp, #68]	; 0x44
    a270:	f7ff fa93 	bl	979a <_vfprintf_r+0x2da>
    a274:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a276:	2b09      	cmp	r3, #9
    a278:	d900      	bls.n	a27c <_vfprintf_r+0xdbc>
    a27a:	e768      	b.n	a14e <_vfprintf_r+0xc8e>
    a27c:	9c09      	ldr	r4, [sp, #36]	; 0x24
    a27e:	2227      	movs	r2, #39	; 0x27
    a280:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a282:	a928      	add	r1, sp, #160	; 0xa0
    a284:	3330      	adds	r3, #48	; 0x30
    a286:	548b      	strb	r3, [r1, r2]
    a288:	2301      	movs	r3, #1
    a28a:	aa16      	add	r2, sp, #88	; 0x58
    a28c:	4694      	mov	ip, r2
    a28e:	930e      	str	r3, [sp, #56]	; 0x38
    a290:	336e      	adds	r3, #110	; 0x6e
    a292:	4463      	add	r3, ip
    a294:	9409      	str	r4, [sp, #36]	; 0x24
    a296:	9311      	str	r3, [sp, #68]	; 0x44
    a298:	f7ff fa7f 	bl	979a <_vfprintf_r+0x2da>
    a29c:	46c3      	mov	fp, r8
    a29e:	46a9      	mov	r9, r5
    a2a0:	46a0      	mov	r8, r4
    a2a2:	0014      	movs	r4, r2
    a2a4:	464a      	mov	r2, r9
    a2a6:	6032      	str	r2, [r6, #0]
    a2a8:	4642      	mov	r2, r8
    a2aa:	4444      	add	r4, r8
    a2ac:	3301      	adds	r3, #1
    a2ae:	6072      	str	r2, [r6, #4]
    a2b0:	60bc      	str	r4, [r7, #8]
    a2b2:	607b      	str	r3, [r7, #4]
    a2b4:	2b07      	cmp	r3, #7
    a2b6:	dc00      	bgt.n	a2ba <_vfprintf_r+0xdfa>
    a2b8:	e18d      	b.n	a5d6 <_vfprintf_r+0x1116>
    a2ba:	003a      	movs	r2, r7
    a2bc:	4659      	mov	r1, fp
    a2be:	9806      	ldr	r0, [sp, #24]
    a2c0:	f003 fbd0 	bl	da64 <__sprint_r>
    a2c4:	2800      	cmp	r0, #0
    a2c6:	d000      	beq.n	a2ca <_vfprintf_r+0xe0a>
    a2c8:	e68a      	b.n	9fe0 <_vfprintf_r+0xb20>
    a2ca:	68bc      	ldr	r4, [r7, #8]
    a2cc:	ae32      	add	r6, sp, #200	; 0xc8
    a2ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a2d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    a2d2:	4293      	cmp	r3, r2
    a2d4:	db00      	blt.n	a2d8 <_vfprintf_r+0xe18>
    a2d6:	e179      	b.n	a5cc <_vfprintf_r+0x110c>
    a2d8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    a2da:	6032      	str	r2, [r6, #0]
    a2dc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    a2de:	4694      	mov	ip, r2
    a2e0:	6072      	str	r2, [r6, #4]
    a2e2:	687a      	ldr	r2, [r7, #4]
    a2e4:	4464      	add	r4, ip
    a2e6:	3201      	adds	r2, #1
    a2e8:	60bc      	str	r4, [r7, #8]
    a2ea:	607a      	str	r2, [r7, #4]
    a2ec:	2a07      	cmp	r2, #7
    a2ee:	dd00      	ble.n	a2f2 <_vfprintf_r+0xe32>
    a2f0:	e176      	b.n	a5e0 <_vfprintf_r+0x1120>
    a2f2:	3608      	adds	r6, #8
    a2f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
    a2f6:	9913      	ldr	r1, [sp, #76]	; 0x4c
    a2f8:	1ad3      	subs	r3, r2, r3
    a2fa:	1a52      	subs	r2, r2, r1
    a2fc:	4690      	mov	r8, r2
    a2fe:	429a      	cmp	r2, r3
    a300:	dd00      	ble.n	a304 <_vfprintf_r+0xe44>
    a302:	4698      	mov	r8, r3
    a304:	4642      	mov	r2, r8
    a306:	2a00      	cmp	r2, #0
    a308:	dd0f      	ble.n	a32a <_vfprintf_r+0xe6a>
    a30a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    a30c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    a30e:	468c      	mov	ip, r1
    a310:	4462      	add	r2, ip
    a312:	6032      	str	r2, [r6, #0]
    a314:	4642      	mov	r2, r8
    a316:	6072      	str	r2, [r6, #4]
    a318:	687a      	ldr	r2, [r7, #4]
    a31a:	4444      	add	r4, r8
    a31c:	3201      	adds	r2, #1
    a31e:	60bc      	str	r4, [r7, #8]
    a320:	607a      	str	r2, [r7, #4]
    a322:	2a07      	cmp	r2, #7
    a324:	dd00      	ble.n	a328 <_vfprintf_r+0xe68>
    a326:	e289      	b.n	a83c <_vfprintf_r+0x137c>
    a328:	3608      	adds	r6, #8
    a32a:	4642      	mov	r2, r8
    a32c:	43d5      	mvns	r5, r2
    a32e:	17ed      	asrs	r5, r5, #31
    a330:	4015      	ands	r5, r2
    a332:	1b5d      	subs	r5, r3, r5
    a334:	2d00      	cmp	r5, #0
    a336:	dc00      	bgt.n	a33a <_vfprintf_r+0xe7a>
    a338:	e4c5      	b.n	9cc6 <_vfprintf_r+0x806>
    a33a:	4a4d      	ldr	r2, [pc, #308]	; (a470 <_vfprintf_r+0xfb0>)
    a33c:	687b      	ldr	r3, [r7, #4]
    a33e:	4691      	mov	r9, r2
    a340:	2d10      	cmp	r5, #16
    a342:	dc00      	bgt.n	a346 <_vfprintf_r+0xe86>
    a344:	e771      	b.n	a22a <_vfprintf_r+0xd6a>
    a346:	2210      	movs	r2, #16
    a348:	4690      	mov	r8, r2
    a34a:	0022      	movs	r2, r4
    a34c:	465c      	mov	r4, fp
    a34e:	e004      	b.n	a35a <_vfprintf_r+0xe9a>
    a350:	3608      	adds	r6, #8
    a352:	3d10      	subs	r5, #16
    a354:	2d10      	cmp	r5, #16
    a356:	dc00      	bgt.n	a35a <_vfprintf_r+0xe9a>
    a358:	e765      	b.n	a226 <_vfprintf_r+0xd66>
    a35a:	4649      	mov	r1, r9
    a35c:	6031      	str	r1, [r6, #0]
    a35e:	4641      	mov	r1, r8
    a360:	3210      	adds	r2, #16
    a362:	3301      	adds	r3, #1
    a364:	6071      	str	r1, [r6, #4]
    a366:	60ba      	str	r2, [r7, #8]
    a368:	607b      	str	r3, [r7, #4]
    a36a:	2b07      	cmp	r3, #7
    a36c:	ddf0      	ble.n	a350 <_vfprintf_r+0xe90>
    a36e:	003a      	movs	r2, r7
    a370:	0021      	movs	r1, r4
    a372:	9806      	ldr	r0, [sp, #24]
    a374:	f003 fb76 	bl	da64 <__sprint_r>
    a378:	2800      	cmp	r0, #0
    a37a:	d000      	beq.n	a37e <_vfprintf_r+0xebe>
    a37c:	e609      	b.n	9f92 <_vfprintf_r+0xad2>
    a37e:	68ba      	ldr	r2, [r7, #8]
    a380:	687b      	ldr	r3, [r7, #4]
    a382:	ae32      	add	r6, sp, #200	; 0xc8
    a384:	e7e5      	b.n	a352 <_vfprintf_r+0xe92>
    a386:	003a      	movs	r2, r7
    a388:	4659      	mov	r1, fp
    a38a:	9806      	ldr	r0, [sp, #24]
    a38c:	f003 fb6a 	bl	da64 <__sprint_r>
    a390:	2800      	cmp	r0, #0
    a392:	d000      	beq.n	a396 <_vfprintf_r+0xed6>
    a394:	e624      	b.n	9fe0 <_vfprintf_r+0xb20>
    a396:	68bc      	ldr	r4, [r7, #8]
    a398:	687b      	ldr	r3, [r7, #4]
    a39a:	ae32      	add	r6, sp, #200	; 0xc8
    a39c:	e504      	b.n	9da8 <_vfprintf_r+0x8e8>
    a39e:	2307      	movs	r3, #7
    a3a0:	3207      	adds	r2, #7
    a3a2:	439a      	bics	r2, r3
    a3a4:	3301      	adds	r3, #1
    a3a6:	469c      	mov	ip, r3
    a3a8:	4494      	add	ip, r2
    a3aa:	4663      	mov	r3, ip
    a3ac:	930f      	str	r3, [sp, #60]	; 0x3c
    a3ae:	6853      	ldr	r3, [r2, #4]
    a3b0:	6812      	ldr	r2, [r2, #0]
    a3b2:	930d      	str	r3, [sp, #52]	; 0x34
    a3b4:	920c      	str	r2, [sp, #48]	; 0x30
    a3b6:	f7ff faa7 	bl	9908 <_vfprintf_r+0x448>
    a3ba:	2207      	movs	r2, #7
    a3bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a3be:	3307      	adds	r3, #7
    a3c0:	4393      	bics	r3, r2
    a3c2:	3201      	adds	r2, #1
    a3c4:	4694      	mov	ip, r2
    a3c6:	449c      	add	ip, r3
    a3c8:	4662      	mov	r2, ip
    a3ca:	920f      	str	r2, [sp, #60]	; 0x3c
    a3cc:	681a      	ldr	r2, [r3, #0]
    a3ce:	685b      	ldr	r3, [r3, #4]
    a3d0:	0011      	movs	r1, r2
    a3d2:	001a      	movs	r2, r3
    a3d4:	0008      	movs	r0, r1
    a3d6:	4310      	orrs	r0, r2
    a3d8:	910c      	str	r1, [sp, #48]	; 0x30
    a3da:	920d      	str	r2, [sp, #52]	; 0x34
    a3dc:	2300      	movs	r3, #0
    a3de:	0002      	movs	r2, r0
    a3e0:	f7ff f9b4 	bl	974c <_vfprintf_r+0x28c>
    a3e4:	46a3      	mov	fp, r4
    a3e6:	4698      	mov	r8, r3
    a3e8:	0014      	movs	r4, r2
    a3ea:	464b      	mov	r3, r9
    a3ec:	6075      	str	r5, [r6, #4]
    a3ee:	6033      	str	r3, [r6, #0]
    a3f0:	1964      	adds	r4, r4, r5
    a3f2:	e4f7      	b.n	9de4 <_vfprintf_r+0x924>
    a3f4:	003a      	movs	r2, r7
    a3f6:	4659      	mov	r1, fp
    a3f8:	9806      	ldr	r0, [sp, #24]
    a3fa:	f003 fb33 	bl	da64 <__sprint_r>
    a3fe:	2800      	cmp	r0, #0
    a400:	d000      	beq.n	a404 <_vfprintf_r+0xf44>
    a402:	e5ed      	b.n	9fe0 <_vfprintf_r+0xb20>
    a404:	687b      	ldr	r3, [r7, #4]
    a406:	68bc      	ldr	r4, [r7, #8]
    a408:	4698      	mov	r8, r3
    a40a:	ae32      	add	r6, sp, #200	; 0xc8
    a40c:	e4da      	b.n	9dc4 <_vfprintf_r+0x904>
    a40e:	2207      	movs	r2, #7
    a410:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a412:	3307      	adds	r3, #7
    a414:	4393      	bics	r3, r2
    a416:	3201      	adds	r2, #1
    a418:	4694      	mov	ip, r2
    a41a:	449c      	add	ip, r3
    a41c:	4662      	mov	r2, ip
    a41e:	920f      	str	r2, [sp, #60]	; 0x3c
    a420:	681a      	ldr	r2, [r3, #0]
    a422:	685b      	ldr	r3, [r3, #4]
    a424:	0011      	movs	r1, r2
    a426:	001a      	movs	r2, r3
    a428:	0008      	movs	r0, r1
    a42a:	4310      	orrs	r0, r2
    a42c:	910c      	str	r1, [sp, #48]	; 0x30
    a42e:	920d      	str	r2, [sp, #52]	; 0x34
    a430:	2301      	movs	r3, #1
    a432:	0002      	movs	r2, r0
    a434:	f7ff f98a 	bl	974c <_vfprintf_r+0x28c>
    a438:	2207      	movs	r2, #7
    a43a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a43c:	3307      	adds	r3, #7
    a43e:	4393      	bics	r3, r2
    a440:	3201      	adds	r2, #1
    a442:	4694      	mov	ip, r2
    a444:	449c      	add	ip, r3
    a446:	4662      	mov	r2, ip
    a448:	920f      	str	r2, [sp, #60]	; 0x3c
    a44a:	681a      	ldr	r2, [r3, #0]
    a44c:	685b      	ldr	r3, [r3, #4]
    a44e:	920c      	str	r2, [sp, #48]	; 0x30
    a450:	930d      	str	r3, [sp, #52]	; 0x34
    a452:	f7ff f966 	bl	9722 <_vfprintf_r+0x262>
    a456:	003a      	movs	r2, r7
    a458:	4659      	mov	r1, fp
    a45a:	9806      	ldr	r0, [sp, #24]
    a45c:	f003 fb02 	bl	da64 <__sprint_r>
    a460:	2800      	cmp	r0, #0
    a462:	d000      	beq.n	a466 <_vfprintf_r+0xfa6>
    a464:	e5bc      	b.n	9fe0 <_vfprintf_r+0xb20>
    a466:	68bc      	ldr	r4, [r7, #8]
    a468:	ae32      	add	r6, sp, #200	; 0xc8
    a46a:	f7ff fbe2 	bl	9c32 <_vfprintf_r+0x772>
    a46e:	46c0      	nop			; (mov r8, r8)
    a470:	0000e5a8 	.word	0x0000e5a8
    a474:	980c      	ldr	r0, [sp, #48]	; 0x30
    a476:	990d      	ldr	r1, [sp, #52]	; 0x34
    a478:	2300      	movs	r3, #0
    a47a:	4242      	negs	r2, r0
    a47c:	418b      	sbcs	r3, r1
    a47e:	0011      	movs	r1, r2
    a480:	001a      	movs	r2, r3
    a482:	232d      	movs	r3, #45	; 0x2d
    a484:	a816      	add	r0, sp, #88	; 0x58
    a486:	77c3      	strb	r3, [r0, #31]
    a488:	0008      	movs	r0, r1
    a48a:	4310      	orrs	r0, r2
    a48c:	910c      	str	r1, [sp, #48]	; 0x30
    a48e:	920d      	str	r2, [sp, #52]	; 0x34
    a490:	4698      	mov	r8, r3
    a492:	0002      	movs	r2, r0
    a494:	3b2c      	subs	r3, #44	; 0x2c
    a496:	f7ff f95d 	bl	9754 <_vfprintf_r+0x294>
    a49a:	9916      	ldr	r1, [sp, #88]	; 0x58
    a49c:	9d15      	ldr	r5, [sp, #84]	; 0x54
    a49e:	000a      	movs	r2, r1
    a4a0:	0008      	movs	r0, r1
    a4a2:	002b      	movs	r3, r5
    a4a4:	0029      	movs	r1, r5
    a4a6:	f7fe fd45 	bl	8f34 <__aeabi_dcmpun>
    a4aa:	2800      	cmp	r0, #0
    a4ac:	d000      	beq.n	a4b0 <_vfprintf_r+0xff0>
    a4ae:	e2c6      	b.n	aa3e <_vfprintf_r+0x157e>
    a4b0:	4653      	mov	r3, sl
    a4b2:	3301      	adds	r3, #1
    a4b4:	d100      	bne.n	a4b8 <_vfprintf_r+0xff8>
    a4b6:	e09f      	b.n	a5f8 <_vfprintf_r+0x1138>
    a4b8:	2320      	movs	r3, #32
    a4ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
    a4bc:	439a      	bics	r2, r3
    a4be:	920e      	str	r2, [sp, #56]	; 0x38
    a4c0:	2a47      	cmp	r2, #71	; 0x47
    a4c2:	d100      	bne.n	a4c6 <_vfprintf_r+0x1006>
    a4c4:	e1a1      	b.n	a80a <_vfprintf_r+0x134a>
    a4c6:	2380      	movs	r3, #128	; 0x80
    a4c8:	005b      	lsls	r3, r3, #1
    a4ca:	4323      	orrs	r3, r4
    a4cc:	9309      	str	r3, [sp, #36]	; 0x24
    a4ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a4d0:	2b00      	cmp	r3, #0
    a4d2:	da00      	bge.n	a4d6 <_vfprintf_r+0x1016>
    a4d4:	e1ed      	b.n	a8b2 <_vfprintf_r+0x13f2>
    a4d6:	9a16      	ldr	r2, [sp, #88]	; 0x58
    a4d8:	9308      	str	r3, [sp, #32]
    a4da:	2300      	movs	r3, #0
    a4dc:	4691      	mov	r9, r2
    a4de:	9310      	str	r3, [sp, #64]	; 0x40
    a4e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a4e2:	2b66      	cmp	r3, #102	; 0x66
    a4e4:	d100      	bne.n	a4e8 <_vfprintf_r+0x1028>
    a4e6:	e1b8      	b.n	a85a <_vfprintf_r+0x139a>
    a4e8:	2b46      	cmp	r3, #70	; 0x46
    a4ea:	d100      	bne.n	a4ee <_vfprintf_r+0x102e>
    a4ec:	e237      	b.n	a95e <_vfprintf_r+0x149e>
    a4ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    a4f0:	9806      	ldr	r0, [sp, #24]
    a4f2:	3a45      	subs	r2, #69	; 0x45
    a4f4:	0013      	movs	r3, r2
    a4f6:	4259      	negs	r1, r3
    a4f8:	4159      	adcs	r1, r3
    a4fa:	ab20      	add	r3, sp, #128	; 0x80
    a4fc:	000d      	movs	r5, r1
    a4fe:	9303      	str	r3, [sp, #12]
    a500:	ab1f      	add	r3, sp, #124	; 0x7c
    a502:	9302      	str	r3, [sp, #8]
    a504:	2302      	movs	r3, #2
    a506:	aa23      	add	r2, sp, #140	; 0x8c
    a508:	4455      	add	r5, sl
    a50a:	921b      	str	r2, [sp, #108]	; 0x6c
    a50c:	9204      	str	r2, [sp, #16]
    a50e:	9300      	str	r3, [sp, #0]
    a510:	9501      	str	r5, [sp, #4]
    a512:	9b08      	ldr	r3, [sp, #32]
    a514:	464a      	mov	r2, r9
    a516:	f000 fd25 	bl	af64 <_dtoa_r>
    a51a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a51c:	9011      	str	r0, [sp, #68]	; 0x44
    a51e:	2b67      	cmp	r3, #103	; 0x67
    a520:	d000      	beq.n	a524 <_vfprintf_r+0x1064>
    a522:	e20b      	b.n	a93c <_vfprintf_r+0x147c>
    a524:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a526:	4698      	mov	r8, r3
    a528:	44a8      	add	r8, r5
    a52a:	07e3      	lsls	r3, r4, #31
    a52c:	d400      	bmi.n	a530 <_vfprintf_r+0x1070>
    a52e:	e277      	b.n	aa20 <_vfprintf_r+0x1560>
    a530:	2300      	movs	r3, #0
    a532:	2200      	movs	r2, #0
    a534:	4648      	mov	r0, r9
    a536:	9908      	ldr	r1, [sp, #32]
    a538:	f7fc f96c 	bl	6814 <__aeabi_dcmpeq>
    a53c:	4643      	mov	r3, r8
    a53e:	2800      	cmp	r0, #0
    a540:	d10a      	bne.n	a558 <_vfprintf_r+0x1098>
    a542:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    a544:	4543      	cmp	r3, r8
    a546:	d207      	bcs.n	a558 <_vfprintf_r+0x1098>
    a548:	2130      	movs	r1, #48	; 0x30
    a54a:	4640      	mov	r0, r8
    a54c:	1c5a      	adds	r2, r3, #1
    a54e:	9223      	str	r2, [sp, #140]	; 0x8c
    a550:	7019      	strb	r1, [r3, #0]
    a552:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    a554:	4298      	cmp	r0, r3
    a556:	d8f9      	bhi.n	a54c <_vfprintf_r+0x108c>
    a558:	9a11      	ldr	r2, [sp, #68]	; 0x44
    a55a:	1a9b      	subs	r3, r3, r2
    a55c:	9314      	str	r3, [sp, #80]	; 0x50
    a55e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a560:	2b47      	cmp	r3, #71	; 0x47
    a562:	d100      	bne.n	a566 <_vfprintf_r+0x10a6>
    a564:	e0d0      	b.n	a708 <_vfprintf_r+0x1248>
    a566:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a568:	2b65      	cmp	r3, #101	; 0x65
    a56a:	dc00      	bgt.n	a56e <_vfprintf_r+0x10ae>
    a56c:	e2d5      	b.n	ab1a <_vfprintf_r+0x165a>
    a56e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a570:	2b66      	cmp	r3, #102	; 0x66
    a572:	d100      	bne.n	a576 <_vfprintf_r+0x10b6>
    a574:	e1c6      	b.n	a904 <_vfprintf_r+0x1444>
    a576:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a578:	9313      	str	r3, [sp, #76]	; 0x4c
    a57a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a57c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a57e:	0019      	movs	r1, r3
    a580:	4291      	cmp	r1, r2
    a582:	dd00      	ble.n	a586 <_vfprintf_r+0x10c6>
    a584:	e1a0      	b.n	a8c8 <_vfprintf_r+0x1408>
    a586:	07e3      	lsls	r3, r4, #31
    a588:	d500      	bpl.n	a58c <_vfprintf_r+0x10cc>
    a58a:	e242      	b.n	aa12 <_vfprintf_r+0x1552>
    a58c:	43d3      	mvns	r3, r2
    a58e:	17db      	asrs	r3, r3, #31
    a590:	0011      	movs	r1, r2
    a592:	401a      	ands	r2, r3
    a594:	2367      	movs	r3, #103	; 0x67
    a596:	9208      	str	r2, [sp, #32]
    a598:	910e      	str	r1, [sp, #56]	; 0x38
    a59a:	9312      	str	r3, [sp, #72]	; 0x48
    a59c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a59e:	2b00      	cmp	r3, #0
    a5a0:	d000      	beq.n	a5a4 <_vfprintf_r+0x10e4>
    a5a2:	e0a9      	b.n	a6f8 <_vfprintf_r+0x1238>
    a5a4:	ab16      	add	r3, sp, #88	; 0x58
    a5a6:	7fdb      	ldrb	r3, [r3, #31]
    a5a8:	4698      	mov	r8, r3
    a5aa:	2300      	movs	r3, #0
    a5ac:	469a      	mov	sl, r3
    a5ae:	f7ff f8fc 	bl	97aa <_vfprintf_r+0x2ea>
    a5b2:	46cb      	mov	fp, r9
    a5b4:	46a1      	mov	r9, r4
    a5b6:	0014      	movs	r4, r2
    a5b8:	e637      	b.n	a22a <_vfprintf_r+0xd6a>
    a5ba:	464b      	mov	r3, r9
    a5bc:	6d98      	ldr	r0, [r3, #88]	; 0x58
    a5be:	f002 f8db 	bl	c778 <__retarget_lock_release_recursive>
    a5c2:	2301      	movs	r3, #1
    a5c4:	425b      	negs	r3, r3
    a5c6:	930a      	str	r3, [sp, #40]	; 0x28
    a5c8:	f7ff f82b 	bl	9622 <_vfprintf_r+0x162>
    a5cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a5ce:	07d2      	lsls	r2, r2, #31
    a5d0:	d400      	bmi.n	a5d4 <_vfprintf_r+0x1114>
    a5d2:	e68f      	b.n	a2f4 <_vfprintf_r+0xe34>
    a5d4:	e680      	b.n	a2d8 <_vfprintf_r+0xe18>
    a5d6:	3608      	adds	r6, #8
    a5d8:	e679      	b.n	a2ce <_vfprintf_r+0xe0e>
    a5da:	68bc      	ldr	r4, [r7, #8]
    a5dc:	f7ff fb73 	bl	9cc6 <_vfprintf_r+0x806>
    a5e0:	003a      	movs	r2, r7
    a5e2:	4659      	mov	r1, fp
    a5e4:	9806      	ldr	r0, [sp, #24]
    a5e6:	f003 fa3d 	bl	da64 <__sprint_r>
    a5ea:	2800      	cmp	r0, #0
    a5ec:	d000      	beq.n	a5f0 <_vfprintf_r+0x1130>
    a5ee:	e4f7      	b.n	9fe0 <_vfprintf_r+0xb20>
    a5f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a5f2:	68bc      	ldr	r4, [r7, #8]
    a5f4:	ae32      	add	r6, sp, #200	; 0xc8
    a5f6:	e67d      	b.n	a2f4 <_vfprintf_r+0xe34>
    a5f8:	2320      	movs	r3, #32
    a5fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
    a5fc:	439a      	bics	r2, r3
    a5fe:	3b1a      	subs	r3, #26
    a600:	920e      	str	r2, [sp, #56]	; 0x38
    a602:	469a      	mov	sl, r3
    a604:	e75f      	b.n	a4c6 <_vfprintf_r+0x1006>
    a606:	232d      	movs	r3, #45	; 0x2d
    a608:	aa16      	add	r2, sp, #88	; 0x58
    a60a:	77d3      	strb	r3, [r2, #31]
    a60c:	4698      	mov	r8, r3
    a60e:	f7ff faa8 	bl	9b62 <_vfprintf_r+0x6a2>
    a612:	003a      	movs	r2, r7
    a614:	4659      	mov	r1, fp
    a616:	9806      	ldr	r0, [sp, #24]
    a618:	f003 fa24 	bl	da64 <__sprint_r>
    a61c:	2800      	cmp	r0, #0
    a61e:	d000      	beq.n	a622 <_vfprintf_r+0x1162>
    a620:	e4de      	b.n	9fe0 <_vfprintf_r+0xb20>
    a622:	ae32      	add	r6, sp, #200	; 0xc8
    a624:	e419      	b.n	9e5a <_vfprintf_r+0x99a>
    a626:	4be3      	ldr	r3, [pc, #908]	; (a9b4 <_vfprintf_r+0x14f4>)
    a628:	3401      	adds	r4, #1
    a62a:	6033      	str	r3, [r6, #0]
    a62c:	2301      	movs	r3, #1
    a62e:	6073      	str	r3, [r6, #4]
    a630:	687b      	ldr	r3, [r7, #4]
    a632:	60bc      	str	r4, [r7, #8]
    a634:	3301      	adds	r3, #1
    a636:	607b      	str	r3, [r7, #4]
    a638:	2b07      	cmp	r3, #7
    a63a:	dd00      	ble.n	a63e <_vfprintf_r+0x117e>
    a63c:	e155      	b.n	a8ea <_vfprintf_r+0x142a>
    a63e:	3608      	adds	r6, #8
    a640:	2800      	cmp	r0, #0
    a642:	d107      	bne.n	a654 <_vfprintf_r+0x1194>
    a644:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a646:	2b00      	cmp	r3, #0
    a648:	d104      	bne.n	a654 <_vfprintf_r+0x1194>
    a64a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a64c:	07db      	lsls	r3, r3, #31
    a64e:	d401      	bmi.n	a654 <_vfprintf_r+0x1194>
    a650:	f7ff fb39 	bl	9cc6 <_vfprintf_r+0x806>
    a654:	9b18      	ldr	r3, [sp, #96]	; 0x60
    a656:	6033      	str	r3, [r6, #0]
    a658:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    a65a:	1919      	adds	r1, r3, r4
    a65c:	6073      	str	r3, [r6, #4]
    a65e:	687b      	ldr	r3, [r7, #4]
    a660:	60b9      	str	r1, [r7, #8]
    a662:	3301      	adds	r3, #1
    a664:	607b      	str	r3, [r7, #4]
    a666:	2b07      	cmp	r3, #7
    a668:	dd00      	ble.n	a66c <_vfprintf_r+0x11ac>
    a66a:	e1c4      	b.n	a9f6 <_vfprintf_r+0x1536>
    a66c:	0032      	movs	r2, r6
    a66e:	3208      	adds	r2, #8
    a670:	2800      	cmp	r0, #0
    a672:	da00      	bge.n	a676 <_vfprintf_r+0x11b6>
    a674:	e195      	b.n	a9a2 <_vfprintf_r+0x14e2>
    a676:	9811      	ldr	r0, [sp, #68]	; 0x44
    a678:	3301      	adds	r3, #1
    a67a:	6010      	str	r0, [r2, #0]
    a67c:	9814      	ldr	r0, [sp, #80]	; 0x50
    a67e:	607b      	str	r3, [r7, #4]
    a680:	1844      	adds	r4, r0, r1
    a682:	6050      	str	r0, [r2, #4]
    a684:	60bc      	str	r4, [r7, #8]
    a686:	2b07      	cmp	r3, #7
    a688:	dd01      	ble.n	a68e <_vfprintf_r+0x11ce>
    a68a:	f7ff fbc2 	bl	9e12 <_vfprintf_r+0x952>
    a68e:	3208      	adds	r2, #8
    a690:	0016      	movs	r6, r2
    a692:	f7ff fb18 	bl	9cc6 <_vfprintf_r+0x806>
    a696:	990f      	ldr	r1, [sp, #60]	; 0x3c
    a698:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a69a:	680b      	ldr	r3, [r1, #0]
    a69c:	601a      	str	r2, [r3, #0]
    a69e:	17d2      	asrs	r2, r2, #31
    a6a0:	605a      	str	r2, [r3, #4]
    a6a2:	000b      	movs	r3, r1
    a6a4:	3304      	adds	r3, #4
    a6a6:	930f      	str	r3, [sp, #60]	; 0x3c
    a6a8:	f7fe ff58 	bl	955c <_vfprintf_r+0x9c>
    a6ac:	464b      	mov	r3, r9
    a6ae:	9a07      	ldr	r2, [sp, #28]
    a6b0:	431c      	orrs	r4, r3
    a6b2:	3201      	adds	r2, #1
    a6b4:	7813      	ldrb	r3, [r2, #0]
    a6b6:	9207      	str	r2, [sp, #28]
    a6b8:	f7fe ff8b 	bl	95d2 <_vfprintf_r+0x112>
    a6bc:	003a      	movs	r2, r7
    a6be:	4659      	mov	r1, fp
    a6c0:	9806      	ldr	r0, [sp, #24]
    a6c2:	f003 f9cf 	bl	da64 <__sprint_r>
    a6c6:	2800      	cmp	r0, #0
    a6c8:	d000      	beq.n	a6cc <_vfprintf_r+0x120c>
    a6ca:	e489      	b.n	9fe0 <_vfprintf_r+0xb20>
    a6cc:	68bc      	ldr	r4, [r7, #8]
    a6ce:	ae32      	add	r6, sp, #200	; 0xc8
    a6d0:	f7ff fbdc 	bl	9e8c <_vfprintf_r+0x9cc>
    a6d4:	4bb8      	ldr	r3, [pc, #736]	; (a9b8 <_vfprintf_r+0x14f8>)
    a6d6:	9311      	str	r3, [sp, #68]	; 0x44
    a6d8:	f7ff fa4a 	bl	9b70 <_vfprintf_r+0x6b0>
    a6dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
    a6de:	ab32      	add	r3, sp, #200	; 0xc8
    a6e0:	1a9b      	subs	r3, r3, r2
    a6e2:	930e      	str	r3, [sp, #56]	; 0x38
    a6e4:	f7ff f859 	bl	979a <_vfprintf_r+0x2da>
    a6e8:	9811      	ldr	r0, [sp, #68]	; 0x44
    a6ea:	f7fe feb7 	bl	945c <strlen>
    a6ee:	0002      	movs	r2, r0
    a6f0:	900e      	str	r0, [sp, #56]	; 0x38
    a6f2:	0003      	movs	r3, r0
    a6f4:	f7ff f9a1 	bl	9a3a <_vfprintf_r+0x57a>
    a6f8:	232d      	movs	r3, #45	; 0x2d
    a6fa:	aa16      	add	r2, sp, #88	; 0x58
    a6fc:	77d3      	strb	r3, [r2, #31]
    a6fe:	4698      	mov	r8, r3
    a700:	2300      	movs	r3, #0
    a702:	469a      	mov	sl, r3
    a704:	f7ff f854 	bl	97b0 <_vfprintf_r+0x2f0>
    a708:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a70a:	9313      	str	r3, [sp, #76]	; 0x4c
    a70c:	1cda      	adds	r2, r3, #3
    a70e:	db02      	blt.n	a716 <_vfprintf_r+0x1256>
    a710:	459a      	cmp	sl, r3
    a712:	db00      	blt.n	a716 <_vfprintf_r+0x1256>
    a714:	e731      	b.n	a57a <_vfprintf_r+0x10ba>
    a716:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a718:	3b02      	subs	r3, #2
    a71a:	9312      	str	r3, [sp, #72]	; 0x48
    a71c:	222c      	movs	r2, #44	; 0x2c
    a71e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a720:	2148      	movs	r1, #72	; 0x48
    a722:	1e5d      	subs	r5, r3, #1
    a724:	ab16      	add	r3, sp, #88	; 0x58
    a726:	189b      	adds	r3, r3, r2
    a728:	466a      	mov	r2, sp
    a72a:	1852      	adds	r2, r2, r1
    a72c:	7812      	ldrb	r2, [r2, #0]
    a72e:	951f      	str	r5, [sp, #124]	; 0x7c
    a730:	701a      	strb	r2, [r3, #0]
    a732:	2d00      	cmp	r5, #0
    a734:	da00      	bge.n	a738 <_vfprintf_r+0x1278>
    a736:	e1cb      	b.n	aad0 <_vfprintf_r+0x1610>
    a738:	212d      	movs	r1, #45	; 0x2d
    a73a:	232b      	movs	r3, #43	; 0x2b
    a73c:	aa16      	add	r2, sp, #88	; 0x58
    a73e:	1852      	adds	r2, r2, r1
    a740:	7013      	strb	r3, [r2, #0]
    a742:	2d09      	cmp	r5, #9
    a744:	dc00      	bgt.n	a748 <_vfprintf_r+0x1288>
    a746:	e16d      	b.n	aa24 <_vfprintf_r+0x1564>
    a748:	aa16      	add	r2, sp, #88	; 0x58
    a74a:	233b      	movs	r3, #59	; 0x3b
    a74c:	4694      	mov	ip, r2
    a74e:	4463      	add	r3, ip
    a750:	469a      	mov	sl, r3
    a752:	46b1      	mov	r9, r6
    a754:	46a0      	mov	r8, r4
    a756:	4656      	mov	r6, sl
    a758:	e000      	b.n	a75c <_vfprintf_r+0x129c>
    a75a:	0026      	movs	r6, r4
    a75c:	0028      	movs	r0, r5
    a75e:	210a      	movs	r1, #10
    a760:	f7fc f842 	bl	67e8 <__aeabi_idivmod>
    a764:	1e74      	subs	r4, r6, #1
    a766:	3130      	adds	r1, #48	; 0x30
    a768:	7021      	strb	r1, [r4, #0]
    a76a:	0028      	movs	r0, r5
    a76c:	210a      	movs	r1, #10
    a76e:	f7fb ff55 	bl	661c <__divsi3>
    a772:	0005      	movs	r5, r0
    a774:	2809      	cmp	r0, #9
    a776:	dcf0      	bgt.n	a75a <_vfprintf_r+0x129a>
    a778:	0023      	movs	r3, r4
    a77a:	4644      	mov	r4, r8
    a77c:	46b0      	mov	r8, r6
    a77e:	464e      	mov	r6, r9
    a780:	4699      	mov	r9, r3
    a782:	0003      	movs	r3, r0
    a784:	3330      	adds	r3, #48	; 0x30
    a786:	b2d8      	uxtb	r0, r3
    a788:	4643      	mov	r3, r8
    a78a:	3b02      	subs	r3, #2
    a78c:	7018      	strb	r0, [r3, #0]
    a78e:	459a      	cmp	sl, r3
    a790:	d800      	bhi.n	a794 <_vfprintf_r+0x12d4>
    a792:	e1f6      	b.n	ab82 <_vfprintf_r+0x16c2>
    a794:	4642      	mov	r2, r8
    a796:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    a798:	4645      	mov	r5, r8
    a79a:	1a99      	subs	r1, r3, r2
    a79c:	2301      	movs	r3, #1
    a79e:	3107      	adds	r1, #7
    a7a0:	425b      	negs	r3, r3
    a7a2:	e001      	b.n	a7a8 <_vfprintf_r+0x12e8>
    a7a4:	5ce8      	ldrb	r0, [r5, r3]
    a7a6:	3301      	adds	r3, #1
    a7a8:	aa21      	add	r2, sp, #132	; 0x84
    a7aa:	18d2      	adds	r2, r2, r3
    a7ac:	70d0      	strb	r0, [r2, #3]
    a7ae:	428b      	cmp	r3, r1
    a7b0:	d1f8      	bne.n	a7a4 <_vfprintf_r+0x12e4>
    a7b2:	a916      	add	r1, sp, #88	; 0x58
    a7b4:	468c      	mov	ip, r1
    a7b6:	222e      	movs	r2, #46	; 0x2e
    a7b8:	464b      	mov	r3, r9
    a7ba:	4462      	add	r2, ip
    a7bc:	4694      	mov	ip, r2
    a7be:	1afb      	subs	r3, r7, r3
    a7c0:	4463      	add	r3, ip
    a7c2:	aa21      	add	r2, sp, #132	; 0x84
    a7c4:	9914      	ldr	r1, [sp, #80]	; 0x50
    a7c6:	1a9b      	subs	r3, r3, r2
    a7c8:	469c      	mov	ip, r3
    a7ca:	000a      	movs	r2, r1
    a7cc:	4462      	add	r2, ip
    a7ce:	931a      	str	r3, [sp, #104]	; 0x68
    a7d0:	920e      	str	r2, [sp, #56]	; 0x38
    a7d2:	2901      	cmp	r1, #1
    a7d4:	dc00      	bgt.n	a7d8 <_vfprintf_r+0x1318>
    a7d6:	e170      	b.n	aaba <_vfprintf_r+0x15fa>
    a7d8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    a7da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a7dc:	4694      	mov	ip, r2
    a7de:	4463      	add	r3, ip
    a7e0:	001a      	movs	r2, r3
    a7e2:	930e      	str	r3, [sp, #56]	; 0x38
    a7e4:	43db      	mvns	r3, r3
    a7e6:	17db      	asrs	r3, r3, #31
    a7e8:	401a      	ands	r2, r3
    a7ea:	2300      	movs	r3, #0
    a7ec:	9208      	str	r2, [sp, #32]
    a7ee:	9313      	str	r3, [sp, #76]	; 0x4c
    a7f0:	e6d4      	b.n	a59c <_vfprintf_r+0x10dc>
    a7f2:	003a      	movs	r2, r7
    a7f4:	4659      	mov	r1, fp
    a7f6:	9806      	ldr	r0, [sp, #24]
    a7f8:	f003 f934 	bl	da64 <__sprint_r>
    a7fc:	2800      	cmp	r0, #0
    a7fe:	d001      	beq.n	a804 <_vfprintf_r+0x1344>
    a800:	f7ff fbee 	bl	9fe0 <_vfprintf_r+0xb20>
    a804:	68bc      	ldr	r4, [r7, #8]
    a806:	ae32      	add	r6, sp, #200	; 0xc8
    a808:	e46a      	b.n	a0e0 <_vfprintf_r+0xc20>
    a80a:	4653      	mov	r3, sl
    a80c:	2b00      	cmp	r3, #0
    a80e:	d000      	beq.n	a812 <_vfprintf_r+0x1352>
    a810:	e659      	b.n	a4c6 <_vfprintf_r+0x1006>
    a812:	3301      	adds	r3, #1
    a814:	469a      	mov	sl, r3
    a816:	e656      	b.n	a4c6 <_vfprintf_r+0x1006>
    a818:	4653      	mov	r3, sl
    a81a:	9308      	str	r3, [sp, #32]
    a81c:	2b06      	cmp	r3, #6
    a81e:	d901      	bls.n	a824 <_vfprintf_r+0x1364>
    a820:	2306      	movs	r3, #6
    a822:	9308      	str	r3, [sp, #32]
    a824:	9b08      	ldr	r3, [sp, #32]
    a826:	950f      	str	r5, [sp, #60]	; 0x3c
    a828:	930e      	str	r3, [sp, #56]	; 0x38
    a82a:	2300      	movs	r3, #0
    a82c:	4698      	mov	r8, r3
    a82e:	469a      	mov	sl, r3
    a830:	9313      	str	r3, [sp, #76]	; 0x4c
    a832:	4b62      	ldr	r3, [pc, #392]	; (a9bc <_vfprintf_r+0x14fc>)
    a834:	9409      	str	r4, [sp, #36]	; 0x24
    a836:	9311      	str	r3, [sp, #68]	; 0x44
    a838:	f7fe ffbd 	bl	97b6 <_vfprintf_r+0x2f6>
    a83c:	003a      	movs	r2, r7
    a83e:	4659      	mov	r1, fp
    a840:	9806      	ldr	r0, [sp, #24]
    a842:	f003 f90f 	bl	da64 <__sprint_r>
    a846:	2800      	cmp	r0, #0
    a848:	d001      	beq.n	a84e <_vfprintf_r+0x138e>
    a84a:	f7ff fbc9 	bl	9fe0 <_vfprintf_r+0xb20>
    a84e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a850:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    a852:	68bc      	ldr	r4, [r7, #8]
    a854:	1a9b      	subs	r3, r3, r2
    a856:	ae32      	add	r6, sp, #200	; 0xc8
    a858:	e567      	b.n	a32a <_vfprintf_r+0xe6a>
    a85a:	ab23      	add	r3, sp, #140	; 0x8c
    a85c:	931b      	str	r3, [sp, #108]	; 0x6c
    a85e:	9304      	str	r3, [sp, #16]
    a860:	ab20      	add	r3, sp, #128	; 0x80
    a862:	9303      	str	r3, [sp, #12]
    a864:	ab1f      	add	r3, sp, #124	; 0x7c
    a866:	9302      	str	r3, [sp, #8]
    a868:	4653      	mov	r3, sl
    a86a:	9301      	str	r3, [sp, #4]
    a86c:	2303      	movs	r3, #3
    a86e:	464a      	mov	r2, r9
    a870:	9300      	str	r3, [sp, #0]
    a872:	9806      	ldr	r0, [sp, #24]
    a874:	9b08      	ldr	r3, [sp, #32]
    a876:	f000 fb75 	bl	af64 <_dtoa_r>
    a87a:	0003      	movs	r3, r0
    a87c:	4453      	add	r3, sl
    a87e:	4698      	mov	r8, r3
    a880:	4655      	mov	r5, sl
    a882:	9011      	str	r0, [sp, #68]	; 0x44
    a884:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a886:	781b      	ldrb	r3, [r3, #0]
    a888:	2b30      	cmp	r3, #48	; 0x30
    a88a:	d002      	beq.n	a892 <_vfprintf_r+0x13d2>
    a88c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a88e:	4498      	add	r8, r3
    a890:	e64e      	b.n	a530 <_vfprintf_r+0x1070>
    a892:	2200      	movs	r2, #0
    a894:	2300      	movs	r3, #0
    a896:	4648      	mov	r0, r9
    a898:	9908      	ldr	r1, [sp, #32]
    a89a:	f7fb ffbb 	bl	6814 <__aeabi_dcmpeq>
    a89e:	2800      	cmp	r0, #0
    a8a0:	d1f4      	bne.n	a88c <_vfprintf_r+0x13cc>
    a8a2:	2301      	movs	r3, #1
    a8a4:	1b5b      	subs	r3, r3, r5
    a8a6:	931f      	str	r3, [sp, #124]	; 0x7c
    a8a8:	4498      	add	r8, r3
    a8aa:	e641      	b.n	a530 <_vfprintf_r+0x1070>
    a8ac:	46c1      	mov	r9, r8
    a8ae:	f7ff fb1f 	bl	9ef0 <_vfprintf_r+0xa30>
    a8b2:	2280      	movs	r2, #128	; 0x80
    a8b4:	0612      	lsls	r2, r2, #24
    a8b6:	4694      	mov	ip, r2
    a8b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a8ba:	4699      	mov	r9, r3
    a8bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a8be:	4463      	add	r3, ip
    a8c0:	9308      	str	r3, [sp, #32]
    a8c2:	232d      	movs	r3, #45	; 0x2d
    a8c4:	9310      	str	r3, [sp, #64]	; 0x40
    a8c6:	e60b      	b.n	a4e0 <_vfprintf_r+0x1020>
    a8c8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    a8ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a8cc:	4694      	mov	ip, r2
    a8ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a8d0:	4463      	add	r3, ip
    a8d2:	930e      	str	r3, [sp, #56]	; 0x38
    a8d4:	2a00      	cmp	r2, #0
    a8d6:	dc00      	bgt.n	a8da <_vfprintf_r+0x141a>
    a8d8:	e0e3      	b.n	aaa2 <_vfprintf_r+0x15e2>
    a8da:	001a      	movs	r2, r3
    a8dc:	43db      	mvns	r3, r3
    a8de:	17db      	asrs	r3, r3, #31
    a8e0:	401a      	ands	r2, r3
    a8e2:	2367      	movs	r3, #103	; 0x67
    a8e4:	9208      	str	r2, [sp, #32]
    a8e6:	9312      	str	r3, [sp, #72]	; 0x48
    a8e8:	e658      	b.n	a59c <_vfprintf_r+0x10dc>
    a8ea:	003a      	movs	r2, r7
    a8ec:	4659      	mov	r1, fp
    a8ee:	9806      	ldr	r0, [sp, #24]
    a8f0:	f003 f8b8 	bl	da64 <__sprint_r>
    a8f4:	2800      	cmp	r0, #0
    a8f6:	d001      	beq.n	a8fc <_vfprintf_r+0x143c>
    a8f8:	f7ff fb72 	bl	9fe0 <_vfprintf_r+0xb20>
    a8fc:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a8fe:	68bc      	ldr	r4, [r7, #8]
    a900:	ae32      	add	r6, sp, #200	; 0xc8
    a902:	e69d      	b.n	a640 <_vfprintf_r+0x1180>
    a904:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a906:	9313      	str	r3, [sp, #76]	; 0x4c
    a908:	2b00      	cmp	r3, #0
    a90a:	dc00      	bgt.n	a90e <_vfprintf_r+0x144e>
    a90c:	e0f2      	b.n	aaf4 <_vfprintf_r+0x1634>
    a90e:	4652      	mov	r2, sl
    a910:	2a00      	cmp	r2, #0
    a912:	d000      	beq.n	a916 <_vfprintf_r+0x1456>
    a914:	e0a0      	b.n	aa58 <_vfprintf_r+0x1598>
    a916:	07e2      	lsls	r2, r4, #31
    a918:	d500      	bpl.n	a91c <_vfprintf_r+0x145c>
    a91a:	e09d      	b.n	aa58 <_vfprintf_r+0x1598>
    a91c:	9308      	str	r3, [sp, #32]
    a91e:	930e      	str	r3, [sp, #56]	; 0x38
    a920:	e63c      	b.n	a59c <_vfprintf_r+0x10dc>
    a922:	ab16      	add	r3, sp, #88	; 0x58
    a924:	7fdb      	ldrb	r3, [r3, #31]
    a926:	950f      	str	r5, [sp, #60]	; 0x3c
    a928:	4698      	mov	r8, r3
    a92a:	4653      	mov	r3, sl
    a92c:	9308      	str	r3, [sp, #32]
    a92e:	930e      	str	r3, [sp, #56]	; 0x38
    a930:	2300      	movs	r3, #0
    a932:	9409      	str	r4, [sp, #36]	; 0x24
    a934:	469a      	mov	sl, r3
    a936:	9313      	str	r3, [sp, #76]	; 0x4c
    a938:	f7fe ff37 	bl	97aa <_vfprintf_r+0x2ea>
    a93c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a93e:	4698      	mov	r8, r3
    a940:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a942:	44a8      	add	r8, r5
    a944:	2b47      	cmp	r3, #71	; 0x47
    a946:	d000      	beq.n	a94a <_vfprintf_r+0x148a>
    a948:	e5f2      	b.n	a530 <_vfprintf_r+0x1070>
    a94a:	07e3      	lsls	r3, r4, #31
    a94c:	d400      	bmi.n	a950 <_vfprintf_r+0x1490>
    a94e:	e0dc      	b.n	ab0a <_vfprintf_r+0x164a>
    a950:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a952:	4698      	mov	r8, r3
    a954:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a956:	44a8      	add	r8, r5
    a958:	2b46      	cmp	r3, #70	; 0x46
    a95a:	d093      	beq.n	a884 <_vfprintf_r+0x13c4>
    a95c:	e5e8      	b.n	a530 <_vfprintf_r+0x1070>
    a95e:	ab23      	add	r3, sp, #140	; 0x8c
    a960:	931b      	str	r3, [sp, #108]	; 0x6c
    a962:	9304      	str	r3, [sp, #16]
    a964:	ab20      	add	r3, sp, #128	; 0x80
    a966:	9303      	str	r3, [sp, #12]
    a968:	ab1f      	add	r3, sp, #124	; 0x7c
    a96a:	9302      	str	r3, [sp, #8]
    a96c:	4653      	mov	r3, sl
    a96e:	9301      	str	r3, [sp, #4]
    a970:	2303      	movs	r3, #3
    a972:	464a      	mov	r2, r9
    a974:	9300      	str	r3, [sp, #0]
    a976:	9806      	ldr	r0, [sp, #24]
    a978:	9b08      	ldr	r3, [sp, #32]
    a97a:	f000 faf3 	bl	af64 <_dtoa_r>
    a97e:	4655      	mov	r5, sl
    a980:	9011      	str	r0, [sp, #68]	; 0x44
    a982:	e7e5      	b.n	a950 <_vfprintf_r+0x1490>
    a984:	003a      	movs	r2, r7
    a986:	4659      	mov	r1, fp
    a988:	9806      	ldr	r0, [sp, #24]
    a98a:	f003 f86b 	bl	da64 <__sprint_r>
    a98e:	2800      	cmp	r0, #0
    a990:	d101      	bne.n	a996 <_vfprintf_r+0x14d6>
    a992:	f7ff faab 	bl	9eec <_vfprintf_r+0xa2c>
    a996:	f7ff faab 	bl	9ef0 <_vfprintf_r+0xa30>
    a99a:	4642      	mov	r2, r8
    a99c:	9207      	str	r2, [sp, #28]
    a99e:	f7fe fe1b 	bl	95d8 <_vfprintf_r+0x118>
    a9a2:	4244      	negs	r4, r0
    a9a4:	3010      	adds	r0, #16
    a9a6:	db00      	blt.n	a9aa <_vfprintf_r+0x14ea>
    a9a8:	e0d8      	b.n	ab5c <_vfprintf_r+0x169c>
    a9aa:	4805      	ldr	r0, [pc, #20]	; (a9c0 <_vfprintf_r+0x1500>)
    a9ac:	2610      	movs	r6, #16
    a9ae:	0005      	movs	r5, r0
    a9b0:	e00c      	b.n	a9cc <_vfprintf_r+0x150c>
    a9b2:	46c0      	nop			; (mov r8, r8)
    a9b4:	0000e594 	.word	0x0000e594
    a9b8:	0000e558 	.word	0x0000e558
    a9bc:	0000e58c 	.word	0x0000e58c
    a9c0:	0000e5a8 	.word	0x0000e5a8
    a9c4:	3208      	adds	r2, #8
    a9c6:	3c10      	subs	r4, #16
    a9c8:	2c10      	cmp	r4, #16
    a9ca:	dd51      	ble.n	aa70 <_vfprintf_r+0x15b0>
    a9cc:	3110      	adds	r1, #16
    a9ce:	3301      	adds	r3, #1
    a9d0:	6015      	str	r5, [r2, #0]
    a9d2:	6056      	str	r6, [r2, #4]
    a9d4:	60b9      	str	r1, [r7, #8]
    a9d6:	607b      	str	r3, [r7, #4]
    a9d8:	2b07      	cmp	r3, #7
    a9da:	ddf3      	ble.n	a9c4 <_vfprintf_r+0x1504>
    a9dc:	003a      	movs	r2, r7
    a9de:	4659      	mov	r1, fp
    a9e0:	9806      	ldr	r0, [sp, #24]
    a9e2:	f003 f83f 	bl	da64 <__sprint_r>
    a9e6:	2800      	cmp	r0, #0
    a9e8:	d001      	beq.n	a9ee <_vfprintf_r+0x152e>
    a9ea:	f7ff faf9 	bl	9fe0 <_vfprintf_r+0xb20>
    a9ee:	68b9      	ldr	r1, [r7, #8]
    a9f0:	687b      	ldr	r3, [r7, #4]
    a9f2:	aa32      	add	r2, sp, #200	; 0xc8
    a9f4:	e7e7      	b.n	a9c6 <_vfprintf_r+0x1506>
    a9f6:	003a      	movs	r2, r7
    a9f8:	4659      	mov	r1, fp
    a9fa:	9806      	ldr	r0, [sp, #24]
    a9fc:	f003 f832 	bl	da64 <__sprint_r>
    aa00:	2800      	cmp	r0, #0
    aa02:	d001      	beq.n	aa08 <_vfprintf_r+0x1548>
    aa04:	f7ff faec 	bl	9fe0 <_vfprintf_r+0xb20>
    aa08:	981f      	ldr	r0, [sp, #124]	; 0x7c
    aa0a:	68b9      	ldr	r1, [r7, #8]
    aa0c:	687b      	ldr	r3, [r7, #4]
    aa0e:	aa32      	add	r2, sp, #200	; 0xc8
    aa10:	e62e      	b.n	a670 <_vfprintf_r+0x11b0>
    aa12:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    aa14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    aa16:	4694      	mov	ip, r2
    aa18:	4463      	add	r3, ip
    aa1a:	001a      	movs	r2, r3
    aa1c:	930e      	str	r3, [sp, #56]	; 0x38
    aa1e:	e75d      	b.n	a8dc <_vfprintf_r+0x141c>
    aa20:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    aa22:	e599      	b.n	a558 <_vfprintf_r+0x1098>
    aa24:	212e      	movs	r1, #46	; 0x2e
    aa26:	2330      	movs	r3, #48	; 0x30
    aa28:	aa16      	add	r2, sp, #88	; 0x58
    aa2a:	1852      	adds	r2, r2, r1
    aa2c:	7013      	strb	r3, [r2, #0]
    aa2e:	002b      	movs	r3, r5
    aa30:	aa16      	add	r2, sp, #88	; 0x58
    aa32:	3101      	adds	r1, #1
    aa34:	3330      	adds	r3, #48	; 0x30
    aa36:	1852      	adds	r2, r2, r1
    aa38:	7013      	strb	r3, [r2, #0]
    aa3a:	ab22      	add	r3, sp, #136	; 0x88
    aa3c:	e6c1      	b.n	a7c2 <_vfprintf_r+0x1302>
    aa3e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    aa40:	2b00      	cmp	r3, #0
    aa42:	db52      	blt.n	aaea <_vfprintf_r+0x162a>
    aa44:	ab16      	add	r3, sp, #88	; 0x58
    aa46:	7fdb      	ldrb	r3, [r3, #31]
    aa48:	4698      	mov	r8, r3
    aa4a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    aa4c:	2b47      	cmp	r3, #71	; 0x47
    aa4e:	dc48      	bgt.n	aae2 <_vfprintf_r+0x1622>
    aa50:	4b4e      	ldr	r3, [pc, #312]	; (ab8c <_vfprintf_r+0x16cc>)
    aa52:	9311      	str	r3, [sp, #68]	; 0x44
    aa54:	f7ff f88c 	bl	9b70 <_vfprintf_r+0x6b0>
    aa58:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    aa5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    aa5c:	4694      	mov	ip, r2
    aa5e:	4463      	add	r3, ip
    aa60:	4453      	add	r3, sl
    aa62:	001a      	movs	r2, r3
    aa64:	930e      	str	r3, [sp, #56]	; 0x38
    aa66:	43db      	mvns	r3, r3
    aa68:	17db      	asrs	r3, r3, #31
    aa6a:	401a      	ands	r2, r3
    aa6c:	9208      	str	r2, [sp, #32]
    aa6e:	e595      	b.n	a59c <_vfprintf_r+0x10dc>
    aa70:	46a9      	mov	r9, r5
    aa72:	4648      	mov	r0, r9
    aa74:	1909      	adds	r1, r1, r4
    aa76:	3301      	adds	r3, #1
    aa78:	6010      	str	r0, [r2, #0]
    aa7a:	6054      	str	r4, [r2, #4]
    aa7c:	60b9      	str	r1, [r7, #8]
    aa7e:	3208      	adds	r2, #8
    aa80:	607b      	str	r3, [r7, #4]
    aa82:	2b07      	cmp	r3, #7
    aa84:	dc00      	bgt.n	aa88 <_vfprintf_r+0x15c8>
    aa86:	e5f6      	b.n	a676 <_vfprintf_r+0x11b6>
    aa88:	003a      	movs	r2, r7
    aa8a:	4659      	mov	r1, fp
    aa8c:	9806      	ldr	r0, [sp, #24]
    aa8e:	f002 ffe9 	bl	da64 <__sprint_r>
    aa92:	2800      	cmp	r0, #0
    aa94:	d001      	beq.n	aa9a <_vfprintf_r+0x15da>
    aa96:	f7ff faa3 	bl	9fe0 <_vfprintf_r+0xb20>
    aa9a:	68b9      	ldr	r1, [r7, #8]
    aa9c:	687b      	ldr	r3, [r7, #4]
    aa9e:	aa32      	add	r2, sp, #200	; 0xc8
    aaa0:	e5e9      	b.n	a676 <_vfprintf_r+0x11b6>
    aaa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    aaa4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    aaa6:	1a98      	subs	r0, r3, r2
    aaa8:	1c43      	adds	r3, r0, #1
    aaaa:	001a      	movs	r2, r3
    aaac:	930e      	str	r3, [sp, #56]	; 0x38
    aaae:	e715      	b.n	a8dc <_vfprintf_r+0x141c>
    aab0:	4a37      	ldr	r2, [pc, #220]	; (ab90 <_vfprintf_r+0x16d0>)
    aab2:	687b      	ldr	r3, [r7, #4]
    aab4:	4691      	mov	r9, r2
    aab6:	f7ff fbf5 	bl	a2a4 <_vfprintf_r+0xde4>
    aaba:	2301      	movs	r3, #1
    aabc:	4023      	ands	r3, r4
    aabe:	9313      	str	r3, [sp, #76]	; 0x4c
    aac0:	d000      	beq.n	aac4 <_vfprintf_r+0x1604>
    aac2:	e689      	b.n	a7d8 <_vfprintf_r+0x1318>
    aac4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    aac6:	43d3      	mvns	r3, r2
    aac8:	17db      	asrs	r3, r3, #31
    aaca:	401a      	ands	r2, r3
    aacc:	9208      	str	r2, [sp, #32]
    aace:	e565      	b.n	a59c <_vfprintf_r+0x10dc>
    aad0:	2301      	movs	r3, #1
    aad2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    aad4:	391b      	subs	r1, #27
    aad6:	1a9d      	subs	r5, r3, r2
    aad8:	aa16      	add	r2, sp, #88	; 0x58
    aada:	332c      	adds	r3, #44	; 0x2c
    aadc:	1852      	adds	r2, r2, r1
    aade:	7013      	strb	r3, [r2, #0]
    aae0:	e62f      	b.n	a742 <_vfprintf_r+0x1282>
    aae2:	4b2c      	ldr	r3, [pc, #176]	; (ab94 <_vfprintf_r+0x16d4>)
    aae4:	9311      	str	r3, [sp, #68]	; 0x44
    aae6:	f7ff f843 	bl	9b70 <_vfprintf_r+0x6b0>
    aaea:	232d      	movs	r3, #45	; 0x2d
    aaec:	aa16      	add	r2, sp, #88	; 0x58
    aaee:	77d3      	strb	r3, [r2, #31]
    aaf0:	4698      	mov	r8, r3
    aaf2:	e7aa      	b.n	aa4a <_vfprintf_r+0x158a>
    aaf4:	4653      	mov	r3, sl
    aaf6:	2b00      	cmp	r3, #0
    aaf8:	d101      	bne.n	aafe <_vfprintf_r+0x163e>
    aafa:	07e3      	lsls	r3, r4, #31
    aafc:	d503      	bpl.n	ab06 <_vfprintf_r+0x1646>
    aafe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    ab00:	1c58      	adds	r0, r3, #1
    ab02:	0003      	movs	r3, r0
    ab04:	e7ac      	b.n	aa60 <_vfprintf_r+0x15a0>
    ab06:	2301      	movs	r3, #1
    ab08:	e708      	b.n	a91c <_vfprintf_r+0x145c>
    ab0a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    ab0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    ab0e:	1a9b      	subs	r3, r3, r2
    ab10:	9314      	str	r3, [sp, #80]	; 0x50
    ab12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ab14:	2b47      	cmp	r3, #71	; 0x47
    ab16:	d100      	bne.n	ab1a <_vfprintf_r+0x165a>
    ab18:	e5f6      	b.n	a708 <_vfprintf_r+0x1248>
    ab1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    ab1c:	9313      	str	r3, [sp, #76]	; 0x4c
    ab1e:	e5fd      	b.n	a71c <_vfprintf_r+0x125c>
    ab20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ab22:	1d1d      	adds	r5, r3, #4
    ab24:	681b      	ldr	r3, [r3, #0]
    ab26:	46a8      	mov	r8, r5
    ab28:	469a      	mov	sl, r3
    ab2a:	2b00      	cmp	r3, #0
    ab2c:	db0a      	blt.n	ab44 <_vfprintf_r+0x1684>
    ab2e:	4645      	mov	r5, r8
    ab30:	9b07      	ldr	r3, [sp, #28]
    ab32:	950f      	str	r5, [sp, #60]	; 0x3c
    ab34:	785b      	ldrb	r3, [r3, #1]
    ab36:	9207      	str	r2, [sp, #28]
    ab38:	f7fe fd4b 	bl	95d2 <_vfprintf_r+0x112>
    ab3c:	ab16      	add	r3, sp, #88	; 0x58
    ab3e:	77d8      	strb	r0, [r3, #31]
    ab40:	f7ff f830 	bl	9ba4 <_vfprintf_r+0x6e4>
    ab44:	2301      	movs	r3, #1
    ab46:	425b      	negs	r3, r3
    ab48:	469a      	mov	sl, r3
    ab4a:	e7f0      	b.n	ab2e <_vfprintf_r+0x166e>
    ab4c:	ab16      	add	r3, sp, #88	; 0x58
    ab4e:	77d8      	strb	r0, [r3, #31]
    ab50:	f7fe ff27 	bl	99a2 <_vfprintf_r+0x4e2>
    ab54:	ab16      	add	r3, sp, #88	; 0x58
    ab56:	77d8      	strb	r0, [r3, #31]
    ab58:	f7fe fdce 	bl	96f8 <_vfprintf_r+0x238>
    ab5c:	480c      	ldr	r0, [pc, #48]	; (ab90 <_vfprintf_r+0x16d0>)
    ab5e:	4681      	mov	r9, r0
    ab60:	e787      	b.n	aa72 <_vfprintf_r+0x15b2>
    ab62:	ab16      	add	r3, sp, #88	; 0x58
    ab64:	77d8      	strb	r0, [r3, #31]
    ab66:	f7ff f829 	bl	9bbc <_vfprintf_r+0x6fc>
    ab6a:	ab16      	add	r3, sp, #88	; 0x58
    ab6c:	77d8      	strb	r0, [r3, #31]
    ab6e:	f7fe ffc3 	bl	9af8 <_vfprintf_r+0x638>
    ab72:	ab16      	add	r3, sp, #88	; 0x58
    ab74:	77d8      	strb	r0, [r3, #31]
    ab76:	f7fe ffa5 	bl	9ac4 <_vfprintf_r+0x604>
    ab7a:	ab16      	add	r3, sp, #88	; 0x58
    ab7c:	77d8      	strb	r0, [r3, #31]
    ab7e:	f7fe feaf 	bl	98e0 <_vfprintf_r+0x420>
    ab82:	aa16      	add	r2, sp, #88	; 0x58
    ab84:	232e      	movs	r3, #46	; 0x2e
    ab86:	4694      	mov	ip, r2
    ab88:	4463      	add	r3, ip
    ab8a:	e61a      	b.n	a7c2 <_vfprintf_r+0x1302>
    ab8c:	0000e55c 	.word	0x0000e55c
    ab90:	0000e5a8 	.word	0x0000e5a8
    ab94:	0000e560 	.word	0x0000e560

0000ab98 <__sbprintf>:
    ab98:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab9a:	0015      	movs	r5, r2
    ab9c:	2202      	movs	r2, #2
    ab9e:	4c1e      	ldr	r4, [pc, #120]	; (ac18 <__sbprintf+0x80>)
    aba0:	001f      	movs	r7, r3
    aba2:	898b      	ldrh	r3, [r1, #12]
    aba4:	44a5      	add	sp, r4
    aba6:	4393      	bics	r3, r2
    aba8:	466a      	mov	r2, sp
    abaa:	8193      	strh	r3, [r2, #12]
    abac:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    abae:	0006      	movs	r6, r0
    abb0:	9319      	str	r3, [sp, #100]	; 0x64
    abb2:	89cb      	ldrh	r3, [r1, #14]
    abb4:	a816      	add	r0, sp, #88	; 0x58
    abb6:	81d3      	strh	r3, [r2, #14]
    abb8:	69cb      	ldr	r3, [r1, #28]
    abba:	000c      	movs	r4, r1
    abbc:	9307      	str	r3, [sp, #28]
    abbe:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    abc0:	9309      	str	r3, [sp, #36]	; 0x24
    abc2:	ab1a      	add	r3, sp, #104	; 0x68
    abc4:	9300      	str	r3, [sp, #0]
    abc6:	9304      	str	r3, [sp, #16]
    abc8:	2380      	movs	r3, #128	; 0x80
    abca:	00db      	lsls	r3, r3, #3
    abcc:	9302      	str	r3, [sp, #8]
    abce:	9305      	str	r3, [sp, #20]
    abd0:	2300      	movs	r3, #0
    abd2:	9306      	str	r3, [sp, #24]
    abd4:	f001 fdca 	bl	c76c <__retarget_lock_init_recursive>
    abd8:	002a      	movs	r2, r5
    abda:	003b      	movs	r3, r7
    abdc:	4669      	mov	r1, sp
    abde:	0030      	movs	r0, r6
    abe0:	f7fe fc6e 	bl	94c0 <_vfprintf_r>
    abe4:	1e05      	subs	r5, r0, #0
    abe6:	db05      	blt.n	abf4 <__sbprintf+0x5c>
    abe8:	4669      	mov	r1, sp
    abea:	0030      	movs	r0, r6
    abec:	f001 fa26 	bl	c03c <_fflush_r>
    abf0:	2800      	cmp	r0, #0
    abf2:	d10e      	bne.n	ac12 <__sbprintf+0x7a>
    abf4:	466b      	mov	r3, sp
    abf6:	899b      	ldrh	r3, [r3, #12]
    abf8:	065b      	lsls	r3, r3, #25
    abfa:	d503      	bpl.n	ac04 <__sbprintf+0x6c>
    abfc:	2240      	movs	r2, #64	; 0x40
    abfe:	89a3      	ldrh	r3, [r4, #12]
    ac00:	4313      	orrs	r3, r2
    ac02:	81a3      	strh	r3, [r4, #12]
    ac04:	9816      	ldr	r0, [sp, #88]	; 0x58
    ac06:	f001 fdb3 	bl	c770 <__retarget_lock_close_recursive>
    ac0a:	0028      	movs	r0, r5
    ac0c:	4b03      	ldr	r3, [pc, #12]	; (ac1c <__sbprintf+0x84>)
    ac0e:	449d      	add	sp, r3
    ac10:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ac12:	2501      	movs	r5, #1
    ac14:	426d      	negs	r5, r5
    ac16:	e7ed      	b.n	abf4 <__sbprintf+0x5c>
    ac18:	fffffb94 	.word	0xfffffb94
    ac1c:	0000046c 	.word	0x0000046c

0000ac20 <__swsetup_r>:
    ac20:	4b33      	ldr	r3, [pc, #204]	; (acf0 <__swsetup_r+0xd0>)
    ac22:	b570      	push	{r4, r5, r6, lr}
    ac24:	0005      	movs	r5, r0
    ac26:	6818      	ldr	r0, [r3, #0]
    ac28:	000c      	movs	r4, r1
    ac2a:	2800      	cmp	r0, #0
    ac2c:	d002      	beq.n	ac34 <__swsetup_r+0x14>
    ac2e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    ac30:	2b00      	cmp	r3, #0
    ac32:	d03c      	beq.n	acae <__swsetup_r+0x8e>
    ac34:	230c      	movs	r3, #12
    ac36:	5ee2      	ldrsh	r2, [r4, r3]
    ac38:	b293      	uxth	r3, r2
    ac3a:	0719      	lsls	r1, r3, #28
    ac3c:	d50d      	bpl.n	ac5a <__swsetup_r+0x3a>
    ac3e:	6921      	ldr	r1, [r4, #16]
    ac40:	2900      	cmp	r1, #0
    ac42:	d015      	beq.n	ac70 <__swsetup_r+0x50>
    ac44:	07da      	lsls	r2, r3, #31
    ac46:	d521      	bpl.n	ac8c <__swsetup_r+0x6c>
    ac48:	2300      	movs	r3, #0
    ac4a:	60a3      	str	r3, [r4, #8]
    ac4c:	6963      	ldr	r3, [r4, #20]
    ac4e:	2000      	movs	r0, #0
    ac50:	425b      	negs	r3, r3
    ac52:	61a3      	str	r3, [r4, #24]
    ac54:	2900      	cmp	r1, #0
    ac56:	d021      	beq.n	ac9c <__swsetup_r+0x7c>
    ac58:	bd70      	pop	{r4, r5, r6, pc}
    ac5a:	06d9      	lsls	r1, r3, #27
    ac5c:	d53f      	bpl.n	acde <__swsetup_r+0xbe>
    ac5e:	075b      	lsls	r3, r3, #29
    ac60:	d428      	bmi.n	acb4 <__swsetup_r+0x94>
    ac62:	6921      	ldr	r1, [r4, #16]
    ac64:	2308      	movs	r3, #8
    ac66:	4313      	orrs	r3, r2
    ac68:	81a3      	strh	r3, [r4, #12]
    ac6a:	b29b      	uxth	r3, r3
    ac6c:	2900      	cmp	r1, #0
    ac6e:	d1e9      	bne.n	ac44 <__swsetup_r+0x24>
    ac70:	22a0      	movs	r2, #160	; 0xa0
    ac72:	2080      	movs	r0, #128	; 0x80
    ac74:	0092      	lsls	r2, r2, #2
    ac76:	0080      	lsls	r0, r0, #2
    ac78:	401a      	ands	r2, r3
    ac7a:	4282      	cmp	r2, r0
    ac7c:	d0e2      	beq.n	ac44 <__swsetup_r+0x24>
    ac7e:	0021      	movs	r1, r4
    ac80:	0028      	movs	r0, r5
    ac82:	f001 fdab 	bl	c7dc <__smakebuf_r>
    ac86:	89a3      	ldrh	r3, [r4, #12]
    ac88:	6921      	ldr	r1, [r4, #16]
    ac8a:	e7db      	b.n	ac44 <__swsetup_r+0x24>
    ac8c:	2200      	movs	r2, #0
    ac8e:	079b      	lsls	r3, r3, #30
    ac90:	d400      	bmi.n	ac94 <__swsetup_r+0x74>
    ac92:	6962      	ldr	r2, [r4, #20]
    ac94:	60a2      	str	r2, [r4, #8]
    ac96:	2000      	movs	r0, #0
    ac98:	2900      	cmp	r1, #0
    ac9a:	d1dd      	bne.n	ac58 <__swsetup_r+0x38>
    ac9c:	220c      	movs	r2, #12
    ac9e:	5ea3      	ldrsh	r3, [r4, r2]
    aca0:	061a      	lsls	r2, r3, #24
    aca2:	d5d9      	bpl.n	ac58 <__swsetup_r+0x38>
    aca4:	2240      	movs	r2, #64	; 0x40
    aca6:	4313      	orrs	r3, r2
    aca8:	81a3      	strh	r3, [r4, #12]
    acaa:	3801      	subs	r0, #1
    acac:	e7d4      	b.n	ac58 <__swsetup_r+0x38>
    acae:	f001 fa1f 	bl	c0f0 <__sinit>
    acb2:	e7bf      	b.n	ac34 <__swsetup_r+0x14>
    acb4:	6b21      	ldr	r1, [r4, #48]	; 0x30
    acb6:	2900      	cmp	r1, #0
    acb8:	d00a      	beq.n	acd0 <__swsetup_r+0xb0>
    acba:	0023      	movs	r3, r4
    acbc:	3340      	adds	r3, #64	; 0x40
    acbe:	4299      	cmp	r1, r3
    acc0:	d004      	beq.n	accc <__swsetup_r+0xac>
    acc2:	0028      	movs	r0, r5
    acc4:	f001 fabe 	bl	c244 <_free_r>
    acc8:	230c      	movs	r3, #12
    acca:	5ee2      	ldrsh	r2, [r4, r3]
    accc:	2300      	movs	r3, #0
    acce:	6323      	str	r3, [r4, #48]	; 0x30
    acd0:	2324      	movs	r3, #36	; 0x24
    acd2:	439a      	bics	r2, r3
    acd4:	2300      	movs	r3, #0
    acd6:	6921      	ldr	r1, [r4, #16]
    acd8:	6063      	str	r3, [r4, #4]
    acda:	6021      	str	r1, [r4, #0]
    acdc:	e7c2      	b.n	ac64 <__swsetup_r+0x44>
    acde:	2309      	movs	r3, #9
    ace0:	602b      	str	r3, [r5, #0]
    ace2:	2340      	movs	r3, #64	; 0x40
    ace4:	2001      	movs	r0, #1
    ace6:	431a      	orrs	r2, r3
    ace8:	81a2      	strh	r2, [r4, #12]
    acea:	4240      	negs	r0, r0
    acec:	e7b4      	b.n	ac58 <__swsetup_r+0x38>
    acee:	46c0      	nop			; (mov r8, r8)
    acf0:	20000070 	.word	0x20000070

0000acf4 <__register_exitproc>:
    acf4:	b5f0      	push	{r4, r5, r6, r7, lr}
    acf6:	464e      	mov	r6, r9
    acf8:	4645      	mov	r5, r8
    acfa:	46de      	mov	lr, fp
    acfc:	4657      	mov	r7, sl
    acfe:	b5e0      	push	{r5, r6, r7, lr}
    ad00:	4d36      	ldr	r5, [pc, #216]	; (addc <__register_exitproc+0xe8>)
    ad02:	b083      	sub	sp, #12
    ad04:	0006      	movs	r6, r0
    ad06:	6828      	ldr	r0, [r5, #0]
    ad08:	4698      	mov	r8, r3
    ad0a:	000f      	movs	r7, r1
    ad0c:	4691      	mov	r9, r2
    ad0e:	f001 fd31 	bl	c774 <__retarget_lock_acquire_recursive>
    ad12:	4b33      	ldr	r3, [pc, #204]	; (ade0 <__register_exitproc+0xec>)
    ad14:	681c      	ldr	r4, [r3, #0]
    ad16:	23a4      	movs	r3, #164	; 0xa4
    ad18:	005b      	lsls	r3, r3, #1
    ad1a:	58e0      	ldr	r0, [r4, r3]
    ad1c:	2800      	cmp	r0, #0
    ad1e:	d052      	beq.n	adc6 <__register_exitproc+0xd2>
    ad20:	6843      	ldr	r3, [r0, #4]
    ad22:	2b1f      	cmp	r3, #31
    ad24:	dc13      	bgt.n	ad4e <__register_exitproc+0x5a>
    ad26:	1c5a      	adds	r2, r3, #1
    ad28:	9201      	str	r2, [sp, #4]
    ad2a:	2e00      	cmp	r6, #0
    ad2c:	d128      	bne.n	ad80 <__register_exitproc+0x8c>
    ad2e:	9a01      	ldr	r2, [sp, #4]
    ad30:	3302      	adds	r3, #2
    ad32:	009b      	lsls	r3, r3, #2
    ad34:	6042      	str	r2, [r0, #4]
    ad36:	501f      	str	r7, [r3, r0]
    ad38:	6828      	ldr	r0, [r5, #0]
    ad3a:	f001 fd1d 	bl	c778 <__retarget_lock_release_recursive>
    ad3e:	2000      	movs	r0, #0
    ad40:	b003      	add	sp, #12
    ad42:	bc3c      	pop	{r2, r3, r4, r5}
    ad44:	4690      	mov	r8, r2
    ad46:	4699      	mov	r9, r3
    ad48:	46a2      	mov	sl, r4
    ad4a:	46ab      	mov	fp, r5
    ad4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ad4e:	4b25      	ldr	r3, [pc, #148]	; (ade4 <__register_exitproc+0xf0>)
    ad50:	2b00      	cmp	r3, #0
    ad52:	d03d      	beq.n	add0 <__register_exitproc+0xdc>
    ad54:	20c8      	movs	r0, #200	; 0xc8
    ad56:	0040      	lsls	r0, r0, #1
    ad58:	e000      	b.n	ad5c <__register_exitproc+0x68>
    ad5a:	bf00      	nop
    ad5c:	2800      	cmp	r0, #0
    ad5e:	d037      	beq.n	add0 <__register_exitproc+0xdc>
    ad60:	22a4      	movs	r2, #164	; 0xa4
    ad62:	2300      	movs	r3, #0
    ad64:	0052      	lsls	r2, r2, #1
    ad66:	58a1      	ldr	r1, [r4, r2]
    ad68:	6043      	str	r3, [r0, #4]
    ad6a:	6001      	str	r1, [r0, #0]
    ad6c:	50a0      	str	r0, [r4, r2]
    ad6e:	3240      	adds	r2, #64	; 0x40
    ad70:	5083      	str	r3, [r0, r2]
    ad72:	3204      	adds	r2, #4
    ad74:	5083      	str	r3, [r0, r2]
    ad76:	3301      	adds	r3, #1
    ad78:	9301      	str	r3, [sp, #4]
    ad7a:	2300      	movs	r3, #0
    ad7c:	2e00      	cmp	r6, #0
    ad7e:	d0d6      	beq.n	ad2e <__register_exitproc+0x3a>
    ad80:	009a      	lsls	r2, r3, #2
    ad82:	4692      	mov	sl, r2
    ad84:	4482      	add	sl, r0
    ad86:	464a      	mov	r2, r9
    ad88:	2188      	movs	r1, #136	; 0x88
    ad8a:	4654      	mov	r4, sl
    ad8c:	5062      	str	r2, [r4, r1]
    ad8e:	22c4      	movs	r2, #196	; 0xc4
    ad90:	0052      	lsls	r2, r2, #1
    ad92:	4691      	mov	r9, r2
    ad94:	4481      	add	r9, r0
    ad96:	464a      	mov	r2, r9
    ad98:	3987      	subs	r1, #135	; 0x87
    ad9a:	4099      	lsls	r1, r3
    ad9c:	6812      	ldr	r2, [r2, #0]
    ad9e:	468b      	mov	fp, r1
    ada0:	430a      	orrs	r2, r1
    ada2:	4694      	mov	ip, r2
    ada4:	464a      	mov	r2, r9
    ada6:	4661      	mov	r1, ip
    ada8:	6011      	str	r1, [r2, #0]
    adaa:	2284      	movs	r2, #132	; 0x84
    adac:	4641      	mov	r1, r8
    adae:	0052      	lsls	r2, r2, #1
    adb0:	50a1      	str	r1, [r4, r2]
    adb2:	2e02      	cmp	r6, #2
    adb4:	d1bb      	bne.n	ad2e <__register_exitproc+0x3a>
    adb6:	0002      	movs	r2, r0
    adb8:	465c      	mov	r4, fp
    adba:	328d      	adds	r2, #141	; 0x8d
    adbc:	32ff      	adds	r2, #255	; 0xff
    adbe:	6811      	ldr	r1, [r2, #0]
    adc0:	430c      	orrs	r4, r1
    adc2:	6014      	str	r4, [r2, #0]
    adc4:	e7b3      	b.n	ad2e <__register_exitproc+0x3a>
    adc6:	0020      	movs	r0, r4
    adc8:	304d      	adds	r0, #77	; 0x4d
    adca:	30ff      	adds	r0, #255	; 0xff
    adcc:	50e0      	str	r0, [r4, r3]
    adce:	e7a7      	b.n	ad20 <__register_exitproc+0x2c>
    add0:	6828      	ldr	r0, [r5, #0]
    add2:	f001 fcd1 	bl	c778 <__retarget_lock_release_recursive>
    add6:	2001      	movs	r0, #1
    add8:	4240      	negs	r0, r0
    adda:	e7b1      	b.n	ad40 <__register_exitproc+0x4c>
    addc:	200004a0 	.word	0x200004a0
    ade0:	0000e3e8 	.word	0x0000e3e8
    ade4:	00000000 	.word	0x00000000

0000ade8 <register_fini>:
    ade8:	4b03      	ldr	r3, [pc, #12]	; (adf8 <register_fini+0x10>)
    adea:	b510      	push	{r4, lr}
    adec:	2b00      	cmp	r3, #0
    adee:	d002      	beq.n	adf6 <register_fini+0xe>
    adf0:	4802      	ldr	r0, [pc, #8]	; (adfc <register_fini+0x14>)
    adf2:	f000 f805 	bl	ae00 <atexit>
    adf6:	bd10      	pop	{r4, pc}
    adf8:	00000000 	.word	0x00000000
    adfc:	0000c171 	.word	0x0000c171

0000ae00 <atexit>:
    ae00:	b510      	push	{r4, lr}
    ae02:	0001      	movs	r1, r0
    ae04:	2300      	movs	r3, #0
    ae06:	2200      	movs	r2, #0
    ae08:	2000      	movs	r0, #0
    ae0a:	f7ff ff73 	bl	acf4 <__register_exitproc>
    ae0e:	bd10      	pop	{r4, pc}

0000ae10 <quorem>:
    ae10:	b5f0      	push	{r4, r5, r6, r7, lr}
    ae12:	4645      	mov	r5, r8
    ae14:	4680      	mov	r8, r0
    ae16:	46de      	mov	lr, fp
    ae18:	4657      	mov	r7, sl
    ae1a:	464e      	mov	r6, r9
    ae1c:	4642      	mov	r2, r8
    ae1e:	b5e0      	push	{r5, r6, r7, lr}
    ae20:	690c      	ldr	r4, [r1, #16]
    ae22:	6912      	ldr	r2, [r2, #16]
    ae24:	b085      	sub	sp, #20
    ae26:	000b      	movs	r3, r1
    ae28:	9102      	str	r1, [sp, #8]
    ae2a:	2000      	movs	r0, #0
    ae2c:	4294      	cmp	r4, r2
    ae2e:	dd00      	ble.n	ae32 <quorem+0x22>
    ae30:	e090      	b.n	af54 <quorem+0x144>
    ae32:	2214      	movs	r2, #20
    ae34:	4694      	mov	ip, r2
    ae36:	4463      	add	r3, ip
    ae38:	4699      	mov	r9, r3
    ae3a:	464a      	mov	r2, r9
    ae3c:	3c01      	subs	r4, #1
    ae3e:	00a3      	lsls	r3, r4, #2
    ae40:	18d6      	adds	r6, r2, r3
    ae42:	2214      	movs	r2, #20
    ae44:	4442      	add	r2, r8
    ae46:	4693      	mov	fp, r2
    ae48:	449b      	add	fp, r3
    ae4a:	6833      	ldr	r3, [r6, #0]
    ae4c:	0015      	movs	r5, r2
    ae4e:	1c59      	adds	r1, r3, #1
    ae50:	465b      	mov	r3, fp
    ae52:	6818      	ldr	r0, [r3, #0]
    ae54:	9201      	str	r2, [sp, #4]
    ae56:	f7fb fb57 	bl	6508 <__udivsi3>
    ae5a:	1e03      	subs	r3, r0, #0
    ae5c:	9000      	str	r0, [sp, #0]
    ae5e:	d042      	beq.n	aee6 <quorem+0xd6>
    ae60:	0029      	movs	r1, r5
    ae62:	2700      	movs	r7, #0
    ae64:	464d      	mov	r5, r9
    ae66:	2000      	movs	r0, #0
    ae68:	46b1      	mov	r9, r6
    ae6a:	46a2      	mov	sl, r4
    ae6c:	003e      	movs	r6, r7
    ae6e:	0004      	movs	r4, r0
    ae70:	469c      	mov	ip, r3
    ae72:	002f      	movs	r7, r5
    ae74:	0008      	movs	r0, r1
    ae76:	9503      	str	r5, [sp, #12]
    ae78:	4663      	mov	r3, ip
    ae7a:	cf04      	ldmia	r7!, {r2}
    ae7c:	0415      	lsls	r5, r2, #16
    ae7e:	0c2d      	lsrs	r5, r5, #16
    ae80:	435d      	muls	r5, r3
    ae82:	0c12      	lsrs	r2, r2, #16
    ae84:	435a      	muls	r2, r3
    ae86:	19ad      	adds	r5, r5, r6
    ae88:	0c2b      	lsrs	r3, r5, #16
    ae8a:	18d2      	adds	r2, r2, r3
    ae8c:	6803      	ldr	r3, [r0, #0]
    ae8e:	042d      	lsls	r5, r5, #16
    ae90:	0419      	lsls	r1, r3, #16
    ae92:	0c09      	lsrs	r1, r1, #16
    ae94:	1909      	adds	r1, r1, r4
    ae96:	0c16      	lsrs	r6, r2, #16
    ae98:	0c2d      	lsrs	r5, r5, #16
    ae9a:	0412      	lsls	r2, r2, #16
    ae9c:	1b49      	subs	r1, r1, r5
    ae9e:	0c12      	lsrs	r2, r2, #16
    aea0:	0c1b      	lsrs	r3, r3, #16
    aea2:	1a9b      	subs	r3, r3, r2
    aea4:	140a      	asrs	r2, r1, #16
    aea6:	189b      	adds	r3, r3, r2
    aea8:	0409      	lsls	r1, r1, #16
    aeaa:	141c      	asrs	r4, r3, #16
    aeac:	0c09      	lsrs	r1, r1, #16
    aeae:	041b      	lsls	r3, r3, #16
    aeb0:	4319      	orrs	r1, r3
    aeb2:	c002      	stmia	r0!, {r1}
    aeb4:	45b9      	cmp	r9, r7
    aeb6:	d2df      	bcs.n	ae78 <quorem+0x68>
    aeb8:	9b03      	ldr	r3, [sp, #12]
    aeba:	464e      	mov	r6, r9
    aebc:	4699      	mov	r9, r3
    aebe:	465b      	mov	r3, fp
    aec0:	681b      	ldr	r3, [r3, #0]
    aec2:	4654      	mov	r4, sl
    aec4:	2b00      	cmp	r3, #0
    aec6:	d10e      	bne.n	aee6 <quorem+0xd6>
    aec8:	465b      	mov	r3, fp
    aeca:	9a01      	ldr	r2, [sp, #4]
    aecc:	3b04      	subs	r3, #4
    aece:	429a      	cmp	r2, r3
    aed0:	d304      	bcc.n	aedc <quorem+0xcc>
    aed2:	e006      	b.n	aee2 <quorem+0xd2>
    aed4:	3b04      	subs	r3, #4
    aed6:	3c01      	subs	r4, #1
    aed8:	429a      	cmp	r2, r3
    aeda:	d202      	bcs.n	aee2 <quorem+0xd2>
    aedc:	6819      	ldr	r1, [r3, #0]
    aede:	2900      	cmp	r1, #0
    aee0:	d0f8      	beq.n	aed4 <quorem+0xc4>
    aee2:	4643      	mov	r3, r8
    aee4:	611c      	str	r4, [r3, #16]
    aee6:	9902      	ldr	r1, [sp, #8]
    aee8:	4640      	mov	r0, r8
    aeea:	f002 fa47 	bl	d37c <__mcmp>
    aeee:	2800      	cmp	r0, #0
    aef0:	db2f      	blt.n	af52 <quorem+0x142>
    aef2:	464f      	mov	r7, r9
    aef4:	2000      	movs	r0, #0
    aef6:	9b00      	ldr	r3, [sp, #0]
    aef8:	9d01      	ldr	r5, [sp, #4]
    aefa:	3301      	adds	r3, #1
    aefc:	9300      	str	r3, [sp, #0]
    aefe:	682b      	ldr	r3, [r5, #0]
    af00:	cf02      	ldmia	r7!, {r1}
    af02:	041a      	lsls	r2, r3, #16
    af04:	0c12      	lsrs	r2, r2, #16
    af06:	1810      	adds	r0, r2, r0
    af08:	040a      	lsls	r2, r1, #16
    af0a:	0c12      	lsrs	r2, r2, #16
    af0c:	1a82      	subs	r2, r0, r2
    af0e:	0c09      	lsrs	r1, r1, #16
    af10:	0c1b      	lsrs	r3, r3, #16
    af12:	1a5b      	subs	r3, r3, r1
    af14:	1411      	asrs	r1, r2, #16
    af16:	185b      	adds	r3, r3, r1
    af18:	0412      	lsls	r2, r2, #16
    af1a:	1418      	asrs	r0, r3, #16
    af1c:	0c12      	lsrs	r2, r2, #16
    af1e:	041b      	lsls	r3, r3, #16
    af20:	4313      	orrs	r3, r2
    af22:	c508      	stmia	r5!, {r3}
    af24:	42be      	cmp	r6, r7
    af26:	d2ea      	bcs.n	aefe <quorem+0xee>
    af28:	9901      	ldr	r1, [sp, #4]
    af2a:	00a3      	lsls	r3, r4, #2
    af2c:	468c      	mov	ip, r1
    af2e:	4463      	add	r3, ip
    af30:	681a      	ldr	r2, [r3, #0]
    af32:	2a00      	cmp	r2, #0
    af34:	d10d      	bne.n	af52 <quorem+0x142>
    af36:	3b04      	subs	r3, #4
    af38:	000a      	movs	r2, r1
    af3a:	4299      	cmp	r1, r3
    af3c:	d304      	bcc.n	af48 <quorem+0x138>
    af3e:	e006      	b.n	af4e <quorem+0x13e>
    af40:	3b04      	subs	r3, #4
    af42:	3c01      	subs	r4, #1
    af44:	429a      	cmp	r2, r3
    af46:	d202      	bcs.n	af4e <quorem+0x13e>
    af48:	6819      	ldr	r1, [r3, #0]
    af4a:	2900      	cmp	r1, #0
    af4c:	d0f8      	beq.n	af40 <quorem+0x130>
    af4e:	4643      	mov	r3, r8
    af50:	611c      	str	r4, [r3, #16]
    af52:	9800      	ldr	r0, [sp, #0]
    af54:	b005      	add	sp, #20
    af56:	bc3c      	pop	{r2, r3, r4, r5}
    af58:	4690      	mov	r8, r2
    af5a:	4699      	mov	r9, r3
    af5c:	46a2      	mov	sl, r4
    af5e:	46ab      	mov	fp, r5
    af60:	bdf0      	pop	{r4, r5, r6, r7, pc}
    af62:	46c0      	nop			; (mov r8, r8)

0000af64 <_dtoa_r>:
    af64:	b5f0      	push	{r4, r5, r6, r7, lr}
    af66:	4657      	mov	r7, sl
    af68:	464e      	mov	r6, r9
    af6a:	4645      	mov	r5, r8
    af6c:	46de      	mov	lr, fp
    af6e:	b5e0      	push	{r5, r6, r7, lr}
    af70:	6c01      	ldr	r1, [r0, #64]	; 0x40
    af72:	b099      	sub	sp, #100	; 0x64
    af74:	4682      	mov	sl, r0
    af76:	001d      	movs	r5, r3
    af78:	0016      	movs	r6, r2
    af7a:	001f      	movs	r7, r3
    af7c:	2900      	cmp	r1, #0
    af7e:	d009      	beq.n	af94 <_dtoa_r+0x30>
    af80:	2301      	movs	r3, #1
    af82:	6c42      	ldr	r2, [r0, #68]	; 0x44
    af84:	4093      	lsls	r3, r2
    af86:	604a      	str	r2, [r1, #4]
    af88:	608b      	str	r3, [r1, #8]
    af8a:	f001 ffeb 	bl	cf64 <_Bfree>
    af8e:	2300      	movs	r3, #0
    af90:	4652      	mov	r2, sl
    af92:	6413      	str	r3, [r2, #64]	; 0x40
    af94:	46b8      	mov	r8, r7
    af96:	2f00      	cmp	r7, #0
    af98:	db37      	blt.n	b00a <_dtoa_r+0xa6>
    af9a:	2300      	movs	r3, #0
    af9c:	9a25      	ldr	r2, [sp, #148]	; 0x94
    af9e:	6013      	str	r3, [r2, #0]
    afa0:	4642      	mov	r2, r8
    afa2:	4bd6      	ldr	r3, [pc, #856]	; (b2fc <_dtoa_r+0x398>)
    afa4:	401a      	ands	r2, r3
    afa6:	429a      	cmp	r2, r3
    afa8:	d018      	beq.n	afdc <_dtoa_r+0x78>
    afaa:	2200      	movs	r2, #0
    afac:	2300      	movs	r3, #0
    afae:	0030      	movs	r0, r6
    afb0:	0039      	movs	r1, r7
    afb2:	f7fb fc2f 	bl	6814 <__aeabi_dcmpeq>
    afb6:	2800      	cmp	r0, #0
    afb8:	d02f      	beq.n	b01a <_dtoa_r+0xb6>
    afba:	2301      	movs	r3, #1
    afbc:	9a24      	ldr	r2, [sp, #144]	; 0x90
    afbe:	6013      	str	r3, [r2, #0]
    afc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
    afc2:	2b00      	cmp	r3, #0
    afc4:	d100      	bne.n	afc8 <_dtoa_r+0x64>
    afc6:	e22a      	b.n	b41e <_dtoa_r+0x4ba>
    afc8:	48cd      	ldr	r0, [pc, #820]	; (b300 <_dtoa_r+0x39c>)
    afca:	6018      	str	r0, [r3, #0]
    afcc:	3801      	subs	r0, #1
    afce:	b019      	add	sp, #100	; 0x64
    afd0:	bc3c      	pop	{r2, r3, r4, r5}
    afd2:	4690      	mov	r8, r2
    afd4:	4699      	mov	r9, r3
    afd6:	46a2      	mov	sl, r4
    afd8:	46ab      	mov	fp, r5
    afda:	bdf0      	pop	{r4, r5, r6, r7, pc}
    afdc:	4bc9      	ldr	r3, [pc, #804]	; (b304 <_dtoa_r+0x3a0>)
    afde:	9a24      	ldr	r2, [sp, #144]	; 0x90
    afe0:	6013      	str	r3, [r2, #0]
    afe2:	2e00      	cmp	r6, #0
    afe4:	d10b      	bne.n	affe <_dtoa_r+0x9a>
    afe6:	4643      	mov	r3, r8
    afe8:	0318      	lsls	r0, r3, #12
    afea:	d108      	bne.n	affe <_dtoa_r+0x9a>
    afec:	9b26      	ldr	r3, [sp, #152]	; 0x98
    afee:	48c6      	ldr	r0, [pc, #792]	; (b308 <_dtoa_r+0x3a4>)
    aff0:	2b00      	cmp	r3, #0
    aff2:	d0ec      	beq.n	afce <_dtoa_r+0x6a>
    aff4:	0003      	movs	r3, r0
    aff6:	3308      	adds	r3, #8
    aff8:	9a26      	ldr	r2, [sp, #152]	; 0x98
    affa:	6013      	str	r3, [r2, #0]
    affc:	e7e7      	b.n	afce <_dtoa_r+0x6a>
    affe:	9b26      	ldr	r3, [sp, #152]	; 0x98
    b000:	48c2      	ldr	r0, [pc, #776]	; (b30c <_dtoa_r+0x3a8>)
    b002:	2b00      	cmp	r3, #0
    b004:	d0e3      	beq.n	afce <_dtoa_r+0x6a>
    b006:	1cc3      	adds	r3, r0, #3
    b008:	e7f6      	b.n	aff8 <_dtoa_r+0x94>
    b00a:	2301      	movs	r3, #1
    b00c:	9a25      	ldr	r2, [sp, #148]	; 0x94
    b00e:	0068      	lsls	r0, r5, #1
    b010:	6013      	str	r3, [r2, #0]
    b012:	0843      	lsrs	r3, r0, #1
    b014:	4698      	mov	r8, r3
    b016:	001f      	movs	r7, r3
    b018:	e7c2      	b.n	afa0 <_dtoa_r+0x3c>
    b01a:	ab16      	add	r3, sp, #88	; 0x58
    b01c:	9301      	str	r3, [sp, #4]
    b01e:	ab17      	add	r3, sp, #92	; 0x5c
    b020:	9300      	str	r3, [sp, #0]
    b022:	0032      	movs	r2, r6
    b024:	003b      	movs	r3, r7
    b026:	4650      	mov	r0, sl
    b028:	f002 fa5e 	bl	d4e8 <__d2b>
    b02c:	4643      	mov	r3, r8
    b02e:	4683      	mov	fp, r0
    b030:	0d1a      	lsrs	r2, r3, #20
    b032:	d100      	bne.n	b036 <_dtoa_r+0xd2>
    b034:	e1d6      	b.n	b3e4 <_dtoa_r+0x480>
    b036:	033b      	lsls	r3, r7, #12
    b038:	4cb5      	ldr	r4, [pc, #724]	; (b310 <_dtoa_r+0x3ac>)
    b03a:	0b1b      	lsrs	r3, r3, #12
    b03c:	431c      	orrs	r4, r3
    b03e:	4bb5      	ldr	r3, [pc, #724]	; (b314 <_dtoa_r+0x3b0>)
    b040:	0030      	movs	r0, r6
    b042:	4698      	mov	r8, r3
    b044:	9b16      	ldr	r3, [sp, #88]	; 0x58
    b046:	0021      	movs	r1, r4
    b048:	4699      	mov	r9, r3
    b04a:	2300      	movs	r3, #0
    b04c:	4490      	add	r8, r2
    b04e:	930f      	str	r3, [sp, #60]	; 0x3c
    b050:	2200      	movs	r2, #0
    b052:	4bb1      	ldr	r3, [pc, #708]	; (b318 <_dtoa_r+0x3b4>)
    b054:	f7fd fc58 	bl	8908 <__aeabi_dsub>
    b058:	4ab0      	ldr	r2, [pc, #704]	; (b31c <_dtoa_r+0x3b8>)
    b05a:	4bb1      	ldr	r3, [pc, #708]	; (b320 <_dtoa_r+0x3bc>)
    b05c:	f7fd f9d4 	bl	8408 <__aeabi_dmul>
    b060:	4ab0      	ldr	r2, [pc, #704]	; (b324 <_dtoa_r+0x3c0>)
    b062:	4bb1      	ldr	r3, [pc, #708]	; (b328 <_dtoa_r+0x3c4>)
    b064:	f7fc fa8c 	bl	7580 <__aeabi_dadd>
    b068:	0004      	movs	r4, r0
    b06a:	4640      	mov	r0, r8
    b06c:	000d      	movs	r5, r1
    b06e:	f7fd ffb5 	bl	8fdc <__aeabi_i2d>
    b072:	4aae      	ldr	r2, [pc, #696]	; (b32c <_dtoa_r+0x3c8>)
    b074:	4bae      	ldr	r3, [pc, #696]	; (b330 <_dtoa_r+0x3cc>)
    b076:	f7fd f9c7 	bl	8408 <__aeabi_dmul>
    b07a:	0002      	movs	r2, r0
    b07c:	000b      	movs	r3, r1
    b07e:	0020      	movs	r0, r4
    b080:	0029      	movs	r1, r5
    b082:	f7fc fa7d 	bl	7580 <__aeabi_dadd>
    b086:	0004      	movs	r4, r0
    b088:	000d      	movs	r5, r1
    b08a:	f7fd ff73 	bl	8f74 <__aeabi_d2iz>
    b08e:	2200      	movs	r2, #0
    b090:	9003      	str	r0, [sp, #12]
    b092:	2300      	movs	r3, #0
    b094:	0020      	movs	r0, r4
    b096:	0029      	movs	r1, r5
    b098:	f7fb fbc2 	bl	6820 <__aeabi_dcmplt>
    b09c:	2800      	cmp	r0, #0
    b09e:	d000      	beq.n	b0a2 <_dtoa_r+0x13e>
    b0a0:	e2b1      	b.n	b606 <_dtoa_r+0x6a2>
    b0a2:	2301      	movs	r3, #1
    b0a4:	9c03      	ldr	r4, [sp, #12]
    b0a6:	930c      	str	r3, [sp, #48]	; 0x30
    b0a8:	2c16      	cmp	r4, #22
    b0aa:	d810      	bhi.n	b0ce <_dtoa_r+0x16a>
    b0ac:	49a1      	ldr	r1, [pc, #644]	; (b334 <_dtoa_r+0x3d0>)
    b0ae:	00e3      	lsls	r3, r4, #3
    b0b0:	18c9      	adds	r1, r1, r3
    b0b2:	0032      	movs	r2, r6
    b0b4:	6808      	ldr	r0, [r1, #0]
    b0b6:	6849      	ldr	r1, [r1, #4]
    b0b8:	003b      	movs	r3, r7
    b0ba:	f7fb fbc5 	bl	6848 <__aeabi_dcmpgt>
    b0be:	2800      	cmp	r0, #0
    b0c0:	d100      	bne.n	b0c4 <_dtoa_r+0x160>
    b0c2:	e31d      	b.n	b700 <_dtoa_r+0x79c>
    b0c4:	0023      	movs	r3, r4
    b0c6:	3b01      	subs	r3, #1
    b0c8:	9303      	str	r3, [sp, #12]
    b0ca:	2300      	movs	r3, #0
    b0cc:	930c      	str	r3, [sp, #48]	; 0x30
    b0ce:	464b      	mov	r3, r9
    b0d0:	4642      	mov	r2, r8
    b0d2:	1a9a      	subs	r2, r3, r2
    b0d4:	2300      	movs	r3, #0
    b0d6:	9306      	str	r3, [sp, #24]
    b0d8:	0013      	movs	r3, r2
    b0da:	3b01      	subs	r3, #1
    b0dc:	9304      	str	r3, [sp, #16]
    b0de:	d500      	bpl.n	b0e2 <_dtoa_r+0x17e>
    b0e0:	e2a1      	b.n	b626 <_dtoa_r+0x6c2>
    b0e2:	9b03      	ldr	r3, [sp, #12]
    b0e4:	2b00      	cmp	r3, #0
    b0e6:	da00      	bge.n	b0ea <_dtoa_r+0x186>
    b0e8:	e284      	b.n	b5f4 <_dtoa_r+0x690>
    b0ea:	469c      	mov	ip, r3
    b0ec:	930d      	str	r3, [sp, #52]	; 0x34
    b0ee:	2300      	movs	r3, #0
    b0f0:	9a04      	ldr	r2, [sp, #16]
    b0f2:	4699      	mov	r9, r3
    b0f4:	0011      	movs	r1, r2
    b0f6:	4461      	add	r1, ip
    b0f8:	9104      	str	r1, [sp, #16]
    b0fa:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b0fc:	2b09      	cmp	r3, #9
    b0fe:	d900      	bls.n	b102 <_dtoa_r+0x19e>
    b100:	e18f      	b.n	b422 <_dtoa_r+0x4be>
    b102:	2401      	movs	r4, #1
    b104:	2b05      	cmp	r3, #5
    b106:	dd02      	ble.n	b10e <_dtoa_r+0x1aa>
    b108:	2400      	movs	r4, #0
    b10a:	3b04      	subs	r3, #4
    b10c:	9322      	str	r3, [sp, #136]	; 0x88
    b10e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b110:	2b03      	cmp	r3, #3
    b112:	d101      	bne.n	b118 <_dtoa_r+0x1b4>
    b114:	f000 fcce 	bl	bab4 <_dtoa_r+0xb50>
    b118:	dc01      	bgt.n	b11e <_dtoa_r+0x1ba>
    b11a:	f000 fc92 	bl	ba42 <_dtoa_r+0xade>
    b11e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b120:	2b04      	cmp	r3, #4
    b122:	d101      	bne.n	b128 <_dtoa_r+0x1c4>
    b124:	f000 fc40 	bl	b9a8 <_dtoa_r+0xa44>
    b128:	2301      	movs	r3, #1
    b12a:	930b      	str	r3, [sp, #44]	; 0x2c
    b12c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b12e:	2b05      	cmp	r3, #5
    b130:	d001      	beq.n	b136 <_dtoa_r+0x1d2>
    b132:	f000 fc8b 	bl	ba4c <_dtoa_r+0xae8>
    b136:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    b138:	9b03      	ldr	r3, [sp, #12]
    b13a:	4694      	mov	ip, r2
    b13c:	4463      	add	r3, ip
    b13e:	930e      	str	r3, [sp, #56]	; 0x38
    b140:	3301      	adds	r3, #1
    b142:	9307      	str	r3, [sp, #28]
    b144:	1e1d      	subs	r5, r3, #0
    b146:	dc01      	bgt.n	b14c <_dtoa_r+0x1e8>
    b148:	f000 fd49 	bl	bbde <_dtoa_r+0xc7a>
    b14c:	9b07      	ldr	r3, [sp, #28]
    b14e:	4698      	mov	r8, r3
    b150:	2300      	movs	r3, #0
    b152:	4652      	mov	r2, sl
    b154:	2100      	movs	r1, #0
    b156:	6453      	str	r3, [r2, #68]	; 0x44
    b158:	2d17      	cmp	r5, #23
    b15a:	d90a      	bls.n	b172 <_dtoa_r+0x20e>
    b15c:	2201      	movs	r2, #1
    b15e:	3304      	adds	r3, #4
    b160:	005b      	lsls	r3, r3, #1
    b162:	0018      	movs	r0, r3
    b164:	3014      	adds	r0, #20
    b166:	0011      	movs	r1, r2
    b168:	3201      	adds	r2, #1
    b16a:	4285      	cmp	r5, r0
    b16c:	d2f8      	bcs.n	b160 <_dtoa_r+0x1fc>
    b16e:	4653      	mov	r3, sl
    b170:	6459      	str	r1, [r3, #68]	; 0x44
    b172:	4650      	mov	r0, sl
    b174:	f001 fece 	bl	cf14 <_Balloc>
    b178:	4653      	mov	r3, sl
    b17a:	6418      	str	r0, [r3, #64]	; 0x40
    b17c:	4643      	mov	r3, r8
    b17e:	900a      	str	r0, [sp, #40]	; 0x28
    b180:	2b0e      	cmp	r3, #14
    b182:	d900      	bls.n	b186 <_dtoa_r+0x222>
    b184:	e161      	b.n	b44a <_dtoa_r+0x4e6>
    b186:	2c00      	cmp	r4, #0
    b188:	d100      	bne.n	b18c <_dtoa_r+0x228>
    b18a:	e15e      	b.n	b44a <_dtoa_r+0x4e6>
    b18c:	9610      	str	r6, [sp, #64]	; 0x40
    b18e:	9711      	str	r7, [sp, #68]	; 0x44
    b190:	9e03      	ldr	r6, [sp, #12]
    b192:	2e00      	cmp	r6, #0
    b194:	dc01      	bgt.n	b19a <_dtoa_r+0x236>
    b196:	f000 fd25 	bl	bbe4 <_dtoa_r+0xc80>
    b19a:	0032      	movs	r2, r6
    b19c:	210f      	movs	r1, #15
    b19e:	4b65      	ldr	r3, [pc, #404]	; (b334 <_dtoa_r+0x3d0>)
    b1a0:	400a      	ands	r2, r1
    b1a2:	00d2      	lsls	r2, r2, #3
    b1a4:	189b      	adds	r3, r3, r2
    b1a6:	1136      	asrs	r6, r6, #4
    b1a8:	681c      	ldr	r4, [r3, #0]
    b1aa:	685d      	ldr	r5, [r3, #4]
    b1ac:	06f3      	lsls	r3, r6, #27
    b1ae:	d401      	bmi.n	b1b4 <_dtoa_r+0x250>
    b1b0:	f000 fcca 	bl	bb48 <_dtoa_r+0xbe4>
    b1b4:	4b60      	ldr	r3, [pc, #384]	; (b338 <_dtoa_r+0x3d4>)
    b1b6:	400e      	ands	r6, r1
    b1b8:	6a1a      	ldr	r2, [r3, #32]
    b1ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b1bc:	9810      	ldr	r0, [sp, #64]	; 0x40
    b1be:	9911      	ldr	r1, [sp, #68]	; 0x44
    b1c0:	f7fc fcee 	bl	7ba0 <__aeabi_ddiv>
    b1c4:	2303      	movs	r3, #3
    b1c6:	4698      	mov	r8, r3
    b1c8:	9008      	str	r0, [sp, #32]
    b1ca:	9109      	str	r1, [sp, #36]	; 0x24
    b1cc:	2e00      	cmp	r6, #0
    b1ce:	d011      	beq.n	b1f4 <_dtoa_r+0x290>
    b1d0:	4f59      	ldr	r7, [pc, #356]	; (b338 <_dtoa_r+0x3d4>)
    b1d2:	2301      	movs	r3, #1
    b1d4:	4233      	tst	r3, r6
    b1d6:	d009      	beq.n	b1ec <_dtoa_r+0x288>
    b1d8:	469c      	mov	ip, r3
    b1da:	683a      	ldr	r2, [r7, #0]
    b1dc:	687b      	ldr	r3, [r7, #4]
    b1de:	0020      	movs	r0, r4
    b1e0:	0029      	movs	r1, r5
    b1e2:	44e0      	add	r8, ip
    b1e4:	f7fd f910 	bl	8408 <__aeabi_dmul>
    b1e8:	0004      	movs	r4, r0
    b1ea:	000d      	movs	r5, r1
    b1ec:	1076      	asrs	r6, r6, #1
    b1ee:	3708      	adds	r7, #8
    b1f0:	2e00      	cmp	r6, #0
    b1f2:	d1ee      	bne.n	b1d2 <_dtoa_r+0x26e>
    b1f4:	0022      	movs	r2, r4
    b1f6:	9808      	ldr	r0, [sp, #32]
    b1f8:	9909      	ldr	r1, [sp, #36]	; 0x24
    b1fa:	002b      	movs	r3, r5
    b1fc:	f7fc fcd0 	bl	7ba0 <__aeabi_ddiv>
    b200:	0006      	movs	r6, r0
    b202:	000f      	movs	r7, r1
    b204:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b206:	2b00      	cmp	r3, #0
    b208:	d009      	beq.n	b21e <_dtoa_r+0x2ba>
    b20a:	2200      	movs	r2, #0
    b20c:	4b40      	ldr	r3, [pc, #256]	; (b310 <_dtoa_r+0x3ac>)
    b20e:	0030      	movs	r0, r6
    b210:	0039      	movs	r1, r7
    b212:	f7fb fb05 	bl	6820 <__aeabi_dcmplt>
    b216:	2800      	cmp	r0, #0
    b218:	d001      	beq.n	b21e <_dtoa_r+0x2ba>
    b21a:	f000 fdc2 	bl	bda2 <_dtoa_r+0xe3e>
    b21e:	4640      	mov	r0, r8
    b220:	f7fd fedc 	bl	8fdc <__aeabi_i2d>
    b224:	0032      	movs	r2, r6
    b226:	003b      	movs	r3, r7
    b228:	f7fd f8ee 	bl	8408 <__aeabi_dmul>
    b22c:	2200      	movs	r2, #0
    b22e:	4b43      	ldr	r3, [pc, #268]	; (b33c <_dtoa_r+0x3d8>)
    b230:	f7fc f9a6 	bl	7580 <__aeabi_dadd>
    b234:	4a42      	ldr	r2, [pc, #264]	; (b340 <_dtoa_r+0x3dc>)
    b236:	000b      	movs	r3, r1
    b238:	4694      	mov	ip, r2
    b23a:	4463      	add	r3, ip
    b23c:	9008      	str	r0, [sp, #32]
    b23e:	9109      	str	r1, [sp, #36]	; 0x24
    b240:	9309      	str	r3, [sp, #36]	; 0x24
    b242:	9b07      	ldr	r3, [sp, #28]
    b244:	2b00      	cmp	r3, #0
    b246:	d101      	bne.n	b24c <_dtoa_r+0x2e8>
    b248:	f000 fc50 	bl	baec <_dtoa_r+0xb88>
    b24c:	9b03      	ldr	r3, [sp, #12]
    b24e:	9313      	str	r3, [sp, #76]	; 0x4c
    b250:	9b07      	ldr	r3, [sp, #28]
    b252:	9312      	str	r3, [sp, #72]	; 0x48
    b254:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b256:	2b00      	cmp	r3, #0
    b258:	d101      	bne.n	b25e <_dtoa_r+0x2fa>
    b25a:	f000 fd1d 	bl	bc98 <_dtoa_r+0xd34>
    b25e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b260:	2000      	movs	r0, #0
    b262:	1e5a      	subs	r2, r3, #1
    b264:	4b33      	ldr	r3, [pc, #204]	; (b334 <_dtoa_r+0x3d0>)
    b266:	00d2      	lsls	r2, r2, #3
    b268:	189b      	adds	r3, r3, r2
    b26a:	681a      	ldr	r2, [r3, #0]
    b26c:	685b      	ldr	r3, [r3, #4]
    b26e:	4935      	ldr	r1, [pc, #212]	; (b344 <_dtoa_r+0x3e0>)
    b270:	f7fc fc96 	bl	7ba0 <__aeabi_ddiv>
    b274:	9a08      	ldr	r2, [sp, #32]
    b276:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b278:	f7fd fb46 	bl	8908 <__aeabi_dsub>
    b27c:	9008      	str	r0, [sp, #32]
    b27e:	9109      	str	r1, [sp, #36]	; 0x24
    b280:	0039      	movs	r1, r7
    b282:	0030      	movs	r0, r6
    b284:	f7fd fe76 	bl	8f74 <__aeabi_d2iz>
    b288:	0004      	movs	r4, r0
    b28a:	f7fd fea7 	bl	8fdc <__aeabi_i2d>
    b28e:	0002      	movs	r2, r0
    b290:	000b      	movs	r3, r1
    b292:	0030      	movs	r0, r6
    b294:	0039      	movs	r1, r7
    b296:	f7fd fb37 	bl	8908 <__aeabi_dsub>
    b29a:	0005      	movs	r5, r0
    b29c:	000e      	movs	r6, r1
    b29e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b2a0:	3430      	adds	r4, #48	; 0x30
    b2a2:	1c51      	adds	r1, r2, #1
    b2a4:	b2e7      	uxtb	r7, r4
    b2a6:	9114      	str	r1, [sp, #80]	; 0x50
    b2a8:	7017      	strb	r7, [r2, #0]
    b2aa:	0033      	movs	r3, r6
    b2ac:	9808      	ldr	r0, [sp, #32]
    b2ae:	9909      	ldr	r1, [sp, #36]	; 0x24
    b2b0:	002a      	movs	r2, r5
    b2b2:	f7fb fac9 	bl	6848 <__aeabi_dcmpgt>
    b2b6:	2800      	cmp	r0, #0
    b2b8:	d001      	beq.n	b2be <_dtoa_r+0x35a>
    b2ba:	f000 fdfe 	bl	beba <_dtoa_r+0xf56>
    b2be:	002a      	movs	r2, r5
    b2c0:	0033      	movs	r3, r6
    b2c2:	2000      	movs	r0, #0
    b2c4:	4912      	ldr	r1, [pc, #72]	; (b310 <_dtoa_r+0x3ac>)
    b2c6:	f7fd fb1f 	bl	8908 <__aeabi_dsub>
    b2ca:	0002      	movs	r2, r0
    b2cc:	000b      	movs	r3, r1
    b2ce:	9808      	ldr	r0, [sp, #32]
    b2d0:	9909      	ldr	r1, [sp, #36]	; 0x24
    b2d2:	f7fb fab9 	bl	6848 <__aeabi_dcmpgt>
    b2d6:	2800      	cmp	r0, #0
    b2d8:	d001      	beq.n	b2de <_dtoa_r+0x37a>
    b2da:	f000 fde7 	bl	beac <_dtoa_r+0xf48>
    b2de:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b2e0:	2b01      	cmp	r3, #1
    b2e2:	d101      	bne.n	b2e8 <_dtoa_r+0x384>
    b2e4:	f000 fc78 	bl	bbd8 <_dtoa_r+0xc74>
    b2e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b2ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b2ec:	4694      	mov	ip, r2
    b2ee:	4463      	add	r3, ip
    b2f0:	4698      	mov	r8, r3
    b2f2:	464b      	mov	r3, r9
    b2f4:	9312      	str	r3, [sp, #72]	; 0x48
    b2f6:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b2f8:	4699      	mov	r9, r3
    b2fa:	e038      	b.n	b36e <_dtoa_r+0x40a>
    b2fc:	7ff00000 	.word	0x7ff00000
    b300:	0000e595 	.word	0x0000e595
    b304:	0000270f 	.word	0x0000270f
    b308:	0000e5b8 	.word	0x0000e5b8
    b30c:	0000e5c4 	.word	0x0000e5c4
    b310:	3ff00000 	.word	0x3ff00000
    b314:	fffffc01 	.word	0xfffffc01
    b318:	3ff80000 	.word	0x3ff80000
    b31c:	636f4361 	.word	0x636f4361
    b320:	3fd287a7 	.word	0x3fd287a7
    b324:	8b60c8b3 	.word	0x8b60c8b3
    b328:	3fc68a28 	.word	0x3fc68a28
    b32c:	509f79fb 	.word	0x509f79fb
    b330:	3fd34413 	.word	0x3fd34413
    b334:	0000e5f0 	.word	0x0000e5f0
    b338:	0000e5c8 	.word	0x0000e5c8
    b33c:	401c0000 	.word	0x401c0000
    b340:	fcc00000 	.word	0xfcc00000
    b344:	3fe00000 	.word	0x3fe00000
    b348:	002a      	movs	r2, r5
    b34a:	0033      	movs	r3, r6
    b34c:	2000      	movs	r0, #0
    b34e:	49b9      	ldr	r1, [pc, #740]	; (b634 <_dtoa_r+0x6d0>)
    b350:	f7fd fada 	bl	8908 <__aeabi_dsub>
    b354:	9a08      	ldr	r2, [sp, #32]
    b356:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b358:	f7fb fa62 	bl	6820 <__aeabi_dcmplt>
    b35c:	2800      	cmp	r0, #0
    b35e:	d001      	beq.n	b364 <_dtoa_r+0x400>
    b360:	f000 fd74 	bl	be4c <_dtoa_r+0xee8>
    b364:	46a1      	mov	r9, r4
    b366:	4544      	cmp	r4, r8
    b368:	d101      	bne.n	b36e <_dtoa_r+0x40a>
    b36a:	f000 fc33 	bl	bbd4 <_dtoa_r+0xc70>
    b36e:	9808      	ldr	r0, [sp, #32]
    b370:	9909      	ldr	r1, [sp, #36]	; 0x24
    b372:	2200      	movs	r2, #0
    b374:	4bb0      	ldr	r3, [pc, #704]	; (b638 <_dtoa_r+0x6d4>)
    b376:	f7fd f847 	bl	8408 <__aeabi_dmul>
    b37a:	2200      	movs	r2, #0
    b37c:	4bae      	ldr	r3, [pc, #696]	; (b638 <_dtoa_r+0x6d4>)
    b37e:	9008      	str	r0, [sp, #32]
    b380:	9109      	str	r1, [sp, #36]	; 0x24
    b382:	0028      	movs	r0, r5
    b384:	0031      	movs	r1, r6
    b386:	f7fd f83f 	bl	8408 <__aeabi_dmul>
    b38a:	000d      	movs	r5, r1
    b38c:	0004      	movs	r4, r0
    b38e:	f7fd fdf1 	bl	8f74 <__aeabi_d2iz>
    b392:	0007      	movs	r7, r0
    b394:	f7fd fe22 	bl	8fdc <__aeabi_i2d>
    b398:	0002      	movs	r2, r0
    b39a:	000b      	movs	r3, r1
    b39c:	0020      	movs	r0, r4
    b39e:	0029      	movs	r1, r5
    b3a0:	f7fd fab2 	bl	8908 <__aeabi_dsub>
    b3a4:	464b      	mov	r3, r9
    b3a6:	3730      	adds	r7, #48	; 0x30
    b3a8:	b2ff      	uxtb	r7, r7
    b3aa:	1c5c      	adds	r4, r3, #1
    b3ac:	701f      	strb	r7, [r3, #0]
    b3ae:	9a08      	ldr	r2, [sp, #32]
    b3b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b3b2:	0005      	movs	r5, r0
    b3b4:	000e      	movs	r6, r1
    b3b6:	f7fb fa33 	bl	6820 <__aeabi_dcmplt>
    b3ba:	2800      	cmp	r0, #0
    b3bc:	d0c4      	beq.n	b348 <_dtoa_r+0x3e4>
    b3be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b3c0:	9303      	str	r3, [sp, #12]
    b3c2:	4659      	mov	r1, fp
    b3c4:	4650      	mov	r0, sl
    b3c6:	f001 fdcd 	bl	cf64 <_Bfree>
    b3ca:	2300      	movs	r3, #0
    b3cc:	7023      	strb	r3, [r4, #0]
    b3ce:	9b03      	ldr	r3, [sp, #12]
    b3d0:	9a24      	ldr	r2, [sp, #144]	; 0x90
    b3d2:	3301      	adds	r3, #1
    b3d4:	6013      	str	r3, [r2, #0]
    b3d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
    b3d8:	2b00      	cmp	r3, #0
    b3da:	d100      	bne.n	b3de <_dtoa_r+0x47a>
    b3dc:	e3a8      	b.n	bb30 <_dtoa_r+0xbcc>
    b3de:	601c      	str	r4, [r3, #0]
    b3e0:	980a      	ldr	r0, [sp, #40]	; 0x28
    b3e2:	e5f4      	b.n	afce <_dtoa_r+0x6a>
    b3e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
    b3e6:	4699      	mov	r9, r3
    b3e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    b3ea:	444b      	add	r3, r9
    b3ec:	001c      	movs	r4, r3
    b3ee:	4b93      	ldr	r3, [pc, #588]	; (b63c <_dtoa_r+0x6d8>)
    b3f0:	18e3      	adds	r3, r4, r3
    b3f2:	2b20      	cmp	r3, #32
    b3f4:	dc00      	bgt.n	b3f8 <_dtoa_r+0x494>
    b3f6:	e17e      	b.n	b6f6 <_dtoa_r+0x792>
    b3f8:	0031      	movs	r1, r6
    b3fa:	4a91      	ldr	r2, [pc, #580]	; (b640 <_dtoa_r+0x6dc>)
    b3fc:	4640      	mov	r0, r8
    b3fe:	18a2      	adds	r2, r4, r2
    b400:	40d1      	lsrs	r1, r2
    b402:	000a      	movs	r2, r1
    b404:	2140      	movs	r1, #64	; 0x40
    b406:	1acb      	subs	r3, r1, r3
    b408:	4098      	lsls	r0, r3
    b40a:	4310      	orrs	r0, r2
    b40c:	f7fd fe28 	bl	9060 <__aeabi_ui2d>
    b410:	1e63      	subs	r3, r4, #1
    b412:	4698      	mov	r8, r3
    b414:	2301      	movs	r3, #1
    b416:	4d8b      	ldr	r5, [pc, #556]	; (b644 <_dtoa_r+0x6e0>)
    b418:	930f      	str	r3, [sp, #60]	; 0x3c
    b41a:	1949      	adds	r1, r1, r5
    b41c:	e618      	b.n	b050 <_dtoa_r+0xec>
    b41e:	488a      	ldr	r0, [pc, #552]	; (b648 <_dtoa_r+0x6e4>)
    b420:	e5d5      	b.n	afce <_dtoa_r+0x6a>
    b422:	2300      	movs	r3, #0
    b424:	4652      	mov	r2, sl
    b426:	2100      	movs	r1, #0
    b428:	6453      	str	r3, [r2, #68]	; 0x44
    b42a:	4650      	mov	r0, sl
    b42c:	f001 fd72 	bl	cf14 <_Balloc>
    b430:	4653      	mov	r3, sl
    b432:	6418      	str	r0, [r3, #64]	; 0x40
    b434:	2301      	movs	r3, #1
    b436:	425b      	negs	r3, r3
    b438:	9307      	str	r3, [sp, #28]
    b43a:	930e      	str	r3, [sp, #56]	; 0x38
    b43c:	3302      	adds	r3, #2
    b43e:	2200      	movs	r2, #0
    b440:	930b      	str	r3, [sp, #44]	; 0x2c
    b442:	2300      	movs	r3, #0
    b444:	900a      	str	r0, [sp, #40]	; 0x28
    b446:	9223      	str	r2, [sp, #140]	; 0x8c
    b448:	9322      	str	r3, [sp, #136]	; 0x88
    b44a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    b44c:	2b00      	cmp	r3, #0
    b44e:	da00      	bge.n	b452 <_dtoa_r+0x4ee>
    b450:	e0ab      	b.n	b5aa <_dtoa_r+0x646>
    b452:	9a03      	ldr	r2, [sp, #12]
    b454:	2a0e      	cmp	r2, #14
    b456:	dd00      	ble.n	b45a <_dtoa_r+0x4f6>
    b458:	e0a7      	b.n	b5aa <_dtoa_r+0x646>
    b45a:	4b7c      	ldr	r3, [pc, #496]	; (b64c <_dtoa_r+0x6e8>)
    b45c:	00d2      	lsls	r2, r2, #3
    b45e:	189b      	adds	r3, r3, r2
    b460:	685c      	ldr	r4, [r3, #4]
    b462:	681b      	ldr	r3, [r3, #0]
    b464:	9304      	str	r3, [sp, #16]
    b466:	9405      	str	r4, [sp, #20]
    b468:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    b46a:	2b00      	cmp	r3, #0
    b46c:	da00      	bge.n	b470 <_dtoa_r+0x50c>
    b46e:	e2a7      	b.n	b9c0 <_dtoa_r+0xa5c>
    b470:	9c04      	ldr	r4, [sp, #16]
    b472:	9d05      	ldr	r5, [sp, #20]
    b474:	0030      	movs	r0, r6
    b476:	0022      	movs	r2, r4
    b478:	002b      	movs	r3, r5
    b47a:	0039      	movs	r1, r7
    b47c:	f7fc fb90 	bl	7ba0 <__aeabi_ddiv>
    b480:	f7fd fd78 	bl	8f74 <__aeabi_d2iz>
    b484:	4680      	mov	r8, r0
    b486:	f7fd fda9 	bl	8fdc <__aeabi_i2d>
    b48a:	0022      	movs	r2, r4
    b48c:	002b      	movs	r3, r5
    b48e:	f7fc ffbb 	bl	8408 <__aeabi_dmul>
    b492:	0002      	movs	r2, r0
    b494:	000b      	movs	r3, r1
    b496:	0030      	movs	r0, r6
    b498:	0039      	movs	r1, r7
    b49a:	f7fd fa35 	bl	8908 <__aeabi_dsub>
    b49e:	4643      	mov	r3, r8
    b4a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b4a2:	3330      	adds	r3, #48	; 0x30
    b4a4:	7013      	strb	r3, [r2, #0]
    b4a6:	9b07      	ldr	r3, [sp, #28]
    b4a8:	0006      	movs	r6, r0
    b4aa:	000f      	movs	r7, r1
    b4ac:	1c54      	adds	r4, r2, #1
    b4ae:	2b01      	cmp	r3, #1
    b4b0:	d04e      	beq.n	b550 <_dtoa_r+0x5ec>
    b4b2:	2200      	movs	r2, #0
    b4b4:	4b60      	ldr	r3, [pc, #384]	; (b638 <_dtoa_r+0x6d4>)
    b4b6:	f7fc ffa7 	bl	8408 <__aeabi_dmul>
    b4ba:	2200      	movs	r2, #0
    b4bc:	2300      	movs	r3, #0
    b4be:	0006      	movs	r6, r0
    b4c0:	000f      	movs	r7, r1
    b4c2:	f7fb f9a7 	bl	6814 <__aeabi_dcmpeq>
    b4c6:	2800      	cmp	r0, #0
    b4c8:	d000      	beq.n	b4cc <_dtoa_r+0x568>
    b4ca:	e77a      	b.n	b3c2 <_dtoa_r+0x45e>
    b4cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b4ce:	9a07      	ldr	r2, [sp, #28]
    b4d0:	1c9d      	adds	r5, r3, #2
    b4d2:	469c      	mov	ip, r3
    b4d4:	465b      	mov	r3, fp
    b4d6:	9306      	str	r3, [sp, #24]
    b4d8:	4653      	mov	r3, sl
    b4da:	4462      	add	r2, ip
    b4dc:	46aa      	mov	sl, r5
    b4de:	9c04      	ldr	r4, [sp, #16]
    b4e0:	9d05      	ldr	r5, [sp, #20]
    b4e2:	4691      	mov	r9, r2
    b4e4:	9307      	str	r3, [sp, #28]
    b4e6:	e00f      	b.n	b508 <_dtoa_r+0x5a4>
    b4e8:	2200      	movs	r2, #0
    b4ea:	4b53      	ldr	r3, [pc, #332]	; (b638 <_dtoa_r+0x6d4>)
    b4ec:	f7fc ff8c 	bl	8408 <__aeabi_dmul>
    b4f0:	2301      	movs	r3, #1
    b4f2:	469c      	mov	ip, r3
    b4f4:	2200      	movs	r2, #0
    b4f6:	2300      	movs	r3, #0
    b4f8:	0006      	movs	r6, r0
    b4fa:	000f      	movs	r7, r1
    b4fc:	44e2      	add	sl, ip
    b4fe:	f7fb f989 	bl	6814 <__aeabi_dcmpeq>
    b502:	2800      	cmp	r0, #0
    b504:	d000      	beq.n	b508 <_dtoa_r+0x5a4>
    b506:	e2d9      	b.n	babc <_dtoa_r+0xb58>
    b508:	0022      	movs	r2, r4
    b50a:	002b      	movs	r3, r5
    b50c:	0030      	movs	r0, r6
    b50e:	0039      	movs	r1, r7
    b510:	f7fc fb46 	bl	7ba0 <__aeabi_ddiv>
    b514:	f7fd fd2e 	bl	8f74 <__aeabi_d2iz>
    b518:	4680      	mov	r8, r0
    b51a:	f7fd fd5f 	bl	8fdc <__aeabi_i2d>
    b51e:	0022      	movs	r2, r4
    b520:	002b      	movs	r3, r5
    b522:	f7fc ff71 	bl	8408 <__aeabi_dmul>
    b526:	0002      	movs	r2, r0
    b528:	000b      	movs	r3, r1
    b52a:	0030      	movs	r0, r6
    b52c:	0039      	movs	r1, r7
    b52e:	f7fd f9eb 	bl	8908 <__aeabi_dsub>
    b532:	4653      	mov	r3, sl
    b534:	4642      	mov	r2, r8
    b536:	3b01      	subs	r3, #1
    b538:	3230      	adds	r2, #48	; 0x30
    b53a:	0006      	movs	r6, r0
    b53c:	000f      	movs	r7, r1
    b53e:	46d3      	mov	fp, sl
    b540:	701a      	strb	r2, [r3, #0]
    b542:	45d1      	cmp	r9, sl
    b544:	d1d0      	bne.n	b4e8 <_dtoa_r+0x584>
    b546:	9b06      	ldr	r3, [sp, #24]
    b548:	4654      	mov	r4, sl
    b54a:	469b      	mov	fp, r3
    b54c:	9b07      	ldr	r3, [sp, #28]
    b54e:	469a      	mov	sl, r3
    b550:	0032      	movs	r2, r6
    b552:	003b      	movs	r3, r7
    b554:	0030      	movs	r0, r6
    b556:	0039      	movs	r1, r7
    b558:	f7fc f812 	bl	7580 <__aeabi_dadd>
    b55c:	0006      	movs	r6, r0
    b55e:	000f      	movs	r7, r1
    b560:	0002      	movs	r2, r0
    b562:	000b      	movs	r3, r1
    b564:	9804      	ldr	r0, [sp, #16]
    b566:	9905      	ldr	r1, [sp, #20]
    b568:	f7fb f95a 	bl	6820 <__aeabi_dcmplt>
    b56c:	2800      	cmp	r0, #0
    b56e:	d10c      	bne.n	b58a <_dtoa_r+0x626>
    b570:	9804      	ldr	r0, [sp, #16]
    b572:	9905      	ldr	r1, [sp, #20]
    b574:	0032      	movs	r2, r6
    b576:	003b      	movs	r3, r7
    b578:	f7fb f94c 	bl	6814 <__aeabi_dcmpeq>
    b57c:	2800      	cmp	r0, #0
    b57e:	d100      	bne.n	b582 <_dtoa_r+0x61e>
    b580:	e71f      	b.n	b3c2 <_dtoa_r+0x45e>
    b582:	4643      	mov	r3, r8
    b584:	07db      	lsls	r3, r3, #31
    b586:	d400      	bmi.n	b58a <_dtoa_r+0x626>
    b588:	e71b      	b.n	b3c2 <_dtoa_r+0x45e>
    b58a:	1e65      	subs	r5, r4, #1
    b58c:	782f      	ldrb	r7, [r5, #0]
    b58e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b590:	e006      	b.n	b5a0 <_dtoa_r+0x63c>
    b592:	429d      	cmp	r5, r3
    b594:	d100      	bne.n	b598 <_dtoa_r+0x634>
    b596:	e351      	b.n	bc3c <_dtoa_r+0xcd8>
    b598:	3c02      	subs	r4, #2
    b59a:	7827      	ldrb	r7, [r4, #0]
    b59c:	002c      	movs	r4, r5
    b59e:	3d01      	subs	r5, #1
    b5a0:	2f39      	cmp	r7, #57	; 0x39
    b5a2:	d0f6      	beq.n	b592 <_dtoa_r+0x62e>
    b5a4:	3701      	adds	r7, #1
    b5a6:	702f      	strb	r7, [r5, #0]
    b5a8:	e70b      	b.n	b3c2 <_dtoa_r+0x45e>
    b5aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    b5ac:	2a00      	cmp	r2, #0
    b5ae:	d04f      	beq.n	b650 <_dtoa_r+0x6ec>
    b5b0:	9a22      	ldr	r2, [sp, #136]	; 0x88
    b5b2:	2a01      	cmp	r2, #1
    b5b4:	dc00      	bgt.n	b5b8 <_dtoa_r+0x654>
    b5b6:	e22c      	b.n	ba12 <_dtoa_r+0xaae>
    b5b8:	9b07      	ldr	r3, [sp, #28]
    b5ba:	1e5c      	subs	r4, r3, #1
    b5bc:	464b      	mov	r3, r9
    b5be:	45a1      	cmp	r9, r4
    b5c0:	da00      	bge.n	b5c4 <_dtoa_r+0x660>
    b5c2:	e2b8      	b.n	bb36 <_dtoa_r+0xbd2>
    b5c4:	1b1c      	subs	r4, r3, r4
    b5c6:	9b07      	ldr	r3, [sp, #28]
    b5c8:	2b00      	cmp	r3, #0
    b5ca:	da00      	bge.n	b5ce <_dtoa_r+0x66a>
    b5cc:	e3d4      	b.n	bd78 <_dtoa_r+0xe14>
    b5ce:	9b06      	ldr	r3, [sp, #24]
    b5d0:	9308      	str	r3, [sp, #32]
    b5d2:	9b07      	ldr	r3, [sp, #28]
    b5d4:	9a06      	ldr	r2, [sp, #24]
    b5d6:	2101      	movs	r1, #1
    b5d8:	4694      	mov	ip, r2
    b5da:	449c      	add	ip, r3
    b5dc:	4662      	mov	r2, ip
    b5de:	9206      	str	r2, [sp, #24]
    b5e0:	9a04      	ldr	r2, [sp, #16]
    b5e2:	4650      	mov	r0, sl
    b5e4:	4694      	mov	ip, r2
    b5e6:	449c      	add	ip, r3
    b5e8:	4663      	mov	r3, ip
    b5ea:	9304      	str	r3, [sp, #16]
    b5ec:	f001 fd52 	bl	d094 <__i2b>
    b5f0:	4680      	mov	r8, r0
    b5f2:	e032      	b.n	b65a <_dtoa_r+0x6f6>
    b5f4:	9a06      	ldr	r2, [sp, #24]
    b5f6:	9b03      	ldr	r3, [sp, #12]
    b5f8:	1ad2      	subs	r2, r2, r3
    b5fa:	425b      	negs	r3, r3
    b5fc:	4699      	mov	r9, r3
    b5fe:	2300      	movs	r3, #0
    b600:	9206      	str	r2, [sp, #24]
    b602:	930d      	str	r3, [sp, #52]	; 0x34
    b604:	e579      	b.n	b0fa <_dtoa_r+0x196>
    b606:	9803      	ldr	r0, [sp, #12]
    b608:	f7fd fce8 	bl	8fdc <__aeabi_i2d>
    b60c:	000b      	movs	r3, r1
    b60e:	0002      	movs	r2, r0
    b610:	0029      	movs	r1, r5
    b612:	0020      	movs	r0, r4
    b614:	f7fb f8fe 	bl	6814 <__aeabi_dcmpeq>
    b618:	0002      	movs	r2, r0
    b61a:	4250      	negs	r0, r2
    b61c:	4150      	adcs	r0, r2
    b61e:	9b03      	ldr	r3, [sp, #12]
    b620:	1a1b      	subs	r3, r3, r0
    b622:	9303      	str	r3, [sp, #12]
    b624:	e53d      	b.n	b0a2 <_dtoa_r+0x13e>
    b626:	2301      	movs	r3, #1
    b628:	1a9b      	subs	r3, r3, r2
    b62a:	9306      	str	r3, [sp, #24]
    b62c:	2300      	movs	r3, #0
    b62e:	9304      	str	r3, [sp, #16]
    b630:	e557      	b.n	b0e2 <_dtoa_r+0x17e>
    b632:	46c0      	nop			; (mov r8, r8)
    b634:	3ff00000 	.word	0x3ff00000
    b638:	40240000 	.word	0x40240000
    b63c:	00000432 	.word	0x00000432
    b640:	00000412 	.word	0x00000412
    b644:	fe100000 	.word	0xfe100000
    b648:	0000e594 	.word	0x0000e594
    b64c:	0000e5f0 	.word	0x0000e5f0
    b650:	9b06      	ldr	r3, [sp, #24]
    b652:	464c      	mov	r4, r9
    b654:	9308      	str	r3, [sp, #32]
    b656:	2300      	movs	r3, #0
    b658:	4698      	mov	r8, r3
    b65a:	9908      	ldr	r1, [sp, #32]
    b65c:	1e0b      	subs	r3, r1, #0
    b65e:	dd0e      	ble.n	b67e <_dtoa_r+0x71a>
    b660:	9a04      	ldr	r2, [sp, #16]
    b662:	2a00      	cmp	r2, #0
    b664:	dd0b      	ble.n	b67e <_dtoa_r+0x71a>
    b666:	4293      	cmp	r3, r2
    b668:	dd00      	ble.n	b66c <_dtoa_r+0x708>
    b66a:	e187      	b.n	b97c <_dtoa_r+0xa18>
    b66c:	9a06      	ldr	r2, [sp, #24]
    b66e:	1ad2      	subs	r2, r2, r3
    b670:	9206      	str	r2, [sp, #24]
    b672:	9a08      	ldr	r2, [sp, #32]
    b674:	1ad2      	subs	r2, r2, r3
    b676:	9208      	str	r2, [sp, #32]
    b678:	9a04      	ldr	r2, [sp, #16]
    b67a:	1ad3      	subs	r3, r2, r3
    b67c:	9304      	str	r3, [sp, #16]
    b67e:	464b      	mov	r3, r9
    b680:	2b00      	cmp	r3, #0
    b682:	d01a      	beq.n	b6ba <_dtoa_r+0x756>
    b684:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b686:	2b00      	cmp	r3, #0
    b688:	d100      	bne.n	b68c <_dtoa_r+0x728>
    b68a:	e1bb      	b.n	ba04 <_dtoa_r+0xaa0>
    b68c:	2c00      	cmp	r4, #0
    b68e:	dd10      	ble.n	b6b2 <_dtoa_r+0x74e>
    b690:	4641      	mov	r1, r8
    b692:	0022      	movs	r2, r4
    b694:	4650      	mov	r0, sl
    b696:	f001 fdb1 	bl	d1fc <__pow5mult>
    b69a:	465a      	mov	r2, fp
    b69c:	0001      	movs	r1, r0
    b69e:	4680      	mov	r8, r0
    b6a0:	4650      	mov	r0, sl
    b6a2:	f001 fd01 	bl	d0a8 <__multiply>
    b6a6:	0005      	movs	r5, r0
    b6a8:	4659      	mov	r1, fp
    b6aa:	4650      	mov	r0, sl
    b6ac:	f001 fc5a 	bl	cf64 <_Bfree>
    b6b0:	46ab      	mov	fp, r5
    b6b2:	464b      	mov	r3, r9
    b6b4:	1b1a      	subs	r2, r3, r4
    b6b6:	d000      	beq.n	b6ba <_dtoa_r+0x756>
    b6b8:	e1a5      	b.n	ba06 <_dtoa_r+0xaa2>
    b6ba:	2101      	movs	r1, #1
    b6bc:	4650      	mov	r0, sl
    b6be:	f001 fce9 	bl	d094 <__i2b>
    b6c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b6c4:	4681      	mov	r9, r0
    b6c6:	2b00      	cmp	r3, #0
    b6c8:	dd1d      	ble.n	b706 <_dtoa_r+0x7a2>
    b6ca:	001a      	movs	r2, r3
    b6cc:	0001      	movs	r1, r0
    b6ce:	4650      	mov	r0, sl
    b6d0:	f001 fd94 	bl	d1fc <__pow5mult>
    b6d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b6d6:	4681      	mov	r9, r0
    b6d8:	2b01      	cmp	r3, #1
    b6da:	dc00      	bgt.n	b6de <_dtoa_r+0x77a>
    b6dc:	e150      	b.n	b980 <_dtoa_r+0xa1c>
    b6de:	2400      	movs	r4, #0
    b6e0:	464b      	mov	r3, r9
    b6e2:	691b      	ldr	r3, [r3, #16]
    b6e4:	3303      	adds	r3, #3
    b6e6:	009b      	lsls	r3, r3, #2
    b6e8:	444b      	add	r3, r9
    b6ea:	6858      	ldr	r0, [r3, #4]
    b6ec:	f001 fc8a 	bl	d004 <__hi0bits>
    b6f0:	2320      	movs	r3, #32
    b6f2:	1a1b      	subs	r3, r3, r0
    b6f4:	e010      	b.n	b718 <_dtoa_r+0x7b4>
    b6f6:	2220      	movs	r2, #32
    b6f8:	0030      	movs	r0, r6
    b6fa:	1ad3      	subs	r3, r2, r3
    b6fc:	4098      	lsls	r0, r3
    b6fe:	e685      	b.n	b40c <_dtoa_r+0x4a8>
    b700:	2300      	movs	r3, #0
    b702:	930c      	str	r3, [sp, #48]	; 0x30
    b704:	e4e3      	b.n	b0ce <_dtoa_r+0x16a>
    b706:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b708:	2400      	movs	r4, #0
    b70a:	2b01      	cmp	r3, #1
    b70c:	dc00      	bgt.n	b710 <_dtoa_r+0x7ac>
    b70e:	e18b      	b.n	ba28 <_dtoa_r+0xac4>
    b710:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    b712:	2301      	movs	r3, #1
    b714:	2a00      	cmp	r2, #0
    b716:	d1e3      	bne.n	b6e0 <_dtoa_r+0x77c>
    b718:	9904      	ldr	r1, [sp, #16]
    b71a:	201f      	movs	r0, #31
    b71c:	468c      	mov	ip, r1
    b71e:	4463      	add	r3, ip
    b720:	4018      	ands	r0, r3
    b722:	d100      	bne.n	b726 <_dtoa_r+0x7c2>
    b724:	e0ae      	b.n	b884 <_dtoa_r+0x920>
    b726:	2320      	movs	r3, #32
    b728:	1a1b      	subs	r3, r3, r0
    b72a:	2b04      	cmp	r3, #4
    b72c:	dc00      	bgt.n	b730 <_dtoa_r+0x7cc>
    b72e:	e3cc      	b.n	beca <_dtoa_r+0xf66>
    b730:	231c      	movs	r3, #28
    b732:	1a18      	subs	r0, r3, r0
    b734:	9b06      	ldr	r3, [sp, #24]
    b736:	469c      	mov	ip, r3
    b738:	4484      	add	ip, r0
    b73a:	4663      	mov	r3, ip
    b73c:	9306      	str	r3, [sp, #24]
    b73e:	9b08      	ldr	r3, [sp, #32]
    b740:	469c      	mov	ip, r3
    b742:	4484      	add	ip, r0
    b744:	4663      	mov	r3, ip
    b746:	468c      	mov	ip, r1
    b748:	4484      	add	ip, r0
    b74a:	9308      	str	r3, [sp, #32]
    b74c:	4663      	mov	r3, ip
    b74e:	9304      	str	r3, [sp, #16]
    b750:	9b06      	ldr	r3, [sp, #24]
    b752:	2b00      	cmp	r3, #0
    b754:	dd05      	ble.n	b762 <_dtoa_r+0x7fe>
    b756:	4659      	mov	r1, fp
    b758:	001a      	movs	r2, r3
    b75a:	4650      	mov	r0, sl
    b75c:	f001 fdae 	bl	d2bc <__lshift>
    b760:	4683      	mov	fp, r0
    b762:	9b04      	ldr	r3, [sp, #16]
    b764:	2b00      	cmp	r3, #0
    b766:	dd05      	ble.n	b774 <_dtoa_r+0x810>
    b768:	4649      	mov	r1, r9
    b76a:	001a      	movs	r2, r3
    b76c:	4650      	mov	r0, sl
    b76e:	f001 fda5 	bl	d2bc <__lshift>
    b772:	4681      	mov	r9, r0
    b774:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b776:	2b00      	cmp	r3, #0
    b778:	d000      	beq.n	b77c <_dtoa_r+0x818>
    b77a:	e094      	b.n	b8a6 <_dtoa_r+0x942>
    b77c:	9b07      	ldr	r3, [sp, #28]
    b77e:	2b00      	cmp	r3, #0
    b780:	dc00      	bgt.n	b784 <_dtoa_r+0x820>
    b782:	e175      	b.n	ba70 <_dtoa_r+0xb0c>
    b784:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b786:	2b00      	cmp	r3, #0
    b788:	d100      	bne.n	b78c <_dtoa_r+0x828>
    b78a:	e0a6      	b.n	b8da <_dtoa_r+0x976>
    b78c:	9b08      	ldr	r3, [sp, #32]
    b78e:	2b00      	cmp	r3, #0
    b790:	dd05      	ble.n	b79e <_dtoa_r+0x83a>
    b792:	4641      	mov	r1, r8
    b794:	001a      	movs	r2, r3
    b796:	4650      	mov	r0, sl
    b798:	f001 fd90 	bl	d2bc <__lshift>
    b79c:	4680      	mov	r8, r0
    b79e:	4643      	mov	r3, r8
    b7a0:	930c      	str	r3, [sp, #48]	; 0x30
    b7a2:	2c00      	cmp	r4, #0
    b7a4:	d000      	beq.n	b7a8 <_dtoa_r+0x844>
    b7a6:	e250      	b.n	bc4a <_dtoa_r+0xce6>
    b7a8:	9c07      	ldr	r4, [sp, #28]
    b7aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b7ac:	3c01      	subs	r4, #1
    b7ae:	0023      	movs	r3, r4
    b7b0:	4694      	mov	ip, r2
    b7b2:	4463      	add	r3, ip
    b7b4:	9308      	str	r3, [sp, #32]
    b7b6:	2301      	movs	r3, #1
    b7b8:	4033      	ands	r3, r6
    b7ba:	9307      	str	r3, [sp, #28]
    b7bc:	464b      	mov	r3, r9
    b7be:	9306      	str	r3, [sp, #24]
    b7c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b7c2:	4657      	mov	r7, sl
    b7c4:	4645      	mov	r5, r8
    b7c6:	465e      	mov	r6, fp
    b7c8:	4692      	mov	sl, r2
    b7ca:	4698      	mov	r8, r3
    b7cc:	9b06      	ldr	r3, [sp, #24]
    b7ce:	0030      	movs	r0, r6
    b7d0:	0019      	movs	r1, r3
    b7d2:	4699      	mov	r9, r3
    b7d4:	f7ff fb1c 	bl	ae10 <quorem>
    b7d8:	0003      	movs	r3, r0
    b7da:	900b      	str	r0, [sp, #44]	; 0x2c
    b7dc:	3330      	adds	r3, #48	; 0x30
    b7de:	0029      	movs	r1, r5
    b7e0:	0030      	movs	r0, r6
    b7e2:	9304      	str	r3, [sp, #16]
    b7e4:	f001 fdca 	bl	d37c <__mcmp>
    b7e8:	4649      	mov	r1, r9
    b7ea:	0004      	movs	r4, r0
    b7ec:	4642      	mov	r2, r8
    b7ee:	0038      	movs	r0, r7
    b7f0:	f001 fdde 	bl	d3b0 <__mdiff>
    b7f4:	68c3      	ldr	r3, [r0, #12]
    b7f6:	4681      	mov	r9, r0
    b7f8:	2b00      	cmp	r3, #0
    b7fa:	d000      	beq.n	b7fe <_dtoa_r+0x89a>
    b7fc:	e11e      	b.n	ba3c <_dtoa_r+0xad8>
    b7fe:	0001      	movs	r1, r0
    b800:	0030      	movs	r0, r6
    b802:	f001 fdbb 	bl	d37c <__mcmp>
    b806:	4683      	mov	fp, r0
    b808:	4649      	mov	r1, r9
    b80a:	0038      	movs	r0, r7
    b80c:	f001 fbaa 	bl	cf64 <_Bfree>
    b810:	465b      	mov	r3, fp
    b812:	9a22      	ldr	r2, [sp, #136]	; 0x88
    b814:	4313      	orrs	r3, r2
    b816:	d103      	bne.n	b820 <_dtoa_r+0x8bc>
    b818:	9b07      	ldr	r3, [sp, #28]
    b81a:	2b00      	cmp	r3, #0
    b81c:	d100      	bne.n	b820 <_dtoa_r+0x8bc>
    b81e:	e306      	b.n	be2e <_dtoa_r+0xeca>
    b820:	2c00      	cmp	r4, #0
    b822:	da00      	bge.n	b826 <_dtoa_r+0x8c2>
    b824:	e1a8      	b.n	bb78 <_dtoa_r+0xc14>
    b826:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b828:	431c      	orrs	r4, r3
    b82a:	d103      	bne.n	b834 <_dtoa_r+0x8d0>
    b82c:	9b07      	ldr	r3, [sp, #28]
    b82e:	2b00      	cmp	r3, #0
    b830:	d100      	bne.n	b834 <_dtoa_r+0x8d0>
    b832:	e1a1      	b.n	bb78 <_dtoa_r+0xc14>
    b834:	465b      	mov	r3, fp
    b836:	2b00      	cmp	r3, #0
    b838:	dd00      	ble.n	b83c <_dtoa_r+0x8d8>
    b83a:	e282      	b.n	bd42 <_dtoa_r+0xdde>
    b83c:	4669      	mov	r1, sp
    b83e:	4652      	mov	r2, sl
    b840:	4653      	mov	r3, sl
    b842:	7c09      	ldrb	r1, [r1, #16]
    b844:	1c5c      	adds	r4, r3, #1
    b846:	7011      	strb	r1, [r2, #0]
    b848:	9a08      	ldr	r2, [sp, #32]
    b84a:	4552      	cmp	r2, sl
    b84c:	d100      	bne.n	b850 <_dtoa_r+0x8ec>
    b84e:	e28a      	b.n	bd66 <_dtoa_r+0xe02>
    b850:	0031      	movs	r1, r6
    b852:	2300      	movs	r3, #0
    b854:	220a      	movs	r2, #10
    b856:	0038      	movs	r0, r7
    b858:	f001 fb8e 	bl	cf78 <__multadd>
    b85c:	2300      	movs	r3, #0
    b85e:	0006      	movs	r6, r0
    b860:	220a      	movs	r2, #10
    b862:	0029      	movs	r1, r5
    b864:	0038      	movs	r0, r7
    b866:	4545      	cmp	r5, r8
    b868:	d100      	bne.n	b86c <_dtoa_r+0x908>
    b86a:	e0e1      	b.n	ba30 <_dtoa_r+0xacc>
    b86c:	f001 fb84 	bl	cf78 <__multadd>
    b870:	4641      	mov	r1, r8
    b872:	0005      	movs	r5, r0
    b874:	2300      	movs	r3, #0
    b876:	220a      	movs	r2, #10
    b878:	0038      	movs	r0, r7
    b87a:	f001 fb7d 	bl	cf78 <__multadd>
    b87e:	46a2      	mov	sl, r4
    b880:	4680      	mov	r8, r0
    b882:	e7a3      	b.n	b7cc <_dtoa_r+0x868>
    b884:	201c      	movs	r0, #28
    b886:	9b06      	ldr	r3, [sp, #24]
    b888:	469c      	mov	ip, r3
    b88a:	4484      	add	ip, r0
    b88c:	4663      	mov	r3, ip
    b88e:	9306      	str	r3, [sp, #24]
    b890:	9b08      	ldr	r3, [sp, #32]
    b892:	469c      	mov	ip, r3
    b894:	4484      	add	ip, r0
    b896:	4663      	mov	r3, ip
    b898:	9308      	str	r3, [sp, #32]
    b89a:	9b04      	ldr	r3, [sp, #16]
    b89c:	469c      	mov	ip, r3
    b89e:	4484      	add	ip, r0
    b8a0:	4663      	mov	r3, ip
    b8a2:	9304      	str	r3, [sp, #16]
    b8a4:	e754      	b.n	b750 <_dtoa_r+0x7ec>
    b8a6:	4649      	mov	r1, r9
    b8a8:	4658      	mov	r0, fp
    b8aa:	f001 fd67 	bl	d37c <__mcmp>
    b8ae:	2800      	cmp	r0, #0
    b8b0:	db00      	blt.n	b8b4 <_dtoa_r+0x950>
    b8b2:	e763      	b.n	b77c <_dtoa_r+0x818>
    b8b4:	9b03      	ldr	r3, [sp, #12]
    b8b6:	4659      	mov	r1, fp
    b8b8:	3b01      	subs	r3, #1
    b8ba:	9303      	str	r3, [sp, #12]
    b8bc:	220a      	movs	r2, #10
    b8be:	2300      	movs	r3, #0
    b8c0:	4650      	mov	r0, sl
    b8c2:	f001 fb59 	bl	cf78 <__multadd>
    b8c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b8c8:	4683      	mov	fp, r0
    b8ca:	2b00      	cmp	r3, #0
    b8cc:	d000      	beq.n	b8d0 <_dtoa_r+0x96c>
    b8ce:	e2ca      	b.n	be66 <_dtoa_r+0xf02>
    b8d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b8d2:	2b00      	cmp	r3, #0
    b8d4:	dc00      	bgt.n	b8d8 <_dtoa_r+0x974>
    b8d6:	e2d8      	b.n	be8a <_dtoa_r+0xf26>
    b8d8:	9307      	str	r3, [sp, #28]
    b8da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b8dc:	465d      	mov	r5, fp
    b8de:	2400      	movs	r4, #0
    b8e0:	9f07      	ldr	r7, [sp, #28]
    b8e2:	469b      	mov	fp, r3
    b8e4:	e006      	b.n	b8f4 <_dtoa_r+0x990>
    b8e6:	0029      	movs	r1, r5
    b8e8:	2300      	movs	r3, #0
    b8ea:	220a      	movs	r2, #10
    b8ec:	4650      	mov	r0, sl
    b8ee:	f001 fb43 	bl	cf78 <__multadd>
    b8f2:	0005      	movs	r5, r0
    b8f4:	4649      	mov	r1, r9
    b8f6:	0028      	movs	r0, r5
    b8f8:	f7ff fa8a 	bl	ae10 <quorem>
    b8fc:	465b      	mov	r3, fp
    b8fe:	3030      	adds	r0, #48	; 0x30
    b900:	5518      	strb	r0, [r3, r4]
    b902:	3401      	adds	r4, #1
    b904:	42bc      	cmp	r4, r7
    b906:	dbee      	blt.n	b8e6 <_dtoa_r+0x982>
    b908:	46ab      	mov	fp, r5
    b90a:	0006      	movs	r6, r0
    b90c:	9c07      	ldr	r4, [sp, #28]
    b90e:	2c00      	cmp	r4, #0
    b910:	dc00      	bgt.n	b914 <_dtoa_r+0x9b0>
    b912:	e237      	b.n	bd84 <_dtoa_r+0xe20>
    b914:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b916:	2700      	movs	r7, #0
    b918:	469c      	mov	ip, r3
    b91a:	4464      	add	r4, ip
    b91c:	4659      	mov	r1, fp
    b91e:	2201      	movs	r2, #1
    b920:	4650      	mov	r0, sl
    b922:	f001 fccb 	bl	d2bc <__lshift>
    b926:	4649      	mov	r1, r9
    b928:	4683      	mov	fp, r0
    b92a:	f001 fd27 	bl	d37c <__mcmp>
    b92e:	2800      	cmp	r0, #0
    b930:	dc00      	bgt.n	b934 <_dtoa_r+0x9d0>
    b932:	e144      	b.n	bbbe <_dtoa_r+0xc5a>
    b934:	1e65      	subs	r5, r4, #1
    b936:	782b      	ldrb	r3, [r5, #0]
    b938:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b93a:	e006      	b.n	b94a <_dtoa_r+0x9e6>
    b93c:	4295      	cmp	r5, r2
    b93e:	d100      	bne.n	b942 <_dtoa_r+0x9de>
    b940:	e0b1      	b.n	baa6 <_dtoa_r+0xb42>
    b942:	3c02      	subs	r4, #2
    b944:	7823      	ldrb	r3, [r4, #0]
    b946:	002c      	movs	r4, r5
    b948:	3d01      	subs	r5, #1
    b94a:	2b39      	cmp	r3, #57	; 0x39
    b94c:	d0f6      	beq.n	b93c <_dtoa_r+0x9d8>
    b94e:	3301      	adds	r3, #1
    b950:	702b      	strb	r3, [r5, #0]
    b952:	4649      	mov	r1, r9
    b954:	4650      	mov	r0, sl
    b956:	f001 fb05 	bl	cf64 <_Bfree>
    b95a:	4643      	mov	r3, r8
    b95c:	2b00      	cmp	r3, #0
    b95e:	d100      	bne.n	b962 <_dtoa_r+0x9fe>
    b960:	e52f      	b.n	b3c2 <_dtoa_r+0x45e>
    b962:	2f00      	cmp	r7, #0
    b964:	d005      	beq.n	b972 <_dtoa_r+0xa0e>
    b966:	4547      	cmp	r7, r8
    b968:	d003      	beq.n	b972 <_dtoa_r+0xa0e>
    b96a:	0039      	movs	r1, r7
    b96c:	4650      	mov	r0, sl
    b96e:	f001 faf9 	bl	cf64 <_Bfree>
    b972:	4641      	mov	r1, r8
    b974:	4650      	mov	r0, sl
    b976:	f001 faf5 	bl	cf64 <_Bfree>
    b97a:	e522      	b.n	b3c2 <_dtoa_r+0x45e>
    b97c:	0013      	movs	r3, r2
    b97e:	e675      	b.n	b66c <_dtoa_r+0x708>
    b980:	2e00      	cmp	r6, #0
    b982:	d000      	beq.n	b986 <_dtoa_r+0xa22>
    b984:	e6ab      	b.n	b6de <_dtoa_r+0x77a>
    b986:	033b      	lsls	r3, r7, #12
    b988:	2400      	movs	r4, #0
    b98a:	2b00      	cmp	r3, #0
    b98c:	d000      	beq.n	b990 <_dtoa_r+0xa2c>
    b98e:	e6bf      	b.n	b710 <_dtoa_r+0x7ac>
    b990:	4bba      	ldr	r3, [pc, #744]	; (bc7c <_dtoa_r+0xd18>)
    b992:	423b      	tst	r3, r7
    b994:	d100      	bne.n	b998 <_dtoa_r+0xa34>
    b996:	e6bb      	b.n	b710 <_dtoa_r+0x7ac>
    b998:	9b06      	ldr	r3, [sp, #24]
    b99a:	3401      	adds	r4, #1
    b99c:	3301      	adds	r3, #1
    b99e:	9306      	str	r3, [sp, #24]
    b9a0:	9b04      	ldr	r3, [sp, #16]
    b9a2:	3301      	adds	r3, #1
    b9a4:	9304      	str	r3, [sp, #16]
    b9a6:	e6b3      	b.n	b710 <_dtoa_r+0x7ac>
    b9a8:	2301      	movs	r3, #1
    b9aa:	930b      	str	r3, [sp, #44]	; 0x2c
    b9ac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    b9ae:	2b00      	cmp	r3, #0
    b9b0:	dc00      	bgt.n	b9b4 <_dtoa_r+0xa50>
    b9b2:	e0d1      	b.n	bb58 <_dtoa_r+0xbf4>
    b9b4:	001d      	movs	r5, r3
    b9b6:	4698      	mov	r8, r3
    b9b8:	930e      	str	r3, [sp, #56]	; 0x38
    b9ba:	9307      	str	r3, [sp, #28]
    b9bc:	f7ff fbc8 	bl	b150 <_dtoa_r+0x1ec>
    b9c0:	9b07      	ldr	r3, [sp, #28]
    b9c2:	2b00      	cmp	r3, #0
    b9c4:	dd00      	ble.n	b9c8 <_dtoa_r+0xa64>
    b9c6:	e553      	b.n	b470 <_dtoa_r+0x50c>
    b9c8:	d000      	beq.n	b9cc <_dtoa_r+0xa68>
    b9ca:	e0ad      	b.n	bb28 <_dtoa_r+0xbc4>
    b9cc:	9804      	ldr	r0, [sp, #16]
    b9ce:	9905      	ldr	r1, [sp, #20]
    b9d0:	2200      	movs	r2, #0
    b9d2:	4bab      	ldr	r3, [pc, #684]	; (bc80 <_dtoa_r+0xd1c>)
    b9d4:	f7fc fd18 	bl	8408 <__aeabi_dmul>
    b9d8:	003b      	movs	r3, r7
    b9da:	0032      	movs	r2, r6
    b9dc:	f7fa ff3e 	bl	685c <__aeabi_dcmpge>
    b9e0:	2300      	movs	r3, #0
    b9e2:	4699      	mov	r9, r3
    b9e4:	4698      	mov	r8, r3
    b9e6:	2800      	cmp	r0, #0
    b9e8:	d055      	beq.n	ba96 <_dtoa_r+0xb32>
    b9ea:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    b9ec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    b9ee:	43db      	mvns	r3, r3
    b9f0:	9303      	str	r3, [sp, #12]
    b9f2:	4649      	mov	r1, r9
    b9f4:	4650      	mov	r0, sl
    b9f6:	f001 fab5 	bl	cf64 <_Bfree>
    b9fa:	4643      	mov	r3, r8
    b9fc:	2b00      	cmp	r3, #0
    b9fe:	d100      	bne.n	ba02 <_dtoa_r+0xa9e>
    ba00:	e4df      	b.n	b3c2 <_dtoa_r+0x45e>
    ba02:	e7b6      	b.n	b972 <_dtoa_r+0xa0e>
    ba04:	464a      	mov	r2, r9
    ba06:	4659      	mov	r1, fp
    ba08:	4650      	mov	r0, sl
    ba0a:	f001 fbf7 	bl	d1fc <__pow5mult>
    ba0e:	4683      	mov	fp, r0
    ba10:	e653      	b.n	b6ba <_dtoa_r+0x756>
    ba12:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    ba14:	2a00      	cmp	r2, #0
    ba16:	d100      	bne.n	ba1a <_dtoa_r+0xab6>
    ba18:	e1b6      	b.n	bd88 <_dtoa_r+0xe24>
    ba1a:	4a9a      	ldr	r2, [pc, #616]	; (bc84 <_dtoa_r+0xd20>)
    ba1c:	464c      	mov	r4, r9
    ba1e:	4694      	mov	ip, r2
    ba20:	9a06      	ldr	r2, [sp, #24]
    ba22:	4463      	add	r3, ip
    ba24:	9208      	str	r2, [sp, #32]
    ba26:	e5d5      	b.n	b5d4 <_dtoa_r+0x670>
    ba28:	2e00      	cmp	r6, #0
    ba2a:	d000      	beq.n	ba2e <_dtoa_r+0xaca>
    ba2c:	e670      	b.n	b710 <_dtoa_r+0x7ac>
    ba2e:	e7aa      	b.n	b986 <_dtoa_r+0xa22>
    ba30:	f001 faa2 	bl	cf78 <__multadd>
    ba34:	46a2      	mov	sl, r4
    ba36:	0005      	movs	r5, r0
    ba38:	4680      	mov	r8, r0
    ba3a:	e6c7      	b.n	b7cc <_dtoa_r+0x868>
    ba3c:	2301      	movs	r3, #1
    ba3e:	469b      	mov	fp, r3
    ba40:	e6e2      	b.n	b808 <_dtoa_r+0x8a4>
    ba42:	2300      	movs	r3, #0
    ba44:	930b      	str	r3, [sp, #44]	; 0x2c
    ba46:	9b22      	ldr	r3, [sp, #136]	; 0x88
    ba48:	2b02      	cmp	r3, #2
    ba4a:	d0af      	beq.n	b9ac <_dtoa_r+0xa48>
    ba4c:	2400      	movs	r4, #0
    ba4e:	4653      	mov	r3, sl
    ba50:	0021      	movs	r1, r4
    ba52:	645c      	str	r4, [r3, #68]	; 0x44
    ba54:	4650      	mov	r0, sl
    ba56:	f001 fa5d 	bl	cf14 <_Balloc>
    ba5a:	4653      	mov	r3, sl
    ba5c:	6418      	str	r0, [r3, #64]	; 0x40
    ba5e:	2301      	movs	r3, #1
    ba60:	425b      	negs	r3, r3
    ba62:	9307      	str	r3, [sp, #28]
    ba64:	930e      	str	r3, [sp, #56]	; 0x38
    ba66:	3302      	adds	r3, #2
    ba68:	900a      	str	r0, [sp, #40]	; 0x28
    ba6a:	9423      	str	r4, [sp, #140]	; 0x8c
    ba6c:	930b      	str	r3, [sp, #44]	; 0x2c
    ba6e:	e4ec      	b.n	b44a <_dtoa_r+0x4e6>
    ba70:	9b22      	ldr	r3, [sp, #136]	; 0x88
    ba72:	2b02      	cmp	r3, #2
    ba74:	dc00      	bgt.n	ba78 <_dtoa_r+0xb14>
    ba76:	e685      	b.n	b784 <_dtoa_r+0x820>
    ba78:	9b07      	ldr	r3, [sp, #28]
    ba7a:	2b00      	cmp	r3, #0
    ba7c:	d1b5      	bne.n	b9ea <_dtoa_r+0xa86>
    ba7e:	4649      	mov	r1, r9
    ba80:	2205      	movs	r2, #5
    ba82:	4650      	mov	r0, sl
    ba84:	f001 fa78 	bl	cf78 <__multadd>
    ba88:	4681      	mov	r9, r0
    ba8a:	0001      	movs	r1, r0
    ba8c:	4658      	mov	r0, fp
    ba8e:	f001 fc75 	bl	d37c <__mcmp>
    ba92:	2800      	cmp	r0, #0
    ba94:	dda9      	ble.n	b9ea <_dtoa_r+0xa86>
    ba96:	2331      	movs	r3, #49	; 0x31
    ba98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ba9a:	7013      	strb	r3, [r2, #0]
    ba9c:	9b03      	ldr	r3, [sp, #12]
    ba9e:	1c54      	adds	r4, r2, #1
    baa0:	3301      	adds	r3, #1
    baa2:	9303      	str	r3, [sp, #12]
    baa4:	e7a5      	b.n	b9f2 <_dtoa_r+0xa8e>
    baa6:	9b03      	ldr	r3, [sp, #12]
    baa8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    baaa:	3301      	adds	r3, #1
    baac:	9303      	str	r3, [sp, #12]
    baae:	2331      	movs	r3, #49	; 0x31
    bab0:	7013      	strb	r3, [r2, #0]
    bab2:	e74e      	b.n	b952 <_dtoa_r+0x9ee>
    bab4:	2300      	movs	r3, #0
    bab6:	930b      	str	r3, [sp, #44]	; 0x2c
    bab8:	f7ff fb3d 	bl	b136 <_dtoa_r+0x1d2>
    babc:	9b06      	ldr	r3, [sp, #24]
    babe:	465c      	mov	r4, fp
    bac0:	469b      	mov	fp, r3
    bac2:	9b07      	ldr	r3, [sp, #28]
    bac4:	469a      	mov	sl, r3
    bac6:	e47c      	b.n	b3c2 <_dtoa_r+0x45e>
    bac8:	4640      	mov	r0, r8
    baca:	f7fd fa87 	bl	8fdc <__aeabi_i2d>
    bace:	0032      	movs	r2, r6
    bad0:	003b      	movs	r3, r7
    bad2:	f7fc fc99 	bl	8408 <__aeabi_dmul>
    bad6:	2200      	movs	r2, #0
    bad8:	4b6b      	ldr	r3, [pc, #428]	; (bc88 <_dtoa_r+0xd24>)
    bada:	f7fb fd51 	bl	7580 <__aeabi_dadd>
    bade:	4a6b      	ldr	r2, [pc, #428]	; (bc8c <_dtoa_r+0xd28>)
    bae0:	000b      	movs	r3, r1
    bae2:	4694      	mov	ip, r2
    bae4:	4463      	add	r3, ip
    bae6:	9008      	str	r0, [sp, #32]
    bae8:	9109      	str	r1, [sp, #36]	; 0x24
    baea:	9309      	str	r3, [sp, #36]	; 0x24
    baec:	2200      	movs	r2, #0
    baee:	4b64      	ldr	r3, [pc, #400]	; (bc80 <_dtoa_r+0xd1c>)
    baf0:	0030      	movs	r0, r6
    baf2:	0039      	movs	r1, r7
    baf4:	f7fc ff08 	bl	8908 <__aeabi_dsub>
    baf8:	9e08      	ldr	r6, [sp, #32]
    bafa:	9f09      	ldr	r7, [sp, #36]	; 0x24
    bafc:	0032      	movs	r2, r6
    bafe:	003b      	movs	r3, r7
    bb00:	0004      	movs	r4, r0
    bb02:	000d      	movs	r5, r1
    bb04:	f7fa fea0 	bl	6848 <__aeabi_dcmpgt>
    bb08:	2800      	cmp	r0, #0
    bb0a:	d000      	beq.n	bb0e <_dtoa_r+0xbaa>
    bb0c:	e0b2      	b.n	bc74 <_dtoa_r+0xd10>
    bb0e:	2080      	movs	r0, #128	; 0x80
    bb10:	0600      	lsls	r0, r0, #24
    bb12:	4684      	mov	ip, r0
    bb14:	0039      	movs	r1, r7
    bb16:	4461      	add	r1, ip
    bb18:	000b      	movs	r3, r1
    bb1a:	0032      	movs	r2, r6
    bb1c:	0020      	movs	r0, r4
    bb1e:	0029      	movs	r1, r5
    bb20:	f7fa fe7e 	bl	6820 <__aeabi_dcmplt>
    bb24:	2800      	cmp	r0, #0
    bb26:	d057      	beq.n	bbd8 <_dtoa_r+0xc74>
    bb28:	2300      	movs	r3, #0
    bb2a:	4699      	mov	r9, r3
    bb2c:	4698      	mov	r8, r3
    bb2e:	e75c      	b.n	b9ea <_dtoa_r+0xa86>
    bb30:	980a      	ldr	r0, [sp, #40]	; 0x28
    bb32:	f7ff fa4c 	bl	afce <_dtoa_r+0x6a>
    bb36:	1ae2      	subs	r2, r4, r3
    bb38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bb3a:	46a1      	mov	r9, r4
    bb3c:	469c      	mov	ip, r3
    bb3e:	4494      	add	ip, r2
    bb40:	4663      	mov	r3, ip
    bb42:	2400      	movs	r4, #0
    bb44:	930d      	str	r3, [sp, #52]	; 0x34
    bb46:	e53e      	b.n	b5c6 <_dtoa_r+0x662>
    bb48:	9a10      	ldr	r2, [sp, #64]	; 0x40
    bb4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    bb4c:	9208      	str	r2, [sp, #32]
    bb4e:	9309      	str	r3, [sp, #36]	; 0x24
    bb50:	2302      	movs	r3, #2
    bb52:	4698      	mov	r8, r3
    bb54:	f7ff fb3a 	bl	b1cc <_dtoa_r+0x268>
    bb58:	2300      	movs	r3, #0
    bb5a:	4652      	mov	r2, sl
    bb5c:	2100      	movs	r1, #0
    bb5e:	6453      	str	r3, [r2, #68]	; 0x44
    bb60:	4650      	mov	r0, sl
    bb62:	f001 f9d7 	bl	cf14 <_Balloc>
    bb66:	4653      	mov	r3, sl
    bb68:	6418      	str	r0, [r3, #64]	; 0x40
    bb6a:	2301      	movs	r3, #1
    bb6c:	900a      	str	r0, [sp, #40]	; 0x28
    bb6e:	9307      	str	r3, [sp, #28]
    bb70:	9323      	str	r3, [sp, #140]	; 0x8c
    bb72:	930e      	str	r3, [sp, #56]	; 0x38
    bb74:	f7ff fb07 	bl	b186 <_dtoa_r+0x222>
    bb78:	4643      	mov	r3, r8
    bb7a:	930c      	str	r3, [sp, #48]	; 0x30
    bb7c:	465b      	mov	r3, fp
    bb7e:	9a06      	ldr	r2, [sp, #24]
    bb80:	46a8      	mov	r8, r5
    bb82:	46b3      	mov	fp, r6
    bb84:	4655      	mov	r5, sl
    bb86:	9e04      	ldr	r6, [sp, #16]
    bb88:	4691      	mov	r9, r2
    bb8a:	46ba      	mov	sl, r7
    bb8c:	2b00      	cmp	r3, #0
    bb8e:	dd10      	ble.n	bbb2 <_dtoa_r+0xc4e>
    bb90:	4659      	mov	r1, fp
    bb92:	2201      	movs	r2, #1
    bb94:	0038      	movs	r0, r7
    bb96:	f001 fb91 	bl	d2bc <__lshift>
    bb9a:	4649      	mov	r1, r9
    bb9c:	4683      	mov	fp, r0
    bb9e:	f001 fbed 	bl	d37c <__mcmp>
    bba2:	2800      	cmp	r0, #0
    bba4:	dc00      	bgt.n	bba8 <_dtoa_r+0xc44>
    bba6:	e157      	b.n	be58 <_dtoa_r+0xef4>
    bba8:	2e39      	cmp	r6, #57	; 0x39
    bbaa:	d100      	bne.n	bbae <_dtoa_r+0xc4a>
    bbac:	e122      	b.n	bdf4 <_dtoa_r+0xe90>
    bbae:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    bbb0:	3631      	adds	r6, #49	; 0x31
    bbb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bbb4:	4647      	mov	r7, r8
    bbb6:	1c6c      	adds	r4, r5, #1
    bbb8:	702e      	strb	r6, [r5, #0]
    bbba:	4698      	mov	r8, r3
    bbbc:	e6c9      	b.n	b952 <_dtoa_r+0x9ee>
    bbbe:	2800      	cmp	r0, #0
    bbc0:	d103      	bne.n	bbca <_dtoa_r+0xc66>
    bbc2:	07f3      	lsls	r3, r6, #31
    bbc4:	d501      	bpl.n	bbca <_dtoa_r+0xc66>
    bbc6:	e6b5      	b.n	b934 <_dtoa_r+0x9d0>
    bbc8:	001c      	movs	r4, r3
    bbca:	1e63      	subs	r3, r4, #1
    bbcc:	781a      	ldrb	r2, [r3, #0]
    bbce:	2a30      	cmp	r2, #48	; 0x30
    bbd0:	d0fa      	beq.n	bbc8 <_dtoa_r+0xc64>
    bbd2:	e6be      	b.n	b952 <_dtoa_r+0x9ee>
    bbd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    bbd6:	4699      	mov	r9, r3
    bbd8:	9e10      	ldr	r6, [sp, #64]	; 0x40
    bbda:	9f11      	ldr	r7, [sp, #68]	; 0x44
    bbdc:	e435      	b.n	b44a <_dtoa_r+0x4e6>
    bbde:	2501      	movs	r5, #1
    bbe0:	f7ff fab4 	bl	b14c <_dtoa_r+0x1e8>
    bbe4:	9b03      	ldr	r3, [sp, #12]
    bbe6:	2b00      	cmp	r3, #0
    bbe8:	d100      	bne.n	bbec <_dtoa_r+0xc88>
    bbea:	e0d4      	b.n	bd96 <_dtoa_r+0xe32>
    bbec:	9810      	ldr	r0, [sp, #64]	; 0x40
    bbee:	9911      	ldr	r1, [sp, #68]	; 0x44
    bbf0:	425c      	negs	r4, r3
    bbf2:	230f      	movs	r3, #15
    bbf4:	4a26      	ldr	r2, [pc, #152]	; (bc90 <_dtoa_r+0xd2c>)
    bbf6:	4023      	ands	r3, r4
    bbf8:	00db      	lsls	r3, r3, #3
    bbfa:	18d3      	adds	r3, r2, r3
    bbfc:	681a      	ldr	r2, [r3, #0]
    bbfe:	685b      	ldr	r3, [r3, #4]
    bc00:	f7fc fc02 	bl	8408 <__aeabi_dmul>
    bc04:	1124      	asrs	r4, r4, #4
    bc06:	0006      	movs	r6, r0
    bc08:	000f      	movs	r7, r1
    bc0a:	2c00      	cmp	r4, #0
    bc0c:	d100      	bne.n	bc10 <_dtoa_r+0xcac>
    bc0e:	e149      	b.n	bea4 <_dtoa_r+0xf40>
    bc10:	2302      	movs	r3, #2
    bc12:	4698      	mov	r8, r3
    bc14:	4d1f      	ldr	r5, [pc, #124]	; (bc94 <_dtoa_r+0xd30>)
    bc16:	2301      	movs	r3, #1
    bc18:	4223      	tst	r3, r4
    bc1a:	d009      	beq.n	bc30 <_dtoa_r+0xccc>
    bc1c:	469c      	mov	ip, r3
    bc1e:	682a      	ldr	r2, [r5, #0]
    bc20:	686b      	ldr	r3, [r5, #4]
    bc22:	0030      	movs	r0, r6
    bc24:	0039      	movs	r1, r7
    bc26:	44e0      	add	r8, ip
    bc28:	f7fc fbee 	bl	8408 <__aeabi_dmul>
    bc2c:	0006      	movs	r6, r0
    bc2e:	000f      	movs	r7, r1
    bc30:	1064      	asrs	r4, r4, #1
    bc32:	3508      	adds	r5, #8
    bc34:	2c00      	cmp	r4, #0
    bc36:	d1ee      	bne.n	bc16 <_dtoa_r+0xcb2>
    bc38:	f7ff fae4 	bl	b204 <_dtoa_r+0x2a0>
    bc3c:	9b03      	ldr	r3, [sp, #12]
    bc3e:	2730      	movs	r7, #48	; 0x30
    bc40:	3301      	adds	r3, #1
    bc42:	9303      	str	r3, [sp, #12]
    bc44:	2330      	movs	r3, #48	; 0x30
    bc46:	702b      	strb	r3, [r5, #0]
    bc48:	e4ac      	b.n	b5a4 <_dtoa_r+0x640>
    bc4a:	6859      	ldr	r1, [r3, #4]
    bc4c:	4650      	mov	r0, sl
    bc4e:	f001 f961 	bl	cf14 <_Balloc>
    bc52:	4643      	mov	r3, r8
    bc54:	4641      	mov	r1, r8
    bc56:	0004      	movs	r4, r0
    bc58:	691b      	ldr	r3, [r3, #16]
    bc5a:	310c      	adds	r1, #12
    bc5c:	1c9a      	adds	r2, r3, #2
    bc5e:	0092      	lsls	r2, r2, #2
    bc60:	300c      	adds	r0, #12
    bc62:	f7fd fb03 	bl	926c <memcpy>
    bc66:	2201      	movs	r2, #1
    bc68:	0021      	movs	r1, r4
    bc6a:	4650      	mov	r0, sl
    bc6c:	f001 fb26 	bl	d2bc <__lshift>
    bc70:	900c      	str	r0, [sp, #48]	; 0x30
    bc72:	e599      	b.n	b7a8 <_dtoa_r+0x844>
    bc74:	2300      	movs	r3, #0
    bc76:	4699      	mov	r9, r3
    bc78:	4698      	mov	r8, r3
    bc7a:	e70c      	b.n	ba96 <_dtoa_r+0xb32>
    bc7c:	7ff00000 	.word	0x7ff00000
    bc80:	40140000 	.word	0x40140000
    bc84:	00000433 	.word	0x00000433
    bc88:	401c0000 	.word	0x401c0000
    bc8c:	fcc00000 	.word	0xfcc00000
    bc90:	0000e5f0 	.word	0x0000e5f0
    bc94:	0000e5c8 	.word	0x0000e5c8
    bc98:	9b12      	ldr	r3, [sp, #72]	; 0x48
    bc9a:	498f      	ldr	r1, [pc, #572]	; (bed8 <_dtoa_r+0xf74>)
    bc9c:	3b01      	subs	r3, #1
    bc9e:	00db      	lsls	r3, r3, #3
    bca0:	18c9      	adds	r1, r1, r3
    bca2:	6808      	ldr	r0, [r1, #0]
    bca4:	6849      	ldr	r1, [r1, #4]
    bca6:	9a08      	ldr	r2, [sp, #32]
    bca8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bcaa:	f7fc fbad 	bl	8408 <__aeabi_dmul>
    bcae:	9014      	str	r0, [sp, #80]	; 0x50
    bcb0:	9115      	str	r1, [sp, #84]	; 0x54
    bcb2:	0039      	movs	r1, r7
    bcb4:	0030      	movs	r0, r6
    bcb6:	f7fd f95d 	bl	8f74 <__aeabi_d2iz>
    bcba:	0005      	movs	r5, r0
    bcbc:	f7fd f98e 	bl	8fdc <__aeabi_i2d>
    bcc0:	0002      	movs	r2, r0
    bcc2:	000b      	movs	r3, r1
    bcc4:	0030      	movs	r0, r6
    bcc6:	0039      	movs	r1, r7
    bcc8:	f7fc fe1e 	bl	8908 <__aeabi_dsub>
    bccc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    bcce:	9008      	str	r0, [sp, #32]
    bcd0:	9109      	str	r1, [sp, #36]	; 0x24
    bcd2:	990a      	ldr	r1, [sp, #40]	; 0x28
    bcd4:	001a      	movs	r2, r3
    bcd6:	468c      	mov	ip, r1
    bcd8:	3530      	adds	r5, #48	; 0x30
    bcda:	4462      	add	r2, ip
    bcdc:	1c4c      	adds	r4, r1, #1
    bcde:	700d      	strb	r5, [r1, #0]
    bce0:	4690      	mov	r8, r2
    bce2:	2b01      	cmp	r3, #1
    bce4:	d01b      	beq.n	bd1e <_dtoa_r+0xdba>
    bce6:	9808      	ldr	r0, [sp, #32]
    bce8:	9909      	ldr	r1, [sp, #36]	; 0x24
    bcea:	0025      	movs	r5, r4
    bcec:	2200      	movs	r2, #0
    bcee:	4b7b      	ldr	r3, [pc, #492]	; (bedc <_dtoa_r+0xf78>)
    bcf0:	f7fc fb8a 	bl	8408 <__aeabi_dmul>
    bcf4:	000f      	movs	r7, r1
    bcf6:	0006      	movs	r6, r0
    bcf8:	f7fd f93c 	bl	8f74 <__aeabi_d2iz>
    bcfc:	0004      	movs	r4, r0
    bcfe:	f7fd f96d 	bl	8fdc <__aeabi_i2d>
    bd02:	3430      	adds	r4, #48	; 0x30
    bd04:	0002      	movs	r2, r0
    bd06:	000b      	movs	r3, r1
    bd08:	0030      	movs	r0, r6
    bd0a:	0039      	movs	r1, r7
    bd0c:	f7fc fdfc 	bl	8908 <__aeabi_dsub>
    bd10:	702c      	strb	r4, [r5, #0]
    bd12:	3501      	adds	r5, #1
    bd14:	45a8      	cmp	r8, r5
    bd16:	d1e9      	bne.n	bcec <_dtoa_r+0xd88>
    bd18:	4644      	mov	r4, r8
    bd1a:	9008      	str	r0, [sp, #32]
    bd1c:	9109      	str	r1, [sp, #36]	; 0x24
    bd1e:	9814      	ldr	r0, [sp, #80]	; 0x50
    bd20:	9915      	ldr	r1, [sp, #84]	; 0x54
    bd22:	2200      	movs	r2, #0
    bd24:	4b6e      	ldr	r3, [pc, #440]	; (bee0 <_dtoa_r+0xf7c>)
    bd26:	f7fb fc2b 	bl	7580 <__aeabi_dadd>
    bd2a:	9a08      	ldr	r2, [sp, #32]
    bd2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bd2e:	f7fa fd77 	bl	6820 <__aeabi_dcmplt>
    bd32:	2800      	cmp	r0, #0
    bd34:	d067      	beq.n	be06 <_dtoa_r+0xea2>
    bd36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    bd38:	1e65      	subs	r5, r4, #1
    bd3a:	9303      	str	r3, [sp, #12]
    bd3c:	782f      	ldrb	r7, [r5, #0]
    bd3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bd40:	e42e      	b.n	b5a0 <_dtoa_r+0x63c>
    bd42:	4643      	mov	r3, r8
    bd44:	46b3      	mov	fp, r6
    bd46:	930c      	str	r3, [sp, #48]	; 0x30
    bd48:	9e04      	ldr	r6, [sp, #16]
    bd4a:	9b06      	ldr	r3, [sp, #24]
    bd4c:	46a8      	mov	r8, r5
    bd4e:	4699      	mov	r9, r3
    bd50:	4655      	mov	r5, sl
    bd52:	46ba      	mov	sl, r7
    bd54:	2e39      	cmp	r6, #57	; 0x39
    bd56:	d04d      	beq.n	bdf4 <_dtoa_r+0xe90>
    bd58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bd5a:	3601      	adds	r6, #1
    bd5c:	4647      	mov	r7, r8
    bd5e:	1c6c      	adds	r4, r5, #1
    bd60:	702e      	strb	r6, [r5, #0]
    bd62:	4698      	mov	r8, r3
    bd64:	e5f5      	b.n	b952 <_dtoa_r+0x9ee>
    bd66:	4642      	mov	r2, r8
    bd68:	9b06      	ldr	r3, [sp, #24]
    bd6a:	46b3      	mov	fp, r6
    bd6c:	46ba      	mov	sl, r7
    bd6e:	9e04      	ldr	r6, [sp, #16]
    bd70:	4699      	mov	r9, r3
    bd72:	002f      	movs	r7, r5
    bd74:	4690      	mov	r8, r2
    bd76:	e5d1      	b.n	b91c <_dtoa_r+0x9b8>
    bd78:	9b06      	ldr	r3, [sp, #24]
    bd7a:	9a07      	ldr	r2, [sp, #28]
    bd7c:	1a9b      	subs	r3, r3, r2
    bd7e:	9308      	str	r3, [sp, #32]
    bd80:	2300      	movs	r3, #0
    bd82:	e427      	b.n	b5d4 <_dtoa_r+0x670>
    bd84:	2401      	movs	r4, #1
    bd86:	e5c5      	b.n	b914 <_dtoa_r+0x9b0>
    bd88:	2336      	movs	r3, #54	; 0x36
    bd8a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    bd8c:	464c      	mov	r4, r9
    bd8e:	1a9b      	subs	r3, r3, r2
    bd90:	9a06      	ldr	r2, [sp, #24]
    bd92:	9208      	str	r2, [sp, #32]
    bd94:	e41e      	b.n	b5d4 <_dtoa_r+0x670>
    bd96:	2302      	movs	r3, #2
    bd98:	9e10      	ldr	r6, [sp, #64]	; 0x40
    bd9a:	9f11      	ldr	r7, [sp, #68]	; 0x44
    bd9c:	4698      	mov	r8, r3
    bd9e:	f7ff fa31 	bl	b204 <_dtoa_r+0x2a0>
    bda2:	9b07      	ldr	r3, [sp, #28]
    bda4:	2b00      	cmp	r3, #0
    bda6:	d100      	bne.n	bdaa <_dtoa_r+0xe46>
    bda8:	e68e      	b.n	bac8 <_dtoa_r+0xb64>
    bdaa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    bdac:	2c00      	cmp	r4, #0
    bdae:	dc00      	bgt.n	bdb2 <_dtoa_r+0xe4e>
    bdb0:	e712      	b.n	bbd8 <_dtoa_r+0xc74>
    bdb2:	9b03      	ldr	r3, [sp, #12]
    bdb4:	2200      	movs	r2, #0
    bdb6:	3b01      	subs	r3, #1
    bdb8:	9313      	str	r3, [sp, #76]	; 0x4c
    bdba:	0030      	movs	r0, r6
    bdbc:	4b47      	ldr	r3, [pc, #284]	; (bedc <_dtoa_r+0xf78>)
    bdbe:	0039      	movs	r1, r7
    bdc0:	f7fc fb22 	bl	8408 <__aeabi_dmul>
    bdc4:	0006      	movs	r6, r0
    bdc6:	4640      	mov	r0, r8
    bdc8:	000f      	movs	r7, r1
    bdca:	3001      	adds	r0, #1
    bdcc:	f7fd f906 	bl	8fdc <__aeabi_i2d>
    bdd0:	0032      	movs	r2, r6
    bdd2:	003b      	movs	r3, r7
    bdd4:	f7fc fb18 	bl	8408 <__aeabi_dmul>
    bdd8:	2200      	movs	r2, #0
    bdda:	4b42      	ldr	r3, [pc, #264]	; (bee4 <_dtoa_r+0xf80>)
    bddc:	f7fb fbd0 	bl	7580 <__aeabi_dadd>
    bde0:	4a41      	ldr	r2, [pc, #260]	; (bee8 <_dtoa_r+0xf84>)
    bde2:	000b      	movs	r3, r1
    bde4:	4694      	mov	ip, r2
    bde6:	4463      	add	r3, ip
    bde8:	9008      	str	r0, [sp, #32]
    bdea:	9109      	str	r1, [sp, #36]	; 0x24
    bdec:	9412      	str	r4, [sp, #72]	; 0x48
    bdee:	9309      	str	r3, [sp, #36]	; 0x24
    bdf0:	f7ff fa30 	bl	b254 <_dtoa_r+0x2f0>
    bdf4:	2339      	movs	r3, #57	; 0x39
    bdf6:	702b      	strb	r3, [r5, #0]
    bdf8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bdfa:	4647      	mov	r7, r8
    bdfc:	1c6c      	adds	r4, r5, #1
    bdfe:	4698      	mov	r8, r3
    be00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    be02:	2339      	movs	r3, #57	; 0x39
    be04:	e5a1      	b.n	b94a <_dtoa_r+0x9e6>
    be06:	9a14      	ldr	r2, [sp, #80]	; 0x50
    be08:	9b15      	ldr	r3, [sp, #84]	; 0x54
    be0a:	2000      	movs	r0, #0
    be0c:	4934      	ldr	r1, [pc, #208]	; (bee0 <_dtoa_r+0xf7c>)
    be0e:	f7fc fd7b 	bl	8908 <__aeabi_dsub>
    be12:	9a08      	ldr	r2, [sp, #32]
    be14:	9b09      	ldr	r3, [sp, #36]	; 0x24
    be16:	f7fa fd17 	bl	6848 <__aeabi_dcmpgt>
    be1a:	2800      	cmp	r0, #0
    be1c:	d101      	bne.n	be22 <_dtoa_r+0xebe>
    be1e:	e6db      	b.n	bbd8 <_dtoa_r+0xc74>
    be20:	001c      	movs	r4, r3
    be22:	1e63      	subs	r3, r4, #1
    be24:	781a      	ldrb	r2, [r3, #0]
    be26:	2a30      	cmp	r2, #48	; 0x30
    be28:	d0fa      	beq.n	be20 <_dtoa_r+0xebc>
    be2a:	f7ff fac8 	bl	b3be <_dtoa_r+0x45a>
    be2e:	4643      	mov	r3, r8
    be30:	46b3      	mov	fp, r6
    be32:	930c      	str	r3, [sp, #48]	; 0x30
    be34:	9e04      	ldr	r6, [sp, #16]
    be36:	9b06      	ldr	r3, [sp, #24]
    be38:	46a8      	mov	r8, r5
    be3a:	4699      	mov	r9, r3
    be3c:	4655      	mov	r5, sl
    be3e:	46ba      	mov	sl, r7
    be40:	2e39      	cmp	r6, #57	; 0x39
    be42:	d0d7      	beq.n	bdf4 <_dtoa_r+0xe90>
    be44:	2c00      	cmp	r4, #0
    be46:	dd00      	ble.n	be4a <_dtoa_r+0xee6>
    be48:	e6b1      	b.n	bbae <_dtoa_r+0xc4a>
    be4a:	e6b2      	b.n	bbb2 <_dtoa_r+0xc4e>
    be4c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    be4e:	464d      	mov	r5, r9
    be50:	9203      	str	r2, [sp, #12]
    be52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    be54:	f7ff fba4 	bl	b5a0 <_dtoa_r+0x63c>
    be58:	2800      	cmp	r0, #0
    be5a:	d000      	beq.n	be5e <_dtoa_r+0xefa>
    be5c:	e6a9      	b.n	bbb2 <_dtoa_r+0xc4e>
    be5e:	07f3      	lsls	r3, r6, #31
    be60:	d400      	bmi.n	be64 <_dtoa_r+0xf00>
    be62:	e6a6      	b.n	bbb2 <_dtoa_r+0xc4e>
    be64:	e6a0      	b.n	bba8 <_dtoa_r+0xc44>
    be66:	2300      	movs	r3, #0
    be68:	4641      	mov	r1, r8
    be6a:	220a      	movs	r2, #10
    be6c:	4650      	mov	r0, sl
    be6e:	f001 f883 	bl	cf78 <__multadd>
    be72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be74:	4680      	mov	r8, r0
    be76:	2b00      	cmp	r3, #0
    be78:	dd01      	ble.n	be7e <_dtoa_r+0xf1a>
    be7a:	9307      	str	r3, [sp, #28]
    be7c:	e486      	b.n	b78c <_dtoa_r+0x828>
    be7e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    be80:	2b02      	cmp	r3, #2
    be82:	dc1f      	bgt.n	bec4 <_dtoa_r+0xf60>
    be84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be86:	9307      	str	r3, [sp, #28]
    be88:	e480      	b.n	b78c <_dtoa_r+0x828>
    be8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    be8c:	2b02      	cmp	r3, #2
    be8e:	dc19      	bgt.n	bec4 <_dtoa_r+0xf60>
    be90:	4649      	mov	r1, r9
    be92:	f7fe ffbd 	bl	ae10 <quorem>
    be96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    be98:	3030      	adds	r0, #48	; 0x30
    be9a:	7018      	strb	r0, [r3, #0]
    be9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    be9e:	0006      	movs	r6, r0
    bea0:	9307      	str	r3, [sp, #28]
    bea2:	e533      	b.n	b90c <_dtoa_r+0x9a8>
    bea4:	2302      	movs	r3, #2
    bea6:	4698      	mov	r8, r3
    bea8:	f7ff f9ac 	bl	b204 <_dtoa_r+0x2a0>
    beac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    beae:	9c14      	ldr	r4, [sp, #80]	; 0x50
    beb0:	9303      	str	r3, [sp, #12]
    beb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    beb4:	001d      	movs	r5, r3
    beb6:	f7ff fb73 	bl	b5a0 <_dtoa_r+0x63c>
    beba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    bebc:	9c14      	ldr	r4, [sp, #80]	; 0x50
    bebe:	9303      	str	r3, [sp, #12]
    bec0:	f7ff fa7f 	bl	b3c2 <_dtoa_r+0x45e>
    bec4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bec6:	9307      	str	r3, [sp, #28]
    bec8:	e5d6      	b.n	ba78 <_dtoa_r+0xb14>
    beca:	2b04      	cmp	r3, #4
    becc:	d100      	bne.n	bed0 <_dtoa_r+0xf6c>
    bece:	e43f      	b.n	b750 <_dtoa_r+0x7ec>
    bed0:	233c      	movs	r3, #60	; 0x3c
    bed2:	1a18      	subs	r0, r3, r0
    bed4:	e4d7      	b.n	b886 <_dtoa_r+0x922>
    bed6:	46c0      	nop			; (mov r8, r8)
    bed8:	0000e5f0 	.word	0x0000e5f0
    bedc:	40240000 	.word	0x40240000
    bee0:	3fe00000 	.word	0x3fe00000
    bee4:	401c0000 	.word	0x401c0000
    bee8:	fcc00000 	.word	0xfcc00000

0000beec <__sflush_r>:
    beec:	b5f0      	push	{r4, r5, r6, r7, lr}
    beee:	46c6      	mov	lr, r8
    bef0:	b500      	push	{lr}
    bef2:	230c      	movs	r3, #12
    bef4:	5eca      	ldrsh	r2, [r1, r3]
    bef6:	4680      	mov	r8, r0
    bef8:	b293      	uxth	r3, r2
    befa:	000c      	movs	r4, r1
    befc:	0719      	lsls	r1, r3, #28
    befe:	d440      	bmi.n	bf82 <__sflush_r+0x96>
    bf00:	2380      	movs	r3, #128	; 0x80
    bf02:	011b      	lsls	r3, r3, #4
    bf04:	4313      	orrs	r3, r2
    bf06:	6862      	ldr	r2, [r4, #4]
    bf08:	81a3      	strh	r3, [r4, #12]
    bf0a:	2a00      	cmp	r2, #0
    bf0c:	dc00      	bgt.n	bf10 <__sflush_r+0x24>
    bf0e:	e070      	b.n	bff2 <__sflush_r+0x106>
    bf10:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    bf12:	2e00      	cmp	r6, #0
    bf14:	d031      	beq.n	bf7a <__sflush_r+0x8e>
    bf16:	4642      	mov	r2, r8
    bf18:	4641      	mov	r1, r8
    bf1a:	6815      	ldr	r5, [r2, #0]
    bf1c:	2200      	movs	r2, #0
    bf1e:	b29b      	uxth	r3, r3
    bf20:	600a      	str	r2, [r1, #0]
    bf22:	04da      	lsls	r2, r3, #19
    bf24:	d400      	bmi.n	bf28 <__sflush_r+0x3c>
    bf26:	e069      	b.n	bffc <__sflush_r+0x110>
    bf28:	6d22      	ldr	r2, [r4, #80]	; 0x50
    bf2a:	075b      	lsls	r3, r3, #29
    bf2c:	d506      	bpl.n	bf3c <__sflush_r+0x50>
    bf2e:	6863      	ldr	r3, [r4, #4]
    bf30:	1ad2      	subs	r2, r2, r3
    bf32:	6b23      	ldr	r3, [r4, #48]	; 0x30
    bf34:	2b00      	cmp	r3, #0
    bf36:	d001      	beq.n	bf3c <__sflush_r+0x50>
    bf38:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    bf3a:	1ad2      	subs	r2, r2, r3
    bf3c:	2300      	movs	r3, #0
    bf3e:	69e1      	ldr	r1, [r4, #28]
    bf40:	4640      	mov	r0, r8
    bf42:	47b0      	blx	r6
    bf44:	1c43      	adds	r3, r0, #1
    bf46:	d03d      	beq.n	bfc4 <__sflush_r+0xd8>
    bf48:	89a3      	ldrh	r3, [r4, #12]
    bf4a:	4a3a      	ldr	r2, [pc, #232]	; (c034 <__sflush_r+0x148>)
    bf4c:	4013      	ands	r3, r2
    bf4e:	2200      	movs	r2, #0
    bf50:	6062      	str	r2, [r4, #4]
    bf52:	6922      	ldr	r2, [r4, #16]
    bf54:	b21b      	sxth	r3, r3
    bf56:	81a3      	strh	r3, [r4, #12]
    bf58:	6022      	str	r2, [r4, #0]
    bf5a:	04db      	lsls	r3, r3, #19
    bf5c:	d447      	bmi.n	bfee <__sflush_r+0x102>
    bf5e:	4643      	mov	r3, r8
    bf60:	6b21      	ldr	r1, [r4, #48]	; 0x30
    bf62:	601d      	str	r5, [r3, #0]
    bf64:	2900      	cmp	r1, #0
    bf66:	d008      	beq.n	bf7a <__sflush_r+0x8e>
    bf68:	0023      	movs	r3, r4
    bf6a:	3340      	adds	r3, #64	; 0x40
    bf6c:	4299      	cmp	r1, r3
    bf6e:	d002      	beq.n	bf76 <__sflush_r+0x8a>
    bf70:	4640      	mov	r0, r8
    bf72:	f000 f967 	bl	c244 <_free_r>
    bf76:	2300      	movs	r3, #0
    bf78:	6323      	str	r3, [r4, #48]	; 0x30
    bf7a:	2000      	movs	r0, #0
    bf7c:	bc04      	pop	{r2}
    bf7e:	4690      	mov	r8, r2
    bf80:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bf82:	6926      	ldr	r6, [r4, #16]
    bf84:	2e00      	cmp	r6, #0
    bf86:	d0f8      	beq.n	bf7a <__sflush_r+0x8e>
    bf88:	6822      	ldr	r2, [r4, #0]
    bf8a:	6026      	str	r6, [r4, #0]
    bf8c:	1b95      	subs	r5, r2, r6
    bf8e:	2200      	movs	r2, #0
    bf90:	079b      	lsls	r3, r3, #30
    bf92:	d100      	bne.n	bf96 <__sflush_r+0xaa>
    bf94:	6962      	ldr	r2, [r4, #20]
    bf96:	60a2      	str	r2, [r4, #8]
    bf98:	2d00      	cmp	r5, #0
    bf9a:	dc04      	bgt.n	bfa6 <__sflush_r+0xba>
    bf9c:	e7ed      	b.n	bf7a <__sflush_r+0x8e>
    bf9e:	1836      	adds	r6, r6, r0
    bfa0:	1a2d      	subs	r5, r5, r0
    bfa2:	2d00      	cmp	r5, #0
    bfa4:	dde9      	ble.n	bf7a <__sflush_r+0x8e>
    bfa6:	002b      	movs	r3, r5
    bfa8:	0032      	movs	r2, r6
    bfaa:	69e1      	ldr	r1, [r4, #28]
    bfac:	4640      	mov	r0, r8
    bfae:	6a67      	ldr	r7, [r4, #36]	; 0x24
    bfb0:	47b8      	blx	r7
    bfb2:	2800      	cmp	r0, #0
    bfb4:	dcf3      	bgt.n	bf9e <__sflush_r+0xb2>
    bfb6:	2240      	movs	r2, #64	; 0x40
    bfb8:	2001      	movs	r0, #1
    bfba:	89a3      	ldrh	r3, [r4, #12]
    bfbc:	4240      	negs	r0, r0
    bfbe:	4313      	orrs	r3, r2
    bfc0:	81a3      	strh	r3, [r4, #12]
    bfc2:	e7db      	b.n	bf7c <__sflush_r+0x90>
    bfc4:	4643      	mov	r3, r8
    bfc6:	6819      	ldr	r1, [r3, #0]
    bfc8:	291d      	cmp	r1, #29
    bfca:	d8f4      	bhi.n	bfb6 <__sflush_r+0xca>
    bfcc:	4b1a      	ldr	r3, [pc, #104]	; (c038 <__sflush_r+0x14c>)
    bfce:	2201      	movs	r2, #1
    bfd0:	40cb      	lsrs	r3, r1
    bfd2:	439a      	bics	r2, r3
    bfd4:	d1ef      	bne.n	bfb6 <__sflush_r+0xca>
    bfd6:	89a3      	ldrh	r3, [r4, #12]
    bfd8:	4e16      	ldr	r6, [pc, #88]	; (c034 <__sflush_r+0x148>)
    bfda:	6062      	str	r2, [r4, #4]
    bfdc:	4033      	ands	r3, r6
    bfde:	6922      	ldr	r2, [r4, #16]
    bfe0:	b21b      	sxth	r3, r3
    bfe2:	81a3      	strh	r3, [r4, #12]
    bfe4:	6022      	str	r2, [r4, #0]
    bfe6:	04db      	lsls	r3, r3, #19
    bfe8:	d5b9      	bpl.n	bf5e <__sflush_r+0x72>
    bfea:	2900      	cmp	r1, #0
    bfec:	d1b7      	bne.n	bf5e <__sflush_r+0x72>
    bfee:	6520      	str	r0, [r4, #80]	; 0x50
    bff0:	e7b5      	b.n	bf5e <__sflush_r+0x72>
    bff2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    bff4:	2a00      	cmp	r2, #0
    bff6:	dd00      	ble.n	bffa <__sflush_r+0x10e>
    bff8:	e78a      	b.n	bf10 <__sflush_r+0x24>
    bffa:	e7be      	b.n	bf7a <__sflush_r+0x8e>
    bffc:	2200      	movs	r2, #0
    bffe:	2301      	movs	r3, #1
    c000:	69e1      	ldr	r1, [r4, #28]
    c002:	4640      	mov	r0, r8
    c004:	47b0      	blx	r6
    c006:	0002      	movs	r2, r0
    c008:	1c43      	adds	r3, r0, #1
    c00a:	d002      	beq.n	c012 <__sflush_r+0x126>
    c00c:	89a3      	ldrh	r3, [r4, #12]
    c00e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    c010:	e78b      	b.n	bf2a <__sflush_r+0x3e>
    c012:	4643      	mov	r3, r8
    c014:	681b      	ldr	r3, [r3, #0]
    c016:	2b00      	cmp	r3, #0
    c018:	d0f8      	beq.n	c00c <__sflush_r+0x120>
    c01a:	2b1d      	cmp	r3, #29
    c01c:	d001      	beq.n	c022 <__sflush_r+0x136>
    c01e:	2b16      	cmp	r3, #22
    c020:	d103      	bne.n	c02a <__sflush_r+0x13e>
    c022:	4643      	mov	r3, r8
    c024:	2000      	movs	r0, #0
    c026:	601d      	str	r5, [r3, #0]
    c028:	e7a8      	b.n	bf7c <__sflush_r+0x90>
    c02a:	2140      	movs	r1, #64	; 0x40
    c02c:	89a3      	ldrh	r3, [r4, #12]
    c02e:	430b      	orrs	r3, r1
    c030:	81a3      	strh	r3, [r4, #12]
    c032:	e7a3      	b.n	bf7c <__sflush_r+0x90>
    c034:	fffff7ff 	.word	0xfffff7ff
    c038:	20400001 	.word	0x20400001

0000c03c <_fflush_r>:
    c03c:	b570      	push	{r4, r5, r6, lr}
    c03e:	0005      	movs	r5, r0
    c040:	000c      	movs	r4, r1
    c042:	2800      	cmp	r0, #0
    c044:	d002      	beq.n	c04c <_fflush_r+0x10>
    c046:	6b83      	ldr	r3, [r0, #56]	; 0x38
    c048:	2b00      	cmp	r3, #0
    c04a:	d016      	beq.n	c07a <_fflush_r+0x3e>
    c04c:	220c      	movs	r2, #12
    c04e:	5ea3      	ldrsh	r3, [r4, r2]
    c050:	2600      	movs	r6, #0
    c052:	2b00      	cmp	r3, #0
    c054:	d00f      	beq.n	c076 <_fflush_r+0x3a>
    c056:	6e62      	ldr	r2, [r4, #100]	; 0x64
    c058:	07d2      	lsls	r2, r2, #31
    c05a:	d401      	bmi.n	c060 <_fflush_r+0x24>
    c05c:	059b      	lsls	r3, r3, #22
    c05e:	d513      	bpl.n	c088 <_fflush_r+0x4c>
    c060:	0021      	movs	r1, r4
    c062:	0028      	movs	r0, r5
    c064:	f7ff ff42 	bl	beec <__sflush_r>
    c068:	6e63      	ldr	r3, [r4, #100]	; 0x64
    c06a:	0006      	movs	r6, r0
    c06c:	07db      	lsls	r3, r3, #31
    c06e:	d402      	bmi.n	c076 <_fflush_r+0x3a>
    c070:	89a3      	ldrh	r3, [r4, #12]
    c072:	059b      	lsls	r3, r3, #22
    c074:	d504      	bpl.n	c080 <_fflush_r+0x44>
    c076:	0030      	movs	r0, r6
    c078:	bd70      	pop	{r4, r5, r6, pc}
    c07a:	f000 f839 	bl	c0f0 <__sinit>
    c07e:	e7e5      	b.n	c04c <_fflush_r+0x10>
    c080:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c082:	f000 fb79 	bl	c778 <__retarget_lock_release_recursive>
    c086:	e7f6      	b.n	c076 <_fflush_r+0x3a>
    c088:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c08a:	f000 fb73 	bl	c774 <__retarget_lock_acquire_recursive>
    c08e:	e7e7      	b.n	c060 <_fflush_r+0x24>

0000c090 <_cleanup_r>:
    c090:	b510      	push	{r4, lr}
    c092:	4902      	ldr	r1, [pc, #8]	; (c09c <_cleanup_r+0xc>)
    c094:	f000 fb36 	bl	c704 <_fwalk_reent>
    c098:	bd10      	pop	{r4, pc}
    c09a:	46c0      	nop			; (mov r8, r8)
    c09c:	0000db1d 	.word	0x0000db1d

0000c0a0 <std.isra.0>:
    c0a0:	2300      	movs	r3, #0
    c0a2:	b510      	push	{r4, lr}
    c0a4:	0004      	movs	r4, r0
    c0a6:	6003      	str	r3, [r0, #0]
    c0a8:	6043      	str	r3, [r0, #4]
    c0aa:	6083      	str	r3, [r0, #8]
    c0ac:	8181      	strh	r1, [r0, #12]
    c0ae:	6643      	str	r3, [r0, #100]	; 0x64
    c0b0:	81c2      	strh	r2, [r0, #14]
    c0b2:	6103      	str	r3, [r0, #16]
    c0b4:	6143      	str	r3, [r0, #20]
    c0b6:	6183      	str	r3, [r0, #24]
    c0b8:	2208      	movs	r2, #8
    c0ba:	2100      	movs	r1, #0
    c0bc:	305c      	adds	r0, #92	; 0x5c
    c0be:	f7fd f917 	bl	92f0 <memset>
    c0c2:	0020      	movs	r0, r4
    c0c4:	4b06      	ldr	r3, [pc, #24]	; (c0e0 <std.isra.0+0x40>)
    c0c6:	61e4      	str	r4, [r4, #28]
    c0c8:	6223      	str	r3, [r4, #32]
    c0ca:	4b06      	ldr	r3, [pc, #24]	; (c0e4 <std.isra.0+0x44>)
    c0cc:	3058      	adds	r0, #88	; 0x58
    c0ce:	6263      	str	r3, [r4, #36]	; 0x24
    c0d0:	4b05      	ldr	r3, [pc, #20]	; (c0e8 <std.isra.0+0x48>)
    c0d2:	62a3      	str	r3, [r4, #40]	; 0x28
    c0d4:	4b05      	ldr	r3, [pc, #20]	; (c0ec <std.isra.0+0x4c>)
    c0d6:	62e3      	str	r3, [r4, #44]	; 0x2c
    c0d8:	f000 fb48 	bl	c76c <__retarget_lock_init_recursive>
    c0dc:	bd10      	pop	{r4, pc}
    c0de:	46c0      	nop			; (mov r8, r8)
    c0e0:	0000d945 	.word	0x0000d945
    c0e4:	0000d96d 	.word	0x0000d96d
    c0e8:	0000d9a9 	.word	0x0000d9a9
    c0ec:	0000d9d5 	.word	0x0000d9d5

0000c0f0 <__sinit>:
    c0f0:	b570      	push	{r4, r5, r6, lr}
    c0f2:	0004      	movs	r4, r0
    c0f4:	4d14      	ldr	r5, [pc, #80]	; (c148 <__sinit+0x58>)
    c0f6:	0028      	movs	r0, r5
    c0f8:	f000 fb3c 	bl	c774 <__retarget_lock_acquire_recursive>
    c0fc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    c0fe:	2b00      	cmp	r3, #0
    c100:	d11d      	bne.n	c13e <__sinit+0x4e>
    c102:	4a12      	ldr	r2, [pc, #72]	; (c14c <__sinit+0x5c>)
    c104:	2104      	movs	r1, #4
    c106:	63e2      	str	r2, [r4, #60]	; 0x3c
    c108:	22b8      	movs	r2, #184	; 0xb8
    c10a:	0092      	lsls	r2, r2, #2
    c10c:	50a3      	str	r3, [r4, r2]
    c10e:	23b9      	movs	r3, #185	; 0xb9
    c110:	2203      	movs	r2, #3
    c112:	009b      	lsls	r3, r3, #2
    c114:	50e2      	str	r2, [r4, r3]
    c116:	3308      	adds	r3, #8
    c118:	18e2      	adds	r2, r4, r3
    c11a:	3b04      	subs	r3, #4
    c11c:	50e2      	str	r2, [r4, r3]
    c11e:	6860      	ldr	r0, [r4, #4]
    c120:	2200      	movs	r2, #0
    c122:	f7ff ffbd 	bl	c0a0 <std.isra.0>
    c126:	2201      	movs	r2, #1
    c128:	2109      	movs	r1, #9
    c12a:	68a0      	ldr	r0, [r4, #8]
    c12c:	f7ff ffb8 	bl	c0a0 <std.isra.0>
    c130:	2202      	movs	r2, #2
    c132:	2112      	movs	r1, #18
    c134:	68e0      	ldr	r0, [r4, #12]
    c136:	f7ff ffb3 	bl	c0a0 <std.isra.0>
    c13a:	2301      	movs	r3, #1
    c13c:	63a3      	str	r3, [r4, #56]	; 0x38
    c13e:	0028      	movs	r0, r5
    c140:	f000 fb1a 	bl	c778 <__retarget_lock_release_recursive>
    c144:	bd70      	pop	{r4, r5, r6, pc}
    c146:	46c0      	nop			; (mov r8, r8)
    c148:	200011d4 	.word	0x200011d4
    c14c:	0000c091 	.word	0x0000c091

0000c150 <__sfp_lock_acquire>:
    c150:	b510      	push	{r4, lr}
    c152:	4802      	ldr	r0, [pc, #8]	; (c15c <__sfp_lock_acquire+0xc>)
    c154:	f000 fb0e 	bl	c774 <__retarget_lock_acquire_recursive>
    c158:	bd10      	pop	{r4, pc}
    c15a:	46c0      	nop			; (mov r8, r8)
    c15c:	200011e8 	.word	0x200011e8

0000c160 <__sfp_lock_release>:
    c160:	b510      	push	{r4, lr}
    c162:	4802      	ldr	r0, [pc, #8]	; (c16c <__sfp_lock_release+0xc>)
    c164:	f000 fb08 	bl	c778 <__retarget_lock_release_recursive>
    c168:	bd10      	pop	{r4, pc}
    c16a:	46c0      	nop			; (mov r8, r8)
    c16c:	200011e8 	.word	0x200011e8

0000c170 <__libc_fini_array>:
    c170:	b570      	push	{r4, r5, r6, lr}
    c172:	4b09      	ldr	r3, [pc, #36]	; (c198 <__libc_fini_array+0x28>)
    c174:	4c09      	ldr	r4, [pc, #36]	; (c19c <__libc_fini_array+0x2c>)
    c176:	1ae4      	subs	r4, r4, r3
    c178:	10a4      	asrs	r4, r4, #2
    c17a:	d009      	beq.n	c190 <__libc_fini_array+0x20>
    c17c:	4a08      	ldr	r2, [pc, #32]	; (c1a0 <__libc_fini_array+0x30>)
    c17e:	18a5      	adds	r5, r4, r2
    c180:	00ad      	lsls	r5, r5, #2
    c182:	18ed      	adds	r5, r5, r3
    c184:	682b      	ldr	r3, [r5, #0]
    c186:	3c01      	subs	r4, #1
    c188:	4798      	blx	r3
    c18a:	3d04      	subs	r5, #4
    c18c:	2c00      	cmp	r4, #0
    c18e:	d1f9      	bne.n	c184 <__libc_fini_array+0x14>
    c190:	f002 fb30 	bl	e7f4 <_fini>
    c194:	bd70      	pop	{r4, r5, r6, pc}
    c196:	46c0      	nop			; (mov r8, r8)
    c198:	0000e800 	.word	0x0000e800
    c19c:	0000e804 	.word	0x0000e804
    c1a0:	3fffffff 	.word	0x3fffffff

0000c1a4 <_malloc_trim_r>:
    c1a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    c1a6:	000c      	movs	r4, r1
    c1a8:	0006      	movs	r6, r0
    c1aa:	f000 fea3 	bl	cef4 <__malloc_lock>
    c1ae:	4f20      	ldr	r7, [pc, #128]	; (c230 <_malloc_trim_r+0x8c>)
    c1b0:	68bb      	ldr	r3, [r7, #8]
    c1b2:	685d      	ldr	r5, [r3, #4]
    c1b4:	2303      	movs	r3, #3
    c1b6:	439d      	bics	r5, r3
    c1b8:	4b1e      	ldr	r3, [pc, #120]	; (c234 <_malloc_trim_r+0x90>)
    c1ba:	1b2c      	subs	r4, r5, r4
    c1bc:	469c      	mov	ip, r3
    c1be:	4464      	add	r4, ip
    c1c0:	0b24      	lsrs	r4, r4, #12
    c1c2:	4b1d      	ldr	r3, [pc, #116]	; (c238 <_malloc_trim_r+0x94>)
    c1c4:	3c01      	subs	r4, #1
    c1c6:	0324      	lsls	r4, r4, #12
    c1c8:	429c      	cmp	r4, r3
    c1ca:	dd07      	ble.n	c1dc <_malloc_trim_r+0x38>
    c1cc:	2100      	movs	r1, #0
    c1ce:	0030      	movs	r0, r6
    c1d0:	f001 fba6 	bl	d920 <_sbrk_r>
    c1d4:	68bb      	ldr	r3, [r7, #8]
    c1d6:	195b      	adds	r3, r3, r5
    c1d8:	4298      	cmp	r0, r3
    c1da:	d004      	beq.n	c1e6 <_malloc_trim_r+0x42>
    c1dc:	0030      	movs	r0, r6
    c1de:	f000 fe91 	bl	cf04 <__malloc_unlock>
    c1e2:	2000      	movs	r0, #0
    c1e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    c1e6:	4261      	negs	r1, r4
    c1e8:	0030      	movs	r0, r6
    c1ea:	f001 fb99 	bl	d920 <_sbrk_r>
    c1ee:	1c43      	adds	r3, r0, #1
    c1f0:	d00d      	beq.n	c20e <_malloc_trim_r+0x6a>
    c1f2:	2201      	movs	r2, #1
    c1f4:	68bb      	ldr	r3, [r7, #8]
    c1f6:	1b2d      	subs	r5, r5, r4
    c1f8:	4315      	orrs	r5, r2
    c1fa:	605d      	str	r5, [r3, #4]
    c1fc:	4b0f      	ldr	r3, [pc, #60]	; (c23c <_malloc_trim_r+0x98>)
    c1fe:	0030      	movs	r0, r6
    c200:	681a      	ldr	r2, [r3, #0]
    c202:	1b14      	subs	r4, r2, r4
    c204:	601c      	str	r4, [r3, #0]
    c206:	f000 fe7d 	bl	cf04 <__malloc_unlock>
    c20a:	2001      	movs	r0, #1
    c20c:	e7ea      	b.n	c1e4 <_malloc_trim_r+0x40>
    c20e:	2100      	movs	r1, #0
    c210:	0030      	movs	r0, r6
    c212:	f001 fb85 	bl	d920 <_sbrk_r>
    c216:	68ba      	ldr	r2, [r7, #8]
    c218:	1a83      	subs	r3, r0, r2
    c21a:	2b0f      	cmp	r3, #15
    c21c:	ddde      	ble.n	c1dc <_malloc_trim_r+0x38>
    c21e:	4908      	ldr	r1, [pc, #32]	; (c240 <_malloc_trim_r+0x9c>)
    c220:	6809      	ldr	r1, [r1, #0]
    c222:	1a40      	subs	r0, r0, r1
    c224:	4905      	ldr	r1, [pc, #20]	; (c23c <_malloc_trim_r+0x98>)
    c226:	6008      	str	r0, [r1, #0]
    c228:	2101      	movs	r1, #1
    c22a:	430b      	orrs	r3, r1
    c22c:	6053      	str	r3, [r2, #4]
    c22e:	e7d5      	b.n	c1dc <_malloc_trim_r+0x38>
    c230:	200004a4 	.word	0x200004a4
    c234:	00000fef 	.word	0x00000fef
    c238:	00000fff 	.word	0x00000fff
    c23c:	200010b4 	.word	0x200010b4
    c240:	200008ac 	.word	0x200008ac

0000c244 <_free_r>:
    c244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    c246:	0004      	movs	r4, r0
    c248:	1e0d      	subs	r5, r1, #0
    c24a:	d03c      	beq.n	c2c6 <_free_r+0x82>
    c24c:	f000 fe52 	bl	cef4 <__malloc_lock>
    c250:	0029      	movs	r1, r5
    c252:	3908      	subs	r1, #8
    c254:	6848      	ldr	r0, [r1, #4]
    c256:	2301      	movs	r3, #1
    c258:	0005      	movs	r5, r0
    c25a:	2603      	movs	r6, #3
    c25c:	439d      	bics	r5, r3
    c25e:	194a      	adds	r2, r1, r5
    c260:	469c      	mov	ip, r3
    c262:	4f61      	ldr	r7, [pc, #388]	; (c3e8 <_free_r+0x1a4>)
    c264:	6853      	ldr	r3, [r2, #4]
    c266:	43b3      	bics	r3, r6
    c268:	68be      	ldr	r6, [r7, #8]
    c26a:	42b2      	cmp	r2, r6
    c26c:	d056      	beq.n	c31c <_free_r+0xd8>
    c26e:	4666      	mov	r6, ip
    c270:	6053      	str	r3, [r2, #4]
    c272:	4206      	tst	r6, r0
    c274:	d10a      	bne.n	c28c <_free_r+0x48>
    c276:	003e      	movs	r6, r7
    c278:	6808      	ldr	r0, [r1, #0]
    c27a:	3608      	adds	r6, #8
    c27c:	1a09      	subs	r1, r1, r0
    c27e:	182d      	adds	r5, r5, r0
    c280:	6888      	ldr	r0, [r1, #8]
    c282:	42b0      	cmp	r0, r6
    c284:	d065      	beq.n	c352 <_free_r+0x10e>
    c286:	68ce      	ldr	r6, [r1, #12]
    c288:	60c6      	str	r6, [r0, #12]
    c28a:	60b0      	str	r0, [r6, #8]
    c28c:	2001      	movs	r0, #1
    c28e:	18d6      	adds	r6, r2, r3
    c290:	6876      	ldr	r6, [r6, #4]
    c292:	4206      	tst	r6, r0
    c294:	d033      	beq.n	c2fe <_free_r+0xba>
    c296:	4b55      	ldr	r3, [pc, #340]	; (c3ec <_free_r+0x1a8>)
    c298:	4328      	orrs	r0, r5
    c29a:	6048      	str	r0, [r1, #4]
    c29c:	514d      	str	r5, [r1, r5]
    c29e:	429d      	cmp	r5, r3
    c2a0:	d812      	bhi.n	c2c8 <_free_r+0x84>
    c2a2:	08ed      	lsrs	r5, r5, #3
    c2a4:	3bff      	subs	r3, #255	; 0xff
    c2a6:	10aa      	asrs	r2, r5, #2
    c2a8:	3bff      	subs	r3, #255	; 0xff
    c2aa:	4093      	lsls	r3, r2
    c2ac:	687a      	ldr	r2, [r7, #4]
    c2ae:	00ed      	lsls	r5, r5, #3
    c2b0:	4313      	orrs	r3, r2
    c2b2:	607b      	str	r3, [r7, #4]
    c2b4:	19ef      	adds	r7, r5, r7
    c2b6:	68bb      	ldr	r3, [r7, #8]
    c2b8:	60cf      	str	r7, [r1, #12]
    c2ba:	608b      	str	r3, [r1, #8]
    c2bc:	60b9      	str	r1, [r7, #8]
    c2be:	60d9      	str	r1, [r3, #12]
    c2c0:	0020      	movs	r0, r4
    c2c2:	f000 fe1f 	bl	cf04 <__malloc_unlock>
    c2c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    c2c8:	0a68      	lsrs	r0, r5, #9
    c2ca:	2804      	cmp	r0, #4
    c2cc:	d850      	bhi.n	c370 <_free_r+0x12c>
    c2ce:	09a8      	lsrs	r0, r5, #6
    c2d0:	0002      	movs	r2, r0
    c2d2:	3039      	adds	r0, #57	; 0x39
    c2d4:	3238      	adds	r2, #56	; 0x38
    c2d6:	00c0      	lsls	r0, r0, #3
    c2d8:	1838      	adds	r0, r7, r0
    c2da:	3808      	subs	r0, #8
    c2dc:	6883      	ldr	r3, [r0, #8]
    c2de:	2603      	movs	r6, #3
    c2e0:	4298      	cmp	r0, r3
    c2e2:	d04c      	beq.n	c37e <_free_r+0x13a>
    c2e4:	685a      	ldr	r2, [r3, #4]
    c2e6:	43b2      	bics	r2, r6
    c2e8:	4295      	cmp	r5, r2
    c2ea:	d230      	bcs.n	c34e <_free_r+0x10a>
    c2ec:	689b      	ldr	r3, [r3, #8]
    c2ee:	4298      	cmp	r0, r3
    c2f0:	d1f8      	bne.n	c2e4 <_free_r+0xa0>
    c2f2:	68c3      	ldr	r3, [r0, #12]
    c2f4:	60cb      	str	r3, [r1, #12]
    c2f6:	6088      	str	r0, [r1, #8]
    c2f8:	6099      	str	r1, [r3, #8]
    c2fa:	60c1      	str	r1, [r0, #12]
    c2fc:	e7e0      	b.n	c2c0 <_free_r+0x7c>
    c2fe:	18ed      	adds	r5, r5, r3
    c300:	4e3b      	ldr	r6, [pc, #236]	; (c3f0 <_free_r+0x1ac>)
    c302:	6893      	ldr	r3, [r2, #8]
    c304:	42b3      	cmp	r3, r6
    c306:	d042      	beq.n	c38e <_free_r+0x14a>
    c308:	68d2      	ldr	r2, [r2, #12]
    c30a:	4328      	orrs	r0, r5
    c30c:	60da      	str	r2, [r3, #12]
    c30e:	6093      	str	r3, [r2, #8]
    c310:	4b36      	ldr	r3, [pc, #216]	; (c3ec <_free_r+0x1a8>)
    c312:	6048      	str	r0, [r1, #4]
    c314:	514d      	str	r5, [r1, r5]
    c316:	429d      	cmp	r5, r3
    c318:	d8d6      	bhi.n	c2c8 <_free_r+0x84>
    c31a:	e7c2      	b.n	c2a2 <_free_r+0x5e>
    c31c:	4662      	mov	r2, ip
    c31e:	18eb      	adds	r3, r5, r3
    c320:	4202      	tst	r2, r0
    c322:	d106      	bne.n	c332 <_free_r+0xee>
    c324:	680a      	ldr	r2, [r1, #0]
    c326:	1a89      	subs	r1, r1, r2
    c328:	6888      	ldr	r0, [r1, #8]
    c32a:	189b      	adds	r3, r3, r2
    c32c:	68ca      	ldr	r2, [r1, #12]
    c32e:	60c2      	str	r2, [r0, #12]
    c330:	6090      	str	r0, [r2, #8]
    c332:	2201      	movs	r2, #1
    c334:	431a      	orrs	r2, r3
    c336:	604a      	str	r2, [r1, #4]
    c338:	4a2e      	ldr	r2, [pc, #184]	; (c3f4 <_free_r+0x1b0>)
    c33a:	60b9      	str	r1, [r7, #8]
    c33c:	6812      	ldr	r2, [r2, #0]
    c33e:	4293      	cmp	r3, r2
    c340:	d3be      	bcc.n	c2c0 <_free_r+0x7c>
    c342:	4b2d      	ldr	r3, [pc, #180]	; (c3f8 <_free_r+0x1b4>)
    c344:	0020      	movs	r0, r4
    c346:	6819      	ldr	r1, [r3, #0]
    c348:	f7ff ff2c 	bl	c1a4 <_malloc_trim_r>
    c34c:	e7b8      	b.n	c2c0 <_free_r+0x7c>
    c34e:	0018      	movs	r0, r3
    c350:	e7cf      	b.n	c2f2 <_free_r+0xae>
    c352:	4666      	mov	r6, ip
    c354:	18d0      	adds	r0, r2, r3
    c356:	6840      	ldr	r0, [r0, #4]
    c358:	4230      	tst	r0, r6
    c35a:	d13f      	bne.n	c3dc <_free_r+0x198>
    c35c:	6890      	ldr	r0, [r2, #8]
    c35e:	195d      	adds	r5, r3, r5
    c360:	68d3      	ldr	r3, [r2, #12]
    c362:	60c3      	str	r3, [r0, #12]
    c364:	6098      	str	r0, [r3, #8]
    c366:	4663      	mov	r3, ip
    c368:	432b      	orrs	r3, r5
    c36a:	604b      	str	r3, [r1, #4]
    c36c:	514d      	str	r5, [r1, r5]
    c36e:	e7a7      	b.n	c2c0 <_free_r+0x7c>
    c370:	2814      	cmp	r0, #20
    c372:	d814      	bhi.n	c39e <_free_r+0x15a>
    c374:	0002      	movs	r2, r0
    c376:	305c      	adds	r0, #92	; 0x5c
    c378:	325b      	adds	r2, #91	; 0x5b
    c37a:	00c0      	lsls	r0, r0, #3
    c37c:	e7ac      	b.n	c2d8 <_free_r+0x94>
    c37e:	2301      	movs	r3, #1
    c380:	1092      	asrs	r2, r2, #2
    c382:	4093      	lsls	r3, r2
    c384:	687a      	ldr	r2, [r7, #4]
    c386:	4313      	orrs	r3, r2
    c388:	607b      	str	r3, [r7, #4]
    c38a:	0003      	movs	r3, r0
    c38c:	e7b2      	b.n	c2f4 <_free_r+0xb0>
    c38e:	4328      	orrs	r0, r5
    c390:	60d9      	str	r1, [r3, #12]
    c392:	6099      	str	r1, [r3, #8]
    c394:	60cb      	str	r3, [r1, #12]
    c396:	608b      	str	r3, [r1, #8]
    c398:	6048      	str	r0, [r1, #4]
    c39a:	514d      	str	r5, [r1, r5]
    c39c:	e790      	b.n	c2c0 <_free_r+0x7c>
    c39e:	2854      	cmp	r0, #84	; 0x54
    c3a0:	d805      	bhi.n	c3ae <_free_r+0x16a>
    c3a2:	0b28      	lsrs	r0, r5, #12
    c3a4:	0002      	movs	r2, r0
    c3a6:	306f      	adds	r0, #111	; 0x6f
    c3a8:	326e      	adds	r2, #110	; 0x6e
    c3aa:	00c0      	lsls	r0, r0, #3
    c3ac:	e794      	b.n	c2d8 <_free_r+0x94>
    c3ae:	22aa      	movs	r2, #170	; 0xaa
    c3b0:	0052      	lsls	r2, r2, #1
    c3b2:	4290      	cmp	r0, r2
    c3b4:	d805      	bhi.n	c3c2 <_free_r+0x17e>
    c3b6:	0be8      	lsrs	r0, r5, #15
    c3b8:	0002      	movs	r2, r0
    c3ba:	3078      	adds	r0, #120	; 0x78
    c3bc:	3277      	adds	r2, #119	; 0x77
    c3be:	00c0      	lsls	r0, r0, #3
    c3c0:	e78a      	b.n	c2d8 <_free_r+0x94>
    c3c2:	4a0e      	ldr	r2, [pc, #56]	; (c3fc <_free_r+0x1b8>)
    c3c4:	4290      	cmp	r0, r2
    c3c6:	d805      	bhi.n	c3d4 <_free_r+0x190>
    c3c8:	0ca8      	lsrs	r0, r5, #18
    c3ca:	0002      	movs	r2, r0
    c3cc:	307d      	adds	r0, #125	; 0x7d
    c3ce:	327c      	adds	r2, #124	; 0x7c
    c3d0:	00c0      	lsls	r0, r0, #3
    c3d2:	e781      	b.n	c2d8 <_free_r+0x94>
    c3d4:	20fe      	movs	r0, #254	; 0xfe
    c3d6:	227e      	movs	r2, #126	; 0x7e
    c3d8:	0080      	lsls	r0, r0, #2
    c3da:	e77d      	b.n	c2d8 <_free_r+0x94>
    c3dc:	4663      	mov	r3, ip
    c3de:	432b      	orrs	r3, r5
    c3e0:	604b      	str	r3, [r1, #4]
    c3e2:	6015      	str	r5, [r2, #0]
    c3e4:	e76c      	b.n	c2c0 <_free_r+0x7c>
    c3e6:	46c0      	nop			; (mov r8, r8)
    c3e8:	200004a4 	.word	0x200004a4
    c3ec:	000001ff 	.word	0x000001ff
    c3f0:	200004ac 	.word	0x200004ac
    c3f4:	200008b0 	.word	0x200008b0
    c3f8:	200010e4 	.word	0x200010e4
    c3fc:	00000554 	.word	0x00000554

0000c400 <__sfvwrite_r>:
    c400:	b5f0      	push	{r4, r5, r6, r7, lr}
    c402:	464e      	mov	r6, r9
    c404:	46de      	mov	lr, fp
    c406:	4657      	mov	r7, sl
    c408:	4645      	mov	r5, r8
    c40a:	b5e0      	push	{r5, r6, r7, lr}
    c40c:	6893      	ldr	r3, [r2, #8]
    c40e:	b083      	sub	sp, #12
    c410:	9000      	str	r0, [sp, #0]
    c412:	000c      	movs	r4, r1
    c414:	0016      	movs	r6, r2
    c416:	2b00      	cmp	r3, #0
    c418:	d025      	beq.n	c466 <__sfvwrite_r+0x66>
    c41a:	898b      	ldrh	r3, [r1, #12]
    c41c:	071a      	lsls	r2, r3, #28
    c41e:	d52a      	bpl.n	c476 <__sfvwrite_r+0x76>
    c420:	690a      	ldr	r2, [r1, #16]
    c422:	2a00      	cmp	r2, #0
    c424:	d027      	beq.n	c476 <__sfvwrite_r+0x76>
    c426:	6832      	ldr	r2, [r6, #0]
    c428:	4693      	mov	fp, r2
    c42a:	079a      	lsls	r2, r3, #30
    c42c:	d52f      	bpl.n	c48e <__sfvwrite_r+0x8e>
    c42e:	4bb2      	ldr	r3, [pc, #712]	; (c6f8 <__sfvwrite_r+0x2f8>)
    c430:	2700      	movs	r7, #0
    c432:	2500      	movs	r5, #0
    c434:	4698      	mov	r8, r3
    c436:	46b1      	mov	r9, r6
    c438:	2d00      	cmp	r5, #0
    c43a:	d100      	bne.n	c43e <__sfvwrite_r+0x3e>
    c43c:	e072      	b.n	c524 <__sfvwrite_r+0x124>
    c43e:	002b      	movs	r3, r5
    c440:	4545      	cmp	r5, r8
    c442:	d900      	bls.n	c446 <__sfvwrite_r+0x46>
    c444:	4bac      	ldr	r3, [pc, #688]	; (c6f8 <__sfvwrite_r+0x2f8>)
    c446:	003a      	movs	r2, r7
    c448:	69e1      	ldr	r1, [r4, #28]
    c44a:	9800      	ldr	r0, [sp, #0]
    c44c:	6a66      	ldr	r6, [r4, #36]	; 0x24
    c44e:	47b0      	blx	r6
    c450:	2800      	cmp	r0, #0
    c452:	dc00      	bgt.n	c456 <__sfvwrite_r+0x56>
    c454:	e073      	b.n	c53e <__sfvwrite_r+0x13e>
    c456:	464b      	mov	r3, r9
    c458:	689b      	ldr	r3, [r3, #8]
    c45a:	183f      	adds	r7, r7, r0
    c45c:	1a2d      	subs	r5, r5, r0
    c45e:	1a18      	subs	r0, r3, r0
    c460:	464b      	mov	r3, r9
    c462:	6098      	str	r0, [r3, #8]
    c464:	d1e8      	bne.n	c438 <__sfvwrite_r+0x38>
    c466:	2000      	movs	r0, #0
    c468:	b003      	add	sp, #12
    c46a:	bc3c      	pop	{r2, r3, r4, r5}
    c46c:	4690      	mov	r8, r2
    c46e:	4699      	mov	r9, r3
    c470:	46a2      	mov	sl, r4
    c472:	46ab      	mov	fp, r5
    c474:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c476:	0021      	movs	r1, r4
    c478:	9800      	ldr	r0, [sp, #0]
    c47a:	f7fe fbd1 	bl	ac20 <__swsetup_r>
    c47e:	2800      	cmp	r0, #0
    c480:	d000      	beq.n	c484 <__sfvwrite_r+0x84>
    c482:	e130      	b.n	c6e6 <__sfvwrite_r+0x2e6>
    c484:	6832      	ldr	r2, [r6, #0]
    c486:	89a3      	ldrh	r3, [r4, #12]
    c488:	4693      	mov	fp, r2
    c48a:	079a      	lsls	r2, r3, #30
    c48c:	d4cf      	bmi.n	c42e <__sfvwrite_r+0x2e>
    c48e:	07da      	lsls	r2, r3, #31
    c490:	d55d      	bpl.n	c54e <__sfvwrite_r+0x14e>
    c492:	2300      	movs	r3, #0
    c494:	2000      	movs	r0, #0
    c496:	469a      	mov	sl, r3
    c498:	2700      	movs	r7, #0
    c49a:	001d      	movs	r5, r3
    c49c:	46b1      	mov	r9, r6
    c49e:	e029      	b.n	c4f4 <__sfvwrite_r+0xf4>
    c4a0:	2800      	cmp	r0, #0
    c4a2:	d033      	beq.n	c50c <__sfvwrite_r+0x10c>
    c4a4:	46a8      	mov	r8, r5
    c4a6:	42bd      	cmp	r5, r7
    c4a8:	d900      	bls.n	c4ac <__sfvwrite_r+0xac>
    c4aa:	46b8      	mov	r8, r7
    c4ac:	6820      	ldr	r0, [r4, #0]
    c4ae:	6922      	ldr	r2, [r4, #16]
    c4b0:	4646      	mov	r6, r8
    c4b2:	6963      	ldr	r3, [r4, #20]
    c4b4:	4290      	cmp	r0, r2
    c4b6:	d907      	bls.n	c4c8 <__sfvwrite_r+0xc8>
    c4b8:	68a2      	ldr	r2, [r4, #8]
    c4ba:	4694      	mov	ip, r2
    c4bc:	449c      	add	ip, r3
    c4be:	4662      	mov	r2, ip
    c4c0:	9201      	str	r2, [sp, #4]
    c4c2:	45e0      	cmp	r8, ip
    c4c4:	dd00      	ble.n	c4c8 <__sfvwrite_r+0xc8>
    c4c6:	e0e9      	b.n	c69c <__sfvwrite_r+0x29c>
    c4c8:	4598      	cmp	r8, r3
    c4ca:	da00      	bge.n	c4ce <__sfvwrite_r+0xce>
    c4cc:	e08f      	b.n	c5ee <__sfvwrite_r+0x1ee>
    c4ce:	6a66      	ldr	r6, [r4, #36]	; 0x24
    c4d0:	4652      	mov	r2, sl
    c4d2:	69e1      	ldr	r1, [r4, #28]
    c4d4:	9800      	ldr	r0, [sp, #0]
    c4d6:	47b0      	blx	r6
    c4d8:	1e06      	subs	r6, r0, #0
    c4da:	dd30      	ble.n	c53e <__sfvwrite_r+0x13e>
    c4dc:	1bad      	subs	r5, r5, r6
    c4de:	2001      	movs	r0, #1
    c4e0:	2d00      	cmp	r5, #0
    c4e2:	d026      	beq.n	c532 <__sfvwrite_r+0x132>
    c4e4:	464b      	mov	r3, r9
    c4e6:	689b      	ldr	r3, [r3, #8]
    c4e8:	44b2      	add	sl, r6
    c4ea:	1bbf      	subs	r7, r7, r6
    c4ec:	1b9e      	subs	r6, r3, r6
    c4ee:	464b      	mov	r3, r9
    c4f0:	609e      	str	r6, [r3, #8]
    c4f2:	d0b8      	beq.n	c466 <__sfvwrite_r+0x66>
    c4f4:	2f00      	cmp	r7, #0
    c4f6:	d1d3      	bne.n	c4a0 <__sfvwrite_r+0xa0>
    c4f8:	465b      	mov	r3, fp
    c4fa:	681b      	ldr	r3, [r3, #0]
    c4fc:	469a      	mov	sl, r3
    c4fe:	465b      	mov	r3, fp
    c500:	685f      	ldr	r7, [r3, #4]
    c502:	2308      	movs	r3, #8
    c504:	469c      	mov	ip, r3
    c506:	44e3      	add	fp, ip
    c508:	2f00      	cmp	r7, #0
    c50a:	d0f5      	beq.n	c4f8 <__sfvwrite_r+0xf8>
    c50c:	003a      	movs	r2, r7
    c50e:	210a      	movs	r1, #10
    c510:	4650      	mov	r0, sl
    c512:	f000 fc5f 	bl	cdd4 <memchr>
    c516:	2800      	cmp	r0, #0
    c518:	d100      	bne.n	c51c <__sfvwrite_r+0x11c>
    c51a:	e0e2      	b.n	c6e2 <__sfvwrite_r+0x2e2>
    c51c:	4653      	mov	r3, sl
    c51e:	3001      	adds	r0, #1
    c520:	1ac5      	subs	r5, r0, r3
    c522:	e7bf      	b.n	c4a4 <__sfvwrite_r+0xa4>
    c524:	465b      	mov	r3, fp
    c526:	681f      	ldr	r7, [r3, #0]
    c528:	685d      	ldr	r5, [r3, #4]
    c52a:	2308      	movs	r3, #8
    c52c:	469c      	mov	ip, r3
    c52e:	44e3      	add	fp, ip
    c530:	e782      	b.n	c438 <__sfvwrite_r+0x38>
    c532:	0021      	movs	r1, r4
    c534:	9800      	ldr	r0, [sp, #0]
    c536:	f7ff fd81 	bl	c03c <_fflush_r>
    c53a:	2800      	cmp	r0, #0
    c53c:	d0d2      	beq.n	c4e4 <__sfvwrite_r+0xe4>
    c53e:	220c      	movs	r2, #12
    c540:	5ea3      	ldrsh	r3, [r4, r2]
    c542:	2240      	movs	r2, #64	; 0x40
    c544:	2001      	movs	r0, #1
    c546:	4313      	orrs	r3, r2
    c548:	81a3      	strh	r3, [r4, #12]
    c54a:	4240      	negs	r0, r0
    c54c:	e78c      	b.n	c468 <__sfvwrite_r+0x68>
    c54e:	2200      	movs	r2, #0
    c550:	4691      	mov	r9, r2
    c552:	464d      	mov	r5, r9
    c554:	2d00      	cmp	r5, #0
    c556:	d023      	beq.n	c5a0 <__sfvwrite_r+0x1a0>
    c558:	68a2      	ldr	r2, [r4, #8]
    c55a:	4690      	mov	r8, r2
    c55c:	2280      	movs	r2, #128	; 0x80
    c55e:	0092      	lsls	r2, r2, #2
    c560:	4213      	tst	r3, r2
    c562:	d026      	beq.n	c5b2 <__sfvwrite_r+0x1b2>
    c564:	46c2      	mov	sl, r8
    c566:	4545      	cmp	r5, r8
    c568:	d34d      	bcc.n	c606 <__sfvwrite_r+0x206>
    c56a:	2290      	movs	r2, #144	; 0x90
    c56c:	00d2      	lsls	r2, r2, #3
    c56e:	4213      	tst	r3, r2
    c570:	d14e      	bne.n	c610 <__sfvwrite_r+0x210>
    c572:	002f      	movs	r7, r5
    c574:	6820      	ldr	r0, [r4, #0]
    c576:	4652      	mov	r2, sl
    c578:	4649      	mov	r1, r9
    c57a:	f000 fc6b 	bl	ce54 <memmove>
    c57e:	4642      	mov	r2, r8
    c580:	68a3      	ldr	r3, [r4, #8]
    c582:	1a98      	subs	r0, r3, r2
    c584:	6823      	ldr	r3, [r4, #0]
    c586:	60a0      	str	r0, [r4, #8]
    c588:	4453      	add	r3, sl
    c58a:	6023      	str	r3, [r4, #0]
    c58c:	68b3      	ldr	r3, [r6, #8]
    c58e:	44b9      	add	r9, r7
    c590:	1bed      	subs	r5, r5, r7
    c592:	1bdf      	subs	r7, r3, r7
    c594:	60b7      	str	r7, [r6, #8]
    c596:	d100      	bne.n	c59a <__sfvwrite_r+0x19a>
    c598:	e765      	b.n	c466 <__sfvwrite_r+0x66>
    c59a:	89a3      	ldrh	r3, [r4, #12]
    c59c:	2d00      	cmp	r5, #0
    c59e:	d1db      	bne.n	c558 <__sfvwrite_r+0x158>
    c5a0:	465a      	mov	r2, fp
    c5a2:	6812      	ldr	r2, [r2, #0]
    c5a4:	4691      	mov	r9, r2
    c5a6:	465a      	mov	r2, fp
    c5a8:	6855      	ldr	r5, [r2, #4]
    c5aa:	2208      	movs	r2, #8
    c5ac:	4694      	mov	ip, r2
    c5ae:	44e3      	add	fp, ip
    c5b0:	e7d0      	b.n	c554 <__sfvwrite_r+0x154>
    c5b2:	6820      	ldr	r0, [r4, #0]
    c5b4:	6923      	ldr	r3, [r4, #16]
    c5b6:	4298      	cmp	r0, r3
    c5b8:	d802      	bhi.n	c5c0 <__sfvwrite_r+0x1c0>
    c5ba:	6967      	ldr	r7, [r4, #20]
    c5bc:	42bd      	cmp	r5, r7
    c5be:	d259      	bcs.n	c674 <__sfvwrite_r+0x274>
    c5c0:	4647      	mov	r7, r8
    c5c2:	42af      	cmp	r7, r5
    c5c4:	d900      	bls.n	c5c8 <__sfvwrite_r+0x1c8>
    c5c6:	002f      	movs	r7, r5
    c5c8:	003a      	movs	r2, r7
    c5ca:	4649      	mov	r1, r9
    c5cc:	f000 fc42 	bl	ce54 <memmove>
    c5d0:	68a3      	ldr	r3, [r4, #8]
    c5d2:	6822      	ldr	r2, [r4, #0]
    c5d4:	1bdb      	subs	r3, r3, r7
    c5d6:	19d2      	adds	r2, r2, r7
    c5d8:	60a3      	str	r3, [r4, #8]
    c5da:	6022      	str	r2, [r4, #0]
    c5dc:	2b00      	cmp	r3, #0
    c5de:	d1d5      	bne.n	c58c <__sfvwrite_r+0x18c>
    c5e0:	0021      	movs	r1, r4
    c5e2:	9800      	ldr	r0, [sp, #0]
    c5e4:	f7ff fd2a 	bl	c03c <_fflush_r>
    c5e8:	2800      	cmp	r0, #0
    c5ea:	d0cf      	beq.n	c58c <__sfvwrite_r+0x18c>
    c5ec:	e7a7      	b.n	c53e <__sfvwrite_r+0x13e>
    c5ee:	4642      	mov	r2, r8
    c5f0:	4651      	mov	r1, sl
    c5f2:	f000 fc2f 	bl	ce54 <memmove>
    c5f6:	4642      	mov	r2, r8
    c5f8:	68a3      	ldr	r3, [r4, #8]
    c5fa:	1a9b      	subs	r3, r3, r2
    c5fc:	60a3      	str	r3, [r4, #8]
    c5fe:	6823      	ldr	r3, [r4, #0]
    c600:	4443      	add	r3, r8
    c602:	6023      	str	r3, [r4, #0]
    c604:	e76a      	b.n	c4dc <__sfvwrite_r+0xdc>
    c606:	46a8      	mov	r8, r5
    c608:	6820      	ldr	r0, [r4, #0]
    c60a:	002f      	movs	r7, r5
    c60c:	46aa      	mov	sl, r5
    c60e:	e7b2      	b.n	c576 <__sfvwrite_r+0x176>
    c610:	6921      	ldr	r1, [r4, #16]
    c612:	6822      	ldr	r2, [r4, #0]
    c614:	1a52      	subs	r2, r2, r1
    c616:	4692      	mov	sl, r2
    c618:	6962      	ldr	r2, [r4, #20]
    c61a:	0057      	lsls	r7, r2, #1
    c61c:	18bf      	adds	r7, r7, r2
    c61e:	0ffa      	lsrs	r2, r7, #31
    c620:	19d7      	adds	r7, r2, r7
    c622:	4652      	mov	r2, sl
    c624:	1c50      	adds	r0, r2, #1
    c626:	107f      	asrs	r7, r7, #1
    c628:	1940      	adds	r0, r0, r5
    c62a:	003a      	movs	r2, r7
    c62c:	42b8      	cmp	r0, r7
    c62e:	d901      	bls.n	c634 <__sfvwrite_r+0x234>
    c630:	0007      	movs	r7, r0
    c632:	0002      	movs	r2, r0
    c634:	055b      	lsls	r3, r3, #21
    c636:	d542      	bpl.n	c6be <__sfvwrite_r+0x2be>
    c638:	0011      	movs	r1, r2
    c63a:	9800      	ldr	r0, [sp, #0]
    c63c:	f000 f916 	bl	c86c <_malloc_r>
    c640:	4680      	mov	r8, r0
    c642:	1e03      	subs	r3, r0, #0
    c644:	d052      	beq.n	c6ec <__sfvwrite_r+0x2ec>
    c646:	4652      	mov	r2, sl
    c648:	6921      	ldr	r1, [r4, #16]
    c64a:	f7fc fe0f 	bl	926c <memcpy>
    c64e:	89a3      	ldrh	r3, [r4, #12]
    c650:	4a2a      	ldr	r2, [pc, #168]	; (c6fc <__sfvwrite_r+0x2fc>)
    c652:	4013      	ands	r3, r2
    c654:	2280      	movs	r2, #128	; 0x80
    c656:	4313      	orrs	r3, r2
    c658:	81a3      	strh	r3, [r4, #12]
    c65a:	4643      	mov	r3, r8
    c65c:	4640      	mov	r0, r8
    c65e:	6123      	str	r3, [r4, #16]
    c660:	4653      	mov	r3, sl
    c662:	4450      	add	r0, sl
    c664:	6167      	str	r7, [r4, #20]
    c666:	1aff      	subs	r7, r7, r3
    c668:	60a7      	str	r7, [r4, #8]
    c66a:	6020      	str	r0, [r4, #0]
    c66c:	46a8      	mov	r8, r5
    c66e:	002f      	movs	r7, r5
    c670:	46aa      	mov	sl, r5
    c672:	e780      	b.n	c576 <__sfvwrite_r+0x176>
    c674:	4b22      	ldr	r3, [pc, #136]	; (c700 <__sfvwrite_r+0x300>)
    c676:	0028      	movs	r0, r5
    c678:	429d      	cmp	r5, r3
    c67a:	d900      	bls.n	c67e <__sfvwrite_r+0x27e>
    c67c:	0018      	movs	r0, r3
    c67e:	0039      	movs	r1, r7
    c680:	f7f9 ffcc 	bl	661c <__divsi3>
    c684:	003b      	movs	r3, r7
    c686:	464a      	mov	r2, r9
    c688:	4343      	muls	r3, r0
    c68a:	69e1      	ldr	r1, [r4, #28]
    c68c:	9800      	ldr	r0, [sp, #0]
    c68e:	6a67      	ldr	r7, [r4, #36]	; 0x24
    c690:	47b8      	blx	r7
    c692:	2800      	cmp	r0, #0
    c694:	dc00      	bgt.n	c698 <__sfvwrite_r+0x298>
    c696:	e752      	b.n	c53e <__sfvwrite_r+0x13e>
    c698:	0007      	movs	r7, r0
    c69a:	e777      	b.n	c58c <__sfvwrite_r+0x18c>
    c69c:	4666      	mov	r6, ip
    c69e:	4651      	mov	r1, sl
    c6a0:	f000 fbd8 	bl	ce54 <memmove>
    c6a4:	46b4      	mov	ip, r6
    c6a6:	6823      	ldr	r3, [r4, #0]
    c6a8:	0021      	movs	r1, r4
    c6aa:	4463      	add	r3, ip
    c6ac:	6023      	str	r3, [r4, #0]
    c6ae:	9800      	ldr	r0, [sp, #0]
    c6b0:	f7ff fcc4 	bl	c03c <_fflush_r>
    c6b4:	2800      	cmp	r0, #0
    c6b6:	d000      	beq.n	c6ba <__sfvwrite_r+0x2ba>
    c6b8:	e741      	b.n	c53e <__sfvwrite_r+0x13e>
    c6ba:	9e01      	ldr	r6, [sp, #4]
    c6bc:	e70e      	b.n	c4dc <__sfvwrite_r+0xdc>
    c6be:	9800      	ldr	r0, [sp, #0]
    c6c0:	f000 ff70 	bl	d5a4 <_realloc_r>
    c6c4:	4680      	mov	r8, r0
    c6c6:	2800      	cmp	r0, #0
    c6c8:	d1c7      	bne.n	c65a <__sfvwrite_r+0x25a>
    c6ca:	9d00      	ldr	r5, [sp, #0]
    c6cc:	6921      	ldr	r1, [r4, #16]
    c6ce:	0028      	movs	r0, r5
    c6d0:	f7ff fdb8 	bl	c244 <_free_r>
    c6d4:	2280      	movs	r2, #128	; 0x80
    c6d6:	89a3      	ldrh	r3, [r4, #12]
    c6d8:	4393      	bics	r3, r2
    c6da:	3a74      	subs	r2, #116	; 0x74
    c6dc:	b21b      	sxth	r3, r3
    c6de:	602a      	str	r2, [r5, #0]
    c6e0:	e72f      	b.n	c542 <__sfvwrite_r+0x142>
    c6e2:	1c7d      	adds	r5, r7, #1
    c6e4:	e6de      	b.n	c4a4 <__sfvwrite_r+0xa4>
    c6e6:	2001      	movs	r0, #1
    c6e8:	4240      	negs	r0, r0
    c6ea:	e6bd      	b.n	c468 <__sfvwrite_r+0x68>
    c6ec:	9a00      	ldr	r2, [sp, #0]
    c6ee:	330c      	adds	r3, #12
    c6f0:	6013      	str	r3, [r2, #0]
    c6f2:	220c      	movs	r2, #12
    c6f4:	5ea3      	ldrsh	r3, [r4, r2]
    c6f6:	e724      	b.n	c542 <__sfvwrite_r+0x142>
    c6f8:	7ffffc00 	.word	0x7ffffc00
    c6fc:	fffffb7f 	.word	0xfffffb7f
    c700:	7fffffff 	.word	0x7fffffff

0000c704 <_fwalk_reent>:
    c704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    c706:	4647      	mov	r7, r8
    c708:	46ce      	mov	lr, r9
    c70a:	b580      	push	{r7, lr}
    c70c:	27b8      	movs	r7, #184	; 0xb8
    c70e:	4680      	mov	r8, r0
    c710:	00bf      	lsls	r7, r7, #2
    c712:	4447      	add	r7, r8
    c714:	4689      	mov	r9, r1
    c716:	2600      	movs	r6, #0
    c718:	2f00      	cmp	r7, #0
    c71a:	d014      	beq.n	c746 <_fwalk_reent+0x42>
    c71c:	687b      	ldr	r3, [r7, #4]
    c71e:	68bc      	ldr	r4, [r7, #8]
    c720:	1e5d      	subs	r5, r3, #1
    c722:	d40d      	bmi.n	c740 <_fwalk_reent+0x3c>
    c724:	89a3      	ldrh	r3, [r4, #12]
    c726:	2b01      	cmp	r3, #1
    c728:	d907      	bls.n	c73a <_fwalk_reent+0x36>
    c72a:	220e      	movs	r2, #14
    c72c:	5ea3      	ldrsh	r3, [r4, r2]
    c72e:	3301      	adds	r3, #1
    c730:	d003      	beq.n	c73a <_fwalk_reent+0x36>
    c732:	0021      	movs	r1, r4
    c734:	4640      	mov	r0, r8
    c736:	47c8      	blx	r9
    c738:	4306      	orrs	r6, r0
    c73a:	3468      	adds	r4, #104	; 0x68
    c73c:	3d01      	subs	r5, #1
    c73e:	d2f1      	bcs.n	c724 <_fwalk_reent+0x20>
    c740:	683f      	ldr	r7, [r7, #0]
    c742:	2f00      	cmp	r7, #0
    c744:	d1ea      	bne.n	c71c <_fwalk_reent+0x18>
    c746:	0030      	movs	r0, r6
    c748:	bc0c      	pop	{r2, r3}
    c74a:	4690      	mov	r8, r2
    c74c:	4699      	mov	r9, r3
    c74e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000c750 <_localeconv_r>:
    c750:	4b04      	ldr	r3, [pc, #16]	; (c764 <_localeconv_r+0x14>)
    c752:	681b      	ldr	r3, [r3, #0]
    c754:	6b58      	ldr	r0, [r3, #52]	; 0x34
    c756:	2800      	cmp	r0, #0
    c758:	d001      	beq.n	c75e <_localeconv_r+0xe>
    c75a:	30f0      	adds	r0, #240	; 0xf0
    c75c:	4770      	bx	lr
    c75e:	4802      	ldr	r0, [pc, #8]	; (c768 <_localeconv_r+0x18>)
    c760:	e7fb      	b.n	c75a <_localeconv_r+0xa>
    c762:	46c0      	nop			; (mov r8, r8)
    c764:	20000070 	.word	0x20000070
    c768:	200008b4 	.word	0x200008b4

0000c76c <__retarget_lock_init_recursive>:
    c76c:	4770      	bx	lr
    c76e:	46c0      	nop			; (mov r8, r8)

0000c770 <__retarget_lock_close_recursive>:
    c770:	4770      	bx	lr
    c772:	46c0      	nop			; (mov r8, r8)

0000c774 <__retarget_lock_acquire_recursive>:
    c774:	4770      	bx	lr
    c776:	46c0      	nop			; (mov r8, r8)

0000c778 <__retarget_lock_release_recursive>:
    c778:	4770      	bx	lr
    c77a:	46c0      	nop			; (mov r8, r8)

0000c77c <__swhatbuf_r>:
    c77c:	b570      	push	{r4, r5, r6, lr}
    c77e:	000c      	movs	r4, r1
    c780:	001e      	movs	r6, r3
    c782:	230e      	movs	r3, #14
    c784:	5ec9      	ldrsh	r1, [r1, r3]
    c786:	b090      	sub	sp, #64	; 0x40
    c788:	0015      	movs	r5, r2
    c78a:	2900      	cmp	r1, #0
    c78c:	db15      	blt.n	c7ba <__swhatbuf_r+0x3e>
    c78e:	aa01      	add	r2, sp, #4
    c790:	f001 faa4 	bl	dcdc <_fstat_r>
    c794:	2800      	cmp	r0, #0
    c796:	db10      	blt.n	c7ba <__swhatbuf_r+0x3e>
    c798:	22f0      	movs	r2, #240	; 0xf0
    c79a:	9b02      	ldr	r3, [sp, #8]
    c79c:	0212      	lsls	r2, r2, #8
    c79e:	4013      	ands	r3, r2
    c7a0:	4a0d      	ldr	r2, [pc, #52]	; (c7d8 <__swhatbuf_r+0x5c>)
    c7a2:	2080      	movs	r0, #128	; 0x80
    c7a4:	4694      	mov	ip, r2
    c7a6:	4463      	add	r3, ip
    c7a8:	425a      	negs	r2, r3
    c7aa:	4153      	adcs	r3, r2
    c7ac:	6033      	str	r3, [r6, #0]
    c7ae:	2380      	movs	r3, #128	; 0x80
    c7b0:	00db      	lsls	r3, r3, #3
    c7b2:	602b      	str	r3, [r5, #0]
    c7b4:	0100      	lsls	r0, r0, #4
    c7b6:	b010      	add	sp, #64	; 0x40
    c7b8:	bd70      	pop	{r4, r5, r6, pc}
    c7ba:	2300      	movs	r3, #0
    c7bc:	6033      	str	r3, [r6, #0]
    c7be:	89a3      	ldrh	r3, [r4, #12]
    c7c0:	061b      	lsls	r3, r3, #24
    c7c2:	d503      	bpl.n	c7cc <__swhatbuf_r+0x50>
    c7c4:	2340      	movs	r3, #64	; 0x40
    c7c6:	2000      	movs	r0, #0
    c7c8:	602b      	str	r3, [r5, #0]
    c7ca:	e7f4      	b.n	c7b6 <__swhatbuf_r+0x3a>
    c7cc:	2380      	movs	r3, #128	; 0x80
    c7ce:	00db      	lsls	r3, r3, #3
    c7d0:	602b      	str	r3, [r5, #0]
    c7d2:	2000      	movs	r0, #0
    c7d4:	e7ef      	b.n	c7b6 <__swhatbuf_r+0x3a>
    c7d6:	46c0      	nop			; (mov r8, r8)
    c7d8:	ffffe000 	.word	0xffffe000

0000c7dc <__smakebuf_r>:
    c7dc:	b570      	push	{r4, r5, r6, lr}
    c7de:	898b      	ldrh	r3, [r1, #12]
    c7e0:	b082      	sub	sp, #8
    c7e2:	0006      	movs	r6, r0
    c7e4:	000c      	movs	r4, r1
    c7e6:	079b      	lsls	r3, r3, #30
    c7e8:	d507      	bpl.n	c7fa <__smakebuf_r+0x1e>
    c7ea:	0023      	movs	r3, r4
    c7ec:	3343      	adds	r3, #67	; 0x43
    c7ee:	6023      	str	r3, [r4, #0]
    c7f0:	6123      	str	r3, [r4, #16]
    c7f2:	2301      	movs	r3, #1
    c7f4:	6163      	str	r3, [r4, #20]
    c7f6:	b002      	add	sp, #8
    c7f8:	bd70      	pop	{r4, r5, r6, pc}
    c7fa:	ab01      	add	r3, sp, #4
    c7fc:	466a      	mov	r2, sp
    c7fe:	f7ff ffbd 	bl	c77c <__swhatbuf_r>
    c802:	9900      	ldr	r1, [sp, #0]
    c804:	0005      	movs	r5, r0
    c806:	0030      	movs	r0, r6
    c808:	f000 f830 	bl	c86c <_malloc_r>
    c80c:	2800      	cmp	r0, #0
    c80e:	d01e      	beq.n	c84e <__smakebuf_r+0x72>
    c810:	2280      	movs	r2, #128	; 0x80
    c812:	4b15      	ldr	r3, [pc, #84]	; (c868 <__smakebuf_r+0x8c>)
    c814:	63f3      	str	r3, [r6, #60]	; 0x3c
    c816:	89a3      	ldrh	r3, [r4, #12]
    c818:	6020      	str	r0, [r4, #0]
    c81a:	4313      	orrs	r3, r2
    c81c:	9a00      	ldr	r2, [sp, #0]
    c81e:	b21b      	sxth	r3, r3
    c820:	6162      	str	r2, [r4, #20]
    c822:	9a01      	ldr	r2, [sp, #4]
    c824:	81a3      	strh	r3, [r4, #12]
    c826:	6120      	str	r0, [r4, #16]
    c828:	2a00      	cmp	r2, #0
    c82a:	d102      	bne.n	c832 <__smakebuf_r+0x56>
    c82c:	432b      	orrs	r3, r5
    c82e:	81a3      	strh	r3, [r4, #12]
    c830:	e7e1      	b.n	c7f6 <__smakebuf_r+0x1a>
    c832:	230e      	movs	r3, #14
    c834:	5ee1      	ldrsh	r1, [r4, r3]
    c836:	0030      	movs	r0, r6
    c838:	f001 fa64 	bl	dd04 <_isatty_r>
    c83c:	2800      	cmp	r0, #0
    c83e:	d010      	beq.n	c862 <__smakebuf_r+0x86>
    c840:	2203      	movs	r2, #3
    c842:	89a3      	ldrh	r3, [r4, #12]
    c844:	4393      	bics	r3, r2
    c846:	2201      	movs	r2, #1
    c848:	4313      	orrs	r3, r2
    c84a:	b21b      	sxth	r3, r3
    c84c:	e7ee      	b.n	c82c <__smakebuf_r+0x50>
    c84e:	220c      	movs	r2, #12
    c850:	5ea3      	ldrsh	r3, [r4, r2]
    c852:	059a      	lsls	r2, r3, #22
    c854:	d4cf      	bmi.n	c7f6 <__smakebuf_r+0x1a>
    c856:	2203      	movs	r2, #3
    c858:	4393      	bics	r3, r2
    c85a:	2202      	movs	r2, #2
    c85c:	4313      	orrs	r3, r2
    c85e:	81a3      	strh	r3, [r4, #12]
    c860:	e7c3      	b.n	c7ea <__smakebuf_r+0xe>
    c862:	220c      	movs	r2, #12
    c864:	5ea3      	ldrsh	r3, [r4, r2]
    c866:	e7e1      	b.n	c82c <__smakebuf_r+0x50>
    c868:	0000c091 	.word	0x0000c091

0000c86c <_malloc_r>:
    c86c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c86e:	4657      	mov	r7, sl
    c870:	4645      	mov	r5, r8
    c872:	46de      	mov	lr, fp
    c874:	464e      	mov	r6, r9
    c876:	b5e0      	push	{r5, r6, r7, lr}
    c878:	000d      	movs	r5, r1
    c87a:	350b      	adds	r5, #11
    c87c:	b083      	sub	sp, #12
    c87e:	0007      	movs	r7, r0
    c880:	2d16      	cmp	r5, #22
    c882:	d800      	bhi.n	c886 <_malloc_r+0x1a>
    c884:	e09f      	b.n	c9c6 <_malloc_r+0x15a>
    c886:	2307      	movs	r3, #7
    c888:	439d      	bics	r5, r3
    c88a:	d500      	bpl.n	c88e <_malloc_r+0x22>
    c88c:	e0c4      	b.n	ca18 <_malloc_r+0x1ac>
    c88e:	42a9      	cmp	r1, r5
    c890:	d900      	bls.n	c894 <_malloc_r+0x28>
    c892:	e0c1      	b.n	ca18 <_malloc_r+0x1ac>
    c894:	f000 fb2e 	bl	cef4 <__malloc_lock>
    c898:	23f8      	movs	r3, #248	; 0xf8
    c89a:	33ff      	adds	r3, #255	; 0xff
    c89c:	429d      	cmp	r5, r3
    c89e:	d800      	bhi.n	c8a2 <_malloc_r+0x36>
    c8a0:	e28f      	b.n	cdc2 <_malloc_r+0x556>
    c8a2:	0a68      	lsrs	r0, r5, #9
    c8a4:	d100      	bne.n	c8a8 <_malloc_r+0x3c>
    c8a6:	e0bb      	b.n	ca20 <_malloc_r+0x1b4>
    c8a8:	2804      	cmp	r0, #4
    c8aa:	d900      	bls.n	c8ae <_malloc_r+0x42>
    c8ac:	e162      	b.n	cb74 <_malloc_r+0x308>
    c8ae:	2338      	movs	r3, #56	; 0x38
    c8b0:	4698      	mov	r8, r3
    c8b2:	09a8      	lsrs	r0, r5, #6
    c8b4:	4480      	add	r8, r0
    c8b6:	3039      	adds	r0, #57	; 0x39
    c8b8:	00c1      	lsls	r1, r0, #3
    c8ba:	4ed2      	ldr	r6, [pc, #840]	; (cc04 <_malloc_r+0x398>)
    c8bc:	1871      	adds	r1, r6, r1
    c8be:	3908      	subs	r1, #8
    c8c0:	68cc      	ldr	r4, [r1, #12]
    c8c2:	42a1      	cmp	r1, r4
    c8c4:	d019      	beq.n	c8fa <_malloc_r+0x8e>
    c8c6:	2303      	movs	r3, #3
    c8c8:	6862      	ldr	r2, [r4, #4]
    c8ca:	439a      	bics	r2, r3
    c8cc:	0013      	movs	r3, r2
    c8ce:	1b52      	subs	r2, r2, r5
    c8d0:	2a0f      	cmp	r2, #15
    c8d2:	dd00      	ble.n	c8d6 <_malloc_r+0x6a>
    c8d4:	e0aa      	b.n	ca2c <_malloc_r+0x1c0>
    c8d6:	2a00      	cmp	r2, #0
    c8d8:	db00      	blt.n	c8dc <_malloc_r+0x70>
    c8da:	e088      	b.n	c9ee <_malloc_r+0x182>
    c8dc:	2303      	movs	r3, #3
    c8de:	469c      	mov	ip, r3
    c8e0:	e008      	b.n	c8f4 <_malloc_r+0x88>
    c8e2:	4662      	mov	r2, ip
    c8e4:	6863      	ldr	r3, [r4, #4]
    c8e6:	4393      	bics	r3, r2
    c8e8:	1b5a      	subs	r2, r3, r5
    c8ea:	2a0f      	cmp	r2, #15
    c8ec:	dd00      	ble.n	c8f0 <_malloc_r+0x84>
    c8ee:	e09d      	b.n	ca2c <_malloc_r+0x1c0>
    c8f0:	2a00      	cmp	r2, #0
    c8f2:	da7c      	bge.n	c9ee <_malloc_r+0x182>
    c8f4:	68e4      	ldr	r4, [r4, #12]
    c8f6:	42a1      	cmp	r1, r4
    c8f8:	d1f3      	bne.n	c8e2 <_malloc_r+0x76>
    c8fa:	0032      	movs	r2, r6
    c8fc:	6934      	ldr	r4, [r6, #16]
    c8fe:	3208      	adds	r2, #8
    c900:	4294      	cmp	r4, r2
    c902:	d100      	bne.n	c906 <_malloc_r+0x9a>
    c904:	e190      	b.n	cc28 <_malloc_r+0x3bc>
    c906:	2303      	movs	r3, #3
    c908:	6861      	ldr	r1, [r4, #4]
    c90a:	4399      	bics	r1, r3
    c90c:	4689      	mov	r9, r1
    c90e:	1b49      	subs	r1, r1, r5
    c910:	290f      	cmp	r1, #15
    c912:	dd00      	ble.n	c916 <_malloc_r+0xaa>
    c914:	e162      	b.n	cbdc <_malloc_r+0x370>
    c916:	6172      	str	r2, [r6, #20]
    c918:	6132      	str	r2, [r6, #16]
    c91a:	2900      	cmp	r1, #0
    c91c:	db00      	blt.n	c920 <_malloc_r+0xb4>
    c91e:	e087      	b.n	ca30 <_malloc_r+0x1c4>
    c920:	4ab9      	ldr	r2, [pc, #740]	; (cc08 <_malloc_r+0x39c>)
    c922:	464b      	mov	r3, r9
    c924:	4591      	cmp	r9, r2
    c926:	d900      	bls.n	c92a <_malloc_r+0xbe>
    c928:	e130      	b.n	cb8c <_malloc_r+0x320>
    c92a:	08db      	lsrs	r3, r3, #3
    c92c:	3aff      	subs	r2, #255	; 0xff
    c92e:	1099      	asrs	r1, r3, #2
    c930:	3aff      	subs	r2, #255	; 0xff
    c932:	408a      	lsls	r2, r1
    c934:	00db      	lsls	r3, r3, #3
    c936:	6871      	ldr	r1, [r6, #4]
    c938:	199b      	adds	r3, r3, r6
    c93a:	430a      	orrs	r2, r1
    c93c:	6899      	ldr	r1, [r3, #8]
    c93e:	6072      	str	r2, [r6, #4]
    c940:	60e3      	str	r3, [r4, #12]
    c942:	60a1      	str	r1, [r4, #8]
    c944:	609c      	str	r4, [r3, #8]
    c946:	0013      	movs	r3, r2
    c948:	60cc      	str	r4, [r1, #12]
    c94a:	2101      	movs	r1, #1
    c94c:	1082      	asrs	r2, r0, #2
    c94e:	4091      	lsls	r1, r2
    c950:	4299      	cmp	r1, r3
    c952:	d86f      	bhi.n	ca34 <_malloc_r+0x1c8>
    c954:	420b      	tst	r3, r1
    c956:	d105      	bne.n	c964 <_malloc_r+0xf8>
    c958:	2203      	movs	r2, #3
    c95a:	4390      	bics	r0, r2
    c95c:	0049      	lsls	r1, r1, #1
    c95e:	3004      	adds	r0, #4
    c960:	420b      	tst	r3, r1
    c962:	d0fb      	beq.n	c95c <_malloc_r+0xf0>
    c964:	2303      	movs	r3, #3
    c966:	4698      	mov	r8, r3
    c968:	00c3      	lsls	r3, r0, #3
    c96a:	4699      	mov	r9, r3
    c96c:	44b1      	add	r9, r6
    c96e:	46cc      	mov	ip, r9
    c970:	4682      	mov	sl, r0
    c972:	4663      	mov	r3, ip
    c974:	68dc      	ldr	r4, [r3, #12]
    c976:	45a4      	cmp	ip, r4
    c978:	d107      	bne.n	c98a <_malloc_r+0x11e>
    c97a:	e157      	b.n	cc2c <_malloc_r+0x3c0>
    c97c:	2a00      	cmp	r2, #0
    c97e:	db00      	blt.n	c982 <_malloc_r+0x116>
    c980:	e166      	b.n	cc50 <_malloc_r+0x3e4>
    c982:	68e4      	ldr	r4, [r4, #12]
    c984:	45a4      	cmp	ip, r4
    c986:	d100      	bne.n	c98a <_malloc_r+0x11e>
    c988:	e150      	b.n	cc2c <_malloc_r+0x3c0>
    c98a:	4642      	mov	r2, r8
    c98c:	6863      	ldr	r3, [r4, #4]
    c98e:	4393      	bics	r3, r2
    c990:	1b5a      	subs	r2, r3, r5
    c992:	2a0f      	cmp	r2, #15
    c994:	ddf2      	ble.n	c97c <_malloc_r+0x110>
    c996:	2001      	movs	r0, #1
    c998:	4680      	mov	r8, r0
    c99a:	1961      	adds	r1, r4, r5
    c99c:	4305      	orrs	r5, r0
    c99e:	6065      	str	r5, [r4, #4]
    c9a0:	68a0      	ldr	r0, [r4, #8]
    c9a2:	68e5      	ldr	r5, [r4, #12]
    c9a4:	3608      	adds	r6, #8
    c9a6:	60c5      	str	r5, [r0, #12]
    c9a8:	60a8      	str	r0, [r5, #8]
    c9aa:	4640      	mov	r0, r8
    c9ac:	60f1      	str	r1, [r6, #12]
    c9ae:	60b1      	str	r1, [r6, #8]
    c9b0:	4310      	orrs	r0, r2
    c9b2:	6048      	str	r0, [r1, #4]
    c9b4:	60ce      	str	r6, [r1, #12]
    c9b6:	608e      	str	r6, [r1, #8]
    c9b8:	0038      	movs	r0, r7
    c9ba:	50e2      	str	r2, [r4, r3]
    c9bc:	f000 faa2 	bl	cf04 <__malloc_unlock>
    c9c0:	0020      	movs	r0, r4
    c9c2:	3008      	adds	r0, #8
    c9c4:	e021      	b.n	ca0a <_malloc_r+0x19e>
    c9c6:	2910      	cmp	r1, #16
    c9c8:	d826      	bhi.n	ca18 <_malloc_r+0x1ac>
    c9ca:	0038      	movs	r0, r7
    c9cc:	f000 fa92 	bl	cef4 <__malloc_lock>
    c9d0:	2510      	movs	r5, #16
    c9d2:	2318      	movs	r3, #24
    c9d4:	2002      	movs	r0, #2
    c9d6:	4e8b      	ldr	r6, [pc, #556]	; (cc04 <_malloc_r+0x398>)
    c9d8:	18f3      	adds	r3, r6, r3
    c9da:	001a      	movs	r2, r3
    c9dc:	685c      	ldr	r4, [r3, #4]
    c9de:	3a08      	subs	r2, #8
    c9e0:	4294      	cmp	r4, r2
    c9e2:	d100      	bne.n	c9e6 <_malloc_r+0x17a>
    c9e4:	e12e      	b.n	cc44 <_malloc_r+0x3d8>
    c9e6:	2303      	movs	r3, #3
    c9e8:	6862      	ldr	r2, [r4, #4]
    c9ea:	439a      	bics	r2, r3
    c9ec:	0013      	movs	r3, r2
    c9ee:	68e2      	ldr	r2, [r4, #12]
    c9f0:	68a1      	ldr	r1, [r4, #8]
    c9f2:	60ca      	str	r2, [r1, #12]
    c9f4:	6091      	str	r1, [r2, #8]
    c9f6:	2201      	movs	r2, #1
    c9f8:	18e3      	adds	r3, r4, r3
    c9fa:	6859      	ldr	r1, [r3, #4]
    c9fc:	0038      	movs	r0, r7
    c9fe:	430a      	orrs	r2, r1
    ca00:	605a      	str	r2, [r3, #4]
    ca02:	f000 fa7f 	bl	cf04 <__malloc_unlock>
    ca06:	0020      	movs	r0, r4
    ca08:	3008      	adds	r0, #8
    ca0a:	b003      	add	sp, #12
    ca0c:	bc3c      	pop	{r2, r3, r4, r5}
    ca0e:	4690      	mov	r8, r2
    ca10:	4699      	mov	r9, r3
    ca12:	46a2      	mov	sl, r4
    ca14:	46ab      	mov	fp, r5
    ca16:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ca18:	230c      	movs	r3, #12
    ca1a:	2000      	movs	r0, #0
    ca1c:	603b      	str	r3, [r7, #0]
    ca1e:	e7f4      	b.n	ca0a <_malloc_r+0x19e>
    ca20:	2180      	movs	r1, #128	; 0x80
    ca22:	233f      	movs	r3, #63	; 0x3f
    ca24:	2040      	movs	r0, #64	; 0x40
    ca26:	0089      	lsls	r1, r1, #2
    ca28:	4698      	mov	r8, r3
    ca2a:	e746      	b.n	c8ba <_malloc_r+0x4e>
    ca2c:	4640      	mov	r0, r8
    ca2e:	e764      	b.n	c8fa <_malloc_r+0x8e>
    ca30:	464b      	mov	r3, r9
    ca32:	e7e0      	b.n	c9f6 <_malloc_r+0x18a>
    ca34:	2303      	movs	r3, #3
    ca36:	68b4      	ldr	r4, [r6, #8]
    ca38:	6862      	ldr	r2, [r4, #4]
    ca3a:	439a      	bics	r2, r3
    ca3c:	4690      	mov	r8, r2
    ca3e:	42aa      	cmp	r2, r5
    ca40:	d303      	bcc.n	ca4a <_malloc_r+0x1de>
    ca42:	1b53      	subs	r3, r2, r5
    ca44:	2b0f      	cmp	r3, #15
    ca46:	dd00      	ble.n	ca4a <_malloc_r+0x1de>
    ca48:	e086      	b.n	cb58 <_malloc_r+0x2ec>
    ca4a:	0023      	movs	r3, r4
    ca4c:	4443      	add	r3, r8
    ca4e:	4a6f      	ldr	r2, [pc, #444]	; (cc0c <_malloc_r+0x3a0>)
    ca50:	9301      	str	r3, [sp, #4]
    ca52:	4b6f      	ldr	r3, [pc, #444]	; (cc10 <_malloc_r+0x3a4>)
    ca54:	4693      	mov	fp, r2
    ca56:	681b      	ldr	r3, [r3, #0]
    ca58:	6812      	ldr	r2, [r2, #0]
    ca5a:	18eb      	adds	r3, r5, r3
    ca5c:	3201      	adds	r2, #1
    ca5e:	d100      	bne.n	ca62 <_malloc_r+0x1f6>
    ca60:	e168      	b.n	cd34 <_malloc_r+0x4c8>
    ca62:	4a6c      	ldr	r2, [pc, #432]	; (cc14 <_malloc_r+0x3a8>)
    ca64:	4694      	mov	ip, r2
    ca66:	4463      	add	r3, ip
    ca68:	0b1b      	lsrs	r3, r3, #12
    ca6a:	031b      	lsls	r3, r3, #12
    ca6c:	9300      	str	r3, [sp, #0]
    ca6e:	9900      	ldr	r1, [sp, #0]
    ca70:	0038      	movs	r0, r7
    ca72:	f000 ff55 	bl	d920 <_sbrk_r>
    ca76:	0003      	movs	r3, r0
    ca78:	4681      	mov	r9, r0
    ca7a:	3301      	adds	r3, #1
    ca7c:	d061      	beq.n	cb42 <_malloc_r+0x2d6>
    ca7e:	9b01      	ldr	r3, [sp, #4]
    ca80:	4283      	cmp	r3, r0
    ca82:	d900      	bls.n	ca86 <_malloc_r+0x21a>
    ca84:	e0ff      	b.n	cc86 <_malloc_r+0x41a>
    ca86:	4b64      	ldr	r3, [pc, #400]	; (cc18 <_malloc_r+0x3ac>)
    ca88:	9a00      	ldr	r2, [sp, #0]
    ca8a:	469a      	mov	sl, r3
    ca8c:	681b      	ldr	r3, [r3, #0]
    ca8e:	469c      	mov	ip, r3
    ca90:	4653      	mov	r3, sl
    ca92:	4462      	add	r2, ip
    ca94:	601a      	str	r2, [r3, #0]
    ca96:	9b01      	ldr	r3, [sp, #4]
    ca98:	0011      	movs	r1, r2
    ca9a:	4283      	cmp	r3, r0
    ca9c:	d100      	bne.n	caa0 <_malloc_r+0x234>
    ca9e:	e155      	b.n	cd4c <_malloc_r+0x4e0>
    caa0:	465b      	mov	r3, fp
    caa2:	681b      	ldr	r3, [r3, #0]
    caa4:	3301      	adds	r3, #1
    caa6:	d100      	bne.n	caaa <_malloc_r+0x23e>
    caa8:	e16c      	b.n	cd84 <_malloc_r+0x518>
    caaa:	464b      	mov	r3, r9
    caac:	9a01      	ldr	r2, [sp, #4]
    caae:	1a9b      	subs	r3, r3, r2
    cab0:	1859      	adds	r1, r3, r1
    cab2:	4653      	mov	r3, sl
    cab4:	6019      	str	r1, [r3, #0]
    cab6:	2307      	movs	r3, #7
    cab8:	464a      	mov	r2, r9
    caba:	4013      	ands	r3, r2
    cabc:	d100      	bne.n	cac0 <_malloc_r+0x254>
    cabe:	e124      	b.n	cd0a <_malloc_r+0x49e>
    cac0:	2108      	movs	r1, #8
    cac2:	4689      	mov	r9, r1
    cac4:	4955      	ldr	r1, [pc, #340]	; (cc1c <_malloc_r+0x3b0>)
    cac6:	1ad2      	subs	r2, r2, r3
    cac8:	4491      	add	r9, r2
    caca:	1acb      	subs	r3, r1, r3
    cacc:	9a00      	ldr	r2, [sp, #0]
    cace:	0038      	movs	r0, r7
    cad0:	444a      	add	r2, r9
    cad2:	0511      	lsls	r1, r2, #20
    cad4:	0d09      	lsrs	r1, r1, #20
    cad6:	1a5b      	subs	r3, r3, r1
    cad8:	0019      	movs	r1, r3
    cada:	469b      	mov	fp, r3
    cadc:	f000 ff20 	bl	d920 <_sbrk_r>
    cae0:	1c43      	adds	r3, r0, #1
    cae2:	d100      	bne.n	cae6 <_malloc_r+0x27a>
    cae4:	e142      	b.n	cd6c <_malloc_r+0x500>
    cae6:	464b      	mov	r3, r9
    cae8:	1ac0      	subs	r0, r0, r3
    caea:	2301      	movs	r3, #1
    caec:	4458      	add	r0, fp
    caee:	4318      	orrs	r0, r3
    caf0:	4653      	mov	r3, sl
    caf2:	681b      	ldr	r3, [r3, #0]
    caf4:	445b      	add	r3, fp
    caf6:	0019      	movs	r1, r3
    caf8:	4653      	mov	r3, sl
    cafa:	6019      	str	r1, [r3, #0]
    cafc:	464b      	mov	r3, r9
    cafe:	60b3      	str	r3, [r6, #8]
    cb00:	6058      	str	r0, [r3, #4]
    cb02:	42b4      	cmp	r4, r6
    cb04:	d013      	beq.n	cb2e <_malloc_r+0x2c2>
    cb06:	4643      	mov	r3, r8
    cb08:	2b0f      	cmp	r3, #15
    cb0a:	d800      	bhi.n	cb0e <_malloc_r+0x2a2>
    cb0c:	e0e8      	b.n	cce0 <_malloc_r+0x474>
    cb0e:	4643      	mov	r3, r8
    cb10:	2207      	movs	r2, #7
    cb12:	6860      	ldr	r0, [r4, #4]
    cb14:	3b0c      	subs	r3, #12
    cb16:	4393      	bics	r3, r2
    cb18:	3a06      	subs	r2, #6
    cb1a:	4002      	ands	r2, r0
    cb1c:	2005      	movs	r0, #5
    cb1e:	431a      	orrs	r2, r3
    cb20:	6062      	str	r2, [r4, #4]
    cb22:	18e2      	adds	r2, r4, r3
    cb24:	6050      	str	r0, [r2, #4]
    cb26:	6090      	str	r0, [r2, #8]
    cb28:	2b0f      	cmp	r3, #15
    cb2a:	d900      	bls.n	cb2e <_malloc_r+0x2c2>
    cb2c:	e122      	b.n	cd74 <_malloc_r+0x508>
    cb2e:	4b3c      	ldr	r3, [pc, #240]	; (cc20 <_malloc_r+0x3b4>)
    cb30:	681a      	ldr	r2, [r3, #0]
    cb32:	4291      	cmp	r1, r2
    cb34:	d900      	bls.n	cb38 <_malloc_r+0x2cc>
    cb36:	6019      	str	r1, [r3, #0]
    cb38:	4b3a      	ldr	r3, [pc, #232]	; (cc24 <_malloc_r+0x3b8>)
    cb3a:	681a      	ldr	r2, [r3, #0]
    cb3c:	4291      	cmp	r1, r2
    cb3e:	d900      	bls.n	cb42 <_malloc_r+0x2d6>
    cb40:	6019      	str	r1, [r3, #0]
    cb42:	2303      	movs	r3, #3
    cb44:	68b4      	ldr	r4, [r6, #8]
    cb46:	6862      	ldr	r2, [r4, #4]
    cb48:	439a      	bics	r2, r3
    cb4a:	1b53      	subs	r3, r2, r5
    cb4c:	4295      	cmp	r5, r2
    cb4e:	d900      	bls.n	cb52 <_malloc_r+0x2e6>
    cb50:	e0c9      	b.n	cce6 <_malloc_r+0x47a>
    cb52:	2b0f      	cmp	r3, #15
    cb54:	dc00      	bgt.n	cb58 <_malloc_r+0x2ec>
    cb56:	e0c6      	b.n	cce6 <_malloc_r+0x47a>
    cb58:	2201      	movs	r2, #1
    cb5a:	0029      	movs	r1, r5
    cb5c:	4313      	orrs	r3, r2
    cb5e:	4311      	orrs	r1, r2
    cb60:	1965      	adds	r5, r4, r5
    cb62:	6061      	str	r1, [r4, #4]
    cb64:	0038      	movs	r0, r7
    cb66:	60b5      	str	r5, [r6, #8]
    cb68:	606b      	str	r3, [r5, #4]
    cb6a:	f000 f9cb 	bl	cf04 <__malloc_unlock>
    cb6e:	0020      	movs	r0, r4
    cb70:	3008      	adds	r0, #8
    cb72:	e74a      	b.n	ca0a <_malloc_r+0x19e>
    cb74:	2814      	cmp	r0, #20
    cb76:	d97a      	bls.n	cc6e <_malloc_r+0x402>
    cb78:	2854      	cmp	r0, #84	; 0x54
    cb7a:	d900      	bls.n	cb7e <_malloc_r+0x312>
    cb7c:	e0ba      	b.n	ccf4 <_malloc_r+0x488>
    cb7e:	236e      	movs	r3, #110	; 0x6e
    cb80:	4698      	mov	r8, r3
    cb82:	0b28      	lsrs	r0, r5, #12
    cb84:	4480      	add	r8, r0
    cb86:	306f      	adds	r0, #111	; 0x6f
    cb88:	00c1      	lsls	r1, r0, #3
    cb8a:	e696      	b.n	c8ba <_malloc_r+0x4e>
    cb8c:	0a5a      	lsrs	r2, r3, #9
    cb8e:	2a04      	cmp	r2, #4
    cb90:	d973      	bls.n	cc7a <_malloc_r+0x40e>
    cb92:	2a14      	cmp	r2, #20
    cb94:	d900      	bls.n	cb98 <_malloc_r+0x32c>
    cb96:	e0d0      	b.n	cd3a <_malloc_r+0x4ce>
    cb98:	0011      	movs	r1, r2
    cb9a:	325c      	adds	r2, #92	; 0x5c
    cb9c:	315b      	adds	r1, #91	; 0x5b
    cb9e:	00d2      	lsls	r2, r2, #3
    cba0:	2308      	movs	r3, #8
    cba2:	425b      	negs	r3, r3
    cba4:	469c      	mov	ip, r3
    cba6:	18b2      	adds	r2, r6, r2
    cba8:	4494      	add	ip, r2
    cbaa:	4663      	mov	r3, ip
    cbac:	689a      	ldr	r2, [r3, #8]
    cbae:	2303      	movs	r3, #3
    cbb0:	4698      	mov	r8, r3
    cbb2:	4594      	cmp	ip, r2
    cbb4:	d100      	bne.n	cbb8 <_malloc_r+0x34c>
    cbb6:	e0ab      	b.n	cd10 <_malloc_r+0x4a4>
    cbb8:	4643      	mov	r3, r8
    cbba:	6851      	ldr	r1, [r2, #4]
    cbbc:	4399      	bics	r1, r3
    cbbe:	4589      	cmp	r9, r1
    cbc0:	d300      	bcc.n	cbc4 <_malloc_r+0x358>
    cbc2:	e095      	b.n	ccf0 <_malloc_r+0x484>
    cbc4:	6892      	ldr	r2, [r2, #8]
    cbc6:	4594      	cmp	ip, r2
    cbc8:	d1f6      	bne.n	cbb8 <_malloc_r+0x34c>
    cbca:	4663      	mov	r3, ip
    cbcc:	68da      	ldr	r2, [r3, #12]
    cbce:	6873      	ldr	r3, [r6, #4]
    cbd0:	4661      	mov	r1, ip
    cbd2:	60e2      	str	r2, [r4, #12]
    cbd4:	60a1      	str	r1, [r4, #8]
    cbd6:	6094      	str	r4, [r2, #8]
    cbd8:	60cc      	str	r4, [r1, #12]
    cbda:	e6b6      	b.n	c94a <_malloc_r+0xde>
    cbdc:	2301      	movs	r3, #1
    cbde:	1960      	adds	r0, r4, r5
    cbe0:	431d      	orrs	r5, r3
    cbe2:	6065      	str	r5, [r4, #4]
    cbe4:	6170      	str	r0, [r6, #20]
    cbe6:	6130      	str	r0, [r6, #16]
    cbe8:	60c2      	str	r2, [r0, #12]
    cbea:	6082      	str	r2, [r0, #8]
    cbec:	001a      	movs	r2, r3
    cbee:	464b      	mov	r3, r9
    cbf0:	430a      	orrs	r2, r1
    cbf2:	6042      	str	r2, [r0, #4]
    cbf4:	0038      	movs	r0, r7
    cbf6:	50e1      	str	r1, [r4, r3]
    cbf8:	f000 f984 	bl	cf04 <__malloc_unlock>
    cbfc:	0020      	movs	r0, r4
    cbfe:	3008      	adds	r0, #8
    cc00:	e703      	b.n	ca0a <_malloc_r+0x19e>
    cc02:	46c0      	nop			; (mov r8, r8)
    cc04:	200004a4 	.word	0x200004a4
    cc08:	000001ff 	.word	0x000001ff
    cc0c:	200008ac 	.word	0x200008ac
    cc10:	200010e4 	.word	0x200010e4
    cc14:	0000100f 	.word	0x0000100f
    cc18:	200010b4 	.word	0x200010b4
    cc1c:	00001008 	.word	0x00001008
    cc20:	200010dc 	.word	0x200010dc
    cc24:	200010e0 	.word	0x200010e0
    cc28:	6873      	ldr	r3, [r6, #4]
    cc2a:	e68e      	b.n	c94a <_malloc_r+0xde>
    cc2c:	2308      	movs	r3, #8
    cc2e:	469b      	mov	fp, r3
    cc30:	3b07      	subs	r3, #7
    cc32:	44dc      	add	ip, fp
    cc34:	469b      	mov	fp, r3
    cc36:	44da      	add	sl, fp
    cc38:	4643      	mov	r3, r8
    cc3a:	4652      	mov	r2, sl
    cc3c:	4213      	tst	r3, r2
    cc3e:	d000      	beq.n	cc42 <_malloc_r+0x3d6>
    cc40:	e697      	b.n	c972 <_malloc_r+0x106>
    cc42:	e037      	b.n	ccb4 <_malloc_r+0x448>
    cc44:	68dc      	ldr	r4, [r3, #12]
    cc46:	3002      	adds	r0, #2
    cc48:	42a3      	cmp	r3, r4
    cc4a:	d100      	bne.n	cc4e <_malloc_r+0x3e2>
    cc4c:	e655      	b.n	c8fa <_malloc_r+0x8e>
    cc4e:	e6ca      	b.n	c9e6 <_malloc_r+0x17a>
    cc50:	2201      	movs	r2, #1
    cc52:	18e3      	adds	r3, r4, r3
    cc54:	6859      	ldr	r1, [r3, #4]
    cc56:	0038      	movs	r0, r7
    cc58:	430a      	orrs	r2, r1
    cc5a:	605a      	str	r2, [r3, #4]
    cc5c:	68e3      	ldr	r3, [r4, #12]
    cc5e:	68a2      	ldr	r2, [r4, #8]
    cc60:	60d3      	str	r3, [r2, #12]
    cc62:	609a      	str	r2, [r3, #8]
    cc64:	f000 f94e 	bl	cf04 <__malloc_unlock>
    cc68:	0020      	movs	r0, r4
    cc6a:	3008      	adds	r0, #8
    cc6c:	e6cd      	b.n	ca0a <_malloc_r+0x19e>
    cc6e:	235b      	movs	r3, #91	; 0x5b
    cc70:	4698      	mov	r8, r3
    cc72:	4480      	add	r8, r0
    cc74:	305c      	adds	r0, #92	; 0x5c
    cc76:	00c1      	lsls	r1, r0, #3
    cc78:	e61f      	b.n	c8ba <_malloc_r+0x4e>
    cc7a:	099a      	lsrs	r2, r3, #6
    cc7c:	0011      	movs	r1, r2
    cc7e:	3239      	adds	r2, #57	; 0x39
    cc80:	3138      	adds	r1, #56	; 0x38
    cc82:	00d2      	lsls	r2, r2, #3
    cc84:	e78c      	b.n	cba0 <_malloc_r+0x334>
    cc86:	42b4      	cmp	r4, r6
    cc88:	d000      	beq.n	cc8c <_malloc_r+0x420>
    cc8a:	e75a      	b.n	cb42 <_malloc_r+0x2d6>
    cc8c:	4b4f      	ldr	r3, [pc, #316]	; (cdcc <_malloc_r+0x560>)
    cc8e:	9a00      	ldr	r2, [sp, #0]
    cc90:	469a      	mov	sl, r3
    cc92:	681b      	ldr	r3, [r3, #0]
    cc94:	469c      	mov	ip, r3
    cc96:	4653      	mov	r3, sl
    cc98:	4462      	add	r2, ip
    cc9a:	0011      	movs	r1, r2
    cc9c:	601a      	str	r2, [r3, #0]
    cc9e:	e6ff      	b.n	caa0 <_malloc_r+0x234>
    cca0:	2308      	movs	r3, #8
    cca2:	425b      	negs	r3, r3
    cca4:	469c      	mov	ip, r3
    cca6:	44e1      	add	r9, ip
    cca8:	464b      	mov	r3, r9
    ccaa:	689b      	ldr	r3, [r3, #8]
    ccac:	3801      	subs	r0, #1
    ccae:	4599      	cmp	r9, r3
    ccb0:	d000      	beq.n	ccb4 <_malloc_r+0x448>
    ccb2:	e084      	b.n	cdbe <_malloc_r+0x552>
    ccb4:	4643      	mov	r3, r8
    ccb6:	4203      	tst	r3, r0
    ccb8:	d1f2      	bne.n	cca0 <_malloc_r+0x434>
    ccba:	6873      	ldr	r3, [r6, #4]
    ccbc:	438b      	bics	r3, r1
    ccbe:	6073      	str	r3, [r6, #4]
    ccc0:	0049      	lsls	r1, r1, #1
    ccc2:	4299      	cmp	r1, r3
    ccc4:	d900      	bls.n	ccc8 <_malloc_r+0x45c>
    ccc6:	e6b5      	b.n	ca34 <_malloc_r+0x1c8>
    ccc8:	2900      	cmp	r1, #0
    ccca:	d100      	bne.n	ccce <_malloc_r+0x462>
    cccc:	e6b2      	b.n	ca34 <_malloc_r+0x1c8>
    ccce:	4650      	mov	r0, sl
    ccd0:	420b      	tst	r3, r1
    ccd2:	d000      	beq.n	ccd6 <_malloc_r+0x46a>
    ccd4:	e648      	b.n	c968 <_malloc_r+0xfc>
    ccd6:	0049      	lsls	r1, r1, #1
    ccd8:	3004      	adds	r0, #4
    ccda:	420b      	tst	r3, r1
    ccdc:	d0fb      	beq.n	ccd6 <_malloc_r+0x46a>
    ccde:	e643      	b.n	c968 <_malloc_r+0xfc>
    cce0:	2301      	movs	r3, #1
    cce2:	464a      	mov	r2, r9
    cce4:	6053      	str	r3, [r2, #4]
    cce6:	0038      	movs	r0, r7
    cce8:	f000 f90c 	bl	cf04 <__malloc_unlock>
    ccec:	2000      	movs	r0, #0
    ccee:	e68c      	b.n	ca0a <_malloc_r+0x19e>
    ccf0:	4694      	mov	ip, r2
    ccf2:	e76a      	b.n	cbca <_malloc_r+0x35e>
    ccf4:	23aa      	movs	r3, #170	; 0xaa
    ccf6:	005b      	lsls	r3, r3, #1
    ccf8:	4298      	cmp	r0, r3
    ccfa:	d811      	bhi.n	cd20 <_malloc_r+0x4b4>
    ccfc:	3bdd      	subs	r3, #221	; 0xdd
    ccfe:	4698      	mov	r8, r3
    cd00:	0be8      	lsrs	r0, r5, #15
    cd02:	4480      	add	r8, r0
    cd04:	3078      	adds	r0, #120	; 0x78
    cd06:	00c1      	lsls	r1, r0, #3
    cd08:	e5d7      	b.n	c8ba <_malloc_r+0x4e>
    cd0a:	2380      	movs	r3, #128	; 0x80
    cd0c:	015b      	lsls	r3, r3, #5
    cd0e:	e6dd      	b.n	cacc <_malloc_r+0x260>
    cd10:	1089      	asrs	r1, r1, #2
    cd12:	3b02      	subs	r3, #2
    cd14:	408b      	lsls	r3, r1
    cd16:	6872      	ldr	r2, [r6, #4]
    cd18:	4313      	orrs	r3, r2
    cd1a:	6073      	str	r3, [r6, #4]
    cd1c:	4662      	mov	r2, ip
    cd1e:	e757      	b.n	cbd0 <_malloc_r+0x364>
    cd20:	4b2b      	ldr	r3, [pc, #172]	; (cdd0 <_malloc_r+0x564>)
    cd22:	4298      	cmp	r0, r3
    cd24:	d81c      	bhi.n	cd60 <_malloc_r+0x4f4>
    cd26:	237c      	movs	r3, #124	; 0x7c
    cd28:	4698      	mov	r8, r3
    cd2a:	0ca8      	lsrs	r0, r5, #18
    cd2c:	4480      	add	r8, r0
    cd2e:	307d      	adds	r0, #125	; 0x7d
    cd30:	00c1      	lsls	r1, r0, #3
    cd32:	e5c2      	b.n	c8ba <_malloc_r+0x4e>
    cd34:	3310      	adds	r3, #16
    cd36:	9300      	str	r3, [sp, #0]
    cd38:	e699      	b.n	ca6e <_malloc_r+0x202>
    cd3a:	2a54      	cmp	r2, #84	; 0x54
    cd3c:	d826      	bhi.n	cd8c <_malloc_r+0x520>
    cd3e:	464b      	mov	r3, r9
    cd40:	0b1a      	lsrs	r2, r3, #12
    cd42:	0011      	movs	r1, r2
    cd44:	326f      	adds	r2, #111	; 0x6f
    cd46:	316e      	adds	r1, #110	; 0x6e
    cd48:	00d2      	lsls	r2, r2, #3
    cd4a:	e729      	b.n	cba0 <_malloc_r+0x334>
    cd4c:	051b      	lsls	r3, r3, #20
    cd4e:	d000      	beq.n	cd52 <_malloc_r+0x4e6>
    cd50:	e6a6      	b.n	caa0 <_malloc_r+0x234>
    cd52:	2001      	movs	r0, #1
    cd54:	9b00      	ldr	r3, [sp, #0]
    cd56:	68b2      	ldr	r2, [r6, #8]
    cd58:	4443      	add	r3, r8
    cd5a:	4303      	orrs	r3, r0
    cd5c:	6053      	str	r3, [r2, #4]
    cd5e:	e6e6      	b.n	cb2e <_malloc_r+0x2c2>
    cd60:	21fe      	movs	r1, #254	; 0xfe
    cd62:	237e      	movs	r3, #126	; 0x7e
    cd64:	207f      	movs	r0, #127	; 0x7f
    cd66:	0089      	lsls	r1, r1, #2
    cd68:	4698      	mov	r8, r3
    cd6a:	e5a6      	b.n	c8ba <_malloc_r+0x4e>
    cd6c:	2300      	movs	r3, #0
    cd6e:	2001      	movs	r0, #1
    cd70:	469b      	mov	fp, r3
    cd72:	e6bd      	b.n	caf0 <_malloc_r+0x284>
    cd74:	0021      	movs	r1, r4
    cd76:	0038      	movs	r0, r7
    cd78:	3108      	adds	r1, #8
    cd7a:	f7ff fa63 	bl	c244 <_free_r>
    cd7e:	4653      	mov	r3, sl
    cd80:	6819      	ldr	r1, [r3, #0]
    cd82:	e6d4      	b.n	cb2e <_malloc_r+0x2c2>
    cd84:	465b      	mov	r3, fp
    cd86:	464a      	mov	r2, r9
    cd88:	601a      	str	r2, [r3, #0]
    cd8a:	e694      	b.n	cab6 <_malloc_r+0x24a>
    cd8c:	21aa      	movs	r1, #170	; 0xaa
    cd8e:	0049      	lsls	r1, r1, #1
    cd90:	428a      	cmp	r2, r1
    cd92:	d806      	bhi.n	cda2 <_malloc_r+0x536>
    cd94:	464b      	mov	r3, r9
    cd96:	0bda      	lsrs	r2, r3, #15
    cd98:	0011      	movs	r1, r2
    cd9a:	3278      	adds	r2, #120	; 0x78
    cd9c:	3177      	adds	r1, #119	; 0x77
    cd9e:	00d2      	lsls	r2, r2, #3
    cda0:	e6fe      	b.n	cba0 <_malloc_r+0x334>
    cda2:	490b      	ldr	r1, [pc, #44]	; (cdd0 <_malloc_r+0x564>)
    cda4:	428a      	cmp	r2, r1
    cda6:	d806      	bhi.n	cdb6 <_malloc_r+0x54a>
    cda8:	464b      	mov	r3, r9
    cdaa:	0c9a      	lsrs	r2, r3, #18
    cdac:	0011      	movs	r1, r2
    cdae:	327d      	adds	r2, #125	; 0x7d
    cdb0:	317c      	adds	r1, #124	; 0x7c
    cdb2:	00d2      	lsls	r2, r2, #3
    cdb4:	e6f4      	b.n	cba0 <_malloc_r+0x334>
    cdb6:	22fe      	movs	r2, #254	; 0xfe
    cdb8:	217e      	movs	r1, #126	; 0x7e
    cdba:	0092      	lsls	r2, r2, #2
    cdbc:	e6f0      	b.n	cba0 <_malloc_r+0x334>
    cdbe:	6873      	ldr	r3, [r6, #4]
    cdc0:	e77e      	b.n	ccc0 <_malloc_r+0x454>
    cdc2:	002b      	movs	r3, r5
    cdc4:	08e8      	lsrs	r0, r5, #3
    cdc6:	3308      	adds	r3, #8
    cdc8:	e605      	b.n	c9d6 <_malloc_r+0x16a>
    cdca:	46c0      	nop			; (mov r8, r8)
    cdcc:	200010b4 	.word	0x200010b4
    cdd0:	00000554 	.word	0x00000554

0000cdd4 <memchr>:
    cdd4:	b570      	push	{r4, r5, r6, lr}
    cdd6:	b2cd      	uxtb	r5, r1
    cdd8:	0783      	lsls	r3, r0, #30
    cdda:	d034      	beq.n	ce46 <memchr+0x72>
    cddc:	1e54      	subs	r4, r2, #1
    cdde:	2a00      	cmp	r2, #0
    cde0:	d01b      	beq.n	ce1a <memchr+0x46>
    cde2:	7803      	ldrb	r3, [r0, #0]
    cde4:	42ab      	cmp	r3, r5
    cde6:	d019      	beq.n	ce1c <memchr+0x48>
    cde8:	2203      	movs	r2, #3
    cdea:	e004      	b.n	cdf6 <memchr+0x22>
    cdec:	3c01      	subs	r4, #1
    cdee:	d314      	bcc.n	ce1a <memchr+0x46>
    cdf0:	7803      	ldrb	r3, [r0, #0]
    cdf2:	42ab      	cmp	r3, r5
    cdf4:	d012      	beq.n	ce1c <memchr+0x48>
    cdf6:	3001      	adds	r0, #1
    cdf8:	4210      	tst	r0, r2
    cdfa:	d1f7      	bne.n	cdec <memchr+0x18>
    cdfc:	2c03      	cmp	r4, #3
    cdfe:	d80e      	bhi.n	ce1e <memchr+0x4a>
    ce00:	2c00      	cmp	r4, #0
    ce02:	d00a      	beq.n	ce1a <memchr+0x46>
    ce04:	7803      	ldrb	r3, [r0, #0]
    ce06:	42ab      	cmp	r3, r5
    ce08:	d008      	beq.n	ce1c <memchr+0x48>
    ce0a:	1904      	adds	r4, r0, r4
    ce0c:	e002      	b.n	ce14 <memchr+0x40>
    ce0e:	7803      	ldrb	r3, [r0, #0]
    ce10:	42ab      	cmp	r3, r5
    ce12:	d003      	beq.n	ce1c <memchr+0x48>
    ce14:	3001      	adds	r0, #1
    ce16:	4284      	cmp	r4, r0
    ce18:	d1f9      	bne.n	ce0e <memchr+0x3a>
    ce1a:	2000      	movs	r0, #0
    ce1c:	bd70      	pop	{r4, r5, r6, pc}
    ce1e:	22ff      	movs	r2, #255	; 0xff
    ce20:	060b      	lsls	r3, r1, #24
    ce22:	0c1b      	lsrs	r3, r3, #16
    ce24:	4011      	ands	r1, r2
    ce26:	4319      	orrs	r1, r3
    ce28:	040b      	lsls	r3, r1, #16
    ce2a:	4e08      	ldr	r6, [pc, #32]	; (ce4c <memchr+0x78>)
    ce2c:	4319      	orrs	r1, r3
    ce2e:	6803      	ldr	r3, [r0, #0]
    ce30:	4a07      	ldr	r2, [pc, #28]	; (ce50 <memchr+0x7c>)
    ce32:	404b      	eors	r3, r1
    ce34:	189a      	adds	r2, r3, r2
    ce36:	439a      	bics	r2, r3
    ce38:	4232      	tst	r2, r6
    ce3a:	d1e3      	bne.n	ce04 <memchr+0x30>
    ce3c:	3c04      	subs	r4, #4
    ce3e:	3004      	adds	r0, #4
    ce40:	2c03      	cmp	r4, #3
    ce42:	d8f4      	bhi.n	ce2e <memchr+0x5a>
    ce44:	e7dc      	b.n	ce00 <memchr+0x2c>
    ce46:	0014      	movs	r4, r2
    ce48:	e7d8      	b.n	cdfc <memchr+0x28>
    ce4a:	46c0      	nop			; (mov r8, r8)
    ce4c:	80808080 	.word	0x80808080
    ce50:	fefefeff 	.word	0xfefefeff

0000ce54 <memmove>:
    ce54:	b5f0      	push	{r4, r5, r6, r7, lr}
    ce56:	4288      	cmp	r0, r1
    ce58:	d90a      	bls.n	ce70 <memmove+0x1c>
    ce5a:	188b      	adds	r3, r1, r2
    ce5c:	4298      	cmp	r0, r3
    ce5e:	d207      	bcs.n	ce70 <memmove+0x1c>
    ce60:	1e53      	subs	r3, r2, #1
    ce62:	2a00      	cmp	r2, #0
    ce64:	d003      	beq.n	ce6e <memmove+0x1a>
    ce66:	5cca      	ldrb	r2, [r1, r3]
    ce68:	54c2      	strb	r2, [r0, r3]
    ce6a:	3b01      	subs	r3, #1
    ce6c:	d2fb      	bcs.n	ce66 <memmove+0x12>
    ce6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ce70:	0005      	movs	r5, r0
    ce72:	2a0f      	cmp	r2, #15
    ce74:	d808      	bhi.n	ce88 <memmove+0x34>
    ce76:	2a00      	cmp	r2, #0
    ce78:	d0f9      	beq.n	ce6e <memmove+0x1a>
    ce7a:	2300      	movs	r3, #0
    ce7c:	5ccc      	ldrb	r4, [r1, r3]
    ce7e:	54ec      	strb	r4, [r5, r3]
    ce80:	3301      	adds	r3, #1
    ce82:	4293      	cmp	r3, r2
    ce84:	d1fa      	bne.n	ce7c <memmove+0x28>
    ce86:	e7f2      	b.n	ce6e <memmove+0x1a>
    ce88:	000b      	movs	r3, r1
    ce8a:	4303      	orrs	r3, r0
    ce8c:	079b      	lsls	r3, r3, #30
    ce8e:	d12d      	bne.n	ceec <memmove+0x98>
    ce90:	0015      	movs	r5, r2
    ce92:	000c      	movs	r4, r1
    ce94:	0003      	movs	r3, r0
    ce96:	3d10      	subs	r5, #16
    ce98:	092f      	lsrs	r7, r5, #4
    ce9a:	3701      	adds	r7, #1
    ce9c:	013f      	lsls	r7, r7, #4
    ce9e:	19c7      	adds	r7, r0, r7
    cea0:	6826      	ldr	r6, [r4, #0]
    cea2:	601e      	str	r6, [r3, #0]
    cea4:	6866      	ldr	r6, [r4, #4]
    cea6:	605e      	str	r6, [r3, #4]
    cea8:	68a6      	ldr	r6, [r4, #8]
    ceaa:	609e      	str	r6, [r3, #8]
    ceac:	68e6      	ldr	r6, [r4, #12]
    ceae:	3410      	adds	r4, #16
    ceb0:	60de      	str	r6, [r3, #12]
    ceb2:	3310      	adds	r3, #16
    ceb4:	429f      	cmp	r7, r3
    ceb6:	d1f3      	bne.n	cea0 <memmove+0x4c>
    ceb8:	240f      	movs	r4, #15
    ceba:	43a5      	bics	r5, r4
    cebc:	3510      	adds	r5, #16
    cebe:	1949      	adds	r1, r1, r5
    cec0:	4014      	ands	r4, r2
    cec2:	1945      	adds	r5, r0, r5
    cec4:	2c03      	cmp	r4, #3
    cec6:	d913      	bls.n	cef0 <memmove+0x9c>
    cec8:	2300      	movs	r3, #0
    ceca:	1f27      	subs	r7, r4, #4
    cecc:	08be      	lsrs	r6, r7, #2
    cece:	3601      	adds	r6, #1
    ced0:	00b6      	lsls	r6, r6, #2
    ced2:	58cc      	ldr	r4, [r1, r3]
    ced4:	50ec      	str	r4, [r5, r3]
    ced6:	3304      	adds	r3, #4
    ced8:	42b3      	cmp	r3, r6
    ceda:	d1fa      	bne.n	ced2 <memmove+0x7e>
    cedc:	2603      	movs	r6, #3
    cede:	43b7      	bics	r7, r6
    cee0:	1d3c      	adds	r4, r7, #4
    cee2:	1909      	adds	r1, r1, r4
    cee4:	192d      	adds	r5, r5, r4
    cee6:	4032      	ands	r2, r6
    cee8:	d1c7      	bne.n	ce7a <memmove+0x26>
    ceea:	e7c0      	b.n	ce6e <memmove+0x1a>
    ceec:	0005      	movs	r5, r0
    ceee:	e7c4      	b.n	ce7a <memmove+0x26>
    cef0:	0022      	movs	r2, r4
    cef2:	e7c0      	b.n	ce76 <memmove+0x22>

0000cef4 <__malloc_lock>:
    cef4:	b510      	push	{r4, lr}
    cef6:	4802      	ldr	r0, [pc, #8]	; (cf00 <__malloc_lock+0xc>)
    cef8:	f7ff fc3c 	bl	c774 <__retarget_lock_acquire_recursive>
    cefc:	bd10      	pop	{r4, pc}
    cefe:	46c0      	nop			; (mov r8, r8)
    cf00:	200011d8 	.word	0x200011d8

0000cf04 <__malloc_unlock>:
    cf04:	b510      	push	{r4, lr}
    cf06:	4802      	ldr	r0, [pc, #8]	; (cf10 <__malloc_unlock+0xc>)
    cf08:	f7ff fc36 	bl	c778 <__retarget_lock_release_recursive>
    cf0c:	bd10      	pop	{r4, pc}
    cf0e:	46c0      	nop			; (mov r8, r8)
    cf10:	200011d8 	.word	0x200011d8

0000cf14 <_Balloc>:
    cf14:	b570      	push	{r4, r5, r6, lr}
    cf16:	0004      	movs	r4, r0
    cf18:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    cf1a:	000d      	movs	r5, r1
    cf1c:	2800      	cmp	r0, #0
    cf1e:	d00a      	beq.n	cf36 <_Balloc+0x22>
    cf20:	00ab      	lsls	r3, r5, #2
    cf22:	18c3      	adds	r3, r0, r3
    cf24:	6818      	ldr	r0, [r3, #0]
    cf26:	2800      	cmp	r0, #0
    cf28:	d00f      	beq.n	cf4a <_Balloc+0x36>
    cf2a:	6802      	ldr	r2, [r0, #0]
    cf2c:	601a      	str	r2, [r3, #0]
    cf2e:	2300      	movs	r3, #0
    cf30:	6103      	str	r3, [r0, #16]
    cf32:	60c3      	str	r3, [r0, #12]
    cf34:	bd70      	pop	{r4, r5, r6, pc}
    cf36:	2221      	movs	r2, #33	; 0x21
    cf38:	2104      	movs	r1, #4
    cf3a:	0020      	movs	r0, r4
    cf3c:	f000 fdb0 	bl	daa0 <_calloc_r>
    cf40:	64e0      	str	r0, [r4, #76]	; 0x4c
    cf42:	2800      	cmp	r0, #0
    cf44:	d1ec      	bne.n	cf20 <_Balloc+0xc>
    cf46:	2000      	movs	r0, #0
    cf48:	e7f4      	b.n	cf34 <_Balloc+0x20>
    cf4a:	2601      	movs	r6, #1
    cf4c:	40ae      	lsls	r6, r5
    cf4e:	1d72      	adds	r2, r6, #5
    cf50:	0092      	lsls	r2, r2, #2
    cf52:	2101      	movs	r1, #1
    cf54:	0020      	movs	r0, r4
    cf56:	f000 fda3 	bl	daa0 <_calloc_r>
    cf5a:	2800      	cmp	r0, #0
    cf5c:	d0f3      	beq.n	cf46 <_Balloc+0x32>
    cf5e:	6045      	str	r5, [r0, #4]
    cf60:	6086      	str	r6, [r0, #8]
    cf62:	e7e4      	b.n	cf2e <_Balloc+0x1a>

0000cf64 <_Bfree>:
    cf64:	2900      	cmp	r1, #0
    cf66:	d006      	beq.n	cf76 <_Bfree+0x12>
    cf68:	684b      	ldr	r3, [r1, #4]
    cf6a:	009a      	lsls	r2, r3, #2
    cf6c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    cf6e:	189b      	adds	r3, r3, r2
    cf70:	681a      	ldr	r2, [r3, #0]
    cf72:	600a      	str	r2, [r1, #0]
    cf74:	6019      	str	r1, [r3, #0]
    cf76:	4770      	bx	lr

0000cf78 <__multadd>:
    cf78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    cf7a:	46ce      	mov	lr, r9
    cf7c:	4647      	mov	r7, r8
    cf7e:	4681      	mov	r9, r0
    cf80:	0008      	movs	r0, r1
    cf82:	b580      	push	{r7, lr}
    cf84:	000d      	movs	r5, r1
    cf86:	690c      	ldr	r4, [r1, #16]
    cf88:	001f      	movs	r7, r3
    cf8a:	2100      	movs	r1, #0
    cf8c:	3014      	adds	r0, #20
    cf8e:	6803      	ldr	r3, [r0, #0]
    cf90:	3101      	adds	r1, #1
    cf92:	041e      	lsls	r6, r3, #16
    cf94:	0c36      	lsrs	r6, r6, #16
    cf96:	4356      	muls	r6, r2
    cf98:	0c1b      	lsrs	r3, r3, #16
    cf9a:	4353      	muls	r3, r2
    cf9c:	19f6      	adds	r6, r6, r7
    cf9e:	0c37      	lsrs	r7, r6, #16
    cfa0:	19db      	adds	r3, r3, r7
    cfa2:	0436      	lsls	r6, r6, #16
    cfa4:	0c1f      	lsrs	r7, r3, #16
    cfa6:	0c36      	lsrs	r6, r6, #16
    cfa8:	041b      	lsls	r3, r3, #16
    cfaa:	199b      	adds	r3, r3, r6
    cfac:	c008      	stmia	r0!, {r3}
    cfae:	428c      	cmp	r4, r1
    cfb0:	dced      	bgt.n	cf8e <__multadd+0x16>
    cfb2:	2f00      	cmp	r7, #0
    cfb4:	d008      	beq.n	cfc8 <__multadd+0x50>
    cfb6:	68ab      	ldr	r3, [r5, #8]
    cfb8:	429c      	cmp	r4, r3
    cfba:	da0a      	bge.n	cfd2 <__multadd+0x5a>
    cfbc:	1d23      	adds	r3, r4, #4
    cfbe:	009b      	lsls	r3, r3, #2
    cfc0:	18eb      	adds	r3, r5, r3
    cfc2:	3401      	adds	r4, #1
    cfc4:	605f      	str	r7, [r3, #4]
    cfc6:	612c      	str	r4, [r5, #16]
    cfc8:	0028      	movs	r0, r5
    cfca:	bc0c      	pop	{r2, r3}
    cfcc:	4690      	mov	r8, r2
    cfce:	4699      	mov	r9, r3
    cfd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    cfd2:	686b      	ldr	r3, [r5, #4]
    cfd4:	4648      	mov	r0, r9
    cfd6:	1c59      	adds	r1, r3, #1
    cfd8:	f7ff ff9c 	bl	cf14 <_Balloc>
    cfdc:	0029      	movs	r1, r5
    cfde:	692b      	ldr	r3, [r5, #16]
    cfe0:	4680      	mov	r8, r0
    cfe2:	1c9a      	adds	r2, r3, #2
    cfe4:	0092      	lsls	r2, r2, #2
    cfe6:	310c      	adds	r1, #12
    cfe8:	300c      	adds	r0, #12
    cfea:	f7fc f93f 	bl	926c <memcpy>
    cfee:	686b      	ldr	r3, [r5, #4]
    cff0:	009a      	lsls	r2, r3, #2
    cff2:	464b      	mov	r3, r9
    cff4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    cff6:	189b      	adds	r3, r3, r2
    cff8:	681a      	ldr	r2, [r3, #0]
    cffa:	602a      	str	r2, [r5, #0]
    cffc:	601d      	str	r5, [r3, #0]
    cffe:	4645      	mov	r5, r8
    d000:	e7dc      	b.n	cfbc <__multadd+0x44>
    d002:	46c0      	nop			; (mov r8, r8)

0000d004 <__hi0bits>:
    d004:	0003      	movs	r3, r0
    d006:	0c02      	lsrs	r2, r0, #16
    d008:	2000      	movs	r0, #0
    d00a:	2a00      	cmp	r2, #0
    d00c:	d101      	bne.n	d012 <__hi0bits+0xe>
    d00e:	041b      	lsls	r3, r3, #16
    d010:	3010      	adds	r0, #16
    d012:	0e1a      	lsrs	r2, r3, #24
    d014:	d101      	bne.n	d01a <__hi0bits+0x16>
    d016:	3008      	adds	r0, #8
    d018:	021b      	lsls	r3, r3, #8
    d01a:	0f1a      	lsrs	r2, r3, #28
    d01c:	d101      	bne.n	d022 <__hi0bits+0x1e>
    d01e:	3004      	adds	r0, #4
    d020:	011b      	lsls	r3, r3, #4
    d022:	0f9a      	lsrs	r2, r3, #30
    d024:	d101      	bne.n	d02a <__hi0bits+0x26>
    d026:	3002      	adds	r0, #2
    d028:	009b      	lsls	r3, r3, #2
    d02a:	2b00      	cmp	r3, #0
    d02c:	db03      	blt.n	d036 <__hi0bits+0x32>
    d02e:	3001      	adds	r0, #1
    d030:	005b      	lsls	r3, r3, #1
    d032:	d400      	bmi.n	d036 <__hi0bits+0x32>
    d034:	2020      	movs	r0, #32
    d036:	4770      	bx	lr

0000d038 <__lo0bits>:
    d038:	6803      	ldr	r3, [r0, #0]
    d03a:	075a      	lsls	r2, r3, #29
    d03c:	d009      	beq.n	d052 <__lo0bits+0x1a>
    d03e:	2200      	movs	r2, #0
    d040:	07d9      	lsls	r1, r3, #31
    d042:	d404      	bmi.n	d04e <__lo0bits+0x16>
    d044:	079a      	lsls	r2, r3, #30
    d046:	d420      	bmi.n	d08a <__lo0bits+0x52>
    d048:	2202      	movs	r2, #2
    d04a:	089b      	lsrs	r3, r3, #2
    d04c:	6003      	str	r3, [r0, #0]
    d04e:	0010      	movs	r0, r2
    d050:	4770      	bx	lr
    d052:	0419      	lsls	r1, r3, #16
    d054:	2200      	movs	r2, #0
    d056:	2900      	cmp	r1, #0
    d058:	d101      	bne.n	d05e <__lo0bits+0x26>
    d05a:	0c1b      	lsrs	r3, r3, #16
    d05c:	3210      	adds	r2, #16
    d05e:	21ff      	movs	r1, #255	; 0xff
    d060:	4219      	tst	r1, r3
    d062:	d101      	bne.n	d068 <__lo0bits+0x30>
    d064:	3208      	adds	r2, #8
    d066:	0a1b      	lsrs	r3, r3, #8
    d068:	0719      	lsls	r1, r3, #28
    d06a:	d101      	bne.n	d070 <__lo0bits+0x38>
    d06c:	3204      	adds	r2, #4
    d06e:	091b      	lsrs	r3, r3, #4
    d070:	0799      	lsls	r1, r3, #30
    d072:	d101      	bne.n	d078 <__lo0bits+0x40>
    d074:	3202      	adds	r2, #2
    d076:	089b      	lsrs	r3, r3, #2
    d078:	07d9      	lsls	r1, r3, #31
    d07a:	d404      	bmi.n	d086 <__lo0bits+0x4e>
    d07c:	085b      	lsrs	r3, r3, #1
    d07e:	d101      	bne.n	d084 <__lo0bits+0x4c>
    d080:	2220      	movs	r2, #32
    d082:	e7e4      	b.n	d04e <__lo0bits+0x16>
    d084:	3201      	adds	r2, #1
    d086:	6003      	str	r3, [r0, #0]
    d088:	e7e1      	b.n	d04e <__lo0bits+0x16>
    d08a:	085b      	lsrs	r3, r3, #1
    d08c:	6003      	str	r3, [r0, #0]
    d08e:	2201      	movs	r2, #1
    d090:	e7dd      	b.n	d04e <__lo0bits+0x16>
    d092:	46c0      	nop			; (mov r8, r8)

0000d094 <__i2b>:
    d094:	b510      	push	{r4, lr}
    d096:	000c      	movs	r4, r1
    d098:	2101      	movs	r1, #1
    d09a:	f7ff ff3b 	bl	cf14 <_Balloc>
    d09e:	2301      	movs	r3, #1
    d0a0:	6144      	str	r4, [r0, #20]
    d0a2:	6103      	str	r3, [r0, #16]
    d0a4:	bd10      	pop	{r4, pc}
    d0a6:	46c0      	nop			; (mov r8, r8)

0000d0a8 <__multiply>:
    d0a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    d0aa:	4657      	mov	r7, sl
    d0ac:	464e      	mov	r6, r9
    d0ae:	4645      	mov	r5, r8
    d0b0:	46de      	mov	lr, fp
    d0b2:	b5e0      	push	{r5, r6, r7, lr}
    d0b4:	6914      	ldr	r4, [r2, #16]
    d0b6:	690e      	ldr	r6, [r1, #16]
    d0b8:	b085      	sub	sp, #20
    d0ba:	000f      	movs	r7, r1
    d0bc:	0015      	movs	r5, r2
    d0be:	42a6      	cmp	r6, r4
    d0c0:	da04      	bge.n	d0cc <__multiply+0x24>
    d0c2:	0033      	movs	r3, r6
    d0c4:	0017      	movs	r7, r2
    d0c6:	0026      	movs	r6, r4
    d0c8:	000d      	movs	r5, r1
    d0ca:	001c      	movs	r4, r3
    d0cc:	1933      	adds	r3, r6, r4
    d0ce:	4698      	mov	r8, r3
    d0d0:	68bb      	ldr	r3, [r7, #8]
    d0d2:	6879      	ldr	r1, [r7, #4]
    d0d4:	4598      	cmp	r8, r3
    d0d6:	dd00      	ble.n	d0da <__multiply+0x32>
    d0d8:	3101      	adds	r1, #1
    d0da:	f7ff ff1b 	bl	cf14 <_Balloc>
    d0de:	2214      	movs	r2, #20
    d0e0:	0003      	movs	r3, r0
    d0e2:	4694      	mov	ip, r2
    d0e4:	4463      	add	r3, ip
    d0e6:	469b      	mov	fp, r3
    d0e8:	4643      	mov	r3, r8
    d0ea:	009b      	lsls	r3, r3, #2
    d0ec:	445b      	add	r3, fp
    d0ee:	0019      	movs	r1, r3
    d0f0:	9302      	str	r3, [sp, #8]
    d0f2:	9003      	str	r0, [sp, #12]
    d0f4:	465b      	mov	r3, fp
    d0f6:	2200      	movs	r2, #0
    d0f8:	458b      	cmp	fp, r1
    d0fa:	d203      	bcs.n	d104 <__multiply+0x5c>
    d0fc:	9902      	ldr	r1, [sp, #8]
    d0fe:	c304      	stmia	r3!, {r2}
    d100:	4299      	cmp	r1, r3
    d102:	d8fc      	bhi.n	d0fe <__multiply+0x56>
    d104:	2314      	movs	r3, #20
    d106:	00a4      	lsls	r4, r4, #2
    d108:	469a      	mov	sl, r3
    d10a:	3714      	adds	r7, #20
    d10c:	0023      	movs	r3, r4
    d10e:	46bc      	mov	ip, r7
    d110:	44aa      	add	sl, r5
    d112:	00b6      	lsls	r6, r6, #2
    d114:	4453      	add	r3, sl
    d116:	9700      	str	r7, [sp, #0]
    d118:	44b4      	add	ip, r6
    d11a:	9301      	str	r3, [sp, #4]
    d11c:	459a      	cmp	sl, r3
    d11e:	d24f      	bcs.n	d1c0 <__multiply+0x118>
    d120:	4653      	mov	r3, sl
    d122:	681b      	ldr	r3, [r3, #0]
    d124:	041e      	lsls	r6, r3, #16
    d126:	0c36      	lsrs	r6, r6, #16
    d128:	d020      	beq.n	d16c <__multiply+0xc4>
    d12a:	465c      	mov	r4, fp
    d12c:	2700      	movs	r7, #0
    d12e:	9d00      	ldr	r5, [sp, #0]
    d130:	0021      	movs	r1, r4
    d132:	cc08      	ldmia	r4!, {r3}
    d134:	cd04      	ldmia	r5!, {r2}
    d136:	4699      	mov	r9, r3
    d138:	4648      	mov	r0, r9
    d13a:	0413      	lsls	r3, r2, #16
    d13c:	0c1b      	lsrs	r3, r3, #16
    d13e:	4373      	muls	r3, r6
    d140:	0400      	lsls	r0, r0, #16
    d142:	0c00      	lsrs	r0, r0, #16
    d144:	181b      	adds	r3, r3, r0
    d146:	19d8      	adds	r0, r3, r7
    d148:	0c13      	lsrs	r3, r2, #16
    d14a:	464a      	mov	r2, r9
    d14c:	4373      	muls	r3, r6
    d14e:	0c12      	lsrs	r2, r2, #16
    d150:	189b      	adds	r3, r3, r2
    d152:	0c02      	lsrs	r2, r0, #16
    d154:	189b      	adds	r3, r3, r2
    d156:	0402      	lsls	r2, r0, #16
    d158:	0c1f      	lsrs	r7, r3, #16
    d15a:	0c12      	lsrs	r2, r2, #16
    d15c:	041b      	lsls	r3, r3, #16
    d15e:	4313      	orrs	r3, r2
    d160:	600b      	str	r3, [r1, #0]
    d162:	45ac      	cmp	ip, r5
    d164:	d8e4      	bhi.n	d130 <__multiply+0x88>
    d166:	4653      	mov	r3, sl
    d168:	6027      	str	r7, [r4, #0]
    d16a:	681b      	ldr	r3, [r3, #0]
    d16c:	0c1e      	lsrs	r6, r3, #16
    d16e:	d020      	beq.n	d1b2 <__multiply+0x10a>
    d170:	465b      	mov	r3, fp
    d172:	2100      	movs	r1, #0
    d174:	681b      	ldr	r3, [r3, #0]
    d176:	465c      	mov	r4, fp
    d178:	0018      	movs	r0, r3
    d17a:	000f      	movs	r7, r1
    d17c:	4662      	mov	r2, ip
    d17e:	9d00      	ldr	r5, [sp, #0]
    d180:	8829      	ldrh	r1, [r5, #0]
    d182:	0c00      	lsrs	r0, r0, #16
    d184:	4371      	muls	r1, r6
    d186:	1809      	adds	r1, r1, r0
    d188:	19c9      	adds	r1, r1, r7
    d18a:	041b      	lsls	r3, r3, #16
    d18c:	0408      	lsls	r0, r1, #16
    d18e:	0c1b      	lsrs	r3, r3, #16
    d190:	4303      	orrs	r3, r0
    d192:	6023      	str	r3, [r4, #0]
    d194:	cd08      	ldmia	r5!, {r3}
    d196:	6860      	ldr	r0, [r4, #4]
    d198:	0c1b      	lsrs	r3, r3, #16
    d19a:	4373      	muls	r3, r6
    d19c:	0407      	lsls	r7, r0, #16
    d19e:	0c3f      	lsrs	r7, r7, #16
    d1a0:	19db      	adds	r3, r3, r7
    d1a2:	0c09      	lsrs	r1, r1, #16
    d1a4:	185b      	adds	r3, r3, r1
    d1a6:	0c1f      	lsrs	r7, r3, #16
    d1a8:	3404      	adds	r4, #4
    d1aa:	42aa      	cmp	r2, r5
    d1ac:	d8e8      	bhi.n	d180 <__multiply+0xd8>
    d1ae:	4694      	mov	ip, r2
    d1b0:	6023      	str	r3, [r4, #0]
    d1b2:	2304      	movs	r3, #4
    d1b4:	4699      	mov	r9, r3
    d1b6:	9b01      	ldr	r3, [sp, #4]
    d1b8:	44ca      	add	sl, r9
    d1ba:	44cb      	add	fp, r9
    d1bc:	4553      	cmp	r3, sl
    d1be:	d8af      	bhi.n	d120 <__multiply+0x78>
    d1c0:	4643      	mov	r3, r8
    d1c2:	2b00      	cmp	r3, #0
    d1c4:	dd0e      	ble.n	d1e4 <__multiply+0x13c>
    d1c6:	9b02      	ldr	r3, [sp, #8]
    d1c8:	3b04      	subs	r3, #4
    d1ca:	681a      	ldr	r2, [r3, #0]
    d1cc:	2a00      	cmp	r2, #0
    d1ce:	d109      	bne.n	d1e4 <__multiply+0x13c>
    d1d0:	4642      	mov	r2, r8
    d1d2:	e003      	b.n	d1dc <__multiply+0x134>
    d1d4:	3b04      	subs	r3, #4
    d1d6:	6819      	ldr	r1, [r3, #0]
    d1d8:	2900      	cmp	r1, #0
    d1da:	d102      	bne.n	d1e2 <__multiply+0x13a>
    d1dc:	3a01      	subs	r2, #1
    d1de:	2a00      	cmp	r2, #0
    d1e0:	d1f8      	bne.n	d1d4 <__multiply+0x12c>
    d1e2:	4690      	mov	r8, r2
    d1e4:	9b03      	ldr	r3, [sp, #12]
    d1e6:	4642      	mov	r2, r8
    d1e8:	0018      	movs	r0, r3
    d1ea:	611a      	str	r2, [r3, #16]
    d1ec:	b005      	add	sp, #20
    d1ee:	bc3c      	pop	{r2, r3, r4, r5}
    d1f0:	4690      	mov	r8, r2
    d1f2:	4699      	mov	r9, r3
    d1f4:	46a2      	mov	sl, r4
    d1f6:	46ab      	mov	fp, r5
    d1f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d1fa:	46c0      	nop			; (mov r8, r8)

0000d1fc <__pow5mult>:
    d1fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d1fe:	4647      	mov	r7, r8
    d200:	46ce      	mov	lr, r9
    d202:	2303      	movs	r3, #3
    d204:	b580      	push	{r7, lr}
    d206:	4680      	mov	r8, r0
    d208:	000f      	movs	r7, r1
    d20a:	0014      	movs	r4, r2
    d20c:	4013      	ands	r3, r2
    d20e:	d13a      	bne.n	d286 <__pow5mult+0x8a>
    d210:	10a4      	asrs	r4, r4, #2
    d212:	003e      	movs	r6, r7
    d214:	2c00      	cmp	r4, #0
    d216:	d025      	beq.n	d264 <__pow5mult+0x68>
    d218:	4643      	mov	r3, r8
    d21a:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    d21c:	2d00      	cmp	r5, #0
    d21e:	d03b      	beq.n	d298 <__pow5mult+0x9c>
    d220:	003e      	movs	r6, r7
    d222:	2300      	movs	r3, #0
    d224:	2701      	movs	r7, #1
    d226:	4699      	mov	r9, r3
    d228:	4227      	tst	r7, r4
    d22a:	d107      	bne.n	d23c <__pow5mult+0x40>
    d22c:	1064      	asrs	r4, r4, #1
    d22e:	d019      	beq.n	d264 <__pow5mult+0x68>
    d230:	6828      	ldr	r0, [r5, #0]
    d232:	2800      	cmp	r0, #0
    d234:	d01b      	beq.n	d26e <__pow5mult+0x72>
    d236:	0005      	movs	r5, r0
    d238:	4227      	tst	r7, r4
    d23a:	d0f7      	beq.n	d22c <__pow5mult+0x30>
    d23c:	002a      	movs	r2, r5
    d23e:	0031      	movs	r1, r6
    d240:	4640      	mov	r0, r8
    d242:	f7ff ff31 	bl	d0a8 <__multiply>
    d246:	2e00      	cmp	r6, #0
    d248:	d01b      	beq.n	d282 <__pow5mult+0x86>
    d24a:	4642      	mov	r2, r8
    d24c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    d24e:	6873      	ldr	r3, [r6, #4]
    d250:	4694      	mov	ip, r2
    d252:	009b      	lsls	r3, r3, #2
    d254:	4463      	add	r3, ip
    d256:	681a      	ldr	r2, [r3, #0]
    d258:	1064      	asrs	r4, r4, #1
    d25a:	6032      	str	r2, [r6, #0]
    d25c:	601e      	str	r6, [r3, #0]
    d25e:	0006      	movs	r6, r0
    d260:	2c00      	cmp	r4, #0
    d262:	d1e5      	bne.n	d230 <__pow5mult+0x34>
    d264:	0030      	movs	r0, r6
    d266:	bc0c      	pop	{r2, r3}
    d268:	4690      	mov	r8, r2
    d26a:	4699      	mov	r9, r3
    d26c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d26e:	002a      	movs	r2, r5
    d270:	0029      	movs	r1, r5
    d272:	4640      	mov	r0, r8
    d274:	f7ff ff18 	bl	d0a8 <__multiply>
    d278:	464b      	mov	r3, r9
    d27a:	6028      	str	r0, [r5, #0]
    d27c:	6003      	str	r3, [r0, #0]
    d27e:	0005      	movs	r5, r0
    d280:	e7da      	b.n	d238 <__pow5mult+0x3c>
    d282:	0006      	movs	r6, r0
    d284:	e7d2      	b.n	d22c <__pow5mult+0x30>
    d286:	4a0b      	ldr	r2, [pc, #44]	; (d2b4 <__pow5mult+0xb8>)
    d288:	3b01      	subs	r3, #1
    d28a:	009b      	lsls	r3, r3, #2
    d28c:	589a      	ldr	r2, [r3, r2]
    d28e:	2300      	movs	r3, #0
    d290:	f7ff fe72 	bl	cf78 <__multadd>
    d294:	0007      	movs	r7, r0
    d296:	e7bb      	b.n	d210 <__pow5mult+0x14>
    d298:	2101      	movs	r1, #1
    d29a:	4640      	mov	r0, r8
    d29c:	f7ff fe3a 	bl	cf14 <_Balloc>
    d2a0:	4b05      	ldr	r3, [pc, #20]	; (d2b8 <__pow5mult+0xbc>)
    d2a2:	0005      	movs	r5, r0
    d2a4:	6143      	str	r3, [r0, #20]
    d2a6:	2301      	movs	r3, #1
    d2a8:	6103      	str	r3, [r0, #16]
    d2aa:	4643      	mov	r3, r8
    d2ac:	6498      	str	r0, [r3, #72]	; 0x48
    d2ae:	2300      	movs	r3, #0
    d2b0:	6003      	str	r3, [r0, #0]
    d2b2:	e7b5      	b.n	d220 <__pow5mult+0x24>
    d2b4:	0000e6b8 	.word	0x0000e6b8
    d2b8:	00000271 	.word	0x00000271

0000d2bc <__lshift>:
    d2bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d2be:	464e      	mov	r6, r9
    d2c0:	4645      	mov	r5, r8
    d2c2:	46de      	mov	lr, fp
    d2c4:	4657      	mov	r7, sl
    d2c6:	b5e0      	push	{r5, r6, r7, lr}
    d2c8:	000e      	movs	r6, r1
    d2ca:	6933      	ldr	r3, [r6, #16]
    d2cc:	1154      	asrs	r4, r2, #5
    d2ce:	4698      	mov	r8, r3
    d2d0:	44a0      	add	r8, r4
    d2d2:	4643      	mov	r3, r8
    d2d4:	1c5d      	adds	r5, r3, #1
    d2d6:	68b3      	ldr	r3, [r6, #8]
    d2d8:	4683      	mov	fp, r0
    d2da:	4691      	mov	r9, r2
    d2dc:	6849      	ldr	r1, [r1, #4]
    d2de:	429d      	cmp	r5, r3
    d2e0:	dd03      	ble.n	d2ea <__lshift+0x2e>
    d2e2:	3101      	adds	r1, #1
    d2e4:	005b      	lsls	r3, r3, #1
    d2e6:	429d      	cmp	r5, r3
    d2e8:	dcfb      	bgt.n	d2e2 <__lshift+0x26>
    d2ea:	4658      	mov	r0, fp
    d2ec:	f7ff fe12 	bl	cf14 <_Balloc>
    d2f0:	0003      	movs	r3, r0
    d2f2:	4684      	mov	ip, r0
    d2f4:	3314      	adds	r3, #20
    d2f6:	2c00      	cmp	r4, #0
    d2f8:	dd06      	ble.n	d308 <__lshift+0x4c>
    d2fa:	2100      	movs	r1, #0
    d2fc:	00a4      	lsls	r4, r4, #2
    d2fe:	001a      	movs	r2, r3
    d300:	191b      	adds	r3, r3, r4
    d302:	c202      	stmia	r2!, {r1}
    d304:	4293      	cmp	r3, r2
    d306:	d1fc      	bne.n	d302 <__lshift+0x46>
    d308:	6932      	ldr	r2, [r6, #16]
    d30a:	4648      	mov	r0, r9
    d30c:	0097      	lsls	r7, r2, #2
    d30e:	0031      	movs	r1, r6
    d310:	221f      	movs	r2, #31
    d312:	3114      	adds	r1, #20
    d314:	4010      	ands	r0, r2
    d316:	19cf      	adds	r7, r1, r7
    d318:	4681      	mov	r9, r0
    d31a:	2800      	cmp	r0, #0
    d31c:	d025      	beq.n	d36a <__lshift+0xae>
    d31e:	2220      	movs	r2, #32
    d320:	1a12      	subs	r2, r2, r0
    d322:	4692      	mov	sl, r2
    d324:	2200      	movs	r2, #0
    d326:	4648      	mov	r0, r9
    d328:	680c      	ldr	r4, [r1, #0]
    d32a:	4084      	lsls	r4, r0
    d32c:	4650      	mov	r0, sl
    d32e:	4314      	orrs	r4, r2
    d330:	601c      	str	r4, [r3, #0]
    d332:	c904      	ldmia	r1!, {r2}
    d334:	3304      	adds	r3, #4
    d336:	40c2      	lsrs	r2, r0
    d338:	428f      	cmp	r7, r1
    d33a:	d8f4      	bhi.n	d326 <__lshift+0x6a>
    d33c:	601a      	str	r2, [r3, #0]
    d33e:	2a00      	cmp	r2, #0
    d340:	d001      	beq.n	d346 <__lshift+0x8a>
    d342:	4645      	mov	r5, r8
    d344:	3502      	adds	r5, #2
    d346:	4663      	mov	r3, ip
    d348:	3d01      	subs	r5, #1
    d34a:	611d      	str	r5, [r3, #16]
    d34c:	6873      	ldr	r3, [r6, #4]
    d34e:	4660      	mov	r0, ip
    d350:	009a      	lsls	r2, r3, #2
    d352:	465b      	mov	r3, fp
    d354:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    d356:	189b      	adds	r3, r3, r2
    d358:	681a      	ldr	r2, [r3, #0]
    d35a:	6032      	str	r2, [r6, #0]
    d35c:	601e      	str	r6, [r3, #0]
    d35e:	bc3c      	pop	{r2, r3, r4, r5}
    d360:	4690      	mov	r8, r2
    d362:	4699      	mov	r9, r3
    d364:	46a2      	mov	sl, r4
    d366:	46ab      	mov	fp, r5
    d368:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d36a:	c904      	ldmia	r1!, {r2}
    d36c:	c304      	stmia	r3!, {r2}
    d36e:	428f      	cmp	r7, r1
    d370:	d9e9      	bls.n	d346 <__lshift+0x8a>
    d372:	c904      	ldmia	r1!, {r2}
    d374:	c304      	stmia	r3!, {r2}
    d376:	428f      	cmp	r7, r1
    d378:	d8f7      	bhi.n	d36a <__lshift+0xae>
    d37a:	e7e4      	b.n	d346 <__lshift+0x8a>

0000d37c <__mcmp>:
    d37c:	690a      	ldr	r2, [r1, #16]
    d37e:	6903      	ldr	r3, [r0, #16]
    d380:	b530      	push	{r4, r5, lr}
    d382:	0005      	movs	r5, r0
    d384:	1a98      	subs	r0, r3, r2
    d386:	d111      	bne.n	d3ac <__mcmp+0x30>
    d388:	0092      	lsls	r2, r2, #2
    d38a:	3514      	adds	r5, #20
    d38c:	3114      	adds	r1, #20
    d38e:	18ab      	adds	r3, r5, r2
    d390:	1889      	adds	r1, r1, r2
    d392:	e001      	b.n	d398 <__mcmp+0x1c>
    d394:	429d      	cmp	r5, r3
    d396:	d209      	bcs.n	d3ac <__mcmp+0x30>
    d398:	3b04      	subs	r3, #4
    d39a:	3904      	subs	r1, #4
    d39c:	681c      	ldr	r4, [r3, #0]
    d39e:	680a      	ldr	r2, [r1, #0]
    d3a0:	4294      	cmp	r4, r2
    d3a2:	d0f7      	beq.n	d394 <__mcmp+0x18>
    d3a4:	4294      	cmp	r4, r2
    d3a6:	4180      	sbcs	r0, r0
    d3a8:	2201      	movs	r2, #1
    d3aa:	4310      	orrs	r0, r2
    d3ac:	bd30      	pop	{r4, r5, pc}
    d3ae:	46c0      	nop			; (mov r8, r8)

0000d3b0 <__mdiff>:
    d3b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d3b2:	4645      	mov	r5, r8
    d3b4:	46de      	mov	lr, fp
    d3b6:	4657      	mov	r7, sl
    d3b8:	464e      	mov	r6, r9
    d3ba:	0014      	movs	r4, r2
    d3bc:	690b      	ldr	r3, [r1, #16]
    d3be:	6912      	ldr	r2, [r2, #16]
    d3c0:	b5e0      	push	{r5, r6, r7, lr}
    d3c2:	4688      	mov	r8, r1
    d3c4:	1a9d      	subs	r5, r3, r2
    d3c6:	d11a      	bne.n	d3fe <__mdiff+0x4e>
    d3c8:	000f      	movs	r7, r1
    d3ca:	2114      	movs	r1, #20
    d3cc:	468c      	mov	ip, r1
    d3ce:	0092      	lsls	r2, r2, #2
    d3d0:	3714      	adds	r7, #20
    d3d2:	44a4      	add	ip, r4
    d3d4:	18bb      	adds	r3, r7, r2
    d3d6:	4462      	add	r2, ip
    d3d8:	e002      	b.n	d3e0 <__mdiff+0x30>
    d3da:	429f      	cmp	r7, r3
    d3dc:	d300      	bcc.n	d3e0 <__mdiff+0x30>
    d3de:	e070      	b.n	d4c2 <__mdiff+0x112>
    d3e0:	3b04      	subs	r3, #4
    d3e2:	3a04      	subs	r2, #4
    d3e4:	681e      	ldr	r6, [r3, #0]
    d3e6:	6811      	ldr	r1, [r2, #0]
    d3e8:	428e      	cmp	r6, r1
    d3ea:	d0f6      	beq.n	d3da <__mdiff+0x2a>
    d3ec:	d300      	bcc.n	d3f0 <__mdiff+0x40>
    d3ee:	e071      	b.n	d4d4 <__mdiff+0x124>
    d3f0:	4643      	mov	r3, r8
    d3f2:	003e      	movs	r6, r7
    d3f4:	46a0      	mov	r8, r4
    d3f6:	4667      	mov	r7, ip
    d3f8:	001c      	movs	r4, r3
    d3fa:	2501      	movs	r5, #1
    d3fc:	e006      	b.n	d40c <__mdiff+0x5c>
    d3fe:	2d00      	cmp	r5, #0
    d400:	db6a      	blt.n	d4d8 <__mdiff+0x128>
    d402:	4647      	mov	r7, r8
    d404:	0026      	movs	r6, r4
    d406:	2500      	movs	r5, #0
    d408:	3714      	adds	r7, #20
    d40a:	3614      	adds	r6, #20
    d40c:	4643      	mov	r3, r8
    d40e:	6859      	ldr	r1, [r3, #4]
    d410:	f7ff fd80 	bl	cf14 <_Balloc>
    d414:	4643      	mov	r3, r8
    d416:	4681      	mov	r9, r0
    d418:	60c5      	str	r5, [r0, #12]
    d41a:	6918      	ldr	r0, [r3, #16]
    d41c:	464d      	mov	r5, r9
    d41e:	0083      	lsls	r3, r0, #2
    d420:	469c      	mov	ip, r3
    d422:	6923      	ldr	r3, [r4, #16]
    d424:	44bc      	add	ip, r7
    d426:	009b      	lsls	r3, r3, #2
    d428:	4698      	mov	r8, r3
    d42a:	2300      	movs	r3, #0
    d42c:	44b0      	add	r8, r6
    d42e:	3514      	adds	r5, #20
    d430:	469a      	mov	sl, r3
    d432:	e000      	b.n	d436 <__mdiff+0x86>
    d434:	0027      	movs	r7, r4
    d436:	ce04      	ldmia	r6!, {r2}
    d438:	003c      	movs	r4, r7
    d43a:	4693      	mov	fp, r2
    d43c:	4659      	mov	r1, fp
    d43e:	cc08      	ldmia	r4!, {r3}
    d440:	0409      	lsls	r1, r1, #16
    d442:	041a      	lsls	r2, r3, #16
    d444:	0c12      	lsrs	r2, r2, #16
    d446:	4452      	add	r2, sl
    d448:	0c09      	lsrs	r1, r1, #16
    d44a:	1a52      	subs	r2, r2, r1
    d44c:	0c19      	lsrs	r1, r3, #16
    d44e:	465b      	mov	r3, fp
    d450:	0c1b      	lsrs	r3, r3, #16
    d452:	1acb      	subs	r3, r1, r3
    d454:	1411      	asrs	r1, r2, #16
    d456:	185b      	adds	r3, r3, r1
    d458:	0412      	lsls	r2, r2, #16
    d45a:	1419      	asrs	r1, r3, #16
    d45c:	0c12      	lsrs	r2, r2, #16
    d45e:	041b      	lsls	r3, r3, #16
    d460:	468a      	mov	sl, r1
    d462:	4313      	orrs	r3, r2
    d464:	1d29      	adds	r1, r5, #4
    d466:	602b      	str	r3, [r5, #0]
    d468:	000d      	movs	r5, r1
    d46a:	45b0      	cmp	r8, r6
    d46c:	d8e2      	bhi.n	d434 <__mdiff+0x84>
    d46e:	45a4      	cmp	ip, r4
    d470:	d916      	bls.n	d4a0 <__mdiff+0xf0>
    d472:	cc08      	ldmia	r4!, {r3}
    d474:	041a      	lsls	r2, r3, #16
    d476:	0c12      	lsrs	r2, r2, #16
    d478:	4452      	add	r2, sl
    d47a:	1416      	asrs	r6, r2, #16
    d47c:	0c1b      	lsrs	r3, r3, #16
    d47e:	199b      	adds	r3, r3, r6
    d480:	0412      	lsls	r2, r2, #16
    d482:	141e      	asrs	r6, r3, #16
    d484:	0c12      	lsrs	r2, r2, #16
    d486:	041b      	lsls	r3, r3, #16
    d488:	4313      	orrs	r3, r2
    d48a:	46b2      	mov	sl, r6
    d48c:	c508      	stmia	r5!, {r3}
    d48e:	45a4      	cmp	ip, r4
    d490:	d8ef      	bhi.n	d472 <__mdiff+0xc2>
    d492:	4662      	mov	r2, ip
    d494:	2403      	movs	r4, #3
    d496:	1bd2      	subs	r2, r2, r7
    d498:	3a05      	subs	r2, #5
    d49a:	43a2      	bics	r2, r4
    d49c:	3204      	adds	r2, #4
    d49e:	1889      	adds	r1, r1, r2
    d4a0:	3904      	subs	r1, #4
    d4a2:	2b00      	cmp	r3, #0
    d4a4:	d104      	bne.n	d4b0 <__mdiff+0x100>
    d4a6:	3904      	subs	r1, #4
    d4a8:	680b      	ldr	r3, [r1, #0]
    d4aa:	3801      	subs	r0, #1
    d4ac:	2b00      	cmp	r3, #0
    d4ae:	d0fa      	beq.n	d4a6 <__mdiff+0xf6>
    d4b0:	464b      	mov	r3, r9
    d4b2:	6118      	str	r0, [r3, #16]
    d4b4:	4648      	mov	r0, r9
    d4b6:	bc3c      	pop	{r2, r3, r4, r5}
    d4b8:	4690      	mov	r8, r2
    d4ba:	4699      	mov	r9, r3
    d4bc:	46a2      	mov	sl, r4
    d4be:	46ab      	mov	fp, r5
    d4c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d4c2:	2100      	movs	r1, #0
    d4c4:	f7ff fd26 	bl	cf14 <_Balloc>
    d4c8:	2301      	movs	r3, #1
    d4ca:	6103      	str	r3, [r0, #16]
    d4cc:	2300      	movs	r3, #0
    d4ce:	4681      	mov	r9, r0
    d4d0:	6143      	str	r3, [r0, #20]
    d4d2:	e7ef      	b.n	d4b4 <__mdiff+0x104>
    d4d4:	4666      	mov	r6, ip
    d4d6:	e799      	b.n	d40c <__mdiff+0x5c>
    d4d8:	0027      	movs	r7, r4
    d4da:	000e      	movs	r6, r1
    d4dc:	46a0      	mov	r8, r4
    d4de:	3714      	adds	r7, #20
    d4e0:	3614      	adds	r6, #20
    d4e2:	000c      	movs	r4, r1
    d4e4:	2501      	movs	r5, #1
    d4e6:	e791      	b.n	d40c <__mdiff+0x5c>

0000d4e8 <__d2b>:
    d4e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    d4ea:	2101      	movs	r1, #1
    d4ec:	001c      	movs	r4, r3
    d4ee:	b083      	sub	sp, #12
    d4f0:	9e08      	ldr	r6, [sp, #32]
    d4f2:	0015      	movs	r5, r2
    d4f4:	f7ff fd0e 	bl	cf14 <_Balloc>
    d4f8:	0323      	lsls	r3, r4, #12
    d4fa:	0064      	lsls	r4, r4, #1
    d4fc:	0007      	movs	r7, r0
    d4fe:	0b1b      	lsrs	r3, r3, #12
    d500:	0d64      	lsrs	r4, r4, #21
    d502:	d002      	beq.n	d50a <__d2b+0x22>
    d504:	2280      	movs	r2, #128	; 0x80
    d506:	0352      	lsls	r2, r2, #13
    d508:	4313      	orrs	r3, r2
    d50a:	9301      	str	r3, [sp, #4]
    d50c:	2d00      	cmp	r5, #0
    d50e:	d019      	beq.n	d544 <__d2b+0x5c>
    d510:	4668      	mov	r0, sp
    d512:	9500      	str	r5, [sp, #0]
    d514:	f7ff fd90 	bl	d038 <__lo0bits>
    d518:	2800      	cmp	r0, #0
    d51a:	d130      	bne.n	d57e <__d2b+0x96>
    d51c:	9b00      	ldr	r3, [sp, #0]
    d51e:	617b      	str	r3, [r7, #20]
    d520:	9b01      	ldr	r3, [sp, #4]
    d522:	61bb      	str	r3, [r7, #24]
    d524:	1e5a      	subs	r2, r3, #1
    d526:	4193      	sbcs	r3, r2
    d528:	1c5d      	adds	r5, r3, #1
    d52a:	613d      	str	r5, [r7, #16]
    d52c:	2c00      	cmp	r4, #0
    d52e:	d014      	beq.n	d55a <__d2b+0x72>
    d530:	4b19      	ldr	r3, [pc, #100]	; (d598 <__d2b+0xb0>)
    d532:	469c      	mov	ip, r3
    d534:	2335      	movs	r3, #53	; 0x35
    d536:	4464      	add	r4, ip
    d538:	1824      	adds	r4, r4, r0
    d53a:	1a18      	subs	r0, r3, r0
    d53c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d53e:	6034      	str	r4, [r6, #0]
    d540:	6018      	str	r0, [r3, #0]
    d542:	e019      	b.n	d578 <__d2b+0x90>
    d544:	a801      	add	r0, sp, #4
    d546:	f7ff fd77 	bl	d038 <__lo0bits>
    d54a:	9b01      	ldr	r3, [sp, #4]
    d54c:	3020      	adds	r0, #32
    d54e:	617b      	str	r3, [r7, #20]
    d550:	2301      	movs	r3, #1
    d552:	2501      	movs	r5, #1
    d554:	613b      	str	r3, [r7, #16]
    d556:	2c00      	cmp	r4, #0
    d558:	d1ea      	bne.n	d530 <__d2b+0x48>
    d55a:	4b10      	ldr	r3, [pc, #64]	; (d59c <__d2b+0xb4>)
    d55c:	469c      	mov	ip, r3
    d55e:	4b10      	ldr	r3, [pc, #64]	; (d5a0 <__d2b+0xb8>)
    d560:	4460      	add	r0, ip
    d562:	18eb      	adds	r3, r5, r3
    d564:	009b      	lsls	r3, r3, #2
    d566:	18fb      	adds	r3, r7, r3
    d568:	6030      	str	r0, [r6, #0]
    d56a:	6958      	ldr	r0, [r3, #20]
    d56c:	f7ff fd4a 	bl	d004 <__hi0bits>
    d570:	016b      	lsls	r3, r5, #5
    d572:	1a18      	subs	r0, r3, r0
    d574:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d576:	6018      	str	r0, [r3, #0]
    d578:	0038      	movs	r0, r7
    d57a:	b003      	add	sp, #12
    d57c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d57e:	9b01      	ldr	r3, [sp, #4]
    d580:	2220      	movs	r2, #32
    d582:	0019      	movs	r1, r3
    d584:	1a12      	subs	r2, r2, r0
    d586:	4091      	lsls	r1, r2
    d588:	000a      	movs	r2, r1
    d58a:	40c3      	lsrs	r3, r0
    d58c:	9900      	ldr	r1, [sp, #0]
    d58e:	9301      	str	r3, [sp, #4]
    d590:	430a      	orrs	r2, r1
    d592:	617a      	str	r2, [r7, #20]
    d594:	e7c5      	b.n	d522 <__d2b+0x3a>
    d596:	46c0      	nop			; (mov r8, r8)
    d598:	fffffbcd 	.word	0xfffffbcd
    d59c:	fffffbce 	.word	0xfffffbce
    d5a0:	3fffffff 	.word	0x3fffffff

0000d5a4 <_realloc_r>:
    d5a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    d5a6:	464e      	mov	r6, r9
    d5a8:	4645      	mov	r5, r8
    d5aa:	46de      	mov	lr, fp
    d5ac:	4657      	mov	r7, sl
    d5ae:	b5e0      	push	{r5, r6, r7, lr}
    d5b0:	b085      	sub	sp, #20
    d5b2:	9001      	str	r0, [sp, #4]
    d5b4:	000e      	movs	r6, r1
    d5b6:	0015      	movs	r5, r2
    d5b8:	2900      	cmp	r1, #0
    d5ba:	d100      	bne.n	d5be <_realloc_r+0x1a>
    d5bc:	e09e      	b.n	d6fc <_realloc_r+0x158>
    d5be:	0037      	movs	r7, r6
    d5c0:	9801      	ldr	r0, [sp, #4]
    d5c2:	3f08      	subs	r7, #8
    d5c4:	f7ff fc96 	bl	cef4 <__malloc_lock>
    d5c8:	687a      	ldr	r2, [r7, #4]
    d5ca:	2303      	movs	r3, #3
    d5cc:	0014      	movs	r4, r2
    d5ce:	439c      	bics	r4, r3
    d5d0:	002b      	movs	r3, r5
    d5d2:	330b      	adds	r3, #11
    d5d4:	46b9      	mov	r9, r7
    d5d6:	2b16      	cmp	r3, #22
    d5d8:	d847      	bhi.n	d66a <_realloc_r+0xc6>
    d5da:	2110      	movs	r1, #16
    d5dc:	2310      	movs	r3, #16
    d5de:	4688      	mov	r8, r1
    d5e0:	4545      	cmp	r5, r8
    d5e2:	d846      	bhi.n	d672 <_realloc_r+0xce>
    d5e4:	429c      	cmp	r4, r3
    d5e6:	da49      	bge.n	d67c <_realloc_r+0xd8>
    d5e8:	49cc      	ldr	r1, [pc, #816]	; (d91c <_realloc_r+0x378>)
    d5ea:	1938      	adds	r0, r7, r4
    d5ec:	468b      	mov	fp, r1
    d5ee:	6889      	ldr	r1, [r1, #8]
    d5f0:	9002      	str	r0, [sp, #8]
    d5f2:	4288      	cmp	r0, r1
    d5f4:	d100      	bne.n	d5f8 <_realloc_r+0x54>
    d5f6:	e0c2      	b.n	d77e <_realloc_r+0x1da>
    d5f8:	2101      	movs	r1, #1
    d5fa:	468a      	mov	sl, r1
    d5fc:	6840      	ldr	r0, [r0, #4]
    d5fe:	0001      	movs	r1, r0
    d600:	9003      	str	r0, [sp, #12]
    d602:	4650      	mov	r0, sl
    d604:	4381      	bics	r1, r0
    d606:	468c      	mov	ip, r1
    d608:	9902      	ldr	r1, [sp, #8]
    d60a:	468b      	mov	fp, r1
    d60c:	44dc      	add	ip, fp
    d60e:	4661      	mov	r1, ip
    d610:	6849      	ldr	r1, [r1, #4]
    d612:	4201      	tst	r1, r0
    d614:	d04d      	beq.n	d6b2 <_realloc_r+0x10e>
    d616:	4210      	tst	r0, r2
    d618:	d100      	bne.n	d61c <_realloc_r+0x78>
    d61a:	e0a2      	b.n	d762 <_realloc_r+0x1be>
    d61c:	0029      	movs	r1, r5
    d61e:	9801      	ldr	r0, [sp, #4]
    d620:	f7ff f924 	bl	c86c <_malloc_r>
    d624:	1e05      	subs	r5, r0, #0
    d626:	d039      	beq.n	d69c <_realloc_r+0xf8>
    d628:	2301      	movs	r3, #1
    d62a:	0002      	movs	r2, r0
    d62c:	6879      	ldr	r1, [r7, #4]
    d62e:	3a08      	subs	r2, #8
    d630:	4399      	bics	r1, r3
    d632:	187f      	adds	r7, r7, r1
    d634:	42ba      	cmp	r2, r7
    d636:	d100      	bne.n	d63a <_realloc_r+0x96>
    d638:	e12e      	b.n	d898 <_realloc_r+0x2f4>
    d63a:	1f22      	subs	r2, r4, #4
    d63c:	2a24      	cmp	r2, #36	; 0x24
    d63e:	d900      	bls.n	d642 <_realloc_r+0x9e>
    d640:	e114      	b.n	d86c <_realloc_r+0x2c8>
    d642:	2a13      	cmp	r2, #19
    d644:	d900      	bls.n	d648 <_realloc_r+0xa4>
    d646:	e0e8      	b.n	d81a <_realloc_r+0x276>
    d648:	0003      	movs	r3, r0
    d64a:	0032      	movs	r2, r6
    d64c:	6811      	ldr	r1, [r2, #0]
    d64e:	6019      	str	r1, [r3, #0]
    d650:	6851      	ldr	r1, [r2, #4]
    d652:	6059      	str	r1, [r3, #4]
    d654:	6892      	ldr	r2, [r2, #8]
    d656:	609a      	str	r2, [r3, #8]
    d658:	9c01      	ldr	r4, [sp, #4]
    d65a:	0031      	movs	r1, r6
    d65c:	0020      	movs	r0, r4
    d65e:	f7fe fdf1 	bl	c244 <_free_r>
    d662:	0020      	movs	r0, r4
    d664:	f7ff fc4e 	bl	cf04 <__malloc_unlock>
    d668:	e01b      	b.n	d6a2 <_realloc_r+0xfe>
    d66a:	2107      	movs	r1, #7
    d66c:	438b      	bics	r3, r1
    d66e:	4698      	mov	r8, r3
    d670:	d5b6      	bpl.n	d5e0 <_realloc_r+0x3c>
    d672:	230c      	movs	r3, #12
    d674:	9a01      	ldr	r2, [sp, #4]
    d676:	2500      	movs	r5, #0
    d678:	6013      	str	r3, [r2, #0]
    d67a:	e012      	b.n	d6a2 <_realloc_r+0xfe>
    d67c:	0035      	movs	r5, r6
    d67e:	4643      	mov	r3, r8
    d680:	1ae3      	subs	r3, r4, r3
    d682:	2b0f      	cmp	r3, #15
    d684:	d825      	bhi.n	d6d2 <_realloc_r+0x12e>
    d686:	464b      	mov	r3, r9
    d688:	2201      	movs	r2, #1
    d68a:	4649      	mov	r1, r9
    d68c:	685b      	ldr	r3, [r3, #4]
    d68e:	4013      	ands	r3, r2
    d690:	4323      	orrs	r3, r4
    d692:	604b      	str	r3, [r1, #4]
    d694:	444c      	add	r4, r9
    d696:	6863      	ldr	r3, [r4, #4]
    d698:	431a      	orrs	r2, r3
    d69a:	6062      	str	r2, [r4, #4]
    d69c:	9801      	ldr	r0, [sp, #4]
    d69e:	f7ff fc31 	bl	cf04 <__malloc_unlock>
    d6a2:	0028      	movs	r0, r5
    d6a4:	b005      	add	sp, #20
    d6a6:	bc3c      	pop	{r2, r3, r4, r5}
    d6a8:	4690      	mov	r8, r2
    d6aa:	4699      	mov	r9, r3
    d6ac:	46a2      	mov	sl, r4
    d6ae:	46ab      	mov	fp, r5
    d6b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d6b2:	2103      	movs	r1, #3
    d6b4:	9803      	ldr	r0, [sp, #12]
    d6b6:	468c      	mov	ip, r1
    d6b8:	4388      	bics	r0, r1
    d6ba:	1821      	adds	r1, r4, r0
    d6bc:	468b      	mov	fp, r1
    d6be:	4299      	cmp	r1, r3
    d6c0:	db21      	blt.n	d706 <_realloc_r+0x162>
    d6c2:	9a02      	ldr	r2, [sp, #8]
    d6c4:	0035      	movs	r5, r6
    d6c6:	68d3      	ldr	r3, [r2, #12]
    d6c8:	6892      	ldr	r2, [r2, #8]
    d6ca:	465c      	mov	r4, fp
    d6cc:	60d3      	str	r3, [r2, #12]
    d6ce:	609a      	str	r2, [r3, #8]
    d6d0:	e7d5      	b.n	d67e <_realloc_r+0xda>
    d6d2:	464a      	mov	r2, r9
    d6d4:	2001      	movs	r0, #1
    d6d6:	4646      	mov	r6, r8
    d6d8:	6852      	ldr	r2, [r2, #4]
    d6da:	4649      	mov	r1, r9
    d6dc:	4002      	ands	r2, r0
    d6de:	4332      	orrs	r2, r6
    d6e0:	464e      	mov	r6, r9
    d6e2:	4441      	add	r1, r8
    d6e4:	4303      	orrs	r3, r0
    d6e6:	6072      	str	r2, [r6, #4]
    d6e8:	444c      	add	r4, r9
    d6ea:	604b      	str	r3, [r1, #4]
    d6ec:	6863      	ldr	r3, [r4, #4]
    d6ee:	3108      	adds	r1, #8
    d6f0:	4318      	orrs	r0, r3
    d6f2:	6060      	str	r0, [r4, #4]
    d6f4:	9801      	ldr	r0, [sp, #4]
    d6f6:	f7fe fda5 	bl	c244 <_free_r>
    d6fa:	e7cf      	b.n	d69c <_realloc_r+0xf8>
    d6fc:	0011      	movs	r1, r2
    d6fe:	f7ff f8b5 	bl	c86c <_malloc_r>
    d702:	0005      	movs	r5, r0
    d704:	e7cd      	b.n	d6a2 <_realloc_r+0xfe>
    d706:	4651      	mov	r1, sl
    d708:	4211      	tst	r1, r2
    d70a:	d000      	beq.n	d70e <_realloc_r+0x16a>
    d70c:	e786      	b.n	d61c <_realloc_r+0x78>
    d70e:	4661      	mov	r1, ip
    d710:	683a      	ldr	r2, [r7, #0]
    d712:	1aba      	subs	r2, r7, r2
    d714:	4692      	mov	sl, r2
    d716:	6852      	ldr	r2, [r2, #4]
    d718:	438a      	bics	r2, r1
    d71a:	1880      	adds	r0, r0, r2
    d71c:	4683      	mov	fp, r0
    d71e:	44a3      	add	fp, r4
    d720:	459b      	cmp	fp, r3
    d722:	db26      	blt.n	d772 <_realloc_r+0x1ce>
    d724:	9a02      	ldr	r2, [sp, #8]
    d726:	68d3      	ldr	r3, [r2, #12]
    d728:	6892      	ldr	r2, [r2, #8]
    d72a:	60d3      	str	r3, [r2, #12]
    d72c:	609a      	str	r2, [r3, #8]
    d72e:	4653      	mov	r3, sl
    d730:	4652      	mov	r2, sl
    d732:	4655      	mov	r5, sl
    d734:	6892      	ldr	r2, [r2, #8]
    d736:	68db      	ldr	r3, [r3, #12]
    d738:	3508      	adds	r5, #8
    d73a:	60d3      	str	r3, [r2, #12]
    d73c:	609a      	str	r2, [r3, #8]
    d73e:	1f22      	subs	r2, r4, #4
    d740:	2a24      	cmp	r2, #36	; 0x24
    d742:	d900      	bls.n	d746 <_realloc_r+0x1a2>
    d744:	e096      	b.n	d874 <_realloc_r+0x2d0>
    d746:	2a13      	cmp	r2, #19
    d748:	d972      	bls.n	d830 <_realloc_r+0x28c>
    d74a:	4653      	mov	r3, sl
    d74c:	6831      	ldr	r1, [r6, #0]
    d74e:	6099      	str	r1, [r3, #8]
    d750:	6871      	ldr	r1, [r6, #4]
    d752:	60d9      	str	r1, [r3, #12]
    d754:	2a1b      	cmp	r2, #27
    d756:	d900      	bls.n	d75a <_realloc_r+0x1b6>
    d758:	e0a4      	b.n	d8a4 <_realloc_r+0x300>
    d75a:	0032      	movs	r2, r6
    d75c:	3310      	adds	r3, #16
    d75e:	3208      	adds	r2, #8
    d760:	e068      	b.n	d834 <_realloc_r+0x290>
    d762:	683a      	ldr	r2, [r7, #0]
    d764:	1aba      	subs	r2, r7, r2
    d766:	4692      	mov	sl, r2
    d768:	4651      	mov	r1, sl
    d76a:	2203      	movs	r2, #3
    d76c:	6849      	ldr	r1, [r1, #4]
    d76e:	4391      	bics	r1, r2
    d770:	000a      	movs	r2, r1
    d772:	4693      	mov	fp, r2
    d774:	44a3      	add	fp, r4
    d776:	459b      	cmp	fp, r3
    d778:	da00      	bge.n	d77c <_realloc_r+0x1d8>
    d77a:	e74f      	b.n	d61c <_realloc_r+0x78>
    d77c:	e7d7      	b.n	d72e <_realloc_r+0x18a>
    d77e:	2003      	movs	r0, #3
    d780:	9902      	ldr	r1, [sp, #8]
    d782:	4684      	mov	ip, r0
    d784:	6849      	ldr	r1, [r1, #4]
    d786:	4381      	bics	r1, r0
    d788:	4640      	mov	r0, r8
    d78a:	1909      	adds	r1, r1, r4
    d78c:	3010      	adds	r0, #16
    d78e:	9002      	str	r0, [sp, #8]
    d790:	4281      	cmp	r1, r0
    d792:	da58      	bge.n	d846 <_realloc_r+0x2a2>
    d794:	07d2      	lsls	r2, r2, #31
    d796:	d500      	bpl.n	d79a <_realloc_r+0x1f6>
    d798:	e740      	b.n	d61c <_realloc_r+0x78>
    d79a:	4660      	mov	r0, ip
    d79c:	683a      	ldr	r2, [r7, #0]
    d79e:	1aba      	subs	r2, r7, r2
    d7a0:	4692      	mov	sl, r2
    d7a2:	6852      	ldr	r2, [r2, #4]
    d7a4:	4382      	bics	r2, r0
    d7a6:	9802      	ldr	r0, [sp, #8]
    d7a8:	1851      	adds	r1, r2, r1
    d7aa:	9103      	str	r1, [sp, #12]
    d7ac:	4288      	cmp	r0, r1
    d7ae:	dce0      	bgt.n	d772 <_realloc_r+0x1ce>
    d7b0:	4653      	mov	r3, sl
    d7b2:	4652      	mov	r2, sl
    d7b4:	4655      	mov	r5, sl
    d7b6:	6892      	ldr	r2, [r2, #8]
    d7b8:	68db      	ldr	r3, [r3, #12]
    d7ba:	3508      	adds	r5, #8
    d7bc:	60d3      	str	r3, [r2, #12]
    d7be:	609a      	str	r2, [r3, #8]
    d7c0:	1f22      	subs	r2, r4, #4
    d7c2:	2a24      	cmp	r2, #36	; 0x24
    d7c4:	d900      	bls.n	d7c8 <_realloc_r+0x224>
    d7c6:	e08e      	b.n	d8e6 <_realloc_r+0x342>
    d7c8:	2a13      	cmp	r2, #19
    d7ca:	d800      	bhi.n	d7ce <_realloc_r+0x22a>
    d7cc:	e088      	b.n	d8e0 <_realloc_r+0x33c>
    d7ce:	4653      	mov	r3, sl
    d7d0:	6831      	ldr	r1, [r6, #0]
    d7d2:	6099      	str	r1, [r3, #8]
    d7d4:	6871      	ldr	r1, [r6, #4]
    d7d6:	60d9      	str	r1, [r3, #12]
    d7d8:	2a1b      	cmp	r2, #27
    d7da:	d900      	bls.n	d7de <_realloc_r+0x23a>
    d7dc:	e088      	b.n	d8f0 <_realloc_r+0x34c>
    d7de:	0032      	movs	r2, r6
    d7e0:	3310      	adds	r3, #16
    d7e2:	3208      	adds	r2, #8
    d7e4:	6811      	ldr	r1, [r2, #0]
    d7e6:	6019      	str	r1, [r3, #0]
    d7e8:	6851      	ldr	r1, [r2, #4]
    d7ea:	6059      	str	r1, [r3, #4]
    d7ec:	6892      	ldr	r2, [r2, #8]
    d7ee:	609a      	str	r2, [r3, #8]
    d7f0:	4651      	mov	r1, sl
    d7f2:	465b      	mov	r3, fp
    d7f4:	4642      	mov	r2, r8
    d7f6:	4441      	add	r1, r8
    d7f8:	6099      	str	r1, [r3, #8]
    d7fa:	9b03      	ldr	r3, [sp, #12]
    d7fc:	9801      	ldr	r0, [sp, #4]
    d7fe:	1a9a      	subs	r2, r3, r2
    d800:	2301      	movs	r3, #1
    d802:	431a      	orrs	r2, r3
    d804:	604a      	str	r2, [r1, #4]
    d806:	4652      	mov	r2, sl
    d808:	6852      	ldr	r2, [r2, #4]
    d80a:	4013      	ands	r3, r2
    d80c:	4642      	mov	r2, r8
    d80e:	4313      	orrs	r3, r2
    d810:	4652      	mov	r2, sl
    d812:	6053      	str	r3, [r2, #4]
    d814:	f7ff fb76 	bl	cf04 <__malloc_unlock>
    d818:	e743      	b.n	d6a2 <_realloc_r+0xfe>
    d81a:	6833      	ldr	r3, [r6, #0]
    d81c:	6003      	str	r3, [r0, #0]
    d81e:	6873      	ldr	r3, [r6, #4]
    d820:	6043      	str	r3, [r0, #4]
    d822:	2a1b      	cmp	r2, #27
    d824:	d82d      	bhi.n	d882 <_realloc_r+0x2de>
    d826:	0003      	movs	r3, r0
    d828:	0032      	movs	r2, r6
    d82a:	3308      	adds	r3, #8
    d82c:	3208      	adds	r2, #8
    d82e:	e70d      	b.n	d64c <_realloc_r+0xa8>
    d830:	002b      	movs	r3, r5
    d832:	0032      	movs	r2, r6
    d834:	6811      	ldr	r1, [r2, #0]
    d836:	465c      	mov	r4, fp
    d838:	6019      	str	r1, [r3, #0]
    d83a:	6851      	ldr	r1, [r2, #4]
    d83c:	46d1      	mov	r9, sl
    d83e:	6059      	str	r1, [r3, #4]
    d840:	6892      	ldr	r2, [r2, #8]
    d842:	609a      	str	r2, [r3, #8]
    d844:	e71b      	b.n	d67e <_realloc_r+0xda>
    d846:	4643      	mov	r3, r8
    d848:	18fa      	adds	r2, r7, r3
    d84a:	465b      	mov	r3, fp
    d84c:	609a      	str	r2, [r3, #8]
    d84e:	4643      	mov	r3, r8
    d850:	1ac9      	subs	r1, r1, r3
    d852:	2301      	movs	r3, #1
    d854:	4319      	orrs	r1, r3
    d856:	6051      	str	r1, [r2, #4]
    d858:	687a      	ldr	r2, [r7, #4]
    d85a:	9801      	ldr	r0, [sp, #4]
    d85c:	4013      	ands	r3, r2
    d85e:	4642      	mov	r2, r8
    d860:	4313      	orrs	r3, r2
    d862:	607b      	str	r3, [r7, #4]
    d864:	f7ff fb4e 	bl	cf04 <__malloc_unlock>
    d868:	0035      	movs	r5, r6
    d86a:	e71a      	b.n	d6a2 <_realloc_r+0xfe>
    d86c:	0031      	movs	r1, r6
    d86e:	f7ff faf1 	bl	ce54 <memmove>
    d872:	e6f1      	b.n	d658 <_realloc_r+0xb4>
    d874:	0031      	movs	r1, r6
    d876:	0028      	movs	r0, r5
    d878:	f7ff faec 	bl	ce54 <memmove>
    d87c:	465c      	mov	r4, fp
    d87e:	46d1      	mov	r9, sl
    d880:	e6fd      	b.n	d67e <_realloc_r+0xda>
    d882:	68b3      	ldr	r3, [r6, #8]
    d884:	6083      	str	r3, [r0, #8]
    d886:	68f3      	ldr	r3, [r6, #12]
    d888:	60c3      	str	r3, [r0, #12]
    d88a:	2a24      	cmp	r2, #36	; 0x24
    d88c:	d015      	beq.n	d8ba <_realloc_r+0x316>
    d88e:	0003      	movs	r3, r0
    d890:	0032      	movs	r2, r6
    d892:	3310      	adds	r3, #16
    d894:	3210      	adds	r2, #16
    d896:	e6d9      	b.n	d64c <_realloc_r+0xa8>
    d898:	6853      	ldr	r3, [r2, #4]
    d89a:	2203      	movs	r2, #3
    d89c:	4393      	bics	r3, r2
    d89e:	18e4      	adds	r4, r4, r3
    d8a0:	0035      	movs	r5, r6
    d8a2:	e6ec      	b.n	d67e <_realloc_r+0xda>
    d8a4:	4653      	mov	r3, sl
    d8a6:	68b1      	ldr	r1, [r6, #8]
    d8a8:	6119      	str	r1, [r3, #16]
    d8aa:	68f1      	ldr	r1, [r6, #12]
    d8ac:	6159      	str	r1, [r3, #20]
    d8ae:	2a24      	cmp	r2, #36	; 0x24
    d8b0:	d00c      	beq.n	d8cc <_realloc_r+0x328>
    d8b2:	0032      	movs	r2, r6
    d8b4:	3318      	adds	r3, #24
    d8b6:	3210      	adds	r2, #16
    d8b8:	e7bc      	b.n	d834 <_realloc_r+0x290>
    d8ba:	6933      	ldr	r3, [r6, #16]
    d8bc:	0032      	movs	r2, r6
    d8be:	6103      	str	r3, [r0, #16]
    d8c0:	0003      	movs	r3, r0
    d8c2:	6971      	ldr	r1, [r6, #20]
    d8c4:	3318      	adds	r3, #24
    d8c6:	3218      	adds	r2, #24
    d8c8:	6141      	str	r1, [r0, #20]
    d8ca:	e6bf      	b.n	d64c <_realloc_r+0xa8>
    d8cc:	4653      	mov	r3, sl
    d8ce:	6932      	ldr	r2, [r6, #16]
    d8d0:	4651      	mov	r1, sl
    d8d2:	619a      	str	r2, [r3, #24]
    d8d4:	0032      	movs	r2, r6
    d8d6:	6970      	ldr	r0, [r6, #20]
    d8d8:	3320      	adds	r3, #32
    d8da:	3218      	adds	r2, #24
    d8dc:	61c8      	str	r0, [r1, #28]
    d8de:	e7a9      	b.n	d834 <_realloc_r+0x290>
    d8e0:	002b      	movs	r3, r5
    d8e2:	0032      	movs	r2, r6
    d8e4:	e77e      	b.n	d7e4 <_realloc_r+0x240>
    d8e6:	0031      	movs	r1, r6
    d8e8:	0028      	movs	r0, r5
    d8ea:	f7ff fab3 	bl	ce54 <memmove>
    d8ee:	e77f      	b.n	d7f0 <_realloc_r+0x24c>
    d8f0:	4653      	mov	r3, sl
    d8f2:	68b1      	ldr	r1, [r6, #8]
    d8f4:	6119      	str	r1, [r3, #16]
    d8f6:	68f1      	ldr	r1, [r6, #12]
    d8f8:	6159      	str	r1, [r3, #20]
    d8fa:	2a24      	cmp	r2, #36	; 0x24
    d8fc:	d003      	beq.n	d906 <_realloc_r+0x362>
    d8fe:	0032      	movs	r2, r6
    d900:	3318      	adds	r3, #24
    d902:	3210      	adds	r2, #16
    d904:	e76e      	b.n	d7e4 <_realloc_r+0x240>
    d906:	4653      	mov	r3, sl
    d908:	6932      	ldr	r2, [r6, #16]
    d90a:	4651      	mov	r1, sl
    d90c:	619a      	str	r2, [r3, #24]
    d90e:	0032      	movs	r2, r6
    d910:	6970      	ldr	r0, [r6, #20]
    d912:	3320      	adds	r3, #32
    d914:	3218      	adds	r2, #24
    d916:	61c8      	str	r0, [r1, #28]
    d918:	e764      	b.n	d7e4 <_realloc_r+0x240>
    d91a:	46c0      	nop			; (mov r8, r8)
    d91c:	200004a4 	.word	0x200004a4

0000d920 <_sbrk_r>:
    d920:	2300      	movs	r3, #0
    d922:	b570      	push	{r4, r5, r6, lr}
    d924:	4c06      	ldr	r4, [pc, #24]	; (d940 <_sbrk_r+0x20>)
    d926:	0005      	movs	r5, r0
    d928:	0008      	movs	r0, r1
    d92a:	6023      	str	r3, [r4, #0]
    d92c:	f000 fb08 	bl	df40 <_sbrk>
    d930:	1c43      	adds	r3, r0, #1
    d932:	d000      	beq.n	d936 <_sbrk_r+0x16>
    d934:	bd70      	pop	{r4, r5, r6, pc}
    d936:	6823      	ldr	r3, [r4, #0]
    d938:	2b00      	cmp	r3, #0
    d93a:	d0fb      	beq.n	d934 <_sbrk_r+0x14>
    d93c:	602b      	str	r3, [r5, #0]
    d93e:	e7f9      	b.n	d934 <_sbrk_r+0x14>
    d940:	200011ec 	.word	0x200011ec

0000d944 <__sread>:
    d944:	b570      	push	{r4, r5, r6, lr}
    d946:	000c      	movs	r4, r1
    d948:	250e      	movs	r5, #14
    d94a:	5f49      	ldrsh	r1, [r1, r5]
    d94c:	f000 fa26 	bl	dd9c <_read_r>
    d950:	2800      	cmp	r0, #0
    d952:	db03      	blt.n	d95c <__sread+0x18>
    d954:	6d23      	ldr	r3, [r4, #80]	; 0x50
    d956:	181b      	adds	r3, r3, r0
    d958:	6523      	str	r3, [r4, #80]	; 0x50
    d95a:	bd70      	pop	{r4, r5, r6, pc}
    d95c:	89a3      	ldrh	r3, [r4, #12]
    d95e:	4a02      	ldr	r2, [pc, #8]	; (d968 <__sread+0x24>)
    d960:	4013      	ands	r3, r2
    d962:	81a3      	strh	r3, [r4, #12]
    d964:	e7f9      	b.n	d95a <__sread+0x16>
    d966:	46c0      	nop			; (mov r8, r8)
    d968:	ffffefff 	.word	0xffffefff

0000d96c <__swrite>:
    d96c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d96e:	0016      	movs	r6, r2
    d970:	001f      	movs	r7, r3
    d972:	220c      	movs	r2, #12
    d974:	5e8b      	ldrsh	r3, [r1, r2]
    d976:	0005      	movs	r5, r0
    d978:	000c      	movs	r4, r1
    d97a:	05da      	lsls	r2, r3, #23
    d97c:	d507      	bpl.n	d98e <__swrite+0x22>
    d97e:	230e      	movs	r3, #14
    d980:	5ec9      	ldrsh	r1, [r1, r3]
    d982:	2200      	movs	r2, #0
    d984:	2302      	movs	r3, #2
    d986:	f000 f9df 	bl	dd48 <_lseek_r>
    d98a:	220c      	movs	r2, #12
    d98c:	5ea3      	ldrsh	r3, [r4, r2]
    d98e:	4a05      	ldr	r2, [pc, #20]	; (d9a4 <__swrite+0x38>)
    d990:	0028      	movs	r0, r5
    d992:	4013      	ands	r3, r2
    d994:	81a3      	strh	r3, [r4, #12]
    d996:	0032      	movs	r2, r6
    d998:	230e      	movs	r3, #14
    d99a:	5ee1      	ldrsh	r1, [r4, r3]
    d99c:	003b      	movs	r3, r7
    d99e:	f000 f86b 	bl	da78 <_write_r>
    d9a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d9a4:	ffffefff 	.word	0xffffefff

0000d9a8 <__sseek>:
    d9a8:	b570      	push	{r4, r5, r6, lr}
    d9aa:	000c      	movs	r4, r1
    d9ac:	250e      	movs	r5, #14
    d9ae:	5f49      	ldrsh	r1, [r1, r5]
    d9b0:	f000 f9ca 	bl	dd48 <_lseek_r>
    d9b4:	1c43      	adds	r3, r0, #1
    d9b6:	d006      	beq.n	d9c6 <__sseek+0x1e>
    d9b8:	2380      	movs	r3, #128	; 0x80
    d9ba:	89a2      	ldrh	r2, [r4, #12]
    d9bc:	015b      	lsls	r3, r3, #5
    d9be:	4313      	orrs	r3, r2
    d9c0:	81a3      	strh	r3, [r4, #12]
    d9c2:	6520      	str	r0, [r4, #80]	; 0x50
    d9c4:	bd70      	pop	{r4, r5, r6, pc}
    d9c6:	89a3      	ldrh	r3, [r4, #12]
    d9c8:	4a01      	ldr	r2, [pc, #4]	; (d9d0 <__sseek+0x28>)
    d9ca:	4013      	ands	r3, r2
    d9cc:	81a3      	strh	r3, [r4, #12]
    d9ce:	e7f9      	b.n	d9c4 <__sseek+0x1c>
    d9d0:	ffffefff 	.word	0xffffefff

0000d9d4 <__sclose>:
    d9d4:	b510      	push	{r4, lr}
    d9d6:	230e      	movs	r3, #14
    d9d8:	5ec9      	ldrsh	r1, [r1, r3]
    d9da:	f000 f88d 	bl	daf8 <_close_r>
    d9de:	bd10      	pop	{r4, pc}

0000d9e0 <__sprint_r.part.0>:
    d9e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d9e2:	464e      	mov	r6, r9
    d9e4:	4645      	mov	r5, r8
    d9e6:	46de      	mov	lr, fp
    d9e8:	4657      	mov	r7, sl
    d9ea:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    d9ec:	b5e0      	push	{r5, r6, r7, lr}
    d9ee:	4680      	mov	r8, r0
    d9f0:	000e      	movs	r6, r1
    d9f2:	4691      	mov	r9, r2
    d9f4:	049b      	lsls	r3, r3, #18
    d9f6:	d531      	bpl.n	da5c <__sprint_r.part.0+0x7c>
    d9f8:	6813      	ldr	r3, [r2, #0]
    d9fa:	469a      	mov	sl, r3
    d9fc:	6893      	ldr	r3, [r2, #8]
    d9fe:	2b00      	cmp	r3, #0
    da00:	d02a      	beq.n	da58 <__sprint_r.part.0+0x78>
    da02:	4652      	mov	r2, sl
    da04:	6852      	ldr	r2, [r2, #4]
    da06:	2500      	movs	r5, #0
    da08:	4693      	mov	fp, r2
    da0a:	0897      	lsrs	r7, r2, #2
    da0c:	4652      	mov	r2, sl
    da0e:	6814      	ldr	r4, [r2, #0]
    da10:	d104      	bne.n	da1c <__sprint_r.part.0+0x3c>
    da12:	e016      	b.n	da42 <__sprint_r.part.0+0x62>
    da14:	3501      	adds	r5, #1
    da16:	3404      	adds	r4, #4
    da18:	42af      	cmp	r7, r5
    da1a:	d010      	beq.n	da3e <__sprint_r.part.0+0x5e>
    da1c:	0032      	movs	r2, r6
    da1e:	6821      	ldr	r1, [r4, #0]
    da20:	4640      	mov	r0, r8
    da22:	f000 f92d 	bl	dc80 <_fputwc_r>
    da26:	1c43      	adds	r3, r0, #1
    da28:	d1f4      	bne.n	da14 <__sprint_r.part.0+0x34>
    da2a:	464a      	mov	r2, r9
    da2c:	2300      	movs	r3, #0
    da2e:	6093      	str	r3, [r2, #8]
    da30:	6053      	str	r3, [r2, #4]
    da32:	bc3c      	pop	{r2, r3, r4, r5}
    da34:	4690      	mov	r8, r2
    da36:	4699      	mov	r9, r3
    da38:	46a2      	mov	sl, r4
    da3a:	46ab      	mov	fp, r5
    da3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    da3e:	464b      	mov	r3, r9
    da40:	689b      	ldr	r3, [r3, #8]
    da42:	465a      	mov	r2, fp
    da44:	2103      	movs	r1, #3
    da46:	438a      	bics	r2, r1
    da48:	1a9b      	subs	r3, r3, r2
    da4a:	464a      	mov	r2, r9
    da4c:	6093      	str	r3, [r2, #8]
    da4e:	2208      	movs	r2, #8
    da50:	4694      	mov	ip, r2
    da52:	44e2      	add	sl, ip
    da54:	2b00      	cmp	r3, #0
    da56:	d1d4      	bne.n	da02 <__sprint_r.part.0+0x22>
    da58:	2000      	movs	r0, #0
    da5a:	e7e6      	b.n	da2a <__sprint_r.part.0+0x4a>
    da5c:	f7fe fcd0 	bl	c400 <__sfvwrite_r>
    da60:	e7e3      	b.n	da2a <__sprint_r.part.0+0x4a>
    da62:	46c0      	nop			; (mov r8, r8)

0000da64 <__sprint_r>:
    da64:	6893      	ldr	r3, [r2, #8]
    da66:	b510      	push	{r4, lr}
    da68:	2b00      	cmp	r3, #0
    da6a:	d002      	beq.n	da72 <__sprint_r+0xe>
    da6c:	f7ff ffb8 	bl	d9e0 <__sprint_r.part.0>
    da70:	bd10      	pop	{r4, pc}
    da72:	6053      	str	r3, [r2, #4]
    da74:	2000      	movs	r0, #0
    da76:	e7fb      	b.n	da70 <__sprint_r+0xc>

0000da78 <_write_r>:
    da78:	b570      	push	{r4, r5, r6, lr}
    da7a:	0005      	movs	r5, r0
    da7c:	0008      	movs	r0, r1
    da7e:	0011      	movs	r1, r2
    da80:	2200      	movs	r2, #0
    da82:	4c06      	ldr	r4, [pc, #24]	; (da9c <_write_r+0x24>)
    da84:	6022      	str	r2, [r4, #0]
    da86:	001a      	movs	r2, r3
    da88:	f000 fa68 	bl	df5c <_write>
    da8c:	1c43      	adds	r3, r0, #1
    da8e:	d000      	beq.n	da92 <_write_r+0x1a>
    da90:	bd70      	pop	{r4, r5, r6, pc}
    da92:	6823      	ldr	r3, [r4, #0]
    da94:	2b00      	cmp	r3, #0
    da96:	d0fb      	beq.n	da90 <_write_r+0x18>
    da98:	602b      	str	r3, [r5, #0]
    da9a:	e7f9      	b.n	da90 <_write_r+0x18>
    da9c:	200011ec 	.word	0x200011ec

0000daa0 <_calloc_r>:
    daa0:	b510      	push	{r4, lr}
    daa2:	4351      	muls	r1, r2
    daa4:	f7fe fee2 	bl	c86c <_malloc_r>
    daa8:	1e04      	subs	r4, r0, #0
    daaa:	d01c      	beq.n	dae6 <_calloc_r+0x46>
    daac:	0003      	movs	r3, r0
    daae:	3b08      	subs	r3, #8
    dab0:	685a      	ldr	r2, [r3, #4]
    dab2:	2303      	movs	r3, #3
    dab4:	439a      	bics	r2, r3
    dab6:	3a04      	subs	r2, #4
    dab8:	2a24      	cmp	r2, #36	; 0x24
    daba:	d816      	bhi.n	daea <_calloc_r+0x4a>
    dabc:	0003      	movs	r3, r0
    dabe:	2a13      	cmp	r2, #19
    dac0:	d90d      	bls.n	dade <_calloc_r+0x3e>
    dac2:	2100      	movs	r1, #0
    dac4:	3308      	adds	r3, #8
    dac6:	6001      	str	r1, [r0, #0]
    dac8:	6041      	str	r1, [r0, #4]
    daca:	2a1b      	cmp	r2, #27
    dacc:	d907      	bls.n	dade <_calloc_r+0x3e>
    dace:	6081      	str	r1, [r0, #8]
    dad0:	60c1      	str	r1, [r0, #12]
    dad2:	2a24      	cmp	r2, #36	; 0x24
    dad4:	d10d      	bne.n	daf2 <_calloc_r+0x52>
    dad6:	0003      	movs	r3, r0
    dad8:	6101      	str	r1, [r0, #16]
    dada:	3318      	adds	r3, #24
    dadc:	6141      	str	r1, [r0, #20]
    dade:	2200      	movs	r2, #0
    dae0:	601a      	str	r2, [r3, #0]
    dae2:	605a      	str	r2, [r3, #4]
    dae4:	609a      	str	r2, [r3, #8]
    dae6:	0020      	movs	r0, r4
    dae8:	bd10      	pop	{r4, pc}
    daea:	2100      	movs	r1, #0
    daec:	f7fb fc00 	bl	92f0 <memset>
    daf0:	e7f9      	b.n	dae6 <_calloc_r+0x46>
    daf2:	0003      	movs	r3, r0
    daf4:	3310      	adds	r3, #16
    daf6:	e7f2      	b.n	dade <_calloc_r+0x3e>

0000daf8 <_close_r>:
    daf8:	2300      	movs	r3, #0
    dafa:	b570      	push	{r4, r5, r6, lr}
    dafc:	4c06      	ldr	r4, [pc, #24]	; (db18 <_close_r+0x20>)
    dafe:	0005      	movs	r5, r0
    db00:	0008      	movs	r0, r1
    db02:	6023      	str	r3, [r4, #0]
    db04:	f000 f9f4 	bl	def0 <_close>
    db08:	1c43      	adds	r3, r0, #1
    db0a:	d000      	beq.n	db0e <_close_r+0x16>
    db0c:	bd70      	pop	{r4, r5, r6, pc}
    db0e:	6823      	ldr	r3, [r4, #0]
    db10:	2b00      	cmp	r3, #0
    db12:	d0fb      	beq.n	db0c <_close_r+0x14>
    db14:	602b      	str	r3, [r5, #0]
    db16:	e7f9      	b.n	db0c <_close_r+0x14>
    db18:	200011ec 	.word	0x200011ec

0000db1c <_fclose_r>:
    db1c:	b570      	push	{r4, r5, r6, lr}
    db1e:	0005      	movs	r5, r0
    db20:	1e0c      	subs	r4, r1, #0
    db22:	d040      	beq.n	dba6 <_fclose_r+0x8a>
    db24:	2800      	cmp	r0, #0
    db26:	d002      	beq.n	db2e <_fclose_r+0x12>
    db28:	6b83      	ldr	r3, [r0, #56]	; 0x38
    db2a:	2b00      	cmp	r3, #0
    db2c:	d03e      	beq.n	dbac <_fclose_r+0x90>
    db2e:	2601      	movs	r6, #1
    db30:	6e63      	ldr	r3, [r4, #100]	; 0x64
    db32:	4233      	tst	r3, r6
    db34:	d133      	bne.n	db9e <_fclose_r+0x82>
    db36:	89a3      	ldrh	r3, [r4, #12]
    db38:	059b      	lsls	r3, r3, #22
    db3a:	d543      	bpl.n	dbc4 <_fclose_r+0xa8>
    db3c:	0021      	movs	r1, r4
    db3e:	0028      	movs	r0, r5
    db40:	f7fe f9d4 	bl	beec <__sflush_r>
    db44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    db46:	0006      	movs	r6, r0
    db48:	2b00      	cmp	r3, #0
    db4a:	d004      	beq.n	db56 <_fclose_r+0x3a>
    db4c:	69e1      	ldr	r1, [r4, #28]
    db4e:	0028      	movs	r0, r5
    db50:	4798      	blx	r3
    db52:	2800      	cmp	r0, #0
    db54:	db44      	blt.n	dbe0 <_fclose_r+0xc4>
    db56:	89a3      	ldrh	r3, [r4, #12]
    db58:	061b      	lsls	r3, r3, #24
    db5a:	d42a      	bmi.n	dbb2 <_fclose_r+0x96>
    db5c:	6b21      	ldr	r1, [r4, #48]	; 0x30
    db5e:	2900      	cmp	r1, #0
    db60:	d008      	beq.n	db74 <_fclose_r+0x58>
    db62:	0023      	movs	r3, r4
    db64:	3340      	adds	r3, #64	; 0x40
    db66:	4299      	cmp	r1, r3
    db68:	d002      	beq.n	db70 <_fclose_r+0x54>
    db6a:	0028      	movs	r0, r5
    db6c:	f7fe fb6a 	bl	c244 <_free_r>
    db70:	2300      	movs	r3, #0
    db72:	6323      	str	r3, [r4, #48]	; 0x30
    db74:	6c61      	ldr	r1, [r4, #68]	; 0x44
    db76:	2900      	cmp	r1, #0
    db78:	d004      	beq.n	db84 <_fclose_r+0x68>
    db7a:	0028      	movs	r0, r5
    db7c:	f7fe fb62 	bl	c244 <_free_r>
    db80:	2300      	movs	r3, #0
    db82:	6463      	str	r3, [r4, #68]	; 0x44
    db84:	f7fe fae4 	bl	c150 <__sfp_lock_acquire>
    db88:	2300      	movs	r3, #0
    db8a:	81a3      	strh	r3, [r4, #12]
    db8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    db8e:	07db      	lsls	r3, r3, #31
    db90:	d514      	bpl.n	dbbc <_fclose_r+0xa0>
    db92:	6da0      	ldr	r0, [r4, #88]	; 0x58
    db94:	f7fe fdec 	bl	c770 <__retarget_lock_close_recursive>
    db98:	f7fe fae2 	bl	c160 <__sfp_lock_release>
    db9c:	e004      	b.n	dba8 <_fclose_r+0x8c>
    db9e:	220c      	movs	r2, #12
    dba0:	5ea3      	ldrsh	r3, [r4, r2]
    dba2:	2b00      	cmp	r3, #0
    dba4:	d1ca      	bne.n	db3c <_fclose_r+0x20>
    dba6:	2600      	movs	r6, #0
    dba8:	0030      	movs	r0, r6
    dbaa:	bd70      	pop	{r4, r5, r6, pc}
    dbac:	f7fe faa0 	bl	c0f0 <__sinit>
    dbb0:	e7bd      	b.n	db2e <_fclose_r+0x12>
    dbb2:	6921      	ldr	r1, [r4, #16]
    dbb4:	0028      	movs	r0, r5
    dbb6:	f7fe fb45 	bl	c244 <_free_r>
    dbba:	e7cf      	b.n	db5c <_fclose_r+0x40>
    dbbc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    dbbe:	f7fe fddb 	bl	c778 <__retarget_lock_release_recursive>
    dbc2:	e7e6      	b.n	db92 <_fclose_r+0x76>
    dbc4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    dbc6:	f7fe fdd5 	bl	c774 <__retarget_lock_acquire_recursive>
    dbca:	220c      	movs	r2, #12
    dbcc:	5ea3      	ldrsh	r3, [r4, r2]
    dbce:	2b00      	cmp	r3, #0
    dbd0:	d1b4      	bne.n	db3c <_fclose_r+0x20>
    dbd2:	6e63      	ldr	r3, [r4, #100]	; 0x64
    dbd4:	401e      	ands	r6, r3
    dbd6:	d1e6      	bne.n	dba6 <_fclose_r+0x8a>
    dbd8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    dbda:	f7fe fdcd 	bl	c778 <__retarget_lock_release_recursive>
    dbde:	e7e3      	b.n	dba8 <_fclose_r+0x8c>
    dbe0:	2601      	movs	r6, #1
    dbe2:	4276      	negs	r6, r6
    dbe4:	e7b7      	b.n	db56 <_fclose_r+0x3a>
    dbe6:	46c0      	nop			; (mov r8, r8)

0000dbe8 <__fputwc>:
    dbe8:	b5f0      	push	{r4, r5, r6, r7, lr}
    dbea:	46ce      	mov	lr, r9
    dbec:	4647      	mov	r7, r8
    dbee:	b580      	push	{r7, lr}
    dbf0:	b085      	sub	sp, #20
    dbf2:	4680      	mov	r8, r0
    dbf4:	4689      	mov	r9, r1
    dbf6:	0014      	movs	r4, r2
    dbf8:	f000 f896 	bl	dd28 <__locale_mb_cur_max>
    dbfc:	2801      	cmp	r0, #1
    dbfe:	d031      	beq.n	dc64 <__fputwc+0x7c>
    dc00:	0023      	movs	r3, r4
    dc02:	af03      	add	r7, sp, #12
    dc04:	335c      	adds	r3, #92	; 0x5c
    dc06:	464a      	mov	r2, r9
    dc08:	0039      	movs	r1, r7
    dc0a:	4640      	mov	r0, r8
    dc0c:	f000 f938 	bl	de80 <_wcrtomb_r>
    dc10:	0006      	movs	r6, r0
    dc12:	1c43      	adds	r3, r0, #1
    dc14:	d021      	beq.n	dc5a <__fputwc+0x72>
    dc16:	2800      	cmp	r0, #0
    dc18:	d030      	beq.n	dc7c <__fputwc+0x94>
    dc1a:	7839      	ldrb	r1, [r7, #0]
    dc1c:	2500      	movs	r5, #0
    dc1e:	e007      	b.n	dc30 <__fputwc+0x48>
    dc20:	6823      	ldr	r3, [r4, #0]
    dc22:	1c5a      	adds	r2, r3, #1
    dc24:	6022      	str	r2, [r4, #0]
    dc26:	7019      	strb	r1, [r3, #0]
    dc28:	3501      	adds	r5, #1
    dc2a:	42b5      	cmp	r5, r6
    dc2c:	d226      	bcs.n	dc7c <__fputwc+0x94>
    dc2e:	5d79      	ldrb	r1, [r7, r5]
    dc30:	68a3      	ldr	r3, [r4, #8]
    dc32:	3b01      	subs	r3, #1
    dc34:	60a3      	str	r3, [r4, #8]
    dc36:	2b00      	cmp	r3, #0
    dc38:	daf2      	bge.n	dc20 <__fputwc+0x38>
    dc3a:	69a2      	ldr	r2, [r4, #24]
    dc3c:	4293      	cmp	r3, r2
    dc3e:	db01      	blt.n	dc44 <__fputwc+0x5c>
    dc40:	290a      	cmp	r1, #10
    dc42:	d1ed      	bne.n	dc20 <__fputwc+0x38>
    dc44:	0022      	movs	r2, r4
    dc46:	4640      	mov	r0, r8
    dc48:	f000 f8bc 	bl	ddc4 <__swbuf_r>
    dc4c:	1c43      	adds	r3, r0, #1
    dc4e:	d1eb      	bne.n	dc28 <__fputwc+0x40>
    dc50:	b005      	add	sp, #20
    dc52:	bc0c      	pop	{r2, r3}
    dc54:	4690      	mov	r8, r2
    dc56:	4699      	mov	r9, r3
    dc58:	bdf0      	pop	{r4, r5, r6, r7, pc}
    dc5a:	2240      	movs	r2, #64	; 0x40
    dc5c:	89a3      	ldrh	r3, [r4, #12]
    dc5e:	4313      	orrs	r3, r2
    dc60:	81a3      	strh	r3, [r4, #12]
    dc62:	e7f5      	b.n	dc50 <__fputwc+0x68>
    dc64:	464b      	mov	r3, r9
    dc66:	3b01      	subs	r3, #1
    dc68:	2bfe      	cmp	r3, #254	; 0xfe
    dc6a:	d8c9      	bhi.n	dc00 <__fputwc+0x18>
    dc6c:	466a      	mov	r2, sp
    dc6e:	464b      	mov	r3, r9
    dc70:	71d3      	strb	r3, [r2, #7]
    dc72:	79d1      	ldrb	r1, [r2, #7]
    dc74:	af03      	add	r7, sp, #12
    dc76:	7039      	strb	r1, [r7, #0]
    dc78:	2601      	movs	r6, #1
    dc7a:	e7cf      	b.n	dc1c <__fputwc+0x34>
    dc7c:	4648      	mov	r0, r9
    dc7e:	e7e7      	b.n	dc50 <__fputwc+0x68>

0000dc80 <_fputwc_r>:
    dc80:	6e53      	ldr	r3, [r2, #100]	; 0x64
    dc82:	b570      	push	{r4, r5, r6, lr}
    dc84:	0005      	movs	r5, r0
    dc86:	000e      	movs	r6, r1
    dc88:	0014      	movs	r4, r2
    dc8a:	07db      	lsls	r3, r3, #31
    dc8c:	d41e      	bmi.n	dccc <_fputwc_r+0x4c>
    dc8e:	230c      	movs	r3, #12
    dc90:	5ed2      	ldrsh	r2, [r2, r3]
    dc92:	b291      	uxth	r1, r2
    dc94:	058b      	lsls	r3, r1, #22
    dc96:	d516      	bpl.n	dcc6 <_fputwc_r+0x46>
    dc98:	2380      	movs	r3, #128	; 0x80
    dc9a:	019b      	lsls	r3, r3, #6
    dc9c:	4219      	tst	r1, r3
    dc9e:	d104      	bne.n	dcaa <_fputwc_r+0x2a>
    dca0:	431a      	orrs	r2, r3
    dca2:	81a2      	strh	r2, [r4, #12]
    dca4:	6e62      	ldr	r2, [r4, #100]	; 0x64
    dca6:	4313      	orrs	r3, r2
    dca8:	6663      	str	r3, [r4, #100]	; 0x64
    dcaa:	0028      	movs	r0, r5
    dcac:	0022      	movs	r2, r4
    dcae:	0031      	movs	r1, r6
    dcb0:	f7ff ff9a 	bl	dbe8 <__fputwc>
    dcb4:	6e63      	ldr	r3, [r4, #100]	; 0x64
    dcb6:	0005      	movs	r5, r0
    dcb8:	07db      	lsls	r3, r3, #31
    dcba:	d402      	bmi.n	dcc2 <_fputwc_r+0x42>
    dcbc:	89a3      	ldrh	r3, [r4, #12]
    dcbe:	059b      	lsls	r3, r3, #22
    dcc0:	d508      	bpl.n	dcd4 <_fputwc_r+0x54>
    dcc2:	0028      	movs	r0, r5
    dcc4:	bd70      	pop	{r4, r5, r6, pc}
    dcc6:	6da0      	ldr	r0, [r4, #88]	; 0x58
    dcc8:	f7fe fd54 	bl	c774 <__retarget_lock_acquire_recursive>
    dccc:	230c      	movs	r3, #12
    dcce:	5ee2      	ldrsh	r2, [r4, r3]
    dcd0:	b291      	uxth	r1, r2
    dcd2:	e7e1      	b.n	dc98 <_fputwc_r+0x18>
    dcd4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    dcd6:	f7fe fd4f 	bl	c778 <__retarget_lock_release_recursive>
    dcda:	e7f2      	b.n	dcc2 <_fputwc_r+0x42>

0000dcdc <_fstat_r>:
    dcdc:	2300      	movs	r3, #0
    dcde:	b570      	push	{r4, r5, r6, lr}
    dce0:	4c07      	ldr	r4, [pc, #28]	; (dd00 <_fstat_r+0x24>)
    dce2:	0005      	movs	r5, r0
    dce4:	0008      	movs	r0, r1
    dce6:	0011      	movs	r1, r2
    dce8:	6023      	str	r3, [r4, #0]
    dcea:	f000 f909 	bl	df00 <_fstat>
    dcee:	1c43      	adds	r3, r0, #1
    dcf0:	d000      	beq.n	dcf4 <_fstat_r+0x18>
    dcf2:	bd70      	pop	{r4, r5, r6, pc}
    dcf4:	6823      	ldr	r3, [r4, #0]
    dcf6:	2b00      	cmp	r3, #0
    dcf8:	d0fb      	beq.n	dcf2 <_fstat_r+0x16>
    dcfa:	602b      	str	r3, [r5, #0]
    dcfc:	e7f9      	b.n	dcf2 <_fstat_r+0x16>
    dcfe:	46c0      	nop			; (mov r8, r8)
    dd00:	200011ec 	.word	0x200011ec

0000dd04 <_isatty_r>:
    dd04:	2300      	movs	r3, #0
    dd06:	b570      	push	{r4, r5, r6, lr}
    dd08:	4c06      	ldr	r4, [pc, #24]	; (dd24 <_isatty_r+0x20>)
    dd0a:	0005      	movs	r5, r0
    dd0c:	0008      	movs	r0, r1
    dd0e:	6023      	str	r3, [r4, #0]
    dd10:	f000 f8fe 	bl	df10 <_isatty>
    dd14:	1c43      	adds	r3, r0, #1
    dd16:	d000      	beq.n	dd1a <_isatty_r+0x16>
    dd18:	bd70      	pop	{r4, r5, r6, pc}
    dd1a:	6823      	ldr	r3, [r4, #0]
    dd1c:	2b00      	cmp	r3, #0
    dd1e:	d0fb      	beq.n	dd18 <_isatty_r+0x14>
    dd20:	602b      	str	r3, [r5, #0]
    dd22:	e7f9      	b.n	dd18 <_isatty_r+0x14>
    dd24:	200011ec 	.word	0x200011ec

0000dd28 <__locale_mb_cur_max>:
    dd28:	4b05      	ldr	r3, [pc, #20]	; (dd40 <__locale_mb_cur_max+0x18>)
    dd2a:	681b      	ldr	r3, [r3, #0]
    dd2c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    dd2e:	2b00      	cmp	r3, #0
    dd30:	d003      	beq.n	dd3a <__locale_mb_cur_max+0x12>
    dd32:	2294      	movs	r2, #148	; 0x94
    dd34:	0052      	lsls	r2, r2, #1
    dd36:	5c98      	ldrb	r0, [r3, r2]
    dd38:	4770      	bx	lr
    dd3a:	4b02      	ldr	r3, [pc, #8]	; (dd44 <__locale_mb_cur_max+0x1c>)
    dd3c:	e7f9      	b.n	dd32 <__locale_mb_cur_max+0xa>
    dd3e:	46c0      	nop			; (mov r8, r8)
    dd40:	20000070 	.word	0x20000070
    dd44:	200008b4 	.word	0x200008b4

0000dd48 <_lseek_r>:
    dd48:	b570      	push	{r4, r5, r6, lr}
    dd4a:	0005      	movs	r5, r0
    dd4c:	0008      	movs	r0, r1
    dd4e:	0011      	movs	r1, r2
    dd50:	2200      	movs	r2, #0
    dd52:	4c06      	ldr	r4, [pc, #24]	; (dd6c <_lseek_r+0x24>)
    dd54:	6022      	str	r2, [r4, #0]
    dd56:	001a      	movs	r2, r3
    dd58:	f000 f8e2 	bl	df20 <_lseek>
    dd5c:	1c43      	adds	r3, r0, #1
    dd5e:	d000      	beq.n	dd62 <_lseek_r+0x1a>
    dd60:	bd70      	pop	{r4, r5, r6, pc}
    dd62:	6823      	ldr	r3, [r4, #0]
    dd64:	2b00      	cmp	r3, #0
    dd66:	d0fb      	beq.n	dd60 <_lseek_r+0x18>
    dd68:	602b      	str	r3, [r5, #0]
    dd6a:	e7f9      	b.n	dd60 <_lseek_r+0x18>
    dd6c:	200011ec 	.word	0x200011ec

0000dd70 <__ascii_mbtowc>:
    dd70:	b082      	sub	sp, #8
    dd72:	2900      	cmp	r1, #0
    dd74:	d00a      	beq.n	dd8c <__ascii_mbtowc+0x1c>
    dd76:	2a00      	cmp	r2, #0
    dd78:	d00b      	beq.n	dd92 <__ascii_mbtowc+0x22>
    dd7a:	2b00      	cmp	r3, #0
    dd7c:	d00b      	beq.n	dd96 <__ascii_mbtowc+0x26>
    dd7e:	7813      	ldrb	r3, [r2, #0]
    dd80:	600b      	str	r3, [r1, #0]
    dd82:	7810      	ldrb	r0, [r2, #0]
    dd84:	1e43      	subs	r3, r0, #1
    dd86:	4198      	sbcs	r0, r3
    dd88:	b002      	add	sp, #8
    dd8a:	4770      	bx	lr
    dd8c:	a901      	add	r1, sp, #4
    dd8e:	2a00      	cmp	r2, #0
    dd90:	d1f3      	bne.n	dd7a <__ascii_mbtowc+0xa>
    dd92:	2000      	movs	r0, #0
    dd94:	e7f8      	b.n	dd88 <__ascii_mbtowc+0x18>
    dd96:	2002      	movs	r0, #2
    dd98:	4240      	negs	r0, r0
    dd9a:	e7f5      	b.n	dd88 <__ascii_mbtowc+0x18>

0000dd9c <_read_r>:
    dd9c:	b570      	push	{r4, r5, r6, lr}
    dd9e:	0005      	movs	r5, r0
    dda0:	0008      	movs	r0, r1
    dda2:	0011      	movs	r1, r2
    dda4:	2200      	movs	r2, #0
    dda6:	4c06      	ldr	r4, [pc, #24]	; (ddc0 <_read_r+0x24>)
    dda8:	6022      	str	r2, [r4, #0]
    ddaa:	001a      	movs	r2, r3
    ddac:	f000 f8c0 	bl	df30 <_read>
    ddb0:	1c43      	adds	r3, r0, #1
    ddb2:	d000      	beq.n	ddb6 <_read_r+0x1a>
    ddb4:	bd70      	pop	{r4, r5, r6, pc}
    ddb6:	6823      	ldr	r3, [r4, #0]
    ddb8:	2b00      	cmp	r3, #0
    ddba:	d0fb      	beq.n	ddb4 <_read_r+0x18>
    ddbc:	602b      	str	r3, [r5, #0]
    ddbe:	e7f9      	b.n	ddb4 <_read_r+0x18>
    ddc0:	200011ec 	.word	0x200011ec

0000ddc4 <__swbuf_r>:
    ddc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ddc6:	0006      	movs	r6, r0
    ddc8:	000d      	movs	r5, r1
    ddca:	0014      	movs	r4, r2
    ddcc:	2800      	cmp	r0, #0
    ddce:	d002      	beq.n	ddd6 <__swbuf_r+0x12>
    ddd0:	6b83      	ldr	r3, [r0, #56]	; 0x38
    ddd2:	2b00      	cmp	r3, #0
    ddd4:	d04e      	beq.n	de74 <__swbuf_r+0xb0>
    ddd6:	69a3      	ldr	r3, [r4, #24]
    ddd8:	60a3      	str	r3, [r4, #8]
    ddda:	230c      	movs	r3, #12
    dddc:	5ee0      	ldrsh	r0, [r4, r3]
    ddde:	b281      	uxth	r1, r0
    dde0:	070b      	lsls	r3, r1, #28
    dde2:	d53c      	bpl.n	de5e <__swbuf_r+0x9a>
    dde4:	6923      	ldr	r3, [r4, #16]
    dde6:	2b00      	cmp	r3, #0
    dde8:	d039      	beq.n	de5e <__swbuf_r+0x9a>
    ddea:	22ff      	movs	r2, #255	; 0xff
    ddec:	b2ef      	uxtb	r7, r5
    ddee:	4015      	ands	r5, r2
    ddf0:	2280      	movs	r2, #128	; 0x80
    ddf2:	0192      	lsls	r2, r2, #6
    ddf4:	4211      	tst	r1, r2
    ddf6:	d015      	beq.n	de24 <__swbuf_r+0x60>
    ddf8:	6822      	ldr	r2, [r4, #0]
    ddfa:	6961      	ldr	r1, [r4, #20]
    ddfc:	1ad3      	subs	r3, r2, r3
    ddfe:	428b      	cmp	r3, r1
    de00:	da1b      	bge.n	de3a <__swbuf_r+0x76>
    de02:	3301      	adds	r3, #1
    de04:	68a1      	ldr	r1, [r4, #8]
    de06:	3901      	subs	r1, #1
    de08:	60a1      	str	r1, [r4, #8]
    de0a:	1c51      	adds	r1, r2, #1
    de0c:	6021      	str	r1, [r4, #0]
    de0e:	7017      	strb	r7, [r2, #0]
    de10:	6962      	ldr	r2, [r4, #20]
    de12:	429a      	cmp	r2, r3
    de14:	d01a      	beq.n	de4c <__swbuf_r+0x88>
    de16:	89a3      	ldrh	r3, [r4, #12]
    de18:	07db      	lsls	r3, r3, #31
    de1a:	d501      	bpl.n	de20 <__swbuf_r+0x5c>
    de1c:	2d0a      	cmp	r5, #10
    de1e:	d015      	beq.n	de4c <__swbuf_r+0x88>
    de20:	0028      	movs	r0, r5
    de22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    de24:	4302      	orrs	r2, r0
    de26:	6e61      	ldr	r1, [r4, #100]	; 0x64
    de28:	81a2      	strh	r2, [r4, #12]
    de2a:	4a14      	ldr	r2, [pc, #80]	; (de7c <__swbuf_r+0xb8>)
    de2c:	400a      	ands	r2, r1
    de2e:	6662      	str	r2, [r4, #100]	; 0x64
    de30:	6961      	ldr	r1, [r4, #20]
    de32:	6822      	ldr	r2, [r4, #0]
    de34:	1ad3      	subs	r3, r2, r3
    de36:	428b      	cmp	r3, r1
    de38:	dbe3      	blt.n	de02 <__swbuf_r+0x3e>
    de3a:	0021      	movs	r1, r4
    de3c:	0030      	movs	r0, r6
    de3e:	f7fe f8fd 	bl	c03c <_fflush_r>
    de42:	2800      	cmp	r0, #0
    de44:	d108      	bne.n	de58 <__swbuf_r+0x94>
    de46:	6822      	ldr	r2, [r4, #0]
    de48:	2301      	movs	r3, #1
    de4a:	e7db      	b.n	de04 <__swbuf_r+0x40>
    de4c:	0021      	movs	r1, r4
    de4e:	0030      	movs	r0, r6
    de50:	f7fe f8f4 	bl	c03c <_fflush_r>
    de54:	2800      	cmp	r0, #0
    de56:	d0e3      	beq.n	de20 <__swbuf_r+0x5c>
    de58:	2501      	movs	r5, #1
    de5a:	426d      	negs	r5, r5
    de5c:	e7e0      	b.n	de20 <__swbuf_r+0x5c>
    de5e:	0021      	movs	r1, r4
    de60:	0030      	movs	r0, r6
    de62:	f7fc fedd 	bl	ac20 <__swsetup_r>
    de66:	2800      	cmp	r0, #0
    de68:	d1f6      	bne.n	de58 <__swbuf_r+0x94>
    de6a:	230c      	movs	r3, #12
    de6c:	5ee0      	ldrsh	r0, [r4, r3]
    de6e:	6923      	ldr	r3, [r4, #16]
    de70:	b281      	uxth	r1, r0
    de72:	e7ba      	b.n	ddea <__swbuf_r+0x26>
    de74:	f7fe f93c 	bl	c0f0 <__sinit>
    de78:	e7ad      	b.n	ddd6 <__swbuf_r+0x12>
    de7a:	46c0      	nop			; (mov r8, r8)
    de7c:	ffffdfff 	.word	0xffffdfff

0000de80 <_wcrtomb_r>:
    de80:	b570      	push	{r4, r5, r6, lr}
    de82:	001d      	movs	r5, r3
    de84:	4b11      	ldr	r3, [pc, #68]	; (decc <_wcrtomb_r+0x4c>)
    de86:	b084      	sub	sp, #16
    de88:	681b      	ldr	r3, [r3, #0]
    de8a:	0004      	movs	r4, r0
    de8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    de8e:	2900      	cmp	r1, #0
    de90:	d00e      	beq.n	deb0 <_wcrtomb_r+0x30>
    de92:	2b00      	cmp	r3, #0
    de94:	d016      	beq.n	dec4 <_wcrtomb_r+0x44>
    de96:	20e0      	movs	r0, #224	; 0xe0
    de98:	581e      	ldr	r6, [r3, r0]
    de9a:	002b      	movs	r3, r5
    de9c:	0020      	movs	r0, r4
    de9e:	47b0      	blx	r6
    dea0:	1c43      	adds	r3, r0, #1
    dea2:	d103      	bne.n	deac <_wcrtomb_r+0x2c>
    dea4:	2300      	movs	r3, #0
    dea6:	602b      	str	r3, [r5, #0]
    dea8:	338a      	adds	r3, #138	; 0x8a
    deaa:	6023      	str	r3, [r4, #0]
    deac:	b004      	add	sp, #16
    deae:	bd70      	pop	{r4, r5, r6, pc}
    deb0:	2b00      	cmp	r3, #0
    deb2:	d009      	beq.n	dec8 <_wcrtomb_r+0x48>
    deb4:	22e0      	movs	r2, #224	; 0xe0
    deb6:	a901      	add	r1, sp, #4
    deb8:	589e      	ldr	r6, [r3, r2]
    deba:	0020      	movs	r0, r4
    debc:	002b      	movs	r3, r5
    debe:	2200      	movs	r2, #0
    dec0:	47b0      	blx	r6
    dec2:	e7ed      	b.n	dea0 <_wcrtomb_r+0x20>
    dec4:	4b02      	ldr	r3, [pc, #8]	; (ded0 <_wcrtomb_r+0x50>)
    dec6:	e7e6      	b.n	de96 <_wcrtomb_r+0x16>
    dec8:	4b01      	ldr	r3, [pc, #4]	; (ded0 <_wcrtomb_r+0x50>)
    deca:	e7f3      	b.n	deb4 <_wcrtomb_r+0x34>
    decc:	20000070 	.word	0x20000070
    ded0:	200008b4 	.word	0x200008b4

0000ded4 <__ascii_wctomb>:
    ded4:	2900      	cmp	r1, #0
    ded6:	d004      	beq.n	dee2 <__ascii_wctomb+0xe>
    ded8:	2aff      	cmp	r2, #255	; 0xff
    deda:	d804      	bhi.n	dee6 <__ascii_wctomb+0x12>
    dedc:	2001      	movs	r0, #1
    dede:	700a      	strb	r2, [r1, #0]
    dee0:	4770      	bx	lr
    dee2:	2000      	movs	r0, #0
    dee4:	e7fc      	b.n	dee0 <__ascii_wctomb+0xc>
    dee6:	238a      	movs	r3, #138	; 0x8a
    dee8:	6003      	str	r3, [r0, #0]
    deea:	2001      	movs	r0, #1
    deec:	4240      	negs	r0, r0
    deee:	e7f7      	b.n	dee0 <__ascii_wctomb+0xc>

0000def0 <_close>:
    def0:	2258      	movs	r2, #88	; 0x58
    def2:	2001      	movs	r0, #1
    def4:	4b01      	ldr	r3, [pc, #4]	; (defc <_close+0xc>)
    def6:	4240      	negs	r0, r0
    def8:	601a      	str	r2, [r3, #0]
    defa:	4770      	bx	lr
    defc:	200011ec 	.word	0x200011ec

0000df00 <_fstat>:
    df00:	2258      	movs	r2, #88	; 0x58
    df02:	2001      	movs	r0, #1
    df04:	4b01      	ldr	r3, [pc, #4]	; (df0c <_fstat+0xc>)
    df06:	4240      	negs	r0, r0
    df08:	601a      	str	r2, [r3, #0]
    df0a:	4770      	bx	lr
    df0c:	200011ec 	.word	0x200011ec

0000df10 <_isatty>:
    df10:	2258      	movs	r2, #88	; 0x58
    df12:	4b02      	ldr	r3, [pc, #8]	; (df1c <_isatty+0xc>)
    df14:	2000      	movs	r0, #0
    df16:	601a      	str	r2, [r3, #0]
    df18:	4770      	bx	lr
    df1a:	46c0      	nop			; (mov r8, r8)
    df1c:	200011ec 	.word	0x200011ec

0000df20 <_lseek>:
    df20:	2258      	movs	r2, #88	; 0x58
    df22:	2001      	movs	r0, #1
    df24:	4b01      	ldr	r3, [pc, #4]	; (df2c <_lseek+0xc>)
    df26:	4240      	negs	r0, r0
    df28:	601a      	str	r2, [r3, #0]
    df2a:	4770      	bx	lr
    df2c:	200011ec 	.word	0x200011ec

0000df30 <_read>:
    df30:	2258      	movs	r2, #88	; 0x58
    df32:	2001      	movs	r0, #1
    df34:	4b01      	ldr	r3, [pc, #4]	; (df3c <_read+0xc>)
    df36:	4240      	negs	r0, r0
    df38:	601a      	str	r2, [r3, #0]
    df3a:	4770      	bx	lr
    df3c:	200011ec 	.word	0x200011ec

0000df40 <_sbrk>:
    df40:	4a04      	ldr	r2, [pc, #16]	; (df54 <_sbrk+0x14>)
    df42:	6813      	ldr	r3, [r2, #0]
    df44:	2b00      	cmp	r3, #0
    df46:	d003      	beq.n	df50 <_sbrk+0x10>
    df48:	1818      	adds	r0, r3, r0
    df4a:	6010      	str	r0, [r2, #0]
    df4c:	0018      	movs	r0, r3
    df4e:	4770      	bx	lr
    df50:	4b01      	ldr	r3, [pc, #4]	; (df58 <_sbrk+0x18>)
    df52:	e7f9      	b.n	df48 <_sbrk+0x8>
    df54:	200010e8 	.word	0x200010e8
    df58:	200031f0 	.word	0x200031f0

0000df5c <_write>:
    df5c:	2258      	movs	r2, #88	; 0x58
    df5e:	2001      	movs	r0, #1
    df60:	4b01      	ldr	r3, [pc, #4]	; (df68 <_write+0xc>)
    df62:	4240      	negs	r0, r0
    df64:	601a      	str	r2, [r3, #0]
    df66:	4770      	bx	lr
    df68:	200011ec 	.word	0x200011ec
    df6c:	0000030c 	.word	0x0000030c
    df70:	00000338 	.word	0x00000338
    df74:	00000344 	.word	0x00000344
    df78:	00000350 	.word	0x00000350
    df7c:	0000035c 	.word	0x0000035c
    df80:	00000368 	.word	0x00000368
    df84:	00000374 	.word	0x00000374
    df88:	00000380 	.word	0x00000380
    df8c:	0000038c 	.word	0x0000038c
    df90:	00000398 	.word	0x00000398
    df94:	000003a4 	.word	0x000003a4
    df98:	000003b0 	.word	0x000003b0
    df9c:	000003fc 	.word	0x000003fc
    dfa0:	000003fc 	.word	0x000003fc
    dfa4:	000003fc 	.word	0x000003fc
    dfa8:	000003bc 	.word	0x000003bc
    dfac:	000003c8 	.word	0x000003c8
    dfb0:	000003fc 	.word	0x000003fc
    dfb4:	000003fc 	.word	0x000003fc
    dfb8:	000003fc 	.word	0x000003fc
    dfbc:	000003d4 	.word	0x000003d4
    dfc0:	000003e2 	.word	0x000003e2
    dfc4:	000003ee 	.word	0x000003ee
    dfc8:	0000053c 	.word	0x0000053c
    dfcc:	00000568 	.word	0x00000568
    dfd0:	00000578 	.word	0x00000578
    dfd4:	00000552 	.word	0x00000552
    dfd8:	00000552 	.word	0x00000552
    dfdc:	0000058c 	.word	0x0000058c
    dfe0:	00000552 	.word	0x00000552
    dfe4:	00000552 	.word	0x00000552
    dfe8:	00000552 	.word	0x00000552
    dfec:	00000552 	.word	0x00000552
    dff0:	00000552 	.word	0x00000552
    dff4:	00000552 	.word	0x00000552
    dff8:	00000552 	.word	0x00000552
    dffc:	00000552 	.word	0x00000552
    e000:	00000552 	.word	0x00000552
    e004:	00000552 	.word	0x00000552
    e008:	00000552 	.word	0x00000552
    e00c:	000005c2 	.word	0x000005c2
    e010:	000005d6 	.word	0x000005d6
    e014:	000005ea 	.word	0x000005ea
    e018:	64616552 	.word	0x64616552
    e01c:	64255220 	.word	0x64255220
    e020:	00000000 	.word	0x00000000
    e024:	3020203a 	.word	0x3020203a
    e028:	38302578 	.word	0x38302578
    e02c:	000a786c 	.word	0x000a786c
    e030:	74697257 	.word	0x74697257
    e034:	25522065 	.word	0x25522065
    e038:	00000064 	.word	0x00000064
    e03c:	3020203a 	.word	0x3020203a
    e040:	38302578 	.word	0x38302578
    e044:	0009786c 	.word	0x0009786c
    e048:	72727543 	.word	0x72727543
    e04c:	20746e65 	.word	0x20746e65
    e050:	71657266 	.word	0x71657266
    e054:	636e6575 	.word	0x636e6575
    e058:	25203a65 	.word	0x25203a65
    e05c:	000a666c 	.word	0x000a666c
    e060:	2a2a2a2a 	.word	0x2a2a2a2a
    e064:	2a2a2a2a 	.word	0x2a2a2a2a
    e068:	2a2a2a2a 	.word	0x2a2a2a2a
    e06c:	2a2a2a2a 	.word	0x2a2a2a2a
    e070:	2a2a2a2a 	.word	0x2a2a2a2a
    e074:	2a2a2a2a 	.word	0x2a2a2a2a
    e078:	0d0a2a2a 	.word	0x0d0a2a2a
    e07c:	00000000 	.word	0x00000000
    e080:	20746f4e 	.word	0x20746f4e
    e084:	6b636f4c 	.word	0x6b636f4c
    e088:	61206465 	.word	0x61206465
    e08c:	20203a74 	.word	0x20203a74
    e090:	00666c25 	.word	0x00666c25
    e094:	7a484d20 	.word	0x7a484d20
    e098:	00000000 	.word	0x00000000
    e09c:	2a2a2a2a 	.word	0x2a2a2a2a
    e0a0:	2a2a2a2a 	.word	0x2a2a2a2a
    e0a4:	2a2a2a2a 	.word	0x2a2a2a2a
    e0a8:	2a2a2a2a 	.word	0x2a2a2a2a
    e0ac:	2a2a2a2a 	.word	0x2a2a2a2a
    e0b0:	2a2a2a2a 	.word	0x2a2a2a2a
    e0b4:	00002a2a 	.word	0x00002a2a
    e0b8:	682f2e2e 	.word	0x682f2e2e
    e0bc:	732f6c61 	.word	0x732f6c61
    e0c0:	682f6372 	.word	0x682f6372
    e0c4:	645f6c61 	.word	0x645f6c61
    e0c8:	735f6361 	.word	0x735f6361
    e0cc:	2e636e79 	.word	0x2e636e79
    e0d0:	00000063 	.word	0x00000063
    e0d4:	682f2e2e 	.word	0x682f2e2e
    e0d8:	732f6c61 	.word	0x732f6c61
    e0dc:	682f6372 	.word	0x682f6372
    e0e0:	695f6c61 	.word	0x695f6c61
    e0e4:	00632e6f 	.word	0x00632e6f
    e0e8:	682f2e2e 	.word	0x682f2e2e
    e0ec:	732f6c61 	.word	0x732f6c61
    e0f0:	682f6372 	.word	0x682f6372
    e0f4:	735f6c61 	.word	0x735f6c61
    e0f8:	6d5f6970 	.word	0x6d5f6970
    e0fc:	6e79735f 	.word	0x6e79735f
    e100:	00632e63 	.word	0x00632e63
    e104:	682f2e2e 	.word	0x682f2e2e
    e108:	732f6c61 	.word	0x732f6c61
    e10c:	682f6372 	.word	0x682f6372
    e110:	745f6c61 	.word	0x745f6c61
    e114:	72656d69 	.word	0x72656d69
    e118:	0000632e 	.word	0x0000632e
    e11c:	682f2e2e 	.word	0x682f2e2e
    e120:	732f6c61 	.word	0x732f6c61
    e124:	682f6372 	.word	0x682f6372
    e128:	755f6c61 	.word	0x755f6c61
    e12c:	74726173 	.word	0x74726173
    e130:	7973615f 	.word	0x7973615f
    e134:	632e636e 	.word	0x632e636e
    e138:	00000000 	.word	0x00000000
    e13c:	682f2e2e 	.word	0x682f2e2e
    e140:	752f6c61 	.word	0x752f6c61
    e144:	736c6974 	.word	0x736c6974
    e148:	6372732f 	.word	0x6372732f
    e14c:	6974752f 	.word	0x6974752f
    e150:	6c5f736c 	.word	0x6c5f736c
    e154:	2e747369 	.word	0x2e747369
    e158:	00000063 	.word	0x00000063
    e15c:	682f2e2e 	.word	0x682f2e2e
    e160:	752f6c61 	.word	0x752f6c61
    e164:	736c6974 	.word	0x736c6974
    e168:	6372732f 	.word	0x6372732f
    e16c:	6974752f 	.word	0x6974752f
    e170:	725f736c 	.word	0x725f736c
    e174:	62676e69 	.word	0x62676e69
    e178:	65666675 	.word	0x65666675
    e17c:	00632e72 	.word	0x00632e72
    e180:	682f2e2e 	.word	0x682f2e2e
    e184:	642f6c70 	.word	0x642f6c70
    e188:	682f6361 	.word	0x682f6361
    e18c:	645f6c70 	.word	0x645f6c70
    e190:	632e6361 	.word	0x632e6361
    e194:	00000000 	.word	0x00000000

0000e198 <_map>:
    e198:	0000000e 0000000e 682f2e2e 652f6c70     ........../hpl/e
    e1a8:	682f6369 655f6c70 632e6369 00000000     ic/hpl_eic.c....

0000e1b8 <_usarts>:
    e1b8:	00000003 40100004 00030000 0000ff2e     .......@........
    e1c8:	00000000                                ....

0000e1cc <_i2cms>:
	...

0000e1e4 <_i2css>:
	...

0000e1f4 <sercomspi_regs>:
    e1f4:	0020000c 00020000 00000000 01ff003b     .. .........;...
    e204:	20000c00 02000000 00000000 ff000500     ... ............
    e214:	000c0101 00000030 00000002 00170000     ....0...........
    e224:	000201ff 682f2e2e 732f6c70 6f637265     ....../hpl/serco
    e234:	70682f6d 65735f6c 6d6f6372 0000632e     m/hpl_sercom.c..

0000e244 <_tcs>:
    e244:	03680003 00000000 00000000 00001770     ..h.........p...
    e254:	00000000 03680004 00000000 00000000     ......h.........
    e264:	0000007d 00000000 682f2e2e 742f6c70     }........./hpl/t
    e274:	70682f63 63745f6c 0000632e 00004a25     c/hpl_tc.c..%J..
    e284:	00000804                                ....

0000e288 <_usb_ep_cfgs>:
    e288:	20000fb0 00000000 00000040 20000f70     ... ....@...p.. 
    e298:	20000f30 00400040 20000ef0 20000eb0     0.. @.@.... ... 
    e2a8:	00400040 20000e70 20000e30 00400040     @.@.p.. 0.. @.@.
    e2b8:	20000df0 00000000 00000040 0000483e     ... ....@...>H..
    e2c8:	0000481a 0000483e 00004820 0000483e     .H..>H.. H..>H..
    e2d8:	000047ea 0000483e 0000483e 0000483e     .G..>H..>H..>H..
    e2e8:	000047fc 0000483e 00004826 752f2e2e     .G..>H..&H..../u
    e2f8:	642f6273 63697665 73752f65 2e636462     sb/device/usbdc.
    e308:	00000063 00676f6c 00776f70 00000000     c...log.pow.....

0000e318 <TWO52>:
    e318:	00000000 43300000 00000000 c3300000     ......0C......0.
    e328:	00007094 00006fe4 00006fe4 00006fe2     .p...o...o...o..
    e338:	00007086 00007086 0000707c 00006fe2     .p...p..|p...o..
    e348:	00007086 0000707c 00007086 00006fe2     .p..|p...p...o..
    e358:	0000708c 0000708c 0000708c 0000711c     .p...p...p...q..
    e368:	00007d98 00007d7a 00007d34 00007c52     .}..z}..4}..R|..
    e378:	00007d34 00007d6c 00007d34 00007c52     4}..l}..4}..R|..
    e388:	00007d7a 00007d7a 00007d6c 00007c52     z}..z}..l}..R|..
    e398:	00007c4a 00007c4a 00007c4a 00007fb0     J|..J|..J|......
    e3a8:	000085f8 000084b8 000084b8 000084b4     ................
    e3b8:	000085d0 000085d0 000085c2 000084b4     ................
    e3c8:	000085d0 000085c2 000085d0 000084b4     ................
    e3d8:	000085d8 000085d8 000085d8 000087dc     ................

0000e3e8 <_global_impure_ptr>:
    e3e8:	20000078 0000000a 00009ade 00009bb2     x.. ............
    e3f8:	00009bb2 00009aca 00009bb2 00009bb2     ................
    e408:	00009bb2 00009bb2 00009bb2 00009bb2     ................
    e418:	00009b84 00009696 00009bb2 0000968c     ................
    e428:	000096a0 00009bb2 00009ad4 00009860     ............`...
    e438:	00009860 00009860 00009860 00009860     `...`...`...`...
    e448:	00009860 00009860 00009860 00009860     `...`...`...`...
    e458:	00009bb2 00009bb2 00009bb2 00009bb2     ................
    e468:	00009bb2 00009bb2 00009bb2 00009bb2     ................
    e478:	00009bb2 00009bb2 00009b9a 00009aee     ................
    e488:	00009bb2 00009aee 00009bb2 00009bb2     ................
    e498:	00009bb2 00009bb2 00009a54 00009bb2     ........T.......
    e4a8:	00009bb2 00009a5e 00009bb2 00009bb2     ....^...........
    e4b8:	00009bb2 00009bb2 00009bb2 00009a8c     ................
    e4c8:	00009bb2 00009bb2 00009aba 00009bb2     ................
    e4d8:	00009bb2 00009bb2 00009bb2 00009bb2     ................
    e4e8:	00009bb2 00009bb2 00009bb2 00009bb2     ................
    e4f8:	00009bb2 000098a0 000098d6 00009aee     ................
    e508:	00009aee 00009aee 0000997e 000098d6     ........~.......
    e518:	00009bb2 00009bb2 00009988 00009bb2     ................
    e528:	0000999a 00009bae 000099c8 000099f2     ................
    e538:	00009bb2 000099fc 00009bb2 00009baa     ................
    e548:	00009bb2 00009bb2 000096ee 00464e49     ............INF.
    e558:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
    e568:	37363534 42413938 46454443 00000000     456789ABCDEF....
    e578:	33323130 37363534 62613938 66656463     0123456789abcdef
    e588:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

0000e598 <blanks.7238>:
    e598:	20202020 20202020 20202020 20202020                     

0000e5a8 <zeroes.7239>:
    e5a8:	30303030 30303030 30303030 30303030     0000000000000000
    e5b8:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

0000e5c8 <__mprec_bigtens>:
    e5c8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    e5d8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    e5e8:	7f73bf3c 75154fdd                       <.s..O.u

0000e5f0 <__mprec_tens>:
    e5f0:	00000000 3ff00000 00000000 40240000     .......?......$@
    e600:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    e610:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    e620:	00000000 412e8480 00000000 416312d0     .......A......cA
    e630:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    e640:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    e650:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    e660:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    e670:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    e680:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    e690:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    e6a0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    e6b0:	79d99db4 44ea7843                       ...yCx.D

0000e6b8 <p05.6055>:
    e6b8:	00000005 00000019 0000007d 00000043     ........}...C...
    e6c8:	49534f50 00000058 0000002e              POSIX.......

0000e6d4 <_ctype_>:
    e6d4:	20202000 20202020 28282020 20282828     .         ((((( 
    e6e4:	20202020 20202020 20202020 20202020                     
    e6f4:	10108820 10101010 10101010 10101010      ...............
    e704:	04040410 04040404 10040404 10101010     ................
    e714:	41411010 41414141 01010101 01010101     ..AAAAAA........
    e724:	01010101 01010101 01010101 10101010     ................
    e734:	42421010 42424242 02020202 02020202     ..BBBBBB........
    e744:	02020202 02020202 02020202 10101010     ................
    e754:	00000020 00000000 00000000 00000000      ...............
	...

0000e7d8 <_init>:
    e7d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e7da:	46c0      	nop			; (mov r8, r8)
    e7dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e7de:	bc08      	pop	{r3}
    e7e0:	469e      	mov	lr, r3
    e7e2:	4770      	bx	lr

0000e7e4 <__init_array_start>:
    e7e4:	0000ade9 	.word	0x0000ade9

0000e7e8 <__frame_dummy_init_array_entry>:
    e7e8:	000000dd 00000b05 00000c59              ........Y...

0000e7f4 <_fini>:
    e7f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e7f6:	46c0      	nop			; (mov r8, r8)
    e7f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e7fa:	bc08      	pop	{r3}
    e7fc:	469e      	mov	lr, r3
    e7fe:	4770      	bx	lr

0000e800 <__fini_array_start>:
    e800:	000000b5 	.word	0x000000b5
