
libLMX_AVR128DB_LIB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000148  00804000  00002750  000027e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002750  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000225  00804148  00804148  0000292c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000292c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002988  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005d8  00000000  00000000  000029c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000ad33  00000000  00000000  00002fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004631  00000000  00000000  0000dcd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002d58  00000000  00000000  00012304  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d68  00000000  00000000  0001505c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00006285  00000000  00000000  00015dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b8f  00000000  00000000  0001c049  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000550  00000000  00000000  0001ebd8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <__dtors_end>
       4:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
       8:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
       c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      10:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      14:	0c 94 76 08 	jmp	0x10ec	; 0x10ec <__vector_5>
      18:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      1c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      20:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      24:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      28:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      2c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      30:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      34:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      38:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      3c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      40:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      44:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      48:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      4c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      50:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      54:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      58:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      5c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      60:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      64:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      68:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      6c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      70:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      74:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      78:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      7c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      80:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      84:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      88:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      8c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      90:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      94:	0c 94 0f 0d 	jmp	0x1a1e	; 0x1a1e <__vector_37>
      98:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      9c:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      a0:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      a4:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      a8:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      ac:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      b0:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      b4:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      b8:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      bc:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      c0:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      c4:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      c8:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      cc:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      d0:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      d4:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      d8:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      dc:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      e0:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      e4:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      e8:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      ec:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>
      f0:	0c 94 29 01 	jmp	0x252	; 0x252 <__bad_interrupt>

000000f4 <__trampolines_end>:
      f4:	6e 61       	ori	r22, 0x1E	; 30
      f6:	6e 00       	.word	0x006e	; ????

000000f8 <__c.2332>:
      f8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     108:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     118:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     128:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     138:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     148:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     158:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     168:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     178:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     188:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     198:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1a8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1b8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1c8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1d8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1e8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001f6 <__ctors_start>:
     1f6:	61 08       	sbc	r6, r1
     1f8:	b4 08       	sbc	r11, r4

000001fa <__ctors_end>:
     1fa:	66 08       	sbc	r6, r6
     1fc:	b9 08       	sbc	r11, r9

000001fe <__dtors_end>:
     1fe:	11 24       	eor	r1, r1
     200:	1f be       	out	0x3f, r1	; 63
     202:	cf ef       	ldi	r28, 0xFF	; 255
     204:	cd bf       	out	0x3d, r28	; 61
     206:	df e7       	ldi	r29, 0x7F	; 127
     208:	de bf       	out	0x3e, r29	; 62

0000020a <__do_copy_data>:
     20a:	11 e4       	ldi	r17, 0x41	; 65
     20c:	a0 e0       	ldi	r26, 0x00	; 0
     20e:	b0 e4       	ldi	r27, 0x40	; 64
     210:	e0 e5       	ldi	r30, 0x50	; 80
     212:	f7 e2       	ldi	r31, 0x27	; 39
     214:	00 e0       	ldi	r16, 0x00	; 0
     216:	0b bf       	out	0x3b, r16	; 59
     218:	02 c0       	rjmp	.+4      	; 0x21e <__do_copy_data+0x14>
     21a:	07 90       	elpm	r0, Z+
     21c:	0d 92       	st	X+, r0
     21e:	a8 34       	cpi	r26, 0x48	; 72
     220:	b1 07       	cpc	r27, r17
     222:	d9 f7       	brne	.-10     	; 0x21a <__do_copy_data+0x10>

00000224 <__do_clear_bss>:
     224:	23 e4       	ldi	r18, 0x43	; 67
     226:	a8 e4       	ldi	r26, 0x48	; 72
     228:	b1 e4       	ldi	r27, 0x41	; 65
     22a:	01 c0       	rjmp	.+2      	; 0x22e <.do_clear_bss_start>

0000022c <.do_clear_bss_loop>:
     22c:	1d 92       	st	X+, r1

0000022e <.do_clear_bss_start>:
     22e:	ad 36       	cpi	r26, 0x6D	; 109
     230:	b2 07       	cpc	r27, r18
     232:	e1 f7       	brne	.-8      	; 0x22c <.do_clear_bss_loop>

00000234 <__do_global_ctors>:
     234:	10 e0       	ldi	r17, 0x00	; 0
     236:	cd ef       	ldi	r28, 0xFD	; 253
     238:	d0 e0       	ldi	r29, 0x00	; 0
     23a:	04 c0       	rjmp	.+8      	; 0x244 <__do_global_ctors+0x10>
     23c:	21 97       	sbiw	r28, 0x01	; 1
     23e:	fe 01       	movw	r30, r28
     240:	0e 94 f6 11 	call	0x23ec	; 0x23ec <__tablejump2__>
     244:	cb 3f       	cpi	r28, 0xFB	; 251
     246:	d1 07       	cpc	r29, r17
     248:	c9 f7       	brne	.-14     	; 0x23c <__do_global_ctors+0x8>
     24a:	0e 94 86 08 	call	0x110c	; 0x110c <main>
     24e:	0c 94 9b 13 	jmp	0x2736	; 0x2736 <__do_global_dtors>

00000252 <__bad_interrupt>:
     252:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000256 <_ZN15lmx2694_HandlerC1Ev>:
	_delay_ms(100);
	step=(ul+ll)/(2*1024);
	upper_limit=ul;
	lower_limit=ll;
	return Keep_Woobling();
}
     256:	fc 01       	movw	r30, r24
     258:	8e e2       	ldi	r24, 0x2E	; 46
     25a:	92 e4       	ldi	r25, 0x42	; 66
     25c:	86 83       	std	Z+6, r24	; 0x06
     25e:	97 83       	std	Z+7, r25	; 0x07
     260:	88 e4       	ldi	r24, 0x48	; 72
     262:	91 e4       	ldi	r25, 0x41	; 65
     264:	84 83       	std	Z+4, r24	; 0x04
     266:	95 83       	std	Z+5, r25	; 0x05
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	81 8f       	std	Z+25, r24	; 0x19
     26c:	17 8a       	std	Z+23, r1	; 0x17
     26e:	40 e0       	ldi	r20, 0x00	; 0
     270:	50 e0       	ldi	r21, 0x00	; 0
     272:	68 ec       	ldi	r22, 0xC8	; 200
     274:	7e e3       	ldi	r23, 0x3E	; 62
     276:	42 af       	std	Z+58, r20	; 0x3a
     278:	53 af       	std	Z+59, r21	; 0x3b
     27a:	64 af       	std	Z+60, r22	; 0x3c
     27c:	75 af       	std	Z+61, r23	; 0x3d
     27e:	40 e0       	ldi	r20, 0x00	; 0
     280:	50 e0       	ldi	r21, 0x00	; 0
     282:	6a e7       	ldi	r22, 0x7A	; 122
     284:	75 e4       	ldi	r23, 0x45	; 69
     286:	40 83       	st	Z, r20
     288:	51 83       	std	Z+1, r21	; 0x01
     28a:	62 83       	std	Z+2, r22	; 0x02
     28c:	73 83       	std	Z+3, r23	; 0x03
     28e:	40 e4       	ldi	r20, 0x40	; 64
     290:	56 e0       	ldi	r21, 0x06	; 6
     292:	6a e7       	ldi	r22, 0x7A	; 122
     294:	75 e4       	ldi	r23, 0x45	; 69
     296:	42 a7       	std	Z+42, r20	; 0x2a
     298:	53 a7       	std	Z+43, r21	; 0x2b
     29a:	64 a7       	std	Z+44, r22	; 0x2c
     29c:	75 a7       	std	Z+45, r23	; 0x2d
     29e:	87 af       	std	Z+63, r24	; 0x3f
     2a0:	80 8f       	std	Z+24, r24	; 0x18
     2a2:	08 95       	ret

000002a4 <_ZN15lmx2694_HandlerD1Ev>:
     2a4:	08 95       	ret

000002a6 <_ZN15lmx2694_Handler13Get_N_DividerEb>:
     2a6:	fc 01       	movw	r30, r24
     2a8:	61 11       	cpse	r22, r1
     2aa:	18 c0       	rjmp	.+48     	; 0x2dc <_ZN15lmx2694_Handler13Get_N_DividerEb+0x36>
     2ac:	86 81       	ldd	r24, Z+6	; 0x06
     2ae:	97 81       	ldd	r25, Z+7	; 0x07
     2b0:	dc 01       	movw	r26, r24
     2b2:	ac 5b       	subi	r26, 0xBC	; 188
     2b4:	bf 4f       	sbci	r27, 0xFF	; 255
     2b6:	4d 91       	ld	r20, X+
     2b8:	5c 91       	ld	r21, X
     2ba:	11 97       	sbiw	r26, 0x01	; 1
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	ba 01       	movw	r22, r20
     2c2:	55 27       	eor	r21, r21
     2c4:	44 27       	eor	r20, r20
     2c6:	14 96       	adiw	r26, 0x04	; 4
     2c8:	8d 91       	ld	r24, X+
     2ca:	9c 91       	ld	r25, X
     2cc:	48 0f       	add	r20, r24
     2ce:	59 1f       	adc	r21, r25
     2d0:	61 1d       	adc	r22, r1
     2d2:	71 1d       	adc	r23, r1
     2d4:	42 8f       	std	Z+26, r20	; 0x1a
     2d6:	53 8f       	std	Z+27, r21	; 0x1b
     2d8:	64 8f       	std	Z+28, r22	; 0x1c
     2da:	75 8f       	std	Z+29, r23	; 0x1d
     2dc:	62 8d       	ldd	r22, Z+26	; 0x1a
     2de:	73 8d       	ldd	r23, Z+27	; 0x1b
     2e0:	84 8d       	ldd	r24, Z+28	; 0x1c
     2e2:	95 8d       	ldd	r25, Z+29	; 0x1d
     2e4:	08 95       	ret

000002e6 <_ZN15lmx2694_Handler13Get_NumeratorEb>:
     2e6:	fc 01       	movw	r30, r24
     2e8:	61 11       	cpse	r22, r1
     2ea:	18 c0       	rjmp	.+48     	; 0x31c <_ZN15lmx2694_Handler13Get_NumeratorEb+0x36>
     2ec:	86 81       	ldd	r24, Z+6	; 0x06
     2ee:	97 81       	ldd	r25, Z+7	; 0x07
     2f0:	dc 01       	movw	r26, r24
     2f2:	ac 5a       	subi	r26, 0xAC	; 172
     2f4:	bf 4f       	sbci	r27, 0xFF	; 255
     2f6:	4d 91       	ld	r20, X+
     2f8:	5c 91       	ld	r21, X
     2fa:	11 97       	sbiw	r26, 0x01	; 1
     2fc:	60 e0       	ldi	r22, 0x00	; 0
     2fe:	70 e0       	ldi	r23, 0x00	; 0
     300:	ba 01       	movw	r22, r20
     302:	55 27       	eor	r21, r21
     304:	44 27       	eor	r20, r20
     306:	12 96       	adiw	r26, 0x02	; 2
     308:	8d 91       	ld	r24, X+
     30a:	9c 91       	ld	r25, X
     30c:	48 0f       	add	r20, r24
     30e:	59 1f       	adc	r21, r25
     310:	61 1d       	adc	r22, r1
     312:	71 1d       	adc	r23, r1
     314:	46 8f       	std	Z+30, r20	; 0x1e
     316:	57 8f       	std	Z+31, r21	; 0x1f
     318:	60 a3       	std	Z+32, r22	; 0x20
     31a:	71 a3       	std	Z+33, r23	; 0x21
     31c:	66 8d       	ldd	r22, Z+30	; 0x1e
     31e:	77 8d       	ldd	r23, Z+31	; 0x1f
     320:	80 a1       	ldd	r24, Z+32	; 0x20
     322:	91 a1       	ldd	r25, Z+33	; 0x21
     324:	08 95       	ret

00000326 <_ZN15lmx2694_Handler15Get_DenominatorEb>:
     326:	fc 01       	movw	r30, r24
     328:	61 11       	cpse	r22, r1
     32a:	18 c0       	rjmp	.+48     	; 0x35c <_ZN15lmx2694_Handler15Get_DenominatorEb+0x36>
     32c:	86 81       	ldd	r24, Z+6	; 0x06
     32e:	97 81       	ldd	r25, Z+7	; 0x07
     330:	dc 01       	movw	r26, r24
     332:	a4 5b       	subi	r26, 0xB4	; 180
     334:	bf 4f       	sbci	r27, 0xFF	; 255
     336:	4d 91       	ld	r20, X+
     338:	5c 91       	ld	r21, X
     33a:	11 97       	sbiw	r26, 0x01	; 1
     33c:	60 e0       	ldi	r22, 0x00	; 0
     33e:	70 e0       	ldi	r23, 0x00	; 0
     340:	ba 01       	movw	r22, r20
     342:	55 27       	eor	r21, r21
     344:	44 27       	eor	r20, r20
     346:	12 96       	adiw	r26, 0x02	; 2
     348:	8d 91       	ld	r24, X+
     34a:	9c 91       	ld	r25, X
     34c:	48 0f       	add	r20, r24
     34e:	59 1f       	adc	r21, r25
     350:	61 1d       	adc	r22, r1
     352:	71 1d       	adc	r23, r1
     354:	42 a3       	std	Z+34, r20	; 0x22
     356:	53 a3       	std	Z+35, r21	; 0x23
     358:	64 a3       	std	Z+36, r22	; 0x24
     35a:	75 a3       	std	Z+37, r23	; 0x25
     35c:	62 a1       	ldd	r22, Z+34	; 0x22
     35e:	73 a1       	ldd	r23, Z+35	; 0x23
     360:	84 a1       	ldd	r24, Z+36	; 0x24
     362:	95 a1       	ldd	r25, Z+37	; 0x25
     364:	08 95       	ret

00000366 <_ZN15lmx2694_Handler27Calculate_Current_FrequencyEb>:
     366:	4f 92       	push	r4
     368:	5f 92       	push	r5
     36a:	6f 92       	push	r6
     36c:	7f 92       	push	r7
     36e:	8f 92       	push	r8
     370:	9f 92       	push	r9
     372:	af 92       	push	r10
     374:	bf 92       	push	r11
     376:	cf 92       	push	r12
     378:	df 92       	push	r13
     37a:	ef 92       	push	r14
     37c:	ff 92       	push	r15
     37e:	cf 93       	push	r28
     380:	df 93       	push	r29
     382:	ec 01       	movw	r28, r24
     384:	61 11       	cpse	r22, r1
     386:	36 c0       	rjmp	.+108    	; 0x3f4 <_ZN15lmx2694_Handler27Calculate_Current_FrequencyEb+0x8e>
     388:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_ZN15lmx2694_Handler13Get_N_DividerEb>
     38c:	2b 01       	movw	r4, r22
     38e:	3c 01       	movw	r6, r24
     390:	60 e0       	ldi	r22, 0x00	; 0
     392:	ce 01       	movw	r24, r28
     394:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_ZN15lmx2694_Handler13Get_NumeratorEb>
     398:	4b 01       	movw	r8, r22
     39a:	5c 01       	movw	r10, r24
     39c:	60 e0       	ldi	r22, 0x00	; 0
     39e:	ce 01       	movw	r24, r28
     3a0:	0e 94 93 01 	call	0x326	; 0x326 <_ZN15lmx2694_Handler15Get_DenominatorEb>
     3a4:	6b 01       	movw	r12, r22
     3a6:	7c 01       	movw	r14, r24
     3a8:	c5 01       	movw	r24, r10
     3aa:	b4 01       	movw	r22, r8
     3ac:	0e 94 1e 0a 	call	0x143c	; 0x143c <__floatunsisf>
     3b0:	4b 01       	movw	r8, r22
     3b2:	5c 01       	movw	r10, r24
     3b4:	c7 01       	movw	r24, r14
     3b6:	b6 01       	movw	r22, r12
     3b8:	0e 94 1e 0a 	call	0x143c	; 0x143c <__floatunsisf>
     3bc:	9b 01       	movw	r18, r22
     3be:	ac 01       	movw	r20, r24
     3c0:	c5 01       	movw	r24, r10
     3c2:	b4 01       	movw	r22, r8
     3c4:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__divsf3>
     3c8:	6b 01       	movw	r12, r22
     3ca:	7c 01       	movw	r14, r24
     3cc:	c3 01       	movw	r24, r6
     3ce:	b2 01       	movw	r22, r4
     3d0:	0e 94 1e 0a 	call	0x143c	; 0x143c <__floatunsisf>
     3d4:	9b 01       	movw	r18, r22
     3d6:	ac 01       	movw	r20, r24
     3d8:	c7 01       	movw	r24, r14
     3da:	b6 01       	movw	r22, r12
     3dc:	0e 94 0c 09 	call	0x1218	; 0x1218 <__addsf3>
     3e0:	20 e0       	ldi	r18, 0x00	; 0
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	48 e4       	ldi	r20, 0x48	; 72
     3e6:	53 e4       	ldi	r21, 0x43	; 67
     3e8:	0e 94 2d 0b 	call	0x165a	; 0x165a <__mulsf3>
     3ec:	6e a7       	std	Y+46, r22	; 0x2e
     3ee:	7f a7       	std	Y+47, r23	; 0x2f
     3f0:	88 ab       	std	Y+48, r24	; 0x30
     3f2:	99 ab       	std	Y+49, r25	; 0x31
     3f4:	6e a5       	ldd	r22, Y+46	; 0x2e
     3f6:	7f a5       	ldd	r23, Y+47	; 0x2f
     3f8:	88 a9       	ldd	r24, Y+48	; 0x30
     3fa:	99 a9       	ldd	r25, Y+49	; 0x31
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	ff 90       	pop	r15
     402:	ef 90       	pop	r14
     404:	df 90       	pop	r13
     406:	cf 90       	pop	r12
     408:	bf 90       	pop	r11
     40a:	af 90       	pop	r10
     40c:	9f 90       	pop	r9
     40e:	8f 90       	pop	r8
     410:	7f 90       	pop	r7
     412:	6f 90       	pop	r6
     414:	5f 90       	pop	r5
     416:	4f 90       	pop	r4
     418:	08 95       	ret

0000041a <_ZN15lmx2694_Handler3GCDEmm>:
     41a:	8f 92       	push	r8
     41c:	9f 92       	push	r9
     41e:	af 92       	push	r10
     420:	bf 92       	push	r11
     422:	cf 92       	push	r12
     424:	df 92       	push	r13
     426:	ef 92       	push	r14
     428:	ff 92       	push	r15
     42a:	0f 93       	push	r16
     42c:	1f 93       	push	r17
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	41 15       	cp	r20, r1
     434:	51 05       	cpc	r21, r1
     436:	61 05       	cpc	r22, r1
     438:	71 05       	cpc	r23, r1
     43a:	79 f1       	breq	.+94     	; 0x49a <_ZN15lmx2694_Handler3GCDEmm+0x80>
     43c:	01 15       	cp	r16, r1
     43e:	11 05       	cpc	r17, r1
     440:	21 05       	cpc	r18, r1
     442:	31 05       	cpc	r19, r1
     444:	79 f1       	breq	.+94     	; 0x4a4 <_ZN15lmx2694_Handler3GCDEmm+0x8a>
     446:	68 01       	movw	r12, r16
     448:	79 01       	movw	r14, r18
     44a:	4a 01       	movw	r8, r20
     44c:	5b 01       	movw	r10, r22
     44e:	ec 01       	movw	r28, r24
     450:	40 17       	cp	r20, r16
     452:	51 07       	cpc	r21, r17
     454:	62 07       	cpc	r22, r18
     456:	73 07       	cpc	r23, r19
     458:	80 f4       	brcc	.+32     	; 0x47a <_ZN15lmx2694_Handler3GCDEmm+0x60>
     45a:	c9 01       	movw	r24, r18
     45c:	b8 01       	movw	r22, r16
     45e:	a5 01       	movw	r20, r10
     460:	94 01       	movw	r18, r8
     462:	0e 94 c0 11 	call	0x2380	; 0x2380 <__udivmodsi4>
     466:	8b 01       	movw	r16, r22
     468:	9c 01       	movw	r18, r24
     46a:	b5 01       	movw	r22, r10
     46c:	a4 01       	movw	r20, r8
     46e:	ce 01       	movw	r24, r28
     470:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN15lmx2694_Handler3GCDEmm>
     474:	f6 2f       	mov	r31, r22
     476:	e7 2f       	mov	r30, r23
     478:	19 c0       	rjmp	.+50     	; 0x4ac <_ZN15lmx2694_Handler3GCDEmm+0x92>
     47a:	cb 01       	movw	r24, r22
     47c:	ba 01       	movw	r22, r20
     47e:	a9 01       	movw	r20, r18
     480:	98 01       	movw	r18, r16
     482:	0e 94 c0 11 	call	0x2380	; 0x2380 <__udivmodsi4>
     486:	8b 01       	movw	r16, r22
     488:	9c 01       	movw	r18, r24
     48a:	b7 01       	movw	r22, r14
     48c:	a6 01       	movw	r20, r12
     48e:	ce 01       	movw	r24, r28
     490:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN15lmx2694_Handler3GCDEmm>
     494:	f6 2f       	mov	r31, r22
     496:	e7 2f       	mov	r30, r23
     498:	09 c0       	rjmp	.+18     	; 0x4ac <_ZN15lmx2694_Handler3GCDEmm+0x92>
     49a:	f0 2f       	mov	r31, r16
     49c:	e1 2f       	mov	r30, r17
     49e:	82 2f       	mov	r24, r18
     4a0:	93 2f       	mov	r25, r19
     4a2:	04 c0       	rjmp	.+8      	; 0x4ac <_ZN15lmx2694_Handler3GCDEmm+0x92>
     4a4:	f4 2f       	mov	r31, r20
     4a6:	e5 2f       	mov	r30, r21
     4a8:	86 2f       	mov	r24, r22
     4aa:	97 2f       	mov	r25, r23
     4ac:	6f 2f       	mov	r22, r31
     4ae:	7e 2f       	mov	r23, r30
     4b0:	df 91       	pop	r29
     4b2:	cf 91       	pop	r28
     4b4:	1f 91       	pop	r17
     4b6:	0f 91       	pop	r16
     4b8:	ff 90       	pop	r15
     4ba:	ef 90       	pop	r14
     4bc:	df 90       	pop	r13
     4be:	cf 90       	pop	r12
     4c0:	bf 90       	pop	r11
     4c2:	af 90       	pop	r10
     4c4:	9f 90       	pop	r9
     4c6:	8f 90       	pop	r8
     4c8:	08 95       	ret

000004ca <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv>:
     4ca:	af 92       	push	r10
     4cc:	bf 92       	push	r11
     4ce:	cf 92       	push	r12
     4d0:	df 92       	push	r13
     4d2:	ef 92       	push	r14
     4d4:	ff 92       	push	r15
     4d6:	0f 93       	push	r16
     4d8:	1f 93       	push	r17
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	7c 01       	movw	r14, r24
     4e0:	0e e3       	ldi	r16, 0x3E	; 62
     4e2:	10 e4       	ldi	r17, 0x40	; 64
     4e4:	c0 e0       	ldi	r28, 0x00	; 0
     4e6:	d0 e0       	ldi	r29, 0x00	; 0
     4e8:	0f 2e       	mov	r0, r31
     4ea:	fc ee       	ldi	r31, 0xEC	; 236
     4ec:	cf 2e       	mov	r12, r31
     4ee:	fc e2       	ldi	r31, 0x2C	; 44
     4f0:	df 2e       	mov	r13, r31
     4f2:	f0 2d       	mov	r31, r0
     4f4:	0f 2e       	mov	r0, r31
     4f6:	fc ef       	ldi	r31, 0xFC	; 252
     4f8:	af 2e       	mov	r10, r31
     4fa:	fa e3       	ldi	r31, 0x3A	; 58
     4fc:	bf 2e       	mov	r11, r31
     4fe:	f0 2d       	mov	r31, r0
     500:	c3 30       	cpi	r28, 0x03	; 3
     502:	d1 05       	cpc	r29, r1
     504:	fc f4       	brge	.+62     	; 0x544 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0x7a>
     506:	f8 01       	movw	r30, r16
     508:	60 81       	ld	r22, Z
     50a:	71 81       	ldd	r23, Z+1	; 0x01
     50c:	c5 01       	movw	r24, r10
     50e:	0e 94 ac 11 	call	0x2358	; 0x2358 <__divmodhi4>
     512:	07 2e       	mov	r0, r23
     514:	00 0c       	add	r0, r0
     516:	88 0b       	sbc	r24, r24
     518:	99 0b       	sbc	r25, r25
     51a:	0e 94 20 0a 	call	0x1440	; 0x1440 <__floatsisf>
     51e:	f7 01       	movw	r30, r14
     520:	22 a5       	ldd	r18, Z+42	; 0x2a
     522:	33 a5       	ldd	r19, Z+43	; 0x2b
     524:	44 a5       	ldd	r20, Z+44	; 0x2c
     526:	55 a5       	ldd	r21, Z+45	; 0x2d
     528:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     52c:	18 16       	cp	r1, r24
     52e:	1c f1       	brlt	.+70     	; 0x576 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0xac>
     530:	1c 16       	cp	r1, r28
     532:	1d 06       	cpc	r1, r29
     534:	24 f4       	brge	.+8      	; 0x53e <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0x74>
     536:	c1 50       	subi	r28, 0x01	; 1
     538:	f7 01       	movw	r30, r14
     53a:	c7 8b       	std	Z+23, r28	; 0x17
     53c:	23 c0       	rjmp	.+70     	; 0x584 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0xba>
     53e:	f7 01       	movw	r30, r14
     540:	17 8a       	std	Z+23, r1	; 0x17
     542:	20 c0       	rjmp	.+64     	; 0x584 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0xba>
     544:	f8 01       	movw	r30, r16
     546:	60 81       	ld	r22, Z
     548:	71 81       	ldd	r23, Z+1	; 0x01
     54a:	c6 01       	movw	r24, r12
     54c:	0e 94 ac 11 	call	0x2358	; 0x2358 <__divmodhi4>
     550:	07 2e       	mov	r0, r23
     552:	00 0c       	add	r0, r0
     554:	88 0b       	sbc	r24, r24
     556:	99 0b       	sbc	r25, r25
     558:	0e 94 20 0a 	call	0x1440	; 0x1440 <__floatsisf>
     55c:	f7 01       	movw	r30, r14
     55e:	22 a5       	ldd	r18, Z+42	; 0x2a
     560:	33 a5       	ldd	r19, Z+43	; 0x2b
     562:	44 a5       	ldd	r20, Z+44	; 0x2c
     564:	55 a5       	ldd	r21, Z+45	; 0x2d
     566:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     56a:	18 16       	cp	r1, r24
     56c:	24 f0       	brlt	.+8      	; 0x576 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0xac>
     56e:	c1 50       	subi	r28, 0x01	; 1
     570:	f7 01       	movw	r30, r14
     572:	c7 8b       	std	Z+23, r28	; 0x17
     574:	07 c0       	rjmp	.+14     	; 0x584 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0xba>
     576:	21 96       	adiw	r28, 0x01	; 1
     578:	0e 5f       	subi	r16, 0xFE	; 254
     57a:	1f 4f       	sbci	r17, 0xFF	; 255
     57c:	ce 30       	cpi	r28, 0x0E	; 14
     57e:	d1 05       	cpc	r29, r1
     580:	09 f0       	breq	.+2      	; 0x584 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0xba>
     582:	be cf       	rjmp	.-132    	; 0x500 <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv+0x36>
     584:	f7 01       	movw	r30, r14
     586:	87 89       	ldd	r24, Z+23	; 0x17
     588:	e8 2f       	mov	r30, r24
     58a:	f0 e0       	ldi	r31, 0x00	; 0
     58c:	ee 0f       	add	r30, r30
     58e:	ff 1f       	adc	r31, r31
     590:	e2 5c       	subi	r30, 0xC2	; 194
     592:	ff 4b       	sbci	r31, 0xBF	; 191
     594:	90 81       	ld	r25, Z
     596:	f7 01       	movw	r30, r14
     598:	91 8f       	std	Z+25, r25	; 0x19
     59a:	df 91       	pop	r29
     59c:	cf 91       	pop	r28
     59e:	1f 91       	pop	r17
     5a0:	0f 91       	pop	r16
     5a2:	ff 90       	pop	r15
     5a4:	ef 90       	pop	r14
     5a6:	df 90       	pop	r13
     5a8:	cf 90       	pop	r12
     5aa:	bf 90       	pop	r11
     5ac:	af 90       	pop	r10
     5ae:	08 95       	ret

000005b0 <_ZN15lmx2694_Handler18Calculate_FractionEf>:
     5b0:	8f 92       	push	r8
     5b2:	9f 92       	push	r9
     5b4:	af 92       	push	r10
     5b6:	bf 92       	push	r11
     5b8:	cf 92       	push	r12
     5ba:	df 92       	push	r13
     5bc:	ef 92       	push	r14
     5be:	ff 92       	push	r15
     5c0:	0f 93       	push	r16
     5c2:	1f 93       	push	r17
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	ec 01       	movw	r28, r24
     5ca:	cb 01       	movw	r24, r22
     5cc:	ba 01       	movw	r22, r20
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	30 e0       	ldi	r19, 0x00	; 0
     5d2:	40 e8       	ldi	r20, 0x80	; 128
     5d4:	5f e4       	ldi	r21, 0x4F	; 79
     5d6:	0e 94 2d 0b 	call	0x165a	; 0x165a <__mulsf3>
     5da:	0e 94 9a 0b 	call	0x1734	; 0x1734 <round>
     5de:	4b 01       	movw	r8, r22
     5e0:	5c 01       	movw	r10, r24
     5e2:	0e 94 ef 09 	call	0x13de	; 0x13de <__fixunssfsi>
     5e6:	ab 01       	movw	r20, r22
     5e8:	bc 01       	movw	r22, r24
     5ea:	0f ef       	ldi	r16, 0xFF	; 255
     5ec:	1f ef       	ldi	r17, 0xFF	; 255
     5ee:	98 01       	movw	r18, r16
     5f0:	ce 01       	movw	r24, r28
     5f2:	0e 94 0d 02 	call	0x41a	; 0x41a <_ZN15lmx2694_Handler3GCDEmm>
     5f6:	6b 01       	movw	r12, r22
     5f8:	7c 01       	movw	r14, r24
     5fa:	6e a3       	std	Y+38, r22	; 0x26
     5fc:	7f a3       	std	Y+39, r23	; 0x27
     5fe:	88 a7       	std	Y+40, r24	; 0x28
     600:	99 a7       	std	Y+41, r25	; 0x29
     602:	0e 94 1e 0a 	call	0x143c	; 0x143c <__floatunsisf>
     606:	9b 01       	movw	r18, r22
     608:	ac 01       	movw	r20, r24
     60a:	c5 01       	movw	r24, r10
     60c:	b4 01       	movw	r22, r8
     60e:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__divsf3>
     612:	0e 94 ef 09 	call	0x13de	; 0x13de <__fixunssfsi>
     616:	6e 8f       	std	Y+30, r22	; 0x1e
     618:	7f 8f       	std	Y+31, r23	; 0x1f
     61a:	88 a3       	std	Y+32, r24	; 0x20
     61c:	99 a3       	std	Y+33, r25	; 0x21
     61e:	6f ef       	ldi	r22, 0xFF	; 255
     620:	7f ef       	ldi	r23, 0xFF	; 255
     622:	cb 01       	movw	r24, r22
     624:	a7 01       	movw	r20, r14
     626:	96 01       	movw	r18, r12
     628:	0e 94 c0 11 	call	0x2380	; 0x2380 <__udivmodsi4>
     62c:	2a a3       	std	Y+34, r18	; 0x22
     62e:	3b a3       	std	Y+35, r19	; 0x23
     630:	4c a3       	std	Y+36, r20	; 0x24
     632:	5d a3       	std	Y+37, r21	; 0x25
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	1f 91       	pop	r17
     63a:	0f 91       	pop	r16
     63c:	ff 90       	pop	r15
     63e:	ef 90       	pop	r14
     640:	df 90       	pop	r13
     642:	cf 90       	pop	r12
     644:	bf 90       	pop	r11
     646:	af 90       	pop	r10
     648:	9f 90       	pop	r9
     64a:	8f 90       	pop	r8
     64c:	08 95       	ret

0000064e <_ZN15lmx2694_Handler15Get_Three_BytesEm>:
     64e:	fc 01       	movw	r30, r24
     650:	44 87       	std	Z+12, r20	; 0x0c
     652:	53 87       	std	Z+11, r21	; 0x0b
     654:	62 87       	std	Z+10, r22	; 0x0a
     656:	08 95       	ret

00000658 <_ZN15lmx2694_Handler10Power_DownEv>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	ec 01       	movw	r28, r24
     65e:	60 e0       	ldi	r22, 0x00	; 0
     660:	88 85       	ldd	r24, Y+8	; 0x08
     662:	99 85       	ldd	r25, Y+9	; 0x09
     664:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     668:	49 e1       	ldi	r20, 0x19	; 25
     66a:	51 e2       	ldi	r21, 0x21	; 33
     66c:	60 e0       	ldi	r22, 0x00	; 0
     66e:	70 e0       	ldi	r23, 0x00	; 0
     670:	ce 01       	movw	r24, r28
     672:	0e 94 27 03 	call	0x64e	; 0x64e <_ZN15lmx2694_Handler15Get_Three_BytesEm>
     676:	be 01       	movw	r22, r28
     678:	66 5f       	subi	r22, 0xF6	; 246
     67a:	7f 4f       	sbci	r23, 0xFF	; 255
     67c:	43 e0       	ldi	r20, 0x03	; 3
     67e:	88 85       	ldd	r24, Y+8	; 0x08
     680:	99 85       	ldd	r25, Y+9	; 0x09
     682:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN17SPI_Async_Handler5WriteEPKhh>
     686:	08 2e       	mov	r0, r24
     688:	00 0c       	add	r0, r0
     68a:	99 0b       	sbc	r25, r25
     68c:	8a 8b       	std	Y+18, r24	; 0x12
     68e:	9b 8b       	std	Y+19, r25	; 0x13
     690:	21 e0       	ldi	r18, 0x01	; 1
     692:	18 16       	cp	r1, r24
     694:	19 06       	cpc	r1, r25
     696:	0c f0       	brlt	.+2      	; 0x69a <_ZN15lmx2694_Handler10Power_DownEv+0x42>
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	28 8b       	std	Y+16, r18	; 0x10
     69c:	61 e0       	ldi	r22, 0x01	; 1
     69e:	88 85       	ldd	r24, Y+8	; 0x08
     6a0:	99 85       	ldd	r25, Y+9	; 0x09
     6a2:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     6a6:	88 89       	ldd	r24, Y+16	; 0x10
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	08 95       	ret

000006ae <_ZN15lmx2694_Handler13Program_ResetEv>:
     6ae:	0f 93       	push	r16
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	ec 01       	movw	r28, r24
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	88 85       	ldd	r24, Y+8	; 0x08
     6bc:	99 85       	ldd	r25, Y+9	; 0x09
     6be:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     6c2:	4e e1       	ldi	r20, 0x1E	; 30
     6c4:	51 e2       	ldi	r21, 0x21	; 33
     6c6:	60 e0       	ldi	r22, 0x00	; 0
     6c8:	70 e0       	ldi	r23, 0x00	; 0
     6ca:	ce 01       	movw	r24, r28
     6cc:	0e 94 27 03 	call	0x64e	; 0x64e <_ZN15lmx2694_Handler15Get_Three_BytesEm>
     6d0:	8e 01       	movw	r16, r28
     6d2:	06 5f       	subi	r16, 0xF6	; 246
     6d4:	1f 4f       	sbci	r17, 0xFF	; 255
     6d6:	43 e0       	ldi	r20, 0x03	; 3
     6d8:	b8 01       	movw	r22, r16
     6da:	88 85       	ldd	r24, Y+8	; 0x08
     6dc:	99 85       	ldd	r25, Y+9	; 0x09
     6de:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN17SPI_Async_Handler5WriteEPKhh>
     6e2:	08 2e       	mov	r0, r24
     6e4:	00 0c       	add	r0, r0
     6e6:	99 0b       	sbc	r25, r25
     6e8:	8a 8b       	std	Y+18, r24	; 0x12
     6ea:	9b 8b       	std	Y+19, r25	; 0x13
     6ec:	61 e0       	ldi	r22, 0x01	; 1
     6ee:	88 85       	ldd	r24, Y+8	; 0x08
     6f0:	99 85       	ldd	r25, Y+9	; 0x09
     6f2:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     6f6:	88 e5       	ldi	r24, 0x58	; 88
     6f8:	92 e0       	ldi	r25, 0x02	; 2
     6fa:	01 97       	sbiw	r24, 0x01	; 1
     6fc:	f1 f7       	brne	.-4      	; 0x6fa <_ZN15lmx2694_Handler13Program_ResetEv+0x4c>
     6fe:	60 e0       	ldi	r22, 0x00	; 0
     700:	88 85       	ldd	r24, Y+8	; 0x08
     702:	99 85       	ldd	r25, Y+9	; 0x09
     704:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     708:	4c e1       	ldi	r20, 0x1C	; 28
     70a:	51 e2       	ldi	r21, 0x21	; 33
     70c:	60 e0       	ldi	r22, 0x00	; 0
     70e:	70 e0       	ldi	r23, 0x00	; 0
     710:	ce 01       	movw	r24, r28
     712:	0e 94 27 03 	call	0x64e	; 0x64e <_ZN15lmx2694_Handler15Get_Three_BytesEm>
     716:	43 e0       	ldi	r20, 0x03	; 3
     718:	b8 01       	movw	r22, r16
     71a:	88 85       	ldd	r24, Y+8	; 0x08
     71c:	99 85       	ldd	r25, Y+9	; 0x09
     71e:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN17SPI_Async_Handler5WriteEPKhh>
     722:	08 2e       	mov	r0, r24
     724:	00 0c       	add	r0, r0
     726:	99 0b       	sbc	r25, r25
     728:	8a 8b       	std	Y+18, r24	; 0x12
     72a:	9b 8b       	std	Y+19, r25	; 0x13
     72c:	21 e0       	ldi	r18, 0x01	; 1
     72e:	18 16       	cp	r1, r24
     730:	19 06       	cpc	r1, r25
     732:	0c f0       	brlt	.+2      	; 0x736 <_ZN15lmx2694_Handler13Program_ResetEv+0x88>
     734:	20 e0       	ldi	r18, 0x00	; 0
     736:	28 8b       	std	Y+16, r18	; 0x10
     738:	61 e0       	ldi	r22, 0x01	; 1
     73a:	88 85       	ldd	r24, Y+8	; 0x08
     73c:	99 85       	ldd	r25, Y+9	; 0x09
     73e:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     742:	88 89       	ldd	r24, Y+16	; 0x10
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	1f 91       	pop	r17
     74a:	0f 91       	pop	r16
     74c:	08 95       	ret

0000074e <_ZN15lmx2694_Handler16Make_Three_BytesEhj>:
     74e:	fc 01       	movw	r30, r24
     750:	44 87       	std	Z+12, r20	; 0x0c
     752:	53 87       	std	Z+11, r21	; 0x0b
     754:	62 87       	std	Z+10, r22	; 0x0a
     756:	08 95       	ret

00000758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>:
     758:	df 92       	push	r13
     75a:	ef 92       	push	r14
     75c:	ff 92       	push	r15
     75e:	0f 93       	push	r16
     760:	1f 93       	push	r17
     762:	cf 93       	push	r28
     764:	df 93       	push	r29
     766:	ec 01       	movw	r28, r24
     768:	d6 2e       	mov	r13, r22
     76a:	7a 01       	movw	r14, r20
     76c:	06 2f       	mov	r16, r22
     76e:	10 e0       	ldi	r17, 0x00	; 0
     770:	00 0f       	add	r16, r16
     772:	11 1f       	adc	r17, r17
     774:	ee 81       	ldd	r30, Y+6	; 0x06
     776:	ff 81       	ldd	r31, Y+7	; 0x07
     778:	e0 0f       	add	r30, r16
     77a:	f1 1f       	adc	r31, r17
     77c:	81 e0       	ldi	r24, 0x01	; 1
     77e:	20 81       	ld	r18, Z
     780:	31 81       	ldd	r19, Z+1	; 0x01
     782:	24 17       	cp	r18, r20
     784:	35 07       	cpc	r19, r21
     786:	09 f0       	breq	.+2      	; 0x78a <_ZN15lmx2694_Handler21Write_Single_RegisterEhj+0x32>
     788:	80 e0       	ldi	r24, 0x00	; 0
     78a:	88 23       	and	r24, r24
     78c:	19 f0       	breq	.+6      	; 0x794 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj+0x3c>
     78e:	89 89       	ldd	r24, Y+17	; 0x11
     790:	81 11       	cpse	r24, r1
     792:	26 c0       	rjmp	.+76     	; 0x7e0 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj+0x88>
     794:	60 e0       	ldi	r22, 0x00	; 0
     796:	88 85       	ldd	r24, Y+8	; 0x08
     798:	99 85       	ldd	r25, Y+9	; 0x09
     79a:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     79e:	a7 01       	movw	r20, r14
     7a0:	6d 2d       	mov	r22, r13
     7a2:	ce 01       	movw	r24, r28
     7a4:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN15lmx2694_Handler16Make_Three_BytesEhj>
     7a8:	43 e0       	ldi	r20, 0x03	; 3
     7aa:	be 01       	movw	r22, r28
     7ac:	66 5f       	subi	r22, 0xF6	; 246
     7ae:	7f 4f       	sbci	r23, 0xFF	; 255
     7b0:	88 85       	ldd	r24, Y+8	; 0x08
     7b2:	99 85       	ldd	r25, Y+9	; 0x09
     7b4:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN17SPI_Async_Handler5WriteEPKhh>
     7b8:	08 2e       	mov	r0, r24
     7ba:	00 0c       	add	r0, r0
     7bc:	99 0b       	sbc	r25, r25
     7be:	8a 8b       	std	Y+18, r24	; 0x12
     7c0:	9b 8b       	std	Y+19, r25	; 0x13
     7c2:	18 16       	cp	r1, r24
     7c4:	19 06       	cpc	r1, r25
     7c6:	3c f4       	brge	.+14     	; 0x7d6 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj+0x7e>
     7c8:	8e 81       	ldd	r24, Y+6	; 0x06
     7ca:	9f 81       	ldd	r25, Y+7	; 0x07
     7cc:	fc 01       	movw	r30, r24
     7ce:	e0 0f       	add	r30, r16
     7d0:	f1 1f       	adc	r31, r17
     7d2:	e0 82       	st	Z, r14
     7d4:	f1 82       	std	Z+1, r15	; 0x01
     7d6:	61 e0       	ldi	r22, 0x01	; 1
     7d8:	88 85       	ldd	r24, Y+8	; 0x08
     7da:	99 85       	ldd	r25, Y+9	; 0x09
     7dc:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     7e0:	8a 89       	ldd	r24, Y+18	; 0x12
     7e2:	9b 89       	ldd	r25, Y+19	; 0x13
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
     7f0:	df 90       	pop	r13
     7f2:	08 95       	ret

000007f4 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf>:
     7f4:	cf 92       	push	r12
     7f6:	df 92       	push	r13
     7f8:	ef 92       	push	r14
     7fa:	ff 92       	push	r15
     7fc:	cf 93       	push	r28
     7fe:	df 93       	push	r29
     800:	ec 01       	movw	r28, r24
     802:	6a 01       	movw	r12, r20
     804:	7b 01       	movw	r14, r22
     806:	88 8d       	ldd	r24, Y+24	; 0x18
     808:	88 23       	and	r24, r24
     80a:	09 f4       	brne	.+2      	; 0x80e <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0x1a>
     80c:	44 c0       	rjmp	.+136    	; 0x896 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0xa2>
     80e:	19 f0       	breq	.+6      	; 0x816 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0x22>
     810:	81 30       	cpi	r24, 0x01	; 1
     812:	c9 f0       	breq	.+50     	; 0x846 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0x52>
     814:	40 c0       	rjmp	.+128    	; 0x896 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0xa2>
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	30 e5       	ldi	r19, 0x50	; 80
     81a:	43 e4       	ldi	r20, 0x43	; 67
     81c:	56 e4       	ldi	r21, 0x46	; 70
     81e:	c7 01       	movw	r24, r14
     820:	b6 01       	movw	r22, r12
     822:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     826:	18 16       	cp	r1, r24
     828:	3c f4       	brge	.+14     	; 0x838 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0x44>
     82a:	44 e0       	ldi	r20, 0x04	; 4
     82c:	52 e8       	ldi	r21, 0x82	; 130
     82e:	65 e2       	ldi	r22, 0x25	; 37
     830:	ce 01       	movw	r24, r28
     832:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     836:	2f c0       	rjmp	.+94     	; 0x896 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0xa2>
     838:	44 e0       	ldi	r20, 0x04	; 4
     83a:	51 e8       	ldi	r21, 0x81	; 129
     83c:	65 e2       	ldi	r22, 0x25	; 37
     83e:	ce 01       	movw	r24, r28
     840:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     844:	28 c0       	rjmp	.+80     	; 0x896 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0xa2>
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	30 e5       	ldi	r19, 0x50	; 80
     84a:	43 e4       	ldi	r20, 0x43	; 67
     84c:	56 e4       	ldi	r21, 0x46	; 70
     84e:	c7 01       	movw	r24, r14
     850:	b6 01       	movw	r22, r12
     852:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     856:	18 16       	cp	r1, r24
     858:	3c f4       	brge	.+14     	; 0x868 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0x74>
     85a:	44 e0       	ldi	r20, 0x04	; 4
     85c:	53 e8       	ldi	r21, 0x83	; 131
     85e:	65 e2       	ldi	r22, 0x25	; 37
     860:	ce 01       	movw	r24, r28
     862:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     866:	17 c0       	rjmp	.+46     	; 0x896 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0xa2>
     868:	20 e0       	ldi	r18, 0x00	; 0
     86a:	30 e4       	ldi	r19, 0x40	; 64
     86c:	4c e1       	ldi	r20, 0x1C	; 28
     86e:	56 e4       	ldi	r21, 0x46	; 70
     870:	c7 01       	movw	r24, r14
     872:	b6 01       	movw	r22, r12
     874:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     878:	18 16       	cp	r1, r24
     87a:	3c f4       	brge	.+14     	; 0x88a <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0x96>
     87c:	44 e0       	ldi	r20, 0x04	; 4
     87e:	52 e8       	ldi	r21, 0x82	; 130
     880:	65 e2       	ldi	r22, 0x25	; 37
     882:	ce 01       	movw	r24, r28
     884:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     888:	06 c0       	rjmp	.+12     	; 0x896 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf+0xa2>
     88a:	44 e0       	ldi	r20, 0x04	; 4
     88c:	51 e8       	ldi	r21, 0x81	; 129
     88e:	65 e2       	ldi	r22, 0x25	; 37
     890:	ce 01       	movw	r24, r28
     892:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     896:	ee 81       	ldd	r30, Y+6	; 0x06
     898:	ff 81       	ldd	r31, Y+7	; 0x07
     89a:	e6 5b       	subi	r30, 0xB6	; 182
     89c:	ff 4f       	sbci	r31, 0xFF	; 255
     89e:	80 81       	ld	r24, Z
     8a0:	91 81       	ldd	r25, Z+1	; 0x01
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	ff 90       	pop	r15
     8a8:	ef 90       	pop	r14
     8aa:	df 90       	pop	r13
     8ac:	cf 90       	pop	r12
     8ae:	08 95       	ret

000008b0 <_ZN15lmx2694_Handler13Write_FCAL_ENEb>:
     8b0:	cf 93       	push	r28
     8b2:	df 93       	push	r29
     8b4:	ec 01       	movw	r28, r24
     8b6:	66 23       	and	r22, r22
     8b8:	41 f0       	breq	.+16     	; 0x8ca <_ZN15lmx2694_Handler13Write_FCAL_ENEb+0x1a>
     8ba:	ee 81       	ldd	r30, Y+6	; 0x06
     8bc:	ff 81       	ldd	r31, Y+7	; 0x07
     8be:	80 81       	ld	r24, Z
     8c0:	91 81       	ldd	r25, Z+1	; 0x01
     8c2:	88 60       	ori	r24, 0x08	; 8
     8c4:	8c 8b       	std	Y+20, r24	; 0x14
     8c6:	9d 8b       	std	Y+21, r25	; 0x15
     8c8:	07 c0       	rjmp	.+14     	; 0x8d8 <_ZN15lmx2694_Handler13Write_FCAL_ENEb+0x28>
     8ca:	ee 81       	ldd	r30, Y+6	; 0x06
     8cc:	ff 81       	ldd	r31, Y+7	; 0x07
     8ce:	80 81       	ld	r24, Z
     8d0:	91 81       	ldd	r25, Z+1	; 0x01
     8d2:	87 7f       	andi	r24, 0xF7	; 247
     8d4:	8c 8b       	std	Y+20, r24	; 0x14
     8d6:	9d 8b       	std	Y+21, r25	; 0x15
     8d8:	4c 89       	ldd	r20, Y+20	; 0x14
     8da:	5d 89       	ldd	r21, Y+21	; 0x15
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	ce 01       	movw	r24, r28
     8e0:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     8e4:	8a 8b       	std	Y+18, r24	; 0x12
     8e6:	9b 8b       	std	Y+19, r25	; 0x13
     8e8:	21 e0       	ldi	r18, 0x01	; 1
     8ea:	89 2b       	or	r24, r25
     8ec:	09 f4       	brne	.+2      	; 0x8f0 <_ZN15lmx2694_Handler13Write_FCAL_ENEb+0x40>
     8ee:	20 e0       	ldi	r18, 0x00	; 0
     8f0:	82 2f       	mov	r24, r18
     8f2:	df 91       	pop	r29
     8f4:	cf 91       	pop	r28
     8f6:	08 95       	ret

000008f8 <_ZN15lmx2694_Handler14Toggle_FCAL_ENEv>:
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	ec 01       	movw	r28, r24
     8fe:	60 e0       	ldi	r22, 0x00	; 0
     900:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_ZN15lmx2694_Handler13Write_FCAL_ENEb>
     904:	88 e5       	ldi	r24, 0x58	; 88
     906:	92 e0       	ldi	r25, 0x02	; 2
     908:	01 97       	sbiw	r24, 0x01	; 1
     90a:	f1 f7       	brne	.-4      	; 0x908 <_ZN15lmx2694_Handler14Toggle_FCAL_ENEv+0x10>
     90c:	61 e0       	ldi	r22, 0x01	; 1
     90e:	ce 01       	movw	r24, r28
     910:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_ZN15lmx2694_Handler13Write_FCAL_ENEb>
     914:	88 8b       	std	Y+16, r24	; 0x10
     916:	df 91       	pop	r29
     918:	cf 91       	pop	r28
     91a:	08 95       	ret

0000091c <_ZN15lmx2694_Handler18Initiate_RegistersEv>:
     91c:	ff 92       	push	r15
     91e:	0f 93       	push	r16
     920:	1f 93       	push	r17
     922:	cf 93       	push	r28
     924:	df 93       	push	r29
     926:	8c 01       	movw	r16, r24
     928:	a0 e4       	ldi	r26, 0x40	; 64
     92a:	b1 e4       	ldi	r27, 0x41	; 65
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	3e 91       	ld	r19, -X
     932:	2e 91       	ld	r18, -X
     934:	e8 01       	movw	r28, r16
     936:	ec 81       	ldd	r30, Y+4	; 0x04
     938:	fd 81       	ldd	r31, Y+5	; 0x05
     93a:	e8 0f       	add	r30, r24
     93c:	f9 1f       	adc	r31, r25
     93e:	20 83       	st	Z, r18
     940:	31 83       	std	Z+1, r19	; 0x01
     942:	02 96       	adiw	r24, 0x02	; 2
     944:	86 3e       	cpi	r24, 0xE6	; 230
     946:	91 05       	cpc	r25, r1
     948:	99 f7       	brne	.-26     	; 0x930 <_ZN15lmx2694_Handler18Initiate_RegistersEv+0x14>
     94a:	0f 2e       	mov	r0, r31
     94c:	f2 e7       	ldi	r31, 0x72	; 114
     94e:	ff 2e       	mov	r15, r31
     950:	f0 2d       	mov	r31, r0
     952:	c4 ee       	ldi	r28, 0xE4	; 228
     954:	d0 e0       	ldi	r29, 0x00	; 0
     956:	d8 01       	movw	r26, r16
     958:	14 96       	adiw	r26, 0x04	; 4
     95a:	ed 91       	ld	r30, X+
     95c:	fc 91       	ld	r31, X
     95e:	15 97       	sbiw	r26, 0x05	; 5
     960:	ec 0f       	add	r30, r28
     962:	fd 1f       	adc	r31, r29
     964:	40 81       	ld	r20, Z
     966:	51 81       	ldd	r21, Z+1	; 0x01
     968:	6f 2d       	mov	r22, r15
     96a:	c8 01       	movw	r24, r16
     96c:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     970:	22 97       	sbiw	r28, 0x02	; 2
     972:	fa 94       	dec	r15
     974:	ce 3f       	cpi	r28, 0xFE	; 254
     976:	bf ef       	ldi	r27, 0xFF	; 255
     978:	db 07       	cpc	r29, r27
     97a:	69 f7       	brne	.-38     	; 0x956 <_ZN15lmx2694_Handler18Initiate_RegistersEv+0x3a>
     97c:	df 91       	pop	r29
     97e:	cf 91       	pop	r28
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	ff 90       	pop	r15
     986:	08 95       	ret

00000988 <_ZN15lmx2694_Handler19Set_MUXOUT_READBACKEb>:
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	ec 01       	movw	r28, r24
     98e:	66 23       	and	r22, r22
     990:	41 f0       	breq	.+16     	; 0x9a2 <_ZN15lmx2694_Handler19Set_MUXOUT_READBACKEb+0x1a>
     992:	ec 81       	ldd	r30, Y+4	; 0x04
     994:	fd 81       	ldd	r31, Y+5	; 0x05
     996:	80 81       	ld	r24, Z
     998:	91 81       	ldd	r25, Z+1	; 0x01
     99a:	84 60       	ori	r24, 0x04	; 4
     99c:	8c 8b       	std	Y+20, r24	; 0x14
     99e:	9d 8b       	std	Y+21, r25	; 0x15
     9a0:	07 c0       	rjmp	.+14     	; 0x9b0 <_ZN15lmx2694_Handler19Set_MUXOUT_READBACKEb+0x28>
     9a2:	ec 81       	ldd	r30, Y+4	; 0x04
     9a4:	fd 81       	ldd	r31, Y+5	; 0x05
     9a6:	80 81       	ld	r24, Z
     9a8:	91 81       	ldd	r25, Z+1	; 0x01
     9aa:	8b 7f       	andi	r24, 0xFB	; 251
     9ac:	8c 8b       	std	Y+20, r24	; 0x14
     9ae:	9d 8b       	std	Y+21, r25	; 0x15
     9b0:	4c 89       	ldd	r20, Y+20	; 0x14
     9b2:	5d 89       	ldd	r21, Y+21	; 0x15
     9b4:	60 e0       	ldi	r22, 0x00	; 0
     9b6:	ce 01       	movw	r24, r28
     9b8:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     9bc:	8a 8b       	std	Y+18, r24	; 0x12
     9be:	9b 8b       	std	Y+19, r25	; 0x13
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	08 95       	ret

000009c6 <_ZN15lmx2694_Handler20Read_Single_RegisterEh>:
     9c6:	bf 92       	push	r11
     9c8:	cf 92       	push	r12
     9ca:	df 92       	push	r13
     9cc:	ef 92       	push	r14
     9ce:	ff 92       	push	r15
     9d0:	0f 93       	push	r16
     9d2:	1f 93       	push	r17
     9d4:	cf 93       	push	r28
     9d6:	df 93       	push	r29
     9d8:	ec 01       	movw	r28, r24
     9da:	b6 2e       	mov	r11, r22
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	0e 94 c4 04 	call	0x988	; 0x988 <_ZN15lmx2694_Handler19Set_MUXOUT_READBACKEb>
     9e2:	1c 8a       	std	Y+20, r1	; 0x14
     9e4:	1d 8a       	std	Y+21, r1	; 0x15
     9e6:	4b 2d       	mov	r20, r11
     9e8:	40 68       	ori	r20, 0x80	; 128
     9ea:	c4 2e       	mov	r12, r20
     9ec:	8e 01       	movw	r16, r28
     9ee:	03 5f       	subi	r16, 0xF3	; 243
     9f0:	1f 4f       	sbci	r17, 0xFF	; 255
     9f2:	0f 2e       	mov	r0, r31
     9f4:	f3 e0       	ldi	r31, 0x03	; 3
     9f6:	df 2e       	mov	r13, r31
     9f8:	f0 2d       	mov	r31, r0
     9fa:	7e 01       	movw	r14, r28
     9fc:	86 e1       	ldi	r24, 0x16	; 22
     9fe:	e8 0e       	add	r14, r24
     a00:	f1 1c       	adc	r15, r1
     a02:	60 e0       	ldi	r22, 0x00	; 0
     a04:	88 85       	ldd	r24, Y+8	; 0x08
     a06:	99 85       	ldd	r25, Y+9	; 0x09
     a08:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     a0c:	ce 8a       	std	Y+22, r12	; 0x16
     a0e:	f8 01       	movw	r30, r16
     a10:	4d 2d       	mov	r20, r13
     a12:	11 92       	st	Z+, r1
     a14:	4a 95       	dec	r20
     a16:	e9 f7       	brne	.-6      	; 0xa12 <_ZN15lmx2694_Handler20Read_Single_RegisterEh+0x4c>
     a18:	41 e0       	ldi	r20, 0x01	; 1
     a1a:	b7 01       	movw	r22, r14
     a1c:	88 85       	ldd	r24, Y+8	; 0x08
     a1e:	99 85       	ldd	r25, Y+9	; 0x09
     a20:	0e 94 db 08 	call	0x11b6	; 0x11b6 <_ZN17SPI_Async_Handler5WriteEPKhh>
     a24:	08 2e       	mov	r0, r24
     a26:	00 0c       	add	r0, r0
     a28:	99 0b       	sbc	r25, r25
     a2a:	8a 8b       	std	Y+18, r24	; 0x12
     a2c:	9b 8b       	std	Y+19, r25	; 0x13
     a2e:	42 e0       	ldi	r20, 0x02	; 2
     a30:	b8 01       	movw	r22, r16
     a32:	88 85       	ldd	r24, Y+8	; 0x08
     a34:	99 85       	ldd	r25, Y+9	; 0x09
     a36:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <_ZN17SPI_Async_Handler4ReadEPhh>
     a3a:	08 2e       	mov	r0, r24
     a3c:	00 0c       	add	r0, r0
     a3e:	99 0b       	sbc	r25, r25
     a40:	8a 8b       	std	Y+18, r24	; 0x12
     a42:	9b 8b       	std	Y+19, r25	; 0x13
     a44:	8d 85       	ldd	r24, Y+13	; 0x0d
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	98 2f       	mov	r25, r24
     a4a:	88 27       	eor	r24, r24
     a4c:	2e 85       	ldd	r18, Y+14	; 0x0e
     a4e:	82 0f       	add	r24, r18
     a50:	91 1d       	adc	r25, r1
     a52:	8c 8b       	std	Y+20, r24	; 0x14
     a54:	9d 8b       	std	Y+21, r25	; 0x15
     a56:	61 e0       	ldi	r22, 0x01	; 1
     a58:	88 85       	ldd	r24, Y+8	; 0x08
     a5a:	99 85       	ldd	r25, Y+9	; 0x09
     a5c:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     a60:	8c 89       	ldd	r24, Y+20	; 0x14
     a62:	9d 89       	ldd	r25, Y+21	; 0x15
     a64:	9c 01       	movw	r18, r24
     a66:	21 50       	subi	r18, 0x01	; 1
     a68:	31 09       	sbc	r19, r1
     a6a:	2e 3f       	cpi	r18, 0xFE	; 254
     a6c:	3f 4f       	sbci	r19, 0xFF	; 255
     a6e:	48 f6       	brcc	.-110    	; 0xa02 <_ZN15lmx2694_Handler20Read_Single_RegisterEh+0x3c>
     a70:	eb 2d       	mov	r30, r11
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	ee 0f       	add	r30, r30
     a76:	ff 1f       	adc	r31, r31
     a78:	2c 81       	ldd	r18, Y+4	; 0x04
     a7a:	3d 81       	ldd	r19, Y+5	; 0x05
     a7c:	e2 0f       	add	r30, r18
     a7e:	f3 1f       	adc	r31, r19
     a80:	80 83       	st	Z, r24
     a82:	91 83       	std	Z+1, r25	; 0x01
     a84:	61 e0       	ldi	r22, 0x01	; 1
     a86:	ce 01       	movw	r24, r28
     a88:	0e 94 c4 04 	call	0x988	; 0x988 <_ZN15lmx2694_Handler19Set_MUXOUT_READBACKEb>
     a8c:	8c 89       	ldd	r24, Y+20	; 0x14
     a8e:	9d 89       	ldd	r25, Y+21	; 0x15
     a90:	df 91       	pop	r29
     a92:	cf 91       	pop	r28
     a94:	1f 91       	pop	r17
     a96:	0f 91       	pop	r16
     a98:	ff 90       	pop	r15
     a9a:	ef 90       	pop	r14
     a9c:	df 90       	pop	r13
     a9e:	cf 90       	pop	r12
     aa0:	bf 90       	pop	r11
     aa2:	08 95       	ret

00000aa4 <_ZN15lmx2694_Handler25Get_Channel_Divider_ValueEb>:
     aa4:	cf 93       	push	r28
     aa6:	df 93       	push	r29
     aa8:	ec 01       	movw	r28, r24
     aaa:	66 23       	and	r22, r22
     aac:	79 f0       	breq	.+30     	; 0xacc <_ZN15lmx2694_Handler25Get_Channel_Divider_ValueEb+0x28>
     aae:	6b e4       	ldi	r22, 0x4B	; 75
     ab0:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <_ZN15lmx2694_Handler20Read_Single_RegisterEh>
     ab4:	00 24       	eor	r0, r0
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	00 1c       	adc	r0, r0
     abc:	88 0f       	add	r24, r24
     abe:	99 1f       	adc	r25, r25
     ac0:	00 1c       	adc	r0, r0
     ac2:	89 2f       	mov	r24, r25
     ac4:	90 2d       	mov	r25, r0
     ac6:	8f 71       	andi	r24, 0x1F	; 31
     ac8:	8f 8b       	std	Y+23, r24	; 0x17
     aca:	11 c0       	rjmp	.+34     	; 0xaee <_ZN15lmx2694_Handler25Get_Channel_Divider_ValueEb+0x4a>
     acc:	ee 81       	ldd	r30, Y+6	; 0x06
     ace:	ff 81       	ldd	r31, Y+7	; 0x07
     ad0:	ea 56       	subi	r30, 0x6A	; 106
     ad2:	ff 4f       	sbci	r31, 0xFF	; 255
     ad4:	80 81       	ld	r24, Z
     ad6:	91 81       	ldd	r25, Z+1	; 0x01
     ad8:	00 24       	eor	r0, r0
     ada:	88 0f       	add	r24, r24
     adc:	99 1f       	adc	r25, r25
     ade:	00 1c       	adc	r0, r0
     ae0:	88 0f       	add	r24, r24
     ae2:	99 1f       	adc	r25, r25
     ae4:	00 1c       	adc	r0, r0
     ae6:	89 2f       	mov	r24, r25
     ae8:	90 2d       	mov	r25, r0
     aea:	8f 71       	andi	r24, 0x1F	; 31
     aec:	8f 8b       	std	Y+23, r24	; 0x17
     aee:	ef 89       	ldd	r30, Y+23	; 0x17
     af0:	f0 e0       	ldi	r31, 0x00	; 0
     af2:	ee 0f       	add	r30, r30
     af4:	ff 1f       	adc	r31, r31
     af6:	e2 5c       	subi	r30, 0xC2	; 194
     af8:	ff 4b       	sbci	r31, 0xBF	; 191
     afa:	80 81       	ld	r24, Z
     afc:	91 81       	ldd	r25, Z+1	; 0x01
     afe:	df 91       	pop	r29
     b00:	cf 91       	pop	r28
     b02:	08 95       	ret

00000b04 <_ZN15lmx2694_Handler9Is_LockedEv>:
     b04:	cf 92       	push	r12
     b06:	df 92       	push	r13
     b08:	ef 92       	push	r14
     b0a:	ff 92       	push	r15
     b0c:	cf 93       	push	r28
     b0e:	df 93       	push	r29
     b10:	ec 01       	movw	r28, r24
     b12:	8a b1       	in	r24, 0x0a	; 10
     b14:	91 e0       	ldi	r25, 0x01	; 1
     b16:	81 fb       	bst	r24, 1
     b18:	22 27       	eor	r18, r18
     b1a:	20 f9       	bld	r18, 0
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	81 ff       	sbrs	r24, 1
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	99 8b       	std	Y+17, r25	; 0x11
     b24:	23 2b       	or	r18, r19
     b26:	79 f4       	brne	.+30     	; 0xb46 <_ZN15lmx2694_Handler9Is_LockedEv+0x42>
     b28:	80 e6       	ldi	r24, 0x60	; 96
     b2a:	9a ee       	ldi	r25, 0xEA	; 234
     b2c:	01 97       	sbiw	r24, 0x01	; 1
     b2e:	f1 f7       	brne	.-4      	; 0xb2c <_ZN15lmx2694_Handler9Is_LockedEv+0x28>
     b30:	8a b1       	in	r24, 0x0a	; 10
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	81 fb       	bst	r24, 1
     b36:	44 27       	eor	r20, r20
     b38:	40 f9       	bld	r20, 0
     b3a:	50 e0       	ldi	r21, 0x00	; 0
     b3c:	81 ff       	sbrs	r24, 1
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	99 8b       	std	Y+17, r25	; 0x11
     b42:	45 2b       	or	r20, r21
     b44:	59 f1       	breq	.+86     	; 0xb9c <_ZN15lmx2694_Handler9Is_LockedEv+0x98>
     b46:	ee 81       	ldd	r30, Y+6	; 0x06
     b48:	ff 81       	ldd	r31, Y+7	; 0x07
     b4a:	e4 5a       	subi	r30, 0xA4	; 164
     b4c:	ff 4f       	sbci	r31, 0xFF	; 255
     b4e:	80 81       	ld	r24, Z
     b50:	83 70       	andi	r24, 0x03	; 3
     b52:	49 f0       	breq	.+18     	; 0xb66 <_ZN15lmx2694_Handler9Is_LockedEv+0x62>
     b54:	60 e0       	ldi	r22, 0x00	; 0
     b56:	ce 01       	movw	r24, r28
     b58:	0e 94 b3 01 	call	0x366	; 0x366 <_ZN15lmx2694_Handler27Calculate_Current_FrequencyEb>
     b5c:	68 83       	st	Y, r22
     b5e:	79 83       	std	Y+1, r23	; 0x01
     b60:	8a 83       	std	Y+2, r24	; 0x02
     b62:	9b 83       	std	Y+3, r25	; 0x03
     b64:	1b c0       	rjmp	.+54     	; 0xb9c <_ZN15lmx2694_Handler9Is_LockedEv+0x98>
     b66:	60 e0       	ldi	r22, 0x00	; 0
     b68:	ce 01       	movw	r24, r28
     b6a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <_ZN15lmx2694_Handler25Get_Channel_Divider_ValueEb>
     b6e:	89 8f       	std	Y+25, r24	; 0x19
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	ce 01       	movw	r24, r28
     b74:	0e 94 b3 01 	call	0x366	; 0x366 <_ZN15lmx2694_Handler27Calculate_Current_FrequencyEb>
     b78:	6b 01       	movw	r12, r22
     b7a:	7c 01       	movw	r14, r24
     b7c:	69 8d       	ldd	r22, Y+25	; 0x19
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	0e 94 20 0a 	call	0x1440	; 0x1440 <__floatsisf>
     b88:	9b 01       	movw	r18, r22
     b8a:	ac 01       	movw	r20, r24
     b8c:	c7 01       	movw	r24, r14
     b8e:	b6 01       	movw	r22, r12
     b90:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__divsf3>
     b94:	68 83       	st	Y, r22
     b96:	79 83       	std	Y+1, r23	; 0x01
     b98:	8a 83       	std	Y+2, r24	; 0x02
     b9a:	9b 83       	std	Y+3, r25	; 0x03
     b9c:	89 89       	ldd	r24, Y+17	; 0x11
     b9e:	df 91       	pop	r29
     ba0:	cf 91       	pop	r28
     ba2:	ff 90       	pop	r15
     ba4:	ef 90       	pop	r14
     ba6:	df 90       	pop	r13
     ba8:	cf 90       	pop	r12
     baa:	08 95       	ret

00000bac <_ZN15lmx2694_Handler4InitEv>:
     bac:	cf 93       	push	r28
     bae:	df 93       	push	r29
     bb0:	ec 01       	movw	r28, r24
     bb2:	84 e1       	ldi	r24, 0x14	; 20
     bb4:	93 e4       	ldi	r25, 0x43	; 67
     bb6:	88 87       	std	Y+8, r24	; 0x08
     bb8:	99 87       	std	Y+9, r25	; 0x09
     bba:	0e 94 cd 08 	call	0x119a	; 0x119a <_ZN17SPI_Async_Handler4InitEv>
     bbe:	61 e0       	ldi	r22, 0x01	; 1
     bc0:	88 85       	ldd	r24, Y+8	; 0x08
     bc2:	99 85       	ldd	r25, Y+9	; 0x09
     bc4:	0e 94 05 09 	call	0x120a	; 0x120a <_ZN17SPI_Async_Handler5SetCSEb>
     bc8:	ce 01       	movw	r24, r28
     bca:	0e 94 2c 03 	call	0x658	; 0x658 <_ZN15lmx2694_Handler10Power_DownEv>
     bce:	ce 01       	movw	r24, r28
     bd0:	0e 94 57 03 	call	0x6ae	; 0x6ae <_ZN15lmx2694_Handler13Program_ResetEv>
     bd4:	ce 01       	movw	r24, r28
     bd6:	0e 94 8e 04 	call	0x91c	; 0x91c <_ZN15lmx2694_Handler18Initiate_RegistersEv>
     bda:	80 e6       	ldi	r24, 0x60	; 96
     bdc:	9a ee       	ldi	r25, 0xEA	; 234
     bde:	01 97       	sbiw	r24, 0x01	; 1
     be0:	f1 f7       	brne	.-4      	; 0xbde <_ZN15lmx2694_Handler4InitEv+0x32>
     be2:	ce 01       	movw	r24, r28
     be4:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <_ZN15lmx2694_Handler14Toggle_FCAL_ENEv>
     be8:	88 ee       	ldi	r24, 0xE8	; 232
     bea:	93 e0       	ldi	r25, 0x03	; 3
     bec:	28 e5       	ldi	r18, 0x58	; 88
     bee:	32 e0       	ldi	r19, 0x02	; 2
     bf0:	f9 01       	movw	r30, r18
     bf2:	31 97       	sbiw	r30, 0x01	; 1
     bf4:	f1 f7       	brne	.-4      	; 0xbf2 <_ZN15lmx2694_Handler4InitEv+0x46>
     bf6:	01 97       	sbiw	r24, 0x01	; 1
     bf8:	d9 f7       	brne	.-10     	; 0xbf0 <_ZN15lmx2694_Handler4InitEv+0x44>
     bfa:	ce 01       	movw	r24, r28
     bfc:	0e 94 82 05 	call	0xb04	; 0xb04 <_ZN15lmx2694_Handler9Is_LockedEv>
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	08 95       	ret

00000c06 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEv>:
     c06:	cf 92       	push	r12
     c08:	df 92       	push	r13
     c0a:	ef 92       	push	r14
     c0c:	ff 92       	push	r15
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	ec 01       	movw	r28, r24
     c14:	ca a4       	ldd	r12, Y+42	; 0x2a
     c16:	db a4       	ldd	r13, Y+43	; 0x2b
     c18:	ec a4       	ldd	r14, Y+44	; 0x2c
     c1a:	fd a4       	ldd	r15, Y+45	; 0x2d
     c1c:	20 e0       	ldi	r18, 0x00	; 0
     c1e:	30 ef       	ldi	r19, 0xF0	; 240
     c20:	4b ee       	ldi	r20, 0xEB	; 235
     c22:	55 e4       	ldi	r21, 0x45	; 69
     c24:	c7 01       	movw	r24, r14
     c26:	b6 01       	movw	r22, r12
     c28:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     c2c:	18 16       	cp	r1, r24
     c2e:	2c f4       	brge	.+10     	; 0xc3a <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEv+0x34>
     c30:	ce a6       	std	Y+46, r12	; 0x2e
     c32:	df a6       	std	Y+47, r13	; 0x2f
     c34:	e8 aa       	std	Y+48, r14	; 0x30
     c36:	f9 aa       	std	Y+49, r15	; 0x31
     c38:	12 c0       	rjmp	.+36     	; 0xc5e <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEv+0x58>
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	ce 01       	movw	r24, r28
     c3e:	0e 94 52 05 	call	0xaa4	; 0xaa4 <_ZN15lmx2694_Handler25Get_Channel_Divider_ValueEb>
     c42:	bc 01       	movw	r22, r24
     c44:	99 0f       	add	r25, r25
     c46:	88 0b       	sbc	r24, r24
     c48:	99 0b       	sbc	r25, r25
     c4a:	0e 94 20 0a 	call	0x1440	; 0x1440 <__floatsisf>
     c4e:	a7 01       	movw	r20, r14
     c50:	96 01       	movw	r18, r12
     c52:	0e 94 2d 0b 	call	0x165a	; 0x165a <__mulsf3>
     c56:	6e a7       	std	Y+46, r22	; 0x2e
     c58:	7f a7       	std	Y+47, r23	; 0x2f
     c5a:	88 ab       	std	Y+48, r24	; 0x30
     c5c:	99 ab       	std	Y+49, r25	; 0x31
     c5e:	4e a5       	ldd	r20, Y+46	; 0x2e
     c60:	5f a5       	ldd	r21, Y+47	; 0x2f
     c62:	68 a9       	ldd	r22, Y+48	; 0x30
     c64:	79 a9       	ldd	r23, Y+49	; 0x31
     c66:	ce 01       	movw	r24, r28
     c68:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEf>
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	ff 90       	pop	r15
     c72:	ef 90       	pop	r14
     c74:	df 90       	pop	r13
     c76:	cf 90       	pop	r12
     c78:	08 95       	ret

00000c7a <_ZN15lmx2694_Handler24Write_Division_RegistersEv>:
     c7a:	cf 93       	push	r28
     c7c:	df 93       	push	r29
     c7e:	ec 01       	movw	r28, r24
     c80:	4e 8d       	ldd	r20, Y+30	; 0x1e
     c82:	5f 8d       	ldd	r21, Y+31	; 0x1f
     c84:	6b e2       	ldi	r22, 0x2B	; 43
     c86:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     c8a:	4e 8d       	ldd	r20, Y+30	; 0x1e
     c8c:	5f 8d       	ldd	r21, Y+31	; 0x1f
     c8e:	68 a1       	ldd	r22, Y+32	; 0x20
     c90:	79 a1       	ldd	r23, Y+33	; 0x21
     c92:	ab 01       	movw	r20, r22
     c94:	66 27       	eor	r22, r22
     c96:	77 27       	eor	r23, r23
     c98:	6a e2       	ldi	r22, 0x2A	; 42
     c9a:	ce 01       	movw	r24, r28
     c9c:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     ca0:	4a a1       	ldd	r20, Y+34	; 0x22
     ca2:	5b a1       	ldd	r21, Y+35	; 0x23
     ca4:	67 e2       	ldi	r22, 0x27	; 39
     ca6:	ce 01       	movw	r24, r28
     ca8:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     cac:	4a a1       	ldd	r20, Y+34	; 0x22
     cae:	5b a1       	ldd	r21, Y+35	; 0x23
     cb0:	6c a1       	ldd	r22, Y+36	; 0x24
     cb2:	7d a1       	ldd	r23, Y+37	; 0x25
     cb4:	ab 01       	movw	r20, r22
     cb6:	66 27       	eor	r22, r22
     cb8:	77 27       	eor	r23, r23
     cba:	66 e2       	ldi	r22, 0x26	; 38
     cbc:	ce 01       	movw	r24, r28
     cbe:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     cc2:	ce 01       	movw	r24, r28
     cc4:	0e 94 03 06 	call	0xc06	; 0xc06 <_ZN15lmx2694_Handler19Program_PFD_DLY_SELEv>
     cc8:	4a 8d       	ldd	r20, Y+26	; 0x1a
     cca:	5b 8d       	ldd	r21, Y+27	; 0x1b
     ccc:	64 e2       	ldi	r22, 0x24	; 36
     cce:	ce 01       	movw	r24, r28
     cd0:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     cd4:	4a 8d       	ldd	r20, Y+26	; 0x1a
     cd6:	5b 8d       	ldd	r21, Y+27	; 0x1b
     cd8:	6c 8d       	ldd	r22, Y+28	; 0x1c
     cda:	7d 8d       	ldd	r23, Y+29	; 0x1d
     cdc:	ab 01       	movw	r20, r22
     cde:	66 27       	eor	r22, r22
     ce0:	77 27       	eor	r23, r23
     ce2:	62 e2       	ldi	r22, 0x22	; 34
     ce4:	ce 01       	movw	r24, r28
     ce6:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     cea:	df 91       	pop	r29
     cec:	cf 91       	pop	r28
     cee:	08 95       	ret

00000cf0 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf>:
     cf0:	cf 92       	push	r12
     cf2:	df 92       	push	r13
     cf4:	ef 92       	push	r14
     cf6:	ff 92       	push	r15
     cf8:	0f 93       	push	r16
     cfa:	1f 93       	push	r17
     cfc:	cf 93       	push	r28
     cfe:	df 93       	push	r29
     d00:	ec 01       	movw	r28, r24
     d02:	6a 01       	movw	r12, r20
     d04:	7b 01       	movw	r14, r22
     d06:	20 e0       	ldi	r18, 0x00	; 0
     d08:	30 ef       	ldi	r19, 0xF0	; 240
     d0a:	4b e6       	ldi	r20, 0x6B	; 107
     d0c:	56 e4       	ldi	r21, 0x46	; 70
     d0e:	c7 01       	movw	r24, r14
     d10:	b6 01       	movw	r22, r12
     d12:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     d16:	18 16       	cp	r1, r24
     d18:	4c f4       	brge	.+18     	; 0xd2c <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x3c>
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	90 ef       	ldi	r25, 0xF0	; 240
     d1e:	ab e6       	ldi	r26, 0x6B	; 107
     d20:	b6 e4       	ldi	r27, 0x46	; 70
     d22:	8a a7       	std	Y+42, r24	; 0x2a
     d24:	9b a7       	std	Y+43, r25	; 0x2b
     d26:	ac a7       	std	Y+44, r26	; 0x2c
     d28:	bd a7       	std	Y+45, r27	; 0x2d
     d2a:	a7 c0       	rjmp	.+334    	; 0xe7a <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x18a>
     d2c:	20 e0       	ldi	r18, 0x00	; 0
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	48 ec       	ldi	r20, 0xC8	; 200
     d32:	53 e4       	ldi	r21, 0x43	; 67
     d34:	c7 01       	movw	r24, r14
     d36:	b6 01       	movw	r22, r12
     d38:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     d3c:	18 16       	cp	r1, r24
     d3e:	0c f0       	brlt	.+2      	; 0xd42 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x52>
     d40:	9c c0       	rjmp	.+312    	; 0xe7a <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x18a>
     d42:	ca a6       	std	Y+42, r12	; 0x2a
     d44:	db a6       	std	Y+43, r13	; 0x2b
     d46:	ec a6       	std	Y+44, r14	; 0x2c
     d48:	fd a6       	std	Y+45, r15	; 0x2d
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	30 ef       	ldi	r19, 0xF0	; 240
     d4e:	4b ee       	ldi	r20, 0xEB	; 235
     d50:	55 e4       	ldi	r21, 0x45	; 69
     d52:	c7 01       	movw	r24, r14
     d54:	b6 01       	movw	r22, r12
     d56:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     d5a:	18 16       	cp	r1, r24
     d5c:	d4 f4       	brge	.+52     	; 0xd92 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0xa2>
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	30 ef       	ldi	r19, 0xF0	; 240
     d62:	4b ee       	ldi	r20, 0xEB	; 235
     d64:	55 e4       	ldi	r21, 0x45	; 69
     d66:	68 81       	ld	r22, Y
     d68:	79 81       	ldd	r23, Y+1	; 0x01
     d6a:	8a 81       	ldd	r24, Y+2	; 0x02
     d6c:	9b 81       	ldd	r25, Y+3	; 0x03
     d6e:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     d72:	18 16       	cp	r1, r24
     d74:	5c f0       	brlt	.+22     	; 0xd8c <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x9c>
     d76:	ee 81       	ldd	r30, Y+6	; 0x06
     d78:	ff 81       	ldd	r31, Y+7	; 0x07
     d7a:	e4 5a       	subi	r30, 0xA4	; 164
     d7c:	ff 4f       	sbci	r31, 0xFF	; 255
     d7e:	40 81       	ld	r20, Z
     d80:	51 81       	ldd	r21, Z+1	; 0x01
     d82:	41 60       	ori	r20, 0x01	; 1
     d84:	6e e2       	ldi	r22, 0x2E	; 46
     d86:	ce 01       	movw	r24, r28
     d88:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	89 8f       	std	Y+25, r24	; 0x19
     d90:	3f c0       	rjmp	.+126    	; 0xe10 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x120>
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	30 ef       	ldi	r19, 0xF0	; 240
     d96:	4b ee       	ldi	r20, 0xEB	; 235
     d98:	55 e4       	ldi	r21, 0x45	; 69
     d9a:	68 81       	ld	r22, Y
     d9c:	79 81       	ldd	r23, Y+1	; 0x01
     d9e:	8a 81       	ldd	r24, Y+2	; 0x02
     da0:	9b 81       	ldd	r25, Y+3	; 0x03
     da2:	0e 94 78 09 	call	0x12f0	; 0x12f0 <__cmpsf2>
     da6:	88 23       	and	r24, r24
     da8:	5c f0       	brlt	.+22     	; 0xdc0 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0xd0>
     daa:	ee 81       	ldd	r30, Y+6	; 0x06
     dac:	ff 81       	ldd	r31, Y+7	; 0x07
     dae:	e4 5a       	subi	r30, 0xA4	; 164
     db0:	ff 4f       	sbci	r31, 0xFF	; 255
     db2:	40 81       	ld	r20, Z
     db4:	51 81       	ldd	r21, Z+1	; 0x01
     db6:	4c 7f       	andi	r20, 0xFC	; 252
     db8:	6e e2       	ldi	r22, 0x2E	; 46
     dba:	ce 01       	movw	r24, r28
     dbc:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     dc0:	ee 81       	ldd	r30, Y+6	; 0x06
     dc2:	ff 81       	ldd	r31, Y+7	; 0x07
     dc4:	ea 56       	subi	r30, 0x6A	; 106
     dc6:	ff 4f       	sbci	r31, 0xFF	; 255
     dc8:	00 81       	ld	r16, Z
     dca:	11 81       	ldd	r17, Z+1	; 0x01
     dcc:	0f 73       	andi	r16, 0x3F	; 63
     dce:	18 7f       	andi	r17, 0xF8	; 248
     dd0:	0c 8b       	std	Y+20, r16	; 0x14
     dd2:	1d 8b       	std	Y+21, r17	; 0x15
     dd4:	ce 01       	movw	r24, r28
     dd6:	0e 94 65 02 	call	0x4ca	; 0x4ca <_ZN15lmx2694_Handler28Choose_Channel_Divider_IndexEv>
     dda:	20 e4       	ldi	r18, 0x40	; 64
     ddc:	82 9f       	mul	r24, r18
     dde:	c0 01       	movw	r24, r0
     de0:	11 24       	eor	r1, r1
     de2:	ac 01       	movw	r20, r24
     de4:	40 2b       	or	r20, r16
     de6:	51 2b       	or	r21, r17
     de8:	6b e4       	ldi	r22, 0x4B	; 75
     dea:	ce 01       	movw	r24, r28
     dec:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     df0:	89 8d       	ldd	r24, Y+25	; 0x19
     df2:	83 30       	cpi	r24, 0x03	; 3
     df4:	38 f0       	brcs	.+14     	; 0xe04 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x114>
     df6:	4c ee       	ldi	r20, 0xEC	; 236
     df8:	53 e4       	ldi	r21, 0x43	; 67
     dfa:	6f e1       	ldi	r22, 0x1F	; 31
     dfc:	ce 01       	movw	r24, r28
     dfe:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     e02:	06 c0       	rjmp	.+12     	; 0xe10 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf+0x120>
     e04:	4c ee       	ldi	r20, 0xEC	; 236
     e06:	53 e0       	ldi	r21, 0x03	; 3
     e08:	6f e1       	ldi	r22, 0x1F	; 31
     e0a:	ce 01       	movw	r24, r28
     e0c:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN15lmx2694_Handler21Write_Single_RegisterEhj>
     e10:	69 8d       	ldd	r22, Y+25	; 0x19
     e12:	70 e0       	ldi	r23, 0x00	; 0
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	0e 94 20 0a 	call	0x1440	; 0x1440 <__floatsisf>
     e1c:	a7 01       	movw	r20, r14
     e1e:	96 01       	movw	r18, r12
     e20:	0e 94 2d 0b 	call	0x165a	; 0x165a <__mulsf3>
     e24:	20 e0       	ldi	r18, 0x00	; 0
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	48 e4       	ldi	r20, 0x48	; 72
     e2a:	53 e4       	ldi	r21, 0x43	; 67
     e2c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__divsf3>
     e30:	6b 01       	movw	r12, r22
     e32:	7c 01       	movw	r14, r24
     e34:	6a ab       	std	Y+50, r22	; 0x32
     e36:	7b ab       	std	Y+51, r23	; 0x33
     e38:	8c ab       	std	Y+52, r24	; 0x34
     e3a:	9d ab       	std	Y+53, r25	; 0x35
     e3c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <floor>
     e40:	0e 94 ef 09 	call	0x13de	; 0x13de <__fixunssfsi>
     e44:	6a 8f       	std	Y+26, r22	; 0x1a
     e46:	7b 8f       	std	Y+27, r23	; 0x1b
     e48:	8c 8f       	std	Y+28, r24	; 0x1c
     e4a:	9d 8f       	std	Y+29, r25	; 0x1d
     e4c:	0e 94 1e 0a 	call	0x143c	; 0x143c <__floatunsisf>
     e50:	9b 01       	movw	r18, r22
     e52:	ac 01       	movw	r20, r24
     e54:	c7 01       	movw	r24, r14
     e56:	b6 01       	movw	r22, r12
     e58:	0e 94 0b 09 	call	0x1216	; 0x1216 <__subsf3>
     e5c:	ab 01       	movw	r20, r22
     e5e:	bc 01       	movw	r22, r24
     e60:	4e ab       	std	Y+54, r20	; 0x36
     e62:	5f ab       	std	Y+55, r21	; 0x37
     e64:	68 af       	std	Y+56, r22	; 0x38
     e66:	79 af       	std	Y+57, r23	; 0x39
     e68:	ce 01       	movw	r24, r28
     e6a:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN15lmx2694_Handler18Calculate_FractionEf>
     e6e:	ce 01       	movw	r24, r28
     e70:	0e 94 3d 06 	call	0xc7a	; 0xc7a <_ZN15lmx2694_Handler24Write_Division_RegistersEv>
     e74:	ce 01       	movw	r24, r28
     e76:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <_ZN15lmx2694_Handler14Toggle_FCAL_ENEv>
     e7a:	6e a9       	ldd	r22, Y+54	; 0x36
     e7c:	7f a9       	ldd	r23, Y+55	; 0x37
     e7e:	88 ad       	ldd	r24, Y+56	; 0x38
     e80:	99 ad       	ldd	r25, Y+57	; 0x39
     e82:	df 91       	pop	r29
     e84:	cf 91       	pop	r28
     e86:	1f 91       	pop	r17
     e88:	0f 91       	pop	r16
     e8a:	ff 90       	pop	r15
     e8c:	ef 90       	pop	r14
     e8e:	df 90       	pop	r13
     e90:	cf 90       	pop	r12
     e92:	08 95       	ret

00000e94 <_ZN15lmx2694_Handler9Self_TestEv>:
     e94:	3f 92       	push	r3
     e96:	4f 92       	push	r4
     e98:	5f 92       	push	r5
     e9a:	6f 92       	push	r6
     e9c:	7f 92       	push	r7
     e9e:	8f 92       	push	r8
     ea0:	9f 92       	push	r9
     ea2:	af 92       	push	r10
     ea4:	bf 92       	push	r11
     ea6:	cf 92       	push	r12
     ea8:	df 92       	push	r13
     eaa:	ef 92       	push	r14
     eac:	ff 92       	push	r15
     eae:	0f 93       	push	r16
     eb0:	1f 93       	push	r17
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
     eb6:	8c 01       	movw	r16, r24
     eb8:	fc 01       	movw	r30, r24
     eba:	16 ae       	std	Z+62, r1	; 0x3e
     ebc:	0f 2e       	mov	r0, r31
     ebe:	fe e0       	ldi	r31, 0x0E	; 14
     ec0:	af 2e       	mov	r10, r31
     ec2:	f0 e4       	ldi	r31, 0x40	; 64
     ec4:	bf 2e       	mov	r11, r31
     ec6:	f0 2d       	mov	r31, r0
     ec8:	0f 2e       	mov	r0, r31
     eca:	f0 e6       	ldi	r31, 0x60	; 96
     ecc:	8f 2e       	mov	r8, r31
     ece:	fa ee       	ldi	r31, 0xEA	; 234
     ed0:	9f 2e       	mov	r9, r31
     ed2:	f0 2d       	mov	r31, r0
     ed4:	33 24       	eor	r3, r3
     ed6:	33 94       	inc	r3
     ed8:	c8 e5       	ldi	r28, 0x58	; 88
     eda:	d2 e0       	ldi	r29, 0x02	; 2
     edc:	05 c0       	rjmp	.+10     	; 0xee8 <_ZN15lmx2694_Handler9Self_TestEv+0x54>
     ede:	f8 01       	movw	r30, r16
     ee0:	86 ad       	ldd	r24, Z+62	; 0x3e
     ee2:	8f 3f       	cpi	r24, 0xFF	; 255
     ee4:	09 f4       	brne	.+2      	; 0xee8 <_ZN15lmx2694_Handler9Self_TestEv+0x54>
     ee6:	da c0       	rjmp	.+436    	; 0x109c <_ZN15lmx2694_Handler9Self_TestEv+0x208>
     ee8:	c8 01       	movw	r24, r16
     eea:	0e 94 82 05 	call	0xb04	; 0xb04 <_ZN15lmx2694_Handler9Is_LockedEv>
     eee:	88 23       	and	r24, r24
     ef0:	09 f4       	brne	.+2      	; 0xef4 <_ZN15lmx2694_Handler9Self_TestEv+0x60>
     ef2:	56 c0       	rjmp	.+172    	; 0xfa0 <_ZN15lmx2694_Handler9Self_TestEv+0x10c>
     ef4:	f8 01       	movw	r30, r16
     ef6:	87 ad       	ldd	r24, Z+63	; 0x3f
     ef8:	88 23       	and	r24, r24
     efa:	b1 f0       	breq	.+44     	; 0xf28 <_ZN15lmx2694_Handler9Self_TestEv+0x94>
     efc:	22 ad       	ldd	r18, Z+58	; 0x3a
     efe:	33 ad       	ldd	r19, Z+59	; 0x3b
     f00:	44 ad       	ldd	r20, Z+60	; 0x3c
     f02:	55 ad       	ldd	r21, Z+61	; 0x3d
     f04:	60 81       	ld	r22, Z
     f06:	71 81       	ldd	r23, Z+1	; 0x01
     f08:	82 81       	ldd	r24, Z+2	; 0x02
     f0a:	93 81       	ldd	r25, Z+3	; 0x03
     f0c:	0e 94 0c 09 	call	0x1218	; 0x1218 <__addsf3>
     f10:	20 e0       	ldi	r18, 0x00	; 0
     f12:	30 e8       	ldi	r19, 0x80	; 128
     f14:	49 e8       	ldi	r20, 0x89	; 137
     f16:	55 e4       	ldi	r21, 0x45	; 69
     f18:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
     f1c:	18 16       	cp	r1, r24
     f1e:	0c f0       	brlt	.+2      	; 0xf22 <_ZN15lmx2694_Handler9Self_TestEv+0x8e>
     f20:	a1 c0       	rjmp	.+322    	; 0x1064 <_ZN15lmx2694_Handler9Self_TestEv+0x1d0>
     f22:	f8 01       	movw	r30, r16
     f24:	17 ae       	std	Z+63, r1	; 0x3f
     f26:	ac c0       	rjmp	.+344    	; 0x1080 <_ZN15lmx2694_Handler9Self_TestEv+0x1ec>
     f28:	f8 01       	movw	r30, r16
     f2a:	22 ad       	ldd	r18, Z+58	; 0x3a
     f2c:	33 ad       	ldd	r19, Z+59	; 0x3b
     f2e:	44 ad       	ldd	r20, Z+60	; 0x3c
     f30:	55 ad       	ldd	r21, Z+61	; 0x3d
     f32:	60 81       	ld	r22, Z
     f34:	71 81       	ldd	r23, Z+1	; 0x01
     f36:	82 81       	ldd	r24, Z+2	; 0x02
     f38:	93 81       	ldd	r25, Z+3	; 0x03
     f3a:	0e 94 0b 09 	call	0x1216	; 0x1216 <__subsf3>
     f3e:	20 e0       	ldi	r18, 0x00	; 0
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	41 e6       	ldi	r20, 0x61	; 97
     f44:	55 e4       	ldi	r21, 0x45	; 69
     f46:	0e 94 78 09 	call	0x12f0	; 0x12f0 <__cmpsf2>
     f4a:	88 23       	and	r24, r24
     f4c:	0c f0       	brlt	.+2      	; 0xf50 <_ZN15lmx2694_Handler9Self_TestEv+0xbc>
     f4e:	98 c0       	rjmp	.+304    	; 0x1080 <_ZN15lmx2694_Handler9Self_TestEv+0x1ec>
     f50:	f8 01       	movw	r30, r16
     f52:	37 ae       	std	Z+63, r3	; 0x3f
     f54:	87 c0       	rjmp	.+270    	; 0x1064 <_ZN15lmx2694_Handler9Self_TestEv+0x1d0>
     f56:	43 2f       	mov	r20, r19
     f58:	52 2f       	mov	r21, r18
     f5a:	68 2f       	mov	r22, r24
     f5c:	79 2f       	mov	r23, r25
     f5e:	f8 01       	movw	r30, r16
     f60:	42 a7       	std	Z+42, r20	; 0x2a
     f62:	53 a7       	std	Z+43, r21	; 0x2b
     f64:	64 a7       	std	Z+44, r22	; 0x2c
     f66:	75 a7       	std	Z+45, r23	; 0x2d
     f68:	9f 93       	push	r25
     f6a:	8f 93       	push	r24
     f6c:	2f 93       	push	r18
     f6e:	3f 93       	push	r19
     f70:	bf 92       	push	r11
     f72:	af 92       	push	r10
     f74:	0e 94 29 13 	call	0x2652	; 0x2652 <printf>
     f78:	f8 01       	movw	r30, r16
     f7a:	42 a5       	ldd	r20, Z+42	; 0x2a
     f7c:	53 a5       	ldd	r21, Z+43	; 0x2b
     f7e:	64 a5       	ldd	r22, Z+44	; 0x2c
     f80:	75 a5       	ldd	r23, Z+45	; 0x2d
     f82:	c8 01       	movw	r24, r16
     f84:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf>
     f88:	f8 01       	movw	r30, r16
     f8a:	16 ae       	std	Z+62, r1	; 0x3e
     f8c:	c4 01       	movw	r24, r8
     f8e:	01 97       	sbiw	r24, 0x01	; 1
     f90:	f1 f7       	brne	.-4      	; 0xf8e <_ZN15lmx2694_Handler9Self_TestEv+0xfa>
     f92:	0f 90       	pop	r0
     f94:	0f 90       	pop	r0
     f96:	0f 90       	pop	r0
     f98:	0f 90       	pop	r0
     f9a:	0f 90       	pop	r0
     f9c:	0f 90       	pop	r0
     f9e:	a4 cf       	rjmp	.-184    	; 0xee8 <_ZN15lmx2694_Handler9Self_TestEv+0x54>
     fa0:	f8 01       	movw	r30, r16
     fa2:	86 ad       	ldd	r24, Z+62	; 0x3e
     fa4:	8f 5f       	subi	r24, 0xFF	; 255
     fa6:	86 af       	std	Z+62, r24	; 0x3e
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	bc 01       	movw	r22, r24
     fac:	66 0f       	add	r22, r22
     fae:	77 1f       	adc	r23, r23
     fb0:	88 0f       	add	r24, r24
     fb2:	99 1f       	adc	r25, r25
     fb4:	88 0f       	add	r24, r24
     fb6:	99 1f       	adc	r25, r25
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	68 0f       	add	r22, r24
     fbe:	79 1f       	adc	r23, r25
     fc0:	6c 59       	subi	r22, 0x9C	; 156
     fc2:	7f 4f       	sbci	r23, 0xFF	; 255
     fc4:	07 2e       	mov	r0, r23
     fc6:	00 0c       	add	r0, r0
     fc8:	88 0b       	sbc	r24, r24
     fca:	99 0b       	sbc	r25, r25
     fcc:	0e 94 20 0a 	call	0x1440	; 0x1440 <__floatsisf>
     fd0:	2b 01       	movw	r4, r22
     fd2:	3c 01       	movw	r6, r24
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e8       	ldi	r19, 0x80	; 128
     fd8:	4b eb       	ldi	r20, 0xBB	; 187
     fda:	55 e4       	ldi	r21, 0x45	; 69
     fdc:	0e 94 2d 0b 	call	0x165a	; 0x165a <__mulsf3>
     fe0:	6b 01       	movw	r12, r22
     fe2:	7c 01       	movw	r14, r24
     fe4:	20 e0       	ldi	r18, 0x00	; 0
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	40 e8       	ldi	r20, 0x80	; 128
     fea:	5f e3       	ldi	r21, 0x3F	; 63
     fec:	0e 94 78 09 	call	0x12f0	; 0x12f0 <__cmpsf2>
     ff0:	88 23       	and	r24, r24
     ff2:	1c f1       	brlt	.+70     	; 0x103a <_ZN15lmx2694_Handler9Self_TestEv+0x1a6>
     ff4:	20 e0       	ldi	r18, 0x00	; 0
     ff6:	3f ef       	ldi	r19, 0xFF	; 255
     ff8:	4f e7       	ldi	r20, 0x7F	; 127
     ffa:	57 e4       	ldi	r21, 0x47	; 71
     ffc:	c7 01       	movw	r24, r14
     ffe:	b6 01       	movw	r22, r12
    1000:	0e 94 28 0b 	call	0x1650	; 0x1650 <__gesf2>
    1004:	18 16       	cp	r1, r24
    1006:	a4 f4       	brge	.+40     	; 0x1030 <_ZN15lmx2694_Handler9Self_TestEv+0x19c>
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	40 e2       	ldi	r20, 0x20	; 32
    100e:	51 e4       	ldi	r21, 0x41	; 65
    1010:	c3 01       	movw	r24, r6
    1012:	b2 01       	movw	r22, r4
    1014:	0e 94 2d 0b 	call	0x165a	; 0x165a <__mulsf3>
    1018:	0e 94 ef 09 	call	0x13de	; 0x13de <__fixunssfsi>
    101c:	61 15       	cp	r22, r1
    101e:	71 05       	cpc	r23, r1
    1020:	89 f0       	breq	.+34     	; 0x1044 <_ZN15lmx2694_Handler9Self_TestEv+0x1b0>
    1022:	ce 01       	movw	r24, r28
    1024:	01 97       	sbiw	r24, 0x01	; 1
    1026:	f1 f7       	brne	.-4      	; 0x1024 <_ZN15lmx2694_Handler9Self_TestEv+0x190>
    1028:	61 50       	subi	r22, 0x01	; 1
    102a:	71 09       	sbc	r23, r1
    102c:	d1 f7       	brne	.-12     	; 0x1022 <_ZN15lmx2694_Handler9Self_TestEv+0x18e>
    102e:	0a c0       	rjmp	.+20     	; 0x1044 <_ZN15lmx2694_Handler9Self_TestEv+0x1b0>
    1030:	c7 01       	movw	r24, r14
    1032:	b6 01       	movw	r22, r12
    1034:	0e 94 ef 09 	call	0x13de	; 0x13de <__fixunssfsi>
    1038:	02 c0       	rjmp	.+4      	; 0x103e <_ZN15lmx2694_Handler9Self_TestEv+0x1aa>
    103a:	61 e0       	ldi	r22, 0x01	; 1
    103c:	70 e0       	ldi	r23, 0x00	; 0
    103e:	cb 01       	movw	r24, r22
    1040:	01 97       	sbiw	r24, 0x01	; 1
    1042:	f1 f7       	brne	.-4      	; 0x1040 <_ZN15lmx2694_Handler9Self_TestEv+0x1ac>
    1044:	f8 01       	movw	r30, r16
    1046:	40 81       	ld	r20, Z
    1048:	51 81       	ldd	r21, Z+1	; 0x01
    104a:	62 81       	ldd	r22, Z+2	; 0x02
    104c:	73 81       	ldd	r23, Z+3	; 0x03
    104e:	c8 01       	movw	r24, r16
    1050:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_ZN15lmx2694_Handler20Set_Target_FrequencyEf>
    1054:	88 ee       	ldi	r24, 0xE8	; 232
    1056:	93 e0       	ldi	r25, 0x03	; 3
    1058:	fe 01       	movw	r30, r28
    105a:	31 97       	sbiw	r30, 0x01	; 1
    105c:	f1 f7       	brne	.-4      	; 0x105a <_ZN15lmx2694_Handler9Self_TestEv+0x1c6>
    105e:	01 97       	sbiw	r24, 0x01	; 1
    1060:	d9 f7       	brne	.-10     	; 0x1058 <_ZN15lmx2694_Handler9Self_TestEv+0x1c4>
    1062:	3d cf       	rjmp	.-390    	; 0xede <_ZN15lmx2694_Handler9Self_TestEv+0x4a>
    1064:	f8 01       	movw	r30, r16
    1066:	22 ad       	ldd	r18, Z+58	; 0x3a
    1068:	33 ad       	ldd	r19, Z+59	; 0x3b
    106a:	44 ad       	ldd	r20, Z+60	; 0x3c
    106c:	55 ad       	ldd	r21, Z+61	; 0x3d
    106e:	60 81       	ld	r22, Z
    1070:	71 81       	ldd	r23, Z+1	; 0x01
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	0e 94 0c 09 	call	0x1218	; 0x1218 <__addsf3>
    107a:	36 2f       	mov	r19, r22
    107c:	27 2f       	mov	r18, r23
    107e:	6b cf       	rjmp	.-298    	; 0xf56 <_ZN15lmx2694_Handler9Self_TestEv+0xc2>
    1080:	f8 01       	movw	r30, r16
    1082:	22 ad       	ldd	r18, Z+58	; 0x3a
    1084:	33 ad       	ldd	r19, Z+59	; 0x3b
    1086:	44 ad       	ldd	r20, Z+60	; 0x3c
    1088:	55 ad       	ldd	r21, Z+61	; 0x3d
    108a:	60 81       	ld	r22, Z
    108c:	71 81       	ldd	r23, Z+1	; 0x01
    108e:	82 81       	ldd	r24, Z+2	; 0x02
    1090:	93 81       	ldd	r25, Z+3	; 0x03
    1092:	0e 94 0b 09 	call	0x1216	; 0x1216 <__subsf3>
    1096:	36 2f       	mov	r19, r22
    1098:	27 2f       	mov	r18, r23
    109a:	5d cf       	rjmp	.-326    	; 0xf56 <_ZN15lmx2694_Handler9Self_TestEv+0xc2>
    109c:	80 e0       	ldi	r24, 0x00	; 0
    109e:	df 91       	pop	r29
    10a0:	cf 91       	pop	r28
    10a2:	1f 91       	pop	r17
    10a4:	0f 91       	pop	r16
    10a6:	ff 90       	pop	r15
    10a8:	ef 90       	pop	r14
    10aa:	df 90       	pop	r13
    10ac:	cf 90       	pop	r12
    10ae:	bf 90       	pop	r11
    10b0:	af 90       	pop	r10
    10b2:	9f 90       	pop	r9
    10b4:	8f 90       	pop	r8
    10b6:	7f 90       	pop	r7
    10b8:	6f 90       	pop	r6
    10ba:	5f 90       	pop	r5
    10bc:	4f 90       	pop	r4
    10be:	3f 90       	pop	r3
    10c0:	08 95       	ret

000010c2 <_GLOBAL__sub_I__ZN15lmx2694_HandlerC2Ev>:


#include "string.h"
//#include "SPI_Async_Handler.h"

static SPI_Async_Handler staticSPI;
    10c2:	84 e1       	ldi	r24, 0x14	; 20
    10c4:	93 e4       	ldi	r25, 0x43	; 67
    10c6:	0e 94 c5 08 	call	0x118a	; 0x118a <_ZN17SPI_Async_HandlerC1Ev>
    10ca:	08 95       	ret

000010cc <_GLOBAL__sub_D__ZN15lmx2694_HandlerC2Ev>:
    10cc:	84 e1       	ldi	r24, 0x14	; 20
    10ce:	93 e4       	ldi	r25, 0x43	; 67
    10d0:	0e 94 cc 08 	call	0x1198	; 0x1198 <_ZN17SPI_Async_HandlerD1Ev>
    10d4:	08 95       	ret

000010d6 <_Z10RTC_enablev>:
 static lmx2694_Handler lmx;

void RTC_enable(void)
{
	// Wait for RTC CTRLA to be unsynchronized
	while (RTC.STATUS & RTC_CTRLABUSY_bm) {
    10d6:	e0 e4       	ldi	r30, 0x40	; 64
    10d8:	f1 e0       	ldi	r31, 0x01	; 1
    10da:	81 81       	ldd	r24, Z+1	; 0x01
    10dc:	80 fd       	sbrc	r24, 0
    10de:	fd cf       	rjmp	.-6      	; 0x10da <_Z10RTC_enablev+0x4>
	}

	// Enable RTC
	RTC.CTRLA |= RTC_RTCEN_bm;
    10e0:	e0 e4       	ldi	r30, 0x40	; 64
    10e2:	f1 e0       	ldi	r31, 0x01	; 1
    10e4:	80 81       	ld	r24, Z
    10e6:	81 60       	ori	r24, 0x01	; 1
    10e8:	80 83       	st	Z, r24
    10ea:	08 95       	ret

000010ec <__vector_5>:
}

ISR(RTC_CNT_vect)
{
    10ec:	1f 92       	push	r1
    10ee:	0f 92       	push	r0
    10f0:	0f b6       	in	r0, 0x3f	; 63
    10f2:	0f 92       	push	r0
    10f4:	11 24       	eor	r1, r1
    10f6:	8f 93       	push	r24
 *
 * \param[in] pin       The pin number within port
 */
static inline void PORTB_toggle_pin_level(const uint8_t pin)
{
	VPORTB.IN |= 1 << pin;
    10f8:	33 9a       	sbi	0x06, 3	; 6
	/* Toggle LED0 */
	LED0_toggle_level();

	/* Overflow interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_OVF_bm;
    10fa:	81 e0       	ldi	r24, 0x01	; 1
    10fc:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x7e0143>
}
    1100:	8f 91       	pop	r24
    1102:	0f 90       	pop	r0
    1104:	0f be       	out	0x3f, r0	; 63
    1106:	0f 90       	pop	r0
    1108:	1f 90       	pop	r1
    110a:	18 95       	reti

0000110c <main>:

int main(void)
{
		atmel_start_init();
    110c:	0e 94 be 0b 	call	0x177c	; 0x177c <atmel_start_init>
		RTC_enable();
    1110:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_Z10RTC_enablev>
	ENABLE_INTERRUPTS();
    1114:	78 94       	sei
	printf("hello\n\r");
    1116:	80 e4       	ldi	r24, 0x40	; 64
    1118:	91 e4       	ldi	r25, 0x41	; 65
    111a:	9f 93       	push	r25
    111c:	8f 93       	push	r24
    111e:	0e 94 29 13 	call	0x2652	; 0x2652 <printf>
    1122:	0f 90       	pop	r0
    1124:	0f 90       	pop	r0
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    1126:	c8 e5       	ldi	r28, 0x58	; 88
    1128:	d2 e0       	ldi	r29, 0x02	; 2
    /* Replace with your application code */
    while (1) 
    {
		while(!lmx.Init()){
    112a:	85 e1       	ldi	r24, 0x15	; 21
    112c:	93 e4       	ldi	r25, 0x43	; 67
    112e:	0e 94 d6 05 	call	0xbac	; 0xbac <_ZN15lmx2694_Handler4InitEv>
    1132:	81 11       	cpse	r24, r1
    1134:	09 c0       	rjmp	.+18     	; 0x1148 <main+0x3c>
    1136:	88 ee       	ldi	r24, 0xE8	; 232
    1138:	93 e0       	ldi	r25, 0x03	; 3
    113a:	fe 01       	movw	r30, r28
    113c:	31 97       	sbiw	r30, 0x01	; 1
    113e:	f1 f7       	brne	.-4      	; 0x113c <main+0x30>
    1140:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1142:	d9 f7       	brne	.-10     	; 0x113a <main+0x2e>
    1144:	33 9a       	sbi	0x06, 3	; 6
    1146:	f1 cf       	rjmp	.-30     	; 0x112a <main+0x1e>
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
    1148:	2b 9a       	sbi	0x05, 3	; 5
    114a:	c8 e5       	ldi	r28, 0x58	; 88
    114c:	d2 e0       	ldi	r29, 0x02	; 2
		LED0_set_level(true);
		//gpio_set_pin_level(LED0,true);
		/* Replace with your application code */
		while (1)
		{
			lmx.Self_Test();
    114e:	85 e1       	ldi	r24, 0x15	; 21
    1150:	93 e4       	ldi	r25, 0x43	; 67
    1152:	0e 94 4a 07 	call	0xe94	; 0xe94 <_ZN15lmx2694_Handler9Self_TestEv>
    1156:	80 e1       	ldi	r24, 0x10	; 16
    1158:	97 e2       	ldi	r25, 0x27	; 39
    115a:	fe 01       	movw	r30, r28
    115c:	31 97       	sbiw	r30, 0x01	; 1
    115e:	f1 f7       	brne	.-4      	; 0x115c <main+0x50>
    1160:	01 97       	sbiw	r24, 0x01	; 1
    1162:	d9 f7       	brne	.-10     	; 0x115a <main+0x4e>
 *
 * \param[in] pin       The pin number within port
 */
static inline void PORTB_toggle_pin_level(const uint8_t pin)
{
	VPORTB.IN |= 1 << pin;
    1164:	33 9a       	sbi	0x06, 3	; 6
    1166:	f3 cf       	rjmp	.-26     	; 0x114e <main+0x42>

00001168 <_GLOBAL__sub_I__Z10RTC_enablev>:

#include <atomic.h>
#include <util/delay.h>  
#include <clock_config.h>
#include "lmx2694Handler.h"
 static lmx2694_Handler lmx;
    1168:	85 e1       	ldi	r24, 0x15	; 21
    116a:	93 e4       	ldi	r25, 0x43	; 67
    116c:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN15lmx2694_HandlerC1Ev>
    1170:	08 95       	ret

00001172 <_GLOBAL__sub_D__Z10RTC_enablev>:
    1172:	85 e1       	ldi	r24, 0x15	; 21
    1174:	93 e4       	ldi	r25, 0x43	; 67
    1176:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_ZN15lmx2694_HandlerD1Ev>
    117a:	08 95       	ret

0000117c <_ZL21LMX_SPI_Transfer_Donev>:
		return 0;
	}

	
}
void SPI_Async_Handler::Disable(void){
    117c:	e0 91 5d 43 	lds	r30, 0x435D	; 0x80435d <ptrSPIAsync>
    1180:	f0 91 5e 43 	lds	r31, 0x435E	; 0x80435e <ptrSPIAsync+0x1>
    1184:	81 e0       	ldi	r24, 0x01	; 1
    1186:	80 83       	st	Z, r24
    1188:	08 95       	ret

0000118a <_ZN17SPI_Async_HandlerC1Ev>:
    118a:	80 93 5d 43 	sts	0x435D, r24	; 0x80435d <ptrSPIAsync>
    118e:	90 93 5e 43 	sts	0x435E, r25	; 0x80435e <ptrSPIAsync+0x1>
    1192:	fc 01       	movw	r30, r24
    1194:	10 82       	st	Z, r1
    1196:	08 95       	ret

00001198 <_ZN17SPI_Async_HandlerD1Ev>:
    1198:	08 95       	ret

0000119a <_ZN17SPI_Async_Handler4InitEv>:
    119a:	cf 93       	push	r28
    119c:	df 93       	push	r29
    119e:	ec 01       	movw	r28, r24
    11a0:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <SPI_LMX_enable>
    11a4:	8e eb       	ldi	r24, 0xBE	; 190
    11a6:	98 e0       	ldi	r25, 0x08	; 8
    11a8:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <SPI_LMX_register_callback>
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	88 83       	st	Y, r24
    11b0:	df 91       	pop	r29
    11b2:	cf 91       	pop	r28
    11b4:	08 95       	ret

000011b6 <_ZN17SPI_Async_Handler5WriteEPKhh>:
    11b6:	cf 93       	push	r28
    11b8:	fc 01       	movw	r30, r24
    11ba:	20 81       	ld	r18, Z
    11bc:	22 23       	and	r18, r18
    11be:	69 f0       	breq	.+26     	; 0x11da <_ZN17SPI_Async_Handler5WriteEPKhh+0x24>
    11c0:	c4 2f       	mov	r28, r20
    11c2:	9b 01       	movw	r18, r22
    11c4:	10 82       	st	Z, r1
    11c6:	64 2f       	mov	r22, r20
    11c8:	c9 01       	movw	r24, r18
    11ca:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <SPI_LMX_write_block>
    11ce:	0e 94 66 0d 	call	0x1acc	; 0x1acc <SPI_LMX_status_busy>
    11d2:	81 11       	cpse	r24, r1
    11d4:	fc cf       	rjmp	.-8      	; 0x11ce <_ZN17SPI_Async_Handler5WriteEPKhh+0x18>
    11d6:	8c 2f       	mov	r24, r28
    11d8:	01 c0       	rjmp	.+2      	; 0x11dc <_ZN17SPI_Async_Handler5WriteEPKhh+0x26>
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	cf 91       	pop	r28
    11de:	08 95       	ret

000011e0 <_ZN17SPI_Async_Handler4ReadEPhh>:
    11e0:	cf 93       	push	r28
    11e2:	fc 01       	movw	r30, r24
    11e4:	20 81       	ld	r18, Z
    11e6:	22 23       	and	r18, r18
    11e8:	69 f0       	breq	.+26     	; 0x1204 <_ZN17SPI_Async_Handler4ReadEPhh+0x24>
    11ea:	c4 2f       	mov	r28, r20
    11ec:	9b 01       	movw	r18, r22
    11ee:	10 82       	st	Z, r1
    11f0:	64 2f       	mov	r22, r20
    11f2:	c9 01       	movw	r24, r18
    11f4:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <SPI_LMX_read_block>
    11f8:	0e 94 66 0d 	call	0x1acc	; 0x1acc <SPI_LMX_status_busy>
    11fc:	81 11       	cpse	r24, r1
    11fe:	fc cf       	rjmp	.-8      	; 0x11f8 <_ZN17SPI_Async_Handler4ReadEPhh+0x18>
    1200:	8c 2f       	mov	r24, r28
    1202:	01 c0       	rjmp	.+2      	; 0x1206 <_ZN17SPI_Async_Handler4ReadEPhh+0x26>
    1204:	80 e0       	ldi	r24, 0x00	; 0
    1206:	cf 91       	pop	r28
    1208:	08 95       	ret

0000120a <_ZN17SPI_Async_Handler5SetCSEb>:
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
    120a:	66 23       	and	r22, r22
    120c:	11 f0       	breq	.+4      	; 0x1212 <_ZN17SPI_Async_Handler5SetCSEb+0x8>
		VPORTC.OUT |= (1 << pin);
    120e:	4b 9a       	sbi	0x09, 3	; 9
    1210:	08 95       	ret
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1212:	4b 98       	cbi	0x09, 3	; 9
    1214:	08 95       	ret

00001216 <__subsf3>:
    1216:	50 58       	subi	r21, 0x80	; 128

00001218 <__addsf3>:
    1218:	bb 27       	eor	r27, r27
    121a:	aa 27       	eor	r26, r26
    121c:	0e 94 23 09 	call	0x1246	; 0x1246 <__addsf3x>
    1220:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__fp_round>
    1224:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__fp_pscA>
    1228:	38 f0       	brcs	.+14     	; 0x1238 <__addsf3+0x20>
    122a:	0e 94 cf 0a 	call	0x159e	; 0x159e <__fp_pscB>
    122e:	20 f0       	brcs	.+8      	; 0x1238 <__addsf3+0x20>
    1230:	39 f4       	brne	.+14     	; 0x1240 <__addsf3+0x28>
    1232:	9f 3f       	cpi	r25, 0xFF	; 255
    1234:	19 f4       	brne	.+6      	; 0x123c <__addsf3+0x24>
    1236:	26 f4       	brtc	.+8      	; 0x1240 <__addsf3+0x28>
    1238:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_nan>
    123c:	0e f4       	brtc	.+2      	; 0x1240 <__addsf3+0x28>
    123e:	e0 95       	com	r30
    1240:	e7 fb       	bst	r30, 7
    1242:	0c 94 96 0a 	jmp	0x152c	; 0x152c <__fp_inf>

00001246 <__addsf3x>:
    1246:	e9 2f       	mov	r30, r25
    1248:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <__fp_split3>
    124c:	58 f3       	brcs	.-42     	; 0x1224 <__addsf3+0xc>
    124e:	ba 17       	cp	r27, r26
    1250:	62 07       	cpc	r22, r18
    1252:	73 07       	cpc	r23, r19
    1254:	84 07       	cpc	r24, r20
    1256:	95 07       	cpc	r25, r21
    1258:	20 f0       	brcs	.+8      	; 0x1262 <__addsf3x+0x1c>
    125a:	79 f4       	brne	.+30     	; 0x127a <__addsf3x+0x34>
    125c:	a6 f5       	brtc	.+104    	; 0x12c6 <__addsf3x+0x80>
    125e:	0c 94 21 0b 	jmp	0x1642	; 0x1642 <__fp_zero>
    1262:	0e f4       	brtc	.+2      	; 0x1266 <__addsf3x+0x20>
    1264:	e0 95       	com	r30
    1266:	0b 2e       	mov	r0, r27
    1268:	ba 2f       	mov	r27, r26
    126a:	a0 2d       	mov	r26, r0
    126c:	0b 01       	movw	r0, r22
    126e:	b9 01       	movw	r22, r18
    1270:	90 01       	movw	r18, r0
    1272:	0c 01       	movw	r0, r24
    1274:	ca 01       	movw	r24, r20
    1276:	a0 01       	movw	r20, r0
    1278:	11 24       	eor	r1, r1
    127a:	ff 27       	eor	r31, r31
    127c:	59 1b       	sub	r21, r25
    127e:	99 f0       	breq	.+38     	; 0x12a6 <__addsf3x+0x60>
    1280:	59 3f       	cpi	r21, 0xF9	; 249
    1282:	50 f4       	brcc	.+20     	; 0x1298 <__addsf3x+0x52>
    1284:	50 3e       	cpi	r21, 0xE0	; 224
    1286:	68 f1       	brcs	.+90     	; 0x12e2 <__addsf3x+0x9c>
    1288:	1a 16       	cp	r1, r26
    128a:	f0 40       	sbci	r31, 0x00	; 0
    128c:	a2 2f       	mov	r26, r18
    128e:	23 2f       	mov	r18, r19
    1290:	34 2f       	mov	r19, r20
    1292:	44 27       	eor	r20, r20
    1294:	58 5f       	subi	r21, 0xF8	; 248
    1296:	f3 cf       	rjmp	.-26     	; 0x127e <__addsf3x+0x38>
    1298:	46 95       	lsr	r20
    129a:	37 95       	ror	r19
    129c:	27 95       	ror	r18
    129e:	a7 95       	ror	r26
    12a0:	f0 40       	sbci	r31, 0x00	; 0
    12a2:	53 95       	inc	r21
    12a4:	c9 f7       	brne	.-14     	; 0x1298 <__addsf3x+0x52>
    12a6:	7e f4       	brtc	.+30     	; 0x12c6 <__addsf3x+0x80>
    12a8:	1f 16       	cp	r1, r31
    12aa:	ba 0b       	sbc	r27, r26
    12ac:	62 0b       	sbc	r22, r18
    12ae:	73 0b       	sbc	r23, r19
    12b0:	84 0b       	sbc	r24, r20
    12b2:	ba f0       	brmi	.+46     	; 0x12e2 <__addsf3x+0x9c>
    12b4:	91 50       	subi	r25, 0x01	; 1
    12b6:	a1 f0       	breq	.+40     	; 0x12e0 <__addsf3x+0x9a>
    12b8:	ff 0f       	add	r31, r31
    12ba:	bb 1f       	adc	r27, r27
    12bc:	66 1f       	adc	r22, r22
    12be:	77 1f       	adc	r23, r23
    12c0:	88 1f       	adc	r24, r24
    12c2:	c2 f7       	brpl	.-16     	; 0x12b4 <__addsf3x+0x6e>
    12c4:	0e c0       	rjmp	.+28     	; 0x12e2 <__addsf3x+0x9c>
    12c6:	ba 0f       	add	r27, r26
    12c8:	62 1f       	adc	r22, r18
    12ca:	73 1f       	adc	r23, r19
    12cc:	84 1f       	adc	r24, r20
    12ce:	48 f4       	brcc	.+18     	; 0x12e2 <__addsf3x+0x9c>
    12d0:	87 95       	ror	r24
    12d2:	77 95       	ror	r23
    12d4:	67 95       	ror	r22
    12d6:	b7 95       	ror	r27
    12d8:	f7 95       	ror	r31
    12da:	9e 3f       	cpi	r25, 0xFE	; 254
    12dc:	08 f0       	brcs	.+2      	; 0x12e0 <__addsf3x+0x9a>
    12de:	b0 cf       	rjmp	.-160    	; 0x1240 <__addsf3+0x28>
    12e0:	93 95       	inc	r25
    12e2:	88 0f       	add	r24, r24
    12e4:	08 f0       	brcs	.+2      	; 0x12e8 <__addsf3x+0xa2>
    12e6:	99 27       	eor	r25, r25
    12e8:	ee 0f       	add	r30, r30
    12ea:	97 95       	ror	r25
    12ec:	87 95       	ror	r24
    12ee:	08 95       	ret

000012f0 <__cmpsf2>:
    12f0:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__fp_cmp>
    12f4:	08 f4       	brcc	.+2      	; 0x12f8 <__cmpsf2+0x8>
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	08 95       	ret

000012fa <__divsf3>:
    12fa:	0e 94 91 09 	call	0x1322	; 0x1322 <__divsf3x>
    12fe:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__fp_round>
    1302:	0e 94 cf 0a 	call	0x159e	; 0x159e <__fp_pscB>
    1306:	58 f0       	brcs	.+22     	; 0x131e <__divsf3+0x24>
    1308:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__fp_pscA>
    130c:	40 f0       	brcs	.+16     	; 0x131e <__divsf3+0x24>
    130e:	29 f4       	brne	.+10     	; 0x131a <__divsf3+0x20>
    1310:	5f 3f       	cpi	r21, 0xFF	; 255
    1312:	29 f0       	breq	.+10     	; 0x131e <__divsf3+0x24>
    1314:	0c 94 96 0a 	jmp	0x152c	; 0x152c <__fp_inf>
    1318:	51 11       	cpse	r21, r1
    131a:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <__fp_szero>
    131e:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_nan>

00001322 <__divsf3x>:
    1322:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <__fp_split3>
    1326:	68 f3       	brcs	.-38     	; 0x1302 <__divsf3+0x8>

00001328 <__divsf3_pse>:
    1328:	99 23       	and	r25, r25
    132a:	b1 f3       	breq	.-20     	; 0x1318 <__divsf3+0x1e>
    132c:	55 23       	and	r21, r21
    132e:	91 f3       	breq	.-28     	; 0x1314 <__divsf3+0x1a>
    1330:	95 1b       	sub	r25, r21
    1332:	55 0b       	sbc	r21, r21
    1334:	bb 27       	eor	r27, r27
    1336:	aa 27       	eor	r26, r26
    1338:	62 17       	cp	r22, r18
    133a:	73 07       	cpc	r23, r19
    133c:	84 07       	cpc	r24, r20
    133e:	38 f0       	brcs	.+14     	; 0x134e <__divsf3_pse+0x26>
    1340:	9f 5f       	subi	r25, 0xFF	; 255
    1342:	5f 4f       	sbci	r21, 0xFF	; 255
    1344:	22 0f       	add	r18, r18
    1346:	33 1f       	adc	r19, r19
    1348:	44 1f       	adc	r20, r20
    134a:	aa 1f       	adc	r26, r26
    134c:	a9 f3       	breq	.-22     	; 0x1338 <__divsf3_pse+0x10>
    134e:	35 d0       	rcall	.+106    	; 0x13ba <__divsf3_pse+0x92>
    1350:	0e 2e       	mov	r0, r30
    1352:	3a f0       	brmi	.+14     	; 0x1362 <__divsf3_pse+0x3a>
    1354:	e0 e8       	ldi	r30, 0x80	; 128
    1356:	32 d0       	rcall	.+100    	; 0x13bc <__divsf3_pse+0x94>
    1358:	91 50       	subi	r25, 0x01	; 1
    135a:	50 40       	sbci	r21, 0x00	; 0
    135c:	e6 95       	lsr	r30
    135e:	00 1c       	adc	r0, r0
    1360:	ca f7       	brpl	.-14     	; 0x1354 <__divsf3_pse+0x2c>
    1362:	2b d0       	rcall	.+86     	; 0x13ba <__divsf3_pse+0x92>
    1364:	fe 2f       	mov	r31, r30
    1366:	29 d0       	rcall	.+82     	; 0x13ba <__divsf3_pse+0x92>
    1368:	66 0f       	add	r22, r22
    136a:	77 1f       	adc	r23, r23
    136c:	88 1f       	adc	r24, r24
    136e:	bb 1f       	adc	r27, r27
    1370:	26 17       	cp	r18, r22
    1372:	37 07       	cpc	r19, r23
    1374:	48 07       	cpc	r20, r24
    1376:	ab 07       	cpc	r26, r27
    1378:	b0 e8       	ldi	r27, 0x80	; 128
    137a:	09 f0       	breq	.+2      	; 0x137e <__divsf3_pse+0x56>
    137c:	bb 0b       	sbc	r27, r27
    137e:	80 2d       	mov	r24, r0
    1380:	bf 01       	movw	r22, r30
    1382:	ff 27       	eor	r31, r31
    1384:	93 58       	subi	r25, 0x83	; 131
    1386:	5f 4f       	sbci	r21, 0xFF	; 255
    1388:	3a f0       	brmi	.+14     	; 0x1398 <__divsf3_pse+0x70>
    138a:	9e 3f       	cpi	r25, 0xFE	; 254
    138c:	51 05       	cpc	r21, r1
    138e:	78 f0       	brcs	.+30     	; 0x13ae <__divsf3_pse+0x86>
    1390:	0c 94 96 0a 	jmp	0x152c	; 0x152c <__fp_inf>
    1394:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <__fp_szero>
    1398:	5f 3f       	cpi	r21, 0xFF	; 255
    139a:	e4 f3       	brlt	.-8      	; 0x1394 <__divsf3_pse+0x6c>
    139c:	98 3e       	cpi	r25, 0xE8	; 232
    139e:	d4 f3       	brlt	.-12     	; 0x1394 <__divsf3_pse+0x6c>
    13a0:	86 95       	lsr	r24
    13a2:	77 95       	ror	r23
    13a4:	67 95       	ror	r22
    13a6:	b7 95       	ror	r27
    13a8:	f7 95       	ror	r31
    13aa:	9f 5f       	subi	r25, 0xFF	; 255
    13ac:	c9 f7       	brne	.-14     	; 0x13a0 <__divsf3_pse+0x78>
    13ae:	88 0f       	add	r24, r24
    13b0:	91 1d       	adc	r25, r1
    13b2:	96 95       	lsr	r25
    13b4:	87 95       	ror	r24
    13b6:	97 f9       	bld	r25, 7
    13b8:	08 95       	ret
    13ba:	e1 e0       	ldi	r30, 0x01	; 1
    13bc:	66 0f       	add	r22, r22
    13be:	77 1f       	adc	r23, r23
    13c0:	88 1f       	adc	r24, r24
    13c2:	bb 1f       	adc	r27, r27
    13c4:	62 17       	cp	r22, r18
    13c6:	73 07       	cpc	r23, r19
    13c8:	84 07       	cpc	r24, r20
    13ca:	ba 07       	cpc	r27, r26
    13cc:	20 f0       	brcs	.+8      	; 0x13d6 <__divsf3_pse+0xae>
    13ce:	62 1b       	sub	r22, r18
    13d0:	73 0b       	sbc	r23, r19
    13d2:	84 0b       	sbc	r24, r20
    13d4:	ba 0b       	sbc	r27, r26
    13d6:	ee 1f       	adc	r30, r30
    13d8:	88 f7       	brcc	.-30     	; 0x13bc <__divsf3_pse+0x94>
    13da:	e0 95       	com	r30
    13dc:	08 95       	ret

000013de <__fixunssfsi>:
    13de:	0e 94 ef 0a 	call	0x15de	; 0x15de <__fp_splitA>
    13e2:	88 f0       	brcs	.+34     	; 0x1406 <__fixunssfsi+0x28>
    13e4:	9f 57       	subi	r25, 0x7F	; 127
    13e6:	98 f0       	brcs	.+38     	; 0x140e <__fixunssfsi+0x30>
    13e8:	b9 2f       	mov	r27, r25
    13ea:	99 27       	eor	r25, r25
    13ec:	b7 51       	subi	r27, 0x17	; 23
    13ee:	b0 f0       	brcs	.+44     	; 0x141c <__fixunssfsi+0x3e>
    13f0:	e1 f0       	breq	.+56     	; 0x142a <__fixunssfsi+0x4c>
    13f2:	66 0f       	add	r22, r22
    13f4:	77 1f       	adc	r23, r23
    13f6:	88 1f       	adc	r24, r24
    13f8:	99 1f       	adc	r25, r25
    13fa:	1a f0       	brmi	.+6      	; 0x1402 <__fixunssfsi+0x24>
    13fc:	ba 95       	dec	r27
    13fe:	c9 f7       	brne	.-14     	; 0x13f2 <__fixunssfsi+0x14>
    1400:	14 c0       	rjmp	.+40     	; 0x142a <__fixunssfsi+0x4c>
    1402:	b1 30       	cpi	r27, 0x01	; 1
    1404:	91 f0       	breq	.+36     	; 0x142a <__fixunssfsi+0x4c>
    1406:	0e 94 21 0b 	call	0x1642	; 0x1642 <__fp_zero>
    140a:	b1 e0       	ldi	r27, 0x01	; 1
    140c:	08 95       	ret
    140e:	0c 94 21 0b 	jmp	0x1642	; 0x1642 <__fp_zero>
    1412:	67 2f       	mov	r22, r23
    1414:	78 2f       	mov	r23, r24
    1416:	88 27       	eor	r24, r24
    1418:	b8 5f       	subi	r27, 0xF8	; 248
    141a:	39 f0       	breq	.+14     	; 0x142a <__fixunssfsi+0x4c>
    141c:	b9 3f       	cpi	r27, 0xF9	; 249
    141e:	cc f3       	brlt	.-14     	; 0x1412 <__fixunssfsi+0x34>
    1420:	86 95       	lsr	r24
    1422:	77 95       	ror	r23
    1424:	67 95       	ror	r22
    1426:	b3 95       	inc	r27
    1428:	d9 f7       	brne	.-10     	; 0x1420 <__fixunssfsi+0x42>
    142a:	3e f4       	brtc	.+14     	; 0x143a <__fixunssfsi+0x5c>
    142c:	90 95       	com	r25
    142e:	80 95       	com	r24
    1430:	70 95       	com	r23
    1432:	61 95       	neg	r22
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	8f 4f       	sbci	r24, 0xFF	; 255
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	08 95       	ret

0000143c <__floatunsisf>:
    143c:	e8 94       	clt
    143e:	09 c0       	rjmp	.+18     	; 0x1452 <__floatsisf+0x12>

00001440 <__floatsisf>:
    1440:	97 fb       	bst	r25, 7
    1442:	3e f4       	brtc	.+14     	; 0x1452 <__floatsisf+0x12>
    1444:	90 95       	com	r25
    1446:	80 95       	com	r24
    1448:	70 95       	com	r23
    144a:	61 95       	neg	r22
    144c:	7f 4f       	sbci	r23, 0xFF	; 255
    144e:	8f 4f       	sbci	r24, 0xFF	; 255
    1450:	9f 4f       	sbci	r25, 0xFF	; 255
    1452:	99 23       	and	r25, r25
    1454:	a9 f0       	breq	.+42     	; 0x1480 <__floatsisf+0x40>
    1456:	f9 2f       	mov	r31, r25
    1458:	96 e9       	ldi	r25, 0x96	; 150
    145a:	bb 27       	eor	r27, r27
    145c:	93 95       	inc	r25
    145e:	f6 95       	lsr	r31
    1460:	87 95       	ror	r24
    1462:	77 95       	ror	r23
    1464:	67 95       	ror	r22
    1466:	b7 95       	ror	r27
    1468:	f1 11       	cpse	r31, r1
    146a:	f8 cf       	rjmp	.-16     	; 0x145c <__floatsisf+0x1c>
    146c:	fa f4       	brpl	.+62     	; 0x14ac <__floatsisf+0x6c>
    146e:	bb 0f       	add	r27, r27
    1470:	11 f4       	brne	.+4      	; 0x1476 <__floatsisf+0x36>
    1472:	60 ff       	sbrs	r22, 0
    1474:	1b c0       	rjmp	.+54     	; 0x14ac <__floatsisf+0x6c>
    1476:	6f 5f       	subi	r22, 0xFF	; 255
    1478:	7f 4f       	sbci	r23, 0xFF	; 255
    147a:	8f 4f       	sbci	r24, 0xFF	; 255
    147c:	9f 4f       	sbci	r25, 0xFF	; 255
    147e:	16 c0       	rjmp	.+44     	; 0x14ac <__floatsisf+0x6c>
    1480:	88 23       	and	r24, r24
    1482:	11 f0       	breq	.+4      	; 0x1488 <__floatsisf+0x48>
    1484:	96 e9       	ldi	r25, 0x96	; 150
    1486:	11 c0       	rjmp	.+34     	; 0x14aa <__floatsisf+0x6a>
    1488:	77 23       	and	r23, r23
    148a:	21 f0       	breq	.+8      	; 0x1494 <__floatsisf+0x54>
    148c:	9e e8       	ldi	r25, 0x8E	; 142
    148e:	87 2f       	mov	r24, r23
    1490:	76 2f       	mov	r23, r22
    1492:	05 c0       	rjmp	.+10     	; 0x149e <__floatsisf+0x5e>
    1494:	66 23       	and	r22, r22
    1496:	71 f0       	breq	.+28     	; 0x14b4 <__floatsisf+0x74>
    1498:	96 e8       	ldi	r25, 0x86	; 134
    149a:	86 2f       	mov	r24, r22
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	60 e0       	ldi	r22, 0x00	; 0
    14a0:	2a f0       	brmi	.+10     	; 0x14ac <__floatsisf+0x6c>
    14a2:	9a 95       	dec	r25
    14a4:	66 0f       	add	r22, r22
    14a6:	77 1f       	adc	r23, r23
    14a8:	88 1f       	adc	r24, r24
    14aa:	da f7       	brpl	.-10     	; 0x14a2 <__floatsisf+0x62>
    14ac:	88 0f       	add	r24, r24
    14ae:	96 95       	lsr	r25
    14b0:	87 95       	ror	r24
    14b2:	97 f9       	bld	r25, 7
    14b4:	08 95       	ret

000014b6 <floor>:
    14b6:	0e 94 09 0b 	call	0x1612	; 0x1612 <__fp_trunc>
    14ba:	90 f0       	brcs	.+36     	; 0x14e0 <floor+0x2a>
    14bc:	9f 37       	cpi	r25, 0x7F	; 127
    14be:	48 f4       	brcc	.+18     	; 0x14d2 <floor+0x1c>
    14c0:	91 11       	cpse	r25, r1
    14c2:	16 f0       	brts	.+4      	; 0x14c8 <floor+0x12>
    14c4:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <__fp_szero>
    14c8:	60 e0       	ldi	r22, 0x00	; 0
    14ca:	70 e0       	ldi	r23, 0x00	; 0
    14cc:	80 e8       	ldi	r24, 0x80	; 128
    14ce:	9f eb       	ldi	r25, 0xBF	; 191
    14d0:	08 95       	ret
    14d2:	26 f4       	brtc	.+8      	; 0x14dc <floor+0x26>
    14d4:	1b 16       	cp	r1, r27
    14d6:	61 1d       	adc	r22, r1
    14d8:	71 1d       	adc	r23, r1
    14da:	81 1d       	adc	r24, r1
    14dc:	0c 94 9c 0a 	jmp	0x1538	; 0x1538 <__fp_mintl>
    14e0:	0c 94 b7 0a 	jmp	0x156e	; 0x156e <__fp_mpack>

000014e4 <__fp_cmp>:
    14e4:	99 0f       	add	r25, r25
    14e6:	00 08       	sbc	r0, r0
    14e8:	55 0f       	add	r21, r21
    14ea:	aa 0b       	sbc	r26, r26
    14ec:	e0 e8       	ldi	r30, 0x80	; 128
    14ee:	fe ef       	ldi	r31, 0xFE	; 254
    14f0:	16 16       	cp	r1, r22
    14f2:	17 06       	cpc	r1, r23
    14f4:	e8 07       	cpc	r30, r24
    14f6:	f9 07       	cpc	r31, r25
    14f8:	c0 f0       	brcs	.+48     	; 0x152a <__fp_cmp+0x46>
    14fa:	12 16       	cp	r1, r18
    14fc:	13 06       	cpc	r1, r19
    14fe:	e4 07       	cpc	r30, r20
    1500:	f5 07       	cpc	r31, r21
    1502:	98 f0       	brcs	.+38     	; 0x152a <__fp_cmp+0x46>
    1504:	62 1b       	sub	r22, r18
    1506:	73 0b       	sbc	r23, r19
    1508:	84 0b       	sbc	r24, r20
    150a:	95 0b       	sbc	r25, r21
    150c:	39 f4       	brne	.+14     	; 0x151c <__fp_cmp+0x38>
    150e:	0a 26       	eor	r0, r26
    1510:	61 f0       	breq	.+24     	; 0x152a <__fp_cmp+0x46>
    1512:	23 2b       	or	r18, r19
    1514:	24 2b       	or	r18, r20
    1516:	25 2b       	or	r18, r21
    1518:	21 f4       	brne	.+8      	; 0x1522 <__fp_cmp+0x3e>
    151a:	08 95       	ret
    151c:	0a 26       	eor	r0, r26
    151e:	09 f4       	brne	.+2      	; 0x1522 <__fp_cmp+0x3e>
    1520:	a1 40       	sbci	r26, 0x01	; 1
    1522:	a6 95       	lsr	r26
    1524:	8f ef       	ldi	r24, 0xFF	; 255
    1526:	81 1d       	adc	r24, r1
    1528:	81 1d       	adc	r24, r1
    152a:	08 95       	ret

0000152c <__fp_inf>:
    152c:	97 f9       	bld	r25, 7
    152e:	9f 67       	ori	r25, 0x7F	; 127
    1530:	80 e8       	ldi	r24, 0x80	; 128
    1532:	70 e0       	ldi	r23, 0x00	; 0
    1534:	60 e0       	ldi	r22, 0x00	; 0
    1536:	08 95       	ret

00001538 <__fp_mintl>:
    1538:	88 23       	and	r24, r24
    153a:	71 f4       	brne	.+28     	; 0x1558 <__fp_mintl+0x20>
    153c:	77 23       	and	r23, r23
    153e:	21 f0       	breq	.+8      	; 0x1548 <__fp_mintl+0x10>
    1540:	98 50       	subi	r25, 0x08	; 8
    1542:	87 2b       	or	r24, r23
    1544:	76 2f       	mov	r23, r22
    1546:	07 c0       	rjmp	.+14     	; 0x1556 <__fp_mintl+0x1e>
    1548:	66 23       	and	r22, r22
    154a:	11 f4       	brne	.+4      	; 0x1550 <__fp_mintl+0x18>
    154c:	99 27       	eor	r25, r25
    154e:	0d c0       	rjmp	.+26     	; 0x156a <__fp_mintl+0x32>
    1550:	90 51       	subi	r25, 0x10	; 16
    1552:	86 2b       	or	r24, r22
    1554:	70 e0       	ldi	r23, 0x00	; 0
    1556:	60 e0       	ldi	r22, 0x00	; 0
    1558:	2a f0       	brmi	.+10     	; 0x1564 <__fp_mintl+0x2c>
    155a:	9a 95       	dec	r25
    155c:	66 0f       	add	r22, r22
    155e:	77 1f       	adc	r23, r23
    1560:	88 1f       	adc	r24, r24
    1562:	da f7       	brpl	.-10     	; 0x155a <__fp_mintl+0x22>
    1564:	88 0f       	add	r24, r24
    1566:	96 95       	lsr	r25
    1568:	87 95       	ror	r24
    156a:	97 f9       	bld	r25, 7
    156c:	08 95       	ret

0000156e <__fp_mpack>:
    156e:	9f 3f       	cpi	r25, 0xFF	; 255
    1570:	31 f0       	breq	.+12     	; 0x157e <__fp_mpack_finite+0xc>

00001572 <__fp_mpack_finite>:
    1572:	91 50       	subi	r25, 0x01	; 1
    1574:	20 f4       	brcc	.+8      	; 0x157e <__fp_mpack_finite+0xc>
    1576:	87 95       	ror	r24
    1578:	77 95       	ror	r23
    157a:	67 95       	ror	r22
    157c:	b7 95       	ror	r27
    157e:	88 0f       	add	r24, r24
    1580:	91 1d       	adc	r25, r1
    1582:	96 95       	lsr	r25
    1584:	87 95       	ror	r24
    1586:	97 f9       	bld	r25, 7
    1588:	08 95       	ret

0000158a <__fp_nan>:
    158a:	9f ef       	ldi	r25, 0xFF	; 255
    158c:	80 ec       	ldi	r24, 0xC0	; 192
    158e:	08 95       	ret

00001590 <__fp_pscA>:
    1590:	00 24       	eor	r0, r0
    1592:	0a 94       	dec	r0
    1594:	16 16       	cp	r1, r22
    1596:	17 06       	cpc	r1, r23
    1598:	18 06       	cpc	r1, r24
    159a:	09 06       	cpc	r0, r25
    159c:	08 95       	ret

0000159e <__fp_pscB>:
    159e:	00 24       	eor	r0, r0
    15a0:	0a 94       	dec	r0
    15a2:	12 16       	cp	r1, r18
    15a4:	13 06       	cpc	r1, r19
    15a6:	14 06       	cpc	r1, r20
    15a8:	05 06       	cpc	r0, r21
    15aa:	08 95       	ret

000015ac <__fp_round>:
    15ac:	09 2e       	mov	r0, r25
    15ae:	03 94       	inc	r0
    15b0:	00 0c       	add	r0, r0
    15b2:	11 f4       	brne	.+4      	; 0x15b8 <__fp_round+0xc>
    15b4:	88 23       	and	r24, r24
    15b6:	52 f0       	brmi	.+20     	; 0x15cc <__fp_round+0x20>
    15b8:	bb 0f       	add	r27, r27
    15ba:	40 f4       	brcc	.+16     	; 0x15cc <__fp_round+0x20>
    15bc:	bf 2b       	or	r27, r31
    15be:	11 f4       	brne	.+4      	; 0x15c4 <__fp_round+0x18>
    15c0:	60 ff       	sbrs	r22, 0
    15c2:	04 c0       	rjmp	.+8      	; 0x15cc <__fp_round+0x20>
    15c4:	6f 5f       	subi	r22, 0xFF	; 255
    15c6:	7f 4f       	sbci	r23, 0xFF	; 255
    15c8:	8f 4f       	sbci	r24, 0xFF	; 255
    15ca:	9f 4f       	sbci	r25, 0xFF	; 255
    15cc:	08 95       	ret

000015ce <__fp_split3>:
    15ce:	57 fd       	sbrc	r21, 7
    15d0:	90 58       	subi	r25, 0x80	; 128
    15d2:	44 0f       	add	r20, r20
    15d4:	55 1f       	adc	r21, r21
    15d6:	59 f0       	breq	.+22     	; 0x15ee <__fp_splitA+0x10>
    15d8:	5f 3f       	cpi	r21, 0xFF	; 255
    15da:	71 f0       	breq	.+28     	; 0x15f8 <__fp_splitA+0x1a>
    15dc:	47 95       	ror	r20

000015de <__fp_splitA>:
    15de:	88 0f       	add	r24, r24
    15e0:	97 fb       	bst	r25, 7
    15e2:	99 1f       	adc	r25, r25
    15e4:	61 f0       	breq	.+24     	; 0x15fe <__fp_splitA+0x20>
    15e6:	9f 3f       	cpi	r25, 0xFF	; 255
    15e8:	79 f0       	breq	.+30     	; 0x1608 <__fp_splitA+0x2a>
    15ea:	87 95       	ror	r24
    15ec:	08 95       	ret
    15ee:	12 16       	cp	r1, r18
    15f0:	13 06       	cpc	r1, r19
    15f2:	14 06       	cpc	r1, r20
    15f4:	55 1f       	adc	r21, r21
    15f6:	f2 cf       	rjmp	.-28     	; 0x15dc <__fp_split3+0xe>
    15f8:	46 95       	lsr	r20
    15fa:	f1 df       	rcall	.-30     	; 0x15de <__fp_splitA>
    15fc:	08 c0       	rjmp	.+16     	; 0x160e <__fp_splitA+0x30>
    15fe:	16 16       	cp	r1, r22
    1600:	17 06       	cpc	r1, r23
    1602:	18 06       	cpc	r1, r24
    1604:	99 1f       	adc	r25, r25
    1606:	f1 cf       	rjmp	.-30     	; 0x15ea <__fp_splitA+0xc>
    1608:	86 95       	lsr	r24
    160a:	71 05       	cpc	r23, r1
    160c:	61 05       	cpc	r22, r1
    160e:	08 94       	sec
    1610:	08 95       	ret

00001612 <__fp_trunc>:
    1612:	0e 94 ef 0a 	call	0x15de	; 0x15de <__fp_splitA>
    1616:	a0 f0       	brcs	.+40     	; 0x1640 <__fp_trunc+0x2e>
    1618:	be e7       	ldi	r27, 0x7E	; 126
    161a:	b9 17       	cp	r27, r25
    161c:	88 f4       	brcc	.+34     	; 0x1640 <__fp_trunc+0x2e>
    161e:	bb 27       	eor	r27, r27
    1620:	9f 38       	cpi	r25, 0x8F	; 143
    1622:	60 f4       	brcc	.+24     	; 0x163c <__fp_trunc+0x2a>
    1624:	16 16       	cp	r1, r22
    1626:	b1 1d       	adc	r27, r1
    1628:	67 2f       	mov	r22, r23
    162a:	78 2f       	mov	r23, r24
    162c:	88 27       	eor	r24, r24
    162e:	98 5f       	subi	r25, 0xF8	; 248
    1630:	f7 cf       	rjmp	.-18     	; 0x1620 <__fp_trunc+0xe>
    1632:	86 95       	lsr	r24
    1634:	77 95       	ror	r23
    1636:	67 95       	ror	r22
    1638:	b1 1d       	adc	r27, r1
    163a:	93 95       	inc	r25
    163c:	96 39       	cpi	r25, 0x96	; 150
    163e:	c8 f3       	brcs	.-14     	; 0x1632 <__fp_trunc+0x20>
    1640:	08 95       	ret

00001642 <__fp_zero>:
    1642:	e8 94       	clt

00001644 <__fp_szero>:
    1644:	bb 27       	eor	r27, r27
    1646:	66 27       	eor	r22, r22
    1648:	77 27       	eor	r23, r23
    164a:	cb 01       	movw	r24, r22
    164c:	97 f9       	bld	r25, 7
    164e:	08 95       	ret

00001650 <__gesf2>:
    1650:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__fp_cmp>
    1654:	08 f4       	brcc	.+2      	; 0x1658 <__gesf2+0x8>
    1656:	8f ef       	ldi	r24, 0xFF	; 255
    1658:	08 95       	ret

0000165a <__mulsf3>:
    165a:	0e 94 40 0b 	call	0x1680	; 0x1680 <__mulsf3x>
    165e:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__fp_round>
    1662:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__fp_pscA>
    1666:	38 f0       	brcs	.+14     	; 0x1676 <__mulsf3+0x1c>
    1668:	0e 94 cf 0a 	call	0x159e	; 0x159e <__fp_pscB>
    166c:	20 f0       	brcs	.+8      	; 0x1676 <__mulsf3+0x1c>
    166e:	95 23       	and	r25, r21
    1670:	11 f0       	breq	.+4      	; 0x1676 <__mulsf3+0x1c>
    1672:	0c 94 96 0a 	jmp	0x152c	; 0x152c <__fp_inf>
    1676:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_nan>
    167a:	11 24       	eor	r1, r1
    167c:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <__fp_szero>

00001680 <__mulsf3x>:
    1680:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <__fp_split3>
    1684:	70 f3       	brcs	.-36     	; 0x1662 <__mulsf3+0x8>

00001686 <__mulsf3_pse>:
    1686:	95 9f       	mul	r25, r21
    1688:	c1 f3       	breq	.-16     	; 0x167a <__mulsf3+0x20>
    168a:	95 0f       	add	r25, r21
    168c:	50 e0       	ldi	r21, 0x00	; 0
    168e:	55 1f       	adc	r21, r21
    1690:	62 9f       	mul	r22, r18
    1692:	f0 01       	movw	r30, r0
    1694:	72 9f       	mul	r23, r18
    1696:	bb 27       	eor	r27, r27
    1698:	f0 0d       	add	r31, r0
    169a:	b1 1d       	adc	r27, r1
    169c:	63 9f       	mul	r22, r19
    169e:	aa 27       	eor	r26, r26
    16a0:	f0 0d       	add	r31, r0
    16a2:	b1 1d       	adc	r27, r1
    16a4:	aa 1f       	adc	r26, r26
    16a6:	64 9f       	mul	r22, r20
    16a8:	66 27       	eor	r22, r22
    16aa:	b0 0d       	add	r27, r0
    16ac:	a1 1d       	adc	r26, r1
    16ae:	66 1f       	adc	r22, r22
    16b0:	82 9f       	mul	r24, r18
    16b2:	22 27       	eor	r18, r18
    16b4:	b0 0d       	add	r27, r0
    16b6:	a1 1d       	adc	r26, r1
    16b8:	62 1f       	adc	r22, r18
    16ba:	73 9f       	mul	r23, r19
    16bc:	b0 0d       	add	r27, r0
    16be:	a1 1d       	adc	r26, r1
    16c0:	62 1f       	adc	r22, r18
    16c2:	83 9f       	mul	r24, r19
    16c4:	a0 0d       	add	r26, r0
    16c6:	61 1d       	adc	r22, r1
    16c8:	22 1f       	adc	r18, r18
    16ca:	74 9f       	mul	r23, r20
    16cc:	33 27       	eor	r19, r19
    16ce:	a0 0d       	add	r26, r0
    16d0:	61 1d       	adc	r22, r1
    16d2:	23 1f       	adc	r18, r19
    16d4:	84 9f       	mul	r24, r20
    16d6:	60 0d       	add	r22, r0
    16d8:	21 1d       	adc	r18, r1
    16da:	82 2f       	mov	r24, r18
    16dc:	76 2f       	mov	r23, r22
    16de:	6a 2f       	mov	r22, r26
    16e0:	11 24       	eor	r1, r1
    16e2:	9f 57       	subi	r25, 0x7F	; 127
    16e4:	50 40       	sbci	r21, 0x00	; 0
    16e6:	9a f0       	brmi	.+38     	; 0x170e <__mulsf3_pse+0x88>
    16e8:	f1 f0       	breq	.+60     	; 0x1726 <__mulsf3_pse+0xa0>
    16ea:	88 23       	and	r24, r24
    16ec:	4a f0       	brmi	.+18     	; 0x1700 <__mulsf3_pse+0x7a>
    16ee:	ee 0f       	add	r30, r30
    16f0:	ff 1f       	adc	r31, r31
    16f2:	bb 1f       	adc	r27, r27
    16f4:	66 1f       	adc	r22, r22
    16f6:	77 1f       	adc	r23, r23
    16f8:	88 1f       	adc	r24, r24
    16fa:	91 50       	subi	r25, 0x01	; 1
    16fc:	50 40       	sbci	r21, 0x00	; 0
    16fe:	a9 f7       	brne	.-22     	; 0x16ea <__mulsf3_pse+0x64>
    1700:	9e 3f       	cpi	r25, 0xFE	; 254
    1702:	51 05       	cpc	r21, r1
    1704:	80 f0       	brcs	.+32     	; 0x1726 <__mulsf3_pse+0xa0>
    1706:	0c 94 96 0a 	jmp	0x152c	; 0x152c <__fp_inf>
    170a:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <__fp_szero>
    170e:	5f 3f       	cpi	r21, 0xFF	; 255
    1710:	e4 f3       	brlt	.-8      	; 0x170a <__mulsf3_pse+0x84>
    1712:	98 3e       	cpi	r25, 0xE8	; 232
    1714:	d4 f3       	brlt	.-12     	; 0x170a <__mulsf3_pse+0x84>
    1716:	86 95       	lsr	r24
    1718:	77 95       	ror	r23
    171a:	67 95       	ror	r22
    171c:	b7 95       	ror	r27
    171e:	f7 95       	ror	r31
    1720:	e7 95       	ror	r30
    1722:	9f 5f       	subi	r25, 0xFF	; 255
    1724:	c1 f7       	brne	.-16     	; 0x1716 <__mulsf3_pse+0x90>
    1726:	fe 2b       	or	r31, r30
    1728:	88 0f       	add	r24, r24
    172a:	91 1d       	adc	r25, r1
    172c:	96 95       	lsr	r25
    172e:	87 95       	ror	r24
    1730:	97 f9       	bld	r25, 7
    1732:	08 95       	ret

00001734 <round>:
    1734:	0e 94 ef 0a 	call	0x15de	; 0x15de <__fp_splitA>
    1738:	e8 f0       	brcs	.+58     	; 0x1774 <round+0x40>
    173a:	9e 37       	cpi	r25, 0x7E	; 126
    173c:	e8 f0       	brcs	.+58     	; 0x1778 <round+0x44>
    173e:	96 39       	cpi	r25, 0x96	; 150
    1740:	b8 f4       	brcc	.+46     	; 0x1770 <round+0x3c>
    1742:	9e 38       	cpi	r25, 0x8E	; 142
    1744:	48 f4       	brcc	.+18     	; 0x1758 <round+0x24>
    1746:	67 2f       	mov	r22, r23
    1748:	78 2f       	mov	r23, r24
    174a:	88 27       	eor	r24, r24
    174c:	98 5f       	subi	r25, 0xF8	; 248
    174e:	f9 cf       	rjmp	.-14     	; 0x1742 <round+0xe>
    1750:	86 95       	lsr	r24
    1752:	77 95       	ror	r23
    1754:	67 95       	ror	r22
    1756:	93 95       	inc	r25
    1758:	95 39       	cpi	r25, 0x95	; 149
    175a:	d0 f3       	brcs	.-12     	; 0x1750 <round+0x1c>
    175c:	b6 2f       	mov	r27, r22
    175e:	b1 70       	andi	r27, 0x01	; 1
    1760:	6b 0f       	add	r22, r27
    1762:	71 1d       	adc	r23, r1
    1764:	81 1d       	adc	r24, r1
    1766:	20 f4       	brcc	.+8      	; 0x1770 <round+0x3c>
    1768:	87 95       	ror	r24
    176a:	77 95       	ror	r23
    176c:	67 95       	ror	r22
    176e:	93 95       	inc	r25
    1770:	0c 94 9c 0a 	jmp	0x1538	; 0x1538 <__fp_mintl>
    1774:	0c 94 b7 0a 	jmp	0x156e	; 0x156e <__fp_mpack>
    1778:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <__fp_szero>

0000177c <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
    177c:	0e 94 82 0c 	call	0x1904	; 0x1904 <system_init>
    1780:	08 95       	ret

00001782 <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1782:	80 e0       	ldi	r24, 0x00	; 0
    1784:	08 c0       	rjmp	.+16     	; 0x1796 <mcu_init+0x14>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1786:	e8 2f       	mov	r30, r24
    1788:	f0 e0       	ldi	r31, 0x00	; 0
    178a:	e0 5f       	subi	r30, 0xF0	; 240
    178c:	fb 4f       	sbci	r31, 0xFB	; 251
    178e:	90 81       	ld	r25, Z
    1790:	98 60       	ori	r25, 0x08	; 8
    1792:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1794:	8f 5f       	subi	r24, 0xFF	; 255
    1796:	88 30       	cpi	r24, 0x08	; 8
    1798:	b0 f3       	brcs	.-20     	; 0x1786 <mcu_init+0x4>
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	08 c0       	rjmp	.+16     	; 0x17ae <mcu_init+0x2c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    179e:	e8 2f       	mov	r30, r24
    17a0:	f0 e0       	ldi	r31, 0x00	; 0
    17a2:	e0 5d       	subi	r30, 0xD0	; 208
    17a4:	fb 4f       	sbci	r31, 0xFB	; 251
    17a6:	90 81       	ld	r25, Z
    17a8:	98 60       	ori	r25, 0x08	; 8
    17aa:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    17ac:	8f 5f       	subi	r24, 0xFF	; 255
    17ae:	88 30       	cpi	r24, 0x08	; 8
    17b0:	b0 f3       	brcs	.-20     	; 0x179e <mcu_init+0x1c>
    17b2:	80 e0       	ldi	r24, 0x00	; 0
    17b4:	08 c0       	rjmp	.+16     	; 0x17c6 <mcu_init+0x44>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    17b6:	e8 2f       	mov	r30, r24
    17b8:	f0 e0       	ldi	r31, 0x00	; 0
    17ba:	e0 5b       	subi	r30, 0xB0	; 176
    17bc:	fb 4f       	sbci	r31, 0xFB	; 251
    17be:	90 81       	ld	r25, Z
    17c0:	98 60       	ori	r25, 0x08	; 8
    17c2:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    17c4:	8f 5f       	subi	r24, 0xFF	; 255
    17c6:	88 30       	cpi	r24, 0x08	; 8
    17c8:	b0 f3       	brcs	.-20     	; 0x17b6 <mcu_init+0x34>
    17ca:	80 e0       	ldi	r24, 0x00	; 0
    17cc:	08 c0       	rjmp	.+16     	; 0x17de <mcu_init+0x5c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    17ce:	e8 2f       	mov	r30, r24
    17d0:	f0 e0       	ldi	r31, 0x00	; 0
    17d2:	e0 59       	subi	r30, 0x90	; 144
    17d4:	fb 4f       	sbci	r31, 0xFB	; 251
    17d6:	90 81       	ld	r25, Z
    17d8:	98 60       	ori	r25, 0x08	; 8
    17da:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    17dc:	8f 5f       	subi	r24, 0xFF	; 255
    17de:	88 30       	cpi	r24, 0x08	; 8
    17e0:	b0 f3       	brcs	.-20     	; 0x17ce <mcu_init+0x4c>
    17e2:	80 e0       	ldi	r24, 0x00	; 0
    17e4:	08 c0       	rjmp	.+16     	; 0x17f6 <mcu_init+0x74>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    17e6:	e8 2f       	mov	r30, r24
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	e0 57       	subi	r30, 0x70	; 112
    17ec:	fb 4f       	sbci	r31, 0xFB	; 251
    17ee:	90 81       	ld	r25, Z
    17f0:	98 60       	ori	r25, 0x08	; 8
    17f2:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    17f4:	8f 5f       	subi	r24, 0xFF	; 255
    17f6:	88 30       	cpi	r24, 0x08	; 8
    17f8:	b0 f3       	brcs	.-20     	; 0x17e6 <mcu_init+0x64>
    17fa:	80 e0       	ldi	r24, 0x00	; 0
    17fc:	08 c0       	rjmp	.+16     	; 0x180e <mcu_init+0x8c>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    17fe:	e8 2f       	mov	r30, r24
    1800:	f0 e0       	ldi	r31, 0x00	; 0
    1802:	e0 55       	subi	r30, 0x50	; 80
    1804:	fb 4f       	sbci	r31, 0xFB	; 251
    1806:	90 81       	ld	r25, Z
    1808:	98 60       	ori	r25, 0x08	; 8
    180a:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    180c:	8f 5f       	subi	r24, 0xFF	; 255
    180e:	88 30       	cpi	r24, 0x08	; 8
    1810:	b0 f3       	brcs	.-20     	; 0x17fe <mcu_init+0x7c>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    1812:	08 95       	ret

00001814 <OPERATIONAL_AMPLIFIER_0_initialization>:
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1814:	e7 e7       	ldi	r30, 0x77	; 119
    1816:	f4 e0       	ldi	r31, 0x04	; 4
    1818:	80 81       	ld	r24, Z
    181a:	88 7f       	andi	r24, 0xF8	; 248
    181c:	84 60       	ori	r24, 0x04	; 4
    181e:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1820:	80 81       	ld	r24, Z
    1822:	87 7f       	andi	r24, 0xF7	; 247
    1824:	80 83       	st	Z, r24
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1826:	e5 e7       	ldi	r30, 0x75	; 117
    1828:	f4 e0       	ldi	r31, 0x04	; 4
    182a:	80 81       	ld	r24, Z
    182c:	88 7f       	andi	r24, 0xF8	; 248
    182e:	84 60       	ori	r24, 0x04	; 4
    1830:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1832:	80 81       	ld	r24, Z
    1834:	87 7f       	andi	r24, 0xF7	; 247
    1836:	80 83       	st	Z, r24
	// Disable digital input buffer
	PD5_set_isc(PORT_ISC_INPUT_DISABLE_gc);
	// Disable pull-up resistor
	PD5_set_pull_mode(PORT_PULL_OFF);

	OPERATIONAL_AMPLIFIER_0_init();
    1838:	0e 94 cc 0c 	call	0x1998	; 0x1998 <OPERATIONAL_AMPLIFIER_0_init>
    183c:	08 95       	ret

0000183e <USART_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    183e:	84 b1       	in	r24, 0x04	; 4
    1840:	8d 7f       	andi	r24, 0xFD	; 253
    1842:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1844:	e1 e3       	ldi	r30, 0x31	; 49
    1846:	f4 e0       	ldi	r31, 0x04	; 4
    1848:	80 81       	ld	r24, Z
    184a:	87 7f       	andi	r24, 0xF7	; 247
    184c:	80 83       	st	Z, r24
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    184e:	85 b1       	in	r24, 0x05	; 5
    1850:	8e 7f       	andi	r24, 0xFE	; 254
    1852:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1854:	84 b1       	in	r24, 0x04	; 4
    1856:	81 60       	ori	r24, 0x01	; 1
    1858:	84 b9       	out	0x04, r24	; 4
	    // <true"> High
	    false);

	PB0_set_dir(PORT_DIR_OUT);

	USART_0_init();
    185a:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <USART_0_init>
    185e:	08 95       	ret

00001860 <EVENT_SYSTEM_0_initialization>:
}

void EVENT_SYSTEM_0_initialization(void)
{

	EVENT_SYSTEM_0_init();
    1860:	0e 94 bb 0c 	call	0x1976	; 0x1976 <EVENT_SYSTEM_0_init>
    1864:	08 95       	ret

00001866 <ZCD_Rising_initialization>:
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1866:	e1 e7       	ldi	r30, 0x71	; 113
    1868:	f4 e0       	ldi	r31, 0x04	; 4
    186a:	80 81       	ld	r24, Z
    186c:	88 7f       	andi	r24, 0xF8	; 248
    186e:	84 60       	ori	r24, 0x04	; 4
    1870:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1872:	80 81       	ld	r24, Z
    1874:	87 7f       	andi	r24, 0xF7	; 247
    1876:	80 83       	st	Z, r24
	// Disable digital input buffer
	PD1_set_isc(PORT_ISC_INPUT_DISABLE_gc);
	// Disable pull-up resistor
	PD1_set_pull_mode(PORT_PULL_OFF);

	ZCD_Rising_init();
    1878:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <ZCD_Rising_init>
    187c:	08 95       	ret

0000187e <ZCD_Falling_initialization>:
 */
static inline void PORTE_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTE + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    187e:	e3 e9       	ldi	r30, 0x93	; 147
    1880:	f4 e0       	ldi	r31, 0x04	; 4
    1882:	80 81       	ld	r24, Z
    1884:	88 7f       	andi	r24, 0xF8	; 248
    1886:	84 60       	ori	r24, 0x04	; 4
    1888:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTE + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    188a:	80 81       	ld	r24, Z
    188c:	87 7f       	andi	r24, 0xF7	; 247
    188e:	80 83       	st	Z, r24
	// Disable digital input buffer
	PE3_set_isc(PORT_ISC_INPUT_DISABLE_gc);
	// Disable pull-up resistor
	PE3_set_pull_mode(PORT_PULL_OFF);

	ZCD_Falling_init();
    1890:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <ZCD_Falling_init>
    1894:	08 95       	ret

00001896 <SPI_ADF_initialization>:
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    1896:	80 b1       	in	r24, 0x00	; 0
    1898:	8f 7d       	andi	r24, 0xDF	; 223
    189a:	80 b9       	out	0x00, r24	; 0
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    189c:	e5 e1       	ldi	r30, 0x15	; 21
    189e:	f4 e0       	ldi	r31, 0x04	; 4
    18a0:	80 81       	ld	r24, Z
    18a2:	87 7f       	andi	r24, 0xF7	; 247
    18a4:	80 83       	st	Z, r24
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    18a6:	81 b1       	in	r24, 0x01	; 1
    18a8:	8f 7e       	andi	r24, 0xEF	; 239
    18aa:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    18ac:	80 b1       	in	r24, 0x00	; 0
    18ae:	80 61       	ori	r24, 0x10	; 16
    18b0:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    18b2:	81 b1       	in	r24, 0x01	; 1
    18b4:	8f 7b       	andi	r24, 0xBF	; 191
    18b6:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    18b8:	80 b1       	in	r24, 0x00	; 0
    18ba:	80 64       	ori	r24, 0x40	; 64
    18bc:	80 b9       	out	0x00, r24	; 0
	    // <true"> High
	    false);

	PA6_set_dir(PORT_DIR_OUT);

	SPI_ADF_init();
    18be:	0e 94 ef 0c 	call	0x19de	; 0x19de <SPI_ADF_init>
    18c2:	08 95       	ret

000018c4 <SPI_LMX_initialization>:
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    18c4:	88 b1       	in	r24, 0x08	; 8
    18c6:	8d 7f       	andi	r24, 0xFD	; 253
    18c8:	88 b9       	out	0x08, r24	; 8
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    18ca:	e1 e5       	ldi	r30, 0x51	; 81
    18cc:	f4 e0       	ldi	r31, 0x04	; 4
    18ce:	80 81       	ld	r24, Z
    18d0:	87 7f       	andi	r24, 0xF7	; 247
    18d2:	80 83       	st	Z, r24
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    18d4:	89 b1       	in	r24, 0x09	; 9
    18d6:	8e 7f       	andi	r24, 0xFE	; 254
    18d8:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    18da:	88 b1       	in	r24, 0x08	; 8
    18dc:	81 60       	ori	r24, 0x01	; 1
    18de:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    18e0:	89 b1       	in	r24, 0x09	; 9
    18e2:	8b 7f       	andi	r24, 0xFB	; 251
    18e4:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    18e6:	88 b1       	in	r24, 0x08	; 8
    18e8:	84 60       	ori	r24, 0x04	; 4
    18ea:	88 b9       	out	0x08, r24	; 8
	    // <true"> High
	    false);

	PC2_set_dir(PORT_DIR_OUT);

	SPI_LMX_init();
    18ec:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <SPI_LMX_init>
    18f0:	08 95       	ret

000018f2 <TIMER_RISING_initialization>:
}

void TIMER_RISING_initialization(void)
{

	TIMER_RISING_init();
    18f2:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <TIMER_RISING_init>
    18f6:	08 95       	ret

000018f8 <TIMER_Falling_initialization>:
}

void TIMER_Falling_initialization(void)
{

	TIMER_Falling_init();
    18f8:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <TIMER_Falling_init>
    18fc:	08 95       	ret

000018fe <TIMER_C_initialization>:
}

void TIMER_C_initialization(void)
{

	TIMER_C_init();
    18fe:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <TIMER_C_init>
    1902:	08 95       	ret

00001904 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    1904:	0e 94 c1 0b 	call	0x1782	; 0x1782 <mcu_init>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1908:	81 b1       	in	r24, 0x01	; 1
    190a:	8f 77       	andi	r24, 0x7F	; 127
    190c:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    190e:	80 b1       	in	r24, 0x00	; 0
    1910:	80 68       	ori	r24, 0x80	; 128
    1912:	80 b9       	out	0x00, r24	; 0
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1914:	85 b1       	in	r24, 0x05	; 5
    1916:	87 7f       	andi	r24, 0xF7	; 247
    1918:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    191a:	84 b1       	in	r24, 0x04	; 4
    191c:	88 60       	ori	r24, 0x08	; 8
    191e:	84 b9       	out	0x04, r24	; 4
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
    1920:	89 b1       	in	r24, 0x09	; 9
    1922:	88 60       	ori	r24, 0x08	; 8
    1924:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1926:	88 b1       	in	r24, 0x08	; 8
    1928:	88 60       	ori	r24, 0x08	; 8
    192a:	88 b9       	out	0x08, r24	; 8
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTD.OUT |= (1 << pin);
	} else {
		VPORTD.OUT &= ~(1 << pin);
    192c:	8d b1       	in	r24, 0x0d	; 13
    192e:	8b 7f       	andi	r24, 0xFB	; 251
    1930:	8d b9       	out	0x0d, r24	; 13
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTD.DIR |= (1 << pin);
    1932:	8c b1       	in	r24, 0x0c	; 12
    1934:	84 60       	ori	r24, 0x04	; 4
    1936:	8c b9       	out	0x0c, r24	; 12
	    // <true"> High
	    false);

	LTC_ENABLE_set_dir(PORT_DIR_OUT);

	OPERATIONAL_AMPLIFIER_0_initialization();
    1938:	0e 94 0a 0c 	call	0x1814	; 0x1814 <OPERATIONAL_AMPLIFIER_0_initialization>

	CLKCTRL_init();
    193c:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <CLKCTRL_init>

	USART_0_initialization();
    1940:	0e 94 1f 0c 	call	0x183e	; 0x183e <USART_0_initialization>

	EVENT_SYSTEM_0_initialization();
    1944:	0e 94 30 0c 	call	0x1860	; 0x1860 <EVENT_SYSTEM_0_initialization>

	SLPCTRL_init();
    1948:	0e 94 ed 0c 	call	0x19da	; 0x19da <SLPCTRL_init>

	CPUINT_init();
    194c:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <CPUINT_init>

	ZCD_Rising_initialization();
    1950:	0e 94 33 0c 	call	0x1866	; 0x1866 <ZCD_Rising_initialization>

	ZCD_Falling_initialization();
    1954:	0e 94 3f 0c 	call	0x187e	; 0x187e <ZCD_Falling_initialization>

	SPI_ADF_initialization();
    1958:	0e 94 4b 0c 	call	0x1896	; 0x1896 <SPI_ADF_initialization>

	SPI_LMX_initialization();
    195c:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <SPI_LMX_initialization>

	RTC_0_init();
    1960:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <RTC_0_init>

	TIMER_RISING_initialization();
    1964:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <TIMER_RISING_initialization>

	TIMER_Falling_initialization();
    1968:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <TIMER_Falling_initialization>

	TIMER_C_initialization();
    196c:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <TIMER_C_initialization>

	BOD_init();
    1970:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <BOD_init>
    1974:	08 95       	ret

00001976 <EVENT_SYSTEM_0_init>:
 * \return Initialization status.
 */
int8_t EVENT_SYSTEM_0_init()
{

	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_ZCD0_gc; /* Zero Cross Detect 0 out */
    1976:	e0 e0       	ldi	r30, 0x00	; 0
    1978:	f2 e0       	ldi	r31, 0x02	; 2
    197a:	80 e3       	ldi	r24, 0x30	; 48
    197c:	80 8b       	std	Z+16, r24	; 0x10

	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_ZCD1_gc; /* Zero Cross Detect 1 out */
    197e:	81 e3       	ldi	r24, 0x31	; 49
    1980:	81 8b       	std	Z+17, r24	; 0x11

	// EVSYS.USERTCA1CNTA = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USERTCA1CNTB = EVSYS_USER_OFF_gc; /* Off */

	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; /* Connect user to event channel 0 */
    1982:	91 e0       	ldi	r25, 0x01	; 1
    1984:	96 af       	std	Z+62, r25	; 0x3e

	// EVSYS.USERTCB1CAPT = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USERTCB1COUNT = EVSYS_USER_OFF_gc; /* Off */

	EVSYS.USERTCB2CAPT = EVSYS_USER_CHANNEL1_gc; /* Connect user to event channel 1 */
    1986:	82 e0       	ldi	r24, 0x02	; 2
    1988:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <__TEXT_REGION_LENGTH__+0x7e0242>

	// EVSYS.USERTCB3CAPT = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USERTCB3COUNT = EVSYS_USER_OFF_gc; /* Off */

	EVSYS.USERTCD0INPUTA = EVSYS_USER_CHANNEL0_gc; /* Connect user to event channel 0 */
    198c:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <__TEXT_REGION_LENGTH__+0x7e0248>

	EVSYS.USERTCD0INPUTB = EVSYS_USER_CHANNEL1_gc; /* Connect user to event channel 1 */
    1990:	80 93 49 02 	sts	0x0249, r24	; 0x800249 <__TEXT_REGION_LENGTH__+0x7e0249>
	// EVSYS.USEROPAMP2DUMP = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USEROPAMP2DISABLE = EVSYS_USER_OFF_gc; /* Off */

	return 0;
}
    1994:	80 e0       	ldi	r24, 0x00	; 0
    1996:	08 95       	ret

00001998 <OPERATIONAL_AMPLIFIER_0_init>:
 * \return Initialization status.
 */
int8_t OPERATIONAL_AMPLIFIER_0_init()
{

	OPAMP.CTRLA = 1 << OPAMP_ENABLE_bp; /* OPAMP Peripheral Enable: enabled */
    1998:	e0 e0       	ldi	r30, 0x00	; 0
    199a:	f7 e0       	ldi	r31, 0x07	; 7
    199c:	81 e0       	ldi	r24, 0x01	; 1
    199e:	80 83       	st	Z, r24

	// OPAMP.DBGCTRL = 0 << OPAMP_DBGRUN_bp; /* Run in Debug mode: disabled */

	OPAMP.TIMEBASE = OPAMP_TIMEBASE_VALUE << OPAMP_TIMEBASE_gp;
    19a0:	87 e1       	ldi	r24, 0x17	; 23
    19a2:	82 83       	std	Z+2, r24	; 0x02

	// OPAMP.PWRCTRL = OPAMP_PWRCTRL_IRSEL_FULL_gc; /* Full Input Range */

	OPAMP.OP1SETTLE = 0x7f << OPAMP_SETTLE_gp; /* Setting: 0x7f */
    19a4:	8f e7       	ldi	r24, 0x7F	; 127
    19a6:	84 8f       	std	Z+28, r24	; 0x1c

	OPAMP.OP1CTRLA = 1 << OPAMP_ALWAYSON_bp             /* Always ON: enabled */
    19a8:	85 e8       	ldi	r24, 0x85	; 133
    19aa:	80 8f       	std	Z+24, r24	; 0x18
	                 | 0 << OPAMP_EVENTEN_bp            /* Event Enable: disabled */
	                 | OPAMP_OP1CTRLA_OUTMODE_NORMAL_gc /* Output Driver in Normal Mode */
	                 | 1 << OPAMP_RUNSTBY_bp;           /* Run is standby mode: enabled */

	OPAMP.OP1RESMUX = OPAMP_OP1RESMUX_MUXTOP_OUT_gc     /* OPn output */
    19ac:	89 ee       	ldi	r24, 0xE9	; 233
    19ae:	82 8f       	std	Z+26, r24	; 0x1a
	                  | OPAMP_OP1RESMUX_MUXBOT_INN_gc   /* Negative input pin for OPn */
	                  | OPAMP_OP1RESMUX_MUXWIP_WIP7_gc; /* R1 = 1R, R2 = 15R, R2/R1 = 15 */

	OPAMP.OP1INMUX = OPAMP_OP1INMUX_MUXPOS_VDDDIV2_gc /* VDD/2 */
    19b0:	84 e1       	ldi	r24, 0x14	; 20
    19b2:	83 8f       	std	Z+27, r24	; 0x1b
	                 | OPAMP_OP1INMUX_MUXNEG_WIP_gc;  /* Wiper from OPn's resistor ladder */

	return 0;
}
    19b4:	80 e0       	ldi	r24, 0x00	; 0
    19b6:	08 95       	ret

000019b8 <RTC_0_init>:
 * \return Initialization status.
 */
int8_t RTC_0_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
    19b8:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
    19bc:	81 11       	cpse	r24, r1
    19be:	fc cf       	rjmp	.-8      	; 0x19b8 <RTC_0_init>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV32_gc  /* 32 */
    19c0:	e0 e4       	ldi	r30, 0x40	; 64
    19c2:	f1 e0       	ldi	r31, 0x01	; 1
    19c4:	88 ea       	ldi	r24, 0xA8	; 168
    19c6:	80 83       	st	Z, r24
	            | 0 << RTC_RTCEN_bp     /* Enable: disabled */
	            | 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */

	RTC.PER = 0x1ff; /* Period: 0x1ff */
    19c8:	8f ef       	ldi	r24, 0xFF	; 255
    19ca:	91 e0       	ldi	r25, 0x01	; 1
    19cc:	82 87       	std	Z+10, r24	; 0x0a
    19ce:	93 87       	std	Z+11, r25	; 0x0b

	RTC.CLKSEL = RTC_CLKSEL_OSC32K_gc; /* Internal 32.768 kHz oscillator */
    19d0:	17 82       	std	Z+7, r1	; 0x07

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 0 << RTC_CMP_bp    /* Compare Match Interrupt enable: disabled */
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	82 83       	std	Z+2, r24	; 0x02
	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	// RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */

	return 0;
}
    19d6:	80 e0       	ldi	r24, 0x00	; 0
    19d8:	08 95       	ret

000019da <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    19da:	80 e0       	ldi	r24, 0x00	; 0
    19dc:	08 95       	ret

000019de <SPI_ADF_init>:
	SPI_LMX_desc.data   = (uint8_t *)block;
	SPI_LMX_desc.size   = size;
	SPI_LMX_desc.type   = SPI_EXCHANGE;
	SPI_LMX_desc.status = SPI_BUSY;

	SPI1.DATA = *SPI_LMX_desc.data;
    19de:	e0 e4       	ldi	r30, 0x40	; 64
    19e0:	f9 e0       	ldi	r31, 0x09	; 9
    19e2:	81 e2       	ldi	r24, 0x21	; 33
    19e4:	80 83       	st	Z, r24
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	82 83       	std	Z+2, r24	; 0x02
    19ea:	10 92 66 43 	sts	0x4366, r1	; 0x804366 <SPI_ADF_desc>
    19ee:	08 95       	ret

000019f0 <SPI_LMX_init>:
    19f0:	e0 e6       	ldi	r30, 0x60	; 96
    19f2:	f9 e0       	ldi	r31, 0x09	; 9
    19f4:	81 e2       	ldi	r24, 0x21	; 33
    19f6:	80 83       	st	Z, r24
    19f8:	81 e0       	ldi	r24, 0x01	; 1
    19fa:	82 83       	std	Z+2, r24	; 0x02
    19fc:	ef e5       	ldi	r30, 0x5F	; 95
    19fe:	f3 e4       	ldi	r31, 0x43	; 67
    1a00:	10 82       	st	Z, r1
    1a02:	15 82       	std	Z+5, r1	; 0x05
    1a04:	16 82       	std	Z+6, r1	; 0x06
    1a06:	08 95       	ret

00001a08 <SPI_LMX_enable>:
    1a08:	e0 e6       	ldi	r30, 0x60	; 96
    1a0a:	f9 e0       	ldi	r31, 0x09	; 9
    1a0c:	80 81       	ld	r24, Z
    1a0e:	81 60       	ori	r24, 0x01	; 1
    1a10:	80 83       	st	Z, r24
    1a12:	08 95       	ret

00001a14 <SPI_LMX_register_callback>:
    1a14:	80 93 64 43 	sts	0x4364, r24	; 0x804364 <SPI_LMX_desc+0x5>
    1a18:	90 93 65 43 	sts	0x4365, r25	; 0x804365 <SPI_LMX_desc+0x6>
    1a1c:	08 95       	ret

00001a1e <__vector_37>:
    1a1e:	1f 92       	push	r1
    1a20:	0f 92       	push	r0
    1a22:	0f b6       	in	r0, 0x3f	; 63
    1a24:	0f 92       	push	r0
    1a26:	11 24       	eor	r1, r1
    1a28:	0b b6       	in	r0, 0x3b	; 59
    1a2a:	0f 92       	push	r0
    1a2c:	2f 93       	push	r18
    1a2e:	3f 93       	push	r19
    1a30:	4f 93       	push	r20
    1a32:	5f 93       	push	r21
    1a34:	6f 93       	push	r22
    1a36:	7f 93       	push	r23
    1a38:	8f 93       	push	r24
    1a3a:	9f 93       	push	r25
    1a3c:	af 93       	push	r26
    1a3e:	bf 93       	push	r27
    1a40:	ef 93       	push	r30
    1a42:	ff 93       	push	r31
    1a44:	e0 e6       	ldi	r30, 0x60	; 96
    1a46:	f9 e0       	ldi	r31, 0x09	; 9
    1a48:	94 81       	ldd	r25, Z+4	; 0x04
    1a4a:	80 e8       	ldi	r24, 0x80	; 128
    1a4c:	83 83       	std	Z+3, r24	; 0x03
    1a4e:	80 91 63 43 	lds	r24, 0x4363	; 0x804363 <SPI_LMX_desc+0x4>
    1a52:	82 30       	cpi	r24, 0x02	; 2
    1a54:	29 f0       	breq	.+10     	; 0x1a60 <__vector_37+0x42>
    1a56:	e0 91 60 43 	lds	r30, 0x4360	; 0x804360 <SPI_LMX_desc+0x1>
    1a5a:	f0 91 61 43 	lds	r31, 0x4361	; 0x804361 <SPI_LMX_desc+0x2>
    1a5e:	90 83       	st	Z, r25
    1a60:	ef e5       	ldi	r30, 0x5F	; 95
    1a62:	f3 e4       	ldi	r31, 0x43	; 67
    1a64:	a1 81       	ldd	r26, Z+1	; 0x01
    1a66:	b2 81       	ldd	r27, Z+2	; 0x02
    1a68:	9d 01       	movw	r18, r26
    1a6a:	2f 5f       	subi	r18, 0xFF	; 255
    1a6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a6e:	21 83       	std	Z+1, r18	; 0x01
    1a70:	32 83       	std	Z+2, r19	; 0x02
    1a72:	81 30       	cpi	r24, 0x01	; 1
    1a74:	19 f0       	breq	.+6      	; 0x1a7c <__vector_37+0x5e>
    1a76:	11 96       	adiw	r26, 0x01	; 1
    1a78:	9c 91       	ld	r25, X
    1a7a:	01 c0       	rjmp	.+2      	; 0x1a7e <__vector_37+0x60>
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	ef e5       	ldi	r30, 0x5F	; 95
    1a80:	f3 e4       	ldi	r31, 0x43	; 67
    1a82:	83 81       	ldd	r24, Z+3	; 0x03
    1a84:	81 50       	subi	r24, 0x01	; 1
    1a86:	83 83       	std	Z+3, r24	; 0x03
    1a88:	88 23       	and	r24, r24
    1a8a:	19 f0       	breq	.+6      	; 0x1a92 <__vector_37+0x74>
    1a8c:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <__TEXT_REGION_LENGTH__+0x7e0964>
    1a90:	0a c0       	rjmp	.+20     	; 0x1aa6 <__vector_37+0x88>
    1a92:	ef e5       	ldi	r30, 0x5F	; 95
    1a94:	f3 e4       	ldi	r31, 0x43	; 67
    1a96:	83 e0       	ldi	r24, 0x03	; 3
    1a98:	80 83       	st	Z, r24
    1a9a:	05 80       	ldd	r0, Z+5	; 0x05
    1a9c:	f6 81       	ldd	r31, Z+6	; 0x06
    1a9e:	e0 2d       	mov	r30, r0
    1aa0:	30 97       	sbiw	r30, 0x00	; 0
    1aa2:	09 f0       	breq	.+2      	; 0x1aa6 <__vector_37+0x88>
    1aa4:	09 95       	icall
    1aa6:	ff 91       	pop	r31
    1aa8:	ef 91       	pop	r30
    1aaa:	bf 91       	pop	r27
    1aac:	af 91       	pop	r26
    1aae:	9f 91       	pop	r25
    1ab0:	8f 91       	pop	r24
    1ab2:	7f 91       	pop	r23
    1ab4:	6f 91       	pop	r22
    1ab6:	5f 91       	pop	r21
    1ab8:	4f 91       	pop	r20
    1aba:	3f 91       	pop	r19
    1abc:	2f 91       	pop	r18
    1abe:	0f 90       	pop	r0
    1ac0:	0b be       	out	0x3b, r0	; 59
    1ac2:	0f 90       	pop	r0
    1ac4:	0f be       	out	0x3f, r0	; 63
    1ac6:	0f 90       	pop	r0
    1ac8:	1f 90       	pop	r1
    1aca:	18 95       	reti

00001acc <SPI_LMX_status_busy>:
    1acc:	90 91 5f 43 	lds	r25, 0x435F	; 0x80435f <SPI_LMX_desc>
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	92 30       	cpi	r25, 0x02	; 2
    1ad4:	09 f0       	breq	.+2      	; 0x1ad8 <SPI_LMX_status_busy+0xc>
    1ad6:	80 e0       	ldi	r24, 0x00	; 0
    1ad8:	08 95       	ret

00001ada <SPI_LMX_write_block>:
}

void SPI_LMX_write_block(void *block, uint8_t size)
{
	SPI_LMX_desc.data   = (uint8_t *)block;
    1ada:	ef e5       	ldi	r30, 0x5F	; 95
    1adc:	f3 e4       	ldi	r31, 0x43	; 67
    1ade:	81 83       	std	Z+1, r24	; 0x01
    1ae0:	92 83       	std	Z+2, r25	; 0x02
	SPI_LMX_desc.size   = size;
    1ae2:	63 83       	std	Z+3, r22	; 0x03
	SPI_LMX_desc.type   = SPI_WRITE;
    1ae4:	22 e0       	ldi	r18, 0x02	; 2
    1ae6:	24 83       	std	Z+4, r18	; 0x04
	SPI_LMX_desc.status = SPI_BUSY;
    1ae8:	20 83       	st	Z, r18

	SPI1.DATA = *SPI_LMX_desc.data;
    1aea:	fc 01       	movw	r30, r24
    1aec:	80 81       	ld	r24, Z
    1aee:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <__TEXT_REGION_LENGTH__+0x7e0964>
    1af2:	08 95       	ret

00001af4 <SPI_LMX_read_block>:
}

void SPI_LMX_read_block(void *block, uint8_t size)
{
	SPI_LMX_desc.data   = (uint8_t *)block;
    1af4:	ef e5       	ldi	r30, 0x5F	; 95
    1af6:	f3 e4       	ldi	r31, 0x43	; 67
    1af8:	81 83       	std	Z+1, r24	; 0x01
    1afa:	92 83       	std	Z+2, r25	; 0x02
	SPI_LMX_desc.size   = size;
    1afc:	63 83       	std	Z+3, r22	; 0x03
	SPI_LMX_desc.type   = SPI_READ;
    1afe:	81 e0       	ldi	r24, 0x01	; 1
    1b00:	84 83       	std	Z+4, r24	; 0x04
	SPI_LMX_desc.status = SPI_BUSY;
    1b02:	82 e0       	ldi	r24, 0x02	; 2
    1b04:	80 83       	st	Z, r24

	SPI1.DATA = 0;
    1b06:	10 92 64 09 	sts	0x0964, r1	; 0x800964 <__TEXT_REGION_LENGTH__+0x7e0964>
    1b0a:	08 95       	ret

00001b0c <TIMER_RISING_init>:
 * \return Initialization status.
 */
int8_t TIMER_RISING_init()
{

	TCB0.CCMP = 0xffff; /* Compare or Capture: 0xffff */
    1b0c:	e0 e0       	ldi	r30, 0x00	; 0
    1b0e:	fb e0       	ldi	r31, 0x0B	; 11
    1b10:	8f ef       	ldi	r24, 0xFF	; 255
    1b12:	9f ef       	ldi	r25, 0xFF	; 255
    1b14:	84 87       	std	Z+12, r24	; 0x0c
    1b16:	95 87       	std	Z+13, r25	; 0x0d

	TCB0.CNT = 0xffff; /* Count: 0xffff */
    1b18:	82 87       	std	Z+10, r24	; 0x0a
    1b1a:	93 87       	std	Z+11, r25	; 0x0b

	TCB0.CTRLB = 1 << TCB_ASYNC_bp      /* Asynchronous Enable: enabled */
    1b1c:	83 e4       	ldi	r24, 0x43	; 67
    1b1e:	81 83       	std	Z+1, r24	; 0x01
	             | 0 << TCB_CCMPEN_bp   /* Pin Output Enable: disabled */
	             | 0 << TCB_CCMPINIT_bp /* Pin Initial State: disabled */
	             | TCB_CNTMODE_FRQ_gc;  /* Input Capture Frequency measurement */

	TCB0.DBGCTRL = 1 << TCB_DBGRUN_bp; /* Debug Run: enabled */
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	80 87       	std	Z+8, r24	; 0x08

	TCB0.EVCTRL = 1 << TCB_CAPTEI_bp    /* Event Input Enable: enabled */
    1b24:	84 83       	std	Z+4, r24	; 0x04
	              | 0 << TCB_EDGE_bp    /* Event Edge: disabled */
	              | 0 << TCB_FILTER_bp; /* Input Capture Noise Cancellation Filter: disabled */

	TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    1b26:	85 83       	std	Z+5, r24	; 0x05
	               | 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

	TCB0.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    1b28:	81 e4       	ldi	r24, 0x41	; 65
    1b2a:	80 83       	st	Z, r24
	             | 1 << TCB_RUNSTDBY_bp /* Run Standby: enabled */
	             | 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
	             | 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

	return 0;
}
    1b2c:	80 e0       	ldi	r24, 0x00	; 0
    1b2e:	08 95       	ret

00001b30 <TIMER_Falling_init>:

	// TCB2.CCMP = 0x0; /* Compare or Capture: 0x0 */

	// TCB2.CNT = 0x0; /* Count: 0x0 */

	TCB2.CTRLB = 1 << TCB_ASYNC_bp      /* Asynchronous Enable: enabled */
    1b30:	e0 e2       	ldi	r30, 0x20	; 32
    1b32:	fb e0       	ldi	r31, 0x0B	; 11
    1b34:	83 e4       	ldi	r24, 0x43	; 67
    1b36:	81 83       	std	Z+1, r24	; 0x01
	             | 0 << TCB_CCMPEN_bp   /* Pin Output Enable: disabled */
	             | 0 << TCB_CCMPINIT_bp /* Pin Initial State: disabled */
	             | TCB_CNTMODE_FRQ_gc;  /* Input Capture Frequency measurement */

	TCB2.DBGCTRL = 1 << TCB_DBGRUN_bp; /* Debug Run: enabled */
    1b38:	81 e0       	ldi	r24, 0x01	; 1
    1b3a:	80 87       	std	Z+8, r24	; 0x08

	TCB2.EVCTRL = 1 << TCB_CAPTEI_bp    /* Event Input Enable: enabled */
    1b3c:	84 83       	std	Z+4, r24	; 0x04
	              | 0 << TCB_EDGE_bp    /* Event Edge: disabled */
	              | 0 << TCB_FILTER_bp; /* Input Capture Noise Cancellation Filter: disabled */

	TCB2.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    1b3e:	85 83       	std	Z+5, r24	; 0x05
	               | 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

	TCB2.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    1b40:	81 e4       	ldi	r24, 0x41	; 65
    1b42:	80 83       	st	Z, r24
	             | 1 << TCB_RUNSTDBY_bp /* Run Standby: enabled */
	             | 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
	             | 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

	return 0;
}
    1b44:	80 e0       	ldi	r24, 0x00	; 0
    1b46:	08 95       	ret

00001b48 <TIMER_C_init>:
int8_t TIMER_C_init()
{

	// Enable Protected register, peripheral must be disabled (ENABLE=0, in TCD.CTRLA).

	TCD0.CMPASET = 4095; /* Compare A Set: 4095 */
    1b48:	e0 e8       	ldi	r30, 0x80	; 128
    1b4a:	fb e0       	ldi	r31, 0x0B	; 11
    1b4c:	8f ef       	ldi	r24, 0xFF	; 255
    1b4e:	9f e0       	ldi	r25, 0x0F	; 15
    1b50:	80 a7       	std	Z+40, r24	; 0x28
    1b52:	91 a7       	std	Z+41, r25	; 0x29

	// TCD0.CMPACLR = 0; /* Compare A Clear: 0 */

	TCD0.CMPBSET = 4095; /* Compare B Set: 4095 */
    1b54:	84 a7       	std	Z+44, r24	; 0x2c
    1b56:	95 a7       	std	Z+45, r25	; 0x2d
	//		 | TCD_DLYTRIG_CMPASET_gc; /* Compare A set */

	// TCD0.DLYVAL = 0 << TCD_DLYVAL_gp; /* Delay value: 0 */

	TCD0.EVCTRLA
	    = TCD_CFG_NEITHER_gc      /* Neither Filter nor Asynchronous Event is enabled */
    1b58:	85 e1       	ldi	r24, 0x15	; 21
    1b5a:	80 87       	std	Z+8, r24	; 0x08
	      | TCD_ACTION_CAPTURE_gc /* Event trigger a fault and capture */
	      | TCD_EDGE_RISE_HIGH_gc /* The rising edge or high level of event generates retrigger or fault action */
	      | 1 << TCD_TRIGEI_bp;   /* Trigger event enable: enabled */

	TCD0.EVCTRLB
	    = TCD_CFG_NEITHER_gc      /* Neither Filter nor Asynchronous Event is enabled */
    1b5c:	81 87       	std	Z+9, r24	; 0x09

	// TCD0.INPUTCTRLA = TCD_INPUTMODE_NONE_gc; /* Input has no actions */

	// TCD0.INPUTCTRLB = TCD_INPUTMODE_NONE_gc; /* Input has no actions */

	TCD0.INTCTRL = 0 << TCD_OVF_bp      /* Overflow interrupt enable: disabled */
    1b5e:	8c e0       	ldi	r24, 0x0C	; 12
    1b60:	84 87       	std	Z+12, r24	; 0x0c
	               | 1 << TCD_TRIGA_bp  /* Trigger A interrupt enable: enabled */
	               | 1 << TCD_TRIGB_bp; /* Trigger B interrupt enable: enabled */

	while ((TCD0.STATUS & TCD_ENRDY_bm) == 0)
    1b62:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <__TEXT_REGION_LENGTH__+0x7e0b8e>
    1b66:	80 ff       	sbrs	r24, 0
    1b68:	fc cf       	rjmp	.-8      	; 0x1b62 <TIMER_C_init+0x1a>
		; // Wait for Enable Ready to be high.

	TCD0.CTRLA = 1 << TCD_ENABLE_bp      /* Enable: enabled */
    1b6a:	81 e2       	ldi	r24, 0x21	; 33
    1b6c:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <__TEXT_REGION_LENGTH__+0x7e0b80>
	             | TCD_CLKSEL_PLL_gc     /*  */
	             | TCD_CNTPRES_DIV1_gc   /* Sync clock divided by 1 */
	             | TCD_SYNCPRES_DIV1_gc; /*  */

	return 0;
}
    1b70:	80 e0       	ldi	r24, 0x00	; 0
    1b72:	08 95       	ret

00001b74 <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(USART3.STATUS & USART_RXCIF_bm))
		;
	return USART3.RXDATAL;
}
    1b74:	e0 e6       	ldi	r30, 0x60	; 96
    1b76:	f8 e0       	ldi	r31, 0x08	; 8
    1b78:	81 e4       	ldi	r24, 0x41	; 65
    1b7a:	93 e0       	ldi	r25, 0x03	; 3
    1b7c:	80 87       	std	Z+8, r24	; 0x08
    1b7e:	91 87       	std	Z+9, r25	; 0x09
    1b80:	80 ec       	ldi	r24, 0xC0	; 192
    1b82:	86 83       	std	Z+6, r24	; 0x06
    1b84:	80 e0       	ldi	r24, 0x00	; 0
    1b86:	90 e4       	ldi	r25, 0x40	; 64
    1b88:	80 93 69 43 	sts	0x4369, r24	; 0x804369 <__iob+0x2>
    1b8c:	90 93 6a 43 	sts	0x436A, r25	; 0x80436a <__iob+0x3>
    1b90:	80 e0       	ldi	r24, 0x00	; 0
    1b92:	08 95       	ret

00001b94 <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(USART3.STATUS & USART_DREIF_bm))
    1b94:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
    1b98:	95 ff       	sbrs	r25, 5
    1b9a:	fc cf       	rjmp	.-8      	; 0x1b94 <USART_0_write>
		;
	USART3.TXDATAL = data;
    1b9c:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
    1ba0:	08 95       	ret

00001ba2 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
    1ba2:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <USART_0_write>
	return 0;
}
    1ba6:	80 e0       	ldi	r24, 0x00	; 0
    1ba8:	90 e0       	ldi	r25, 0x00	; 0
    1baa:	08 95       	ret

00001bac <ZCD_Rising_init>:
 * \return Initialization status.
 */
int8_t ZCD_Rising_init()
{

	ZCD0.CTRLA = 1 << ZCD_ENABLE_bp     /* Setting: enabled */
    1bac:	e0 ec       	ldi	r30, 0xC0	; 192
    1bae:	f6 e0       	ldi	r31, 0x06	; 6
    1bb0:	81 e8       	ldi	r24, 0x81	; 129
    1bb2:	80 83       	st	Z, r24
	             | 0 << ZCD_OUTEN_bp    /* Setting: disabled */
	             | 1 << ZCD_RUNSTDBY_bp /* Setting: enabled */
	             | 0 << ZCD_INVERT_bp;  /* Setting: disabled */

	ZCD0.INTCTRL = ZCD_INTMODE_RISING_gc; /* Interrupt on rising input signal */
    1bb4:	81 e0       	ldi	r24, 0x01	; 1
    1bb6:	82 83       	std	Z+2, r24	; 0x02

	return 0;
}
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	08 95       	ret

00001bbc <ZCD_Falling_init>:
 * \return Initialization status.
 */
int8_t ZCD_Falling_init()
{

	ZCD1.CTRLA = 1 << ZCD_ENABLE_bp     /* Setting: enabled */
    1bbc:	e8 ec       	ldi	r30, 0xC8	; 200
    1bbe:	f6 e0       	ldi	r31, 0x06	; 6
    1bc0:	81 e8       	ldi	r24, 0x81	; 129
    1bc2:	80 83       	st	Z, r24
	             | 0 << ZCD_OUTEN_bp    /* Setting: disabled */
	             | 1 << ZCD_RUNSTDBY_bp /* Setting: enabled */
	             | 0 << ZCD_INVERT_bp;  /* Setting: disabled */

	ZCD1.INTCTRL = ZCD_INTMODE_FALLING_gc; /* Interrupt on falling input signal */
    1bc4:	82 e0       	ldi	r24, 0x02	; 2
    1bc6:	82 83       	std	Z+2, r24	; 0x02

	return 0;
}
    1bc8:	80 e0       	ldi	r24, 0x00	; 0
    1bca:	08 95       	ret

00001bcc <BOD_init>:
int8_t BOD_init()
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    1bcc:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7e00a9>
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	08 95       	ret

00001bd4 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    1bd4:	45 e8       	ldi	r20, 0x85	; 133
    1bd6:	68 ed       	ldi	r22, 0xD8	; 216
    1bd8:	8c e7       	ldi	r24, 0x7C	; 124
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <protected_write_io>
    1be0:	41 e8       	ldi	r20, 0x81	; 129
    1be2:	68 ed       	ldi	r22, 0xD8	; 216
    1be4:	80 e7       	ldi	r24, 0x70	; 112
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <protected_write_io>
    1bec:	4c e0       	ldi	r20, 0x0C	; 12
    1bee:	68 ed       	ldi	r22, 0xD8	; 216
    1bf0:	80 e8       	ldi	r24, 0x80	; 128
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <protected_write_io>
    1bf8:	44 e2       	ldi	r20, 0x24	; 36
    1bfa:	68 ed       	ldi	r22, 0xD8	; 216
    1bfc:	88 e6       	ldi	r24, 0x68	; 104
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
    1c00:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <protected_write_io>
	/* wait for PLL to start 
	while (!(CLKCTRL.MCLKSTATUS & CLKCTRL_PLLS_bm))
		;*/

	return 0;
}
    1c04:	80 e0       	ldi	r24, 0x00	; 0
    1c06:	08 95       	ret

00001c08 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    1c08:	78 94       	sei

	return 0;
}
    1c0a:	80 e0       	ldi	r24, 0x00	; 0
    1c0c:	08 95       	ret

00001c0e <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    1c0e:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    1c10:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    1c12:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    1c14:	40 83       	st	Z, r20
	ret                             // Return to caller
    1c16:	08 95       	ret

00001c18 <vfprintf>:
    1c18:	2f 92       	push	r2
    1c1a:	3f 92       	push	r3
    1c1c:	4f 92       	push	r4
    1c1e:	5f 92       	push	r5
    1c20:	6f 92       	push	r6
    1c22:	7f 92       	push	r7
    1c24:	8f 92       	push	r8
    1c26:	9f 92       	push	r9
    1c28:	af 92       	push	r10
    1c2a:	bf 92       	push	r11
    1c2c:	cf 92       	push	r12
    1c2e:	df 92       	push	r13
    1c30:	ef 92       	push	r14
    1c32:	ff 92       	push	r15
    1c34:	0f 93       	push	r16
    1c36:	1f 93       	push	r17
    1c38:	cf 93       	push	r28
    1c3a:	df 93       	push	r29
    1c3c:	cd b7       	in	r28, 0x3d	; 61
    1c3e:	de b7       	in	r29, 0x3e	; 62
    1c40:	60 97       	sbiw	r28, 0x10	; 16
    1c42:	cd bf       	out	0x3d, r28	; 61
    1c44:	de bf       	out	0x3e, r29	; 62
    1c46:	7c 01       	movw	r14, r24
    1c48:	1b 01       	movw	r2, r22
    1c4a:	6a 01       	movw	r12, r20
    1c4c:	fc 01       	movw	r30, r24
    1c4e:	16 82       	std	Z+6, r1	; 0x06
    1c50:	17 82       	std	Z+7, r1	; 0x07
    1c52:	83 81       	ldd	r24, Z+3	; 0x03
    1c54:	81 ff       	sbrs	r24, 1
    1c56:	44 c3       	rjmp	.+1672   	; 0x22e0 <vfprintf+0x6c8>
    1c58:	9e 01       	movw	r18, r28
    1c5a:	2f 5f       	subi	r18, 0xFF	; 255
    1c5c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c5e:	39 01       	movw	r6, r18
    1c60:	f7 01       	movw	r30, r14
    1c62:	93 81       	ldd	r25, Z+3	; 0x03
    1c64:	f1 01       	movw	r30, r2
    1c66:	93 fd       	sbrc	r25, 3
    1c68:	85 91       	lpm	r24, Z+
    1c6a:	93 ff       	sbrs	r25, 3
    1c6c:	81 91       	ld	r24, Z+
    1c6e:	1f 01       	movw	r2, r30
    1c70:	88 23       	and	r24, r24
    1c72:	09 f4       	brne	.+2      	; 0x1c76 <vfprintf+0x5e>
    1c74:	31 c3       	rjmp	.+1634   	; 0x22d8 <vfprintf+0x6c0>
    1c76:	85 32       	cpi	r24, 0x25	; 37
    1c78:	39 f4       	brne	.+14     	; 0x1c88 <vfprintf+0x70>
    1c7a:	93 fd       	sbrc	r25, 3
    1c7c:	85 91       	lpm	r24, Z+
    1c7e:	93 ff       	sbrs	r25, 3
    1c80:	81 91       	ld	r24, Z+
    1c82:	1f 01       	movw	r2, r30
    1c84:	85 32       	cpi	r24, 0x25	; 37
    1c86:	39 f4       	brne	.+14     	; 0x1c96 <vfprintf+0x7e>
    1c88:	b7 01       	movw	r22, r14
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1c90:	56 01       	movw	r10, r12
    1c92:	65 01       	movw	r12, r10
    1c94:	e5 cf       	rjmp	.-54     	; 0x1c60 <vfprintf+0x48>
    1c96:	10 e0       	ldi	r17, 0x00	; 0
    1c98:	51 2c       	mov	r5, r1
    1c9a:	91 2c       	mov	r9, r1
    1c9c:	ff e1       	ldi	r31, 0x1F	; 31
    1c9e:	f9 15       	cp	r31, r9
    1ca0:	d8 f0       	brcs	.+54     	; 0x1cd8 <vfprintf+0xc0>
    1ca2:	8b 32       	cpi	r24, 0x2B	; 43
    1ca4:	79 f0       	breq	.+30     	; 0x1cc4 <vfprintf+0xac>
    1ca6:	38 f4       	brcc	.+14     	; 0x1cb6 <vfprintf+0x9e>
    1ca8:	80 32       	cpi	r24, 0x20	; 32
    1caa:	79 f0       	breq	.+30     	; 0x1cca <vfprintf+0xb2>
    1cac:	83 32       	cpi	r24, 0x23	; 35
    1cae:	a1 f4       	brne	.+40     	; 0x1cd8 <vfprintf+0xc0>
    1cb0:	f9 2d       	mov	r31, r9
    1cb2:	f0 61       	ori	r31, 0x10	; 16
    1cb4:	2e c0       	rjmp	.+92     	; 0x1d12 <vfprintf+0xfa>
    1cb6:	8d 32       	cpi	r24, 0x2D	; 45
    1cb8:	61 f0       	breq	.+24     	; 0x1cd2 <vfprintf+0xba>
    1cba:	80 33       	cpi	r24, 0x30	; 48
    1cbc:	69 f4       	brne	.+26     	; 0x1cd8 <vfprintf+0xc0>
    1cbe:	29 2d       	mov	r18, r9
    1cc0:	21 60       	ori	r18, 0x01	; 1
    1cc2:	2d c0       	rjmp	.+90     	; 0x1d1e <vfprintf+0x106>
    1cc4:	39 2d       	mov	r19, r9
    1cc6:	32 60       	ori	r19, 0x02	; 2
    1cc8:	93 2e       	mov	r9, r19
    1cca:	89 2d       	mov	r24, r9
    1ccc:	84 60       	ori	r24, 0x04	; 4
    1cce:	98 2e       	mov	r9, r24
    1cd0:	2a c0       	rjmp	.+84     	; 0x1d26 <vfprintf+0x10e>
    1cd2:	e9 2d       	mov	r30, r9
    1cd4:	e8 60       	ori	r30, 0x08	; 8
    1cd6:	15 c0       	rjmp	.+42     	; 0x1d02 <vfprintf+0xea>
    1cd8:	97 fc       	sbrc	r9, 7
    1cda:	2d c0       	rjmp	.+90     	; 0x1d36 <vfprintf+0x11e>
    1cdc:	20 ed       	ldi	r18, 0xD0	; 208
    1cde:	28 0f       	add	r18, r24
    1ce0:	2a 30       	cpi	r18, 0x0A	; 10
    1ce2:	88 f4       	brcc	.+34     	; 0x1d06 <vfprintf+0xee>
    1ce4:	96 fe       	sbrs	r9, 6
    1ce6:	06 c0       	rjmp	.+12     	; 0x1cf4 <vfprintf+0xdc>
    1ce8:	3a e0       	ldi	r19, 0x0A	; 10
    1cea:	13 9f       	mul	r17, r19
    1cec:	20 0d       	add	r18, r0
    1cee:	11 24       	eor	r1, r1
    1cf0:	12 2f       	mov	r17, r18
    1cf2:	19 c0       	rjmp	.+50     	; 0x1d26 <vfprintf+0x10e>
    1cf4:	8a e0       	ldi	r24, 0x0A	; 10
    1cf6:	58 9e       	mul	r5, r24
    1cf8:	20 0d       	add	r18, r0
    1cfa:	11 24       	eor	r1, r1
    1cfc:	52 2e       	mov	r5, r18
    1cfe:	e9 2d       	mov	r30, r9
    1d00:	e0 62       	ori	r30, 0x20	; 32
    1d02:	9e 2e       	mov	r9, r30
    1d04:	10 c0       	rjmp	.+32     	; 0x1d26 <vfprintf+0x10e>
    1d06:	8e 32       	cpi	r24, 0x2E	; 46
    1d08:	31 f4       	brne	.+12     	; 0x1d16 <vfprintf+0xfe>
    1d0a:	96 fc       	sbrc	r9, 6
    1d0c:	e5 c2       	rjmp	.+1482   	; 0x22d8 <vfprintf+0x6c0>
    1d0e:	f9 2d       	mov	r31, r9
    1d10:	f0 64       	ori	r31, 0x40	; 64
    1d12:	9f 2e       	mov	r9, r31
    1d14:	08 c0       	rjmp	.+16     	; 0x1d26 <vfprintf+0x10e>
    1d16:	8c 36       	cpi	r24, 0x6C	; 108
    1d18:	21 f4       	brne	.+8      	; 0x1d22 <vfprintf+0x10a>
    1d1a:	29 2d       	mov	r18, r9
    1d1c:	20 68       	ori	r18, 0x80	; 128
    1d1e:	92 2e       	mov	r9, r18
    1d20:	02 c0       	rjmp	.+4      	; 0x1d26 <vfprintf+0x10e>
    1d22:	88 36       	cpi	r24, 0x68	; 104
    1d24:	41 f4       	brne	.+16     	; 0x1d36 <vfprintf+0x11e>
    1d26:	f1 01       	movw	r30, r2
    1d28:	93 fd       	sbrc	r25, 3
    1d2a:	85 91       	lpm	r24, Z+
    1d2c:	93 ff       	sbrs	r25, 3
    1d2e:	81 91       	ld	r24, Z+
    1d30:	1f 01       	movw	r2, r30
    1d32:	81 11       	cpse	r24, r1
    1d34:	b3 cf       	rjmp	.-154    	; 0x1c9c <vfprintf+0x84>
    1d36:	9b eb       	ldi	r25, 0xBB	; 187
    1d38:	98 0f       	add	r25, r24
    1d3a:	93 30       	cpi	r25, 0x03	; 3
    1d3c:	20 f4       	brcc	.+8      	; 0x1d46 <vfprintf+0x12e>
    1d3e:	99 2d       	mov	r25, r9
    1d40:	90 61       	ori	r25, 0x10	; 16
    1d42:	80 5e       	subi	r24, 0xE0	; 224
    1d44:	07 c0       	rjmp	.+14     	; 0x1d54 <vfprintf+0x13c>
    1d46:	9b e9       	ldi	r25, 0x9B	; 155
    1d48:	98 0f       	add	r25, r24
    1d4a:	93 30       	cpi	r25, 0x03	; 3
    1d4c:	08 f0       	brcs	.+2      	; 0x1d50 <vfprintf+0x138>
    1d4e:	66 c1       	rjmp	.+716    	; 0x201c <vfprintf+0x404>
    1d50:	99 2d       	mov	r25, r9
    1d52:	9f 7e       	andi	r25, 0xEF	; 239
    1d54:	96 ff       	sbrs	r25, 6
    1d56:	16 e0       	ldi	r17, 0x06	; 6
    1d58:	9f 73       	andi	r25, 0x3F	; 63
    1d5a:	99 2e       	mov	r9, r25
    1d5c:	85 36       	cpi	r24, 0x65	; 101
    1d5e:	19 f4       	brne	.+6      	; 0x1d66 <vfprintf+0x14e>
    1d60:	90 64       	ori	r25, 0x40	; 64
    1d62:	99 2e       	mov	r9, r25
    1d64:	08 c0       	rjmp	.+16     	; 0x1d76 <vfprintf+0x15e>
    1d66:	86 36       	cpi	r24, 0x66	; 102
    1d68:	21 f4       	brne	.+8      	; 0x1d72 <vfprintf+0x15a>
    1d6a:	39 2f       	mov	r19, r25
    1d6c:	30 68       	ori	r19, 0x80	; 128
    1d6e:	93 2e       	mov	r9, r19
    1d70:	02 c0       	rjmp	.+4      	; 0x1d76 <vfprintf+0x15e>
    1d72:	11 11       	cpse	r17, r1
    1d74:	11 50       	subi	r17, 0x01	; 1
    1d76:	97 fe       	sbrs	r9, 7
    1d78:	07 c0       	rjmp	.+14     	; 0x1d88 <vfprintf+0x170>
    1d7a:	1c 33       	cpi	r17, 0x3C	; 60
    1d7c:	50 f4       	brcc	.+20     	; 0x1d92 <vfprintf+0x17a>
    1d7e:	44 24       	eor	r4, r4
    1d80:	43 94       	inc	r4
    1d82:	41 0e       	add	r4, r17
    1d84:	27 e0       	ldi	r18, 0x07	; 7
    1d86:	0b c0       	rjmp	.+22     	; 0x1d9e <vfprintf+0x186>
    1d88:	18 30       	cpi	r17, 0x08	; 8
    1d8a:	38 f0       	brcs	.+14     	; 0x1d9a <vfprintf+0x182>
    1d8c:	27 e0       	ldi	r18, 0x07	; 7
    1d8e:	17 e0       	ldi	r17, 0x07	; 7
    1d90:	05 c0       	rjmp	.+10     	; 0x1d9c <vfprintf+0x184>
    1d92:	27 e0       	ldi	r18, 0x07	; 7
    1d94:	9c e3       	ldi	r25, 0x3C	; 60
    1d96:	49 2e       	mov	r4, r25
    1d98:	02 c0       	rjmp	.+4      	; 0x1d9e <vfprintf+0x186>
    1d9a:	21 2f       	mov	r18, r17
    1d9c:	41 2c       	mov	r4, r1
    1d9e:	56 01       	movw	r10, r12
    1da0:	84 e0       	ldi	r24, 0x04	; 4
    1da2:	a8 0e       	add	r10, r24
    1da4:	b1 1c       	adc	r11, r1
    1da6:	f6 01       	movw	r30, r12
    1da8:	60 81       	ld	r22, Z
    1daa:	71 81       	ldd	r23, Z+1	; 0x01
    1dac:	82 81       	ldd	r24, Z+2	; 0x02
    1dae:	93 81       	ldd	r25, Z+3	; 0x03
    1db0:	04 2d       	mov	r16, r4
    1db2:	a3 01       	movw	r20, r6
    1db4:	0e 94 ff 11 	call	0x23fe	; 0x23fe <__ftoa_engine>
    1db8:	6c 01       	movw	r12, r24
    1dba:	f9 81       	ldd	r31, Y+1	; 0x01
    1dbc:	fc 87       	std	Y+12, r31	; 0x0c
    1dbe:	f0 ff       	sbrs	r31, 0
    1dc0:	02 c0       	rjmp	.+4      	; 0x1dc6 <vfprintf+0x1ae>
    1dc2:	f3 ff       	sbrs	r31, 3
    1dc4:	06 c0       	rjmp	.+12     	; 0x1dd2 <vfprintf+0x1ba>
    1dc6:	91 fc       	sbrc	r9, 1
    1dc8:	06 c0       	rjmp	.+12     	; 0x1dd6 <vfprintf+0x1be>
    1dca:	92 fe       	sbrs	r9, 2
    1dcc:	06 c0       	rjmp	.+12     	; 0x1dda <vfprintf+0x1c2>
    1dce:	00 e2       	ldi	r16, 0x20	; 32
    1dd0:	05 c0       	rjmp	.+10     	; 0x1ddc <vfprintf+0x1c4>
    1dd2:	0d e2       	ldi	r16, 0x2D	; 45
    1dd4:	03 c0       	rjmp	.+6      	; 0x1ddc <vfprintf+0x1c4>
    1dd6:	0b e2       	ldi	r16, 0x2B	; 43
    1dd8:	01 c0       	rjmp	.+2      	; 0x1ddc <vfprintf+0x1c4>
    1dda:	00 e0       	ldi	r16, 0x00	; 0
    1ddc:	8c 85       	ldd	r24, Y+12	; 0x0c
    1dde:	8c 70       	andi	r24, 0x0C	; 12
    1de0:	19 f0       	breq	.+6      	; 0x1de8 <vfprintf+0x1d0>
    1de2:	01 11       	cpse	r16, r1
    1de4:	5a c2       	rjmp	.+1204   	; 0x229a <vfprintf+0x682>
    1de6:	9b c2       	rjmp	.+1334   	; 0x231e <vfprintf+0x706>
    1de8:	97 fe       	sbrs	r9, 7
    1dea:	10 c0       	rjmp	.+32     	; 0x1e0c <vfprintf+0x1f4>
    1dec:	4c 0c       	add	r4, r12
    1dee:	fc 85       	ldd	r31, Y+12	; 0x0c
    1df0:	f4 ff       	sbrs	r31, 4
    1df2:	04 c0       	rjmp	.+8      	; 0x1dfc <vfprintf+0x1e4>
    1df4:	8a 81       	ldd	r24, Y+2	; 0x02
    1df6:	81 33       	cpi	r24, 0x31	; 49
    1df8:	09 f4       	brne	.+2      	; 0x1dfc <vfprintf+0x1e4>
    1dfa:	4a 94       	dec	r4
    1dfc:	14 14       	cp	r1, r4
    1dfe:	74 f5       	brge	.+92     	; 0x1e5c <vfprintf+0x244>
    1e00:	28 e0       	ldi	r18, 0x08	; 8
    1e02:	24 15       	cp	r18, r4
    1e04:	78 f5       	brcc	.+94     	; 0x1e64 <vfprintf+0x24c>
    1e06:	88 e0       	ldi	r24, 0x08	; 8
    1e08:	48 2e       	mov	r4, r24
    1e0a:	2c c0       	rjmp	.+88     	; 0x1e64 <vfprintf+0x24c>
    1e0c:	96 fc       	sbrc	r9, 6
    1e0e:	2a c0       	rjmp	.+84     	; 0x1e64 <vfprintf+0x24c>
    1e10:	81 2f       	mov	r24, r17
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	8c 15       	cp	r24, r12
    1e16:	9d 05       	cpc	r25, r13
    1e18:	9c f0       	brlt	.+38     	; 0x1e40 <vfprintf+0x228>
    1e1a:	3c ef       	ldi	r19, 0xFC	; 252
    1e1c:	c3 16       	cp	r12, r19
    1e1e:	3f ef       	ldi	r19, 0xFF	; 255
    1e20:	d3 06       	cpc	r13, r19
    1e22:	74 f0       	brlt	.+28     	; 0x1e40 <vfprintf+0x228>
    1e24:	89 2d       	mov	r24, r9
    1e26:	80 68       	ori	r24, 0x80	; 128
    1e28:	98 2e       	mov	r9, r24
    1e2a:	0a c0       	rjmp	.+20     	; 0x1e40 <vfprintf+0x228>
    1e2c:	e2 e0       	ldi	r30, 0x02	; 2
    1e2e:	f0 e0       	ldi	r31, 0x00	; 0
    1e30:	ec 0f       	add	r30, r28
    1e32:	fd 1f       	adc	r31, r29
    1e34:	e1 0f       	add	r30, r17
    1e36:	f1 1d       	adc	r31, r1
    1e38:	80 81       	ld	r24, Z
    1e3a:	80 33       	cpi	r24, 0x30	; 48
    1e3c:	19 f4       	brne	.+6      	; 0x1e44 <vfprintf+0x22c>
    1e3e:	11 50       	subi	r17, 0x01	; 1
    1e40:	11 11       	cpse	r17, r1
    1e42:	f4 cf       	rjmp	.-24     	; 0x1e2c <vfprintf+0x214>
    1e44:	97 fe       	sbrs	r9, 7
    1e46:	0e c0       	rjmp	.+28     	; 0x1e64 <vfprintf+0x24c>
    1e48:	44 24       	eor	r4, r4
    1e4a:	43 94       	inc	r4
    1e4c:	41 0e       	add	r4, r17
    1e4e:	81 2f       	mov	r24, r17
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	c8 16       	cp	r12, r24
    1e54:	d9 06       	cpc	r13, r25
    1e56:	2c f4       	brge	.+10     	; 0x1e62 <vfprintf+0x24a>
    1e58:	1c 19       	sub	r17, r12
    1e5a:	04 c0       	rjmp	.+8      	; 0x1e64 <vfprintf+0x24c>
    1e5c:	44 24       	eor	r4, r4
    1e5e:	43 94       	inc	r4
    1e60:	01 c0       	rjmp	.+2      	; 0x1e64 <vfprintf+0x24c>
    1e62:	10 e0       	ldi	r17, 0x00	; 0
    1e64:	97 fe       	sbrs	r9, 7
    1e66:	06 c0       	rjmp	.+12     	; 0x1e74 <vfprintf+0x25c>
    1e68:	1c 14       	cp	r1, r12
    1e6a:	1d 04       	cpc	r1, r13
    1e6c:	34 f4       	brge	.+12     	; 0x1e7a <vfprintf+0x262>
    1e6e:	c6 01       	movw	r24, r12
    1e70:	01 96       	adiw	r24, 0x01	; 1
    1e72:	05 c0       	rjmp	.+10     	; 0x1e7e <vfprintf+0x266>
    1e74:	85 e0       	ldi	r24, 0x05	; 5
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	02 c0       	rjmp	.+4      	; 0x1e7e <vfprintf+0x266>
    1e7a:	81 e0       	ldi	r24, 0x01	; 1
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	01 11       	cpse	r16, r1
    1e80:	01 96       	adiw	r24, 0x01	; 1
    1e82:	11 23       	and	r17, r17
    1e84:	31 f0       	breq	.+12     	; 0x1e92 <vfprintf+0x27a>
    1e86:	21 2f       	mov	r18, r17
    1e88:	30 e0       	ldi	r19, 0x00	; 0
    1e8a:	2f 5f       	subi	r18, 0xFF	; 255
    1e8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e8e:	82 0f       	add	r24, r18
    1e90:	93 1f       	adc	r25, r19
    1e92:	25 2d       	mov	r18, r5
    1e94:	30 e0       	ldi	r19, 0x00	; 0
    1e96:	82 17       	cp	r24, r18
    1e98:	93 07       	cpc	r25, r19
    1e9a:	14 f4       	brge	.+4      	; 0x1ea0 <vfprintf+0x288>
    1e9c:	58 1a       	sub	r5, r24
    1e9e:	01 c0       	rjmp	.+2      	; 0x1ea2 <vfprintf+0x28a>
    1ea0:	51 2c       	mov	r5, r1
    1ea2:	89 2d       	mov	r24, r9
    1ea4:	89 70       	andi	r24, 0x09	; 9
    1ea6:	49 f4       	brne	.+18     	; 0x1eba <vfprintf+0x2a2>
    1ea8:	55 20       	and	r5, r5
    1eaa:	39 f0       	breq	.+14     	; 0x1eba <vfprintf+0x2a2>
    1eac:	b7 01       	movw	r22, r14
    1eae:	80 e2       	ldi	r24, 0x20	; 32
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1eb6:	5a 94       	dec	r5
    1eb8:	f7 cf       	rjmp	.-18     	; 0x1ea8 <vfprintf+0x290>
    1eba:	00 23       	and	r16, r16
    1ebc:	29 f0       	breq	.+10     	; 0x1ec8 <vfprintf+0x2b0>
    1ebe:	b7 01       	movw	r22, r14
    1ec0:	80 2f       	mov	r24, r16
    1ec2:	90 e0       	ldi	r25, 0x00	; 0
    1ec4:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1ec8:	93 fc       	sbrc	r9, 3
    1eca:	09 c0       	rjmp	.+18     	; 0x1ede <vfprintf+0x2c6>
    1ecc:	55 20       	and	r5, r5
    1ece:	39 f0       	breq	.+14     	; 0x1ede <vfprintf+0x2c6>
    1ed0:	b7 01       	movw	r22, r14
    1ed2:	80 e3       	ldi	r24, 0x30	; 48
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1eda:	5a 94       	dec	r5
    1edc:	f7 cf       	rjmp	.-18     	; 0x1ecc <vfprintf+0x2b4>
    1ede:	97 fe       	sbrs	r9, 7
    1ee0:	4c c0       	rjmp	.+152    	; 0x1f7a <vfprintf+0x362>
    1ee2:	46 01       	movw	r8, r12
    1ee4:	d7 fe       	sbrs	r13, 7
    1ee6:	02 c0       	rjmp	.+4      	; 0x1eec <vfprintf+0x2d4>
    1ee8:	81 2c       	mov	r8, r1
    1eea:	91 2c       	mov	r9, r1
    1eec:	c6 01       	movw	r24, r12
    1eee:	88 19       	sub	r24, r8
    1ef0:	99 09       	sbc	r25, r9
    1ef2:	f3 01       	movw	r30, r6
    1ef4:	e8 0f       	add	r30, r24
    1ef6:	f9 1f       	adc	r31, r25
    1ef8:	ed 87       	std	Y+13, r30	; 0x0d
    1efa:	fe 87       	std	Y+14, r31	; 0x0e
    1efc:	96 01       	movw	r18, r12
    1efe:	24 19       	sub	r18, r4
    1f00:	31 09       	sbc	r19, r1
    1f02:	2f 87       	std	Y+15, r18	; 0x0f
    1f04:	38 8b       	std	Y+16, r19	; 0x10
    1f06:	01 2f       	mov	r16, r17
    1f08:	10 e0       	ldi	r17, 0x00	; 0
    1f0a:	11 95       	neg	r17
    1f0c:	01 95       	neg	r16
    1f0e:	11 09       	sbc	r17, r1
    1f10:	3f ef       	ldi	r19, 0xFF	; 255
    1f12:	83 16       	cp	r8, r19
    1f14:	93 06       	cpc	r9, r19
    1f16:	29 f4       	brne	.+10     	; 0x1f22 <vfprintf+0x30a>
    1f18:	b7 01       	movw	r22, r14
    1f1a:	8e e2       	ldi	r24, 0x2E	; 46
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1f22:	c8 14       	cp	r12, r8
    1f24:	d9 04       	cpc	r13, r9
    1f26:	4c f0       	brlt	.+18     	; 0x1f3a <vfprintf+0x322>
    1f28:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f2a:	98 89       	ldd	r25, Y+16	; 0x10
    1f2c:	88 15       	cp	r24, r8
    1f2e:	99 05       	cpc	r25, r9
    1f30:	24 f4       	brge	.+8      	; 0x1f3a <vfprintf+0x322>
    1f32:	ed 85       	ldd	r30, Y+13	; 0x0d
    1f34:	fe 85       	ldd	r31, Y+14	; 0x0e
    1f36:	81 81       	ldd	r24, Z+1	; 0x01
    1f38:	01 c0       	rjmp	.+2      	; 0x1f3c <vfprintf+0x324>
    1f3a:	80 e3       	ldi	r24, 0x30	; 48
    1f3c:	f1 e0       	ldi	r31, 0x01	; 1
    1f3e:	8f 1a       	sub	r8, r31
    1f40:	91 08       	sbc	r9, r1
    1f42:	2d 85       	ldd	r18, Y+13	; 0x0d
    1f44:	3e 85       	ldd	r19, Y+14	; 0x0e
    1f46:	2f 5f       	subi	r18, 0xFF	; 255
    1f48:	3f 4f       	sbci	r19, 0xFF	; 255
    1f4a:	2d 87       	std	Y+13, r18	; 0x0d
    1f4c:	3e 87       	std	Y+14, r19	; 0x0e
    1f4e:	80 16       	cp	r8, r16
    1f50:	91 06       	cpc	r9, r17
    1f52:	2c f0       	brlt	.+10     	; 0x1f5e <vfprintf+0x346>
    1f54:	b7 01       	movw	r22, r14
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1f5c:	d9 cf       	rjmp	.-78     	; 0x1f10 <vfprintf+0x2f8>
    1f5e:	c8 14       	cp	r12, r8
    1f60:	d9 04       	cpc	r13, r9
    1f62:	41 f4       	brne	.+16     	; 0x1f74 <vfprintf+0x35c>
    1f64:	9a 81       	ldd	r25, Y+2	; 0x02
    1f66:	96 33       	cpi	r25, 0x36	; 54
    1f68:	20 f4       	brcc	.+8      	; 0x1f72 <vfprintf+0x35a>
    1f6a:	95 33       	cpi	r25, 0x35	; 53
    1f6c:	19 f4       	brne	.+6      	; 0x1f74 <vfprintf+0x35c>
    1f6e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1f70:	34 ff       	sbrs	r19, 4
    1f72:	81 e3       	ldi	r24, 0x31	; 49
    1f74:	b7 01       	movw	r22, r14
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	4e c0       	rjmp	.+156    	; 0x2016 <vfprintf+0x3fe>
    1f7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f7c:	81 33       	cpi	r24, 0x31	; 49
    1f7e:	19 f0       	breq	.+6      	; 0x1f86 <vfprintf+0x36e>
    1f80:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f82:	9f 7e       	andi	r25, 0xEF	; 239
    1f84:	9c 87       	std	Y+12, r25	; 0x0c
    1f86:	b7 01       	movw	r22, r14
    1f88:	90 e0       	ldi	r25, 0x00	; 0
    1f8a:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1f8e:	11 11       	cpse	r17, r1
    1f90:	05 c0       	rjmp	.+10     	; 0x1f9c <vfprintf+0x384>
    1f92:	94 fc       	sbrc	r9, 4
    1f94:	18 c0       	rjmp	.+48     	; 0x1fc6 <vfprintf+0x3ae>
    1f96:	85 e6       	ldi	r24, 0x65	; 101
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	17 c0       	rjmp	.+46     	; 0x1fca <vfprintf+0x3b2>
    1f9c:	b7 01       	movw	r22, r14
    1f9e:	8e e2       	ldi	r24, 0x2E	; 46
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1fa6:	1e 5f       	subi	r17, 0xFE	; 254
    1fa8:	82 e0       	ldi	r24, 0x02	; 2
    1faa:	01 e0       	ldi	r16, 0x01	; 1
    1fac:	08 0f       	add	r16, r24
    1fae:	f3 01       	movw	r30, r6
    1fb0:	e8 0f       	add	r30, r24
    1fb2:	f1 1d       	adc	r31, r1
    1fb4:	80 81       	ld	r24, Z
    1fb6:	b7 01       	movw	r22, r14
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1fbe:	80 2f       	mov	r24, r16
    1fc0:	01 13       	cpse	r16, r17
    1fc2:	f3 cf       	rjmp	.-26     	; 0x1faa <vfprintf+0x392>
    1fc4:	e6 cf       	rjmp	.-52     	; 0x1f92 <vfprintf+0x37a>
    1fc6:	85 e4       	ldi	r24, 0x45	; 69
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	b7 01       	movw	r22, r14
    1fcc:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1fd0:	d7 fc       	sbrc	r13, 7
    1fd2:	06 c0       	rjmp	.+12     	; 0x1fe0 <vfprintf+0x3c8>
    1fd4:	c1 14       	cp	r12, r1
    1fd6:	d1 04       	cpc	r13, r1
    1fd8:	41 f4       	brne	.+16     	; 0x1fea <vfprintf+0x3d2>
    1fda:	ec 85       	ldd	r30, Y+12	; 0x0c
    1fdc:	e4 ff       	sbrs	r30, 4
    1fde:	05 c0       	rjmp	.+10     	; 0x1fea <vfprintf+0x3d2>
    1fe0:	d1 94       	neg	r13
    1fe2:	c1 94       	neg	r12
    1fe4:	d1 08       	sbc	r13, r1
    1fe6:	8d e2       	ldi	r24, 0x2D	; 45
    1fe8:	01 c0       	rjmp	.+2      	; 0x1fec <vfprintf+0x3d4>
    1fea:	8b e2       	ldi	r24, 0x2B	; 43
    1fec:	b7 01       	movw	r22, r14
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    1ff4:	80 e3       	ldi	r24, 0x30	; 48
    1ff6:	2a e0       	ldi	r18, 0x0A	; 10
    1ff8:	c2 16       	cp	r12, r18
    1ffa:	d1 04       	cpc	r13, r1
    1ffc:	2c f0       	brlt	.+10     	; 0x2008 <vfprintf+0x3f0>
    1ffe:	8f 5f       	subi	r24, 0xFF	; 255
    2000:	fa e0       	ldi	r31, 0x0A	; 10
    2002:	cf 1a       	sub	r12, r31
    2004:	d1 08       	sbc	r13, r1
    2006:	f7 cf       	rjmp	.-18     	; 0x1ff6 <vfprintf+0x3de>
    2008:	b7 01       	movw	r22, r14
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    2010:	b7 01       	movw	r22, r14
    2012:	c6 01       	movw	r24, r12
    2014:	c0 96       	adiw	r24, 0x30	; 48
    2016:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    201a:	54 c1       	rjmp	.+680    	; 0x22c4 <vfprintf+0x6ac>
    201c:	83 36       	cpi	r24, 0x63	; 99
    201e:	31 f0       	breq	.+12     	; 0x202c <vfprintf+0x414>
    2020:	83 37       	cpi	r24, 0x73	; 115
    2022:	79 f0       	breq	.+30     	; 0x2042 <vfprintf+0x42a>
    2024:	83 35       	cpi	r24, 0x53	; 83
    2026:	09 f0       	breq	.+2      	; 0x202a <vfprintf+0x412>
    2028:	56 c0       	rjmp	.+172    	; 0x20d6 <vfprintf+0x4be>
    202a:	20 c0       	rjmp	.+64     	; 0x206c <vfprintf+0x454>
    202c:	56 01       	movw	r10, r12
    202e:	32 e0       	ldi	r19, 0x02	; 2
    2030:	a3 0e       	add	r10, r19
    2032:	b1 1c       	adc	r11, r1
    2034:	f6 01       	movw	r30, r12
    2036:	80 81       	ld	r24, Z
    2038:	89 83       	std	Y+1, r24	; 0x01
    203a:	01 e0       	ldi	r16, 0x01	; 1
    203c:	10 e0       	ldi	r17, 0x00	; 0
    203e:	63 01       	movw	r12, r6
    2040:	12 c0       	rjmp	.+36     	; 0x2066 <vfprintf+0x44e>
    2042:	56 01       	movw	r10, r12
    2044:	f2 e0       	ldi	r31, 0x02	; 2
    2046:	af 0e       	add	r10, r31
    2048:	b1 1c       	adc	r11, r1
    204a:	f6 01       	movw	r30, r12
    204c:	c0 80       	ld	r12, Z
    204e:	d1 80       	ldd	r13, Z+1	; 0x01
    2050:	96 fe       	sbrs	r9, 6
    2052:	03 c0       	rjmp	.+6      	; 0x205a <vfprintf+0x442>
    2054:	61 2f       	mov	r22, r17
    2056:	70 e0       	ldi	r23, 0x00	; 0
    2058:	02 c0       	rjmp	.+4      	; 0x205e <vfprintf+0x446>
    205a:	6f ef       	ldi	r22, 0xFF	; 255
    205c:	7f ef       	ldi	r23, 0xFF	; 255
    205e:	c6 01       	movw	r24, r12
    2060:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <strnlen>
    2064:	8c 01       	movw	r16, r24
    2066:	f9 2d       	mov	r31, r9
    2068:	ff 77       	andi	r31, 0x7F	; 127
    206a:	14 c0       	rjmp	.+40     	; 0x2094 <vfprintf+0x47c>
    206c:	56 01       	movw	r10, r12
    206e:	22 e0       	ldi	r18, 0x02	; 2
    2070:	a2 0e       	add	r10, r18
    2072:	b1 1c       	adc	r11, r1
    2074:	f6 01       	movw	r30, r12
    2076:	c0 80       	ld	r12, Z
    2078:	d1 80       	ldd	r13, Z+1	; 0x01
    207a:	96 fe       	sbrs	r9, 6
    207c:	03 c0       	rjmp	.+6      	; 0x2084 <vfprintf+0x46c>
    207e:	61 2f       	mov	r22, r17
    2080:	70 e0       	ldi	r23, 0x00	; 0
    2082:	02 c0       	rjmp	.+4      	; 0x2088 <vfprintf+0x470>
    2084:	6f ef       	ldi	r22, 0xFF	; 255
    2086:	7f ef       	ldi	r23, 0xFF	; 255
    2088:	c6 01       	movw	r24, r12
    208a:	0e 94 d7 12 	call	0x25ae	; 0x25ae <strnlen_P>
    208e:	8c 01       	movw	r16, r24
    2090:	f9 2d       	mov	r31, r9
    2092:	f0 68       	ori	r31, 0x80	; 128
    2094:	9f 2e       	mov	r9, r31
    2096:	f3 fd       	sbrc	r31, 3
    2098:	1a c0       	rjmp	.+52     	; 0x20ce <vfprintf+0x4b6>
    209a:	85 2d       	mov	r24, r5
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	08 17       	cp	r16, r24
    20a0:	19 07       	cpc	r17, r25
    20a2:	a8 f4       	brcc	.+42     	; 0x20ce <vfprintf+0x4b6>
    20a4:	b7 01       	movw	r22, r14
    20a6:	80 e2       	ldi	r24, 0x20	; 32
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    20ae:	5a 94       	dec	r5
    20b0:	f4 cf       	rjmp	.-24     	; 0x209a <vfprintf+0x482>
    20b2:	f6 01       	movw	r30, r12
    20b4:	97 fc       	sbrc	r9, 7
    20b6:	85 91       	lpm	r24, Z+
    20b8:	97 fe       	sbrs	r9, 7
    20ba:	81 91       	ld	r24, Z+
    20bc:	6f 01       	movw	r12, r30
    20be:	b7 01       	movw	r22, r14
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    20c6:	51 10       	cpse	r5, r1
    20c8:	5a 94       	dec	r5
    20ca:	01 50       	subi	r16, 0x01	; 1
    20cc:	11 09       	sbc	r17, r1
    20ce:	01 15       	cp	r16, r1
    20d0:	11 05       	cpc	r17, r1
    20d2:	79 f7       	brne	.-34     	; 0x20b2 <vfprintf+0x49a>
    20d4:	f7 c0       	rjmp	.+494    	; 0x22c4 <vfprintf+0x6ac>
    20d6:	84 36       	cpi	r24, 0x64	; 100
    20d8:	11 f0       	breq	.+4      	; 0x20de <vfprintf+0x4c6>
    20da:	89 36       	cpi	r24, 0x69	; 105
    20dc:	61 f5       	brne	.+88     	; 0x2136 <vfprintf+0x51e>
    20de:	56 01       	movw	r10, r12
    20e0:	97 fe       	sbrs	r9, 7
    20e2:	09 c0       	rjmp	.+18     	; 0x20f6 <vfprintf+0x4de>
    20e4:	24 e0       	ldi	r18, 0x04	; 4
    20e6:	a2 0e       	add	r10, r18
    20e8:	b1 1c       	adc	r11, r1
    20ea:	f6 01       	movw	r30, r12
    20ec:	60 81       	ld	r22, Z
    20ee:	71 81       	ldd	r23, Z+1	; 0x01
    20f0:	82 81       	ldd	r24, Z+2	; 0x02
    20f2:	93 81       	ldd	r25, Z+3	; 0x03
    20f4:	0a c0       	rjmp	.+20     	; 0x210a <vfprintf+0x4f2>
    20f6:	f2 e0       	ldi	r31, 0x02	; 2
    20f8:	af 0e       	add	r10, r31
    20fa:	b1 1c       	adc	r11, r1
    20fc:	f6 01       	movw	r30, r12
    20fe:	60 81       	ld	r22, Z
    2100:	71 81       	ldd	r23, Z+1	; 0x01
    2102:	07 2e       	mov	r0, r23
    2104:	00 0c       	add	r0, r0
    2106:	88 0b       	sbc	r24, r24
    2108:	99 0b       	sbc	r25, r25
    210a:	f9 2d       	mov	r31, r9
    210c:	ff 76       	andi	r31, 0x6F	; 111
    210e:	9f 2e       	mov	r9, r31
    2110:	97 ff       	sbrs	r25, 7
    2112:	09 c0       	rjmp	.+18     	; 0x2126 <vfprintf+0x50e>
    2114:	90 95       	com	r25
    2116:	80 95       	com	r24
    2118:	70 95       	com	r23
    211a:	61 95       	neg	r22
    211c:	7f 4f       	sbci	r23, 0xFF	; 255
    211e:	8f 4f       	sbci	r24, 0xFF	; 255
    2120:	9f 4f       	sbci	r25, 0xFF	; 255
    2122:	f0 68       	ori	r31, 0x80	; 128
    2124:	9f 2e       	mov	r9, r31
    2126:	2a e0       	ldi	r18, 0x0A	; 10
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	a3 01       	movw	r20, r6
    212c:	0e 94 3d 13 	call	0x267a	; 0x267a <__ultoa_invert>
    2130:	c8 2e       	mov	r12, r24
    2132:	c6 18       	sub	r12, r6
    2134:	3f c0       	rjmp	.+126    	; 0x21b4 <vfprintf+0x59c>
    2136:	09 2d       	mov	r16, r9
    2138:	85 37       	cpi	r24, 0x75	; 117
    213a:	21 f4       	brne	.+8      	; 0x2144 <vfprintf+0x52c>
    213c:	0f 7e       	andi	r16, 0xEF	; 239
    213e:	2a e0       	ldi	r18, 0x0A	; 10
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	1d c0       	rjmp	.+58     	; 0x217e <vfprintf+0x566>
    2144:	09 7f       	andi	r16, 0xF9	; 249
    2146:	8f 36       	cpi	r24, 0x6F	; 111
    2148:	91 f0       	breq	.+36     	; 0x216e <vfprintf+0x556>
    214a:	18 f4       	brcc	.+6      	; 0x2152 <vfprintf+0x53a>
    214c:	88 35       	cpi	r24, 0x58	; 88
    214e:	59 f0       	breq	.+22     	; 0x2166 <vfprintf+0x54e>
    2150:	c3 c0       	rjmp	.+390    	; 0x22d8 <vfprintf+0x6c0>
    2152:	80 37       	cpi	r24, 0x70	; 112
    2154:	19 f0       	breq	.+6      	; 0x215c <vfprintf+0x544>
    2156:	88 37       	cpi	r24, 0x78	; 120
    2158:	11 f0       	breq	.+4      	; 0x215e <vfprintf+0x546>
    215a:	be c0       	rjmp	.+380    	; 0x22d8 <vfprintf+0x6c0>
    215c:	00 61       	ori	r16, 0x10	; 16
    215e:	04 ff       	sbrs	r16, 4
    2160:	09 c0       	rjmp	.+18     	; 0x2174 <vfprintf+0x55c>
    2162:	04 60       	ori	r16, 0x04	; 4
    2164:	07 c0       	rjmp	.+14     	; 0x2174 <vfprintf+0x55c>
    2166:	94 fe       	sbrs	r9, 4
    2168:	08 c0       	rjmp	.+16     	; 0x217a <vfprintf+0x562>
    216a:	06 60       	ori	r16, 0x06	; 6
    216c:	06 c0       	rjmp	.+12     	; 0x217a <vfprintf+0x562>
    216e:	28 e0       	ldi	r18, 0x08	; 8
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	05 c0       	rjmp	.+10     	; 0x217e <vfprintf+0x566>
    2174:	20 e1       	ldi	r18, 0x10	; 16
    2176:	30 e0       	ldi	r19, 0x00	; 0
    2178:	02 c0       	rjmp	.+4      	; 0x217e <vfprintf+0x566>
    217a:	20 e1       	ldi	r18, 0x10	; 16
    217c:	32 e0       	ldi	r19, 0x02	; 2
    217e:	56 01       	movw	r10, r12
    2180:	07 ff       	sbrs	r16, 7
    2182:	09 c0       	rjmp	.+18     	; 0x2196 <vfprintf+0x57e>
    2184:	84 e0       	ldi	r24, 0x04	; 4
    2186:	a8 0e       	add	r10, r24
    2188:	b1 1c       	adc	r11, r1
    218a:	f6 01       	movw	r30, r12
    218c:	60 81       	ld	r22, Z
    218e:	71 81       	ldd	r23, Z+1	; 0x01
    2190:	82 81       	ldd	r24, Z+2	; 0x02
    2192:	93 81       	ldd	r25, Z+3	; 0x03
    2194:	08 c0       	rjmp	.+16     	; 0x21a6 <vfprintf+0x58e>
    2196:	f2 e0       	ldi	r31, 0x02	; 2
    2198:	af 0e       	add	r10, r31
    219a:	b1 1c       	adc	r11, r1
    219c:	f6 01       	movw	r30, r12
    219e:	60 81       	ld	r22, Z
    21a0:	71 81       	ldd	r23, Z+1	; 0x01
    21a2:	80 e0       	ldi	r24, 0x00	; 0
    21a4:	90 e0       	ldi	r25, 0x00	; 0
    21a6:	a3 01       	movw	r20, r6
    21a8:	0e 94 3d 13 	call	0x267a	; 0x267a <__ultoa_invert>
    21ac:	c8 2e       	mov	r12, r24
    21ae:	c6 18       	sub	r12, r6
    21b0:	0f 77       	andi	r16, 0x7F	; 127
    21b2:	90 2e       	mov	r9, r16
    21b4:	96 fe       	sbrs	r9, 6
    21b6:	0b c0       	rjmp	.+22     	; 0x21ce <vfprintf+0x5b6>
    21b8:	09 2d       	mov	r16, r9
    21ba:	0e 7f       	andi	r16, 0xFE	; 254
    21bc:	c1 16       	cp	r12, r17
    21be:	50 f4       	brcc	.+20     	; 0x21d4 <vfprintf+0x5bc>
    21c0:	94 fe       	sbrs	r9, 4
    21c2:	0a c0       	rjmp	.+20     	; 0x21d8 <vfprintf+0x5c0>
    21c4:	92 fc       	sbrc	r9, 2
    21c6:	08 c0       	rjmp	.+16     	; 0x21d8 <vfprintf+0x5c0>
    21c8:	09 2d       	mov	r16, r9
    21ca:	0e 7e       	andi	r16, 0xEE	; 238
    21cc:	05 c0       	rjmp	.+10     	; 0x21d8 <vfprintf+0x5c0>
    21ce:	dc 2c       	mov	r13, r12
    21d0:	09 2d       	mov	r16, r9
    21d2:	03 c0       	rjmp	.+6      	; 0x21da <vfprintf+0x5c2>
    21d4:	dc 2c       	mov	r13, r12
    21d6:	01 c0       	rjmp	.+2      	; 0x21da <vfprintf+0x5c2>
    21d8:	d1 2e       	mov	r13, r17
    21da:	04 ff       	sbrs	r16, 4
    21dc:	0d c0       	rjmp	.+26     	; 0x21f8 <vfprintf+0x5e0>
    21de:	fe 01       	movw	r30, r28
    21e0:	ec 0d       	add	r30, r12
    21e2:	f1 1d       	adc	r31, r1
    21e4:	80 81       	ld	r24, Z
    21e6:	80 33       	cpi	r24, 0x30	; 48
    21e8:	11 f4       	brne	.+4      	; 0x21ee <vfprintf+0x5d6>
    21ea:	09 7e       	andi	r16, 0xE9	; 233
    21ec:	09 c0       	rjmp	.+18     	; 0x2200 <vfprintf+0x5e8>
    21ee:	02 ff       	sbrs	r16, 2
    21f0:	06 c0       	rjmp	.+12     	; 0x21fe <vfprintf+0x5e6>
    21f2:	d3 94       	inc	r13
    21f4:	d3 94       	inc	r13
    21f6:	04 c0       	rjmp	.+8      	; 0x2200 <vfprintf+0x5e8>
    21f8:	80 2f       	mov	r24, r16
    21fa:	86 78       	andi	r24, 0x86	; 134
    21fc:	09 f0       	breq	.+2      	; 0x2200 <vfprintf+0x5e8>
    21fe:	d3 94       	inc	r13
    2200:	03 fd       	sbrc	r16, 3
    2202:	11 c0       	rjmp	.+34     	; 0x2226 <vfprintf+0x60e>
    2204:	00 ff       	sbrs	r16, 0
    2206:	06 c0       	rjmp	.+12     	; 0x2214 <vfprintf+0x5fc>
    2208:	1c 2d       	mov	r17, r12
    220a:	d5 14       	cp	r13, r5
    220c:	80 f4       	brcc	.+32     	; 0x222e <vfprintf+0x616>
    220e:	15 0d       	add	r17, r5
    2210:	1d 19       	sub	r17, r13
    2212:	0d c0       	rjmp	.+26     	; 0x222e <vfprintf+0x616>
    2214:	d5 14       	cp	r13, r5
    2216:	58 f4       	brcc	.+22     	; 0x222e <vfprintf+0x616>
    2218:	b7 01       	movw	r22, r14
    221a:	80 e2       	ldi	r24, 0x20	; 32
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    2222:	d3 94       	inc	r13
    2224:	f7 cf       	rjmp	.-18     	; 0x2214 <vfprintf+0x5fc>
    2226:	d5 14       	cp	r13, r5
    2228:	10 f4       	brcc	.+4      	; 0x222e <vfprintf+0x616>
    222a:	5d 18       	sub	r5, r13
    222c:	01 c0       	rjmp	.+2      	; 0x2230 <vfprintf+0x618>
    222e:	51 2c       	mov	r5, r1
    2230:	04 ff       	sbrs	r16, 4
    2232:	10 c0       	rjmp	.+32     	; 0x2254 <vfprintf+0x63c>
    2234:	b7 01       	movw	r22, r14
    2236:	80 e3       	ldi	r24, 0x30	; 48
    2238:	90 e0       	ldi	r25, 0x00	; 0
    223a:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    223e:	02 ff       	sbrs	r16, 2
    2240:	17 c0       	rjmp	.+46     	; 0x2270 <vfprintf+0x658>
    2242:	01 fd       	sbrc	r16, 1
    2244:	03 c0       	rjmp	.+6      	; 0x224c <vfprintf+0x634>
    2246:	88 e7       	ldi	r24, 0x78	; 120
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	02 c0       	rjmp	.+4      	; 0x2250 <vfprintf+0x638>
    224c:	88 e5       	ldi	r24, 0x58	; 88
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	b7 01       	movw	r22, r14
    2252:	0c c0       	rjmp	.+24     	; 0x226c <vfprintf+0x654>
    2254:	80 2f       	mov	r24, r16
    2256:	86 78       	andi	r24, 0x86	; 134
    2258:	59 f0       	breq	.+22     	; 0x2270 <vfprintf+0x658>
    225a:	01 ff       	sbrs	r16, 1
    225c:	02 c0       	rjmp	.+4      	; 0x2262 <vfprintf+0x64a>
    225e:	8b e2       	ldi	r24, 0x2B	; 43
    2260:	01 c0       	rjmp	.+2      	; 0x2264 <vfprintf+0x64c>
    2262:	80 e2       	ldi	r24, 0x20	; 32
    2264:	07 fd       	sbrc	r16, 7
    2266:	8d e2       	ldi	r24, 0x2D	; 45
    2268:	b7 01       	movw	r22, r14
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    2270:	c1 16       	cp	r12, r17
    2272:	38 f4       	brcc	.+14     	; 0x2282 <vfprintf+0x66a>
    2274:	b7 01       	movw	r22, r14
    2276:	80 e3       	ldi	r24, 0x30	; 48
    2278:	90 e0       	ldi	r25, 0x00	; 0
    227a:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    227e:	11 50       	subi	r17, 0x01	; 1
    2280:	f7 cf       	rjmp	.-18     	; 0x2270 <vfprintf+0x658>
    2282:	ca 94       	dec	r12
    2284:	f3 01       	movw	r30, r6
    2286:	ec 0d       	add	r30, r12
    2288:	f1 1d       	adc	r31, r1
    228a:	80 81       	ld	r24, Z
    228c:	b7 01       	movw	r22, r14
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    2294:	c1 10       	cpse	r12, r1
    2296:	f5 cf       	rjmp	.-22     	; 0x2282 <vfprintf+0x66a>
    2298:	15 c0       	rjmp	.+42     	; 0x22c4 <vfprintf+0x6ac>
    229a:	f4 e0       	ldi	r31, 0x04	; 4
    229c:	f5 15       	cp	r31, r5
    229e:	60 f5       	brcc	.+88     	; 0x22f8 <vfprintf+0x6e0>
    22a0:	84 e0       	ldi	r24, 0x04	; 4
    22a2:	58 1a       	sub	r5, r24
    22a4:	93 fe       	sbrs	r9, 3
    22a6:	1f c0       	rjmp	.+62     	; 0x22e6 <vfprintf+0x6ce>
    22a8:	01 11       	cpse	r16, r1
    22aa:	27 c0       	rjmp	.+78     	; 0x22fa <vfprintf+0x6e2>
    22ac:	2c 85       	ldd	r18, Y+12	; 0x0c
    22ae:	23 ff       	sbrs	r18, 3
    22b0:	2a c0       	rjmp	.+84     	; 0x2306 <vfprintf+0x6ee>
    22b2:	04 ef       	ldi	r16, 0xF4	; 244
    22b4:	10 e0       	ldi	r17, 0x00	; 0
    22b6:	39 2d       	mov	r19, r9
    22b8:	30 71       	andi	r19, 0x10	; 16
    22ba:	93 2e       	mov	r9, r19
    22bc:	f8 01       	movw	r30, r16
    22be:	84 91       	lpm	r24, Z
    22c0:	81 11       	cpse	r24, r1
    22c2:	24 c0       	rjmp	.+72     	; 0x230c <vfprintf+0x6f4>
    22c4:	55 20       	and	r5, r5
    22c6:	09 f4       	brne	.+2      	; 0x22ca <vfprintf+0x6b2>
    22c8:	e4 cc       	rjmp	.-1592   	; 0x1c92 <vfprintf+0x7a>
    22ca:	b7 01       	movw	r22, r14
    22cc:	80 e2       	ldi	r24, 0x20	; 32
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    22d4:	5a 94       	dec	r5
    22d6:	f6 cf       	rjmp	.-20     	; 0x22c4 <vfprintf+0x6ac>
    22d8:	f7 01       	movw	r30, r14
    22da:	86 81       	ldd	r24, Z+6	; 0x06
    22dc:	97 81       	ldd	r25, Z+7	; 0x07
    22de:	26 c0       	rjmp	.+76     	; 0x232c <vfprintf+0x714>
    22e0:	8f ef       	ldi	r24, 0xFF	; 255
    22e2:	9f ef       	ldi	r25, 0xFF	; 255
    22e4:	23 c0       	rjmp	.+70     	; 0x232c <vfprintf+0x714>
    22e6:	b7 01       	movw	r22, r14
    22e8:	80 e2       	ldi	r24, 0x20	; 32
    22ea:	90 e0       	ldi	r25, 0x00	; 0
    22ec:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    22f0:	5a 94       	dec	r5
    22f2:	51 10       	cpse	r5, r1
    22f4:	f8 cf       	rjmp	.-16     	; 0x22e6 <vfprintf+0x6ce>
    22f6:	d8 cf       	rjmp	.-80     	; 0x22a8 <vfprintf+0x690>
    22f8:	51 2c       	mov	r5, r1
    22fa:	b7 01       	movw	r22, r14
    22fc:	80 2f       	mov	r24, r16
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    2304:	d3 cf       	rjmp	.-90     	; 0x22ac <vfprintf+0x694>
    2306:	08 ef       	ldi	r16, 0xF8	; 248
    2308:	10 e0       	ldi	r17, 0x00	; 0
    230a:	d5 cf       	rjmp	.-86     	; 0x22b6 <vfprintf+0x69e>
    230c:	91 10       	cpse	r9, r1
    230e:	80 52       	subi	r24, 0x20	; 32
    2310:	b7 01       	movw	r22, r14
    2312:	90 e0       	ldi	r25, 0x00	; 0
    2314:	0e 94 ed 12 	call	0x25da	; 0x25da <fputc>
    2318:	0f 5f       	subi	r16, 0xFF	; 255
    231a:	1f 4f       	sbci	r17, 0xFF	; 255
    231c:	cf cf       	rjmp	.-98     	; 0x22bc <vfprintf+0x6a4>
    231e:	23 e0       	ldi	r18, 0x03	; 3
    2320:	25 15       	cp	r18, r5
    2322:	10 f4       	brcc	.+4      	; 0x2328 <vfprintf+0x710>
    2324:	83 e0       	ldi	r24, 0x03	; 3
    2326:	bd cf       	rjmp	.-134    	; 0x22a2 <vfprintf+0x68a>
    2328:	51 2c       	mov	r5, r1
    232a:	c0 cf       	rjmp	.-128    	; 0x22ac <vfprintf+0x694>
    232c:	60 96       	adiw	r28, 0x10	; 16
    232e:	cd bf       	out	0x3d, r28	; 61
    2330:	de bf       	out	0x3e, r29	; 62
    2332:	df 91       	pop	r29
    2334:	cf 91       	pop	r28
    2336:	1f 91       	pop	r17
    2338:	0f 91       	pop	r16
    233a:	ff 90       	pop	r15
    233c:	ef 90       	pop	r14
    233e:	df 90       	pop	r13
    2340:	cf 90       	pop	r12
    2342:	bf 90       	pop	r11
    2344:	af 90       	pop	r10
    2346:	9f 90       	pop	r9
    2348:	8f 90       	pop	r8
    234a:	7f 90       	pop	r7
    234c:	6f 90       	pop	r6
    234e:	5f 90       	pop	r5
    2350:	4f 90       	pop	r4
    2352:	3f 90       	pop	r3
    2354:	2f 90       	pop	r2
    2356:	08 95       	ret

00002358 <__divmodhi4>:
    2358:	97 fb       	bst	r25, 7
    235a:	07 2e       	mov	r0, r23
    235c:	16 f4       	brtc	.+4      	; 0x2362 <__divmodhi4+0xa>
    235e:	00 94       	com	r0
    2360:	07 d0       	rcall	.+14     	; 0x2370 <__divmodhi4_neg1>
    2362:	77 fd       	sbrc	r23, 7
    2364:	09 d0       	rcall	.+18     	; 0x2378 <__divmodhi4_neg2>
    2366:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__udivmodhi4>
    236a:	07 fc       	sbrc	r0, 7
    236c:	05 d0       	rcall	.+10     	; 0x2378 <__divmodhi4_neg2>
    236e:	3e f4       	brtc	.+14     	; 0x237e <__divmodhi4_exit>

00002370 <__divmodhi4_neg1>:
    2370:	90 95       	com	r25
    2372:	81 95       	neg	r24
    2374:	9f 4f       	sbci	r25, 0xFF	; 255
    2376:	08 95       	ret

00002378 <__divmodhi4_neg2>:
    2378:	70 95       	com	r23
    237a:	61 95       	neg	r22
    237c:	7f 4f       	sbci	r23, 0xFF	; 255

0000237e <__divmodhi4_exit>:
    237e:	08 95       	ret

00002380 <__udivmodsi4>:
    2380:	a1 e2       	ldi	r26, 0x21	; 33
    2382:	1a 2e       	mov	r1, r26
    2384:	aa 1b       	sub	r26, r26
    2386:	bb 1b       	sub	r27, r27
    2388:	fd 01       	movw	r30, r26
    238a:	0d c0       	rjmp	.+26     	; 0x23a6 <__udivmodsi4_ep>

0000238c <__udivmodsi4_loop>:
    238c:	aa 1f       	adc	r26, r26
    238e:	bb 1f       	adc	r27, r27
    2390:	ee 1f       	adc	r30, r30
    2392:	ff 1f       	adc	r31, r31
    2394:	a2 17       	cp	r26, r18
    2396:	b3 07       	cpc	r27, r19
    2398:	e4 07       	cpc	r30, r20
    239a:	f5 07       	cpc	r31, r21
    239c:	20 f0       	brcs	.+8      	; 0x23a6 <__udivmodsi4_ep>
    239e:	a2 1b       	sub	r26, r18
    23a0:	b3 0b       	sbc	r27, r19
    23a2:	e4 0b       	sbc	r30, r20
    23a4:	f5 0b       	sbc	r31, r21

000023a6 <__udivmodsi4_ep>:
    23a6:	66 1f       	adc	r22, r22
    23a8:	77 1f       	adc	r23, r23
    23aa:	88 1f       	adc	r24, r24
    23ac:	99 1f       	adc	r25, r25
    23ae:	1a 94       	dec	r1
    23b0:	69 f7       	brne	.-38     	; 0x238c <__udivmodsi4_loop>
    23b2:	60 95       	com	r22
    23b4:	70 95       	com	r23
    23b6:	80 95       	com	r24
    23b8:	90 95       	com	r25
    23ba:	9b 01       	movw	r18, r22
    23bc:	ac 01       	movw	r20, r24
    23be:	bd 01       	movw	r22, r26
    23c0:	cf 01       	movw	r24, r30
    23c2:	08 95       	ret

000023c4 <__udivmodhi4>:
    23c4:	aa 1b       	sub	r26, r26
    23c6:	bb 1b       	sub	r27, r27
    23c8:	51 e1       	ldi	r21, 0x11	; 17
    23ca:	07 c0       	rjmp	.+14     	; 0x23da <__udivmodhi4_ep>

000023cc <__udivmodhi4_loop>:
    23cc:	aa 1f       	adc	r26, r26
    23ce:	bb 1f       	adc	r27, r27
    23d0:	a6 17       	cp	r26, r22
    23d2:	b7 07       	cpc	r27, r23
    23d4:	10 f0       	brcs	.+4      	; 0x23da <__udivmodhi4_ep>
    23d6:	a6 1b       	sub	r26, r22
    23d8:	b7 0b       	sbc	r27, r23

000023da <__udivmodhi4_ep>:
    23da:	88 1f       	adc	r24, r24
    23dc:	99 1f       	adc	r25, r25
    23de:	5a 95       	dec	r21
    23e0:	a9 f7       	brne	.-22     	; 0x23cc <__udivmodhi4_loop>
    23e2:	80 95       	com	r24
    23e4:	90 95       	com	r25
    23e6:	bc 01       	movw	r22, r24
    23e8:	cd 01       	movw	r24, r26
    23ea:	08 95       	ret

000023ec <__tablejump2__>:
    23ec:	ee 0f       	add	r30, r30
    23ee:	ff 1f       	adc	r31, r31
    23f0:	00 24       	eor	r0, r0
    23f2:	00 1c       	adc	r0, r0
    23f4:	0b be       	out	0x3b, r0	; 59
    23f6:	07 90       	elpm	r0, Z+
    23f8:	f6 91       	elpm	r31, Z
    23fa:	e0 2d       	mov	r30, r0
    23fc:	09 94       	ijmp

000023fe <__ftoa_engine>:
    23fe:	28 30       	cpi	r18, 0x08	; 8
    2400:	08 f0       	brcs	.+2      	; 0x2404 <__ftoa_engine+0x6>
    2402:	27 e0       	ldi	r18, 0x07	; 7
    2404:	33 27       	eor	r19, r19
    2406:	da 01       	movw	r26, r20
    2408:	99 0f       	add	r25, r25
    240a:	31 1d       	adc	r19, r1
    240c:	87 fd       	sbrc	r24, 7
    240e:	91 60       	ori	r25, 0x01	; 1
    2410:	00 96       	adiw	r24, 0x00	; 0
    2412:	61 05       	cpc	r22, r1
    2414:	71 05       	cpc	r23, r1
    2416:	39 f4       	brne	.+14     	; 0x2426 <__ftoa_engine+0x28>
    2418:	32 60       	ori	r19, 0x02	; 2
    241a:	2e 5f       	subi	r18, 0xFE	; 254
    241c:	3d 93       	st	X+, r19
    241e:	30 e3       	ldi	r19, 0x30	; 48
    2420:	2a 95       	dec	r18
    2422:	e1 f7       	brne	.-8      	; 0x241c <__ftoa_engine+0x1e>
    2424:	08 95       	ret
    2426:	9f 3f       	cpi	r25, 0xFF	; 255
    2428:	30 f0       	brcs	.+12     	; 0x2436 <__ftoa_engine+0x38>
    242a:	80 38       	cpi	r24, 0x80	; 128
    242c:	71 05       	cpc	r23, r1
    242e:	61 05       	cpc	r22, r1
    2430:	09 f0       	breq	.+2      	; 0x2434 <__ftoa_engine+0x36>
    2432:	3c 5f       	subi	r19, 0xFC	; 252
    2434:	3c 5f       	subi	r19, 0xFC	; 252
    2436:	3d 93       	st	X+, r19
    2438:	91 30       	cpi	r25, 0x01	; 1
    243a:	08 f0       	brcs	.+2      	; 0x243e <__ftoa_engine+0x40>
    243c:	80 68       	ori	r24, 0x80	; 128
    243e:	91 1d       	adc	r25, r1
    2440:	df 93       	push	r29
    2442:	cf 93       	push	r28
    2444:	1f 93       	push	r17
    2446:	0f 93       	push	r16
    2448:	ff 92       	push	r15
    244a:	ef 92       	push	r14
    244c:	19 2f       	mov	r17, r25
    244e:	98 7f       	andi	r25, 0xF8	; 248
    2450:	96 95       	lsr	r25
    2452:	e9 2f       	mov	r30, r25
    2454:	96 95       	lsr	r25
    2456:	96 95       	lsr	r25
    2458:	e9 0f       	add	r30, r25
    245a:	ff 27       	eor	r31, r31
    245c:	ea 5a       	subi	r30, 0xAA	; 170
    245e:	fe 4f       	sbci	r31, 0xFE	; 254
    2460:	99 27       	eor	r25, r25
    2462:	33 27       	eor	r19, r19
    2464:	ee 24       	eor	r14, r14
    2466:	ff 24       	eor	r15, r15
    2468:	a7 01       	movw	r20, r14
    246a:	e7 01       	movw	r28, r14
    246c:	05 90       	lpm	r0, Z+
    246e:	08 94       	sec
    2470:	07 94       	ror	r0
    2472:	28 f4       	brcc	.+10     	; 0x247e <__ftoa_engine+0x80>
    2474:	36 0f       	add	r19, r22
    2476:	e7 1e       	adc	r14, r23
    2478:	f8 1e       	adc	r15, r24
    247a:	49 1f       	adc	r20, r25
    247c:	51 1d       	adc	r21, r1
    247e:	66 0f       	add	r22, r22
    2480:	77 1f       	adc	r23, r23
    2482:	88 1f       	adc	r24, r24
    2484:	99 1f       	adc	r25, r25
    2486:	06 94       	lsr	r0
    2488:	a1 f7       	brne	.-24     	; 0x2472 <__ftoa_engine+0x74>
    248a:	05 90       	lpm	r0, Z+
    248c:	07 94       	ror	r0
    248e:	28 f4       	brcc	.+10     	; 0x249a <__ftoa_engine+0x9c>
    2490:	e7 0e       	add	r14, r23
    2492:	f8 1e       	adc	r15, r24
    2494:	49 1f       	adc	r20, r25
    2496:	56 1f       	adc	r21, r22
    2498:	c1 1d       	adc	r28, r1
    249a:	77 0f       	add	r23, r23
    249c:	88 1f       	adc	r24, r24
    249e:	99 1f       	adc	r25, r25
    24a0:	66 1f       	adc	r22, r22
    24a2:	06 94       	lsr	r0
    24a4:	a1 f7       	brne	.-24     	; 0x248e <__ftoa_engine+0x90>
    24a6:	05 90       	lpm	r0, Z+
    24a8:	07 94       	ror	r0
    24aa:	28 f4       	brcc	.+10     	; 0x24b6 <__ftoa_engine+0xb8>
    24ac:	f8 0e       	add	r15, r24
    24ae:	49 1f       	adc	r20, r25
    24b0:	56 1f       	adc	r21, r22
    24b2:	c7 1f       	adc	r28, r23
    24b4:	d1 1d       	adc	r29, r1
    24b6:	88 0f       	add	r24, r24
    24b8:	99 1f       	adc	r25, r25
    24ba:	66 1f       	adc	r22, r22
    24bc:	77 1f       	adc	r23, r23
    24be:	06 94       	lsr	r0
    24c0:	a1 f7       	brne	.-24     	; 0x24aa <__ftoa_engine+0xac>
    24c2:	05 90       	lpm	r0, Z+
    24c4:	07 94       	ror	r0
    24c6:	20 f4       	brcc	.+8      	; 0x24d0 <__ftoa_engine+0xd2>
    24c8:	49 0f       	add	r20, r25
    24ca:	56 1f       	adc	r21, r22
    24cc:	c7 1f       	adc	r28, r23
    24ce:	d8 1f       	adc	r29, r24
    24d0:	99 0f       	add	r25, r25
    24d2:	66 1f       	adc	r22, r22
    24d4:	77 1f       	adc	r23, r23
    24d6:	88 1f       	adc	r24, r24
    24d8:	06 94       	lsr	r0
    24da:	a9 f7       	brne	.-22     	; 0x24c6 <__ftoa_engine+0xc8>
    24dc:	84 91       	lpm	r24, Z
    24de:	10 95       	com	r17
    24e0:	17 70       	andi	r17, 0x07	; 7
    24e2:	41 f0       	breq	.+16     	; 0x24f4 <__ftoa_engine+0xf6>
    24e4:	d6 95       	lsr	r29
    24e6:	c7 95       	ror	r28
    24e8:	57 95       	ror	r21
    24ea:	47 95       	ror	r20
    24ec:	f7 94       	ror	r15
    24ee:	e7 94       	ror	r14
    24f0:	1a 95       	dec	r17
    24f2:	c1 f7       	brne	.-16     	; 0x24e4 <__ftoa_engine+0xe6>
    24f4:	ec ef       	ldi	r30, 0xFC	; 252
    24f6:	f0 e0       	ldi	r31, 0x00	; 0
    24f8:	68 94       	set
    24fa:	15 90       	lpm	r1, Z+
    24fc:	15 91       	lpm	r17, Z+
    24fe:	35 91       	lpm	r19, Z+
    2500:	65 91       	lpm	r22, Z+
    2502:	95 91       	lpm	r25, Z+
    2504:	05 90       	lpm	r0, Z+
    2506:	7f e2       	ldi	r23, 0x2F	; 47
    2508:	73 95       	inc	r23
    250a:	e1 18       	sub	r14, r1
    250c:	f1 0a       	sbc	r15, r17
    250e:	43 0b       	sbc	r20, r19
    2510:	56 0b       	sbc	r21, r22
    2512:	c9 0b       	sbc	r28, r25
    2514:	d0 09       	sbc	r29, r0
    2516:	c0 f7       	brcc	.-16     	; 0x2508 <__ftoa_engine+0x10a>
    2518:	e1 0c       	add	r14, r1
    251a:	f1 1e       	adc	r15, r17
    251c:	43 1f       	adc	r20, r19
    251e:	56 1f       	adc	r21, r22
    2520:	c9 1f       	adc	r28, r25
    2522:	d0 1d       	adc	r29, r0
    2524:	7e f4       	brtc	.+30     	; 0x2544 <__ftoa_engine+0x146>
    2526:	70 33       	cpi	r23, 0x30	; 48
    2528:	11 f4       	brne	.+4      	; 0x252e <__ftoa_engine+0x130>
    252a:	8a 95       	dec	r24
    252c:	e6 cf       	rjmp	.-52     	; 0x24fa <__ftoa_engine+0xfc>
    252e:	e8 94       	clt
    2530:	01 50       	subi	r16, 0x01	; 1
    2532:	30 f0       	brcs	.+12     	; 0x2540 <__ftoa_engine+0x142>
    2534:	08 0f       	add	r16, r24
    2536:	0a f4       	brpl	.+2      	; 0x253a <__ftoa_engine+0x13c>
    2538:	00 27       	eor	r16, r16
    253a:	02 17       	cp	r16, r18
    253c:	08 f4       	brcc	.+2      	; 0x2540 <__ftoa_engine+0x142>
    253e:	20 2f       	mov	r18, r16
    2540:	23 95       	inc	r18
    2542:	02 2f       	mov	r16, r18
    2544:	7a 33       	cpi	r23, 0x3A	; 58
    2546:	28 f0       	brcs	.+10     	; 0x2552 <__ftoa_engine+0x154>
    2548:	79 e3       	ldi	r23, 0x39	; 57
    254a:	7d 93       	st	X+, r23
    254c:	2a 95       	dec	r18
    254e:	e9 f7       	brne	.-6      	; 0x254a <__ftoa_engine+0x14c>
    2550:	10 c0       	rjmp	.+32     	; 0x2572 <__ftoa_engine+0x174>
    2552:	7d 93       	st	X+, r23
    2554:	2a 95       	dec	r18
    2556:	89 f6       	brne	.-94     	; 0x24fa <__ftoa_engine+0xfc>
    2558:	06 94       	lsr	r0
    255a:	97 95       	ror	r25
    255c:	67 95       	ror	r22
    255e:	37 95       	ror	r19
    2560:	17 95       	ror	r17
    2562:	17 94       	ror	r1
    2564:	e1 18       	sub	r14, r1
    2566:	f1 0a       	sbc	r15, r17
    2568:	43 0b       	sbc	r20, r19
    256a:	56 0b       	sbc	r21, r22
    256c:	c9 0b       	sbc	r28, r25
    256e:	d0 09       	sbc	r29, r0
    2570:	98 f0       	brcs	.+38     	; 0x2598 <__ftoa_engine+0x19a>
    2572:	23 95       	inc	r18
    2574:	7e 91       	ld	r23, -X
    2576:	73 95       	inc	r23
    2578:	7a 33       	cpi	r23, 0x3A	; 58
    257a:	08 f0       	brcs	.+2      	; 0x257e <__ftoa_engine+0x180>
    257c:	70 e3       	ldi	r23, 0x30	; 48
    257e:	7c 93       	st	X, r23
    2580:	20 13       	cpse	r18, r16
    2582:	b8 f7       	brcc	.-18     	; 0x2572 <__ftoa_engine+0x174>
    2584:	7e 91       	ld	r23, -X
    2586:	70 61       	ori	r23, 0x10	; 16
    2588:	7d 93       	st	X+, r23
    258a:	30 f0       	brcs	.+12     	; 0x2598 <__ftoa_engine+0x19a>
    258c:	83 95       	inc	r24
    258e:	71 e3       	ldi	r23, 0x31	; 49
    2590:	7d 93       	st	X+, r23
    2592:	70 e3       	ldi	r23, 0x30	; 48
    2594:	2a 95       	dec	r18
    2596:	e1 f7       	brne	.-8      	; 0x2590 <__ftoa_engine+0x192>
    2598:	11 24       	eor	r1, r1
    259a:	ef 90       	pop	r14
    259c:	ff 90       	pop	r15
    259e:	0f 91       	pop	r16
    25a0:	1f 91       	pop	r17
    25a2:	cf 91       	pop	r28
    25a4:	df 91       	pop	r29
    25a6:	99 27       	eor	r25, r25
    25a8:	87 fd       	sbrc	r24, 7
    25aa:	90 95       	com	r25
    25ac:	08 95       	ret

000025ae <strnlen_P>:
    25ae:	fc 01       	movw	r30, r24
    25b0:	05 90       	lpm	r0, Z+
    25b2:	61 50       	subi	r22, 0x01	; 1
    25b4:	70 40       	sbci	r23, 0x00	; 0
    25b6:	01 10       	cpse	r0, r1
    25b8:	d8 f7       	brcc	.-10     	; 0x25b0 <strnlen_P+0x2>
    25ba:	80 95       	com	r24
    25bc:	90 95       	com	r25
    25be:	8e 0f       	add	r24, r30
    25c0:	9f 1f       	adc	r25, r31
    25c2:	08 95       	ret

000025c4 <strnlen>:
    25c4:	fc 01       	movw	r30, r24
    25c6:	61 50       	subi	r22, 0x01	; 1
    25c8:	70 40       	sbci	r23, 0x00	; 0
    25ca:	01 90       	ld	r0, Z+
    25cc:	01 10       	cpse	r0, r1
    25ce:	d8 f7       	brcc	.-10     	; 0x25c6 <strnlen+0x2>
    25d0:	80 95       	com	r24
    25d2:	90 95       	com	r25
    25d4:	8e 0f       	add	r24, r30
    25d6:	9f 1f       	adc	r25, r31
    25d8:	08 95       	ret

000025da <fputc>:
    25da:	0f 93       	push	r16
    25dc:	1f 93       	push	r17
    25de:	cf 93       	push	r28
    25e0:	df 93       	push	r29
    25e2:	fb 01       	movw	r30, r22
    25e4:	23 81       	ldd	r18, Z+3	; 0x03
    25e6:	21 fd       	sbrc	r18, 1
    25e8:	03 c0       	rjmp	.+6      	; 0x25f0 <fputc+0x16>
    25ea:	8f ef       	ldi	r24, 0xFF	; 255
    25ec:	9f ef       	ldi	r25, 0xFF	; 255
    25ee:	2c c0       	rjmp	.+88     	; 0x2648 <fputc+0x6e>
    25f0:	22 ff       	sbrs	r18, 2
    25f2:	16 c0       	rjmp	.+44     	; 0x2620 <fputc+0x46>
    25f4:	46 81       	ldd	r20, Z+6	; 0x06
    25f6:	57 81       	ldd	r21, Z+7	; 0x07
    25f8:	24 81       	ldd	r18, Z+4	; 0x04
    25fa:	35 81       	ldd	r19, Z+5	; 0x05
    25fc:	42 17       	cp	r20, r18
    25fe:	53 07       	cpc	r21, r19
    2600:	44 f4       	brge	.+16     	; 0x2612 <fputc+0x38>
    2602:	a0 81       	ld	r26, Z
    2604:	b1 81       	ldd	r27, Z+1	; 0x01
    2606:	9d 01       	movw	r18, r26
    2608:	2f 5f       	subi	r18, 0xFF	; 255
    260a:	3f 4f       	sbci	r19, 0xFF	; 255
    260c:	20 83       	st	Z, r18
    260e:	31 83       	std	Z+1, r19	; 0x01
    2610:	8c 93       	st	X, r24
    2612:	26 81       	ldd	r18, Z+6	; 0x06
    2614:	37 81       	ldd	r19, Z+7	; 0x07
    2616:	2f 5f       	subi	r18, 0xFF	; 255
    2618:	3f 4f       	sbci	r19, 0xFF	; 255
    261a:	26 83       	std	Z+6, r18	; 0x06
    261c:	37 83       	std	Z+7, r19	; 0x07
    261e:	14 c0       	rjmp	.+40     	; 0x2648 <fputc+0x6e>
    2620:	8b 01       	movw	r16, r22
    2622:	ec 01       	movw	r28, r24
    2624:	fb 01       	movw	r30, r22
    2626:	00 84       	ldd	r0, Z+8	; 0x08
    2628:	f1 85       	ldd	r31, Z+9	; 0x09
    262a:	e0 2d       	mov	r30, r0
    262c:	09 95       	icall
    262e:	89 2b       	or	r24, r25
    2630:	e1 f6       	brne	.-72     	; 0x25ea <fputc+0x10>
    2632:	d8 01       	movw	r26, r16
    2634:	16 96       	adiw	r26, 0x06	; 6
    2636:	8d 91       	ld	r24, X+
    2638:	9c 91       	ld	r25, X
    263a:	17 97       	sbiw	r26, 0x07	; 7
    263c:	01 96       	adiw	r24, 0x01	; 1
    263e:	16 96       	adiw	r26, 0x06	; 6
    2640:	8d 93       	st	X+, r24
    2642:	9c 93       	st	X, r25
    2644:	17 97       	sbiw	r26, 0x07	; 7
    2646:	ce 01       	movw	r24, r28
    2648:	df 91       	pop	r29
    264a:	cf 91       	pop	r28
    264c:	1f 91       	pop	r17
    264e:	0f 91       	pop	r16
    2650:	08 95       	ret

00002652 <printf>:
    2652:	cf 93       	push	r28
    2654:	df 93       	push	r29
    2656:	cd b7       	in	r28, 0x3d	; 61
    2658:	de b7       	in	r29, 0x3e	; 62
    265a:	ae 01       	movw	r20, r28
    265c:	4b 5f       	subi	r20, 0xFB	; 251
    265e:	5f 4f       	sbci	r21, 0xFF	; 255
    2660:	fa 01       	movw	r30, r20
    2662:	61 91       	ld	r22, Z+
    2664:	71 91       	ld	r23, Z+
    2666:	af 01       	movw	r20, r30
    2668:	80 91 69 43 	lds	r24, 0x4369	; 0x804369 <__iob+0x2>
    266c:	90 91 6a 43 	lds	r25, 0x436A	; 0x80436a <__iob+0x3>
    2670:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <vfprintf>
    2674:	df 91       	pop	r29
    2676:	cf 91       	pop	r28
    2678:	08 95       	ret

0000267a <__ultoa_invert>:
    267a:	fa 01       	movw	r30, r20
    267c:	aa 27       	eor	r26, r26
    267e:	28 30       	cpi	r18, 0x08	; 8
    2680:	51 f1       	breq	.+84     	; 0x26d6 <__ultoa_invert+0x5c>
    2682:	20 31       	cpi	r18, 0x10	; 16
    2684:	81 f1       	breq	.+96     	; 0x26e6 <__ultoa_invert+0x6c>
    2686:	e8 94       	clt
    2688:	6f 93       	push	r22
    268a:	6e 7f       	andi	r22, 0xFE	; 254
    268c:	6e 5f       	subi	r22, 0xFE	; 254
    268e:	7f 4f       	sbci	r23, 0xFF	; 255
    2690:	8f 4f       	sbci	r24, 0xFF	; 255
    2692:	9f 4f       	sbci	r25, 0xFF	; 255
    2694:	af 4f       	sbci	r26, 0xFF	; 255
    2696:	b1 e0       	ldi	r27, 0x01	; 1
    2698:	3e d0       	rcall	.+124    	; 0x2716 <__ultoa_invert+0x9c>
    269a:	b4 e0       	ldi	r27, 0x04	; 4
    269c:	3c d0       	rcall	.+120    	; 0x2716 <__ultoa_invert+0x9c>
    269e:	67 0f       	add	r22, r23
    26a0:	78 1f       	adc	r23, r24
    26a2:	89 1f       	adc	r24, r25
    26a4:	9a 1f       	adc	r25, r26
    26a6:	a1 1d       	adc	r26, r1
    26a8:	68 0f       	add	r22, r24
    26aa:	79 1f       	adc	r23, r25
    26ac:	8a 1f       	adc	r24, r26
    26ae:	91 1d       	adc	r25, r1
    26b0:	a1 1d       	adc	r26, r1
    26b2:	6a 0f       	add	r22, r26
    26b4:	71 1d       	adc	r23, r1
    26b6:	81 1d       	adc	r24, r1
    26b8:	91 1d       	adc	r25, r1
    26ba:	a1 1d       	adc	r26, r1
    26bc:	20 d0       	rcall	.+64     	; 0x26fe <__ultoa_invert+0x84>
    26be:	09 f4       	brne	.+2      	; 0x26c2 <__ultoa_invert+0x48>
    26c0:	68 94       	set
    26c2:	3f 91       	pop	r19
    26c4:	2a e0       	ldi	r18, 0x0A	; 10
    26c6:	26 9f       	mul	r18, r22
    26c8:	11 24       	eor	r1, r1
    26ca:	30 19       	sub	r19, r0
    26cc:	30 5d       	subi	r19, 0xD0	; 208
    26ce:	31 93       	st	Z+, r19
    26d0:	de f6       	brtc	.-74     	; 0x2688 <__ultoa_invert+0xe>
    26d2:	cf 01       	movw	r24, r30
    26d4:	08 95       	ret
    26d6:	46 2f       	mov	r20, r22
    26d8:	47 70       	andi	r20, 0x07	; 7
    26da:	40 5d       	subi	r20, 0xD0	; 208
    26dc:	41 93       	st	Z+, r20
    26de:	b3 e0       	ldi	r27, 0x03	; 3
    26e0:	0f d0       	rcall	.+30     	; 0x2700 <__ultoa_invert+0x86>
    26e2:	c9 f7       	brne	.-14     	; 0x26d6 <__ultoa_invert+0x5c>
    26e4:	f6 cf       	rjmp	.-20     	; 0x26d2 <__ultoa_invert+0x58>
    26e6:	46 2f       	mov	r20, r22
    26e8:	4f 70       	andi	r20, 0x0F	; 15
    26ea:	40 5d       	subi	r20, 0xD0	; 208
    26ec:	4a 33       	cpi	r20, 0x3A	; 58
    26ee:	18 f0       	brcs	.+6      	; 0x26f6 <__ultoa_invert+0x7c>
    26f0:	49 5d       	subi	r20, 0xD9	; 217
    26f2:	31 fd       	sbrc	r19, 1
    26f4:	40 52       	subi	r20, 0x20	; 32
    26f6:	41 93       	st	Z+, r20
    26f8:	02 d0       	rcall	.+4      	; 0x26fe <__ultoa_invert+0x84>
    26fa:	a9 f7       	brne	.-22     	; 0x26e6 <__ultoa_invert+0x6c>
    26fc:	ea cf       	rjmp	.-44     	; 0x26d2 <__ultoa_invert+0x58>
    26fe:	b4 e0       	ldi	r27, 0x04	; 4
    2700:	a6 95       	lsr	r26
    2702:	97 95       	ror	r25
    2704:	87 95       	ror	r24
    2706:	77 95       	ror	r23
    2708:	67 95       	ror	r22
    270a:	ba 95       	dec	r27
    270c:	c9 f7       	brne	.-14     	; 0x2700 <__ultoa_invert+0x86>
    270e:	00 97       	sbiw	r24, 0x00	; 0
    2710:	61 05       	cpc	r22, r1
    2712:	71 05       	cpc	r23, r1
    2714:	08 95       	ret
    2716:	9b 01       	movw	r18, r22
    2718:	ac 01       	movw	r20, r24
    271a:	0a 2e       	mov	r0, r26
    271c:	06 94       	lsr	r0
    271e:	57 95       	ror	r21
    2720:	47 95       	ror	r20
    2722:	37 95       	ror	r19
    2724:	27 95       	ror	r18
    2726:	ba 95       	dec	r27
    2728:	c9 f7       	brne	.-14     	; 0x271c <__ultoa_invert+0xa2>
    272a:	62 0f       	add	r22, r18
    272c:	73 1f       	adc	r23, r19
    272e:	84 1f       	adc	r24, r20
    2730:	95 1f       	adc	r25, r21
    2732:	a0 1d       	adc	r26, r0
    2734:	08 95       	ret

00002736 <__do_global_dtors>:
    2736:	10 e0       	ldi	r17, 0x00	; 0
    2738:	cd ef       	ldi	r28, 0xFD	; 253
    273a:	d0 e0       	ldi	r29, 0x00	; 0
    273c:	04 c0       	rjmp	.+8      	; 0x2746 <__do_global_dtors+0x10>
    273e:	fe 01       	movw	r30, r28
    2740:	0e 94 f6 11 	call	0x23ec	; 0x23ec <__tablejump2__>
    2744:	21 96       	adiw	r28, 0x01	; 1
    2746:	cf 3f       	cpi	r28, 0xFF	; 255
    2748:	d1 07       	cpc	r29, r17
    274a:	c9 f7       	brne	.-14     	; 0x273e <__do_global_dtors+0x8>
    274c:	f8 94       	cli

0000274e <__stop_program>:
    274e:	ff cf       	rjmp	.-2      	; 0x274e <__stop_program>
