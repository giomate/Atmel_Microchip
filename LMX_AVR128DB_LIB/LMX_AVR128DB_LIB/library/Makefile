################################################################################
# Automatically-generated file. Do not edit!
################################################################################

SHELL := cmd.exe
RM := rm -rf

USER_OBJS :=

LIBS := 
PROJ := 

O_SRCS := 
C_SRCS := 
S_SRCS := 
S_UPPER_SRCS := 
OBJ_SRCS := 
ASM_SRCS := 
PREPROCESSING_SRCS := 
OBJS := 
OBJS_AS_ARGS := 
C_DEPS := 
C_DEPS_AS_ARGS := 
EXECUTABLES := 
OUTPUT_FILE_PATH :=
OUTPUT_FILE_PATH_AS_ARGS :=
AVR_APP_PATH :=$$$AVR_APP_PATH$$$
QUOTE := "
ADDITIONAL_DEPENDENCIES:=
OUTPUT_FILE_DEP:=
LIB_DEP:=
LINKER_SCRIPT_DEP:=

# Every subdirectory with source files must be described here
SUBDIRS := 


# Add inputs and outputs from these tool invocations to the build variables 
C_SRCS +=  \
../lmx2694Handler.cpp \
../main.cpp \
../SPI_Async_Handler.cpp \
../SPI_Syn_Class.cpp


PREPROCESSING_SRCS += 


ASM_SRCS += 


OBJS +=  \
lmx2694Handler.o \
main.o \
SPI_Async_Handler.o \
SPI_Syn_Class.o

OBJS_AS_ARGS +=  \
lmx2694Handler.o \
main.o \
SPI_Async_Handler.o \
SPI_Syn_Class.o

C_DEPS +=  \
lmx2694Handler.d \
main.d \
SPI_Async_Handler.d \
SPI_Syn_Class.d

C_DEPS_AS_ARGS +=  \
lmx2694Handler.d \
main.d \
SPI_Async_Handler.d \
SPI_Syn_Class.d

OUTPUT_FILE_PATH +=libLMX_AVR128DB_LIB.a

OUTPUT_FILE_PATH_AS_ARGS +=libLMX_AVR128DB_LIB.a

ADDITIONAL_DEPENDENCIES:=

OUTPUT_FILE_DEP:= ./makedep.mk

LIB_DEP+=  \
C:/Users/GMateusDP/Documents/Trobina/Development/Software/Atmel_Microchip/AVR128DB_BSP/AVR128DB_BSP/Debug/libAVR128DB_BSP.a

LINKER_SCRIPT_DEP+= 


# AVR32/GNU C Compiler
./lmx2694Handler.o: .././lmx2694Handler.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 5.4.0
	$(QUOTE)C:\Program Files (x86)\Atmel\Studio\7.0\toolchain\avr8\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DDEBUG -DONLY_LOCK_SIGNAL  -I".." -I"C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/examples/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils/assembler" -I"../../../AVR128DB_BSP/AVR128DB_BSP/src" -I"../../../AVR128DB_BSP/AVR128DB_BSP" -I"../../../AVR128DB_BSP/AVR128DB_BSP/Config"  -O0 -ffunction-sections -fdata-sections -fpack-struct -fshort-enums -g2 -Wall -mmcu=avr128db48 -B "C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\gcc\dev\avr128db48" -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	

./main.o: .././main.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 5.4.0
	$(QUOTE)C:\Program Files (x86)\Atmel\Studio\7.0\toolchain\avr8\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DDEBUG -DONLY_LOCK_SIGNAL  -I".." -I"C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/examples/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils/assembler" -I"../../../AVR128DB_BSP/AVR128DB_BSP/src" -I"../../../AVR128DB_BSP/AVR128DB_BSP" -I"../../../AVR128DB_BSP/AVR128DB_BSP/Config"  -O0 -ffunction-sections -fdata-sections -fpack-struct -fshort-enums -g2 -Wall -mmcu=avr128db48 -B "C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\gcc\dev\avr128db48" -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	

./SPI_Async_Handler.o: .././SPI_Async_Handler.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 5.4.0
	$(QUOTE)C:\Program Files (x86)\Atmel\Studio\7.0\toolchain\avr8\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DDEBUG -DONLY_LOCK_SIGNAL  -I".." -I"C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/examples/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils/assembler" -I"../../../AVR128DB_BSP/AVR128DB_BSP/src" -I"../../../AVR128DB_BSP/AVR128DB_BSP" -I"../../../AVR128DB_BSP/AVR128DB_BSP/Config"  -O0 -ffunction-sections -fdata-sections -fpack-struct -fshort-enums -g2 -Wall -mmcu=avr128db48 -B "C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\gcc\dev\avr128db48" -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	

./SPI_Syn_Class.o: .././SPI_Syn_Class.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 5.4.0
	$(QUOTE)C:\Program Files (x86)\Atmel\Studio\7.0\toolchain\avr8\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DDEBUG -DONLY_LOCK_SIGNAL  -I".." -I"C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/examples/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/include" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils" -I"../../../AVR128DB_BSP/AVR128DB_BSP/utils/assembler" -I"../../../AVR128DB_BSP/AVR128DB_BSP/src" -I"../../../AVR128DB_BSP/AVR128DB_BSP" -I"../../../AVR128DB_BSP/AVR128DB_BSP/Config"  -O0 -ffunction-sections -fdata-sections -fpack-struct -fshort-enums -g2 -Wall -mmcu=avr128db48 -B "C:\Program Files (x86)\Atmel\Studio\7.0\Packs\Atmel\AVR-Dx_DFP\1.7.85\gcc\dev\avr128db48" -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	




# AVR32/GNU Preprocessing Assembler



# AVR32/GNU Assembler




ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif

# Add inputs and outputs from these tool invocations to the build variables 

# All Target
all: $(OUTPUT_FILE_PATH) $(ADDITIONAL_DEPENDENCIES)


$(OUTPUT_FILE_PATH): $(OBJS) $(USER_OBJS) $(OUTPUT_FILE_DEP)
	@echo Building target: $@
	@echo Invoking: AVR8/GNU Archiver : 5.4.0
	$(QUOTE)C:\Program Files (x86)\Atmel\Studio\7.0\toolchain\avr8\avr8-gnu-toolchain\bin\avr-ar.exe$(QUOTE) -r  -o$(OUTPUT_FILE_PATH_AS_ARGS) $(OBJS_AS_ARGS) $(USER_OBJS) $(LIBS) 
	@echo Finished building target: $@
	
	




# Other Targets
clean:
	-$(RM) $(OBJS_AS_ARGS) $(EXECUTABLES)  
	-$(RM) $(C_DEPS_AS_ARGS)   
	rm -rf "libLMX_AVR128DB_LIB.elf" "libLMX_AVR128DB_LIB.a" "libLMX_AVR128DB_LIB.hex" "libLMX_AVR128DB_LIB.lss" "libLMX_AVR128DB_LIB.eep" "libLMX_AVR128DB_LIB.map" "libLMX_AVR128DB_LIB.srec" "libLMX_AVR128DB_LIB.usersignatures"
	