
ADF5610_AVR128DB_LIB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00804000  00002d36  00002dca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000174  008040aa  008040aa  00002e74  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002e74  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ed0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000470  00000000  00000000  00002f10  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000092e6  00000000  00000000  00003380  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000044b7  00000000  00000000  0000c666  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002881  00000000  00000000  00010b1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a54  00000000  00000000  000133a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004b4a  00000000  00000000  00013df4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002462  00000000  00000000  0001893e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000368  00000000  00000000  0001ada0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <__dtors_end>
       4:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
       8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
       c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      10:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      14:	0c 94 92 0a 	jmp	0x1524	; 0x1524 <__vector_5>
      18:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      1c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      20:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      24:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      28:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      2c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      30:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      34:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      38:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      3c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      40:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      44:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      48:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      4c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      50:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      54:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      58:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      5c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      60:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      64:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      68:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      6c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      70:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      74:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      78:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      7c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      80:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      84:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      88:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      8c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      90:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      94:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      98:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      9c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      a0:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      a4:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      a8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      ac:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      b0:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      b4:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      b8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      bc:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      c0:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      c4:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      c8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      cc:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      d0:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      d4:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      d8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      dc:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      e0:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      e4:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      e8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      ec:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      f0:	0c 94 95 01 	jmp	0x32a	; 0x32a <__bad_interrupt>
      f4:	56 03       	mulsu	r21, r22
      f6:	69 03       	fmul	r22, r17
      f8:	7c 03       	fmul	r23, r20
      fa:	8e 03       	fmulsu	r16, r22
      fc:	a3 03       	fmuls	r18, r19
      fe:	ba 03       	fmulsu	r19, r18
     100:	c8 03       	fmulsu	r20, r16
     102:	de 03       	fmulsu	r21, r22
     104:	f4 03       	fmuls	r23, r20
     106:	0b 04       	cpc	r0, r11
     108:	21 04       	cpc	r2, r1
     10a:	37 04       	cpc	r3, r7
     10c:	b8 04       	cpc	r11, r8
     10e:	b8 04       	cpc	r11, r8
     110:	b8 04       	cpc	r11, r8
     112:	4e 04       	cpc	r4, r14
     114:	63 04       	cpc	r6, r3
     116:	b8 04       	cpc	r11, r8
     118:	b8 04       	cpc	r11, r8
     11a:	b8 04       	cpc	r11, r8
     11c:	76 04       	cpc	r7, r6
     11e:	8b 04       	cpc	r8, r11
     120:	a2 04       	cpc	r10, r2
     122:	af 05       	cpc	r26, r15
     124:	c7 05       	cpc	r28, r7
     126:	d9 05       	cpc	r29, r9
     128:	0e 07       	cpc	r16, r30
     12a:	0e 07       	cpc	r16, r30
     12c:	ef 05       	cpc	r30, r15
     12e:	0e 07       	cpc	r16, r30
     130:	0e 07       	cpc	r16, r30
     132:	0e 07       	cpc	r16, r30
     134:	0e 07       	cpc	r16, r30
     136:	0e 07       	cpc	r16, r30
     138:	0e 07       	cpc	r16, r30
     13a:	0e 07       	cpc	r16, r30
     13c:	0e 07       	cpc	r16, r30
     13e:	0e 07       	cpc	r16, r30
     140:	0e 07       	cpc	r16, r30
     142:	0e 07       	cpc	r16, r30
     144:	23 06       	cpc	r2, r19
     146:	3f 06       	cpc	r3, r31
     148:	55 06       	cpc	r5, r21
     14a:	08 00       	.word	0x0008	; ????
     14c:	00 00       	nop
     14e:	be 92       	st	-X, r11
     150:	24 49       	sbci	r18, 0x94	; 148
     152:	12 3e       	cpi	r17, 0xE2	; 226
     154:	ab aa       	std	Y+51, r10	; 0x33
     156:	aa 2a       	or	r10, r26
     158:	be cd       	rjmp	.-1156   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     15a:	cc cc       	rjmp	.-1640   	; 0xfffffaf4 <__eeprom_end+0xff7efaf4>
     15c:	4c 3e       	cpi	r20, 0xEC	; 236
     15e:	00 00       	nop
     160:	00 80       	ld	r0, Z
     162:	be ab       	std	Y+54, r27	; 0x36
     164:	aa aa       	std	Y+50, r10	; 0x32
     166:	aa 3e       	cpi	r26, 0xEA	; 234
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	bf 00       	.word	0x00bf	; ????
     16e:	00 00       	nop
     170:	80 3f       	cpi	r24, 0xF0	; 240
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 08       	sbc	r0, r0
     178:	41 78       	andi	r20, 0x81	; 129
     17a:	d3 bb       	out	0x13, r29	; 19
     17c:	43 87       	std	Z+11, r20	; 0x0b
     17e:	d1 13       	cpse	r29, r17
     180:	3d 19       	sub	r19, r13
     182:	0e 3c       	cpi	r16, 0xCE	; 206
     184:	c3 bd       	out	0x23, r28	; 35
     186:	42 82       	std	Z+2, r4	; 0x02
     188:	ad 2b       	or	r26, r29
     18a:	3e 68       	ori	r19, 0x8E	; 142
     18c:	ec 82       	std	Y+4, r14	; 0x04
     18e:	76 be       	out	0x36, r7	; 54
     190:	d9 8f       	std	Y+25, r29	; 0x19
     192:	e1 a9       	ldd	r30, Z+49	; 0x31
     194:	3e 4c       	sbci	r19, 0xCE	; 206
     196:	80 ef       	ldi	r24, 0xF0	; 240
     198:	ff be       	out	0x3f, r15	; 63
     19a:	01 c4       	rjmp	.+2050   	; 0x99e <_ZN14ADF5610_Driver17InitiateRegistersEv+0x318>
     19c:	ff 7f       	andi	r31, 0xFF	; 255
     19e:	3f 00       	.word	0x003f	; ????
     1a0:	00 00       	nop
     1a2:	00 00       	nop
     1a4:	07 63       	ori	r16, 0x37	; 55
     1a6:	42 36       	cpi	r20, 0x62	; 98
     1a8:	b7 9b       	sbis	0x16, 7	; 22
     1aa:	d8 a7       	std	Y+40, r29	; 0x28
     1ac:	1a 39       	cpi	r17, 0x9A	; 154
     1ae:	68 56       	subi	r22, 0x68	; 104
     1b0:	18 ae       	std	Y+56, r1	; 0x38
     1b2:	ba ab       	std	Y+50, r27	; 0x32
     1b4:	55 8c       	ldd	r5, Z+29	; 0x1d
     1b6:	1d 3c       	cpi	r17, 0xCD	; 205
     1b8:	b7 cc       	rjmp	.-1682   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
     1ba:	57 63       	ori	r21, 0x37	; 55
     1bc:	bd 6d       	ori	r27, 0xDD	; 221
     1be:	ed fd       	.word	0xfded	; ????
     1c0:	75 3e       	cpi	r23, 0xE5	; 229
     1c2:	f6 17       	cp	r31, r22
     1c4:	72 31       	cpi	r23, 0x12	; 18
     1c6:	bf 00       	.word	0x00bf	; ????
     1c8:	00 00       	nop
     1ca:	80 3f       	cpi	r24, 0xF0	; 240

000001cc <__trampolines_end>:
     1cc:	6e 61       	ori	r22, 0x1E	; 30
     1ce:	6e 00       	.word	0x006e	; ????

000001d0 <__c.2332>:
     1d0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     1e0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     1f0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     200:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     210:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     220:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     230:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     240:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     250:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     260:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     270:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     280:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     290:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2a0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2b0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2c0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000002ce <__ctors_start>:
     2ce:	5d 0a       	sbc	r5, r29
     2d0:	c9 0a       	sbc	r12, r25

000002d2 <__ctors_end>:
     2d2:	64 0a       	sbc	r6, r20
     2d4:	d0 0a       	sbc	r13, r16

000002d6 <__dtors_end>:
     2d6:	11 24       	eor	r1, r1
     2d8:	1f be       	out	0x3f, r1	; 63
     2da:	cf ef       	ldi	r28, 0xFF	; 255
     2dc:	cd bf       	out	0x3d, r28	; 61
     2de:	df e7       	ldi	r29, 0x7F	; 127
     2e0:	de bf       	out	0x3e, r29	; 62

000002e2 <__do_copy_data>:
     2e2:	10 e4       	ldi	r17, 0x40	; 64
     2e4:	a0 e0       	ldi	r26, 0x00	; 0
     2e6:	b0 e4       	ldi	r27, 0x40	; 64
     2e8:	e6 e3       	ldi	r30, 0x36	; 54
     2ea:	fd e2       	ldi	r31, 0x2D	; 45
     2ec:	00 e0       	ldi	r16, 0x00	; 0
     2ee:	0b bf       	out	0x3b, r16	; 59
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <__do_copy_data+0x14>
     2f2:	07 90       	elpm	r0, Z+
     2f4:	0d 92       	st	X+, r0
     2f6:	aa 3a       	cpi	r26, 0xAA	; 170
     2f8:	b1 07       	cpc	r27, r17
     2fa:	d9 f7       	brne	.-10     	; 0x2f2 <__do_copy_data+0x10>

000002fc <__do_clear_bss>:
     2fc:	22 e4       	ldi	r18, 0x42	; 66
     2fe:	aa ea       	ldi	r26, 0xAA	; 170
     300:	b0 e4       	ldi	r27, 0x40	; 64
     302:	01 c0       	rjmp	.+2      	; 0x306 <.do_clear_bss_start>

00000304 <.do_clear_bss_loop>:
     304:	1d 92       	st	X+, r1

00000306 <.do_clear_bss_start>:
     306:	ae 31       	cpi	r26, 0x1E	; 30
     308:	b2 07       	cpc	r27, r18
     30a:	e1 f7       	brne	.-8      	; 0x304 <.do_clear_bss_loop>

0000030c <__do_global_ctors>:
     30c:	11 e0       	ldi	r17, 0x01	; 1
     30e:	c9 e6       	ldi	r28, 0x69	; 105
     310:	d1 e0       	ldi	r29, 0x01	; 1
     312:	04 c0       	rjmp	.+8      	; 0x31c <__do_global_ctors+0x10>
     314:	21 97       	sbiw	r28, 0x01	; 1
     316:	fe 01       	movw	r30, r28
     318:	0e 94 97 14 	call	0x292e	; 0x292e <__tablejump2__>
     31c:	c7 36       	cpi	r28, 0x67	; 103
     31e:	d1 07       	cpc	r29, r17
     320:	c9 f7       	brne	.-14     	; 0x314 <__do_global_ctors+0x8>
     322:	0e 94 a4 0a 	call	0x1548	; 0x1548 <main>
     326:	0c 94 8e 16 	jmp	0x2d1c	; 0x2d1c <__do_global_dtors>

0000032a <__bad_interrupt>:
     32a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000032e <_Z41__static_initialization_and_destruction_0ii>:
   else if (a == b)
      return a;
   else if (a > b)
      return CalculateGCD(a-b, b);
   else return CalculateGCD(a, b-a);
}
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	ec 01       	movw	r28, r24
     338:	8b 01       	movw	r16, r22
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	39 f4       	brne	.+14     	; 0x34c <_Z41__static_initialization_and_destruction_0ii+0x1e>
     33e:	6f 3f       	cpi	r22, 0xFF	; 255
     340:	7f 4f       	sbci	r23, 0xFF	; 255
     342:	21 f4       	brne	.+8      	; 0x34c <_Z41__static_initialization_and_destruction_0ii+0x1e>
     344:	8a ea       	ldi	r24, 0xAA	; 170
     346:	90 e4       	ldi	r25, 0x40	; 64
     348:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <_ZN13SPI_Syn_ClassC1Ev>
     34c:	cd 2b       	or	r28, r29
     34e:	39 f4       	brne	.+14     	; 0x35e <_Z41__static_initialization_and_destruction_0ii+0x30>
     350:	0f 3f       	cpi	r16, 0xFF	; 255
     352:	1f 4f       	sbci	r17, 0xFF	; 255
     354:	21 f4       	brne	.+8      	; 0x35e <_Z41__static_initialization_and_destruction_0ii+0x30>
     356:	8a ea       	ldi	r24, 0xAA	; 170
     358:	90 e4       	ldi	r25, 0x40	; 64
     35a:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <_ZN13SPI_Syn_ClassD1Ev>
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	1f 91       	pop	r17
     364:	0f 91       	pop	r16
     366:	08 95       	ret

00000368 <_ZN14ADF5610_DriverC1Ev>:
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	fc 01       	movw	r30, r24
     36e:	80 e0       	ldi	r24, 0x00	; 0
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	a1 e6       	ldi	r26, 0x61	; 97
     374:	b5 e4       	ldi	r27, 0x45	; 69
     376:	80 83       	st	Z, r24
     378:	91 83       	std	Z+1, r25	; 0x01
     37a:	a2 83       	std	Z+2, r26	; 0x02
     37c:	b3 83       	std	Z+3, r27	; 0x03
     37e:	ef 01       	movw	r28, r30
     380:	ce 5d       	subi	r28, 0xDE	; 222
     382:	de 4f       	sbci	r29, 0xFE	; 254
     384:	18 82       	st	Y, r1
     386:	19 82       	std	Y+1, r1	; 0x01
     388:	1a 82       	std	Y+2, r1	; 0x02
     38a:	1b 82       	std	Y+3, r1	; 0x03
     38c:	61 96       	adiw	r28, 0x11	; 17
     38e:	21 e0       	ldi	r18, 0x01	; 1
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	28 83       	st	Y, r18
     394:	39 83       	std	Y+1, r19	; 0x01
     396:	2a ea       	ldi	r18, 0xAA	; 170
     398:	30 e4       	ldi	r19, 0x40	; 64
     39a:	24 83       	std	Z+4, r18	; 0x04
     39c:	35 83       	std	Z+5, r19	; 0x05
     39e:	22 96       	adiw	r28, 0x02	; 2
     3a0:	18 82       	st	Y, r1
     3a2:	40 e0       	ldi	r20, 0x00	; 0
     3a4:	50 e8       	ldi	r21, 0x80	; 128
     3a6:	69 e8       	ldi	r22, 0x89	; 137
     3a8:	75 e4       	ldi	r23, 0x45	; 69
     3aa:	46 83       	std	Z+6, r20	; 0x06
     3ac:	57 83       	std	Z+7, r21	; 0x07
     3ae:	60 87       	std	Z+8, r22	; 0x08
     3b0:	71 87       	std	Z+9, r23	; 0x09
     3b2:	82 87       	std	Z+10, r24	; 0x0a
     3b4:	93 87       	std	Z+11, r25	; 0x0b
     3b6:	a4 87       	std	Z+12, r26	; 0x0c
     3b8:	b5 87       	std	Z+13, r27	; 0x0d
     3ba:	df 01       	movw	r26, r30
     3bc:	a5 5d       	subi	r26, 0xD5	; 213
     3be:	be 4f       	sbci	r27, 0xFE	; 254
     3c0:	40 e0       	ldi	r20, 0x00	; 0
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	68 ec       	ldi	r22, 0xC8	; 200
     3c6:	7f e3       	ldi	r23, 0x3F	; 63
     3c8:	4d 93       	st	X+, r20
     3ca:	5d 93       	st	X+, r21
     3cc:	6d 93       	st	X+, r22
     3ce:	7c 93       	st	X, r23
     3d0:	13 97       	sbiw	r26, 0x03	; 3
     3d2:	14 96       	adiw	r26, 0x04	; 4
     3d4:	40 e0       	ldi	r20, 0x00	; 0
     3d6:	59 e1       	ldi	r21, 0x19	; 25
     3d8:	61 e6       	ldi	r22, 0x61	; 97
     3da:	75 e4       	ldi	r23, 0x45	; 69
     3dc:	4d 93       	st	X+, r20
     3de:	5d 93       	st	X+, r21
     3e0:	6d 93       	st	X+, r22
     3e2:	7c 93       	st	X, r23
     3e4:	13 97       	sbiw	r26, 0x03	; 3
     3e6:	e8 5b       	subi	r30, 0xB8	; 184
     3e8:	fe 4f       	sbci	r31, 0xFE	; 254
     3ea:	10 82       	st	Z, r1
     3ec:	df 91       	pop	r29
     3ee:	cf 91       	pop	r28
     3f0:	08 95       	ret

000003f2 <_ZN14ADF5610_DriverD1Ev>:
     3f2:	08 95       	ret

000003f4 <_ZN14ADF5610_Driver13ShowRegistersEi>:
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	0f 93       	push	r16
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	7c 01       	movw	r14, r24
     402:	eb 01       	movw	r28, r22
     404:	20 97       	sbiw	r28, 0x00	; 0
     406:	39 f0       	breq	.+14     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     408:	54 f1       	brlt	.+84     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     40a:	cb 01       	movw	r24, r22
     40c:	42 97       	sbiw	r24, 0x12	; 18
     40e:	02 97       	sbiw	r24, 0x02	; 2
     410:	08 f4       	brcc	.+2      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     412:	64 c0       	rjmp	.+200    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
     414:	24 c0       	rjmp	.+72     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     416:	df 93       	push	r29
     418:	6f 93       	push	r22
     41a:	8e e0       	ldi	r24, 0x0E	; 14
     41c:	90 e4       	ldi	r25, 0x40	; 64
     41e:	9f 93       	push	r25
     420:	8f 93       	push	r24
     422:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
     426:	cc 0f       	add	r28, r28
     428:	dd 1f       	adc	r29, r29
     42a:	cc 0f       	add	r28, r28
     42c:	dd 1f       	adc	r29, r29
     42e:	ce 0d       	add	r28, r14
     430:	df 1d       	adc	r29, r15
     432:	fe 01       	movw	r30, r28
     434:	3e 96       	adiw	r30, 0x0e	; 14
     436:	8e 85       	ldd	r24, Y+14	; 0x0e
     438:	91 81       	ldd	r25, Z+1	; 0x01
     43a:	22 81       	ldd	r18, Z+2	; 0x02
     43c:	33 81       	ldd	r19, Z+3	; 0x03
     43e:	3f 93       	push	r19
     440:	2f 93       	push	r18
     442:	9f 93       	push	r25
     444:	8f 93       	push	r24
     446:	87 e1       	ldi	r24, 0x17	; 23
     448:	90 e4       	ldi	r25, 0x40	; 64
     44a:	9f 93       	push	r25
     44c:	8f 93       	push	r24
     44e:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
     452:	ad b7       	in	r26, 0x3d	; 61
     454:	be b7       	in	r27, 0x3e	; 62
     456:	1a 96       	adiw	r26, 0x0a	; 10
     458:	ad bf       	out	0x3d, r26	; 61
     45a:	be bf       	out	0x3e, r27	; 62
     45c:	3f c0       	rjmp	.+126    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
     45e:	df 93       	push	r29
     460:	cf 93       	push	r28
     462:	83 e2       	ldi	r24, 0x23	; 35
     464:	90 e4       	ldi	r25, 0x40	; 64
     466:	9f 93       	push	r25
     468:	8f 93       	push	r24
     46a:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
     46e:	8e 01       	movw	r16, r28
     470:	00 0f       	add	r16, r16
     472:	11 1f       	adc	r17, r17
     474:	00 0f       	add	r16, r16
     476:	11 1f       	adc	r17, r17
     478:	0e 0d       	add	r16, r14
     47a:	1f 1d       	adc	r17, r15
     47c:	f8 01       	movw	r30, r16
     47e:	e6 59       	subi	r30, 0x96	; 150
     480:	ff 4f       	sbci	r31, 0xFF	; 255
     482:	80 81       	ld	r24, Z
     484:	91 81       	ldd	r25, Z+1	; 0x01
     486:	22 81       	ldd	r18, Z+2	; 0x02
     488:	33 81       	ldd	r19, Z+3	; 0x03
     48a:	3f 93       	push	r19
     48c:	2f 93       	push	r18
     48e:	9f 93       	push	r25
     490:	8f 93       	push	r24
     492:	8d e2       	ldi	r24, 0x2D	; 45
     494:	90 e4       	ldi	r25, 0x40	; 64
     496:	9f 93       	push	r25
     498:	8f 93       	push	r24
     49a:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
     49e:	df 93       	push	r29
     4a0:	cf 93       	push	r28
     4a2:	8e e0       	ldi	r24, 0x0E	; 14
     4a4:	90 e4       	ldi	r25, 0x40	; 64
     4a6:	9f 93       	push	r25
     4a8:	8f 93       	push	r24
     4aa:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
     4ae:	f8 01       	movw	r30, r16
     4b0:	3e 96       	adiw	r30, 0x0e	; 14
     4b2:	d8 01       	movw	r26, r16
     4b4:	1e 96       	adiw	r26, 0x0e	; 14
     4b6:	8c 91       	ld	r24, X
     4b8:	91 81       	ldd	r25, Z+1	; 0x01
     4ba:	22 81       	ldd	r18, Z+2	; 0x02
     4bc:	33 81       	ldd	r19, Z+3	; 0x03
     4be:	3f 93       	push	r19
     4c0:	2f 93       	push	r18
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	87 e1       	ldi	r24, 0x17	; 23
     4c8:	90 e4       	ldi	r25, 0x40	; 64
     4ca:	9f 93       	push	r25
     4cc:	8f 93       	push	r24
     4ce:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
     4d2:	8d b7       	in	r24, 0x3d	; 61
     4d4:	9e b7       	in	r25, 0x3e	; 62
     4d6:	44 96       	adiw	r24, 0x14	; 20
     4d8:	8d bf       	out	0x3d, r24	; 61
     4da:	9e bf       	out	0x3e, r25	; 62
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	1f 91       	pop	r17
     4e2:	0f 91       	pop	r16
     4e4:	ff 90       	pop	r15
     4e6:	ef 90       	pop	r14
     4e8:	08 95       	ret

000004ea <_ZN14ADF5610_Driver8IsLockedEv>:
     4ea:	22 b1       	in	r18, 0x02	; 2
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	22 0f       	add	r18, r18
     4f0:	23 2f       	mov	r18, r19
     4f2:	22 1f       	adc	r18, r18
     4f4:	33 0b       	sbc	r19, r19
     4f6:	21 70       	andi	r18, 0x01	; 1
     4f8:	8b 5c       	subi	r24, 0xCB	; 203
     4fa:	9e 4f       	sbci	r25, 0xFE	; 254
     4fc:	fc 01       	movw	r30, r24
     4fe:	20 83       	st	Z, r18
     500:	82 2f       	mov	r24, r18
     502:	08 95       	ret

00000504 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm>:
     504:	cf 92       	push	r12
     506:	df 92       	push	r13
     508:	ef 92       	push	r14
     50a:	ff 92       	push	r15
     50c:	0f 93       	push	r16
     50e:	1f 93       	push	r17
     510:	89 01       	movw	r16, r18
     512:	9a 01       	movw	r18, r20
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	50 e0       	ldi	r21, 0x00	; 0
     518:	44 30       	cpi	r20, 0x04	; 4
     51a:	51 05       	cpc	r21, r1
     51c:	d4 f4       	brge	.+52     	; 0x552 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x4e>
     51e:	fb 01       	movw	r30, r22
     520:	e4 0f       	add	r30, r20
     522:	f5 1f       	adc	r31, r21
     524:	83 e0       	ldi	r24, 0x03	; 3
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	84 1b       	sub	r24, r20
     52a:	95 0b       	sbc	r25, r21
     52c:	88 0f       	add	r24, r24
     52e:	99 1f       	adc	r25, r25
     530:	88 0f       	add	r24, r24
     532:	99 1f       	adc	r25, r25
     534:	88 0f       	add	r24, r24
     536:	99 1f       	adc	r25, r25
     538:	68 01       	movw	r12, r16
     53a:	79 01       	movw	r14, r18
     53c:	04 c0       	rjmp	.+8      	; 0x546 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x42>
     53e:	f6 94       	lsr	r15
     540:	e7 94       	ror	r14
     542:	d7 94       	ror	r13
     544:	c7 94       	ror	r12
     546:	8a 95       	dec	r24
     548:	d2 f7       	brpl	.-12     	; 0x53e <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x3a>
     54a:	c0 82       	st	Z, r12
     54c:	4f 5f       	subi	r20, 0xFF	; 255
     54e:	5f 4f       	sbci	r21, 0xFF	; 255
     550:	e3 cf       	rjmp	.-58     	; 0x518 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x14>
     552:	1f 91       	pop	r17
     554:	0f 91       	pop	r16
     556:	ff 90       	pop	r15
     558:	ef 90       	pop	r14
     55a:	df 90       	pop	r13
     55c:	cf 90       	pop	r12
     55e:	08 95       	ret

00000560 <_ZN14ADF5610_Driver13ReadRegistersEh>:
     560:	af 92       	push	r10
     562:	bf 92       	push	r11
     564:	cf 92       	push	r12
     566:	df 92       	push	r13
     568:	ef 92       	push	r14
     56a:	ff 92       	push	r15
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	ec 01       	movw	r28, r24
     576:	16 2f       	mov	r17, r22
     578:	60 e0       	ldi	r22, 0x00	; 0
     57a:	8c 81       	ldd	r24, Y+4	; 0x04
     57c:	9d 81       	ldd	r25, Y+5	; 0x05
     57e:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN13SPI_Syn_Class5SetCSEb>
     582:	be 01       	movw	r22, r28
     584:	6d 5b       	subi	r22, 0xBD	; 189
     586:	7e 4f       	sbci	r23, 0xFE	; 254
     588:	fb 01       	movw	r30, r22
     58a:	10 82       	st	Z, r1
     58c:	31 96       	adiw	r30, 0x01	; 1
     58e:	10 82       	st	Z, r1
     590:	31 96       	adiw	r30, 0x01	; 1
     592:	10 83       	st	Z, r17
     594:	31 96       	adiw	r30, 0x01	; 1
     596:	10 82       	st	Z, r1
     598:	44 e0       	ldi	r20, 0x04	; 4
     59a:	8c 81       	ldd	r24, Y+4	; 0x04
     59c:	9d 81       	ldd	r25, Y+5	; 0x05
     59e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <_ZN13SPI_Syn_Class5WriteEPKhh>
     5a2:	61 e0       	ldi	r22, 0x01	; 1
     5a4:	8c 81       	ldd	r24, Y+4	; 0x04
     5a6:	9d 81       	ldd	r25, Y+5	; 0x05
     5a8:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN13SPI_Syn_Class5SetCSEb>
     5ac:	80 e7       	ldi	r24, 0x70	; 112
     5ae:	97 e1       	ldi	r25, 0x17	; 23
     5b0:	01 97       	sbiw	r24, 0x01	; 1
     5b2:	f1 f7       	brne	.-4      	; 0x5b0 <_ZN14ADF5610_Driver13ReadRegistersEh+0x50>
     5b4:	60 e0       	ldi	r22, 0x00	; 0
     5b6:	8c 81       	ldd	r24, Y+4	; 0x04
     5b8:	9d 81       	ldd	r25, Y+5	; 0x05
     5ba:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN13SPI_Syn_Class5SetCSEb>
     5be:	7e 01       	movw	r14, r28
     5c0:	f5 ec       	ldi	r31, 0xC5	; 197
     5c2:	ef 1a       	sub	r14, r31
     5c4:	fe ef       	ldi	r31, 0xFE	; 254
     5c6:	ff 0a       	sbc	r15, r31
     5c8:	44 e0       	ldi	r20, 0x04	; 4
     5ca:	b7 01       	movw	r22, r14
     5cc:	8c 81       	ldd	r24, Y+4	; 0x04
     5ce:	9d 81       	ldd	r25, Y+5	; 0x05
     5d0:	0e 94 f6 0a 	call	0x15ec	; 0x15ec <_ZN13SPI_Syn_Class4ReadEPhh>
     5d4:	e1 2f       	mov	r30, r17
     5d6:	f0 e0       	ldi	r31, 0x00	; 0
     5d8:	ee 0f       	add	r30, r30
     5da:	ff 1f       	adc	r31, r31
     5dc:	ee 0f       	add	r30, r30
     5de:	ff 1f       	adc	r31, r31
     5e0:	5f 01       	movw	r10, r30
     5e2:	ac 0e       	add	r10, r28
     5e4:	bd 1e       	adc	r11, r29
     5e6:	f5 01       	movw	r30, r10
     5e8:	16 86       	std	Z+14, r1	; 0x0e
     5ea:	17 86       	std	Z+15, r1	; 0x0f
     5ec:	10 8a       	std	Z+16, r1	; 0x10
     5ee:	11 8a       	std	Z+17, r1	; 0x11
     5f0:	f7 01       	movw	r30, r14
     5f2:	80 81       	ld	r24, Z
     5f4:	91 81       	ldd	r25, Z+1	; 0x01
     5f6:	a2 81       	ldd	r26, Z+2	; 0x02
     5f8:	b3 81       	ldd	r27, Z+3	; 0x03
     5fa:	78 2f       	mov	r23, r24
     5fc:	66 27       	eor	r22, r22
     5fe:	55 27       	eor	r21, r21
     600:	44 27       	eor	r20, r20
     602:	8c 01       	movw	r16, r24
     604:	9d 01       	movw	r18, r26
     606:	00 27       	eor	r16, r16
     608:	22 27       	eor	r18, r18
     60a:	33 27       	eor	r19, r19
     60c:	32 2f       	mov	r19, r18
     60e:	21 2f       	mov	r18, r17
     610:	10 2f       	mov	r17, r16
     612:	00 27       	eor	r16, r16
     614:	04 2b       	or	r16, r20
     616:	15 2b       	or	r17, r21
     618:	26 2b       	or	r18, r22
     61a:	37 2b       	or	r19, r23
     61c:	cb 2e       	mov	r12, r27
     61e:	dd 24       	eor	r13, r13
     620:	ee 24       	eor	r14, r14
     622:	ff 24       	eor	r15, r15
     624:	ac 01       	movw	r20, r24
     626:	bd 01       	movw	r22, r26
     628:	44 27       	eor	r20, r20
     62a:	55 27       	eor	r21, r21
     62c:	77 27       	eor	r23, r23
     62e:	45 2f       	mov	r20, r21
     630:	56 2f       	mov	r21, r22
     632:	67 2f       	mov	r22, r23
     634:	77 27       	eor	r23, r23
     636:	d7 01       	movw	r26, r14
     638:	c6 01       	movw	r24, r12
     63a:	84 2b       	or	r24, r20
     63c:	95 2b       	or	r25, r21
     63e:	a6 2b       	or	r26, r22
     640:	b7 2b       	or	r27, r23
     642:	80 2b       	or	r24, r16
     644:	91 2b       	or	r25, r17
     646:	a2 2b       	or	r26, r18
     648:	b3 2b       	or	r27, r19
     64a:	68 94       	set
     64c:	16 f8       	bld	r1, 6
     64e:	b6 95       	lsr	r27
     650:	a7 95       	ror	r26
     652:	97 95       	ror	r25
     654:	87 95       	ror	r24
     656:	16 94       	lsr	r1
     658:	d1 f7       	brne	.-12     	; 0x64e <_ZN14ADF5610_Driver13ReadRegistersEh+0xee>
     65a:	be 7f       	andi	r27, 0xFE	; 254
     65c:	f5 01       	movw	r30, r10
     65e:	86 87       	std	Z+14, r24	; 0x0e
     660:	97 87       	std	Z+15, r25	; 0x0f
     662:	a0 8b       	std	Z+16, r26	; 0x10
     664:	b1 8b       	std	Z+17, r27	; 0x11
     666:	61 e0       	ldi	r22, 0x01	; 1
     668:	8c 81       	ldd	r24, Y+4	; 0x04
     66a:	9d 81       	ldd	r25, Y+5	; 0x05
     66c:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN13SPI_Syn_Class5SetCSEb>
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	1f 91       	pop	r17
     676:	0f 91       	pop	r16
     678:	ff 90       	pop	r15
     67a:	ef 90       	pop	r14
     67c:	df 90       	pop	r13
     67e:	cf 90       	pop	r12
     680:	bf 90       	pop	r11
     682:	af 90       	pop	r10
     684:	08 95       	ret

00000686 <_ZN14ADF5610_Driver17InitiateRegistersEv>:
     686:	cf 92       	push	r12
     688:	df 92       	push	r13
     68a:	ef 92       	push	r14
     68c:	ff 92       	push	r15
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	47 31       	cpi	r20, 0x17	; 23
     694:	51 05       	cpc	r21, r1
     696:	0c f0       	brlt	.+2      	; 0x69a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x14>
     698:	8f c1       	rjmp	.+798    	; 0x9b8 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x332>
     69a:	47 31       	cpi	r20, 0x17	; 23
     69c:	51 05       	cpc	r21, r1
     69e:	08 f0       	brcs	.+2      	; 0x6a2 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x1c>
     6a0:	67 c1       	rjmp	.+718    	; 0x970 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x2ea>
     6a2:	fa 01       	movw	r30, r20
     6a4:	e6 58       	subi	r30, 0x86	; 134
     6a6:	ff 4f       	sbci	r31, 0xFF	; 255
     6a8:	0c 94 97 14 	jmp	0x292e	; 0x292e <__tablejump2__>
     6ac:	fa 01       	movw	r30, r20
     6ae:	ee 0f       	add	r30, r30
     6b0:	ff 1f       	adc	r31, r31
     6b2:	ee 0f       	add	r30, r30
     6b4:	ff 1f       	adc	r31, r31
     6b6:	e8 0f       	add	r30, r24
     6b8:	f9 1f       	adc	r31, r25
     6ba:	ea 53       	subi	r30, 0x3A	; 58
     6bc:	ff 4f       	sbci	r31, 0xFF	; 255
     6be:	c1 2c       	mov	r12, r1
     6c0:	d1 2c       	mov	r13, r1
     6c2:	76 01       	movw	r14, r12
     6c4:	68 94       	set
     6c6:	c5 f8       	bld	r12, 5
     6c8:	c0 82       	st	Z, r12
     6ca:	d1 82       	std	Z+1, r13	; 0x01
     6cc:	e2 82       	std	Z+2, r14	; 0x02
     6ce:	f3 82       	std	Z+3, r15	; 0x03
     6d0:	5c c1       	rjmp	.+696    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     6d2:	fa 01       	movw	r30, r20
     6d4:	ee 0f       	add	r30, r30
     6d6:	ff 1f       	adc	r31, r31
     6d8:	ee 0f       	add	r30, r30
     6da:	ff 1f       	adc	r31, r31
     6dc:	e8 0f       	add	r30, r24
     6de:	f9 1f       	adc	r31, r25
     6e0:	ea 53       	subi	r30, 0x3A	; 58
     6e2:	ff 4f       	sbci	r31, 0xFF	; 255
     6e4:	c1 2c       	mov	r12, r1
     6e6:	d1 2c       	mov	r13, r1
     6e8:	76 01       	movw	r14, r12
     6ea:	68 94       	set
     6ec:	c1 f8       	bld	r12, 1
     6ee:	c0 82       	st	Z, r12
     6f0:	d1 82       	std	Z+1, r13	; 0x01
     6f2:	e2 82       	std	Z+2, r14	; 0x02
     6f4:	f3 82       	std	Z+3, r15	; 0x03
     6f6:	49 c1       	rjmp	.+658    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     6f8:	fa 01       	movw	r30, r20
     6fa:	ee 0f       	add	r30, r30
     6fc:	ff 1f       	adc	r31, r31
     6fe:	ee 0f       	add	r30, r30
     700:	ff 1f       	adc	r31, r31
     702:	e8 0f       	add	r30, r24
     704:	f9 1f       	adc	r31, r25
     706:	ea 53       	subi	r30, 0x3A	; 58
     708:	ff 4f       	sbci	r31, 0xFF	; 255
     70a:	c1 2c       	mov	r12, r1
     70c:	d1 2c       	mov	r13, r1
     70e:	76 01       	movw	r14, r12
     710:	c3 94       	inc	r12
     712:	c0 82       	st	Z, r12
     714:	d1 82       	std	Z+1, r13	; 0x01
     716:	e2 82       	std	Z+2, r14	; 0x02
     718:	f3 82       	std	Z+3, r15	; 0x03
     71a:	37 c1       	rjmp	.+622    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     71c:	fa 01       	movw	r30, r20
     71e:	ee 0f       	add	r30, r30
     720:	ff 1f       	adc	r31, r31
     722:	ee 0f       	add	r30, r30
     724:	ff 1f       	adc	r31, r31
     726:	e8 0f       	add	r30, r24
     728:	f9 1f       	adc	r31, r25
     72a:	ea 53       	subi	r30, 0x3A	; 58
     72c:	ff 4f       	sbci	r31, 0xFF	; 255
     72e:	0f 2e       	mov	r0, r31
     730:	f1 e3       	ldi	r31, 0x31	; 49
     732:	cf 2e       	mov	r12, r31
     734:	d1 2c       	mov	r13, r1
     736:	e1 2c       	mov	r14, r1
     738:	f1 2c       	mov	r15, r1
     73a:	f0 2d       	mov	r31, r0
     73c:	c0 82       	st	Z, r12
     73e:	d1 82       	std	Z+1, r13	; 0x01
     740:	e2 82       	std	Z+2, r14	; 0x02
     742:	f3 82       	std	Z+3, r15	; 0x03
     744:	22 c1       	rjmp	.+580    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     746:	fa 01       	movw	r30, r20
     748:	ee 0f       	add	r30, r30
     74a:	ff 1f       	adc	r31, r31
     74c:	ee 0f       	add	r30, r30
     74e:	ff 1f       	adc	r31, r31
     750:	e8 0f       	add	r30, r24
     752:	f9 1f       	adc	r31, r25
     754:	ea 53       	subi	r30, 0x3A	; 58
     756:	ff 4f       	sbci	r31, 0xFF	; 255
     758:	0f 2e       	mov	r0, r31
     75a:	f3 ea       	ldi	r31, 0xA3	; 163
     75c:	cf 2e       	mov	r12, r31
     75e:	f0 e7       	ldi	r31, 0x70	; 112
     760:	df 2e       	mov	r13, r31
     762:	fd ef       	ldi	r31, 0xFD	; 253
     764:	ef 2e       	mov	r14, r31
     766:	f1 2c       	mov	r15, r1
     768:	f0 2d       	mov	r31, r0
     76a:	c0 82       	st	Z, r12
     76c:	d1 82       	std	Z+1, r13	; 0x01
     76e:	e2 82       	std	Z+2, r14	; 0x02
     770:	f3 82       	std	Z+3, r15	; 0x03
     772:	0b c1       	rjmp	.+534    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     774:	fa 01       	movw	r30, r20
     776:	ee 0f       	add	r30, r30
     778:	ff 1f       	adc	r31, r31
     77a:	ee 0f       	add	r30, r30
     77c:	ff 1f       	adc	r31, r31
     77e:	e8 0f       	add	r30, r24
     780:	f9 1f       	adc	r31, r25
     782:	ea 53       	subi	r30, 0x3A	; 58
     784:	ff 4f       	sbci	r31, 0xFF	; 255
     786:	10 82       	st	Z, r1
     788:	11 82       	std	Z+1, r1	; 0x01
     78a:	12 82       	std	Z+2, r1	; 0x02
     78c:	13 82       	std	Z+3, r1	; 0x03
     78e:	fd c0       	rjmp	.+506    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     790:	fa 01       	movw	r30, r20
     792:	ee 0f       	add	r30, r30
     794:	ff 1f       	adc	r31, r31
     796:	ee 0f       	add	r30, r30
     798:	ff 1f       	adc	r31, r31
     79a:	e8 0f       	add	r30, r24
     79c:	f9 1f       	adc	r31, r25
     79e:	ea 53       	subi	r30, 0x3A	; 58
     7a0:	ff 4f       	sbci	r31, 0xFF	; 255
     7a2:	0f 2e       	mov	r0, r31
     7a4:	fa e4       	ldi	r31, 0x4A	; 74
     7a6:	cf 2e       	mov	r12, r31
     7a8:	ff e2       	ldi	r31, 0x2F	; 47
     7aa:	df 2e       	mov	r13, r31
     7ac:	e1 2c       	mov	r14, r1
     7ae:	f1 2c       	mov	r15, r1
     7b0:	f0 2d       	mov	r31, r0
     7b2:	c0 82       	st	Z, r12
     7b4:	d1 82       	std	Z+1, r13	; 0x01
     7b6:	e2 82       	std	Z+2, r14	; 0x02
     7b8:	f3 82       	std	Z+3, r15	; 0x03
     7ba:	e7 c0       	rjmp	.+462    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     7bc:	fa 01       	movw	r30, r20
     7be:	ee 0f       	add	r30, r30
     7c0:	ff 1f       	adc	r31, r31
     7c2:	ee 0f       	add	r30, r30
     7c4:	ff 1f       	adc	r31, r31
     7c6:	e8 0f       	add	r30, r24
     7c8:	f9 1f       	adc	r31, r25
     7ca:	ea 53       	subi	r30, 0x3A	; 58
     7cc:	ff 4f       	sbci	r31, 0xFF	; 255
     7ce:	0f 2e       	mov	r0, r31
     7d0:	fd e4       	ldi	r31, 0x4D	; 77
     7d2:	cf 2e       	mov	r12, r31
     7d4:	f1 e2       	ldi	r31, 0x21	; 33
     7d6:	df 2e       	mov	r13, r31
     7d8:	e1 2c       	mov	r14, r1
     7da:	f1 2c       	mov	r15, r1
     7dc:	f0 2d       	mov	r31, r0
     7de:	c0 82       	st	Z, r12
     7e0:	d1 82       	std	Z+1, r13	; 0x01
     7e2:	e2 82       	std	Z+2, r14	; 0x02
     7e4:	f3 82       	std	Z+3, r15	; 0x03
     7e6:	d1 c0       	rjmp	.+418    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     7e8:	fa 01       	movw	r30, r20
     7ea:	ee 0f       	add	r30, r30
     7ec:	ff 1f       	adc	r31, r31
     7ee:	ee 0f       	add	r30, r30
     7f0:	ff 1f       	adc	r31, r31
     7f2:	e8 0f       	add	r30, r24
     7f4:	f9 1f       	adc	r31, r25
     7f6:	ea 53       	subi	r30, 0x3A	; 58
     7f8:	ff 4f       	sbci	r31, 0xFF	; 255
     7fa:	0f 2e       	mov	r0, r31
     7fc:	cc 24       	eor	r12, r12
     7fe:	ca 94       	dec	r12
     800:	fe eb       	ldi	r31, 0xBE	; 190
     802:	df 2e       	mov	r13, r31
     804:	f9 ec       	ldi	r31, 0xC9	; 201
     806:	ef 2e       	mov	r14, r31
     808:	f1 2c       	mov	r15, r1
     80a:	f0 2d       	mov	r31, r0
     80c:	c0 82       	st	Z, r12
     80e:	d1 82       	std	Z+1, r13	; 0x01
     810:	e2 82       	std	Z+2, r14	; 0x02
     812:	f3 82       	std	Z+3, r15	; 0x03
     814:	ba c0       	rjmp	.+372    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     816:	fa 01       	movw	r30, r20
     818:	ee 0f       	add	r30, r30
     81a:	ff 1f       	adc	r31, r31
     81c:	ee 0f       	add	r30, r30
     81e:	ff 1f       	adc	r31, r31
     820:	e8 0f       	add	r30, r24
     822:	f9 1f       	adc	r31, r25
     824:	ea 53       	subi	r30, 0x3A	; 58
     826:	ff 4f       	sbci	r31, 0xFF	; 255
     828:	0f 2e       	mov	r0, r31
     82a:	cc 24       	eor	r12, r12
     82c:	ca 94       	dec	r12
     82e:	ff e3       	ldi	r31, 0x3F	; 63
     830:	df 2e       	mov	r13, r31
     832:	e1 2c       	mov	r14, r1
     834:	f1 2c       	mov	r15, r1
     836:	f0 2d       	mov	r31, r0
     838:	c0 82       	st	Z, r12
     83a:	d1 82       	std	Z+1, r13	; 0x01
     83c:	e2 82       	std	Z+2, r14	; 0x02
     83e:	f3 82       	std	Z+3, r15	; 0x03
     840:	a4 c0       	rjmp	.+328    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     842:	fa 01       	movw	r30, r20
     844:	ee 0f       	add	r30, r30
     846:	ff 1f       	adc	r31, r31
     848:	ee 0f       	add	r30, r30
     84a:	ff 1f       	adc	r31, r31
     84c:	e8 0f       	add	r30, r24
     84e:	f9 1f       	adc	r31, r25
     850:	ea 53       	subi	r30, 0x3A	; 58
     852:	ff 4f       	sbci	r31, 0xFF	; 255
     854:	0f 2e       	mov	r0, r31
     856:	f7 e4       	ldi	r31, 0x47	; 71
     858:	cf 2e       	mov	r12, r31
     85a:	f0 e2       	ldi	r31, 0x20	; 32
     85c:	df 2e       	mov	r13, r31
     85e:	e1 2c       	mov	r14, r1
     860:	f1 2c       	mov	r15, r1
     862:	f0 2d       	mov	r31, r0
     864:	c0 82       	st	Z, r12
     866:	d1 82       	std	Z+1, r13	; 0x01
     868:	e2 82       	std	Z+2, r14	; 0x02
     86a:	f3 82       	std	Z+3, r15	; 0x03
     86c:	8e c0       	rjmp	.+284    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     86e:	fa 01       	movw	r30, r20
     870:	ee 0f       	add	r30, r30
     872:	ff 1f       	adc	r31, r31
     874:	ee 0f       	add	r30, r30
     876:	ff 1f       	adc	r31, r31
     878:	e8 0f       	add	r30, r24
     87a:	f9 1f       	adc	r31, r25
     87c:	ea 53       	subi	r30, 0x3A	; 58
     87e:	ff 4f       	sbci	r31, 0xFF	; 255
     880:	0f 2e       	mov	r0, r31
     882:	f1 e6       	ldi	r31, 0x61	; 97
     884:	cf 2e       	mov	r12, r31
     886:	f0 e8       	ldi	r31, 0x80	; 128
     888:	df 2e       	mov	r13, r31
     88a:	ff e0       	ldi	r31, 0x0F	; 15
     88c:	ef 2e       	mov	r14, r31
     88e:	f1 2c       	mov	r15, r1
     890:	f0 2d       	mov	r31, r0
     892:	c0 82       	st	Z, r12
     894:	d1 82       	std	Z+1, r13	; 0x01
     896:	e2 82       	std	Z+2, r14	; 0x02
     898:	f3 82       	std	Z+3, r15	; 0x03
     89a:	77 c0       	rjmp	.+238    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     89c:	fa 01       	movw	r30, r20
     89e:	ee 0f       	add	r30, r30
     8a0:	ff 1f       	adc	r31, r31
     8a2:	ee 0f       	add	r30, r30
     8a4:	ff 1f       	adc	r31, r31
     8a6:	e8 0f       	add	r30, r24
     8a8:	f9 1f       	adc	r31, r25
     8aa:	ea 53       	subi	r30, 0x3A	; 58
     8ac:	ff 4f       	sbci	r31, 0xFF	; 255
     8ae:	0f 2e       	mov	r0, r31
     8b0:	f1 e8       	ldi	r31, 0x81	; 129
     8b2:	cf 2e       	mov	r12, r31
     8b4:	d1 2c       	mov	r13, r1
     8b6:	e1 2c       	mov	r14, r1
     8b8:	f1 2c       	mov	r15, r1
     8ba:	f0 2d       	mov	r31, r0
     8bc:	c0 82       	st	Z, r12
     8be:	d1 82       	std	Z+1, r13	; 0x01
     8c0:	e2 82       	std	Z+2, r14	; 0x02
     8c2:	f3 82       	std	Z+3, r15	; 0x03
     8c4:	62 c0       	rjmp	.+196    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     8c6:	fa 01       	movw	r30, r20
     8c8:	ee 0f       	add	r30, r30
     8ca:	ff 1f       	adc	r31, r31
     8cc:	ee 0f       	add	r30, r30
     8ce:	ff 1f       	adc	r31, r31
     8d0:	e8 0f       	add	r30, r24
     8d2:	f9 1f       	adc	r31, r25
     8d4:	ea 53       	subi	r30, 0x3A	; 58
     8d6:	ff 4f       	sbci	r31, 0xFF	; 255
     8d8:	c1 2c       	mov	r12, r1
     8da:	d1 2c       	mov	r13, r1
     8dc:	76 01       	movw	r14, r12
     8de:	68 94       	set
     8e0:	c5 f8       	bld	r12, 5
     8e2:	c0 82       	st	Z, r12
     8e4:	d1 82       	std	Z+1, r13	; 0x01
     8e6:	e2 82       	std	Z+2, r14	; 0x02
     8e8:	f3 82       	std	Z+3, r15	; 0x03
     8ea:	4f c0       	rjmp	.+158    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     8ec:	fc 01       	movw	r30, r24
     8ee:	e6 52       	subi	r30, 0x26	; 38
     8f0:	ff 4f       	sbci	r31, 0xFF	; 255
     8f2:	c0 80       	ld	r12, Z
     8f4:	d1 80       	ldd	r13, Z+1	; 0x01
     8f6:	e2 80       	ldd	r14, Z+2	; 0x02
     8f8:	f3 80       	ldd	r15, Z+3	; 0x03
     8fa:	fa 01       	movw	r30, r20
     8fc:	ee 0f       	add	r30, r30
     8fe:	ff 1f       	adc	r31, r31
     900:	ee 0f       	add	r30, r30
     902:	ff 1f       	adc	r31, r31
     904:	e8 0f       	add	r30, r24
     906:	f9 1f       	adc	r31, r25
     908:	ea 53       	subi	r30, 0x3A	; 58
     90a:	ff 4f       	sbci	r31, 0xFF	; 255
     90c:	c0 82       	st	Z, r12
     90e:	d1 82       	std	Z+1, r13	; 0x01
     910:	e2 82       	std	Z+2, r14	; 0x02
     912:	f3 82       	std	Z+3, r15	; 0x03
     914:	3a c0       	rjmp	.+116    	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     916:	fa 01       	movw	r30, r20
     918:	ee 0f       	add	r30, r30
     91a:	ff 1f       	adc	r31, r31
     91c:	ee 0f       	add	r30, r30
     91e:	ff 1f       	adc	r31, r31
     920:	e8 0f       	add	r30, r24
     922:	f9 1f       	adc	r31, r25
     924:	ea 53       	subi	r30, 0x3A	; 58
     926:	ff 4f       	sbci	r31, 0xFF	; 255
     928:	0f 2e       	mov	r0, r31
     92a:	f8 e0       	ldi	r31, 0x08	; 8
     92c:	cf 2e       	mov	r12, r31
     92e:	fe eb       	ldi	r31, 0xBE	; 190
     930:	df 2e       	mov	r13, r31
     932:	ee 24       	eor	r14, r14
     934:	ea 94       	dec	r14
     936:	fe 2c       	mov	r15, r14
     938:	f0 2d       	mov	r31, r0
     93a:	c0 82       	st	Z, r12
     93c:	d1 82       	std	Z+1, r13	; 0x01
     93e:	e2 82       	std	Z+2, r14	; 0x02
     940:	f3 82       	std	Z+3, r15	; 0x03
     942:	23 c0       	rjmp	.+70     	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     944:	fa 01       	movw	r30, r20
     946:	ee 0f       	add	r30, r30
     948:	ff 1f       	adc	r31, r31
     94a:	ee 0f       	add	r30, r30
     94c:	ff 1f       	adc	r31, r31
     94e:	e8 0f       	add	r30, r24
     950:	f9 1f       	adc	r31, r25
     952:	ea 53       	subi	r30, 0x3A	; 58
     954:	ff 4f       	sbci	r31, 0xFF	; 255
     956:	0f 2e       	mov	r0, r31
     958:	f0 e9       	ldi	r31, 0x90	; 144
     95a:	cf 2e       	mov	r12, r31
     95c:	f3 e0       	ldi	r31, 0x03	; 3
     95e:	df 2e       	mov	r13, r31
     960:	e1 2c       	mov	r14, r1
     962:	f1 2c       	mov	r15, r1
     964:	f0 2d       	mov	r31, r0
     966:	c0 82       	st	Z, r12
     968:	d1 82       	std	Z+1, r13	; 0x01
     96a:	e2 82       	std	Z+2, r14	; 0x02
     96c:	f3 82       	std	Z+3, r15	; 0x03
     96e:	0d c0       	rjmp	.+26     	; 0x98a <_ZN14ADF5610_Driver17InitiateRegistersEv+0x304>
     970:	fa 01       	movw	r30, r20
     972:	ee 0f       	add	r30, r30
     974:	ff 1f       	adc	r31, r31
     976:	ee 0f       	add	r30, r30
     978:	ff 1f       	adc	r31, r31
     97a:	e8 0f       	add	r30, r24
     97c:	f9 1f       	adc	r31, r25
     97e:	ea 53       	subi	r30, 0x3A	; 58
     980:	ff 4f       	sbci	r31, 0xFF	; 255
     982:	10 82       	st	Z, r1
     984:	11 82       	std	Z+1, r1	; 0x01
     986:	12 82       	std	Z+2, r1	; 0x02
     988:	13 82       	std	Z+3, r1	; 0x03
     98a:	9a 01       	movw	r18, r20
     98c:	22 0f       	add	r18, r18
     98e:	33 1f       	adc	r19, r19
     990:	22 0f       	add	r18, r18
     992:	33 1f       	adc	r19, r19
     994:	28 0f       	add	r18, r24
     996:	39 1f       	adc	r19, r25
     998:	f9 01       	movw	r30, r18
     99a:	ea 53       	subi	r30, 0x3A	; 58
     99c:	ff 4f       	sbci	r31, 0xFF	; 255
     99e:	c0 80       	ld	r12, Z
     9a0:	d1 80       	ldd	r13, Z+1	; 0x01
     9a2:	e2 80       	ldd	r14, Z+2	; 0x02
     9a4:	f3 80       	ldd	r15, Z+3	; 0x03
     9a6:	ec 55       	subi	r30, 0x5C	; 92
     9a8:	f1 09       	sbc	r31, r1
     9aa:	c0 82       	st	Z, r12
     9ac:	d1 82       	std	Z+1, r13	; 0x01
     9ae:	e2 82       	std	Z+2, r14	; 0x02
     9b0:	f3 82       	std	Z+3, r15	; 0x03
     9b2:	4f 5f       	subi	r20, 0xFF	; 255
     9b4:	5f 4f       	sbci	r21, 0xFF	; 255
     9b6:	6d ce       	rjmp	.-806    	; 0x692 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xc>
     9b8:	ff 90       	pop	r15
     9ba:	ef 90       	pop	r14
     9bc:	df 90       	pop	r13
     9be:	cf 90       	pop	r12
     9c0:	08 95       	ret

000009c2 <_ZN14ADF5610_Driver16ReadAllRegistersEv>:
     9c2:	0f 93       	push	r16
     9c4:	1f 93       	push	r17
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	8c 01       	movw	r16, r24
     9cc:	c0 e0       	ldi	r28, 0x00	; 0
     9ce:	d0 e0       	ldi	r29, 0x00	; 0
     9d0:	c4 31       	cpi	r28, 0x14	; 20
     9d2:	d1 05       	cpc	r29, r1
     9d4:	34 f4       	brge	.+12     	; 0x9e2 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x20>
     9d6:	6c 2f       	mov	r22, r28
     9d8:	c8 01       	movw	r24, r16
     9da:	0e 94 b0 02 	call	0x560	; 0x560 <_ZN14ADF5610_Driver13ReadRegistersEh>
     9de:	21 96       	adiw	r28, 0x01	; 1
     9e0:	f7 cf       	rjmp	.-18     	; 0x9d0 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0xe>
     9e2:	df 91       	pop	r29
     9e4:	cf 91       	pop	r28
     9e6:	1f 91       	pop	r17
     9e8:	0f 91       	pop	r16
     9ea:	08 95       	ret

000009ec <_ZN14ADF5610_Driver18CalculateVCOValuesEv>:
     9ec:	3f 92       	push	r3
     9ee:	4f 92       	push	r4
     9f0:	5f 92       	push	r5
     9f2:	6f 92       	push	r6
     9f4:	7f 92       	push	r7
     9f6:	8f 92       	push	r8
     9f8:	9f 92       	push	r9
     9fa:	af 92       	push	r10
     9fc:	bf 92       	push	r11
     9fe:	cf 92       	push	r12
     a00:	df 92       	push	r13
     a02:	ef 92       	push	r14
     a04:	ff 92       	push	r15
     a06:	0f 93       	push	r16
     a08:	1f 93       	push	r17
     a0a:	cf 93       	push	r28
     a0c:	df 93       	push	r29
     a0e:	cd b7       	in	r28, 0x3d	; 61
     a10:	de b7       	in	r29, 0x3e	; 62
     a12:	26 97       	sbiw	r28, 0x06	; 6
     a14:	cd bf       	out	0x3d, r28	; 61
     a16:	de bf       	out	0x3e, r29	; 62
     a18:	8c 01       	movw	r16, r24
     a1a:	fc 01       	movw	r30, r24
     a1c:	ea 5c       	subi	r30, 0xCA	; 202
     a1e:	fe 4f       	sbci	r31, 0xFE	; 254
     a20:	10 82       	st	Z, r1
     a22:	11 82       	std	Z+1, r1	; 0x01
     a24:	12 82       	std	Z+2, r1	; 0x02
     a26:	13 82       	std	Z+3, r1	; 0x03
     a28:	37 97       	sbiw	r30, 0x07	; 7
     a2a:	c0 80       	ld	r12, Z
     a2c:	d1 80       	ldd	r13, Z+1	; 0x01
     a2e:	e2 80       	ldd	r14, Z+2	; 0x02
     a30:	f3 80       	ldd	r15, Z+3	; 0x03
     a32:	a7 01       	movw	r20, r14
     a34:	96 01       	movw	r18, r12
     a36:	60 e0       	ldi	r22, 0x00	; 0
     a38:	70 e2       	ldi	r23, 0x20	; 32
     a3a:	84 e6       	ldi	r24, 0x64	; 100
     a3c:	96 e4       	ldi	r25, 0x46	; 70
     a3e:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__divsf3>
     a42:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <log>
     a46:	28 e1       	ldi	r18, 0x18	; 24
     a48:	32 e7       	ldi	r19, 0x72	; 114
     a4a:	41 e3       	ldi	r20, 0x31	; 49
     a4c:	5f e3       	ldi	r21, 0x3F	; 63
     a4e:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__divsf3>
     a52:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <floor>
     a56:	0e 94 ef 0b 	call	0x17de	; 0x17de <__fixsfsi>
     a5a:	27 e0       	ldi	r18, 0x07	; 7
     a5c:	32 2e       	mov	r3, r18
     a5e:	36 1a       	sub	r3, r22
     a60:	07 2e       	mov	r0, r23
     a62:	00 0c       	add	r0, r0
     a64:	88 0b       	sbc	r24, r24
     a66:	99 0b       	sbc	r25, r25
     a68:	0e 94 27 0c 	call	0x184e	; 0x184e <__floatsisf>
     a6c:	9b 01       	movw	r18, r22
     a6e:	ac 01       	movw	r20, r24
     a70:	60 e0       	ldi	r22, 0x00	; 0
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	90 e4       	ldi	r25, 0x40	; 64
     a78:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <pow>
     a7c:	9b 01       	movw	r18, r22
     a7e:	ac 01       	movw	r20, r24
     a80:	c7 01       	movw	r24, r14
     a82:	b6 01       	movw	r22, r12
     a84:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     a88:	20 e0       	ldi	r18, 0x00	; 0
     a8a:	30 e2       	ldi	r19, 0x20	; 32
     a8c:	44 e6       	ldi	r20, 0x64	; 100
     a8e:	56 e4       	ldi	r21, 0x46	; 70
     a90:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__divsf3>
     a94:	20 e0       	ldi	r18, 0x00	; 0
     a96:	30 e2       	ldi	r19, 0x20	; 32
     a98:	44 ee       	ldi	r20, 0xE4	; 228
     a9a:	55 e4       	ldi	r21, 0x45	; 69
     a9c:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     aa0:	69 83       	std	Y+1, r22	; 0x01
     aa2:	7a 83       	std	Y+2, r23	; 0x02
     aa4:	8b 83       	std	Y+3, r24	; 0x03
     aa6:	9c 83       	std	Y+4, r25	; 0x04
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	4a e7       	ldi	r20, 0x7A	; 122
     aae:	55 e4       	ldi	r21, 0x45	; 69
     ab0:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <__cmpsf2>
     ab4:	88 23       	and	r24, r24
     ab6:	2c f4       	brge	.+10     	; 0xac2 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xd6>
     ab8:	20 e0       	ldi	r18, 0x00	; 0
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	48 e4       	ldi	r20, 0x48	; 72
     abe:	52 e4       	ldi	r21, 0x42	; 66
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xde>
     ac2:	20 e0       	ldi	r18, 0x00	; 0
     ac4:	30 e0       	ldi	r19, 0x00	; 0
     ac6:	48 ec       	ldi	r20, 0xC8	; 200
     ac8:	52 e4       	ldi	r21, 0x42	; 66
     aca:	69 81       	ldd	r22, Y+1	; 0x01
     acc:	7a 81       	ldd	r23, Y+2	; 0x02
     ace:	8b 81       	ldd	r24, Y+3	; 0x03
     ad0:	9c 81       	ldd	r25, Y+4	; 0x04
     ad2:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__divsf3>
     ad6:	2b 01       	movw	r4, r22
     ad8:	3c 01       	movw	r6, r24
     ada:	f8 01       	movw	r30, r16
     adc:	eb 5a       	subi	r30, 0xAB	; 171
     ade:	fe 4f       	sbci	r31, 0xFE	; 254
     ae0:	60 83       	st	Z, r22
     ae2:	71 83       	std	Z+1, r23	; 0x01
     ae4:	82 83       	std	Z+2, r24	; 0x02
     ae6:	93 83       	std	Z+3, r25	; 0x03
     ae8:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <floor>
     aec:	6b 01       	movw	r12, r22
     aee:	7c 01       	movw	r14, r24
     af0:	f8 01       	movw	r30, r16
     af2:	ef 5a       	subi	r30, 0xAF	; 175
     af4:	fe 4f       	sbci	r31, 0xFE	; 254
     af6:	60 83       	st	Z, r22
     af8:	71 83       	std	Z+1, r23	; 0x01
     afa:	82 83       	std	Z+2, r24	; 0x02
     afc:	93 83       	std	Z+3, r25	; 0x03
     afe:	9b 01       	movw	r18, r22
     b00:	ac 01       	movw	r20, r24
     b02:	c3 01       	movw	r24, r6
     b04:	b2 01       	movw	r22, r4
     b06:	0e 94 0b 0b 	call	0x1616	; 0x1616 <__subsf3>
     b0a:	20 e0       	ldi	r18, 0x00	; 0
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	40 e8       	ldi	r20, 0x80	; 128
     b10:	5b e4       	ldi	r21, 0x4B	; 75
     b12:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     b16:	f8 01       	movw	r30, r16
     b18:	e7 5a       	subi	r30, 0xA7	; 167
     b1a:	fe 4f       	sbci	r31, 0xFE	; 254
     b1c:	60 83       	st	Z, r22
     b1e:	71 83       	std	Z+1, r23	; 0x01
     b20:	82 83       	std	Z+2, r24	; 0x02
     b22:	93 83       	std	Z+3, r25	; 0x03
     b24:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__fixunssfsi>
     b28:	4b 01       	movw	r8, r22
     b2a:	5c 01       	movw	r10, r24
     b2c:	f8 01       	movw	r30, r16
     b2e:	e3 5a       	subi	r30, 0xA3	; 163
     b30:	fe 4f       	sbci	r31, 0xFE	; 254
     b32:	60 83       	st	Z, r22
     b34:	71 83       	std	Z+1, r23	; 0x01
     b36:	82 83       	std	Z+2, r24	; 0x02
     b38:	93 83       	std	Z+3, r25	; 0x03
     b3a:	1d 82       	std	Y+5, r1	; 0x05
     b3c:	1e 82       	std	Y+6, r1	; 0x06
     b3e:	8d 81       	ldd	r24, Y+5	; 0x05
     b40:	9e 81       	ldd	r25, Y+6	; 0x06
     b42:	87 31       	cpi	r24, 0x17	; 23
     b44:	91 05       	cpc	r25, r1
     b46:	0c f0       	brlt	.+2      	; 0xb4a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x15e>
     b48:	6f c1       	rjmp	.+734    	; 0xe28 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x43c>
     b4a:	fc 01       	movw	r30, r24
     b4c:	33 97       	sbiw	r30, 0x03	; 3
     b4e:	e4 31       	cpi	r30, 0x14	; 20
     b50:	f1 05       	cpc	r31, r1
     b52:	08 f0       	brcs	.+2      	; 0xb56 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x16a>
     b54:	63 c1       	rjmp	.+710    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     b56:	ef 56       	subi	r30, 0x6F	; 111
     b58:	ff 4f       	sbci	r31, 0xFF	; 255
     b5a:	0c 94 97 14 	jmp	0x292e	; 0x292e <__tablejump2__>
     b5e:	6d 80       	ldd	r6, Y+5	; 0x05
     b60:	7e 80       	ldd	r7, Y+6	; 0x06
     b62:	66 0c       	add	r6, r6
     b64:	77 1c       	adc	r7, r7
     b66:	66 0c       	add	r6, r6
     b68:	77 1c       	adc	r7, r7
     b6a:	60 0e       	add	r6, r16
     b6c:	71 1e       	adc	r7, r17
     b6e:	9a e6       	ldi	r25, 0x6A	; 106
     b70:	69 0e       	add	r6, r25
     b72:	71 1c       	adc	r7, r1
     b74:	c7 01       	movw	r24, r14
     b76:	b6 01       	movw	r22, r12
     b78:	0e 94 ef 0b 	call	0x17de	; 0x17de <__fixsfsi>
     b7c:	dc 01       	movw	r26, r24
     b7e:	cb 01       	movw	r24, r22
     b80:	bb 27       	eor	r27, r27
     b82:	f3 01       	movw	r30, r6
     b84:	80 83       	st	Z, r24
     b86:	91 83       	std	Z+1, r25	; 0x01
     b88:	a2 83       	std	Z+2, r26	; 0x02
     b8a:	b3 83       	std	Z+3, r27	; 0x03
     b8c:	47 c1       	rjmp	.+654    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     b8e:	ed 81       	ldd	r30, Y+5	; 0x05
     b90:	fe 81       	ldd	r31, Y+6	; 0x06
     b92:	ee 0f       	add	r30, r30
     b94:	ff 1f       	adc	r31, r31
     b96:	ee 0f       	add	r30, r30
     b98:	ff 1f       	adc	r31, r31
     b9a:	e0 0f       	add	r30, r16
     b9c:	f1 1f       	adc	r31, r17
     b9e:	e6 59       	subi	r30, 0x96	; 150
     ba0:	ff 4f       	sbci	r31, 0xFF	; 255
     ba2:	d5 01       	movw	r26, r10
     ba4:	c4 01       	movw	r24, r8
     ba6:	bb 27       	eor	r27, r27
     ba8:	80 83       	st	Z, r24
     baa:	91 83       	std	Z+1, r25	; 0x01
     bac:	a2 83       	std	Z+2, r26	; 0x02
     bae:	b3 83       	std	Z+3, r27	; 0x03
     bb0:	35 c1       	rjmp	.+618    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     bb2:	8d 81       	ldd	r24, Y+5	; 0x05
     bb4:	9e 81       	ldd	r25, Y+6	; 0x06
     bb6:	88 0f       	add	r24, r24
     bb8:	99 1f       	adc	r25, r25
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	80 0f       	add	r24, r16
     bc0:	91 1f       	adc	r25, r17
     bc2:	fc 01       	movw	r30, r24
     bc4:	ea 53       	subi	r30, 0x3A	; 58
     bc6:	ff 4f       	sbci	r31, 0xFF	; 255
     bc8:	40 81       	ld	r20, Z
     bca:	51 81       	ldd	r21, Z+1	; 0x01
     bcc:	62 81       	ldd	r22, Z+2	; 0x02
     bce:	73 81       	ldd	r23, Z+3	; 0x03
     bd0:	ec 55       	subi	r30, 0x5C	; 92
     bd2:	f1 09       	sbc	r31, r1
     bd4:	40 83       	st	Z, r20
     bd6:	51 83       	std	Z+1, r21	; 0x01
     bd8:	62 83       	std	Z+2, r22	; 0x02
     bda:	73 83       	std	Z+3, r23	; 0x03
     bdc:	1f c1       	rjmp	.+574    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     bde:	20 e0       	ldi	r18, 0x00	; 0
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	4a e7       	ldi	r20, 0x7A	; 122
     be4:	55 e4       	ldi	r21, 0x45	; 69
     be6:	69 81       	ldd	r22, Y+1	; 0x01
     be8:	7a 81       	ldd	r23, Y+2	; 0x02
     bea:	8b 81       	ldd	r24, Y+3	; 0x03
     bec:	9c 81       	ldd	r25, Y+4	; 0x04
     bee:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <__cmpsf2>
     bf2:	88 23       	and	r24, r24
     bf4:	a4 f4       	brge	.+40     	; 0xc1e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x232>
     bf6:	ed 81       	ldd	r30, Y+5	; 0x05
     bf8:	fe 81       	ldd	r31, Y+6	; 0x06
     bfa:	ee 0f       	add	r30, r30
     bfc:	ff 1f       	adc	r31, r31
     bfe:	ee 0f       	add	r30, r30
     c00:	ff 1f       	adc	r31, r31
     c02:	e0 0f       	add	r30, r16
     c04:	f1 1f       	adc	r31, r17
     c06:	e6 59       	subi	r30, 0x96	; 150
     c08:	ff 4f       	sbci	r31, 0xFF	; 255
     c0a:	80 81       	ld	r24, Z
     c0c:	91 81       	ldd	r25, Z+1	; 0x01
     c0e:	a2 81       	ldd	r26, Z+2	; 0x02
     c10:	b3 81       	ldd	r27, Z+3	; 0x03
     c12:	a7 7f       	andi	r26, 0xF7	; 247
     c14:	80 83       	st	Z, r24
     c16:	91 83       	std	Z+1, r25	; 0x01
     c18:	a2 83       	std	Z+2, r26	; 0x02
     c1a:	b3 83       	std	Z+3, r27	; 0x03
     c1c:	ff c0       	rjmp	.+510    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     c1e:	ed 81       	ldd	r30, Y+5	; 0x05
     c20:	fe 81       	ldd	r31, Y+6	; 0x06
     c22:	ee 0f       	add	r30, r30
     c24:	ff 1f       	adc	r31, r31
     c26:	ee 0f       	add	r30, r30
     c28:	ff 1f       	adc	r31, r31
     c2a:	e0 0f       	add	r30, r16
     c2c:	f1 1f       	adc	r31, r17
     c2e:	e6 59       	subi	r30, 0x96	; 150
     c30:	ff 4f       	sbci	r31, 0xFF	; 255
     c32:	80 81       	ld	r24, Z
     c34:	91 81       	ldd	r25, Z+1	; 0x01
     c36:	a2 81       	ldd	r26, Z+2	; 0x02
     c38:	b3 81       	ldd	r27, Z+3	; 0x03
     c3a:	a8 60       	ori	r26, 0x08	; 8
     c3c:	80 83       	st	Z, r24
     c3e:	91 83       	std	Z+1, r25	; 0x01
     c40:	a2 83       	std	Z+2, r26	; 0x02
     c42:	b3 83       	std	Z+3, r27	; 0x03
     c44:	eb c0       	rjmp	.+470    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     c46:	f8 01       	movw	r30, r16
     c48:	e2 58       	subi	r30, 0x82	; 130
     c4a:	ff 4f       	sbci	r31, 0xFF	; 255
     c4c:	80 81       	ld	r24, Z
     c4e:	91 81       	ldd	r25, Z+1	; 0x01
     c50:	a2 81       	ldd	r26, Z+2	; 0x02
     c52:	b3 81       	ldd	r27, Z+3	; 0x03
     c54:	e8 54       	subi	r30, 0x48	; 72
     c56:	ff 4f       	sbci	r31, 0xFF	; 255
     c58:	80 83       	st	Z, r24
     c5a:	91 83       	std	Z+1, r25	; 0x01
     c5c:	a2 83       	std	Z+2, r26	; 0x02
     c5e:	b3 83       	std	Z+3, r27	; 0x03
     c60:	ed 81       	ldd	r30, Y+5	; 0x05
     c62:	fe 81       	ldd	r31, Y+6	; 0x06
     c64:	ee 0f       	add	r30, r30
     c66:	ff 1f       	adc	r31, r31
     c68:	ee 0f       	add	r30, r30
     c6a:	ff 1f       	adc	r31, r31
     c6c:	e0 0f       	add	r30, r16
     c6e:	f1 1f       	adc	r31, r17
     c70:	e6 59       	subi	r30, 0x96	; 150
     c72:	ff 4f       	sbci	r31, 0xFF	; 255
     c74:	80 83       	st	Z, r24
     c76:	91 83       	std	Z+1, r25	; 0x01
     c78:	a2 83       	std	Z+2, r26	; 0x02
     c7a:	b3 83       	std	Z+3, r27	; 0x03
     c7c:	cf c0       	rjmp	.+414    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     c7e:	8d 81       	ldd	r24, Y+5	; 0x05
     c80:	9e 81       	ldd	r25, Y+6	; 0x06
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	88 0f       	add	r24, r24
     c88:	99 1f       	adc	r25, r25
     c8a:	80 0f       	add	r24, r16
     c8c:	91 1f       	adc	r25, r17
     c8e:	fc 01       	movw	r30, r24
     c90:	ea 53       	subi	r30, 0x3A	; 58
     c92:	ff 4f       	sbci	r31, 0xFF	; 255
     c94:	40 81       	ld	r20, Z
     c96:	51 81       	ldd	r21, Z+1	; 0x01
     c98:	62 81       	ldd	r22, Z+2	; 0x02
     c9a:	73 81       	ldd	r23, Z+3	; 0x03
     c9c:	ec 55       	subi	r30, 0x5C	; 92
     c9e:	f1 09       	sbc	r31, r1
     ca0:	40 83       	st	Z, r20
     ca2:	51 83       	std	Z+1, r21	; 0x01
     ca4:	62 83       	std	Z+2, r22	; 0x02
     ca6:	73 83       	std	Z+3, r23	; 0x03
     ca8:	b9 c0       	rjmp	.+370    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     caa:	83 e0       	ldi	r24, 0x03	; 3
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	80 31       	cpi	r24, 0x10	; 16
     cb0:	91 05       	cpc	r25, r1
     cb2:	0c f0       	brlt	.+2      	; 0xcb6 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2ca>
     cb4:	b3 c0       	rjmp	.+358    	; 0xe1c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x430>
     cb6:	87 30       	cpi	r24, 0x07	; 7
     cb8:	91 05       	cpc	r25, r1
     cba:	0c f0       	brlt	.+2      	; 0xcbe <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2d2>
     cbc:	58 c0       	rjmp	.+176    	; 0xd6e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x382>
     cbe:	ac 01       	movw	r20, r24
     cc0:	43 50       	subi	r20, 0x03	; 3
     cc2:	51 09       	sbc	r21, r1
     cc4:	22 e0       	ldi	r18, 0x02	; 2
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2e2>
     cca:	35 95       	asr	r19
     ccc:	27 95       	ror	r18
     cce:	4a 95       	dec	r20
     cd0:	e2 f7       	brpl	.-8      	; 0xcca <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2de>
     cd2:	20 ff       	sbrs	r18, 0
     cd4:	24 c0       	rjmp	.+72     	; 0xd1e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x332>
     cd6:	41 e0       	ldi	r20, 0x01	; 1
     cd8:	50 e0       	ldi	r21, 0x00	; 0
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	08 2e       	mov	r0, r24
     ce0:	04 c0       	rjmp	.+8      	; 0xcea <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2fe>
     ce2:	44 0f       	add	r20, r20
     ce4:	55 1f       	adc	r21, r21
     ce6:	66 1f       	adc	r22, r22
     ce8:	77 1f       	adc	r23, r23
     cea:	0a 94       	dec	r0
     cec:	d2 f7       	brpl	.-12     	; 0xce2 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2f6>
     cee:	2d 81       	ldd	r18, Y+5	; 0x05
     cf0:	3e 81       	ldd	r19, Y+6	; 0x06
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	22 0f       	add	r18, r18
     cf8:	33 1f       	adc	r19, r19
     cfa:	20 0f       	add	r18, r16
     cfc:	31 1f       	adc	r19, r17
     cfe:	f9 01       	movw	r30, r18
     d00:	e6 59       	subi	r30, 0x96	; 150
     d02:	ff 4f       	sbci	r31, 0xFF	; 255
     d04:	40 80       	ld	r4, Z
     d06:	51 80       	ldd	r5, Z+1	; 0x01
     d08:	62 80       	ldd	r6, Z+2	; 0x02
     d0a:	73 80       	ldd	r7, Z+3	; 0x03
     d0c:	44 29       	or	r20, r4
     d0e:	55 29       	or	r21, r5
     d10:	66 29       	or	r22, r6
     d12:	77 29       	or	r23, r7
     d14:	40 83       	st	Z, r20
     d16:	51 83       	std	Z+1, r21	; 0x01
     d18:	62 83       	std	Z+2, r22	; 0x02
     d1a:	73 83       	std	Z+3, r23	; 0x03
     d1c:	7d c0       	rjmp	.+250    	; 0xe18 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x42c>
     d1e:	41 e0       	ldi	r20, 0x01	; 1
     d20:	50 e0       	ldi	r21, 0x00	; 0
     d22:	60 e0       	ldi	r22, 0x00	; 0
     d24:	70 e0       	ldi	r23, 0x00	; 0
     d26:	08 2e       	mov	r0, r24
     d28:	04 c0       	rjmp	.+8      	; 0xd32 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x346>
     d2a:	44 0f       	add	r20, r20
     d2c:	55 1f       	adc	r21, r21
     d2e:	66 1f       	adc	r22, r22
     d30:	77 1f       	adc	r23, r23
     d32:	0a 94       	dec	r0
     d34:	d2 f7       	brpl	.-12     	; 0xd2a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x33e>
     d36:	2d 81       	ldd	r18, Y+5	; 0x05
     d38:	3e 81       	ldd	r19, Y+6	; 0x06
     d3a:	22 0f       	add	r18, r18
     d3c:	33 1f       	adc	r19, r19
     d3e:	22 0f       	add	r18, r18
     d40:	33 1f       	adc	r19, r19
     d42:	20 0f       	add	r18, r16
     d44:	31 1f       	adc	r19, r17
     d46:	f9 01       	movw	r30, r18
     d48:	e6 59       	subi	r30, 0x96	; 150
     d4a:	ff 4f       	sbci	r31, 0xFF	; 255
     d4c:	40 95       	com	r20
     d4e:	50 95       	com	r21
     d50:	60 95       	com	r22
     d52:	70 95       	com	r23
     d54:	40 80       	ld	r4, Z
     d56:	51 80       	ldd	r5, Z+1	; 0x01
     d58:	62 80       	ldd	r6, Z+2	; 0x02
     d5a:	73 80       	ldd	r7, Z+3	; 0x03
     d5c:	44 21       	and	r20, r4
     d5e:	55 21       	and	r21, r5
     d60:	66 21       	and	r22, r6
     d62:	77 21       	and	r23, r7
     d64:	40 83       	st	Z, r20
     d66:	51 83       	std	Z+1, r21	; 0x01
     d68:	62 83       	std	Z+2, r22	; 0x02
     d6a:	73 83       	std	Z+3, r23	; 0x03
     d6c:	55 c0       	rjmp	.+170    	; 0xe18 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x42c>
     d6e:	23 2d       	mov	r18, r3
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	ac 01       	movw	r20, r24
     d74:	47 50       	subi	r20, 0x07	; 7
     d76:	51 09       	sbc	r21, r1
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x392>
     d7a:	35 95       	asr	r19
     d7c:	27 95       	ror	r18
     d7e:	4a 95       	dec	r20
     d80:	e2 f7       	brpl	.-8      	; 0xd7a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x38e>
     d82:	20 ff       	sbrs	r18, 0
     d84:	23 c0       	rjmp	.+70     	; 0xdcc <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x3e0>
     d86:	41 e0       	ldi	r20, 0x01	; 1
     d88:	50 e0       	ldi	r21, 0x00	; 0
     d8a:	60 e0       	ldi	r22, 0x00	; 0
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	08 2e       	mov	r0, r24
     d90:	04 c0       	rjmp	.+8      	; 0xd9a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x3ae>
     d92:	44 0f       	add	r20, r20
     d94:	55 1f       	adc	r21, r21
     d96:	66 1f       	adc	r22, r22
     d98:	77 1f       	adc	r23, r23
     d9a:	0a 94       	dec	r0
     d9c:	d2 f7       	brpl	.-12     	; 0xd92 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x3a6>
     d9e:	ed 81       	ldd	r30, Y+5	; 0x05
     da0:	fe 81       	ldd	r31, Y+6	; 0x06
     da2:	ee 0f       	add	r30, r30
     da4:	ff 1f       	adc	r31, r31
     da6:	ee 0f       	add	r30, r30
     da8:	ff 1f       	adc	r31, r31
     daa:	e0 0f       	add	r30, r16
     dac:	f1 1f       	adc	r31, r17
     dae:	e6 59       	subi	r30, 0x96	; 150
     db0:	ff 4f       	sbci	r31, 0xFF	; 255
     db2:	40 80       	ld	r4, Z
     db4:	51 80       	ldd	r5, Z+1	; 0x01
     db6:	62 80       	ldd	r6, Z+2	; 0x02
     db8:	73 80       	ldd	r7, Z+3	; 0x03
     dba:	44 29       	or	r20, r4
     dbc:	55 29       	or	r21, r5
     dbe:	66 29       	or	r22, r6
     dc0:	77 29       	or	r23, r7
     dc2:	40 83       	st	Z, r20
     dc4:	51 83       	std	Z+1, r21	; 0x01
     dc6:	62 83       	std	Z+2, r22	; 0x02
     dc8:	73 83       	std	Z+3, r23	; 0x03
     dca:	26 c0       	rjmp	.+76     	; 0xe18 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x42c>
     dcc:	41 e0       	ldi	r20, 0x01	; 1
     dce:	50 e0       	ldi	r21, 0x00	; 0
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	08 2e       	mov	r0, r24
     dd6:	04 c0       	rjmp	.+8      	; 0xde0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x3f4>
     dd8:	44 0f       	add	r20, r20
     dda:	55 1f       	adc	r21, r21
     ddc:	66 1f       	adc	r22, r22
     dde:	77 1f       	adc	r23, r23
     de0:	0a 94       	dec	r0
     de2:	d2 f7       	brpl	.-12     	; 0xdd8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x3ec>
     de4:	ed 81       	ldd	r30, Y+5	; 0x05
     de6:	fe 81       	ldd	r31, Y+6	; 0x06
     de8:	ee 0f       	add	r30, r30
     dea:	ff 1f       	adc	r31, r31
     dec:	ee 0f       	add	r30, r30
     dee:	ff 1f       	adc	r31, r31
     df0:	e0 0f       	add	r30, r16
     df2:	f1 1f       	adc	r31, r17
     df4:	e6 59       	subi	r30, 0x96	; 150
     df6:	ff 4f       	sbci	r31, 0xFF	; 255
     df8:	40 95       	com	r20
     dfa:	50 95       	com	r21
     dfc:	60 95       	com	r22
     dfe:	70 95       	com	r23
     e00:	40 80       	ld	r4, Z
     e02:	51 80       	ldd	r5, Z+1	; 0x01
     e04:	62 80       	ldd	r6, Z+2	; 0x02
     e06:	73 80       	ldd	r7, Z+3	; 0x03
     e08:	44 21       	and	r20, r4
     e0a:	55 21       	and	r21, r5
     e0c:	66 21       	and	r22, r6
     e0e:	77 21       	and	r23, r7
     e10:	40 83       	st	Z, r20
     e12:	51 83       	std	Z+1, r21	; 0x01
     e14:	62 83       	std	Z+2, r22	; 0x02
     e16:	73 83       	std	Z+3, r23	; 0x03
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	49 cf       	rjmp	.-366    	; 0xcae <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2c2>
     e1c:	8d 81       	ldd	r24, Y+5	; 0x05
     e1e:	9e 81       	ldd	r25, Y+6	; 0x06
     e20:	01 96       	adiw	r24, 0x01	; 1
     e22:	8d 83       	std	Y+5, r24	; 0x05
     e24:	9e 83       	std	Y+6, r25	; 0x06
     e26:	8b ce       	rjmp	.-746    	; 0xb3e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x152>
     e28:	26 96       	adiw	r28, 0x06	; 6
     e2a:	cd bf       	out	0x3d, r28	; 61
     e2c:	de bf       	out	0x3e, r29	; 62
     e2e:	df 91       	pop	r29
     e30:	cf 91       	pop	r28
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	ff 90       	pop	r15
     e38:	ef 90       	pop	r14
     e3a:	df 90       	pop	r13
     e3c:	cf 90       	pop	r12
     e3e:	bf 90       	pop	r11
     e40:	af 90       	pop	r10
     e42:	9f 90       	pop	r9
     e44:	8f 90       	pop	r8
     e46:	7f 90       	pop	r7
     e48:	6f 90       	pop	r6
     e4a:	5f 90       	pop	r5
     e4c:	4f 90       	pop	r4
     e4e:	3f 90       	pop	r3
     e50:	08 95       	ret

00000e52 <_ZN14ADF5610_Driver16SetNextFrequencyEv>:
     e52:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN14ADF5610_Driver18CalculateVCOValuesEv>
     e56:	08 95       	ret

00000e58 <_ZN14ADF5610_Driver6usleepEl>:
	return true;
}
#ifdef ARDUINO_AVR_UNO
#else

void ADF5610_Driver::usleep(long us){
     e58:	8f 92       	push	r8
     e5a:	9f 92       	push	r9
     e5c:	af 92       	push	r10
     e5e:	bf 92       	push	r11
     e60:	cf 92       	push	r12
     e62:	df 92       	push	r13
     e64:	ef 92       	push	r14
     e66:	ff 92       	push	r15
	if (us/1000>1)
     e68:	40 3d       	cpi	r20, 0xD0	; 208
     e6a:	87 e0       	ldi	r24, 0x07	; 7
     e6c:	58 07       	cpc	r21, r24
     e6e:	61 05       	cpc	r22, r1
     e70:	71 05       	cpc	r23, r1
     e72:	0c f4       	brge	.+2      	; 0xe76 <_ZN14ADF5610_Driver6usleepEl+0x1e>
     e74:	47 c0       	rjmp	.+142    	; 0xf04 <_ZN14ADF5610_Driver6usleepEl+0xac>
     e76:	cb 01       	movw	r24, r22
     e78:	ba 01       	movw	r22, r20
	{
		_delay_ms(us/1000);
     e7a:	28 ee       	ldi	r18, 0xE8	; 232
     e7c:	33 e0       	ldi	r19, 0x03	; 3
     e7e:	40 e0       	ldi	r20, 0x00	; 0
     e80:	50 e0       	ldi	r21, 0x00	; 0
     e82:	0e 94 78 14 	call	0x28f0	; 0x28f0 <__divmodsi4>
     e86:	ca 01       	movw	r24, r20
     e88:	b9 01       	movw	r22, r18
     e8a:	0e 94 27 0c 	call	0x184e	; 0x184e <__floatsisf>
     e8e:	4b 01       	movw	r8, r22
     e90:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e8       	ldi	r19, 0x80	; 128
     e96:	4b eb       	ldi	r20, 0xBB	; 187
     e98:	55 e4       	ldi	r21, 0x45	; 69
     e9a:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     e9e:	6b 01       	movw	r12, r22
     ea0:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 e8       	ldi	r20, 0x80	; 128
     ea8:	5f e3       	ldi	r21, 0x3F	; 63
     eaa:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <__cmpsf2>
     eae:	88 23       	and	r24, r24
     eb0:	1c f1       	brlt	.+70     	; 0xef8 <_ZN14ADF5610_Driver6usleepEl+0xa0>
		__ticks = 1;
	else if (__tmp > 65535)
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	3f ef       	ldi	r19, 0xFF	; 255
     eb6:	4f e7       	ldi	r20, 0x7F	; 127
     eb8:	57 e4       	ldi	r21, 0x47	; 71
     eba:	c7 01       	movw	r24, r14
     ebc:	b6 01       	movw	r22, r12
     ebe:	0e 94 2f 0d 	call	0x1a5e	; 0x1a5e <__gesf2>
     ec2:	18 16       	cp	r1, r24
     ec4:	a4 f4       	brge	.+40     	; 0xeee <_ZN14ADF5610_Driver6usleepEl+0x96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 e2       	ldi	r20, 0x20	; 32
     ecc:	51 e4       	ldi	r21, 0x41	; 65
     ece:	c5 01       	movw	r24, r10
     ed0:	b4 01       	movw	r22, r8
     ed2:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     ed6:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__fixunssfsi>
		while(__ticks)
     eda:	61 15       	cp	r22, r1
     edc:	71 05       	cpc	r23, r1
     ede:	b1 f0       	breq	.+44     	; 0xf0c <_ZN14ADF5610_Driver6usleepEl+0xb4>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     ee0:	88 e5       	ldi	r24, 0x58	; 88
     ee2:	92 e0       	ldi	r25, 0x02	; 2
     ee4:	01 97       	sbiw	r24, 0x01	; 1
     ee6:	f1 f7       	brne	.-4      	; 0xee4 <_ZN14ADF5610_Driver6usleepEl+0x8c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ee8:	61 50       	subi	r22, 0x01	; 1
     eea:	71 09       	sbc	r23, r1
     eec:	f6 cf       	rjmp	.-20     	; 0xeda <_ZN14ADF5610_Driver6usleepEl+0x82>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eee:	c7 01       	movw	r24, r14
     ef0:	b6 01       	movw	r22, r12
     ef2:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__fixunssfsi>
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <_ZN14ADF5610_Driver6usleepEl+0xa4>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
     ef8:	61 e0       	ldi	r22, 0x01	; 1
     efa:	70 e0       	ldi	r23, 0x00	; 0
     efc:	cb 01       	movw	r24, r22
     efe:	01 97       	sbiw	r24, 0x01	; 1
     f00:	f1 f7       	brne	.-4      	; 0xefe <_ZN14ADF5610_Driver6usleepEl+0xa6>
     f02:	04 c0       	rjmp	.+8      	; 0xf0c <_ZN14ADF5610_Driver6usleepEl+0xb4>
     f04:	80 e7       	ldi	r24, 0x70	; 112
     f06:	97 e1       	ldi	r25, 0x17	; 23
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	f1 f7       	brne	.-4      	; 0xf08 <_ZN14ADF5610_Driver6usleepEl+0xb0>
	else
	{
		_delay_ms(1);
	}
	
}
     f0c:	ff 90       	pop	r15
     f0e:	ef 90       	pop	r14
     f10:	df 90       	pop	r13
     f12:	cf 90       	pop	r12
     f14:	bf 90       	pop	r11
     f16:	af 90       	pop	r10
     f18:	9f 90       	pop	r9
     f1a:	8f 90       	pop	r8
     f1c:	08 95       	ret

00000f1e <_ZN14ADF5610_Driver14WriteRegistersEh>:
#endif

	return is_locked;
}

void  ADF5610_Driver::WriteRegisters(uint8_t index) {
     f1e:	ef 92       	push	r14
     f20:	ff 92       	push	r15
     f22:	0f 93       	push	r16
     f24:	1f 93       	push	r17
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
  local_index=0;
     f2a:	fc 01       	movw	r30, r24
     f2c:	e6 5c       	subi	r30, 0xC6	; 198
     f2e:	fe 4f       	sbci	r31, 0xFE	; 254
     f30:	10 82       	st	Z, r1
  buffer32 = 0;
     f32:	78 97       	sbiw	r30, 0x18	; 24
     f34:	10 82       	st	Z, r1
     f36:	11 82       	std	Z+1, r1	; 0x01
     f38:	12 82       	std	Z+2, r1	; 0x02
     f3a:	13 82       	std	Z+3, r1	; 0x03


  //RegAdr = d;
  if (index>19){
     f3c:	64 31       	cpi	r22, 0x14	; 20
     f3e:	e0 f0       	brcs	.+56     	; 0xf78 <_ZN14ADF5610_Driver14WriteRegistersEh+0x5a>
    if(index>22){
     f40:	67 31       	cpi	r22, 0x17	; 23
     f42:	a0 f0       	brcs	.+40     	; 0xf6c <_ZN14ADF5610_Driver14WriteRegistersEh+0x4e>
		if (index>23)
     f44:	68 31       	cpi	r22, 0x18	; 24
     f46:	60 f0       	brcs	.+24     	; 0xf60 <_ZN14ADF5610_Driver14WriteRegistersEh+0x42>
		{
			if (index==24)
     f48:	68 31       	cpi	r22, 0x18	; 24
     f4a:	21 f4       	brne	.+8      	; 0xf54 <_ZN14ADF5610_Driver14WriteRegistersEh+0x36>
			{
				local_index=4;
     f4c:	24 e0       	ldi	r18, 0x04	; 4
     f4e:	78 96       	adiw	r30, 0x18	; 24
     f50:	20 83       	st	Z, r18
     f52:	16 c0       	rjmp	.+44     	; 0xf80 <_ZN14ADF5610_Driver14WriteRegistersEh+0x62>
			} 
			else
			{
				 local_index=3;
     f54:	23 e0       	ldi	r18, 0x03	; 3
     f56:	fc 01       	movw	r30, r24
     f58:	e6 5c       	subi	r30, 0xC6	; 198
     f5a:	fe 4f       	sbci	r31, 0xFE	; 254
     f5c:	20 83       	st	Z, r18
     f5e:	10 c0       	rjmp	.+32     	; 0xf80 <_ZN14ADF5610_Driver14WriteRegistersEh+0x62>
			}
		} 
		else
		{
			 local_index=3;
     f60:	23 e0       	ldi	r18, 0x03	; 3
     f62:	fc 01       	movw	r30, r24
     f64:	e6 5c       	subi	r30, 0xC6	; 198
     f66:	fe 4f       	sbci	r31, 0xFE	; 254
     f68:	20 83       	st	Z, r18
     f6a:	0a c0       	rjmp	.+20     	; 0xf80 <_ZN14ADF5610_Driver14WriteRegistersEh+0x62>
		}
     
    }else {
		 local_index=5;
     f6c:	25 e0       	ldi	r18, 0x05	; 5
     f6e:	fc 01       	movw	r30, r24
     f70:	e6 5c       	subi	r30, 0xC6	; 198
     f72:	fe 4f       	sbci	r31, 0xFE	; 254
     f74:	20 83       	st	Z, r18
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <_ZN14ADF5610_Driver14WriteRegistersEh+0x62>
     
    }
  }else{
    local_index=index;
     f78:	fc 01       	movw	r30, r24
     f7a:	e6 5c       	subi	r30, 0xC6	; 198
     f7c:	fe 4f       	sbci	r31, 0xFE	; 254
     f7e:	60 83       	st	Z, r22
  }
  switch (local_index){
     f80:	fc 01       	movw	r30, r24
     f82:	e6 5c       	subi	r30, 0xC6	; 198
     f84:	fe 4f       	sbci	r31, 0xFE	; 254
     f86:	20 81       	ld	r18, Z
     f88:	20 51       	subi	r18, 0x10	; 16
     f8a:	24 30       	cpi	r18, 0x04	; 4
     f8c:	08 f4       	brcc	.+2      	; 0xf90 <_ZN14ADF5610_Driver14WriteRegistersEh+0x72>
     f8e:	95 c0       	rjmp	.+298    	; 0x10ba <_ZN14ADF5610_Driver14WriteRegistersEh+0x19c>
     f90:	c6 2f       	mov	r28, r22
     f92:	8c 01       	movw	r16, r24
	  case 19:
	  	  		  break;
	  default:
	
		
		    spi->SetCS(false);
     f94:	60 e0       	ldi	r22, 0x00	; 0
     f96:	dc 01       	movw	r26, r24
     f98:	14 96       	adiw	r26, 0x04	; 4
     f9a:	8d 91       	ld	r24, X+
     f9c:	9c 91       	ld	r25, X
     f9e:	15 97       	sbiw	r26, 0x05	; 5
     fa0:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN13SPI_Syn_Class5SetCSEb>
		
			  buffer32 =((uint32_t)local_index <<3)|(RegWrite[index]<<8);
     fa4:	f8 01       	movw	r30, r16
     fa6:	e6 5c       	subi	r30, 0xC6	; 198
     fa8:	fe 4f       	sbci	r31, 0xFE	; 254
     faa:	80 81       	ld	r24, Z
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	a0 e0       	ldi	r26, 0x00	; 0
     fb0:	b0 e0       	ldi	r27, 0x00	; 0
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25
     fb6:	aa 1f       	adc	r26, r26
     fb8:	bb 1f       	adc	r27, r27
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	aa 1f       	adc	r26, r26
     fc0:	bb 1f       	adc	r27, r27
     fc2:	88 0f       	add	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	aa 1f       	adc	r26, r26
     fc8:	bb 1f       	adc	r27, r27
     fca:	d0 e0       	ldi	r29, 0x00	; 0
     fcc:	fe 01       	movw	r30, r28
     fce:	ee 0f       	add	r30, r30
     fd0:	ff 1f       	adc	r31, r31
     fd2:	ee 0f       	add	r30, r30
     fd4:	ff 1f       	adc	r31, r31
     fd6:	e0 0f       	add	r30, r16
     fd8:	f1 1f       	adc	r31, r17
     fda:	e6 59       	subi	r30, 0x96	; 150
     fdc:	ff 4f       	sbci	r31, 0xFF	; 255
     fde:	40 81       	ld	r20, Z
     fe0:	51 81       	ldd	r21, Z+1	; 0x01
     fe2:	62 81       	ldd	r22, Z+2	; 0x02
     fe4:	73 81       	ldd	r23, Z+3	; 0x03
     fe6:	76 2f       	mov	r23, r22
     fe8:	65 2f       	mov	r22, r21
     fea:	54 2f       	mov	r21, r20
     fec:	44 27       	eor	r20, r20
     fee:	9a 01       	movw	r18, r20
     ff0:	ab 01       	movw	r20, r22
     ff2:	28 2b       	or	r18, r24
     ff4:	39 2b       	or	r19, r25
     ff6:	4a 2b       	or	r20, r26
     ff8:	5b 2b       	or	r21, r27
     ffa:	f8 01       	movw	r30, r16
     ffc:	ee 5d       	subi	r30, 0xDE	; 222
     ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    1000:	20 83       	st	Z, r18
    1002:	31 83       	std	Z+1, r19	; 0x01
    1004:	42 83       	std	Z+2, r20	; 0x02
    1006:	53 83       	std	Z+3, r21	; 0x03
			  // buffer32 =((uint32_t)vco_index <<25)|(RegWrite[index]<<1);
			  ConvertU32FourByteArray(to_send,buffer32);
    1008:	78 01       	movw	r14, r16
    100a:	bd eb       	ldi	r27, 0xBD	; 189
    100c:	eb 1a       	sub	r14, r27
    100e:	be ef       	ldi	r27, 0xFE	; 254
    1010:	fb 0a       	sbc	r15, r27
    1012:	b7 01       	movw	r22, r14
    1014:	c8 01       	movw	r24, r16
    1016:	0e 94 82 02 	call	0x504	; 0x504 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm>
			
				// delay(1);
		          spi->Write(to_send,4);
    101a:	44 e0       	ldi	r20, 0x04	; 4
    101c:	b7 01       	movw	r22, r14
    101e:	f8 01       	movw	r30, r16
    1020:	84 81       	ldd	r24, Z+4	; 0x04
    1022:	95 81       	ldd	r25, Z+5	; 0x05
    1024:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <_ZN13SPI_Syn_Class5WriteEPKhh>
				   //   for (int i = 0; i < 4; i++){
					//	  dummy_byte=(uint8_t)(buffer32 >> ((3-i) * 8))&0xFF;
					  //    spi->Write(&dummy_byte);
				      //}
		
			 usleep(1);
    1028:	41 e0       	ldi	r20, 0x01	; 1
    102a:	50 e0       	ldi	r21, 0x00	; 0
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	70 e0       	ldi	r23, 0x00	; 0
    1030:	c8 01       	movw	r24, r16
    1032:	0e 94 2c 07 	call	0xe58	; 0xe58 <_ZN14ADF5610_Driver6usleepEl>
		   spi->SetCS(true);
    1036:	61 e0       	ldi	r22, 0x01	; 1
    1038:	d8 01       	movw	r26, r16
    103a:	14 96       	adiw	r26, 0x04	; 4
    103c:	8d 91       	ld	r24, X+
    103e:	9c 91       	ld	r25, X
    1040:	15 97       	sbiw	r26, 0x05	; 5
    1042:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN13SPI_Syn_Class5SetCSEb>
		 

		    //Serial.print(received[4], HEX);Serial.print(received[3], HEX); Serial.print(received[2], HEX);Serial.println(received[1], HEX);
		   if(!is_locked){
    1046:	f8 01       	movw	r30, r16
    1048:	eb 5c       	subi	r30, 0xCB	; 203
    104a:	fe 4f       	sbci	r31, 0xFE	; 254
    104c:	80 81       	ld	r24, Z
    104e:	81 11       	cpse	r24, r1
    1050:	34 c0       	rjmp	.+104    	; 0x10ba <_ZN14ADF5610_Driver14WriteRegistersEh+0x19c>
			   usleep(1);
    1052:	41 e0       	ldi	r20, 0x01	; 1
    1054:	50 e0       	ldi	r21, 0x00	; 0
    1056:	60 e0       	ldi	r22, 0x00	; 0
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	c8 01       	movw	r24, r16
    105c:	0e 94 2c 07 	call	0xe58	; 0xe58 <_ZN14ADF5610_Driver6usleepEl>
			   ReadRegisters(local_index);
    1060:	78 01       	movw	r14, r16
    1062:	b6 ec       	ldi	r27, 0xC6	; 198
    1064:	eb 1a       	sub	r14, r27
    1066:	be ef       	ldi	r27, 0xFE	; 254
    1068:	fb 0a       	sbc	r15, r27
    106a:	f7 01       	movw	r30, r14
    106c:	60 81       	ld	r22, Z
    106e:	c8 01       	movw	r24, r16
    1070:	0e 94 b0 02 	call	0x560	; 0x560 <_ZN14ADF5610_Driver13ReadRegistersEh>
			   
				   if(RegRead[local_index]!=RegWrite[index]){
    1074:	d7 01       	movw	r26, r14
    1076:	ec 91       	ld	r30, X
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	ee 0f       	add	r30, r30
    107c:	ff 1f       	adc	r31, r31
    107e:	ee 0f       	add	r30, r30
    1080:	ff 1f       	adc	r31, r31
    1082:	e0 0f       	add	r30, r16
    1084:	f1 1f       	adc	r31, r17
    1086:	46 85       	ldd	r20, Z+14	; 0x0e
    1088:	57 85       	ldd	r21, Z+15	; 0x0f
    108a:	60 89       	ldd	r22, Z+16	; 0x10
    108c:	71 89       	ldd	r23, Z+17	; 0x11
    108e:	fe 01       	movw	r30, r28
    1090:	ee 0f       	add	r30, r30
    1092:	ff 1f       	adc	r31, r31
    1094:	ee 0f       	add	r30, r30
    1096:	ff 1f       	adc	r31, r31
    1098:	e0 0f       	add	r30, r16
    109a:	f1 1f       	adc	r31, r17
    109c:	e6 59       	subi	r30, 0x96	; 150
    109e:	ff 4f       	sbci	r31, 0xFF	; 255
    10a0:	80 81       	ld	r24, Z
    10a2:	91 81       	ldd	r25, Z+1	; 0x01
    10a4:	a2 81       	ldd	r26, Z+2	; 0x02
    10a6:	b3 81       	ldd	r27, Z+3	; 0x03
    10a8:	48 17       	cp	r20, r24
    10aa:	59 07       	cpc	r21, r25
    10ac:	6a 07       	cpc	r22, r26
    10ae:	7b 07       	cpc	r23, r27
    10b0:	21 f0       	breq	.+8      	; 0x10ba <_ZN14ADF5610_Driver14WriteRegistersEh+0x19c>
							   ShowRegisters(index);
    10b2:	be 01       	movw	r22, r28
    10b4:	c8 01       	movw	r24, r16
    10b6:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <_ZN14ADF5610_Driver13ShowRegistersEi>

		  break;


  }
}
    10ba:	df 91       	pop	r29
    10bc:	cf 91       	pop	r28
    10be:	1f 91       	pop	r17
    10c0:	0f 91       	pop	r16
    10c2:	ff 90       	pop	r15
    10c4:	ef 90       	pop	r14
    10c6:	08 95       	ret

000010c8 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj>:
    }
    RegWrite[i]=RegIni[i];

  }
}
void ADF5610_Driver::CompleteConfigurationFlow(unsigned int k){
    10c8:	ef 92       	push	r14
    10ca:	ff 92       	push	r15
    10cc:	0f 93       	push	r16
    10ce:	1f 93       	push	r17
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	8c 01       	movw	r16, r24
    10d6:	eb 01       	movw	r28, r22
  for (int i=k; i<20;i++){
    10d8:	c4 31       	cpi	r28, 0x14	; 20
    10da:	d1 05       	cpc	r29, r1
    10dc:	fc f4       	brge	.+62     	; 0x111c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x54>
    if (i==5){
    10de:	c5 30       	cpi	r28, 0x05	; 5
    10e0:	d1 05       	cpc	r29, r1
    10e2:	b1 f4       	brne	.+44     	; 0x1110 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>
    10e4:	0f 2e       	mov	r0, r31
    10e6:	f6 e1       	ldi	r31, 0x16	; 22
    10e8:	ef 2e       	mov	r14, r31
    10ea:	f1 2c       	mov	r15, r1
    10ec:	f0 2d       	mov	r31, r0
      for(int j=22;j>19;j--){
    10ee:	84 e1       	ldi	r24, 0x14	; 20
    10f0:	e8 16       	cp	r14, r24
    10f2:	f1 04       	cpc	r15, r1
    10f4:	44 f0       	brlt	.+16     	; 0x1106 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x3e>
        WriteRegisters(j);
    10f6:	6e 2d       	mov	r22, r14
    10f8:	c8 01       	movw	r24, r16
    10fa:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
  }
}
void ADF5610_Driver::CompleteConfigurationFlow(unsigned int k){
  for (int i=k; i<20;i++){
    if (i==5){
      for(int j=22;j>19;j--){
    10fe:	81 e0       	ldi	r24, 0x01	; 1
    1100:	e8 1a       	sub	r14, r24
    1102:	f1 08       	sbc	r15, r1
    1104:	f4 cf       	rjmp	.-24     	; 0x10ee <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x26>
        WriteRegisters(j);
       
      }
	   WriteRegisters(5);
    1106:	65 e0       	ldi	r22, 0x05	; 5
    1108:	c8 01       	movw	r24, r16
    110a:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
    110e:	04 c0       	rjmp	.+8      	; 0x1118 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x50>

    }else if((i!=4)|(i!=3)){
      WriteRegisters(i);
    1110:	6c 2f       	mov	r22, r28
    1112:	c8 01       	movw	r24, r16
    1114:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
    RegWrite[i]=RegIni[i];

  }
}
void ADF5610_Driver::CompleteConfigurationFlow(unsigned int k){
  for (int i=k; i<20;i++){
    1118:	21 96       	adiw	r28, 0x01	; 1
    111a:	de cf       	rjmp	.-68     	; 0x10d8 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x10>

    }else if((i!=4)|(i!=3)){
      WriteRegisters(i);
    }
  }
  WriteRegisters(3);
    111c:	63 e0       	ldi	r22, 0x03	; 3
    111e:	c8 01       	movw	r24, r16
    1120:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
  WriteRegisters(4);
    1124:	64 e0       	ldi	r22, 0x04	; 4
    1126:	c8 01       	movw	r24, r16
    1128:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>

}
    112c:	df 91       	pop	r29
    112e:	cf 91       	pop	r28
    1130:	1f 91       	pop	r17
    1132:	0f 91       	pop	r16
    1134:	ff 90       	pop	r15
    1136:	ef 90       	pop	r14
    1138:	08 95       	ret

0000113a <_ZN14ADF5610_Driver7InitPLLEv>:
	 InitPLL();
	// CompleteConfigurationFlow(0);


}
bool  ADF5610_Driver::InitPLL(void){
    113a:	cf 93       	push	r28
    113c:	df 93       	push	r29
    113e:	ec 01       	movw	r28, r24

	do{
		CompleteConfigurationFlow(0);
    1140:	60 e0       	ldi	r22, 0x00	; 0
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	ce 01       	movw	r24, r28
    1146:	0e 94 64 08 	call	0x10c8	; 0x10c8 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj>
		ReadAllRegisters();
    114a:	ce 01       	movw	r24, r28
    114c:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <_ZN14ADF5610_Driver16ReadAllRegistersEv>
		pll_started= bitRead(RegRead[1],1)&(bitRead(RegRead[1],0)==0);
    1150:	4a 89       	ldd	r20, Y+18	; 0x12
    1152:	5b 89       	ldd	r21, Y+19	; 0x13
    1154:	6c 89       	ldd	r22, Y+20	; 0x14
    1156:	7d 89       	ldd	r23, Y+21	; 0x15
    1158:	db 01       	movw	r26, r22
    115a:	ca 01       	movw	r24, r20
    115c:	b6 95       	lsr	r27
    115e:	a7 95       	ror	r26
    1160:	97 95       	ror	r25
    1162:	87 95       	ror	r24
    1164:	fe 01       	movw	r30, r28
    1166:	e8 5b       	subi	r30, 0xB8	; 184
    1168:	fe 4f       	sbci	r31, 0xFE	; 254
    116a:	21 e0       	ldi	r18, 0x01	; 1
    116c:	40 fd       	sbrc	r20, 0
    116e:	20 e0       	ldi	r18, 0x00	; 0
    1170:	82 23       	and	r24, r18
    1172:	80 83       	st	Z, r24
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1174:	88 ee       	ldi	r24, 0xE8	; 232
    1176:	93 e0       	ldi	r25, 0x03	; 3
		while(__ticks)
    1178:	00 97       	sbiw	r24, 0x00	; 0
    117a:	31 f0       	breq	.+12     	; 0x1188 <_ZN14ADF5610_Driver7InitPLLEv+0x4e>
    117c:	e8 e5       	ldi	r30, 0x58	; 88
    117e:	f2 e0       	ldi	r31, 0x02	; 2
    1180:	31 97       	sbiw	r30, 0x01	; 1
    1182:	f1 f7       	brne	.-4      	; 0x1180 <_ZN14ADF5610_Driver7InitPLLEv+0x46>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1184:	01 97       	sbiw	r24, 0x01	; 1
    1186:	f8 cf       	rjmp	.-16     	; 0x1178 <_ZN14ADF5610_Driver7InitPLLEv+0x3e>
		_delay_ms(100);
		
	
	}while((!IsLocked())|((!pll_started)|false));
    1188:	ce 01       	movw	r24, r28
    118a:	0e 94 75 02 	call	0x4ea	; 0x4ea <_ZN14ADF5610_Driver8IsLockedEv>
    118e:	fe 01       	movw	r30, r28
    1190:	e8 5b       	subi	r30, 0xB8	; 184
    1192:	fe 4f       	sbci	r31, 0xFE	; 254
    1194:	20 81       	ld	r18, Z
    1196:	91 e0       	ldi	r25, 0x01	; 1
    1198:	92 27       	eor	r25, r18


}
bool  ADF5610_Driver::InitPLL(void){

	do{
    119a:	98 17       	cp	r25, r24
    119c:	88 f6       	brcc	.-94     	; 0x1140 <_ZN14ADF5610_Driver7InitPLLEv+0x6>
		_delay_ms(100);
		
	
	}while((!IsLocked())|((!pll_started)|false));
	return pll_started;
}
    119e:	82 2f       	mov	r24, r18
    11a0:	df 91       	pop	r29
    11a2:	cf 91       	pop	r28
    11a4:	08 95       	ret

000011a6 <_ZN14ADF5610_Driver4InitEv>:

ADF5610_Driver::~ADF5610_Driver() {
	// TODO Auto-generated destructor stub
}

void ADF5610_Driver::Init(void){
    11a6:	cf 93       	push	r28
    11a8:	df 93       	push	r29
    11aa:	ec 01       	movw	r28, r24
	spi=&staticSPI;
    11ac:	8a ea       	ldi	r24, 0xAA	; 170
    11ae:	90 e4       	ldi	r25, 0x40	; 64
    11b0:	8c 83       	std	Y+4, r24	; 0x04
    11b2:	9d 83       	std	Y+5, r25	; 0x05
//	spi->Init(SPI_ADF5610_BASE,0);

	//spi->SetCS(true);
	spi->Init();
    11b4:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <_ZN13SPI_Syn_Class4InitEv>
	memset(to_send,0,4);
    11b8:	be 01       	movw	r22, r28
    11ba:	6d 5b       	subi	r22, 0xBD	; 189
    11bc:	7e 4f       	sbci	r23, 0xFE	; 254
    11be:	84 e0       	ldi	r24, 0x04	; 4
    11c0:	fb 01       	movw	r30, r22
    11c2:	11 92       	st	Z+, r1
    11c4:	8a 95       	dec	r24
    11c6:	e9 f7       	brne	.-6      	; 0x11c2 <_ZN14ADF5610_Driver4InitEv+0x1c>
	spi->Write(to_send,4);
    11c8:	44 e0       	ldi	r20, 0x04	; 4
    11ca:	8c 81       	ldd	r24, Y+4	; 0x04
    11cc:	9d 81       	ldd	r25, Y+5	; 0x05
    11ce:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <_ZN13SPI_Syn_Class5WriteEPKhh>
	spi->SetCS(true);
    11d2:	61 e0       	ldi	r22, 0x01	; 1
    11d4:	8c 81       	ldd	r24, Y+4	; 0x04
    11d6:	9d 81       	ldd	r25, Y+5	; 0x05
    11d8:	0e 94 01 0b 	call	0x1602	; 0x1602 <_ZN13SPI_Syn_Class5SetCSEb>
	 InitiateRegisters();
    11dc:	ce 01       	movw	r24, r28
    11de:	0e 94 43 03 	call	0x686	; 0x686 <_ZN14ADF5610_Driver17InitiateRegistersEv>
	 InitPLL();
    11e2:	ce 01       	movw	r24, r28
    11e4:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZN14ADF5610_Driver7InitPLLEv>
	// CompleteConfigurationFlow(0);


}
    11e8:	df 91       	pop	r29
    11ea:	cf 91       	pop	r28
    11ec:	08 95       	ret

000011ee <_ZN14ADF5610_Driver11WriteSubVCOEv>:
  WriteRegisters(8);
  WriteSubVCO();
  WriteRegisters(3);
  WriteRegisters(4);
}
void ADF5610_Driver::WriteSubVCO(void){
    11ee:	cf 93       	push	r28
    11f0:	df 93       	push	r29
    11f2:	ec 01       	movw	r28, r24
	WriteRegisters(22);
    11f4:	66 e1       	ldi	r22, 0x16	; 22
    11f6:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
	//WriteRegisters(21);
	WriteRegisters(20);
    11fa:	64 e1       	ldi	r22, 0x14	; 20
    11fc:	ce 01       	movw	r24, r28
    11fe:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
	WriteRegisters(5);
    1202:	65 e0       	ldi	r22, 0x05	; 5
    1204:	ce 01       	movw	r24, r28
    1206:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
}
    120a:	df 91       	pop	r29
    120c:	cf 91       	pop	r28
    120e:	08 95       	ret

00001210 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv>:
  }
  WriteRegisters(3);
  WriteRegisters(4);

}
void ADF5610_Driver::ShortConfigurationFlow(void){
    1210:	cf 93       	push	r28
    1212:	df 93       	push	r29
    1214:	ec 01       	movw	r28, r24
  WriteRegisters(8);
    1216:	68 e0       	ldi	r22, 0x08	; 8
    1218:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
  WriteSubVCO();
    121c:	ce 01       	movw	r24, r28
    121e:	0e 94 f7 08 	call	0x11ee	; 0x11ee <_ZN14ADF5610_Driver11WriteSubVCOEv>
  WriteRegisters(3);
    1222:	63 e0       	ldi	r22, 0x03	; 3
    1224:	ce 01       	movw	r24, r28
    1226:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
  WriteRegisters(4);
    122a:	64 e0       	ldi	r22, 0x04	; 4
    122c:	ce 01       	movw	r24, r28
    122e:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_ZN14ADF5610_Driver14WriteRegistersEh>
}
    1232:	df 91       	pop	r29
    1234:	cf 91       	pop	r28
    1236:	08 95       	ret

00001238 <_ZN14ADF5610_Driver8SelfTestEh>:
   else if (a > b)
      return CalculateGCD(a-b, b);
   else return CalculateGCD(a, b-a);
}

bool	ADF5610_Driver::SelfTest(uint8_t cycles){
    1238:	4f 92       	push	r4
    123a:	5f 92       	push	r5
    123c:	6f 92       	push	r6
    123e:	7f 92       	push	r7
    1240:	8f 92       	push	r8
    1242:	9f 92       	push	r9
    1244:	af 92       	push	r10
    1246:	bf 92       	push	r11
    1248:	df 92       	push	r13
    124a:	ef 92       	push	r14
    124c:	ff 92       	push	r15
    124e:	0f 93       	push	r16
    1250:	1f 93       	push	r17
    1252:	cf 93       	push	r28
    1254:	df 93       	push	r29
    1256:	ec 01       	movw	r28, r24
    1258:	f6 2e       	mov	r15, r22
	dir=1;
    125a:	fc 01       	movw	r30, r24
    125c:	ed 5c       	subi	r30, 0xCD	; 205
    125e:	fe 4f       	sbci	r31, 0xFE	; 254
    1260:	81 e0       	ldi	r24, 0x01	; 1
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	80 83       	st	Z, r24
    1266:	91 83       	std	Z+1, r25	; 0x01
	int errorCounter=0;
    1268:	00 e0       	ldi	r16, 0x00	; 0
    126a:	10 e0       	ldi	r17, 0x00	; 0
	int counter=0;
	while (((lower_limit<=current_frequency)&(current_frequency<=upper_limit))&&(cycles>counter)){
    126c:	6a 85       	ldd	r22, Y+10	; 0x0a
    126e:	7b 85       	ldd	r23, Y+11	; 0x0b
    1270:	8c 85       	ldd	r24, Y+12	; 0x0c
    1272:	9d 85       	ldd	r25, Y+13	; 0x0d
    1274:	88 80       	ld	r8, Y
    1276:	99 80       	ldd	r9, Y+1	; 0x01
    1278:	aa 80       	ldd	r10, Y+2	; 0x02
    127a:	bb 80       	ldd	r11, Y+3	; 0x03
    127c:	4e 80       	ldd	r4, Y+6	; 0x06
    127e:	5f 80       	ldd	r5, Y+7	; 0x07
    1280:	68 84       	ldd	r6, Y+8	; 0x08
    1282:	79 84       	ldd	r7, Y+9	; 0x09
    1284:	ee 24       	eor	r14, r14
    1286:	e3 94       	inc	r14
    1288:	a5 01       	movw	r20, r10
    128a:	94 01       	movw	r18, r8
    128c:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <__cmpsf2>
    1290:	18 16       	cp	r1, r24
    1292:	0c f4       	brge	.+2      	; 0x1296 <_ZN14ADF5610_Driver8SelfTestEh+0x5e>
    1294:	e1 2c       	mov	r14, r1
    1296:	dd 24       	eor	r13, r13
    1298:	d3 94       	inc	r13
    129a:	a3 01       	movw	r20, r6
    129c:	92 01       	movw	r18, r4
    129e:	c5 01       	movw	r24, r10
    12a0:	b4 01       	movw	r22, r8
    12a2:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <__cmpsf2>
    12a6:	18 16       	cp	r1, r24
    12a8:	0c f4       	brge	.+2      	; 0x12ac <_ZN14ADF5610_Driver8SelfTestEh+0x74>
    12aa:	d1 2c       	mov	r13, r1
    12ac:	81 e0       	ldi	r24, 0x01	; 1
    12ae:	8d 25       	eor	r24, r13
    12b0:	8e 15       	cp	r24, r14
    12b2:	08 f0       	brcs	.+2      	; 0x12b6 <_ZN14ADF5610_Driver8SelfTestEh+0x7e>
    12b4:	ec c0       	rjmp	.+472    	; 0x148e <_ZN14ADF5610_Driver8SelfTestEh+0x256>
    12b6:	ff 20       	and	r15, r15
    12b8:	09 f4       	brne	.+2      	; 0x12bc <_ZN14ADF5610_Driver8SelfTestEh+0x84>
    12ba:	ec c0       	rjmp	.+472    	; 0x1494 <_ZN14ADF5610_Driver8SelfTestEh+0x25c>

		 if(IsLocked()){
    12bc:	ce 01       	movw	r24, r28
    12be:	0e 94 75 02 	call	0x4ea	; 0x4ea <_ZN14ADF5610_Driver8IsLockedEv>
    12c2:	e8 2e       	mov	r14, r24
    12c4:	88 23       	and	r24, r24
    12c6:	09 f4       	brne	.+2      	; 0x12ca <_ZN14ADF5610_Driver8SelfTestEh+0x92>
    12c8:	97 c0       	rjmp	.+302    	; 0x13f8 <_ZN14ADF5610_Driver8SelfTestEh+0x1c0>
			 is_locked=true;
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	fe 01       	movw	r30, r28
    12ce:	eb 5c       	subi	r30, 0xCB	; 203
    12d0:	fe 4f       	sbci	r31, 0xFE	; 254
    12d2:	80 83       	st	Z, r24
			 errorCounter=0;
			 current_frequency=target_frequency;
    12d4:	36 97       	sbiw	r30, 0x06	; 6
    12d6:	10 81       	ld	r17, Z
    12d8:	01 81       	ldd	r16, Z+1	; 0x01
    12da:	b2 80       	ldd	r11, Z+2	; 0x02
    12dc:	a3 80       	ldd	r10, Z+3	; 0x03
    12de:	81 2f       	mov	r24, r17
    12e0:	90 2f       	mov	r25, r16
    12e2:	ab 2d       	mov	r26, r11
    12e4:	ba 2d       	mov	r27, r10
    12e6:	88 83       	st	Y, r24
    12e8:	99 83       	std	Y+1, r25	; 0x01
    12ea:	aa 83       	std	Y+2, r26	; 0x02
    12ec:	bb 83       	std	Y+3, r27	; 0x03
			  if ((current_frequency>(upper_limit-step))&&(dir==1)){
    12ee:	6e 81       	ldd	r22, Y+6	; 0x06
    12f0:	7f 81       	ldd	r23, Y+7	; 0x07
    12f2:	88 85       	ldd	r24, Y+8	; 0x08
    12f4:	99 85       	ldd	r25, Y+9	; 0x09
    12f6:	34 97       	sbiw	r30, 0x04	; 4
    12f8:	40 80       	ld	r4, Z
    12fa:	51 80       	ldd	r5, Z+1	; 0x01
    12fc:	62 80       	ldd	r6, Z+2	; 0x02
    12fe:	73 80       	ldd	r7, Z+3	; 0x03
    1300:	a3 01       	movw	r20, r6
    1302:	92 01       	movw	r18, r4
    1304:	0e 94 0b 0b 	call	0x1616	; 0x1616 <__subsf3>
    1308:	9b 01       	movw	r18, r22
    130a:	ac 01       	movw	r20, r24
    130c:	61 2f       	mov	r22, r17
    130e:	70 2f       	mov	r23, r16
    1310:	8b 2d       	mov	r24, r11
    1312:	9a 2d       	mov	r25, r10
    1314:	0e 94 2f 0d 	call	0x1a5e	; 0x1a5e <__gesf2>
    1318:	18 16       	cp	r1, r24
    131a:	64 f4       	brge	.+24     	; 0x1334 <_ZN14ADF5610_Driver8SelfTestEh+0xfc>
    131c:	fe 01       	movw	r30, r28
    131e:	ed 5c       	subi	r30, 0xCD	; 205
    1320:	fe 4f       	sbci	r31, 0xFE	; 254
    1322:	80 81       	ld	r24, Z
    1324:	91 81       	ldd	r25, Z+1	; 0x01
    1326:	01 97       	sbiw	r24, 0x01	; 1
    1328:	29 f4       	brne	.+10     	; 0x1334 <_ZN14ADF5610_Driver8SelfTestEh+0xfc>


				dir=-1;
    132a:	8f ef       	ldi	r24, 0xFF	; 255
    132c:	9f ef       	ldi	r25, 0xFF	; 255
    132e:	80 83       	st	Z, r24
    1330:	91 83       	std	Z+1, r25	; 0x01
    1332:	1d c0       	rjmp	.+58     	; 0x136e <_ZN14ADF5610_Driver8SelfTestEh+0x136>
			  }else if((current_frequency<(lower_limit+step))&&(dir==-1)){
    1334:	2a 85       	ldd	r18, Y+10	; 0x0a
    1336:	3b 85       	ldd	r19, Y+11	; 0x0b
    1338:	4c 85       	ldd	r20, Y+12	; 0x0c
    133a:	5d 85       	ldd	r21, Y+13	; 0x0d
    133c:	c3 01       	movw	r24, r6
    133e:	b2 01       	movw	r22, r4
    1340:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__addsf3>
    1344:	9b 01       	movw	r18, r22
    1346:	ac 01       	movw	r20, r24
    1348:	61 2f       	mov	r22, r17
    134a:	70 2f       	mov	r23, r16
    134c:	8b 2d       	mov	r24, r11
    134e:	9a 2d       	mov	r25, r10
    1350:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <__cmpsf2>
    1354:	88 23       	and	r24, r24
    1356:	5c f4       	brge	.+22     	; 0x136e <_ZN14ADF5610_Driver8SelfTestEh+0x136>
    1358:	fe 01       	movw	r30, r28
    135a:	ed 5c       	subi	r30, 0xCD	; 205
    135c:	fe 4f       	sbci	r31, 0xFE	; 254
    135e:	80 81       	ld	r24, Z
    1360:	91 81       	ldd	r25, Z+1	; 0x01
    1362:	01 96       	adiw	r24, 0x01	; 1
    1364:	21 f4       	brne	.+8      	; 0x136e <_ZN14ADF5610_Driver8SelfTestEh+0x136>

				dir=1;
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	80 83       	st	Z, r24
    136c:	91 83       	std	Z+1, r25	; 0x01
				 Serial.print("Locked at : ");
				 Serial.print(current_frequency);
				 Serial.println(" MHz");
				 #else

			   printf("Current frequence: %lf\n",current_frequency);
    136e:	af 92       	push	r10
    1370:	bf 92       	push	r11
    1372:	0f 93       	push	r16
    1374:	1f 93       	push	r17
    1376:	89 e3       	ldi	r24, 0x39	; 57
    1378:	90 e4       	ldi	r25, 0x40	; 64
    137a:	9f 93       	push	r25
    137c:	8f 93       	push	r24
    137e:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>

			   #endif
				target_frequency=current_frequency+(dir*step);
    1382:	48 80       	ld	r4, Y
    1384:	59 80       	ldd	r5, Y+1	; 0x01
    1386:	6a 80       	ldd	r6, Y+2	; 0x02
    1388:	7b 80       	ldd	r7, Y+3	; 0x03
    138a:	fe 01       	movw	r30, r28
    138c:	ed 5c       	subi	r30, 0xCD	; 205
    138e:	fe 4f       	sbci	r31, 0xFE	; 254
    1390:	60 81       	ld	r22, Z
    1392:	71 81       	ldd	r23, Z+1	; 0x01
    1394:	38 97       	sbiw	r30, 0x08	; 8
    1396:	80 80       	ld	r8, Z
    1398:	91 80       	ldd	r9, Z+1	; 0x01
    139a:	a2 80       	ldd	r10, Z+2	; 0x02
    139c:	b3 80       	ldd	r11, Z+3	; 0x03
    139e:	07 2e       	mov	r0, r23
    13a0:	00 0c       	add	r0, r0
    13a2:	88 0b       	sbc	r24, r24
    13a4:	99 0b       	sbc	r25, r25
    13a6:	0e 94 27 0c 	call	0x184e	; 0x184e <__floatsisf>
    13aa:	a5 01       	movw	r20, r10
    13ac:	94 01       	movw	r18, r8
    13ae:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
    13b2:	9b 01       	movw	r18, r22
    13b4:	ac 01       	movw	r20, r24
    13b6:	c3 01       	movw	r24, r6
    13b8:	b2 01       	movw	r22, r4
    13ba:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__addsf3>
    13be:	fe 01       	movw	r30, r28
    13c0:	e1 5d       	subi	r30, 0xD1	; 209
    13c2:	fe 4f       	sbci	r31, 0xFE	; 254
    13c4:	60 83       	st	Z, r22
    13c6:	71 83       	std	Z+1, r23	; 0x01
    13c8:	82 83       	std	Z+2, r24	; 0x02
    13ca:	93 83       	std	Z+3, r25	; 0x03

				SetNextFrequency();
    13cc:	ce 01       	movw	r24, r28
    13ce:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN14ADF5610_Driver16SetNextFrequencyEv>
				ShortConfigurationFlow();
    13d2:	ce 01       	movw	r24, r28
    13d4:	0e 94 08 09 	call	0x1210	; 0x1210 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv>
				usleep(1000);
    13d8:	48 ee       	ldi	r20, 0xE8	; 232
    13da:	53 e0       	ldi	r21, 0x03	; 3
    13dc:	60 e0       	ldi	r22, 0x00	; 0
    13de:	70 e0       	ldi	r23, 0x00	; 0
    13e0:	ce 01       	movw	r24, r28
    13e2:	0e 94 2c 07 	call	0xe58	; 0xe58 <_ZN14ADF5610_Driver6usleepEl>
    13e6:	0f 90       	pop	r0
    13e8:	0f 90       	pop	r0
    13ea:	0f 90       	pop	r0
    13ec:	0f 90       	pop	r0
    13ee:	0f 90       	pop	r0
    13f0:	0f 90       	pop	r0
	int counter=0;
	while (((lower_limit<=current_frequency)&(current_frequency<=upper_limit))&&(cycles>counter)){

		 if(IsLocked()){
			 is_locked=true;
			 errorCounter=0;
    13f2:	00 e0       	ldi	r16, 0x00	; 0
    13f4:	10 e0       	ldi	r17, 0x00	; 0
    13f6:	46 c0       	rjmp	.+140    	; 0x1484 <_ZN14ADF5610_Driver8SelfTestEh+0x24c>
				ShortConfigurationFlow();
				usleep(1000);


		 }else{
			 errorCounter++;
    13f8:	0f 5f       	subi	r16, 0xFF	; 255
    13fa:	1f 4f       	sbci	r17, 0xFF	; 255
			 if(is_locked){
    13fc:	fe 01       	movw	r30, r28
    13fe:	eb 5c       	subi	r30, 0xCB	; 203
    1400:	fe 4f       	sbci	r31, 0xFE	; 254
    1402:	80 81       	ld	r24, Z
    1404:	88 23       	and	r24, r24
    1406:	29 f1       	breq	.+74     	; 0x1452 <_ZN14ADF5610_Driver8SelfTestEh+0x21a>
				 is_locked=false;
    1408:	10 82       	st	Z, r1
				     Serial.println(" MHz");
				     Serial.println(" ");
				     Serial.println("**************************");
					 #else
				 
				  printf("**************************\n\r");
    140a:	81 e5       	ldi	r24, 0x51	; 81
    140c:	90 e4       	ldi	r25, 0x40	; 64
    140e:	9f 93       	push	r25
    1410:	8f 93       	push	r24
    1412:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
				   printf("Not Locked at:  %lf",target_frequency);
    1416:	fe 01       	movw	r30, r28
    1418:	e1 5d       	subi	r30, 0xD1	; 209
    141a:	fe 4f       	sbci	r31, 0xFE	; 254
    141c:	80 81       	ld	r24, Z
    141e:	91 81       	ldd	r25, Z+1	; 0x01
    1420:	22 81       	ldd	r18, Z+2	; 0x02
    1422:	33 81       	ldd	r19, Z+3	; 0x03
    1424:	3f 93       	push	r19
    1426:	2f 93       	push	r18
    1428:	9f 93       	push	r25
    142a:	8f 93       	push	r24
    142c:	8e e6       	ldi	r24, 0x6E	; 110
    142e:	90 e4       	ldi	r25, 0x40	; 64
    1430:	9f 93       	push	r25
    1432:	8f 93       	push	r24
    1434:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
				   printf(" MHz\n");
    1438:	82 e8       	ldi	r24, 0x82	; 130
    143a:	90 e4       	ldi	r25, 0x40	; 64
    143c:	0e 94 00 16 	call	0x2c00	; 0x2c00 <puts>
				   printf("**************************\n");
    1440:	87 e8       	ldi	r24, 0x87	; 135
    1442:	90 e4       	ldi	r25, 0x40	; 64
    1444:	0e 94 00 16 	call	0x2c00	; 0x2c00 <puts>
    1448:	8d b7       	in	r24, 0x3d	; 61
    144a:	9e b7       	in	r25, 0x3e	; 62
    144c:	08 96       	adiw	r24, 0x08	; 8
    144e:	8d bf       	out	0x3d, r24	; 61
    1450:	9e bf       	out	0x3e, r25	; 62
	
				   #endif
			 }
			//next_frequency=current_frequency;
		   SetNextFrequency();
    1452:	ce 01       	movw	r24, r28
    1454:	0e 94 29 07 	call	0xe52	; 0xe52 <_ZN14ADF5610_Driver16SetNextFrequencyEv>
		    /// Serial.print("Not Locked at:  ");
		  //   Serial.println(current_frequency);
		   CompleteConfigurationFlow(0);
    1458:	60 e0       	ldi	r22, 0x00	; 0
    145a:	70 e0       	ldi	r23, 0x00	; 0
    145c:	ce 01       	movw	r24, r28
    145e:	0e 94 64 08 	call	0x10c8	; 0x10c8 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj>

			for (int var = 1; var < 24; ++var) {
    1462:	81 e0       	ldi	r24, 0x01	; 1
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	88 31       	cpi	r24, 0x18	; 24
    1468:	91 05       	cpc	r25, r1
    146a:	14 f4       	brge	.+4      	; 0x1470 <_ZN14ADF5610_Driver8SelfTestEh+0x238>
    146c:	01 96       	adiw	r24, 0x01	; 1
    146e:	fb cf       	rjmp	.-10     	; 0x1466 <_ZN14ADF5610_Driver8SelfTestEh+0x22e>
			//	ShowRegisters(var);
			}

			usleep(100000);
    1470:	40 ea       	ldi	r20, 0xA0	; 160
    1472:	56 e8       	ldi	r21, 0x86	; 134
    1474:	61 e0       	ldi	r22, 0x01	; 1
    1476:	70 e0       	ldi	r23, 0x00	; 0
    1478:	ce 01       	movw	r24, r28
    147a:	0e 94 2c 07 	call	0xe58	; 0xe58 <_ZN14ADF5610_Driver6usleepEl>
			if(errorCounter>100){
    147e:	05 36       	cpi	r16, 0x65	; 101
    1480:	11 05       	cpc	r17, r1
    1482:	54 f4       	brge	.+20     	; 0x1498 <_ZN14ADF5610_Driver8SelfTestEh+0x260>
    1484:	80 e7       	ldi	r24, 0x70	; 112
    1486:	97 e1       	ldi	r25, 0x17	; 23
    1488:	01 97       	sbiw	r24, 0x01	; 1
    148a:	f1 f7       	brne	.-4      	; 0x1488 <_ZN14ADF5610_Driver8SelfTestEh+0x250>
    148c:	ef ce       	rjmp	.-546    	; 0x126c <_ZN14ADF5610_Driver8SelfTestEh+0x34>


		 }
		 _delay_ms(1);
	}
	return true;
    148e:	ee 24       	eor	r14, r14
    1490:	e3 94       	inc	r14
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <_ZN14ADF5610_Driver8SelfTestEh+0x260>
    1494:	ee 24       	eor	r14, r14
    1496:	e3 94       	inc	r14
}
    1498:	8e 2d       	mov	r24, r14
    149a:	df 91       	pop	r29
    149c:	cf 91       	pop	r28
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	ff 90       	pop	r15
    14a4:	ef 90       	pop	r14
    14a6:	df 90       	pop	r13
    14a8:	bf 90       	pop	r11
    14aa:	af 90       	pop	r10
    14ac:	9f 90       	pop	r9
    14ae:	8f 90       	pop	r8
    14b0:	7f 90       	pop	r7
    14b2:	6f 90       	pop	r6
    14b4:	5f 90       	pop	r5
    14b6:	4f 90       	pop	r4
    14b8:	08 95       	ret

000014ba <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev>:
	else
	{
		_delay_ms(1);
	}
	
}
    14ba:	6f ef       	ldi	r22, 0xFF	; 255
    14bc:	7f ef       	ldi	r23, 0xFF	; 255
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	0e 94 97 01 	call	0x32e	; 0x32e <_Z41__static_initialization_and_destruction_0ii>
    14c6:	08 95       	ret

000014c8 <_GLOBAL__sub_D__ZN14ADF5610_DriverC2Ev>:
    14c8:	6f ef       	ldi	r22, 0xFF	; 255
    14ca:	7f ef       	ldi	r23, 0xFF	; 255
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	0e 94 97 01 	call	0x32e	; 0x32e <_Z41__static_initialization_and_destruction_0ii>
    14d4:	08 95       	ret

000014d6 <_Z41__static_initialization_and_destruction_0ii>:
	while (1) {
		adf.SelfTest(1);
		_delay_ms(1000);
		adf.Init();
	}
}
    14d6:	0f 93       	push	r16
    14d8:	1f 93       	push	r17
    14da:	cf 93       	push	r28
    14dc:	df 93       	push	r29
    14de:	ec 01       	movw	r28, r24
    14e0:	8b 01       	movw	r16, r22
    14e2:	01 97       	sbiw	r24, 0x01	; 1
    14e4:	39 f4       	brne	.+14     	; 0x14f4 <_Z41__static_initialization_and_destruction_0ii+0x1e>
    14e6:	6f 3f       	cpi	r22, 0xFF	; 255
    14e8:	7f 4f       	sbci	r23, 0xFF	; 255
    14ea:	21 f4       	brne	.+8      	; 0x14f4 <_Z41__static_initialization_and_destruction_0ii+0x1e>


#include <atmel_start.h>
#include "util/delay.h"
#include "ADF5610Driver.h"
ADF5610_Driver adf;
    14ec:	8f ea       	ldi	r24, 0xAF	; 175
    14ee:	90 e4       	ldi	r25, 0x40	; 64
    14f0:	0e 94 b4 01 	call	0x368	; 0x368 <_ZN14ADF5610_DriverC1Ev>
    14f4:	cd 2b       	or	r28, r29
    14f6:	39 f4       	brne	.+14     	; 0x1506 <_Z41__static_initialization_and_destruction_0ii+0x30>
    14f8:	0f 3f       	cpi	r16, 0xFF	; 255
    14fa:	1f 4f       	sbci	r17, 0xFF	; 255
    14fc:	21 f4       	brne	.+8      	; 0x1506 <_Z41__static_initialization_and_destruction_0ii+0x30>
    14fe:	8f ea       	ldi	r24, 0xAF	; 175
    1500:	90 e4       	ldi	r25, 0x40	; 64
    1502:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <_ZN14ADF5610_DriverD1Ev>
	while (1) {
		adf.SelfTest(1);
		_delay_ms(1000);
		adf.Init();
	}
}
    1506:	df 91       	pop	r29
    1508:	cf 91       	pop	r28
    150a:	1f 91       	pop	r17
    150c:	0f 91       	pop	r16
    150e:	08 95       	ret

00001510 <_Z10RTC_enablev>:
#include "ADF5610Driver.h"
ADF5610_Driver adf;
void RTC_enable(void)
{
	// Wait for RTC CTRLA to be unsynchronized
	while (RTC.STATUS & RTC_CTRLABUSY_bm) {
    1510:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
    1514:	80 fd       	sbrc	r24, 0
    1516:	fc cf       	rjmp	.-8      	; 0x1510 <_Z10RTC_enablev>
	}

	// Enable RTC
	RTC.CTRLA |= RTC_RTCEN_bm;
    1518:	e0 e4       	ldi	r30, 0x40	; 64
    151a:	f1 e0       	ldi	r31, 0x01	; 1
    151c:	80 81       	ld	r24, Z
    151e:	81 60       	ori	r24, 0x01	; 1
    1520:	80 83       	st	Z, r24
    1522:	08 95       	ret

00001524 <__vector_5>:
}

ISR(RTC_CNT_vect)
{
    1524:	1f 92       	push	r1
    1526:	0f 92       	push	r0
    1528:	0f b6       	in	r0, 0x3f	; 63
    152a:	0f 92       	push	r0
    152c:	11 24       	eor	r1, r1
    152e:	8f 93       	push	r24
 *
 * \param[in] pin       The pin number within port
 */
static inline void PORTB_toggle_pin_level(const uint8_t pin)
{
	VPORTB.IN |= 1 << pin;
    1530:	86 b1       	in	r24, 0x06	; 6
    1532:	88 60       	ori	r24, 0x08	; 8
    1534:	86 b9       	out	0x06, r24	; 6
	/* Toggle LED0 */
	LED0_toggle_level();

	/* Overflow interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_OVF_bm;
    1536:	81 e0       	ldi	r24, 0x01	; 1
    1538:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x7e0143>
}
    153c:	8f 91       	pop	r24
    153e:	0f 90       	pop	r0
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	0f 90       	pop	r0
    1544:	1f 90       	pop	r1
    1546:	18 95       	reti

00001548 <main>:
int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    1548:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <atmel_start_init>
	RTC_enable();
    154c:	0e 94 88 0a 	call	0x1510	; 0x1510 <_Z10RTC_enablev>
	ENABLE_INTERRUPTS();
    1550:	78 94       	sei
	printf("hello\n\r");
    1552:	82 ea       	ldi	r24, 0xA2	; 162
    1554:	90 e4       	ldi	r25, 0x40	; 64
    1556:	9f 93       	push	r25
    1558:	8f 93       	push	r24
    155a:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <printf>
	adf.Init();
    155e:	8f ea       	ldi	r24, 0xAF	; 175
    1560:	90 e4       	ldi	r25, 0x40	; 64
    1562:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <_ZN14ADF5610_Driver4InitEv>
    1566:	0f 90       	pop	r0
    1568:	0f 90       	pop	r0
	/* Replace with your application code */
	while (1) {
		adf.SelfTest(1);
    156a:	61 e0       	ldi	r22, 0x01	; 1
    156c:	8f ea       	ldi	r24, 0xAF	; 175
    156e:	90 e4       	ldi	r25, 0x40	; 64
    1570:	0e 94 1c 09 	call	0x1238	; 0x1238 <_ZN14ADF5610_Driver8SelfTestEh>
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1574:	80 e1       	ldi	r24, 0x10	; 16
    1576:	97 e2       	ldi	r25, 0x27	; 39
		while(__ticks)
    1578:	00 97       	sbiw	r24, 0x00	; 0
    157a:	31 f0       	breq	.+12     	; 0x1588 <main+0x40>
    157c:	e8 e5       	ldi	r30, 0x58	; 88
    157e:	f2 e0       	ldi	r31, 0x02	; 2
    1580:	31 97       	sbiw	r30, 0x01	; 1
    1582:	f1 f7       	brne	.-4      	; 0x1580 <main+0x38>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1584:	01 97       	sbiw	r24, 0x01	; 1
    1586:	f8 cf       	rjmp	.-16     	; 0x1578 <main+0x30>
		_delay_ms(1000);
		adf.Init();
    1588:	8f ea       	ldi	r24, 0xAF	; 175
    158a:	90 e4       	ldi	r25, 0x40	; 64
    158c:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <_ZN14ADF5610_Driver4InitEv>
	RTC_enable();
	ENABLE_INTERRUPTS();
	printf("hello\n\r");
	adf.Init();
	/* Replace with your application code */
	while (1) {
    1590:	ec cf       	rjmp	.-40     	; 0x156a <main+0x22>

00001592 <_GLOBAL__sub_I_adf>:
		adf.SelfTest(1);
		_delay_ms(1000);
		adf.Init();
	}
}
    1592:	6f ef       	ldi	r22, 0xFF	; 255
    1594:	7f ef       	ldi	r23, 0xFF	; 255
    1596:	81 e0       	ldi	r24, 0x01	; 1
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <_Z41__static_initialization_and_destruction_0ii>
    159e:	08 95       	ret

000015a0 <_GLOBAL__sub_D_adf>:
    15a0:	6f ef       	ldi	r22, 0xFF	; 255
    15a2:	7f ef       	ldi	r23, 0xFF	; 255
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <_Z41__static_initialization_and_destruction_0ii>
    15ac:	08 95       	ret

000015ae <_ZN13SPI_Syn_ClassC1Ev>:

	
	return n;
}
void SPI_Syn_Class::Disable(void){
	SPI_ADF_disable();
    15ae:	80 93 14 42 	sts	0x4214, r24	; 0x804214 <ptrSPISync>
    15b2:	90 93 15 42 	sts	0x4215, r25	; 0x804215 <ptrSPISync+0x1>
    15b6:	08 95       	ret

000015b8 <_ZN13SPI_Syn_ClassD1Ev>:
    15b8:	08 95       	ret

000015ba <_ZN13SPI_Syn_Class6EnableEv>:
    15ba:	0e 94 25 10 	call	0x204a	; 0x204a <SPI_ADF_enable>
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	08 95       	ret

000015c2 <_ZN13SPI_Syn_Class4InitEv>:
    15c2:	cf 93       	push	r28
    15c4:	df 93       	push	r29
    15c6:	ec 01       	movw	r28, r24
    15c8:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <_ZN13SPI_Syn_Class6EnableEv>
    15cc:	81 e0       	ldi	r24, 0x01	; 1
    15ce:	88 83       	st	Y, r24
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	08 95       	ret

000015d6 <_ZN13SPI_Syn_Class5WriteEPKhh>:
    15d6:	cf 93       	push	r28
    15d8:	fc 01       	movw	r30, r24
    15da:	cb 01       	movw	r24, r22
    15dc:	c4 2f       	mov	r28, r20
    15de:	10 82       	st	Z, r1
    15e0:	64 2f       	mov	r22, r20
    15e2:	0e 94 2b 10 	call	0x2056	; 0x2056 <SPI_ADF_write_block>
    15e6:	8c 2f       	mov	r24, r28
    15e8:	cf 91       	pop	r28
    15ea:	08 95       	ret

000015ec <_ZN13SPI_Syn_Class4ReadEPhh>:
    15ec:	cf 93       	push	r28
    15ee:	fc 01       	movw	r30, r24
    15f0:	cb 01       	movw	r24, r22
    15f2:	c4 2f       	mov	r28, r20
    15f4:	10 82       	st	Z, r1
    15f6:	64 2f       	mov	r22, r20
    15f8:	0e 94 3b 10 	call	0x2076	; 0x2076 <SPI_ADF_read_block>
    15fc:	8c 2f       	mov	r24, r28
    15fe:	cf 91       	pop	r28
    1600:	08 95       	ret

00001602 <_ZN13SPI_Syn_Class5SetCSEb>:
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
    1602:	66 23       	and	r22, r22
    1604:	21 f0       	breq	.+8      	; 0x160e <_ZN13SPI_Syn_Class5SetCSEb+0xc>
		VPORTA.OUT |= (1 << pin);
    1606:	81 b1       	in	r24, 0x01	; 1
    1608:	80 68       	ori	r24, 0x80	; 128
    160a:	81 b9       	out	0x01, r24	; 1
    160c:	08 95       	ret
	} else {
		VPORTA.OUT &= ~(1 << pin);
    160e:	81 b1       	in	r24, 0x01	; 1
    1610:	8f 77       	andi	r24, 0x7F	; 127
    1612:	81 b9       	out	0x01, r24	; 1
    1614:	08 95       	ret

00001616 <__subsf3>:
    1616:	50 58       	subi	r21, 0x80	; 128

00001618 <__addsf3>:
    1618:	bb 27       	eor	r27, r27
    161a:	aa 27       	eor	r26, r26
    161c:	0e 94 23 0b 	call	0x1646	; 0x1646 <__addsf3x>
    1620:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__fp_round>
    1624:	0e 94 cf 0c 	call	0x199e	; 0x199e <__fp_pscA>
    1628:	38 f0       	brcs	.+14     	; 0x1638 <__addsf3+0x20>
    162a:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__fp_pscB>
    162e:	20 f0       	brcs	.+8      	; 0x1638 <__addsf3+0x20>
    1630:	39 f4       	brne	.+14     	; 0x1640 <__addsf3+0x28>
    1632:	9f 3f       	cpi	r25, 0xFF	; 255
    1634:	19 f4       	brne	.+6      	; 0x163c <__addsf3+0x24>
    1636:	26 f4       	brtc	.+8      	; 0x1640 <__addsf3+0x28>
    1638:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_nan>
    163c:	0e f4       	brtc	.+2      	; 0x1640 <__addsf3+0x28>
    163e:	e0 95       	com	r30
    1640:	e7 fb       	bst	r30, 7
    1642:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>

00001646 <__addsf3x>:
    1646:	e9 2f       	mov	r30, r25
    1648:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fp_split3>
    164c:	58 f3       	brcs	.-42     	; 0x1624 <__addsf3+0xc>
    164e:	ba 17       	cp	r27, r26
    1650:	62 07       	cpc	r22, r18
    1652:	73 07       	cpc	r23, r19
    1654:	84 07       	cpc	r24, r20
    1656:	95 07       	cpc	r25, r21
    1658:	20 f0       	brcs	.+8      	; 0x1662 <__addsf3x+0x1c>
    165a:	79 f4       	brne	.+30     	; 0x167a <__addsf3x+0x34>
    165c:	a6 f5       	brtc	.+104    	; 0x16c6 <__addsf3x+0x80>
    165e:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_zero>
    1662:	0e f4       	brtc	.+2      	; 0x1666 <__addsf3x+0x20>
    1664:	e0 95       	com	r30
    1666:	0b 2e       	mov	r0, r27
    1668:	ba 2f       	mov	r27, r26
    166a:	a0 2d       	mov	r26, r0
    166c:	0b 01       	movw	r0, r22
    166e:	b9 01       	movw	r22, r18
    1670:	90 01       	movw	r18, r0
    1672:	0c 01       	movw	r0, r24
    1674:	ca 01       	movw	r24, r20
    1676:	a0 01       	movw	r20, r0
    1678:	11 24       	eor	r1, r1
    167a:	ff 27       	eor	r31, r31
    167c:	59 1b       	sub	r21, r25
    167e:	99 f0       	breq	.+38     	; 0x16a6 <__addsf3x+0x60>
    1680:	59 3f       	cpi	r21, 0xF9	; 249
    1682:	50 f4       	brcc	.+20     	; 0x1698 <__addsf3x+0x52>
    1684:	50 3e       	cpi	r21, 0xE0	; 224
    1686:	68 f1       	brcs	.+90     	; 0x16e2 <__addsf3x+0x9c>
    1688:	1a 16       	cp	r1, r26
    168a:	f0 40       	sbci	r31, 0x00	; 0
    168c:	a2 2f       	mov	r26, r18
    168e:	23 2f       	mov	r18, r19
    1690:	34 2f       	mov	r19, r20
    1692:	44 27       	eor	r20, r20
    1694:	58 5f       	subi	r21, 0xF8	; 248
    1696:	f3 cf       	rjmp	.-26     	; 0x167e <__addsf3x+0x38>
    1698:	46 95       	lsr	r20
    169a:	37 95       	ror	r19
    169c:	27 95       	ror	r18
    169e:	a7 95       	ror	r26
    16a0:	f0 40       	sbci	r31, 0x00	; 0
    16a2:	53 95       	inc	r21
    16a4:	c9 f7       	brne	.-14     	; 0x1698 <__addsf3x+0x52>
    16a6:	7e f4       	brtc	.+30     	; 0x16c6 <__addsf3x+0x80>
    16a8:	1f 16       	cp	r1, r31
    16aa:	ba 0b       	sbc	r27, r26
    16ac:	62 0b       	sbc	r22, r18
    16ae:	73 0b       	sbc	r23, r19
    16b0:	84 0b       	sbc	r24, r20
    16b2:	ba f0       	brmi	.+46     	; 0x16e2 <__addsf3x+0x9c>
    16b4:	91 50       	subi	r25, 0x01	; 1
    16b6:	a1 f0       	breq	.+40     	; 0x16e0 <__addsf3x+0x9a>
    16b8:	ff 0f       	add	r31, r31
    16ba:	bb 1f       	adc	r27, r27
    16bc:	66 1f       	adc	r22, r22
    16be:	77 1f       	adc	r23, r23
    16c0:	88 1f       	adc	r24, r24
    16c2:	c2 f7       	brpl	.-16     	; 0x16b4 <__addsf3x+0x6e>
    16c4:	0e c0       	rjmp	.+28     	; 0x16e2 <__addsf3x+0x9c>
    16c6:	ba 0f       	add	r27, r26
    16c8:	62 1f       	adc	r22, r18
    16ca:	73 1f       	adc	r23, r19
    16cc:	84 1f       	adc	r24, r20
    16ce:	48 f4       	brcc	.+18     	; 0x16e2 <__addsf3x+0x9c>
    16d0:	87 95       	ror	r24
    16d2:	77 95       	ror	r23
    16d4:	67 95       	ror	r22
    16d6:	b7 95       	ror	r27
    16d8:	f7 95       	ror	r31
    16da:	9e 3f       	cpi	r25, 0xFE	; 254
    16dc:	08 f0       	brcs	.+2      	; 0x16e0 <__addsf3x+0x9a>
    16de:	b0 cf       	rjmp	.-160    	; 0x1640 <__addsf3+0x28>
    16e0:	93 95       	inc	r25
    16e2:	88 0f       	add	r24, r24
    16e4:	08 f0       	brcs	.+2      	; 0x16e8 <__addsf3x+0xa2>
    16e6:	99 27       	eor	r25, r25
    16e8:	ee 0f       	add	r30, r30
    16ea:	97 95       	ror	r25
    16ec:	87 95       	ror	r24
    16ee:	08 95       	ret

000016f0 <__cmpsf2>:
    16f0:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__fp_cmp>
    16f4:	08 f4       	brcc	.+2      	; 0x16f8 <__cmpsf2+0x8>
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	08 95       	ret

000016fa <__divsf3>:
    16fa:	0e 94 91 0b 	call	0x1722	; 0x1722 <__divsf3x>
    16fe:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__fp_round>
    1702:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__fp_pscB>
    1706:	58 f0       	brcs	.+22     	; 0x171e <__divsf3+0x24>
    1708:	0e 94 cf 0c 	call	0x199e	; 0x199e <__fp_pscA>
    170c:	40 f0       	brcs	.+16     	; 0x171e <__divsf3+0x24>
    170e:	29 f4       	brne	.+10     	; 0x171a <__divsf3+0x20>
    1710:	5f 3f       	cpi	r21, 0xFF	; 255
    1712:	29 f0       	breq	.+10     	; 0x171e <__divsf3+0x24>
    1714:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>
    1718:	51 11       	cpse	r21, r1
    171a:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__fp_szero>
    171e:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_nan>

00001722 <__divsf3x>:
    1722:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fp_split3>
    1726:	68 f3       	brcs	.-38     	; 0x1702 <__divsf3+0x8>

00001728 <__divsf3_pse>:
    1728:	99 23       	and	r25, r25
    172a:	b1 f3       	breq	.-20     	; 0x1718 <__divsf3+0x1e>
    172c:	55 23       	and	r21, r21
    172e:	91 f3       	breq	.-28     	; 0x1714 <__divsf3+0x1a>
    1730:	95 1b       	sub	r25, r21
    1732:	55 0b       	sbc	r21, r21
    1734:	bb 27       	eor	r27, r27
    1736:	aa 27       	eor	r26, r26
    1738:	62 17       	cp	r22, r18
    173a:	73 07       	cpc	r23, r19
    173c:	84 07       	cpc	r24, r20
    173e:	38 f0       	brcs	.+14     	; 0x174e <__divsf3_pse+0x26>
    1740:	9f 5f       	subi	r25, 0xFF	; 255
    1742:	5f 4f       	sbci	r21, 0xFF	; 255
    1744:	22 0f       	add	r18, r18
    1746:	33 1f       	adc	r19, r19
    1748:	44 1f       	adc	r20, r20
    174a:	aa 1f       	adc	r26, r26
    174c:	a9 f3       	breq	.-22     	; 0x1738 <__divsf3_pse+0x10>
    174e:	35 d0       	rcall	.+106    	; 0x17ba <__divsf3_pse+0x92>
    1750:	0e 2e       	mov	r0, r30
    1752:	3a f0       	brmi	.+14     	; 0x1762 <__divsf3_pse+0x3a>
    1754:	e0 e8       	ldi	r30, 0x80	; 128
    1756:	32 d0       	rcall	.+100    	; 0x17bc <__divsf3_pse+0x94>
    1758:	91 50       	subi	r25, 0x01	; 1
    175a:	50 40       	sbci	r21, 0x00	; 0
    175c:	e6 95       	lsr	r30
    175e:	00 1c       	adc	r0, r0
    1760:	ca f7       	brpl	.-14     	; 0x1754 <__divsf3_pse+0x2c>
    1762:	2b d0       	rcall	.+86     	; 0x17ba <__divsf3_pse+0x92>
    1764:	fe 2f       	mov	r31, r30
    1766:	29 d0       	rcall	.+82     	; 0x17ba <__divsf3_pse+0x92>
    1768:	66 0f       	add	r22, r22
    176a:	77 1f       	adc	r23, r23
    176c:	88 1f       	adc	r24, r24
    176e:	bb 1f       	adc	r27, r27
    1770:	26 17       	cp	r18, r22
    1772:	37 07       	cpc	r19, r23
    1774:	48 07       	cpc	r20, r24
    1776:	ab 07       	cpc	r26, r27
    1778:	b0 e8       	ldi	r27, 0x80	; 128
    177a:	09 f0       	breq	.+2      	; 0x177e <__divsf3_pse+0x56>
    177c:	bb 0b       	sbc	r27, r27
    177e:	80 2d       	mov	r24, r0
    1780:	bf 01       	movw	r22, r30
    1782:	ff 27       	eor	r31, r31
    1784:	93 58       	subi	r25, 0x83	; 131
    1786:	5f 4f       	sbci	r21, 0xFF	; 255
    1788:	3a f0       	brmi	.+14     	; 0x1798 <__divsf3_pse+0x70>
    178a:	9e 3f       	cpi	r25, 0xFE	; 254
    178c:	51 05       	cpc	r21, r1
    178e:	78 f0       	brcs	.+30     	; 0x17ae <__divsf3_pse+0x86>
    1790:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>
    1794:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__fp_szero>
    1798:	5f 3f       	cpi	r21, 0xFF	; 255
    179a:	e4 f3       	brlt	.-8      	; 0x1794 <__divsf3_pse+0x6c>
    179c:	98 3e       	cpi	r25, 0xE8	; 232
    179e:	d4 f3       	brlt	.-12     	; 0x1794 <__divsf3_pse+0x6c>
    17a0:	86 95       	lsr	r24
    17a2:	77 95       	ror	r23
    17a4:	67 95       	ror	r22
    17a6:	b7 95       	ror	r27
    17a8:	f7 95       	ror	r31
    17aa:	9f 5f       	subi	r25, 0xFF	; 255
    17ac:	c9 f7       	brne	.-14     	; 0x17a0 <__divsf3_pse+0x78>
    17ae:	88 0f       	add	r24, r24
    17b0:	91 1d       	adc	r25, r1
    17b2:	96 95       	lsr	r25
    17b4:	87 95       	ror	r24
    17b6:	97 f9       	bld	r25, 7
    17b8:	08 95       	ret
    17ba:	e1 e0       	ldi	r30, 0x01	; 1
    17bc:	66 0f       	add	r22, r22
    17be:	77 1f       	adc	r23, r23
    17c0:	88 1f       	adc	r24, r24
    17c2:	bb 1f       	adc	r27, r27
    17c4:	62 17       	cp	r22, r18
    17c6:	73 07       	cpc	r23, r19
    17c8:	84 07       	cpc	r24, r20
    17ca:	ba 07       	cpc	r27, r26
    17cc:	20 f0       	brcs	.+8      	; 0x17d6 <__divsf3_pse+0xae>
    17ce:	62 1b       	sub	r22, r18
    17d0:	73 0b       	sbc	r23, r19
    17d2:	84 0b       	sbc	r24, r20
    17d4:	ba 0b       	sbc	r27, r26
    17d6:	ee 1f       	adc	r30, r30
    17d8:	88 f7       	brcc	.-30     	; 0x17bc <__divsf3_pse+0x94>
    17da:	e0 95       	com	r30
    17dc:	08 95       	ret

000017de <__fixsfsi>:
    17de:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <__fixunssfsi>
    17e2:	68 94       	set
    17e4:	b1 11       	cpse	r27, r1
    17e6:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__fp_szero>
    17ea:	08 95       	ret

000017ec <__fixunssfsi>:
    17ec:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <__fp_splitA>
    17f0:	88 f0       	brcs	.+34     	; 0x1814 <__fixunssfsi+0x28>
    17f2:	9f 57       	subi	r25, 0x7F	; 127
    17f4:	98 f0       	brcs	.+38     	; 0x181c <__fixunssfsi+0x30>
    17f6:	b9 2f       	mov	r27, r25
    17f8:	99 27       	eor	r25, r25
    17fa:	b7 51       	subi	r27, 0x17	; 23
    17fc:	b0 f0       	brcs	.+44     	; 0x182a <__fixunssfsi+0x3e>
    17fe:	e1 f0       	breq	.+56     	; 0x1838 <__fixunssfsi+0x4c>
    1800:	66 0f       	add	r22, r22
    1802:	77 1f       	adc	r23, r23
    1804:	88 1f       	adc	r24, r24
    1806:	99 1f       	adc	r25, r25
    1808:	1a f0       	brmi	.+6      	; 0x1810 <__fixunssfsi+0x24>
    180a:	ba 95       	dec	r27
    180c:	c9 f7       	brne	.-14     	; 0x1800 <__fixunssfsi+0x14>
    180e:	14 c0       	rjmp	.+40     	; 0x1838 <__fixunssfsi+0x4c>
    1810:	b1 30       	cpi	r27, 0x01	; 1
    1812:	91 f0       	breq	.+36     	; 0x1838 <__fixunssfsi+0x4c>
    1814:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <__fp_zero>
    1818:	b1 e0       	ldi	r27, 0x01	; 1
    181a:	08 95       	ret
    181c:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_zero>
    1820:	67 2f       	mov	r22, r23
    1822:	78 2f       	mov	r23, r24
    1824:	88 27       	eor	r24, r24
    1826:	b8 5f       	subi	r27, 0xF8	; 248
    1828:	39 f0       	breq	.+14     	; 0x1838 <__fixunssfsi+0x4c>
    182a:	b9 3f       	cpi	r27, 0xF9	; 249
    182c:	cc f3       	brlt	.-14     	; 0x1820 <__fixunssfsi+0x34>
    182e:	86 95       	lsr	r24
    1830:	77 95       	ror	r23
    1832:	67 95       	ror	r22
    1834:	b3 95       	inc	r27
    1836:	d9 f7       	brne	.-10     	; 0x182e <__fixunssfsi+0x42>
    1838:	3e f4       	brtc	.+14     	; 0x1848 <__fixunssfsi+0x5c>
    183a:	90 95       	com	r25
    183c:	80 95       	com	r24
    183e:	70 95       	com	r23
    1840:	61 95       	neg	r22
    1842:	7f 4f       	sbci	r23, 0xFF	; 255
    1844:	8f 4f       	sbci	r24, 0xFF	; 255
    1846:	9f 4f       	sbci	r25, 0xFF	; 255
    1848:	08 95       	ret

0000184a <__floatunsisf>:
    184a:	e8 94       	clt
    184c:	09 c0       	rjmp	.+18     	; 0x1860 <__floatsisf+0x12>

0000184e <__floatsisf>:
    184e:	97 fb       	bst	r25, 7
    1850:	3e f4       	brtc	.+14     	; 0x1860 <__floatsisf+0x12>
    1852:	90 95       	com	r25
    1854:	80 95       	com	r24
    1856:	70 95       	com	r23
    1858:	61 95       	neg	r22
    185a:	7f 4f       	sbci	r23, 0xFF	; 255
    185c:	8f 4f       	sbci	r24, 0xFF	; 255
    185e:	9f 4f       	sbci	r25, 0xFF	; 255
    1860:	99 23       	and	r25, r25
    1862:	a9 f0       	breq	.+42     	; 0x188e <__floatsisf+0x40>
    1864:	f9 2f       	mov	r31, r25
    1866:	96 e9       	ldi	r25, 0x96	; 150
    1868:	bb 27       	eor	r27, r27
    186a:	93 95       	inc	r25
    186c:	f6 95       	lsr	r31
    186e:	87 95       	ror	r24
    1870:	77 95       	ror	r23
    1872:	67 95       	ror	r22
    1874:	b7 95       	ror	r27
    1876:	f1 11       	cpse	r31, r1
    1878:	f8 cf       	rjmp	.-16     	; 0x186a <__floatsisf+0x1c>
    187a:	fa f4       	brpl	.+62     	; 0x18ba <__floatsisf+0x6c>
    187c:	bb 0f       	add	r27, r27
    187e:	11 f4       	brne	.+4      	; 0x1884 <__floatsisf+0x36>
    1880:	60 ff       	sbrs	r22, 0
    1882:	1b c0       	rjmp	.+54     	; 0x18ba <__floatsisf+0x6c>
    1884:	6f 5f       	subi	r22, 0xFF	; 255
    1886:	7f 4f       	sbci	r23, 0xFF	; 255
    1888:	8f 4f       	sbci	r24, 0xFF	; 255
    188a:	9f 4f       	sbci	r25, 0xFF	; 255
    188c:	16 c0       	rjmp	.+44     	; 0x18ba <__floatsisf+0x6c>
    188e:	88 23       	and	r24, r24
    1890:	11 f0       	breq	.+4      	; 0x1896 <__floatsisf+0x48>
    1892:	96 e9       	ldi	r25, 0x96	; 150
    1894:	11 c0       	rjmp	.+34     	; 0x18b8 <__floatsisf+0x6a>
    1896:	77 23       	and	r23, r23
    1898:	21 f0       	breq	.+8      	; 0x18a2 <__floatsisf+0x54>
    189a:	9e e8       	ldi	r25, 0x8E	; 142
    189c:	87 2f       	mov	r24, r23
    189e:	76 2f       	mov	r23, r22
    18a0:	05 c0       	rjmp	.+10     	; 0x18ac <__floatsisf+0x5e>
    18a2:	66 23       	and	r22, r22
    18a4:	71 f0       	breq	.+28     	; 0x18c2 <__floatsisf+0x74>
    18a6:	96 e8       	ldi	r25, 0x86	; 134
    18a8:	86 2f       	mov	r24, r22
    18aa:	70 e0       	ldi	r23, 0x00	; 0
    18ac:	60 e0       	ldi	r22, 0x00	; 0
    18ae:	2a f0       	brmi	.+10     	; 0x18ba <__floatsisf+0x6c>
    18b0:	9a 95       	dec	r25
    18b2:	66 0f       	add	r22, r22
    18b4:	77 1f       	adc	r23, r23
    18b6:	88 1f       	adc	r24, r24
    18b8:	da f7       	brpl	.-10     	; 0x18b0 <__floatsisf+0x62>
    18ba:	88 0f       	add	r24, r24
    18bc:	96 95       	lsr	r25
    18be:	87 95       	ror	r24
    18c0:	97 f9       	bld	r25, 7
    18c2:	08 95       	ret

000018c4 <floor>:
    18c4:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__fp_trunc>
    18c8:	90 f0       	brcs	.+36     	; 0x18ee <floor+0x2a>
    18ca:	9f 37       	cpi	r25, 0x7F	; 127
    18cc:	48 f4       	brcc	.+18     	; 0x18e0 <floor+0x1c>
    18ce:	91 11       	cpse	r25, r1
    18d0:	16 f0       	brts	.+4      	; 0x18d6 <floor+0x12>
    18d2:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__fp_szero>
    18d6:	60 e0       	ldi	r22, 0x00	; 0
    18d8:	70 e0       	ldi	r23, 0x00	; 0
    18da:	80 e8       	ldi	r24, 0x80	; 128
    18dc:	9f eb       	ldi	r25, 0xBF	; 191
    18de:	08 95       	ret
    18e0:	26 f4       	brtc	.+8      	; 0x18ea <floor+0x26>
    18e2:	1b 16       	cp	r1, r27
    18e4:	61 1d       	adc	r22, r1
    18e6:	71 1d       	adc	r23, r1
    18e8:	81 1d       	adc	r24, r1
    18ea:	0c 94 a3 0c 	jmp	0x1946	; 0x1946 <__fp_mintl>
    18ee:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__fp_mpack>

000018f2 <__fp_cmp>:
    18f2:	99 0f       	add	r25, r25
    18f4:	00 08       	sbc	r0, r0
    18f6:	55 0f       	add	r21, r21
    18f8:	aa 0b       	sbc	r26, r26
    18fa:	e0 e8       	ldi	r30, 0x80	; 128
    18fc:	fe ef       	ldi	r31, 0xFE	; 254
    18fe:	16 16       	cp	r1, r22
    1900:	17 06       	cpc	r1, r23
    1902:	e8 07       	cpc	r30, r24
    1904:	f9 07       	cpc	r31, r25
    1906:	c0 f0       	brcs	.+48     	; 0x1938 <__fp_cmp+0x46>
    1908:	12 16       	cp	r1, r18
    190a:	13 06       	cpc	r1, r19
    190c:	e4 07       	cpc	r30, r20
    190e:	f5 07       	cpc	r31, r21
    1910:	98 f0       	brcs	.+38     	; 0x1938 <__fp_cmp+0x46>
    1912:	62 1b       	sub	r22, r18
    1914:	73 0b       	sbc	r23, r19
    1916:	84 0b       	sbc	r24, r20
    1918:	95 0b       	sbc	r25, r21
    191a:	39 f4       	brne	.+14     	; 0x192a <__fp_cmp+0x38>
    191c:	0a 26       	eor	r0, r26
    191e:	61 f0       	breq	.+24     	; 0x1938 <__fp_cmp+0x46>
    1920:	23 2b       	or	r18, r19
    1922:	24 2b       	or	r18, r20
    1924:	25 2b       	or	r18, r21
    1926:	21 f4       	brne	.+8      	; 0x1930 <__fp_cmp+0x3e>
    1928:	08 95       	ret
    192a:	0a 26       	eor	r0, r26
    192c:	09 f4       	brne	.+2      	; 0x1930 <__fp_cmp+0x3e>
    192e:	a1 40       	sbci	r26, 0x01	; 1
    1930:	a6 95       	lsr	r26
    1932:	8f ef       	ldi	r24, 0xFF	; 255
    1934:	81 1d       	adc	r24, r1
    1936:	81 1d       	adc	r24, r1
    1938:	08 95       	ret

0000193a <__fp_inf>:
    193a:	97 f9       	bld	r25, 7
    193c:	9f 67       	ori	r25, 0x7F	; 127
    193e:	80 e8       	ldi	r24, 0x80	; 128
    1940:	70 e0       	ldi	r23, 0x00	; 0
    1942:	60 e0       	ldi	r22, 0x00	; 0
    1944:	08 95       	ret

00001946 <__fp_mintl>:
    1946:	88 23       	and	r24, r24
    1948:	71 f4       	brne	.+28     	; 0x1966 <__fp_mintl+0x20>
    194a:	77 23       	and	r23, r23
    194c:	21 f0       	breq	.+8      	; 0x1956 <__fp_mintl+0x10>
    194e:	98 50       	subi	r25, 0x08	; 8
    1950:	87 2b       	or	r24, r23
    1952:	76 2f       	mov	r23, r22
    1954:	07 c0       	rjmp	.+14     	; 0x1964 <__fp_mintl+0x1e>
    1956:	66 23       	and	r22, r22
    1958:	11 f4       	brne	.+4      	; 0x195e <__fp_mintl+0x18>
    195a:	99 27       	eor	r25, r25
    195c:	0d c0       	rjmp	.+26     	; 0x1978 <__fp_mintl+0x32>
    195e:	90 51       	subi	r25, 0x10	; 16
    1960:	86 2b       	or	r24, r22
    1962:	70 e0       	ldi	r23, 0x00	; 0
    1964:	60 e0       	ldi	r22, 0x00	; 0
    1966:	2a f0       	brmi	.+10     	; 0x1972 <__fp_mintl+0x2c>
    1968:	9a 95       	dec	r25
    196a:	66 0f       	add	r22, r22
    196c:	77 1f       	adc	r23, r23
    196e:	88 1f       	adc	r24, r24
    1970:	da f7       	brpl	.-10     	; 0x1968 <__fp_mintl+0x22>
    1972:	88 0f       	add	r24, r24
    1974:	96 95       	lsr	r25
    1976:	87 95       	ror	r24
    1978:	97 f9       	bld	r25, 7
    197a:	08 95       	ret

0000197c <__fp_mpack>:
    197c:	9f 3f       	cpi	r25, 0xFF	; 255
    197e:	31 f0       	breq	.+12     	; 0x198c <__fp_mpack_finite+0xc>

00001980 <__fp_mpack_finite>:
    1980:	91 50       	subi	r25, 0x01	; 1
    1982:	20 f4       	brcc	.+8      	; 0x198c <__fp_mpack_finite+0xc>
    1984:	87 95       	ror	r24
    1986:	77 95       	ror	r23
    1988:	67 95       	ror	r22
    198a:	b7 95       	ror	r27
    198c:	88 0f       	add	r24, r24
    198e:	91 1d       	adc	r25, r1
    1990:	96 95       	lsr	r25
    1992:	87 95       	ror	r24
    1994:	97 f9       	bld	r25, 7
    1996:	08 95       	ret

00001998 <__fp_nan>:
    1998:	9f ef       	ldi	r25, 0xFF	; 255
    199a:	80 ec       	ldi	r24, 0xC0	; 192
    199c:	08 95       	ret

0000199e <__fp_pscA>:
    199e:	00 24       	eor	r0, r0
    19a0:	0a 94       	dec	r0
    19a2:	16 16       	cp	r1, r22
    19a4:	17 06       	cpc	r1, r23
    19a6:	18 06       	cpc	r1, r24
    19a8:	09 06       	cpc	r0, r25
    19aa:	08 95       	ret

000019ac <__fp_pscB>:
    19ac:	00 24       	eor	r0, r0
    19ae:	0a 94       	dec	r0
    19b0:	12 16       	cp	r1, r18
    19b2:	13 06       	cpc	r1, r19
    19b4:	14 06       	cpc	r1, r20
    19b6:	05 06       	cpc	r0, r21
    19b8:	08 95       	ret

000019ba <__fp_round>:
    19ba:	09 2e       	mov	r0, r25
    19bc:	03 94       	inc	r0
    19be:	00 0c       	add	r0, r0
    19c0:	11 f4       	brne	.+4      	; 0x19c6 <__fp_round+0xc>
    19c2:	88 23       	and	r24, r24
    19c4:	52 f0       	brmi	.+20     	; 0x19da <__fp_round+0x20>
    19c6:	bb 0f       	add	r27, r27
    19c8:	40 f4       	brcc	.+16     	; 0x19da <__fp_round+0x20>
    19ca:	bf 2b       	or	r27, r31
    19cc:	11 f4       	brne	.+4      	; 0x19d2 <__fp_round+0x18>
    19ce:	60 ff       	sbrs	r22, 0
    19d0:	04 c0       	rjmp	.+8      	; 0x19da <__fp_round+0x20>
    19d2:	6f 5f       	subi	r22, 0xFF	; 255
    19d4:	7f 4f       	sbci	r23, 0xFF	; 255
    19d6:	8f 4f       	sbci	r24, 0xFF	; 255
    19d8:	9f 4f       	sbci	r25, 0xFF	; 255
    19da:	08 95       	ret

000019dc <__fp_split3>:
    19dc:	57 fd       	sbrc	r21, 7
    19de:	90 58       	subi	r25, 0x80	; 128
    19e0:	44 0f       	add	r20, r20
    19e2:	55 1f       	adc	r21, r21
    19e4:	59 f0       	breq	.+22     	; 0x19fc <__fp_splitA+0x10>
    19e6:	5f 3f       	cpi	r21, 0xFF	; 255
    19e8:	71 f0       	breq	.+28     	; 0x1a06 <__fp_splitA+0x1a>
    19ea:	47 95       	ror	r20

000019ec <__fp_splitA>:
    19ec:	88 0f       	add	r24, r24
    19ee:	97 fb       	bst	r25, 7
    19f0:	99 1f       	adc	r25, r25
    19f2:	61 f0       	breq	.+24     	; 0x1a0c <__fp_splitA+0x20>
    19f4:	9f 3f       	cpi	r25, 0xFF	; 255
    19f6:	79 f0       	breq	.+30     	; 0x1a16 <__fp_splitA+0x2a>
    19f8:	87 95       	ror	r24
    19fa:	08 95       	ret
    19fc:	12 16       	cp	r1, r18
    19fe:	13 06       	cpc	r1, r19
    1a00:	14 06       	cpc	r1, r20
    1a02:	55 1f       	adc	r21, r21
    1a04:	f2 cf       	rjmp	.-28     	; 0x19ea <__fp_split3+0xe>
    1a06:	46 95       	lsr	r20
    1a08:	f1 df       	rcall	.-30     	; 0x19ec <__fp_splitA>
    1a0a:	08 c0       	rjmp	.+16     	; 0x1a1c <__fp_splitA+0x30>
    1a0c:	16 16       	cp	r1, r22
    1a0e:	17 06       	cpc	r1, r23
    1a10:	18 06       	cpc	r1, r24
    1a12:	99 1f       	adc	r25, r25
    1a14:	f1 cf       	rjmp	.-30     	; 0x19f8 <__fp_splitA+0xc>
    1a16:	86 95       	lsr	r24
    1a18:	71 05       	cpc	r23, r1
    1a1a:	61 05       	cpc	r22, r1
    1a1c:	08 94       	sec
    1a1e:	08 95       	ret

00001a20 <__fp_trunc>:
    1a20:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <__fp_splitA>
    1a24:	a0 f0       	brcs	.+40     	; 0x1a4e <__fp_trunc+0x2e>
    1a26:	be e7       	ldi	r27, 0x7E	; 126
    1a28:	b9 17       	cp	r27, r25
    1a2a:	88 f4       	brcc	.+34     	; 0x1a4e <__fp_trunc+0x2e>
    1a2c:	bb 27       	eor	r27, r27
    1a2e:	9f 38       	cpi	r25, 0x8F	; 143
    1a30:	60 f4       	brcc	.+24     	; 0x1a4a <__fp_trunc+0x2a>
    1a32:	16 16       	cp	r1, r22
    1a34:	b1 1d       	adc	r27, r1
    1a36:	67 2f       	mov	r22, r23
    1a38:	78 2f       	mov	r23, r24
    1a3a:	88 27       	eor	r24, r24
    1a3c:	98 5f       	subi	r25, 0xF8	; 248
    1a3e:	f7 cf       	rjmp	.-18     	; 0x1a2e <__fp_trunc+0xe>
    1a40:	86 95       	lsr	r24
    1a42:	77 95       	ror	r23
    1a44:	67 95       	ror	r22
    1a46:	b1 1d       	adc	r27, r1
    1a48:	93 95       	inc	r25
    1a4a:	96 39       	cpi	r25, 0x96	; 150
    1a4c:	c8 f3       	brcs	.-14     	; 0x1a40 <__fp_trunc+0x20>
    1a4e:	08 95       	ret

00001a50 <__fp_zero>:
    1a50:	e8 94       	clt

00001a52 <__fp_szero>:
    1a52:	bb 27       	eor	r27, r27
    1a54:	66 27       	eor	r22, r22
    1a56:	77 27       	eor	r23, r23
    1a58:	cb 01       	movw	r24, r22
    1a5a:	97 f9       	bld	r25, 7
    1a5c:	08 95       	ret

00001a5e <__gesf2>:
    1a5e:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__fp_cmp>
    1a62:	08 f4       	brcc	.+2      	; 0x1a66 <__gesf2+0x8>
    1a64:	8f ef       	ldi	r24, 0xFF	; 255
    1a66:	08 95       	ret
    1a68:	16 f0       	brts	.+4      	; 0x1a6e <__gesf2+0x10>
    1a6a:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__fp_mpack>
    1a6e:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_nan>
    1a72:	68 94       	set
    1a74:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>

00001a78 <log>:
    1a78:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <__fp_splitA>
    1a7c:	a8 f3       	brcs	.-22     	; 0x1a68 <__gesf2+0xa>
    1a7e:	99 23       	and	r25, r25
    1a80:	c1 f3       	breq	.-16     	; 0x1a72 <__gesf2+0x14>
    1a82:	ae f3       	brts	.-22     	; 0x1a6e <__gesf2+0x10>
    1a84:	df 93       	push	r29
    1a86:	cf 93       	push	r28
    1a88:	1f 93       	push	r17
    1a8a:	0f 93       	push	r16
    1a8c:	ff 92       	push	r15
    1a8e:	c9 2f       	mov	r28, r25
    1a90:	dd 27       	eor	r29, r29
    1a92:	88 23       	and	r24, r24
    1a94:	2a f0       	brmi	.+10     	; 0x1aa0 <log+0x28>
    1a96:	21 97       	sbiw	r28, 0x01	; 1
    1a98:	66 0f       	add	r22, r22
    1a9a:	77 1f       	adc	r23, r23
    1a9c:	88 1f       	adc	r24, r24
    1a9e:	da f7       	brpl	.-10     	; 0x1a96 <log+0x1e>
    1aa0:	20 e0       	ldi	r18, 0x00	; 0
    1aa2:	30 e0       	ldi	r19, 0x00	; 0
    1aa4:	40 e8       	ldi	r20, 0x80	; 128
    1aa6:	5f eb       	ldi	r21, 0xBF	; 191
    1aa8:	9f e3       	ldi	r25, 0x3F	; 63
    1aaa:	88 39       	cpi	r24, 0x98	; 152
    1aac:	20 f0       	brcs	.+8      	; 0x1ab6 <log+0x3e>
    1aae:	80 3e       	cpi	r24, 0xE0	; 224
    1ab0:	38 f0       	brcs	.+14     	; 0x1ac0 <log+0x48>
    1ab2:	21 96       	adiw	r28, 0x01	; 1
    1ab4:	8f 77       	andi	r24, 0x7F	; 127
    1ab6:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__addsf3>
    1aba:	ea e4       	ldi	r30, 0x4A	; 74
    1abc:	f1 e0       	ldi	r31, 0x01	; 1
    1abe:	04 c0       	rjmp	.+8      	; 0x1ac8 <log+0x50>
    1ac0:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__addsf3>
    1ac4:	e7 e7       	ldi	r30, 0x77	; 119
    1ac6:	f1 e0       	ldi	r31, 0x01	; 1
    1ac8:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <__fp_powser>
    1acc:	8b 01       	movw	r16, r22
    1ace:	be 01       	movw	r22, r28
    1ad0:	ec 01       	movw	r28, r24
    1ad2:	fb 2e       	mov	r15, r27
    1ad4:	6f 57       	subi	r22, 0x7F	; 127
    1ad6:	71 09       	sbc	r23, r1
    1ad8:	75 95       	asr	r23
    1ada:	77 1f       	adc	r23, r23
    1adc:	88 0b       	sbc	r24, r24
    1ade:	99 0b       	sbc	r25, r25
    1ae0:	0e 94 27 0c 	call	0x184e	; 0x184e <__floatsisf>
    1ae4:	28 e1       	ldi	r18, 0x18	; 24
    1ae6:	32 e7       	ldi	r19, 0x72	; 114
    1ae8:	41 e3       	ldi	r20, 0x31	; 49
    1aea:	5f e3       	ldi	r21, 0x3F	; 63
    1aec:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__mulsf3x>
    1af0:	af 2d       	mov	r26, r15
    1af2:	98 01       	movw	r18, r16
    1af4:	ae 01       	movw	r20, r28
    1af6:	ff 90       	pop	r15
    1af8:	0f 91       	pop	r16
    1afa:	1f 91       	pop	r17
    1afc:	cf 91       	pop	r28
    1afe:	df 91       	pop	r29
    1b00:	0e 94 23 0b 	call	0x1646	; 0x1646 <__addsf3x>
    1b04:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__fp_round>

00001b08 <__mulsf3>:
    1b08:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__mulsf3x>
    1b0c:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__fp_round>
    1b10:	0e 94 cf 0c 	call	0x199e	; 0x199e <__fp_pscA>
    1b14:	38 f0       	brcs	.+14     	; 0x1b24 <__mulsf3+0x1c>
    1b16:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__fp_pscB>
    1b1a:	20 f0       	brcs	.+8      	; 0x1b24 <__mulsf3+0x1c>
    1b1c:	95 23       	and	r25, r21
    1b1e:	11 f0       	breq	.+4      	; 0x1b24 <__mulsf3+0x1c>
    1b20:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>
    1b24:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_nan>
    1b28:	11 24       	eor	r1, r1
    1b2a:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__fp_szero>

00001b2e <__mulsf3x>:
    1b2e:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fp_split3>
    1b32:	70 f3       	brcs	.-36     	; 0x1b10 <__mulsf3+0x8>

00001b34 <__mulsf3_pse>:
    1b34:	95 9f       	mul	r25, r21
    1b36:	c1 f3       	breq	.-16     	; 0x1b28 <__mulsf3+0x20>
    1b38:	95 0f       	add	r25, r21
    1b3a:	50 e0       	ldi	r21, 0x00	; 0
    1b3c:	55 1f       	adc	r21, r21
    1b3e:	62 9f       	mul	r22, r18
    1b40:	f0 01       	movw	r30, r0
    1b42:	72 9f       	mul	r23, r18
    1b44:	bb 27       	eor	r27, r27
    1b46:	f0 0d       	add	r31, r0
    1b48:	b1 1d       	adc	r27, r1
    1b4a:	63 9f       	mul	r22, r19
    1b4c:	aa 27       	eor	r26, r26
    1b4e:	f0 0d       	add	r31, r0
    1b50:	b1 1d       	adc	r27, r1
    1b52:	aa 1f       	adc	r26, r26
    1b54:	64 9f       	mul	r22, r20
    1b56:	66 27       	eor	r22, r22
    1b58:	b0 0d       	add	r27, r0
    1b5a:	a1 1d       	adc	r26, r1
    1b5c:	66 1f       	adc	r22, r22
    1b5e:	82 9f       	mul	r24, r18
    1b60:	22 27       	eor	r18, r18
    1b62:	b0 0d       	add	r27, r0
    1b64:	a1 1d       	adc	r26, r1
    1b66:	62 1f       	adc	r22, r18
    1b68:	73 9f       	mul	r23, r19
    1b6a:	b0 0d       	add	r27, r0
    1b6c:	a1 1d       	adc	r26, r1
    1b6e:	62 1f       	adc	r22, r18
    1b70:	83 9f       	mul	r24, r19
    1b72:	a0 0d       	add	r26, r0
    1b74:	61 1d       	adc	r22, r1
    1b76:	22 1f       	adc	r18, r18
    1b78:	74 9f       	mul	r23, r20
    1b7a:	33 27       	eor	r19, r19
    1b7c:	a0 0d       	add	r26, r0
    1b7e:	61 1d       	adc	r22, r1
    1b80:	23 1f       	adc	r18, r19
    1b82:	84 9f       	mul	r24, r20
    1b84:	60 0d       	add	r22, r0
    1b86:	21 1d       	adc	r18, r1
    1b88:	82 2f       	mov	r24, r18
    1b8a:	76 2f       	mov	r23, r22
    1b8c:	6a 2f       	mov	r22, r26
    1b8e:	11 24       	eor	r1, r1
    1b90:	9f 57       	subi	r25, 0x7F	; 127
    1b92:	50 40       	sbci	r21, 0x00	; 0
    1b94:	9a f0       	brmi	.+38     	; 0x1bbc <__mulsf3_pse+0x88>
    1b96:	f1 f0       	breq	.+60     	; 0x1bd4 <__mulsf3_pse+0xa0>
    1b98:	88 23       	and	r24, r24
    1b9a:	4a f0       	brmi	.+18     	; 0x1bae <__mulsf3_pse+0x7a>
    1b9c:	ee 0f       	add	r30, r30
    1b9e:	ff 1f       	adc	r31, r31
    1ba0:	bb 1f       	adc	r27, r27
    1ba2:	66 1f       	adc	r22, r22
    1ba4:	77 1f       	adc	r23, r23
    1ba6:	88 1f       	adc	r24, r24
    1ba8:	91 50       	subi	r25, 0x01	; 1
    1baa:	50 40       	sbci	r21, 0x00	; 0
    1bac:	a9 f7       	brne	.-22     	; 0x1b98 <__mulsf3_pse+0x64>
    1bae:	9e 3f       	cpi	r25, 0xFE	; 254
    1bb0:	51 05       	cpc	r21, r1
    1bb2:	80 f0       	brcs	.+32     	; 0x1bd4 <__mulsf3_pse+0xa0>
    1bb4:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>
    1bb8:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__fp_szero>
    1bbc:	5f 3f       	cpi	r21, 0xFF	; 255
    1bbe:	e4 f3       	brlt	.-8      	; 0x1bb8 <__mulsf3_pse+0x84>
    1bc0:	98 3e       	cpi	r25, 0xE8	; 232
    1bc2:	d4 f3       	brlt	.-12     	; 0x1bb8 <__mulsf3_pse+0x84>
    1bc4:	86 95       	lsr	r24
    1bc6:	77 95       	ror	r23
    1bc8:	67 95       	ror	r22
    1bca:	b7 95       	ror	r27
    1bcc:	f7 95       	ror	r31
    1bce:	e7 95       	ror	r30
    1bd0:	9f 5f       	subi	r25, 0xFF	; 255
    1bd2:	c1 f7       	brne	.-16     	; 0x1bc4 <__mulsf3_pse+0x90>
    1bd4:	fe 2b       	or	r31, r30
    1bd6:	88 0f       	add	r24, r24
    1bd8:	91 1d       	adc	r25, r1
    1bda:	96 95       	lsr	r25
    1bdc:	87 95       	ror	r24
    1bde:	97 f9       	bld	r25, 7
    1be0:	08 95       	ret

00001be2 <pow>:
    1be2:	fa 01       	movw	r30, r20
    1be4:	ee 0f       	add	r30, r30
    1be6:	ff 1f       	adc	r31, r31
    1be8:	30 96       	adiw	r30, 0x00	; 0
    1bea:	21 05       	cpc	r18, r1
    1bec:	31 05       	cpc	r19, r1
    1bee:	a1 f1       	breq	.+104    	; 0x1c58 <pow+0x76>
    1bf0:	61 15       	cp	r22, r1
    1bf2:	71 05       	cpc	r23, r1
    1bf4:	61 f4       	brne	.+24     	; 0x1c0e <pow+0x2c>
    1bf6:	80 38       	cpi	r24, 0x80	; 128
    1bf8:	bf e3       	ldi	r27, 0x3F	; 63
    1bfa:	9b 07       	cpc	r25, r27
    1bfc:	49 f1       	breq	.+82     	; 0x1c50 <pow+0x6e>
    1bfe:	68 94       	set
    1c00:	90 38       	cpi	r25, 0x80	; 128
    1c02:	81 05       	cpc	r24, r1
    1c04:	61 f0       	breq	.+24     	; 0x1c1e <pow+0x3c>
    1c06:	80 38       	cpi	r24, 0x80	; 128
    1c08:	bf ef       	ldi	r27, 0xFF	; 255
    1c0a:	9b 07       	cpc	r25, r27
    1c0c:	41 f0       	breq	.+16     	; 0x1c1e <pow+0x3c>
    1c0e:	99 23       	and	r25, r25
    1c10:	4a f5       	brpl	.+82     	; 0x1c64 <pow+0x82>
    1c12:	ff 3f       	cpi	r31, 0xFF	; 255
    1c14:	e1 05       	cpc	r30, r1
    1c16:	31 05       	cpc	r19, r1
    1c18:	21 05       	cpc	r18, r1
    1c1a:	19 f1       	breq	.+70     	; 0x1c62 <pow+0x80>
    1c1c:	e8 94       	clt
    1c1e:	08 94       	sec
    1c20:	e7 95       	ror	r30
    1c22:	d9 01       	movw	r26, r18
    1c24:	aa 23       	and	r26, r26
    1c26:	29 f4       	brne	.+10     	; 0x1c32 <pow+0x50>
    1c28:	ab 2f       	mov	r26, r27
    1c2a:	be 2f       	mov	r27, r30
    1c2c:	f8 5f       	subi	r31, 0xF8	; 248
    1c2e:	d0 f3       	brcs	.-12     	; 0x1c24 <pow+0x42>
    1c30:	10 c0       	rjmp	.+32     	; 0x1c52 <pow+0x70>
    1c32:	ff 5f       	subi	r31, 0xFF	; 255
    1c34:	70 f4       	brcc	.+28     	; 0x1c52 <pow+0x70>
    1c36:	a6 95       	lsr	r26
    1c38:	e0 f7       	brcc	.-8      	; 0x1c32 <pow+0x50>
    1c3a:	f7 39       	cpi	r31, 0x97	; 151
    1c3c:	50 f0       	brcs	.+20     	; 0x1c52 <pow+0x70>
    1c3e:	19 f0       	breq	.+6      	; 0x1c46 <pow+0x64>
    1c40:	ff 3a       	cpi	r31, 0xAF	; 175
    1c42:	38 f4       	brcc	.+14     	; 0x1c52 <pow+0x70>
    1c44:	9f 77       	andi	r25, 0x7F	; 127
    1c46:	9f 93       	push	r25
    1c48:	0d d0       	rcall	.+26     	; 0x1c64 <pow+0x82>
    1c4a:	0f 90       	pop	r0
    1c4c:	07 fc       	sbrc	r0, 7
    1c4e:	90 58       	subi	r25, 0x80	; 128
    1c50:	08 95       	ret
    1c52:	46 f0       	brts	.+16     	; 0x1c64 <pow+0x82>
    1c54:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_nan>
    1c58:	60 e0       	ldi	r22, 0x00	; 0
    1c5a:	70 e0       	ldi	r23, 0x00	; 0
    1c5c:	80 e8       	ldi	r24, 0x80	; 128
    1c5e:	9f e3       	ldi	r25, 0x3F	; 63
    1c60:	08 95       	ret
    1c62:	4f e7       	ldi	r20, 0x7F	; 127
    1c64:	9f 77       	andi	r25, 0x7F	; 127
    1c66:	5f 93       	push	r21
    1c68:	4f 93       	push	r20
    1c6a:	3f 93       	push	r19
    1c6c:	2f 93       	push	r18
    1c6e:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <log>
    1c72:	2f 91       	pop	r18
    1c74:	3f 91       	pop	r19
    1c76:	4f 91       	pop	r20
    1c78:	5f 91       	pop	r21
    1c7a:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
    1c7e:	0c 94 49 0e 	jmp	0x1c92	; 0x1c92 <exp>
    1c82:	29 f4       	brne	.+10     	; 0x1c8e <pow+0xac>
    1c84:	16 f0       	brts	.+4      	; 0x1c8a <pow+0xa8>
    1c86:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>
    1c8a:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_zero>
    1c8e:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_nan>

00001c92 <exp>:
    1c92:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <__fp_splitA>
    1c96:	a8 f3       	brcs	.-22     	; 0x1c82 <pow+0xa0>
    1c98:	96 38       	cpi	r25, 0x86	; 134
    1c9a:	a0 f7       	brcc	.-24     	; 0x1c84 <pow+0xa2>
    1c9c:	07 f8       	bld	r0, 7
    1c9e:	0f 92       	push	r0
    1ca0:	e8 94       	clt
    1ca2:	2b e3       	ldi	r18, 0x3B	; 59
    1ca4:	3a ea       	ldi	r19, 0xAA	; 170
    1ca6:	48 eb       	ldi	r20, 0xB8	; 184
    1ca8:	5f e7       	ldi	r21, 0x7F	; 127
    1caa:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <__mulsf3_pse>
    1cae:	0f 92       	push	r0
    1cb0:	0f 92       	push	r0
    1cb2:	0f 92       	push	r0
    1cb4:	4d b7       	in	r20, 0x3d	; 61
    1cb6:	5e b7       	in	r21, 0x3e	; 62
    1cb8:	0f 92       	push	r0
    1cba:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <modf>
    1cbe:	e4 ea       	ldi	r30, 0xA4	; 164
    1cc0:	f1 e0       	ldi	r31, 0x01	; 1
    1cc2:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <__fp_powser>
    1cc6:	4f 91       	pop	r20
    1cc8:	5f 91       	pop	r21
    1cca:	ef 91       	pop	r30
    1ccc:	ff 91       	pop	r31
    1cce:	e5 95       	asr	r30
    1cd0:	ee 1f       	adc	r30, r30
    1cd2:	ff 1f       	adc	r31, r31
    1cd4:	49 f0       	breq	.+18     	; 0x1ce8 <exp+0x56>
    1cd6:	fe 57       	subi	r31, 0x7E	; 126
    1cd8:	e0 68       	ori	r30, 0x80	; 128
    1cda:	44 27       	eor	r20, r20
    1cdc:	ee 0f       	add	r30, r30
    1cde:	44 1f       	adc	r20, r20
    1ce0:	fa 95       	dec	r31
    1ce2:	e1 f7       	brne	.-8      	; 0x1cdc <exp+0x4a>
    1ce4:	41 95       	neg	r20
    1ce6:	55 0b       	sbc	r21, r21
    1ce8:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <ldexp>
    1cec:	0f 90       	pop	r0
    1cee:	07 fe       	sbrs	r0, 7
    1cf0:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <inverse>
    1cf4:	08 95       	ret

00001cf6 <__fp_powser>:
    1cf6:	df 93       	push	r29
    1cf8:	cf 93       	push	r28
    1cfa:	1f 93       	push	r17
    1cfc:	0f 93       	push	r16
    1cfe:	ff 92       	push	r15
    1d00:	ef 92       	push	r14
    1d02:	df 92       	push	r13
    1d04:	7b 01       	movw	r14, r22
    1d06:	8c 01       	movw	r16, r24
    1d08:	68 94       	set
    1d0a:	06 c0       	rjmp	.+12     	; 0x1d18 <__fp_powser+0x22>
    1d0c:	da 2e       	mov	r13, r26
    1d0e:	ef 01       	movw	r28, r30
    1d10:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <__mulsf3x>
    1d14:	fe 01       	movw	r30, r28
    1d16:	e8 94       	clt
    1d18:	a5 91       	lpm	r26, Z+
    1d1a:	25 91       	lpm	r18, Z+
    1d1c:	35 91       	lpm	r19, Z+
    1d1e:	45 91       	lpm	r20, Z+
    1d20:	55 91       	lpm	r21, Z+
    1d22:	a6 f3       	brts	.-24     	; 0x1d0c <__fp_powser+0x16>
    1d24:	ef 01       	movw	r28, r30
    1d26:	0e 94 23 0b 	call	0x1646	; 0x1646 <__addsf3x>
    1d2a:	fe 01       	movw	r30, r28
    1d2c:	97 01       	movw	r18, r14
    1d2e:	a8 01       	movw	r20, r16
    1d30:	da 94       	dec	r13
    1d32:	69 f7       	brne	.-38     	; 0x1d0e <__fp_powser+0x18>
    1d34:	df 90       	pop	r13
    1d36:	ef 90       	pop	r14
    1d38:	ff 90       	pop	r15
    1d3a:	0f 91       	pop	r16
    1d3c:	1f 91       	pop	r17
    1d3e:	cf 91       	pop	r28
    1d40:	df 91       	pop	r29
    1d42:	08 95       	ret

00001d44 <inverse>:
    1d44:	9b 01       	movw	r18, r22
    1d46:	ac 01       	movw	r20, r24
    1d48:	60 e0       	ldi	r22, 0x00	; 0
    1d4a:	70 e0       	ldi	r23, 0x00	; 0
    1d4c:	80 e8       	ldi	r24, 0x80	; 128
    1d4e:	9f e3       	ldi	r25, 0x3F	; 63
    1d50:	0c 94 7d 0b 	jmp	0x16fa	; 0x16fa <__divsf3>
    1d54:	0c 94 9d 0c 	jmp	0x193a	; 0x193a <__fp_inf>
    1d58:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__fp_mpack>

00001d5c <ldexp>:
    1d5c:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <__fp_splitA>
    1d60:	d8 f3       	brcs	.-10     	; 0x1d58 <inverse+0x14>
    1d62:	99 23       	and	r25, r25
    1d64:	c9 f3       	breq	.-14     	; 0x1d58 <inverse+0x14>
    1d66:	94 0f       	add	r25, r20
    1d68:	51 1d       	adc	r21, r1
    1d6a:	a3 f3       	brvs	.-24     	; 0x1d54 <inverse+0x10>
    1d6c:	91 50       	subi	r25, 0x01	; 1
    1d6e:	50 40       	sbci	r21, 0x00	; 0
    1d70:	94 f0       	brlt	.+36     	; 0x1d96 <ldexp+0x3a>
    1d72:	59 f0       	breq	.+22     	; 0x1d8a <ldexp+0x2e>
    1d74:	88 23       	and	r24, r24
    1d76:	32 f0       	brmi	.+12     	; 0x1d84 <ldexp+0x28>
    1d78:	66 0f       	add	r22, r22
    1d7a:	77 1f       	adc	r23, r23
    1d7c:	88 1f       	adc	r24, r24
    1d7e:	91 50       	subi	r25, 0x01	; 1
    1d80:	50 40       	sbci	r21, 0x00	; 0
    1d82:	c1 f7       	brne	.-16     	; 0x1d74 <ldexp+0x18>
    1d84:	9e 3f       	cpi	r25, 0xFE	; 254
    1d86:	51 05       	cpc	r21, r1
    1d88:	2c f7       	brge	.-54     	; 0x1d54 <inverse+0x10>
    1d8a:	88 0f       	add	r24, r24
    1d8c:	91 1d       	adc	r25, r1
    1d8e:	96 95       	lsr	r25
    1d90:	87 95       	ror	r24
    1d92:	97 f9       	bld	r25, 7
    1d94:	08 95       	ret
    1d96:	5f 3f       	cpi	r21, 0xFF	; 255
    1d98:	ac f0       	brlt	.+42     	; 0x1dc4 <ldexp+0x68>
    1d9a:	98 3e       	cpi	r25, 0xE8	; 232
    1d9c:	9c f0       	brlt	.+38     	; 0x1dc4 <ldexp+0x68>
    1d9e:	bb 27       	eor	r27, r27
    1da0:	86 95       	lsr	r24
    1da2:	77 95       	ror	r23
    1da4:	67 95       	ror	r22
    1da6:	b7 95       	ror	r27
    1da8:	08 f4       	brcc	.+2      	; 0x1dac <ldexp+0x50>
    1daa:	b1 60       	ori	r27, 0x01	; 1
    1dac:	93 95       	inc	r25
    1dae:	c1 f7       	brne	.-16     	; 0x1da0 <ldexp+0x44>
    1db0:	bb 0f       	add	r27, r27
    1db2:	58 f7       	brcc	.-42     	; 0x1d8a <ldexp+0x2e>
    1db4:	11 f4       	brne	.+4      	; 0x1dba <ldexp+0x5e>
    1db6:	60 ff       	sbrs	r22, 0
    1db8:	e8 cf       	rjmp	.-48     	; 0x1d8a <ldexp+0x2e>
    1dba:	6f 5f       	subi	r22, 0xFF	; 255
    1dbc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dbe:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc2:	e3 cf       	rjmp	.-58     	; 0x1d8a <ldexp+0x2e>
    1dc4:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__fp_szero>

00001dc8 <modf>:
    1dc8:	fa 01       	movw	r30, r20
    1dca:	dc 01       	movw	r26, r24
    1dcc:	aa 0f       	add	r26, r26
    1dce:	bb 1f       	adc	r27, r27
    1dd0:	9b 01       	movw	r18, r22
    1dd2:	ac 01       	movw	r20, r24
    1dd4:	bf 57       	subi	r27, 0x7F	; 127
    1dd6:	28 f4       	brcc	.+10     	; 0x1de2 <modf+0x1a>
    1dd8:	22 27       	eor	r18, r18
    1dda:	33 27       	eor	r19, r19
    1ddc:	44 27       	eor	r20, r20
    1dde:	50 78       	andi	r21, 0x80	; 128
    1de0:	20 c0       	rjmp	.+64     	; 0x1e22 <modf+0x5a>
    1de2:	b7 51       	subi	r27, 0x17	; 23
    1de4:	90 f4       	brcc	.+36     	; 0x1e0a <modf+0x42>
    1de6:	ab 2f       	mov	r26, r27
    1de8:	00 24       	eor	r0, r0
    1dea:	46 95       	lsr	r20
    1dec:	37 95       	ror	r19
    1dee:	27 95       	ror	r18
    1df0:	01 1c       	adc	r0, r1
    1df2:	a3 95       	inc	r26
    1df4:	d2 f3       	brmi	.-12     	; 0x1dea <modf+0x22>
    1df6:	00 20       	and	r0, r0
    1df8:	71 f0       	breq	.+28     	; 0x1e16 <modf+0x4e>
    1dfa:	22 0f       	add	r18, r18
    1dfc:	33 1f       	adc	r19, r19
    1dfe:	44 1f       	adc	r20, r20
    1e00:	b3 95       	inc	r27
    1e02:	da f3       	brmi	.-10     	; 0x1dfa <modf+0x32>
    1e04:	0e d0       	rcall	.+28     	; 0x1e22 <modf+0x5a>
    1e06:	0c 94 0b 0b 	jmp	0x1616	; 0x1616 <__subsf3>
    1e0a:	61 30       	cpi	r22, 0x01	; 1
    1e0c:	71 05       	cpc	r23, r1
    1e0e:	a0 e8       	ldi	r26, 0x80	; 128
    1e10:	8a 07       	cpc	r24, r26
    1e12:	b9 46       	sbci	r27, 0x69	; 105
    1e14:	30 f4       	brcc	.+12     	; 0x1e22 <modf+0x5a>
    1e16:	9b 01       	movw	r18, r22
    1e18:	ac 01       	movw	r20, r24
    1e1a:	66 27       	eor	r22, r22
    1e1c:	77 27       	eor	r23, r23
    1e1e:	88 27       	eor	r24, r24
    1e20:	90 78       	andi	r25, 0x80	; 128
    1e22:	30 96       	adiw	r30, 0x00	; 0
    1e24:	21 f0       	breq	.+8      	; 0x1e2e <modf+0x66>
    1e26:	20 83       	st	Z, r18
    1e28:	31 83       	std	Z+1, r19	; 0x01
    1e2a:	42 83       	std	Z+2, r20	; 0x02
    1e2c:	53 83       	std	Z+3, r21	; 0x03
    1e2e:	08 95       	ret

00001e30 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
    1e30:	0e 94 c7 0f 	call	0x1f8e	; 0x1f8e <system_init>
    1e34:	08 95       	ret

00001e36 <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1e36:	80 e0       	ldi	r24, 0x00	; 0
    1e38:	08 c0       	rjmp	.+16     	; 0x1e4a <mcu_init+0x14>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1e3a:	e8 2f       	mov	r30, r24
    1e3c:	f0 e0       	ldi	r31, 0x00	; 0
    1e3e:	e0 5f       	subi	r30, 0xF0	; 240
    1e40:	fb 4f       	sbci	r31, 0xFB	; 251
    1e42:	90 81       	ld	r25, Z
    1e44:	98 60       	ori	r25, 0x08	; 8
    1e46:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    1e48:	8f 5f       	subi	r24, 0xFF	; 255
    1e4a:	88 30       	cpi	r24, 0x08	; 8
    1e4c:	b0 f3       	brcs	.-20     	; 0x1e3a <mcu_init+0x4>
    1e4e:	80 e0       	ldi	r24, 0x00	; 0
    1e50:	08 c0       	rjmp	.+16     	; 0x1e62 <mcu_init+0x2c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1e52:	e8 2f       	mov	r30, r24
    1e54:	f0 e0       	ldi	r31, 0x00	; 0
    1e56:	e0 5d       	subi	r30, 0xD0	; 208
    1e58:	fb 4f       	sbci	r31, 0xFB	; 251
    1e5a:	90 81       	ld	r25, Z
    1e5c:	98 60       	ori	r25, 0x08	; 8
    1e5e:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1e60:	8f 5f       	subi	r24, 0xFF	; 255
    1e62:	88 30       	cpi	r24, 0x08	; 8
    1e64:	b0 f3       	brcs	.-20     	; 0x1e52 <mcu_init+0x1c>
    1e66:	80 e0       	ldi	r24, 0x00	; 0
    1e68:	08 c0       	rjmp	.+16     	; 0x1e7a <mcu_init+0x44>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1e6a:	e8 2f       	mov	r30, r24
    1e6c:	f0 e0       	ldi	r31, 0x00	; 0
    1e6e:	e0 5b       	subi	r30, 0xB0	; 176
    1e70:	fb 4f       	sbci	r31, 0xFB	; 251
    1e72:	90 81       	ld	r25, Z
    1e74:	98 60       	ori	r25, 0x08	; 8
    1e76:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1e78:	8f 5f       	subi	r24, 0xFF	; 255
    1e7a:	88 30       	cpi	r24, 0x08	; 8
    1e7c:	b0 f3       	brcs	.-20     	; 0x1e6a <mcu_init+0x34>
    1e7e:	80 e0       	ldi	r24, 0x00	; 0
    1e80:	08 c0       	rjmp	.+16     	; 0x1e92 <mcu_init+0x5c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1e82:	e8 2f       	mov	r30, r24
    1e84:	f0 e0       	ldi	r31, 0x00	; 0
    1e86:	e0 59       	subi	r30, 0x90	; 144
    1e88:	fb 4f       	sbci	r31, 0xFB	; 251
    1e8a:	90 81       	ld	r25, Z
    1e8c:	98 60       	ori	r25, 0x08	; 8
    1e8e:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1e90:	8f 5f       	subi	r24, 0xFF	; 255
    1e92:	88 30       	cpi	r24, 0x08	; 8
    1e94:	b0 f3       	brcs	.-20     	; 0x1e82 <mcu_init+0x4c>
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	08 c0       	rjmp	.+16     	; 0x1eaa <mcu_init+0x74>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1e9a:	e8 2f       	mov	r30, r24
    1e9c:	f0 e0       	ldi	r31, 0x00	; 0
    1e9e:	e0 57       	subi	r30, 0x70	; 112
    1ea0:	fb 4f       	sbci	r31, 0xFB	; 251
    1ea2:	90 81       	ld	r25, Z
    1ea4:	98 60       	ori	r25, 0x08	; 8
    1ea6:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1ea8:	8f 5f       	subi	r24, 0xFF	; 255
    1eaa:	88 30       	cpi	r24, 0x08	; 8
    1eac:	b0 f3       	brcs	.-20     	; 0x1e9a <mcu_init+0x64>
    1eae:	80 e0       	ldi	r24, 0x00	; 0
    1eb0:	08 c0       	rjmp	.+16     	; 0x1ec2 <mcu_init+0x8c>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    1eb2:	e8 2f       	mov	r30, r24
    1eb4:	f0 e0       	ldi	r31, 0x00	; 0
    1eb6:	e0 55       	subi	r30, 0x50	; 80
    1eb8:	fb 4f       	sbci	r31, 0xFB	; 251
    1eba:	90 81       	ld	r25, Z
    1ebc:	98 60       	ori	r25, 0x08	; 8
    1ebe:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    1ec0:	8f 5f       	subi	r24, 0xFF	; 255
    1ec2:	88 30       	cpi	r24, 0x08	; 8
    1ec4:	b0 f3       	brcs	.-20     	; 0x1eb2 <mcu_init+0x7c>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    1ec6:	08 95       	ret

00001ec8 <USART_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    1ec8:	84 b1       	in	r24, 0x04	; 4
    1eca:	8d 7f       	andi	r24, 0xFD	; 253
    1ecc:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1ece:	e1 e3       	ldi	r30, 0x31	; 49
    1ed0:	f4 e0       	ldi	r31, 0x04	; 4
    1ed2:	80 81       	ld	r24, Z
    1ed4:	87 7f       	andi	r24, 0xF7	; 247
    1ed6:	80 83       	st	Z, r24
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1ed8:	85 b1       	in	r24, 0x05	; 5
    1eda:	8e 7f       	andi	r24, 0xFE	; 254
    1edc:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1ede:	84 b1       	in	r24, 0x04	; 4
    1ee0:	81 60       	ori	r24, 0x01	; 1
    1ee2:	84 b9       	out	0x04, r24	; 4
	    // <true"> High
	    false);

	PB0_set_dir(PORT_DIR_OUT);

	USART_0_init();
    1ee4:	0e 94 88 10 	call	0x2110	; 0x2110 <USART_0_init>
    1ee8:	08 95       	ret

00001eea <EVENT_SYSTEM_0_initialization>:
}

void EVENT_SYSTEM_0_initialization(void)
{

	EVENT_SYSTEM_0_init();
    1eea:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <EVENT_SYSTEM_0_init>
    1eee:	08 95       	ret

00001ef0 <ZCD_Rising_initialization>:
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1ef0:	e1 e7       	ldi	r30, 0x71	; 113
    1ef2:	f4 e0       	ldi	r31, 0x04	; 4
    1ef4:	80 81       	ld	r24, Z
    1ef6:	88 7f       	andi	r24, 0xF8	; 248
    1ef8:	84 60       	ori	r24, 0x04	; 4
    1efa:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1efc:	80 81       	ld	r24, Z
    1efe:	87 7f       	andi	r24, 0xF7	; 247
    1f00:	80 83       	st	Z, r24
	// Disable digital input buffer
	PD1_set_isc(PORT_ISC_INPUT_DISABLE_gc);
	// Disable pull-up resistor
	PD1_set_pull_mode(PORT_PULL_OFF);

	ZCD_Rising_init();
    1f02:	0e 94 a4 10 	call	0x2148	; 0x2148 <ZCD_Rising_init>
    1f06:	08 95       	ret

00001f08 <ZCD_Falling_initialization>:
 */
static inline void PORTE_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTE + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    1f08:	e3 e9       	ldi	r30, 0x93	; 147
    1f0a:	f4 e0       	ldi	r31, 0x04	; 4
    1f0c:	80 81       	ld	r24, Z
    1f0e:	88 7f       	andi	r24, 0xF8	; 248
    1f10:	84 60       	ori	r24, 0x04	; 4
    1f12:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTE + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1f14:	80 81       	ld	r24, Z
    1f16:	87 7f       	andi	r24, 0xF7	; 247
    1f18:	80 83       	st	Z, r24
	// Disable digital input buffer
	PE3_set_isc(PORT_ISC_INPUT_DISABLE_gc);
	// Disable pull-up resistor
	PE3_set_pull_mode(PORT_PULL_OFF);

	ZCD_Falling_init();
    1f1a:	0e 94 ab 10 	call	0x2156	; 0x2156 <ZCD_Falling_init>
    1f1e:	08 95       	ret

00001f20 <SPI_ADF_initialization>:
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    1f20:	80 b1       	in	r24, 0x00	; 0
    1f22:	8f 7d       	andi	r24, 0xDF	; 223
    1f24:	80 b9       	out	0x00, r24	; 0
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1f26:	e5 e1       	ldi	r30, 0x15	; 21
    1f28:	f4 e0       	ldi	r31, 0x04	; 4
    1f2a:	80 81       	ld	r24, Z
    1f2c:	87 7f       	andi	r24, 0xF7	; 247
    1f2e:	80 83       	st	Z, r24
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1f30:	81 b1       	in	r24, 0x01	; 1
    1f32:	8f 7e       	andi	r24, 0xEF	; 239
    1f34:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    1f36:	80 b1       	in	r24, 0x00	; 0
    1f38:	80 61       	ori	r24, 0x10	; 16
    1f3a:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1f3c:	81 b1       	in	r24, 0x01	; 1
    1f3e:	8f 7b       	andi	r24, 0xBF	; 191
    1f40:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    1f42:	80 b1       	in	r24, 0x00	; 0
    1f44:	80 64       	ori	r24, 0x40	; 64
    1f46:	80 b9       	out	0x00, r24	; 0
	    // <true"> High
	    false);

	PA6_set_dir(PORT_DIR_OUT);

	SPI_ADF_init();
    1f48:	0e 94 1c 10 	call	0x2038	; 0x2038 <SPI_ADF_init>
    1f4c:	08 95       	ret

00001f4e <SPI_LMX_initialization>:
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    1f4e:	88 b1       	in	r24, 0x08	; 8
    1f50:	8d 7f       	andi	r24, 0xFD	; 253
    1f52:	88 b9       	out	0x08, r24	; 8
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1f54:	e1 e5       	ldi	r30, 0x51	; 81
    1f56:	f4 e0       	ldi	r31, 0x04	; 4
    1f58:	80 81       	ld	r24, Z
    1f5a:	87 7f       	andi	r24, 0xF7	; 247
    1f5c:	80 83       	st	Z, r24
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1f5e:	89 b1       	in	r24, 0x09	; 9
    1f60:	8e 7f       	andi	r24, 0xFE	; 254
    1f62:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1f64:	88 b1       	in	r24, 0x08	; 8
    1f66:	81 60       	ori	r24, 0x01	; 1
    1f68:	88 b9       	out	0x08, r24	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    1f6a:	89 b1       	in	r24, 0x09	; 9
    1f6c:	8b 7f       	andi	r24, 0xFB	; 251
    1f6e:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1f70:	88 b1       	in	r24, 0x08	; 8
    1f72:	84 60       	ori	r24, 0x04	; 4
    1f74:	88 b9       	out	0x08, r24	; 8
	    // <true"> High
	    false);

	PC2_set_dir(PORT_DIR_OUT);

	SPI_LMX_init();
    1f76:	0e 94 4c 10 	call	0x2098	; 0x2098 <SPI_LMX_init>
    1f7a:	08 95       	ret

00001f7c <TIMER_RISING_initialization>:
}

void TIMER_RISING_initialization(void)
{

	TIMER_RISING_init();
    1f7c:	0e 94 55 10 	call	0x20aa	; 0x20aa <TIMER_RISING_init>
    1f80:	08 95       	ret

00001f82 <TIMER_Falling_initialization>:
}

void TIMER_Falling_initialization(void)
{

	TIMER_Falling_init();
    1f82:	0e 94 67 10 	call	0x20ce	; 0x20ce <TIMER_Falling_init>
    1f86:	08 95       	ret

00001f88 <TIMER_C_initialization>:
}

void TIMER_C_initialization(void)
{

	TIMER_C_init();
    1f88:	0e 94 72 10 	call	0x20e4	; 0x20e4 <TIMER_C_init>
    1f8c:	08 95       	ret

00001f8e <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    1f8e:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <mcu_init>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1f92:	81 b1       	in	r24, 0x01	; 1
    1f94:	8f 77       	andi	r24, 0x7F	; 127
    1f96:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    1f98:	80 b1       	in	r24, 0x00	; 0
    1f9a:	80 68       	ori	r24, 0x80	; 128
    1f9c:	80 b9       	out	0x00, r24	; 0
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1f9e:	85 b1       	in	r24, 0x05	; 5
    1fa0:	87 7f       	andi	r24, 0xF7	; 247
    1fa2:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1fa4:	84 b1       	in	r24, 0x04	; 4
    1fa6:	88 60       	ori	r24, 0x08	; 8
    1fa8:	84 b9       	out	0x04, r24	; 4
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
    1faa:	89 b1       	in	r24, 0x09	; 9
    1fac:	88 60       	ori	r24, 0x08	; 8
    1fae:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    1fb0:	88 b1       	in	r24, 0x08	; 8
    1fb2:	88 60       	ori	r24, 0x08	; 8
    1fb4:	88 b9       	out	0x08, r24	; 8
	    // <true"> High
	    true);

	CS_LMX_set_dir(PORT_DIR_OUT);

	CLKCTRL_init();
    1fb6:	0e 94 b7 10 	call	0x216e	; 0x216e <CLKCTRL_init>

	USART_0_initialization();
    1fba:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <USART_0_initialization>

	EVENT_SYSTEM_0_initialization();
    1fbe:	0e 94 75 0f 	call	0x1eea	; 0x1eea <EVENT_SYSTEM_0_initialization>

	SLPCTRL_init();
    1fc2:	0e 94 1a 10 	call	0x2034	; 0x2034 <SLPCTRL_init>

	CPUINT_init();
    1fc6:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <CPUINT_init>

	ZCD_Rising_initialization();
    1fca:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <ZCD_Rising_initialization>

	ZCD_Falling_initialization();
    1fce:	0e 94 84 0f 	call	0x1f08	; 0x1f08 <ZCD_Falling_initialization>

	SPI_ADF_initialization();
    1fd2:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <SPI_ADF_initialization>

	SPI_LMX_initialization();
    1fd6:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <SPI_LMX_initialization>

	RTC_0_init();
    1fda:	0e 94 09 10 	call	0x2012	; 0x2012 <RTC_0_init>

	TIMER_RISING_initialization();
    1fde:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <TIMER_RISING_initialization>

	TIMER_Falling_initialization();
    1fe2:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <TIMER_Falling_initialization>

	TIMER_C_initialization();
    1fe6:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <TIMER_C_initialization>

	BOD_init();
    1fea:	0e 94 b3 10 	call	0x2166	; 0x2166 <BOD_init>
    1fee:	08 95       	ret

00001ff0 <EVENT_SYSTEM_0_init>:
 * \return Initialization status.
 */
int8_t EVENT_SYSTEM_0_init()
{

	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_ZCD0_gc; /* Zero Cross Detect 0 out */
    1ff0:	e0 e0       	ldi	r30, 0x00	; 0
    1ff2:	f2 e0       	ldi	r31, 0x02	; 2
    1ff4:	80 e3       	ldi	r24, 0x30	; 48
    1ff6:	80 8b       	std	Z+16, r24	; 0x10

	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_ZCD1_gc; /* Zero Cross Detect 1 out */
    1ff8:	81 e3       	ldi	r24, 0x31	; 49
    1ffa:	81 8b       	std	Z+17, r24	; 0x11

	// EVSYS.USERTCA1CNTA = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USERTCA1CNTB = EVSYS_USER_OFF_gc; /* Off */

	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; /* Connect user to event channel 0 */
    1ffc:	91 e0       	ldi	r25, 0x01	; 1
    1ffe:	96 af       	std	Z+62, r25	; 0x3e

	// EVSYS.USERTCB1CAPT = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USERTCB1COUNT = EVSYS_USER_OFF_gc; /* Off */

	EVSYS.USERTCB2CAPT = EVSYS_USER_CHANNEL1_gc; /* Connect user to event channel 1 */
    2000:	82 e0       	ldi	r24, 0x02	; 2
    2002:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <__TEXT_REGION_LENGTH__+0x7e0242>

	// EVSYS.USERTCB3CAPT = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USERTCB3COUNT = EVSYS_USER_OFF_gc; /* Off */

	EVSYS.USERTCD0INPUTA = EVSYS_USER_CHANNEL0_gc; /* Connect user to event channel 0 */
    2006:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <__TEXT_REGION_LENGTH__+0x7e0248>

	EVSYS.USERTCD0INPUTB = EVSYS_USER_CHANNEL1_gc; /* Connect user to event channel 1 */
    200a:	80 93 49 02 	sts	0x0249, r24	; 0x800249 <__TEXT_REGION_LENGTH__+0x7e0249>
	// EVSYS.USEROPAMP2DUMP = EVSYS_USER_OFF_gc; /* Off */

	// EVSYS.USEROPAMP2DISABLE = EVSYS_USER_OFF_gc; /* Off */

	return 0;
}
    200e:	80 e0       	ldi	r24, 0x00	; 0
    2010:	08 95       	ret

00002012 <RTC_0_init>:
 * \return Initialization status.
 */
int8_t RTC_0_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
    2012:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7e0141>
    2016:	81 11       	cpse	r24, r1
    2018:	fc cf       	rjmp	.-8      	; 0x2012 <RTC_0_init>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV32_gc  /* 32 */
    201a:	e0 e4       	ldi	r30, 0x40	; 64
    201c:	f1 e0       	ldi	r31, 0x01	; 1
    201e:	88 ea       	ldi	r24, 0xA8	; 168
    2020:	80 83       	st	Z, r24
	            | 0 << RTC_RTCEN_bp     /* Enable: disabled */
	            | 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */

	RTC.PER = 0x1ff; /* Period: 0x1ff */
    2022:	8f ef       	ldi	r24, 0xFF	; 255
    2024:	91 e0       	ldi	r25, 0x01	; 1
    2026:	82 87       	std	Z+10, r24	; 0x0a
    2028:	93 87       	std	Z+11, r25	; 0x0b

	RTC.CLKSEL = RTC_CLKSEL_OSC32K_gc; /* Internal 32.768 kHz oscillator */
    202a:	17 82       	std	Z+7, r1	; 0x07

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 0 << RTC_CMP_bp    /* Compare Match Interrupt enable: disabled */
    202c:	81 e0       	ldi	r24, 0x01	; 1
    202e:	82 83       	std	Z+2, r24	; 0x02
	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	// RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */

	return 0;
}
    2030:	80 e0       	ldi	r24, 0x00	; 0
    2032:	08 95       	ret

00002034 <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    2034:	80 e0       	ldi	r24, 0x00	; 0
    2036:	08 95       	ret

00002038 <SPI_ADF_init>:
		while (!(SPI0.INTFLAGS & SPI_RXCIF_bm))
			;
		*b = SPI0.DATA;
		b++;
	}
}
    2038:	e0 e4       	ldi	r30, 0x40	; 64
    203a:	f9 e0       	ldi	r31, 0x09	; 9
    203c:	81 e2       	ldi	r24, 0x21	; 33
    203e:	80 83       	st	Z, r24
    2040:	81 e0       	ldi	r24, 0x01	; 1
    2042:	82 83       	std	Z+2, r24	; 0x02
    2044:	10 92 17 42 	sts	0x4217, r1	; 0x804217 <SPI_ADF_desc>
    2048:	08 95       	ret

0000204a <SPI_ADF_enable>:
    204a:	e0 e4       	ldi	r30, 0x40	; 64
    204c:	f9 e0       	ldi	r31, 0x09	; 9
    204e:	80 81       	ld	r24, Z
    2050:	81 60       	ori	r24, 0x01	; 1
    2052:	80 83       	st	Z, r24
    2054:	08 95       	ret

00002056 <SPI_ADF_write_block>:
 * \param[in] size The size of buffer to transfer
 *
 * \return Nothing.
 */
void SPI_ADF_write_block(void *block, uint8_t size)
{
    2056:	fc 01       	movw	r30, r24
	uint8_t *b = (uint8_t *)block;
	while (size--) {
    2058:	09 c0       	rjmp	.+18     	; 0x206c <SPI_ADF_write_block+0x16>
		SPI0.DATA = *b;
    205a:	90 81       	ld	r25, Z
    205c:	90 93 44 09 	sts	0x0944, r25	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
		while (!(SPI0.INTFLAGS & SPI_RXCIF_bm))
    2060:	90 91 43 09 	lds	r25, 0x0943	; 0x800943 <__TEXT_REGION_LENGTH__+0x7e0943>
    2064:	99 23       	and	r25, r25
    2066:	e4 f7       	brge	.-8      	; 0x2060 <SPI_ADF_write_block+0xa>
			;
		b++;
    2068:	31 96       	adiw	r30, 0x01	; 1
 * \return Nothing.
 */
void SPI_ADF_write_block(void *block, uint8_t size)
{
	uint8_t *b = (uint8_t *)block;
	while (size--) {
    206a:	68 2f       	mov	r22, r24
    206c:	8f ef       	ldi	r24, 0xFF	; 255
    206e:	86 0f       	add	r24, r22
    2070:	61 11       	cpse	r22, r1
    2072:	f3 cf       	rjmp	.-26     	; 0x205a <SPI_ADF_write_block+0x4>
		SPI0.DATA = *b;
		while (!(SPI0.INTFLAGS & SPI_RXCIF_bm))
			;
		b++;
	}
}
    2074:	08 95       	ret

00002076 <SPI_ADF_read_block>:
 * \param[in] size The size of buffer to transfer
 *
 * \return Nothing.
 */
void SPI_ADF_read_block(void *block, uint8_t size)
{
    2076:	fc 01       	movw	r30, r24
	uint8_t *b = (uint8_t *)block;
	while (size--) {
    2078:	0a c0       	rjmp	.+20     	; 0x208e <SPI_ADF_read_block+0x18>
		SPI0.DATA = 0;
    207a:	10 92 44 09 	sts	0x0944, r1	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
		while (!(SPI0.INTFLAGS & SPI_RXCIF_bm))
    207e:	90 91 43 09 	lds	r25, 0x0943	; 0x800943 <__TEXT_REGION_LENGTH__+0x7e0943>
    2082:	99 23       	and	r25, r25
    2084:	e4 f7       	brge	.-8      	; 0x207e <SPI_ADF_read_block+0x8>
			;
		*b = SPI0.DATA;
    2086:	90 91 44 09 	lds	r25, 0x0944	; 0x800944 <__TEXT_REGION_LENGTH__+0x7e0944>
    208a:	91 93       	st	Z+, r25
 * \return Nothing.
 */
void SPI_ADF_read_block(void *block, uint8_t size)
{
	uint8_t *b = (uint8_t *)block;
	while (size--) {
    208c:	68 2f       	mov	r22, r24
    208e:	8f ef       	ldi	r24, 0xFF	; 255
    2090:	86 0f       	add	r24, r22
    2092:	61 11       	cpse	r22, r1
    2094:	f2 cf       	rjmp	.-28     	; 0x207a <SPI_ADF_read_block+0x4>
		while (!(SPI0.INTFLAGS & SPI_RXCIF_bm))
			;
		*b = SPI0.DATA;
		b++;
	}
}
    2096:	08 95       	ret

00002098 <SPI_LMX_init>:
 * \retval 1 the SPI init was not successful
 */
void SPI_LMX_init()
{

	SPI1.CTRLA = 0 << SPI_CLK2X_bp    /* Enable Double Speed: disabled */
    2098:	e0 e6       	ldi	r30, 0x60	; 96
    209a:	f9 e0       	ldi	r31, 0x09	; 9
    209c:	81 e2       	ldi	r24, 0x21	; 33
    209e:	80 83       	st	Z, r24
	// SPI1.CTRLB = 0 << SPI_BUFEN_bp /* Buffer Mode Enable: disabled */
	//		 | 0 << SPI_BUFWR_bp /* Buffer Write Mode: disabled */
	//		 | SPI_MODE_0_gc /* SPI Mode 0 */
	//		 | 0 << SPI_SSD_bp; /* Slave Select Disable: disabled */

	SPI1.INTCTRL = 0 << SPI_DREIE_bp    /* Data Register Empty Interrupt Enable: disabled */
    20a0:	81 e0       	ldi	r24, 0x01	; 1
    20a2:	82 83       	std	Z+2, r24	; 0x02
	               | 1 << SPI_IE_bp     /* Interrupt Enable: enabled */
	               | 0 << SPI_RXCIE_bp  /* Receive Complete Interrupt Enable: disabled */
	               | 0 << SPI_SSIE_bp   /* Slave Select Trigger Interrupt Enable: disabled */
	               | 0 << SPI_TXCIE_bp; /* Transfer Complete Interrupt Enable: disabled */

	SPI_LMX_desc.status = SPI_FREE;
    20a4:	10 92 16 42 	sts	0x4216, r1	; 0x804216 <SPI_LMX_desc>
    20a8:	08 95       	ret

000020aa <TIMER_RISING_init>:
 * \return Initialization status.
 */
int8_t TIMER_RISING_init()
{

	TCB0.CCMP = 0xffff; /* Compare or Capture: 0xffff */
    20aa:	e0 e0       	ldi	r30, 0x00	; 0
    20ac:	fb e0       	ldi	r31, 0x0B	; 11
    20ae:	8f ef       	ldi	r24, 0xFF	; 255
    20b0:	9f ef       	ldi	r25, 0xFF	; 255
    20b2:	84 87       	std	Z+12, r24	; 0x0c
    20b4:	95 87       	std	Z+13, r25	; 0x0d

	TCB0.CNT = 0xffff; /* Count: 0xffff */
    20b6:	82 87       	std	Z+10, r24	; 0x0a
    20b8:	93 87       	std	Z+11, r25	; 0x0b

	TCB0.CTRLB = 0 << TCB_ASYNC_bp      /* Asynchronous Enable: disabled */
    20ba:	83 e0       	ldi	r24, 0x03	; 3
    20bc:	81 83       	std	Z+1, r24	; 0x01
	             | 0 << TCB_CCMPEN_bp   /* Pin Output Enable: disabled */
	             | 0 << TCB_CCMPINIT_bp /* Pin Initial State: disabled */
	             | TCB_CNTMODE_FRQ_gc;  /* Input Capture Frequency measurement */

	TCB0.DBGCTRL = 1 << TCB_DBGRUN_bp; /* Debug Run: enabled */
    20be:	81 e0       	ldi	r24, 0x01	; 1
    20c0:	80 87       	std	Z+8, r24	; 0x08

	TCB0.EVCTRL = 1 << TCB_CAPTEI_bp    /* Event Input Enable: enabled */
    20c2:	84 83       	std	Z+4, r24	; 0x04
	              | 0 << TCB_EDGE_bp    /* Event Edge: disabled */
	              | 0 << TCB_FILTER_bp; /* Input Capture Noise Cancellation Filter: disabled */

	TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    20c4:	85 83       	std	Z+5, r24	; 0x05
	               | 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

	TCB0.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    20c6:	81 e4       	ldi	r24, 0x41	; 65
    20c8:	80 83       	st	Z, r24
	             | 1 << TCB_RUNSTDBY_bp /* Run Standby: enabled */
	             | 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
	             | 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

	return 0;
}
    20ca:	80 e0       	ldi	r24, 0x00	; 0
    20cc:	08 95       	ret

000020ce <TIMER_Falling_init>:

	// TCB2.CCMP = 0x0; /* Compare or Capture: 0x0 */

	// TCB2.CNT = 0x0; /* Count: 0x0 */

	TCB2.CTRLB = 1 << TCB_ASYNC_bp      /* Asynchronous Enable: enabled */
    20ce:	e0 e2       	ldi	r30, 0x20	; 32
    20d0:	fb e0       	ldi	r31, 0x0B	; 11
    20d2:	83 e4       	ldi	r24, 0x43	; 67
    20d4:	81 83       	std	Z+1, r24	; 0x01
	             | 0 << TCB_CCMPINIT_bp /* Pin Initial State: disabled */
	             | TCB_CNTMODE_FRQ_gc;  /* Input Capture Frequency measurement */

	// TCB2.DBGCTRL = 0 << TCB_DBGRUN_bp; /* Debug Run: disabled */

	TCB2.EVCTRL = 1 << TCB_CAPTEI_bp    /* Event Input Enable: enabled */
    20d6:	81 e0       	ldi	r24, 0x01	; 1
    20d8:	84 83       	std	Z+4, r24	; 0x04
	              | 0 << TCB_EDGE_bp    /* Event Edge: disabled */
	              | 0 << TCB_FILTER_bp; /* Input Capture Noise Cancellation Filter: disabled */

	TCB2.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    20da:	85 83       	std	Z+5, r24	; 0x05
	               | 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

	TCB2.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    20dc:	81 e4       	ldi	r24, 0x41	; 65
    20de:	80 83       	st	Z, r24
	             | 1 << TCB_RUNSTDBY_bp /* Run Standby: enabled */
	             | 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
	             | 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

	return 0;
}
    20e0:	80 e0       	ldi	r24, 0x00	; 0
    20e2:	08 95       	ret

000020e4 <TIMER_C_init>:
int8_t TIMER_C_init()
{

	// Enable Protected register, peripheral must be disabled (ENABLE=0, in TCD.CTRLA).

	TCD0.CMPASET = 4095; /* Compare A Set: 4095 */
    20e4:	e0 e8       	ldi	r30, 0x80	; 128
    20e6:	fb e0       	ldi	r31, 0x0B	; 11
    20e8:	8f ef       	ldi	r24, 0xFF	; 255
    20ea:	9f e0       	ldi	r25, 0x0F	; 15
    20ec:	80 a7       	std	Z+40, r24	; 0x28
    20ee:	91 a7       	std	Z+41, r25	; 0x29

	// TCD0.CMPACLR = 0; /* Compare A Clear: 0 */

	TCD0.CMPBSET = 4095; /* Compare B Set: 4095 */
    20f0:	84 a7       	std	Z+44, r24	; 0x2c
    20f2:	95 a7       	std	Z+45, r25	; 0x2d
	//		 | TCD_DLYTRIG_CMPASET_gc; /* Compare A set */

	// TCD0.DLYVAL = 0 << TCD_DLYVAL_gp; /* Delay value: 0 */

	TCD0.EVCTRLA
	    = TCD_CFG_NEITHER_gc      /* Neither Filter nor Asynchronous Event is enabled */
    20f4:	85 e1       	ldi	r24, 0x15	; 21
    20f6:	80 87       	std	Z+8, r24	; 0x08
	      | TCD_ACTION_CAPTURE_gc /* Event trigger a fault and capture */
	      | TCD_EDGE_RISE_HIGH_gc /* The rising edge or high level of event generates retrigger or fault action */
	      | 1 << TCD_TRIGEI_bp;   /* Trigger event enable: enabled */

	TCD0.EVCTRLB
	    = TCD_CFG_NEITHER_gc      /* Neither Filter nor Asynchronous Event is enabled */
    20f8:	81 87       	std	Z+9, r24	; 0x09

	// TCD0.INPUTCTRLA = TCD_INPUTMODE_NONE_gc; /* Input has no actions */

	// TCD0.INPUTCTRLB = TCD_INPUTMODE_NONE_gc; /* Input has no actions */

	TCD0.INTCTRL = 0 << TCD_OVF_bp      /* Overflow interrupt enable: disabled */
    20fa:	8c e0       	ldi	r24, 0x0C	; 12
    20fc:	84 87       	std	Z+12, r24	; 0x0c
	               | 1 << TCD_TRIGA_bp  /* Trigger A interrupt enable: enabled */
	               | 1 << TCD_TRIGB_bp; /* Trigger B interrupt enable: enabled */

	while ((TCD0.STATUS & TCD_ENRDY_bm) == 0)
    20fe:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <__TEXT_REGION_LENGTH__+0x7e0b8e>
    2102:	80 ff       	sbrs	r24, 0
    2104:	fc cf       	rjmp	.-8      	; 0x20fe <TIMER_C_init+0x1a>
		; // Wait for Enable Ready to be high.

	TCD0.CTRLA = 1 << TCD_ENABLE_bp      /* Enable: enabled */
    2106:	81 e2       	ldi	r24, 0x21	; 33
    2108:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <__TEXT_REGION_LENGTH__+0x7e0b80>
	             | TCD_CLKSEL_PLL_gc     /*  */
	             | TCD_CNTPRES_DIV1_gc   /* Sync clock divided by 1 */
	             | TCD_SYNCPRES_DIV1_gc; /*  */

	return 0;
}
    210c:	80 e0       	ldi	r24, 0x00	; 0
    210e:	08 95       	ret

00002110 <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(USART3.STATUS & USART_RXCIF_bm))
		;
	return USART3.RXDATAL;
}
    2110:	e0 e6       	ldi	r30, 0x60	; 96
    2112:	f8 e0       	ldi	r31, 0x08	; 8
    2114:	81 e4       	ldi	r24, 0x41	; 65
    2116:	93 e0       	ldi	r25, 0x03	; 3
    2118:	80 87       	std	Z+8, r24	; 0x08
    211a:	91 87       	std	Z+9, r25	; 0x09
    211c:	80 ec       	ldi	r24, 0xC0	; 192
    211e:	86 83       	std	Z+6, r24	; 0x06
    2120:	80 e0       	ldi	r24, 0x00	; 0
    2122:	90 e4       	ldi	r25, 0x40	; 64
    2124:	80 93 1a 42 	sts	0x421A, r24	; 0x80421a <__iob+0x2>
    2128:	90 93 1b 42 	sts	0x421B, r25	; 0x80421b <__iob+0x3>
    212c:	80 e0       	ldi	r24, 0x00	; 0
    212e:	08 95       	ret

00002130 <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(USART3.STATUS & USART_DREIF_bm))
    2130:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
    2134:	95 ff       	sbrs	r25, 5
    2136:	fc cf       	rjmp	.-8      	; 0x2130 <USART_0_write>
		;
	USART3.TXDATAL = data;
    2138:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
    213c:	08 95       	ret

0000213e <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
    213e:	0e 94 98 10 	call	0x2130	; 0x2130 <USART_0_write>
	return 0;
}
    2142:	80 e0       	ldi	r24, 0x00	; 0
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	08 95       	ret

00002148 <ZCD_Rising_init>:
 * \return Initialization status.
 */
int8_t ZCD_Rising_init()
{

	ZCD0.CTRLA = 1 << ZCD_ENABLE_bp     /* Setting: enabled */
    2148:	e0 ec       	ldi	r30, 0xC0	; 192
    214a:	f6 e0       	ldi	r31, 0x06	; 6
    214c:	81 e0       	ldi	r24, 0x01	; 1
    214e:	80 83       	st	Z, r24
	             | 0 << ZCD_OUTEN_bp    /* Setting: disabled */
	             | 0 << ZCD_RUNSTDBY_bp /* Setting: disabled */
	             | 0 << ZCD_INVERT_bp;  /* Setting: disabled */

	ZCD0.INTCTRL = ZCD_INTMODE_RISING_gc; /* Interrupt on rising input signal */
    2150:	82 83       	std	Z+2, r24	; 0x02

	return 0;
}
    2152:	80 e0       	ldi	r24, 0x00	; 0
    2154:	08 95       	ret

00002156 <ZCD_Falling_init>:
 * \return Initialization status.
 */
int8_t ZCD_Falling_init()
{

	ZCD1.CTRLA = 1 << ZCD_ENABLE_bp     /* Setting: enabled */
    2156:	e8 ec       	ldi	r30, 0xC8	; 200
    2158:	f6 e0       	ldi	r31, 0x06	; 6
    215a:	81 e0       	ldi	r24, 0x01	; 1
    215c:	80 83       	st	Z, r24
	             | 0 << ZCD_OUTEN_bp    /* Setting: disabled */
	             | 0 << ZCD_RUNSTDBY_bp /* Setting: disabled */
	             | 0 << ZCD_INVERT_bp;  /* Setting: disabled */

	ZCD1.INTCTRL = ZCD_INTMODE_FALLING_gc; /* Interrupt on falling input signal */
    215e:	82 e0       	ldi	r24, 0x02	; 2
    2160:	82 83       	std	Z+2, r24	; 0x02

	return 0;
}
    2162:	80 e0       	ldi	r24, 0x00	; 0
    2164:	08 95       	ret

00002166 <BOD_init>:
int8_t BOD_init()
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    2166:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7e00a9>
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    216a:	80 e0       	ldi	r24, 0x00	; 0
    216c:	08 95       	ret

0000216e <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    216e:	45 e8       	ldi	r20, 0x85	; 133
    2170:	68 ed       	ldi	r22, 0xD8	; 216
    2172:	8c e7       	ldi	r24, 0x7C	; 124
    2174:	90 e0       	ldi	r25, 0x00	; 0
    2176:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <protected_write_io>
    217a:	41 e8       	ldi	r20, 0x81	; 129
    217c:	68 ed       	ldi	r22, 0xD8	; 216
    217e:	80 e7       	ldi	r24, 0x70	; 112
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <protected_write_io>
    2186:	4c e0       	ldi	r20, 0x0C	; 12
    2188:	68 ed       	ldi	r22, 0xD8	; 216
    218a:	80 e8       	ldi	r24, 0x80	; 128
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <protected_write_io>
    2192:	44 e2       	ldi	r20, 0x24	; 36
    2194:	68 ed       	ldi	r22, 0xD8	; 216
    2196:	88 e6       	ldi	r24, 0x68	; 104
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <protected_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);


	return 0;
}
    219e:	80 e0       	ldi	r24, 0x00	; 0
    21a0:	08 95       	ret

000021a2 <CPUINT_init>:
	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	return 0;
}
    21a2:	80 e0       	ldi	r24, 0x00	; 0
    21a4:	08 95       	ret

000021a6 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    21a6:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    21a8:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    21aa:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    21ac:	40 83       	st	Z, r20
	ret                             // Return to caller
    21ae:	08 95       	ret

000021b0 <vfprintf>:
    21b0:	2f 92       	push	r2
    21b2:	3f 92       	push	r3
    21b4:	4f 92       	push	r4
    21b6:	5f 92       	push	r5
    21b8:	6f 92       	push	r6
    21ba:	7f 92       	push	r7
    21bc:	8f 92       	push	r8
    21be:	9f 92       	push	r9
    21c0:	af 92       	push	r10
    21c2:	bf 92       	push	r11
    21c4:	cf 92       	push	r12
    21c6:	df 92       	push	r13
    21c8:	ef 92       	push	r14
    21ca:	ff 92       	push	r15
    21cc:	0f 93       	push	r16
    21ce:	1f 93       	push	r17
    21d0:	cf 93       	push	r28
    21d2:	df 93       	push	r29
    21d4:	cd b7       	in	r28, 0x3d	; 61
    21d6:	de b7       	in	r29, 0x3e	; 62
    21d8:	60 97       	sbiw	r28, 0x10	; 16
    21da:	cd bf       	out	0x3d, r28	; 61
    21dc:	de bf       	out	0x3e, r29	; 62
    21de:	7c 01       	movw	r14, r24
    21e0:	1b 01       	movw	r2, r22
    21e2:	6a 01       	movw	r12, r20
    21e4:	fc 01       	movw	r30, r24
    21e6:	16 82       	std	Z+6, r1	; 0x06
    21e8:	17 82       	std	Z+7, r1	; 0x07
    21ea:	83 81       	ldd	r24, Z+3	; 0x03
    21ec:	81 ff       	sbrs	r24, 1
    21ee:	44 c3       	rjmp	.+1672   	; 0x2878 <vfprintf+0x6c8>
    21f0:	9e 01       	movw	r18, r28
    21f2:	2f 5f       	subi	r18, 0xFF	; 255
    21f4:	3f 4f       	sbci	r19, 0xFF	; 255
    21f6:	39 01       	movw	r6, r18
    21f8:	f7 01       	movw	r30, r14
    21fa:	93 81       	ldd	r25, Z+3	; 0x03
    21fc:	f1 01       	movw	r30, r2
    21fe:	93 fd       	sbrc	r25, 3
    2200:	85 91       	lpm	r24, Z+
    2202:	93 ff       	sbrs	r25, 3
    2204:	81 91       	ld	r24, Z+
    2206:	1f 01       	movw	r2, r30
    2208:	88 23       	and	r24, r24
    220a:	09 f4       	brne	.+2      	; 0x220e <vfprintf+0x5e>
    220c:	31 c3       	rjmp	.+1634   	; 0x2870 <vfprintf+0x6c0>
    220e:	85 32       	cpi	r24, 0x25	; 37
    2210:	39 f4       	brne	.+14     	; 0x2220 <vfprintf+0x70>
    2212:	93 fd       	sbrc	r25, 3
    2214:	85 91       	lpm	r24, Z+
    2216:	93 ff       	sbrs	r25, 3
    2218:	81 91       	ld	r24, Z+
    221a:	1f 01       	movw	r2, r30
    221c:	85 32       	cpi	r24, 0x25	; 37
    221e:	39 f4       	brne	.+14     	; 0x222e <vfprintf+0x7e>
    2220:	b7 01       	movw	r22, r14
    2222:	90 e0       	ldi	r25, 0x00	; 0
    2224:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2228:	56 01       	movw	r10, r12
    222a:	65 01       	movw	r12, r10
    222c:	e5 cf       	rjmp	.-54     	; 0x21f8 <vfprintf+0x48>
    222e:	10 e0       	ldi	r17, 0x00	; 0
    2230:	51 2c       	mov	r5, r1
    2232:	91 2c       	mov	r9, r1
    2234:	ff e1       	ldi	r31, 0x1F	; 31
    2236:	f9 15       	cp	r31, r9
    2238:	d8 f0       	brcs	.+54     	; 0x2270 <vfprintf+0xc0>
    223a:	8b 32       	cpi	r24, 0x2B	; 43
    223c:	79 f0       	breq	.+30     	; 0x225c <vfprintf+0xac>
    223e:	38 f4       	brcc	.+14     	; 0x224e <vfprintf+0x9e>
    2240:	80 32       	cpi	r24, 0x20	; 32
    2242:	79 f0       	breq	.+30     	; 0x2262 <vfprintf+0xb2>
    2244:	83 32       	cpi	r24, 0x23	; 35
    2246:	a1 f4       	brne	.+40     	; 0x2270 <vfprintf+0xc0>
    2248:	f9 2d       	mov	r31, r9
    224a:	f0 61       	ori	r31, 0x10	; 16
    224c:	2e c0       	rjmp	.+92     	; 0x22aa <vfprintf+0xfa>
    224e:	8d 32       	cpi	r24, 0x2D	; 45
    2250:	61 f0       	breq	.+24     	; 0x226a <vfprintf+0xba>
    2252:	80 33       	cpi	r24, 0x30	; 48
    2254:	69 f4       	brne	.+26     	; 0x2270 <vfprintf+0xc0>
    2256:	29 2d       	mov	r18, r9
    2258:	21 60       	ori	r18, 0x01	; 1
    225a:	2d c0       	rjmp	.+90     	; 0x22b6 <vfprintf+0x106>
    225c:	39 2d       	mov	r19, r9
    225e:	32 60       	ori	r19, 0x02	; 2
    2260:	93 2e       	mov	r9, r19
    2262:	89 2d       	mov	r24, r9
    2264:	84 60       	ori	r24, 0x04	; 4
    2266:	98 2e       	mov	r9, r24
    2268:	2a c0       	rjmp	.+84     	; 0x22be <vfprintf+0x10e>
    226a:	e9 2d       	mov	r30, r9
    226c:	e8 60       	ori	r30, 0x08	; 8
    226e:	15 c0       	rjmp	.+42     	; 0x229a <vfprintf+0xea>
    2270:	97 fc       	sbrc	r9, 7
    2272:	2d c0       	rjmp	.+90     	; 0x22ce <vfprintf+0x11e>
    2274:	20 ed       	ldi	r18, 0xD0	; 208
    2276:	28 0f       	add	r18, r24
    2278:	2a 30       	cpi	r18, 0x0A	; 10
    227a:	88 f4       	brcc	.+34     	; 0x229e <vfprintf+0xee>
    227c:	96 fe       	sbrs	r9, 6
    227e:	06 c0       	rjmp	.+12     	; 0x228c <vfprintf+0xdc>
    2280:	3a e0       	ldi	r19, 0x0A	; 10
    2282:	13 9f       	mul	r17, r19
    2284:	20 0d       	add	r18, r0
    2286:	11 24       	eor	r1, r1
    2288:	12 2f       	mov	r17, r18
    228a:	19 c0       	rjmp	.+50     	; 0x22be <vfprintf+0x10e>
    228c:	8a e0       	ldi	r24, 0x0A	; 10
    228e:	58 9e       	mul	r5, r24
    2290:	20 0d       	add	r18, r0
    2292:	11 24       	eor	r1, r1
    2294:	52 2e       	mov	r5, r18
    2296:	e9 2d       	mov	r30, r9
    2298:	e0 62       	ori	r30, 0x20	; 32
    229a:	9e 2e       	mov	r9, r30
    229c:	10 c0       	rjmp	.+32     	; 0x22be <vfprintf+0x10e>
    229e:	8e 32       	cpi	r24, 0x2E	; 46
    22a0:	31 f4       	brne	.+12     	; 0x22ae <vfprintf+0xfe>
    22a2:	96 fc       	sbrc	r9, 6
    22a4:	e5 c2       	rjmp	.+1482   	; 0x2870 <vfprintf+0x6c0>
    22a6:	f9 2d       	mov	r31, r9
    22a8:	f0 64       	ori	r31, 0x40	; 64
    22aa:	9f 2e       	mov	r9, r31
    22ac:	08 c0       	rjmp	.+16     	; 0x22be <vfprintf+0x10e>
    22ae:	8c 36       	cpi	r24, 0x6C	; 108
    22b0:	21 f4       	brne	.+8      	; 0x22ba <vfprintf+0x10a>
    22b2:	29 2d       	mov	r18, r9
    22b4:	20 68       	ori	r18, 0x80	; 128
    22b6:	92 2e       	mov	r9, r18
    22b8:	02 c0       	rjmp	.+4      	; 0x22be <vfprintf+0x10e>
    22ba:	88 36       	cpi	r24, 0x68	; 104
    22bc:	41 f4       	brne	.+16     	; 0x22ce <vfprintf+0x11e>
    22be:	f1 01       	movw	r30, r2
    22c0:	93 fd       	sbrc	r25, 3
    22c2:	85 91       	lpm	r24, Z+
    22c4:	93 ff       	sbrs	r25, 3
    22c6:	81 91       	ld	r24, Z+
    22c8:	1f 01       	movw	r2, r30
    22ca:	81 11       	cpse	r24, r1
    22cc:	b3 cf       	rjmp	.-154    	; 0x2234 <vfprintf+0x84>
    22ce:	9b eb       	ldi	r25, 0xBB	; 187
    22d0:	98 0f       	add	r25, r24
    22d2:	93 30       	cpi	r25, 0x03	; 3
    22d4:	20 f4       	brcc	.+8      	; 0x22de <vfprintf+0x12e>
    22d6:	99 2d       	mov	r25, r9
    22d8:	90 61       	ori	r25, 0x10	; 16
    22da:	80 5e       	subi	r24, 0xE0	; 224
    22dc:	07 c0       	rjmp	.+14     	; 0x22ec <vfprintf+0x13c>
    22de:	9b e9       	ldi	r25, 0x9B	; 155
    22e0:	98 0f       	add	r25, r24
    22e2:	93 30       	cpi	r25, 0x03	; 3
    22e4:	08 f0       	brcs	.+2      	; 0x22e8 <vfprintf+0x138>
    22e6:	66 c1       	rjmp	.+716    	; 0x25b4 <vfprintf+0x404>
    22e8:	99 2d       	mov	r25, r9
    22ea:	9f 7e       	andi	r25, 0xEF	; 239
    22ec:	96 ff       	sbrs	r25, 6
    22ee:	16 e0       	ldi	r17, 0x06	; 6
    22f0:	9f 73       	andi	r25, 0x3F	; 63
    22f2:	99 2e       	mov	r9, r25
    22f4:	85 36       	cpi	r24, 0x65	; 101
    22f6:	19 f4       	brne	.+6      	; 0x22fe <vfprintf+0x14e>
    22f8:	90 64       	ori	r25, 0x40	; 64
    22fa:	99 2e       	mov	r9, r25
    22fc:	08 c0       	rjmp	.+16     	; 0x230e <vfprintf+0x15e>
    22fe:	86 36       	cpi	r24, 0x66	; 102
    2300:	21 f4       	brne	.+8      	; 0x230a <vfprintf+0x15a>
    2302:	39 2f       	mov	r19, r25
    2304:	30 68       	ori	r19, 0x80	; 128
    2306:	93 2e       	mov	r9, r19
    2308:	02 c0       	rjmp	.+4      	; 0x230e <vfprintf+0x15e>
    230a:	11 11       	cpse	r17, r1
    230c:	11 50       	subi	r17, 0x01	; 1
    230e:	97 fe       	sbrs	r9, 7
    2310:	07 c0       	rjmp	.+14     	; 0x2320 <vfprintf+0x170>
    2312:	1c 33       	cpi	r17, 0x3C	; 60
    2314:	50 f4       	brcc	.+20     	; 0x232a <vfprintf+0x17a>
    2316:	44 24       	eor	r4, r4
    2318:	43 94       	inc	r4
    231a:	41 0e       	add	r4, r17
    231c:	27 e0       	ldi	r18, 0x07	; 7
    231e:	0b c0       	rjmp	.+22     	; 0x2336 <vfprintf+0x186>
    2320:	18 30       	cpi	r17, 0x08	; 8
    2322:	38 f0       	brcs	.+14     	; 0x2332 <vfprintf+0x182>
    2324:	27 e0       	ldi	r18, 0x07	; 7
    2326:	17 e0       	ldi	r17, 0x07	; 7
    2328:	05 c0       	rjmp	.+10     	; 0x2334 <vfprintf+0x184>
    232a:	27 e0       	ldi	r18, 0x07	; 7
    232c:	9c e3       	ldi	r25, 0x3C	; 60
    232e:	49 2e       	mov	r4, r25
    2330:	02 c0       	rjmp	.+4      	; 0x2336 <vfprintf+0x186>
    2332:	21 2f       	mov	r18, r17
    2334:	41 2c       	mov	r4, r1
    2336:	56 01       	movw	r10, r12
    2338:	84 e0       	ldi	r24, 0x04	; 4
    233a:	a8 0e       	add	r10, r24
    233c:	b1 1c       	adc	r11, r1
    233e:	f6 01       	movw	r30, r12
    2340:	60 81       	ld	r22, Z
    2342:	71 81       	ldd	r23, Z+1	; 0x01
    2344:	82 81       	ldd	r24, Z+2	; 0x02
    2346:	93 81       	ldd	r25, Z+3	; 0x03
    2348:	04 2d       	mov	r16, r4
    234a:	a3 01       	movw	r20, r6
    234c:	0e 94 c2 14 	call	0x2984	; 0x2984 <__ftoa_engine>
    2350:	6c 01       	movw	r12, r24
    2352:	f9 81       	ldd	r31, Y+1	; 0x01
    2354:	fc 87       	std	Y+12, r31	; 0x0c
    2356:	f0 ff       	sbrs	r31, 0
    2358:	02 c0       	rjmp	.+4      	; 0x235e <vfprintf+0x1ae>
    235a:	f3 ff       	sbrs	r31, 3
    235c:	06 c0       	rjmp	.+12     	; 0x236a <vfprintf+0x1ba>
    235e:	91 fc       	sbrc	r9, 1
    2360:	06 c0       	rjmp	.+12     	; 0x236e <vfprintf+0x1be>
    2362:	92 fe       	sbrs	r9, 2
    2364:	06 c0       	rjmp	.+12     	; 0x2372 <vfprintf+0x1c2>
    2366:	00 e2       	ldi	r16, 0x20	; 32
    2368:	05 c0       	rjmp	.+10     	; 0x2374 <vfprintf+0x1c4>
    236a:	0d e2       	ldi	r16, 0x2D	; 45
    236c:	03 c0       	rjmp	.+6      	; 0x2374 <vfprintf+0x1c4>
    236e:	0b e2       	ldi	r16, 0x2B	; 43
    2370:	01 c0       	rjmp	.+2      	; 0x2374 <vfprintf+0x1c4>
    2372:	00 e0       	ldi	r16, 0x00	; 0
    2374:	8c 85       	ldd	r24, Y+12	; 0x0c
    2376:	8c 70       	andi	r24, 0x0C	; 12
    2378:	19 f0       	breq	.+6      	; 0x2380 <vfprintf+0x1d0>
    237a:	01 11       	cpse	r16, r1
    237c:	5a c2       	rjmp	.+1204   	; 0x2832 <vfprintf+0x682>
    237e:	9b c2       	rjmp	.+1334   	; 0x28b6 <vfprintf+0x706>
    2380:	97 fe       	sbrs	r9, 7
    2382:	10 c0       	rjmp	.+32     	; 0x23a4 <vfprintf+0x1f4>
    2384:	4c 0c       	add	r4, r12
    2386:	fc 85       	ldd	r31, Y+12	; 0x0c
    2388:	f4 ff       	sbrs	r31, 4
    238a:	04 c0       	rjmp	.+8      	; 0x2394 <vfprintf+0x1e4>
    238c:	8a 81       	ldd	r24, Y+2	; 0x02
    238e:	81 33       	cpi	r24, 0x31	; 49
    2390:	09 f4       	brne	.+2      	; 0x2394 <vfprintf+0x1e4>
    2392:	4a 94       	dec	r4
    2394:	14 14       	cp	r1, r4
    2396:	74 f5       	brge	.+92     	; 0x23f4 <vfprintf+0x244>
    2398:	28 e0       	ldi	r18, 0x08	; 8
    239a:	24 15       	cp	r18, r4
    239c:	78 f5       	brcc	.+94     	; 0x23fc <vfprintf+0x24c>
    239e:	88 e0       	ldi	r24, 0x08	; 8
    23a0:	48 2e       	mov	r4, r24
    23a2:	2c c0       	rjmp	.+88     	; 0x23fc <vfprintf+0x24c>
    23a4:	96 fc       	sbrc	r9, 6
    23a6:	2a c0       	rjmp	.+84     	; 0x23fc <vfprintf+0x24c>
    23a8:	81 2f       	mov	r24, r17
    23aa:	90 e0       	ldi	r25, 0x00	; 0
    23ac:	8c 15       	cp	r24, r12
    23ae:	9d 05       	cpc	r25, r13
    23b0:	9c f0       	brlt	.+38     	; 0x23d8 <vfprintf+0x228>
    23b2:	3c ef       	ldi	r19, 0xFC	; 252
    23b4:	c3 16       	cp	r12, r19
    23b6:	3f ef       	ldi	r19, 0xFF	; 255
    23b8:	d3 06       	cpc	r13, r19
    23ba:	74 f0       	brlt	.+28     	; 0x23d8 <vfprintf+0x228>
    23bc:	89 2d       	mov	r24, r9
    23be:	80 68       	ori	r24, 0x80	; 128
    23c0:	98 2e       	mov	r9, r24
    23c2:	0a c0       	rjmp	.+20     	; 0x23d8 <vfprintf+0x228>
    23c4:	e2 e0       	ldi	r30, 0x02	; 2
    23c6:	f0 e0       	ldi	r31, 0x00	; 0
    23c8:	ec 0f       	add	r30, r28
    23ca:	fd 1f       	adc	r31, r29
    23cc:	e1 0f       	add	r30, r17
    23ce:	f1 1d       	adc	r31, r1
    23d0:	80 81       	ld	r24, Z
    23d2:	80 33       	cpi	r24, 0x30	; 48
    23d4:	19 f4       	brne	.+6      	; 0x23dc <vfprintf+0x22c>
    23d6:	11 50       	subi	r17, 0x01	; 1
    23d8:	11 11       	cpse	r17, r1
    23da:	f4 cf       	rjmp	.-24     	; 0x23c4 <vfprintf+0x214>
    23dc:	97 fe       	sbrs	r9, 7
    23de:	0e c0       	rjmp	.+28     	; 0x23fc <vfprintf+0x24c>
    23e0:	44 24       	eor	r4, r4
    23e2:	43 94       	inc	r4
    23e4:	41 0e       	add	r4, r17
    23e6:	81 2f       	mov	r24, r17
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	c8 16       	cp	r12, r24
    23ec:	d9 06       	cpc	r13, r25
    23ee:	2c f4       	brge	.+10     	; 0x23fa <vfprintf+0x24a>
    23f0:	1c 19       	sub	r17, r12
    23f2:	04 c0       	rjmp	.+8      	; 0x23fc <vfprintf+0x24c>
    23f4:	44 24       	eor	r4, r4
    23f6:	43 94       	inc	r4
    23f8:	01 c0       	rjmp	.+2      	; 0x23fc <vfprintf+0x24c>
    23fa:	10 e0       	ldi	r17, 0x00	; 0
    23fc:	97 fe       	sbrs	r9, 7
    23fe:	06 c0       	rjmp	.+12     	; 0x240c <vfprintf+0x25c>
    2400:	1c 14       	cp	r1, r12
    2402:	1d 04       	cpc	r1, r13
    2404:	34 f4       	brge	.+12     	; 0x2412 <vfprintf+0x262>
    2406:	c6 01       	movw	r24, r12
    2408:	01 96       	adiw	r24, 0x01	; 1
    240a:	05 c0       	rjmp	.+10     	; 0x2416 <vfprintf+0x266>
    240c:	85 e0       	ldi	r24, 0x05	; 5
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	02 c0       	rjmp	.+4      	; 0x2416 <vfprintf+0x266>
    2412:	81 e0       	ldi	r24, 0x01	; 1
    2414:	90 e0       	ldi	r25, 0x00	; 0
    2416:	01 11       	cpse	r16, r1
    2418:	01 96       	adiw	r24, 0x01	; 1
    241a:	11 23       	and	r17, r17
    241c:	31 f0       	breq	.+12     	; 0x242a <vfprintf+0x27a>
    241e:	21 2f       	mov	r18, r17
    2420:	30 e0       	ldi	r19, 0x00	; 0
    2422:	2f 5f       	subi	r18, 0xFF	; 255
    2424:	3f 4f       	sbci	r19, 0xFF	; 255
    2426:	82 0f       	add	r24, r18
    2428:	93 1f       	adc	r25, r19
    242a:	25 2d       	mov	r18, r5
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	82 17       	cp	r24, r18
    2430:	93 07       	cpc	r25, r19
    2432:	14 f4       	brge	.+4      	; 0x2438 <vfprintf+0x288>
    2434:	58 1a       	sub	r5, r24
    2436:	01 c0       	rjmp	.+2      	; 0x243a <vfprintf+0x28a>
    2438:	51 2c       	mov	r5, r1
    243a:	89 2d       	mov	r24, r9
    243c:	89 70       	andi	r24, 0x09	; 9
    243e:	49 f4       	brne	.+18     	; 0x2452 <vfprintf+0x2a2>
    2440:	55 20       	and	r5, r5
    2442:	39 f0       	breq	.+14     	; 0x2452 <vfprintf+0x2a2>
    2444:	b7 01       	movw	r22, r14
    2446:	80 e2       	ldi	r24, 0x20	; 32
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    244e:	5a 94       	dec	r5
    2450:	f7 cf       	rjmp	.-18     	; 0x2440 <vfprintf+0x290>
    2452:	00 23       	and	r16, r16
    2454:	29 f0       	breq	.+10     	; 0x2460 <vfprintf+0x2b0>
    2456:	b7 01       	movw	r22, r14
    2458:	80 2f       	mov	r24, r16
    245a:	90 e0       	ldi	r25, 0x00	; 0
    245c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2460:	93 fc       	sbrc	r9, 3
    2462:	09 c0       	rjmp	.+18     	; 0x2476 <vfprintf+0x2c6>
    2464:	55 20       	and	r5, r5
    2466:	39 f0       	breq	.+14     	; 0x2476 <vfprintf+0x2c6>
    2468:	b7 01       	movw	r22, r14
    246a:	80 e3       	ldi	r24, 0x30	; 48
    246c:	90 e0       	ldi	r25, 0x00	; 0
    246e:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2472:	5a 94       	dec	r5
    2474:	f7 cf       	rjmp	.-18     	; 0x2464 <vfprintf+0x2b4>
    2476:	97 fe       	sbrs	r9, 7
    2478:	4c c0       	rjmp	.+152    	; 0x2512 <vfprintf+0x362>
    247a:	46 01       	movw	r8, r12
    247c:	d7 fe       	sbrs	r13, 7
    247e:	02 c0       	rjmp	.+4      	; 0x2484 <vfprintf+0x2d4>
    2480:	81 2c       	mov	r8, r1
    2482:	91 2c       	mov	r9, r1
    2484:	c6 01       	movw	r24, r12
    2486:	88 19       	sub	r24, r8
    2488:	99 09       	sbc	r25, r9
    248a:	f3 01       	movw	r30, r6
    248c:	e8 0f       	add	r30, r24
    248e:	f9 1f       	adc	r31, r25
    2490:	ed 87       	std	Y+13, r30	; 0x0d
    2492:	fe 87       	std	Y+14, r31	; 0x0e
    2494:	96 01       	movw	r18, r12
    2496:	24 19       	sub	r18, r4
    2498:	31 09       	sbc	r19, r1
    249a:	2f 87       	std	Y+15, r18	; 0x0f
    249c:	38 8b       	std	Y+16, r19	; 0x10
    249e:	01 2f       	mov	r16, r17
    24a0:	10 e0       	ldi	r17, 0x00	; 0
    24a2:	11 95       	neg	r17
    24a4:	01 95       	neg	r16
    24a6:	11 09       	sbc	r17, r1
    24a8:	3f ef       	ldi	r19, 0xFF	; 255
    24aa:	83 16       	cp	r8, r19
    24ac:	93 06       	cpc	r9, r19
    24ae:	29 f4       	brne	.+10     	; 0x24ba <vfprintf+0x30a>
    24b0:	b7 01       	movw	r22, r14
    24b2:	8e e2       	ldi	r24, 0x2E	; 46
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    24ba:	c8 14       	cp	r12, r8
    24bc:	d9 04       	cpc	r13, r9
    24be:	4c f0       	brlt	.+18     	; 0x24d2 <vfprintf+0x322>
    24c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    24c2:	98 89       	ldd	r25, Y+16	; 0x10
    24c4:	88 15       	cp	r24, r8
    24c6:	99 05       	cpc	r25, r9
    24c8:	24 f4       	brge	.+8      	; 0x24d2 <vfprintf+0x322>
    24ca:	ed 85       	ldd	r30, Y+13	; 0x0d
    24cc:	fe 85       	ldd	r31, Y+14	; 0x0e
    24ce:	81 81       	ldd	r24, Z+1	; 0x01
    24d0:	01 c0       	rjmp	.+2      	; 0x24d4 <vfprintf+0x324>
    24d2:	80 e3       	ldi	r24, 0x30	; 48
    24d4:	f1 e0       	ldi	r31, 0x01	; 1
    24d6:	8f 1a       	sub	r8, r31
    24d8:	91 08       	sbc	r9, r1
    24da:	2d 85       	ldd	r18, Y+13	; 0x0d
    24dc:	3e 85       	ldd	r19, Y+14	; 0x0e
    24de:	2f 5f       	subi	r18, 0xFF	; 255
    24e0:	3f 4f       	sbci	r19, 0xFF	; 255
    24e2:	2d 87       	std	Y+13, r18	; 0x0d
    24e4:	3e 87       	std	Y+14, r19	; 0x0e
    24e6:	80 16       	cp	r8, r16
    24e8:	91 06       	cpc	r9, r17
    24ea:	2c f0       	brlt	.+10     	; 0x24f6 <vfprintf+0x346>
    24ec:	b7 01       	movw	r22, r14
    24ee:	90 e0       	ldi	r25, 0x00	; 0
    24f0:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    24f4:	d9 cf       	rjmp	.-78     	; 0x24a8 <vfprintf+0x2f8>
    24f6:	c8 14       	cp	r12, r8
    24f8:	d9 04       	cpc	r13, r9
    24fa:	41 f4       	brne	.+16     	; 0x250c <vfprintf+0x35c>
    24fc:	9a 81       	ldd	r25, Y+2	; 0x02
    24fe:	96 33       	cpi	r25, 0x36	; 54
    2500:	20 f4       	brcc	.+8      	; 0x250a <vfprintf+0x35a>
    2502:	95 33       	cpi	r25, 0x35	; 53
    2504:	19 f4       	brne	.+6      	; 0x250c <vfprintf+0x35c>
    2506:	3c 85       	ldd	r19, Y+12	; 0x0c
    2508:	34 ff       	sbrs	r19, 4
    250a:	81 e3       	ldi	r24, 0x31	; 49
    250c:	b7 01       	movw	r22, r14
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	4e c0       	rjmp	.+156    	; 0x25ae <vfprintf+0x3fe>
    2512:	8a 81       	ldd	r24, Y+2	; 0x02
    2514:	81 33       	cpi	r24, 0x31	; 49
    2516:	19 f0       	breq	.+6      	; 0x251e <vfprintf+0x36e>
    2518:	9c 85       	ldd	r25, Y+12	; 0x0c
    251a:	9f 7e       	andi	r25, 0xEF	; 239
    251c:	9c 87       	std	Y+12, r25	; 0x0c
    251e:	b7 01       	movw	r22, r14
    2520:	90 e0       	ldi	r25, 0x00	; 0
    2522:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2526:	11 11       	cpse	r17, r1
    2528:	05 c0       	rjmp	.+10     	; 0x2534 <vfprintf+0x384>
    252a:	94 fc       	sbrc	r9, 4
    252c:	18 c0       	rjmp	.+48     	; 0x255e <vfprintf+0x3ae>
    252e:	85 e6       	ldi	r24, 0x65	; 101
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	17 c0       	rjmp	.+46     	; 0x2562 <vfprintf+0x3b2>
    2534:	b7 01       	movw	r22, r14
    2536:	8e e2       	ldi	r24, 0x2E	; 46
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    253e:	1e 5f       	subi	r17, 0xFE	; 254
    2540:	82 e0       	ldi	r24, 0x02	; 2
    2542:	01 e0       	ldi	r16, 0x01	; 1
    2544:	08 0f       	add	r16, r24
    2546:	f3 01       	movw	r30, r6
    2548:	e8 0f       	add	r30, r24
    254a:	f1 1d       	adc	r31, r1
    254c:	80 81       	ld	r24, Z
    254e:	b7 01       	movw	r22, r14
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2556:	80 2f       	mov	r24, r16
    2558:	01 13       	cpse	r16, r17
    255a:	f3 cf       	rjmp	.-26     	; 0x2542 <vfprintf+0x392>
    255c:	e6 cf       	rjmp	.-52     	; 0x252a <vfprintf+0x37a>
    255e:	85 e4       	ldi	r24, 0x45	; 69
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	b7 01       	movw	r22, r14
    2564:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2568:	d7 fc       	sbrc	r13, 7
    256a:	06 c0       	rjmp	.+12     	; 0x2578 <vfprintf+0x3c8>
    256c:	c1 14       	cp	r12, r1
    256e:	d1 04       	cpc	r13, r1
    2570:	41 f4       	brne	.+16     	; 0x2582 <vfprintf+0x3d2>
    2572:	ec 85       	ldd	r30, Y+12	; 0x0c
    2574:	e4 ff       	sbrs	r30, 4
    2576:	05 c0       	rjmp	.+10     	; 0x2582 <vfprintf+0x3d2>
    2578:	d1 94       	neg	r13
    257a:	c1 94       	neg	r12
    257c:	d1 08       	sbc	r13, r1
    257e:	8d e2       	ldi	r24, 0x2D	; 45
    2580:	01 c0       	rjmp	.+2      	; 0x2584 <vfprintf+0x3d4>
    2582:	8b e2       	ldi	r24, 0x2B	; 43
    2584:	b7 01       	movw	r22, r14
    2586:	90 e0       	ldi	r25, 0x00	; 0
    2588:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    258c:	80 e3       	ldi	r24, 0x30	; 48
    258e:	2a e0       	ldi	r18, 0x0A	; 10
    2590:	c2 16       	cp	r12, r18
    2592:	d1 04       	cpc	r13, r1
    2594:	2c f0       	brlt	.+10     	; 0x25a0 <vfprintf+0x3f0>
    2596:	8f 5f       	subi	r24, 0xFF	; 255
    2598:	fa e0       	ldi	r31, 0x0A	; 10
    259a:	cf 1a       	sub	r12, r31
    259c:	d1 08       	sbc	r13, r1
    259e:	f7 cf       	rjmp	.-18     	; 0x258e <vfprintf+0x3de>
    25a0:	b7 01       	movw	r22, r14
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    25a8:	b7 01       	movw	r22, r14
    25aa:	c6 01       	movw	r24, r12
    25ac:	c0 96       	adiw	r24, 0x30	; 48
    25ae:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    25b2:	54 c1       	rjmp	.+680    	; 0x285c <vfprintf+0x6ac>
    25b4:	83 36       	cpi	r24, 0x63	; 99
    25b6:	31 f0       	breq	.+12     	; 0x25c4 <vfprintf+0x414>
    25b8:	83 37       	cpi	r24, 0x73	; 115
    25ba:	79 f0       	breq	.+30     	; 0x25da <vfprintf+0x42a>
    25bc:	83 35       	cpi	r24, 0x53	; 83
    25be:	09 f0       	breq	.+2      	; 0x25c2 <vfprintf+0x412>
    25c0:	56 c0       	rjmp	.+172    	; 0x266e <vfprintf+0x4be>
    25c2:	20 c0       	rjmp	.+64     	; 0x2604 <vfprintf+0x454>
    25c4:	56 01       	movw	r10, r12
    25c6:	32 e0       	ldi	r19, 0x02	; 2
    25c8:	a3 0e       	add	r10, r19
    25ca:	b1 1c       	adc	r11, r1
    25cc:	f6 01       	movw	r30, r12
    25ce:	80 81       	ld	r24, Z
    25d0:	89 83       	std	Y+1, r24	; 0x01
    25d2:	01 e0       	ldi	r16, 0x01	; 1
    25d4:	10 e0       	ldi	r17, 0x00	; 0
    25d6:	63 01       	movw	r12, r6
    25d8:	12 c0       	rjmp	.+36     	; 0x25fe <vfprintf+0x44e>
    25da:	56 01       	movw	r10, r12
    25dc:	f2 e0       	ldi	r31, 0x02	; 2
    25de:	af 0e       	add	r10, r31
    25e0:	b1 1c       	adc	r11, r1
    25e2:	f6 01       	movw	r30, r12
    25e4:	c0 80       	ld	r12, Z
    25e6:	d1 80       	ldd	r13, Z+1	; 0x01
    25e8:	96 fe       	sbrs	r9, 6
    25ea:	03 c0       	rjmp	.+6      	; 0x25f2 <vfprintf+0x442>
    25ec:	61 2f       	mov	r22, r17
    25ee:	70 e0       	ldi	r23, 0x00	; 0
    25f0:	02 c0       	rjmp	.+4      	; 0x25f6 <vfprintf+0x446>
    25f2:	6f ef       	ldi	r22, 0xFF	; 255
    25f4:	7f ef       	ldi	r23, 0xFF	; 255
    25f6:	c6 01       	movw	r24, r12
    25f8:	0e 94 a5 15 	call	0x2b4a	; 0x2b4a <strnlen>
    25fc:	8c 01       	movw	r16, r24
    25fe:	f9 2d       	mov	r31, r9
    2600:	ff 77       	andi	r31, 0x7F	; 127
    2602:	14 c0       	rjmp	.+40     	; 0x262c <vfprintf+0x47c>
    2604:	56 01       	movw	r10, r12
    2606:	22 e0       	ldi	r18, 0x02	; 2
    2608:	a2 0e       	add	r10, r18
    260a:	b1 1c       	adc	r11, r1
    260c:	f6 01       	movw	r30, r12
    260e:	c0 80       	ld	r12, Z
    2610:	d1 80       	ldd	r13, Z+1	; 0x01
    2612:	96 fe       	sbrs	r9, 6
    2614:	03 c0       	rjmp	.+6      	; 0x261c <vfprintf+0x46c>
    2616:	61 2f       	mov	r22, r17
    2618:	70 e0       	ldi	r23, 0x00	; 0
    261a:	02 c0       	rjmp	.+4      	; 0x2620 <vfprintf+0x470>
    261c:	6f ef       	ldi	r22, 0xFF	; 255
    261e:	7f ef       	ldi	r23, 0xFF	; 255
    2620:	c6 01       	movw	r24, r12
    2622:	0e 94 9a 15 	call	0x2b34	; 0x2b34 <strnlen_P>
    2626:	8c 01       	movw	r16, r24
    2628:	f9 2d       	mov	r31, r9
    262a:	f0 68       	ori	r31, 0x80	; 128
    262c:	9f 2e       	mov	r9, r31
    262e:	f3 fd       	sbrc	r31, 3
    2630:	1a c0       	rjmp	.+52     	; 0x2666 <vfprintf+0x4b6>
    2632:	85 2d       	mov	r24, r5
    2634:	90 e0       	ldi	r25, 0x00	; 0
    2636:	08 17       	cp	r16, r24
    2638:	19 07       	cpc	r17, r25
    263a:	a8 f4       	brcc	.+42     	; 0x2666 <vfprintf+0x4b6>
    263c:	b7 01       	movw	r22, r14
    263e:	80 e2       	ldi	r24, 0x20	; 32
    2640:	90 e0       	ldi	r25, 0x00	; 0
    2642:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2646:	5a 94       	dec	r5
    2648:	f4 cf       	rjmp	.-24     	; 0x2632 <vfprintf+0x482>
    264a:	f6 01       	movw	r30, r12
    264c:	97 fc       	sbrc	r9, 7
    264e:	85 91       	lpm	r24, Z+
    2650:	97 fe       	sbrs	r9, 7
    2652:	81 91       	ld	r24, Z+
    2654:	6f 01       	movw	r12, r30
    2656:	b7 01       	movw	r22, r14
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    265e:	51 10       	cpse	r5, r1
    2660:	5a 94       	dec	r5
    2662:	01 50       	subi	r16, 0x01	; 1
    2664:	11 09       	sbc	r17, r1
    2666:	01 15       	cp	r16, r1
    2668:	11 05       	cpc	r17, r1
    266a:	79 f7       	brne	.-34     	; 0x264a <vfprintf+0x49a>
    266c:	f7 c0       	rjmp	.+494    	; 0x285c <vfprintf+0x6ac>
    266e:	84 36       	cpi	r24, 0x64	; 100
    2670:	11 f0       	breq	.+4      	; 0x2676 <vfprintf+0x4c6>
    2672:	89 36       	cpi	r24, 0x69	; 105
    2674:	61 f5       	brne	.+88     	; 0x26ce <vfprintf+0x51e>
    2676:	56 01       	movw	r10, r12
    2678:	97 fe       	sbrs	r9, 7
    267a:	09 c0       	rjmp	.+18     	; 0x268e <vfprintf+0x4de>
    267c:	24 e0       	ldi	r18, 0x04	; 4
    267e:	a2 0e       	add	r10, r18
    2680:	b1 1c       	adc	r11, r1
    2682:	f6 01       	movw	r30, r12
    2684:	60 81       	ld	r22, Z
    2686:	71 81       	ldd	r23, Z+1	; 0x01
    2688:	82 81       	ldd	r24, Z+2	; 0x02
    268a:	93 81       	ldd	r25, Z+3	; 0x03
    268c:	0a c0       	rjmp	.+20     	; 0x26a2 <vfprintf+0x4f2>
    268e:	f2 e0       	ldi	r31, 0x02	; 2
    2690:	af 0e       	add	r10, r31
    2692:	b1 1c       	adc	r11, r1
    2694:	f6 01       	movw	r30, r12
    2696:	60 81       	ld	r22, Z
    2698:	71 81       	ldd	r23, Z+1	; 0x01
    269a:	07 2e       	mov	r0, r23
    269c:	00 0c       	add	r0, r0
    269e:	88 0b       	sbc	r24, r24
    26a0:	99 0b       	sbc	r25, r25
    26a2:	f9 2d       	mov	r31, r9
    26a4:	ff 76       	andi	r31, 0x6F	; 111
    26a6:	9f 2e       	mov	r9, r31
    26a8:	97 ff       	sbrs	r25, 7
    26aa:	09 c0       	rjmp	.+18     	; 0x26be <vfprintf+0x50e>
    26ac:	90 95       	com	r25
    26ae:	80 95       	com	r24
    26b0:	70 95       	com	r23
    26b2:	61 95       	neg	r22
    26b4:	7f 4f       	sbci	r23, 0xFF	; 255
    26b6:	8f 4f       	sbci	r24, 0xFF	; 255
    26b8:	9f 4f       	sbci	r25, 0xFF	; 255
    26ba:	f0 68       	ori	r31, 0x80	; 128
    26bc:	9f 2e       	mov	r9, r31
    26be:	2a e0       	ldi	r18, 0x0A	; 10
    26c0:	30 e0       	ldi	r19, 0x00	; 0
    26c2:	a3 01       	movw	r20, r6
    26c4:	0e 94 30 16 	call	0x2c60	; 0x2c60 <__ultoa_invert>
    26c8:	c8 2e       	mov	r12, r24
    26ca:	c6 18       	sub	r12, r6
    26cc:	3f c0       	rjmp	.+126    	; 0x274c <vfprintf+0x59c>
    26ce:	09 2d       	mov	r16, r9
    26d0:	85 37       	cpi	r24, 0x75	; 117
    26d2:	21 f4       	brne	.+8      	; 0x26dc <vfprintf+0x52c>
    26d4:	0f 7e       	andi	r16, 0xEF	; 239
    26d6:	2a e0       	ldi	r18, 0x0A	; 10
    26d8:	30 e0       	ldi	r19, 0x00	; 0
    26da:	1d c0       	rjmp	.+58     	; 0x2716 <vfprintf+0x566>
    26dc:	09 7f       	andi	r16, 0xF9	; 249
    26de:	8f 36       	cpi	r24, 0x6F	; 111
    26e0:	91 f0       	breq	.+36     	; 0x2706 <vfprintf+0x556>
    26e2:	18 f4       	brcc	.+6      	; 0x26ea <vfprintf+0x53a>
    26e4:	88 35       	cpi	r24, 0x58	; 88
    26e6:	59 f0       	breq	.+22     	; 0x26fe <vfprintf+0x54e>
    26e8:	c3 c0       	rjmp	.+390    	; 0x2870 <vfprintf+0x6c0>
    26ea:	80 37       	cpi	r24, 0x70	; 112
    26ec:	19 f0       	breq	.+6      	; 0x26f4 <vfprintf+0x544>
    26ee:	88 37       	cpi	r24, 0x78	; 120
    26f0:	11 f0       	breq	.+4      	; 0x26f6 <vfprintf+0x546>
    26f2:	be c0       	rjmp	.+380    	; 0x2870 <vfprintf+0x6c0>
    26f4:	00 61       	ori	r16, 0x10	; 16
    26f6:	04 ff       	sbrs	r16, 4
    26f8:	09 c0       	rjmp	.+18     	; 0x270c <vfprintf+0x55c>
    26fa:	04 60       	ori	r16, 0x04	; 4
    26fc:	07 c0       	rjmp	.+14     	; 0x270c <vfprintf+0x55c>
    26fe:	94 fe       	sbrs	r9, 4
    2700:	08 c0       	rjmp	.+16     	; 0x2712 <vfprintf+0x562>
    2702:	06 60       	ori	r16, 0x06	; 6
    2704:	06 c0       	rjmp	.+12     	; 0x2712 <vfprintf+0x562>
    2706:	28 e0       	ldi	r18, 0x08	; 8
    2708:	30 e0       	ldi	r19, 0x00	; 0
    270a:	05 c0       	rjmp	.+10     	; 0x2716 <vfprintf+0x566>
    270c:	20 e1       	ldi	r18, 0x10	; 16
    270e:	30 e0       	ldi	r19, 0x00	; 0
    2710:	02 c0       	rjmp	.+4      	; 0x2716 <vfprintf+0x566>
    2712:	20 e1       	ldi	r18, 0x10	; 16
    2714:	32 e0       	ldi	r19, 0x02	; 2
    2716:	56 01       	movw	r10, r12
    2718:	07 ff       	sbrs	r16, 7
    271a:	09 c0       	rjmp	.+18     	; 0x272e <vfprintf+0x57e>
    271c:	84 e0       	ldi	r24, 0x04	; 4
    271e:	a8 0e       	add	r10, r24
    2720:	b1 1c       	adc	r11, r1
    2722:	f6 01       	movw	r30, r12
    2724:	60 81       	ld	r22, Z
    2726:	71 81       	ldd	r23, Z+1	; 0x01
    2728:	82 81       	ldd	r24, Z+2	; 0x02
    272a:	93 81       	ldd	r25, Z+3	; 0x03
    272c:	08 c0       	rjmp	.+16     	; 0x273e <vfprintf+0x58e>
    272e:	f2 e0       	ldi	r31, 0x02	; 2
    2730:	af 0e       	add	r10, r31
    2732:	b1 1c       	adc	r11, r1
    2734:	f6 01       	movw	r30, r12
    2736:	60 81       	ld	r22, Z
    2738:	71 81       	ldd	r23, Z+1	; 0x01
    273a:	80 e0       	ldi	r24, 0x00	; 0
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	a3 01       	movw	r20, r6
    2740:	0e 94 30 16 	call	0x2c60	; 0x2c60 <__ultoa_invert>
    2744:	c8 2e       	mov	r12, r24
    2746:	c6 18       	sub	r12, r6
    2748:	0f 77       	andi	r16, 0x7F	; 127
    274a:	90 2e       	mov	r9, r16
    274c:	96 fe       	sbrs	r9, 6
    274e:	0b c0       	rjmp	.+22     	; 0x2766 <vfprintf+0x5b6>
    2750:	09 2d       	mov	r16, r9
    2752:	0e 7f       	andi	r16, 0xFE	; 254
    2754:	c1 16       	cp	r12, r17
    2756:	50 f4       	brcc	.+20     	; 0x276c <vfprintf+0x5bc>
    2758:	94 fe       	sbrs	r9, 4
    275a:	0a c0       	rjmp	.+20     	; 0x2770 <vfprintf+0x5c0>
    275c:	92 fc       	sbrc	r9, 2
    275e:	08 c0       	rjmp	.+16     	; 0x2770 <vfprintf+0x5c0>
    2760:	09 2d       	mov	r16, r9
    2762:	0e 7e       	andi	r16, 0xEE	; 238
    2764:	05 c0       	rjmp	.+10     	; 0x2770 <vfprintf+0x5c0>
    2766:	dc 2c       	mov	r13, r12
    2768:	09 2d       	mov	r16, r9
    276a:	03 c0       	rjmp	.+6      	; 0x2772 <vfprintf+0x5c2>
    276c:	dc 2c       	mov	r13, r12
    276e:	01 c0       	rjmp	.+2      	; 0x2772 <vfprintf+0x5c2>
    2770:	d1 2e       	mov	r13, r17
    2772:	04 ff       	sbrs	r16, 4
    2774:	0d c0       	rjmp	.+26     	; 0x2790 <vfprintf+0x5e0>
    2776:	fe 01       	movw	r30, r28
    2778:	ec 0d       	add	r30, r12
    277a:	f1 1d       	adc	r31, r1
    277c:	80 81       	ld	r24, Z
    277e:	80 33       	cpi	r24, 0x30	; 48
    2780:	11 f4       	brne	.+4      	; 0x2786 <vfprintf+0x5d6>
    2782:	09 7e       	andi	r16, 0xE9	; 233
    2784:	09 c0       	rjmp	.+18     	; 0x2798 <vfprintf+0x5e8>
    2786:	02 ff       	sbrs	r16, 2
    2788:	06 c0       	rjmp	.+12     	; 0x2796 <vfprintf+0x5e6>
    278a:	d3 94       	inc	r13
    278c:	d3 94       	inc	r13
    278e:	04 c0       	rjmp	.+8      	; 0x2798 <vfprintf+0x5e8>
    2790:	80 2f       	mov	r24, r16
    2792:	86 78       	andi	r24, 0x86	; 134
    2794:	09 f0       	breq	.+2      	; 0x2798 <vfprintf+0x5e8>
    2796:	d3 94       	inc	r13
    2798:	03 fd       	sbrc	r16, 3
    279a:	11 c0       	rjmp	.+34     	; 0x27be <vfprintf+0x60e>
    279c:	00 ff       	sbrs	r16, 0
    279e:	06 c0       	rjmp	.+12     	; 0x27ac <vfprintf+0x5fc>
    27a0:	1c 2d       	mov	r17, r12
    27a2:	d5 14       	cp	r13, r5
    27a4:	80 f4       	brcc	.+32     	; 0x27c6 <vfprintf+0x616>
    27a6:	15 0d       	add	r17, r5
    27a8:	1d 19       	sub	r17, r13
    27aa:	0d c0       	rjmp	.+26     	; 0x27c6 <vfprintf+0x616>
    27ac:	d5 14       	cp	r13, r5
    27ae:	58 f4       	brcc	.+22     	; 0x27c6 <vfprintf+0x616>
    27b0:	b7 01       	movw	r22, r14
    27b2:	80 e2       	ldi	r24, 0x20	; 32
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    27ba:	d3 94       	inc	r13
    27bc:	f7 cf       	rjmp	.-18     	; 0x27ac <vfprintf+0x5fc>
    27be:	d5 14       	cp	r13, r5
    27c0:	10 f4       	brcc	.+4      	; 0x27c6 <vfprintf+0x616>
    27c2:	5d 18       	sub	r5, r13
    27c4:	01 c0       	rjmp	.+2      	; 0x27c8 <vfprintf+0x618>
    27c6:	51 2c       	mov	r5, r1
    27c8:	04 ff       	sbrs	r16, 4
    27ca:	10 c0       	rjmp	.+32     	; 0x27ec <vfprintf+0x63c>
    27cc:	b7 01       	movw	r22, r14
    27ce:	80 e3       	ldi	r24, 0x30	; 48
    27d0:	90 e0       	ldi	r25, 0x00	; 0
    27d2:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    27d6:	02 ff       	sbrs	r16, 2
    27d8:	17 c0       	rjmp	.+46     	; 0x2808 <vfprintf+0x658>
    27da:	01 fd       	sbrc	r16, 1
    27dc:	03 c0       	rjmp	.+6      	; 0x27e4 <vfprintf+0x634>
    27de:	88 e7       	ldi	r24, 0x78	; 120
    27e0:	90 e0       	ldi	r25, 0x00	; 0
    27e2:	02 c0       	rjmp	.+4      	; 0x27e8 <vfprintf+0x638>
    27e4:	88 e5       	ldi	r24, 0x58	; 88
    27e6:	90 e0       	ldi	r25, 0x00	; 0
    27e8:	b7 01       	movw	r22, r14
    27ea:	0c c0       	rjmp	.+24     	; 0x2804 <vfprintf+0x654>
    27ec:	80 2f       	mov	r24, r16
    27ee:	86 78       	andi	r24, 0x86	; 134
    27f0:	59 f0       	breq	.+22     	; 0x2808 <vfprintf+0x658>
    27f2:	01 ff       	sbrs	r16, 1
    27f4:	02 c0       	rjmp	.+4      	; 0x27fa <vfprintf+0x64a>
    27f6:	8b e2       	ldi	r24, 0x2B	; 43
    27f8:	01 c0       	rjmp	.+2      	; 0x27fc <vfprintf+0x64c>
    27fa:	80 e2       	ldi	r24, 0x20	; 32
    27fc:	07 fd       	sbrc	r16, 7
    27fe:	8d e2       	ldi	r24, 0x2D	; 45
    2800:	b7 01       	movw	r22, r14
    2802:	90 e0       	ldi	r25, 0x00	; 0
    2804:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2808:	c1 16       	cp	r12, r17
    280a:	38 f4       	brcc	.+14     	; 0x281a <vfprintf+0x66a>
    280c:	b7 01       	movw	r22, r14
    280e:	80 e3       	ldi	r24, 0x30	; 48
    2810:	90 e0       	ldi	r25, 0x00	; 0
    2812:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2816:	11 50       	subi	r17, 0x01	; 1
    2818:	f7 cf       	rjmp	.-18     	; 0x2808 <vfprintf+0x658>
    281a:	ca 94       	dec	r12
    281c:	f3 01       	movw	r30, r6
    281e:	ec 0d       	add	r30, r12
    2820:	f1 1d       	adc	r31, r1
    2822:	80 81       	ld	r24, Z
    2824:	b7 01       	movw	r22, r14
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    282c:	c1 10       	cpse	r12, r1
    282e:	f5 cf       	rjmp	.-22     	; 0x281a <vfprintf+0x66a>
    2830:	15 c0       	rjmp	.+42     	; 0x285c <vfprintf+0x6ac>
    2832:	f4 e0       	ldi	r31, 0x04	; 4
    2834:	f5 15       	cp	r31, r5
    2836:	60 f5       	brcc	.+88     	; 0x2890 <vfprintf+0x6e0>
    2838:	84 e0       	ldi	r24, 0x04	; 4
    283a:	58 1a       	sub	r5, r24
    283c:	93 fe       	sbrs	r9, 3
    283e:	1f c0       	rjmp	.+62     	; 0x287e <vfprintf+0x6ce>
    2840:	01 11       	cpse	r16, r1
    2842:	27 c0       	rjmp	.+78     	; 0x2892 <vfprintf+0x6e2>
    2844:	2c 85       	ldd	r18, Y+12	; 0x0c
    2846:	23 ff       	sbrs	r18, 3
    2848:	2a c0       	rjmp	.+84     	; 0x289e <vfprintf+0x6ee>
    284a:	0c ec       	ldi	r16, 0xCC	; 204
    284c:	11 e0       	ldi	r17, 0x01	; 1
    284e:	39 2d       	mov	r19, r9
    2850:	30 71       	andi	r19, 0x10	; 16
    2852:	93 2e       	mov	r9, r19
    2854:	f8 01       	movw	r30, r16
    2856:	84 91       	lpm	r24, Z
    2858:	81 11       	cpse	r24, r1
    285a:	24 c0       	rjmp	.+72     	; 0x28a4 <vfprintf+0x6f4>
    285c:	55 20       	and	r5, r5
    285e:	09 f4       	brne	.+2      	; 0x2862 <vfprintf+0x6b2>
    2860:	e4 cc       	rjmp	.-1592   	; 0x222a <vfprintf+0x7a>
    2862:	b7 01       	movw	r22, r14
    2864:	80 e2       	ldi	r24, 0x20	; 32
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    286c:	5a 94       	dec	r5
    286e:	f6 cf       	rjmp	.-20     	; 0x285c <vfprintf+0x6ac>
    2870:	f7 01       	movw	r30, r14
    2872:	86 81       	ldd	r24, Z+6	; 0x06
    2874:	97 81       	ldd	r25, Z+7	; 0x07
    2876:	26 c0       	rjmp	.+76     	; 0x28c4 <vfprintf+0x714>
    2878:	8f ef       	ldi	r24, 0xFF	; 255
    287a:	9f ef       	ldi	r25, 0xFF	; 255
    287c:	23 c0       	rjmp	.+70     	; 0x28c4 <vfprintf+0x714>
    287e:	b7 01       	movw	r22, r14
    2880:	80 e2       	ldi	r24, 0x20	; 32
    2882:	90 e0       	ldi	r25, 0x00	; 0
    2884:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    2888:	5a 94       	dec	r5
    288a:	51 10       	cpse	r5, r1
    288c:	f8 cf       	rjmp	.-16     	; 0x287e <vfprintf+0x6ce>
    288e:	d8 cf       	rjmp	.-80     	; 0x2840 <vfprintf+0x690>
    2890:	51 2c       	mov	r5, r1
    2892:	b7 01       	movw	r22, r14
    2894:	80 2f       	mov	r24, r16
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    289c:	d3 cf       	rjmp	.-90     	; 0x2844 <vfprintf+0x694>
    289e:	00 ed       	ldi	r16, 0xD0	; 208
    28a0:	11 e0       	ldi	r17, 0x01	; 1
    28a2:	d5 cf       	rjmp	.-86     	; 0x284e <vfprintf+0x69e>
    28a4:	91 10       	cpse	r9, r1
    28a6:	80 52       	subi	r24, 0x20	; 32
    28a8:	b7 01       	movw	r22, r14
    28aa:	90 e0       	ldi	r25, 0x00	; 0
    28ac:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <fputc>
    28b0:	0f 5f       	subi	r16, 0xFF	; 255
    28b2:	1f 4f       	sbci	r17, 0xFF	; 255
    28b4:	cf cf       	rjmp	.-98     	; 0x2854 <vfprintf+0x6a4>
    28b6:	23 e0       	ldi	r18, 0x03	; 3
    28b8:	25 15       	cp	r18, r5
    28ba:	10 f4       	brcc	.+4      	; 0x28c0 <vfprintf+0x710>
    28bc:	83 e0       	ldi	r24, 0x03	; 3
    28be:	bd cf       	rjmp	.-134    	; 0x283a <vfprintf+0x68a>
    28c0:	51 2c       	mov	r5, r1
    28c2:	c0 cf       	rjmp	.-128    	; 0x2844 <vfprintf+0x694>
    28c4:	60 96       	adiw	r28, 0x10	; 16
    28c6:	cd bf       	out	0x3d, r28	; 61
    28c8:	de bf       	out	0x3e, r29	; 62
    28ca:	df 91       	pop	r29
    28cc:	cf 91       	pop	r28
    28ce:	1f 91       	pop	r17
    28d0:	0f 91       	pop	r16
    28d2:	ff 90       	pop	r15
    28d4:	ef 90       	pop	r14
    28d6:	df 90       	pop	r13
    28d8:	cf 90       	pop	r12
    28da:	bf 90       	pop	r11
    28dc:	af 90       	pop	r10
    28de:	9f 90       	pop	r9
    28e0:	8f 90       	pop	r8
    28e2:	7f 90       	pop	r7
    28e4:	6f 90       	pop	r6
    28e6:	5f 90       	pop	r5
    28e8:	4f 90       	pop	r4
    28ea:	3f 90       	pop	r3
    28ec:	2f 90       	pop	r2
    28ee:	08 95       	ret

000028f0 <__divmodsi4>:
    28f0:	05 2e       	mov	r0, r21
    28f2:	97 fb       	bst	r25, 7
    28f4:	1e f4       	brtc	.+6      	; 0x28fc <__divmodsi4+0xc>
    28f6:	00 94       	com	r0
    28f8:	0e 94 8f 14 	call	0x291e	; 0x291e <__negsi2>
    28fc:	57 fd       	sbrc	r21, 7
    28fe:	07 d0       	rcall	.+14     	; 0x290e <__divmodsi4_neg2>
    2900:	0e 94 a0 14 	call	0x2940	; 0x2940 <__udivmodsi4>
    2904:	07 fc       	sbrc	r0, 7
    2906:	03 d0       	rcall	.+6      	; 0x290e <__divmodsi4_neg2>
    2908:	4e f4       	brtc	.+18     	; 0x291c <__divmodsi4_exit>
    290a:	0c 94 8f 14 	jmp	0x291e	; 0x291e <__negsi2>

0000290e <__divmodsi4_neg2>:
    290e:	50 95       	com	r21
    2910:	40 95       	com	r20
    2912:	30 95       	com	r19
    2914:	21 95       	neg	r18
    2916:	3f 4f       	sbci	r19, 0xFF	; 255
    2918:	4f 4f       	sbci	r20, 0xFF	; 255
    291a:	5f 4f       	sbci	r21, 0xFF	; 255

0000291c <__divmodsi4_exit>:
    291c:	08 95       	ret

0000291e <__negsi2>:
    291e:	90 95       	com	r25
    2920:	80 95       	com	r24
    2922:	70 95       	com	r23
    2924:	61 95       	neg	r22
    2926:	7f 4f       	sbci	r23, 0xFF	; 255
    2928:	8f 4f       	sbci	r24, 0xFF	; 255
    292a:	9f 4f       	sbci	r25, 0xFF	; 255
    292c:	08 95       	ret

0000292e <__tablejump2__>:
    292e:	ee 0f       	add	r30, r30
    2930:	ff 1f       	adc	r31, r31
    2932:	00 24       	eor	r0, r0
    2934:	00 1c       	adc	r0, r0
    2936:	0b be       	out	0x3b, r0	; 59
    2938:	07 90       	elpm	r0, Z+
    293a:	f6 91       	elpm	r31, Z
    293c:	e0 2d       	mov	r30, r0
    293e:	09 94       	ijmp

00002940 <__udivmodsi4>:
    2940:	a1 e2       	ldi	r26, 0x21	; 33
    2942:	1a 2e       	mov	r1, r26
    2944:	aa 1b       	sub	r26, r26
    2946:	bb 1b       	sub	r27, r27
    2948:	fd 01       	movw	r30, r26
    294a:	0d c0       	rjmp	.+26     	; 0x2966 <__udivmodsi4_ep>

0000294c <__udivmodsi4_loop>:
    294c:	aa 1f       	adc	r26, r26
    294e:	bb 1f       	adc	r27, r27
    2950:	ee 1f       	adc	r30, r30
    2952:	ff 1f       	adc	r31, r31
    2954:	a2 17       	cp	r26, r18
    2956:	b3 07       	cpc	r27, r19
    2958:	e4 07       	cpc	r30, r20
    295a:	f5 07       	cpc	r31, r21
    295c:	20 f0       	brcs	.+8      	; 0x2966 <__udivmodsi4_ep>
    295e:	a2 1b       	sub	r26, r18
    2960:	b3 0b       	sbc	r27, r19
    2962:	e4 0b       	sbc	r30, r20
    2964:	f5 0b       	sbc	r31, r21

00002966 <__udivmodsi4_ep>:
    2966:	66 1f       	adc	r22, r22
    2968:	77 1f       	adc	r23, r23
    296a:	88 1f       	adc	r24, r24
    296c:	99 1f       	adc	r25, r25
    296e:	1a 94       	dec	r1
    2970:	69 f7       	brne	.-38     	; 0x294c <__udivmodsi4_loop>
    2972:	60 95       	com	r22
    2974:	70 95       	com	r23
    2976:	80 95       	com	r24
    2978:	90 95       	com	r25
    297a:	9b 01       	movw	r18, r22
    297c:	ac 01       	movw	r20, r24
    297e:	bd 01       	movw	r22, r26
    2980:	cf 01       	movw	r24, r30
    2982:	08 95       	ret

00002984 <__ftoa_engine>:
    2984:	28 30       	cpi	r18, 0x08	; 8
    2986:	08 f0       	brcs	.+2      	; 0x298a <__ftoa_engine+0x6>
    2988:	27 e0       	ldi	r18, 0x07	; 7
    298a:	33 27       	eor	r19, r19
    298c:	da 01       	movw	r26, r20
    298e:	99 0f       	add	r25, r25
    2990:	31 1d       	adc	r19, r1
    2992:	87 fd       	sbrc	r24, 7
    2994:	91 60       	ori	r25, 0x01	; 1
    2996:	00 96       	adiw	r24, 0x00	; 0
    2998:	61 05       	cpc	r22, r1
    299a:	71 05       	cpc	r23, r1
    299c:	39 f4       	brne	.+14     	; 0x29ac <__ftoa_engine+0x28>
    299e:	32 60       	ori	r19, 0x02	; 2
    29a0:	2e 5f       	subi	r18, 0xFE	; 254
    29a2:	3d 93       	st	X+, r19
    29a4:	30 e3       	ldi	r19, 0x30	; 48
    29a6:	2a 95       	dec	r18
    29a8:	e1 f7       	brne	.-8      	; 0x29a2 <__ftoa_engine+0x1e>
    29aa:	08 95       	ret
    29ac:	9f 3f       	cpi	r25, 0xFF	; 255
    29ae:	30 f0       	brcs	.+12     	; 0x29bc <__ftoa_engine+0x38>
    29b0:	80 38       	cpi	r24, 0x80	; 128
    29b2:	71 05       	cpc	r23, r1
    29b4:	61 05       	cpc	r22, r1
    29b6:	09 f0       	breq	.+2      	; 0x29ba <__ftoa_engine+0x36>
    29b8:	3c 5f       	subi	r19, 0xFC	; 252
    29ba:	3c 5f       	subi	r19, 0xFC	; 252
    29bc:	3d 93       	st	X+, r19
    29be:	91 30       	cpi	r25, 0x01	; 1
    29c0:	08 f0       	brcs	.+2      	; 0x29c4 <__ftoa_engine+0x40>
    29c2:	80 68       	ori	r24, 0x80	; 128
    29c4:	91 1d       	adc	r25, r1
    29c6:	df 93       	push	r29
    29c8:	cf 93       	push	r28
    29ca:	1f 93       	push	r17
    29cc:	0f 93       	push	r16
    29ce:	ff 92       	push	r15
    29d0:	ef 92       	push	r14
    29d2:	19 2f       	mov	r17, r25
    29d4:	98 7f       	andi	r25, 0xF8	; 248
    29d6:	96 95       	lsr	r25
    29d8:	e9 2f       	mov	r30, r25
    29da:	96 95       	lsr	r25
    29dc:	96 95       	lsr	r25
    29de:	e9 0f       	add	r30, r25
    29e0:	ff 27       	eor	r31, r31
    29e2:	e2 5d       	subi	r30, 0xD2	; 210
    29e4:	fd 4f       	sbci	r31, 0xFD	; 253
    29e6:	99 27       	eor	r25, r25
    29e8:	33 27       	eor	r19, r19
    29ea:	ee 24       	eor	r14, r14
    29ec:	ff 24       	eor	r15, r15
    29ee:	a7 01       	movw	r20, r14
    29f0:	e7 01       	movw	r28, r14
    29f2:	05 90       	lpm	r0, Z+
    29f4:	08 94       	sec
    29f6:	07 94       	ror	r0
    29f8:	28 f4       	brcc	.+10     	; 0x2a04 <__ftoa_engine+0x80>
    29fa:	36 0f       	add	r19, r22
    29fc:	e7 1e       	adc	r14, r23
    29fe:	f8 1e       	adc	r15, r24
    2a00:	49 1f       	adc	r20, r25
    2a02:	51 1d       	adc	r21, r1
    2a04:	66 0f       	add	r22, r22
    2a06:	77 1f       	adc	r23, r23
    2a08:	88 1f       	adc	r24, r24
    2a0a:	99 1f       	adc	r25, r25
    2a0c:	06 94       	lsr	r0
    2a0e:	a1 f7       	brne	.-24     	; 0x29f8 <__ftoa_engine+0x74>
    2a10:	05 90       	lpm	r0, Z+
    2a12:	07 94       	ror	r0
    2a14:	28 f4       	brcc	.+10     	; 0x2a20 <__ftoa_engine+0x9c>
    2a16:	e7 0e       	add	r14, r23
    2a18:	f8 1e       	adc	r15, r24
    2a1a:	49 1f       	adc	r20, r25
    2a1c:	56 1f       	adc	r21, r22
    2a1e:	c1 1d       	adc	r28, r1
    2a20:	77 0f       	add	r23, r23
    2a22:	88 1f       	adc	r24, r24
    2a24:	99 1f       	adc	r25, r25
    2a26:	66 1f       	adc	r22, r22
    2a28:	06 94       	lsr	r0
    2a2a:	a1 f7       	brne	.-24     	; 0x2a14 <__ftoa_engine+0x90>
    2a2c:	05 90       	lpm	r0, Z+
    2a2e:	07 94       	ror	r0
    2a30:	28 f4       	brcc	.+10     	; 0x2a3c <__ftoa_engine+0xb8>
    2a32:	f8 0e       	add	r15, r24
    2a34:	49 1f       	adc	r20, r25
    2a36:	56 1f       	adc	r21, r22
    2a38:	c7 1f       	adc	r28, r23
    2a3a:	d1 1d       	adc	r29, r1
    2a3c:	88 0f       	add	r24, r24
    2a3e:	99 1f       	adc	r25, r25
    2a40:	66 1f       	adc	r22, r22
    2a42:	77 1f       	adc	r23, r23
    2a44:	06 94       	lsr	r0
    2a46:	a1 f7       	brne	.-24     	; 0x2a30 <__ftoa_engine+0xac>
    2a48:	05 90       	lpm	r0, Z+
    2a4a:	07 94       	ror	r0
    2a4c:	20 f4       	brcc	.+8      	; 0x2a56 <__ftoa_engine+0xd2>
    2a4e:	49 0f       	add	r20, r25
    2a50:	56 1f       	adc	r21, r22
    2a52:	c7 1f       	adc	r28, r23
    2a54:	d8 1f       	adc	r29, r24
    2a56:	99 0f       	add	r25, r25
    2a58:	66 1f       	adc	r22, r22
    2a5a:	77 1f       	adc	r23, r23
    2a5c:	88 1f       	adc	r24, r24
    2a5e:	06 94       	lsr	r0
    2a60:	a9 f7       	brne	.-22     	; 0x2a4c <__ftoa_engine+0xc8>
    2a62:	84 91       	lpm	r24, Z
    2a64:	10 95       	com	r17
    2a66:	17 70       	andi	r17, 0x07	; 7
    2a68:	41 f0       	breq	.+16     	; 0x2a7a <__ftoa_engine+0xf6>
    2a6a:	d6 95       	lsr	r29
    2a6c:	c7 95       	ror	r28
    2a6e:	57 95       	ror	r21
    2a70:	47 95       	ror	r20
    2a72:	f7 94       	ror	r15
    2a74:	e7 94       	ror	r14
    2a76:	1a 95       	dec	r17
    2a78:	c1 f7       	brne	.-16     	; 0x2a6a <__ftoa_engine+0xe6>
    2a7a:	e4 ed       	ldi	r30, 0xD4	; 212
    2a7c:	f1 e0       	ldi	r31, 0x01	; 1
    2a7e:	68 94       	set
    2a80:	15 90       	lpm	r1, Z+
    2a82:	15 91       	lpm	r17, Z+
    2a84:	35 91       	lpm	r19, Z+
    2a86:	65 91       	lpm	r22, Z+
    2a88:	95 91       	lpm	r25, Z+
    2a8a:	05 90       	lpm	r0, Z+
    2a8c:	7f e2       	ldi	r23, 0x2F	; 47
    2a8e:	73 95       	inc	r23
    2a90:	e1 18       	sub	r14, r1
    2a92:	f1 0a       	sbc	r15, r17
    2a94:	43 0b       	sbc	r20, r19
    2a96:	56 0b       	sbc	r21, r22
    2a98:	c9 0b       	sbc	r28, r25
    2a9a:	d0 09       	sbc	r29, r0
    2a9c:	c0 f7       	brcc	.-16     	; 0x2a8e <__ftoa_engine+0x10a>
    2a9e:	e1 0c       	add	r14, r1
    2aa0:	f1 1e       	adc	r15, r17
    2aa2:	43 1f       	adc	r20, r19
    2aa4:	56 1f       	adc	r21, r22
    2aa6:	c9 1f       	adc	r28, r25
    2aa8:	d0 1d       	adc	r29, r0
    2aaa:	7e f4       	brtc	.+30     	; 0x2aca <__ftoa_engine+0x146>
    2aac:	70 33       	cpi	r23, 0x30	; 48
    2aae:	11 f4       	brne	.+4      	; 0x2ab4 <__ftoa_engine+0x130>
    2ab0:	8a 95       	dec	r24
    2ab2:	e6 cf       	rjmp	.-52     	; 0x2a80 <__ftoa_engine+0xfc>
    2ab4:	e8 94       	clt
    2ab6:	01 50       	subi	r16, 0x01	; 1
    2ab8:	30 f0       	brcs	.+12     	; 0x2ac6 <__ftoa_engine+0x142>
    2aba:	08 0f       	add	r16, r24
    2abc:	0a f4       	brpl	.+2      	; 0x2ac0 <__ftoa_engine+0x13c>
    2abe:	00 27       	eor	r16, r16
    2ac0:	02 17       	cp	r16, r18
    2ac2:	08 f4       	brcc	.+2      	; 0x2ac6 <__ftoa_engine+0x142>
    2ac4:	20 2f       	mov	r18, r16
    2ac6:	23 95       	inc	r18
    2ac8:	02 2f       	mov	r16, r18
    2aca:	7a 33       	cpi	r23, 0x3A	; 58
    2acc:	28 f0       	brcs	.+10     	; 0x2ad8 <__ftoa_engine+0x154>
    2ace:	79 e3       	ldi	r23, 0x39	; 57
    2ad0:	7d 93       	st	X+, r23
    2ad2:	2a 95       	dec	r18
    2ad4:	e9 f7       	brne	.-6      	; 0x2ad0 <__ftoa_engine+0x14c>
    2ad6:	10 c0       	rjmp	.+32     	; 0x2af8 <__ftoa_engine+0x174>
    2ad8:	7d 93       	st	X+, r23
    2ada:	2a 95       	dec	r18
    2adc:	89 f6       	brne	.-94     	; 0x2a80 <__ftoa_engine+0xfc>
    2ade:	06 94       	lsr	r0
    2ae0:	97 95       	ror	r25
    2ae2:	67 95       	ror	r22
    2ae4:	37 95       	ror	r19
    2ae6:	17 95       	ror	r17
    2ae8:	17 94       	ror	r1
    2aea:	e1 18       	sub	r14, r1
    2aec:	f1 0a       	sbc	r15, r17
    2aee:	43 0b       	sbc	r20, r19
    2af0:	56 0b       	sbc	r21, r22
    2af2:	c9 0b       	sbc	r28, r25
    2af4:	d0 09       	sbc	r29, r0
    2af6:	98 f0       	brcs	.+38     	; 0x2b1e <__ftoa_engine+0x19a>
    2af8:	23 95       	inc	r18
    2afa:	7e 91       	ld	r23, -X
    2afc:	73 95       	inc	r23
    2afe:	7a 33       	cpi	r23, 0x3A	; 58
    2b00:	08 f0       	brcs	.+2      	; 0x2b04 <__ftoa_engine+0x180>
    2b02:	70 e3       	ldi	r23, 0x30	; 48
    2b04:	7c 93       	st	X, r23
    2b06:	20 13       	cpse	r18, r16
    2b08:	b8 f7       	brcc	.-18     	; 0x2af8 <__ftoa_engine+0x174>
    2b0a:	7e 91       	ld	r23, -X
    2b0c:	70 61       	ori	r23, 0x10	; 16
    2b0e:	7d 93       	st	X+, r23
    2b10:	30 f0       	brcs	.+12     	; 0x2b1e <__ftoa_engine+0x19a>
    2b12:	83 95       	inc	r24
    2b14:	71 e3       	ldi	r23, 0x31	; 49
    2b16:	7d 93       	st	X+, r23
    2b18:	70 e3       	ldi	r23, 0x30	; 48
    2b1a:	2a 95       	dec	r18
    2b1c:	e1 f7       	brne	.-8      	; 0x2b16 <__ftoa_engine+0x192>
    2b1e:	11 24       	eor	r1, r1
    2b20:	ef 90       	pop	r14
    2b22:	ff 90       	pop	r15
    2b24:	0f 91       	pop	r16
    2b26:	1f 91       	pop	r17
    2b28:	cf 91       	pop	r28
    2b2a:	df 91       	pop	r29
    2b2c:	99 27       	eor	r25, r25
    2b2e:	87 fd       	sbrc	r24, 7
    2b30:	90 95       	com	r25
    2b32:	08 95       	ret

00002b34 <strnlen_P>:
    2b34:	fc 01       	movw	r30, r24
    2b36:	05 90       	lpm	r0, Z+
    2b38:	61 50       	subi	r22, 0x01	; 1
    2b3a:	70 40       	sbci	r23, 0x00	; 0
    2b3c:	01 10       	cpse	r0, r1
    2b3e:	d8 f7       	brcc	.-10     	; 0x2b36 <strnlen_P+0x2>
    2b40:	80 95       	com	r24
    2b42:	90 95       	com	r25
    2b44:	8e 0f       	add	r24, r30
    2b46:	9f 1f       	adc	r25, r31
    2b48:	08 95       	ret

00002b4a <strnlen>:
    2b4a:	fc 01       	movw	r30, r24
    2b4c:	61 50       	subi	r22, 0x01	; 1
    2b4e:	70 40       	sbci	r23, 0x00	; 0
    2b50:	01 90       	ld	r0, Z+
    2b52:	01 10       	cpse	r0, r1
    2b54:	d8 f7       	brcc	.-10     	; 0x2b4c <strnlen+0x2>
    2b56:	80 95       	com	r24
    2b58:	90 95       	com	r25
    2b5a:	8e 0f       	add	r24, r30
    2b5c:	9f 1f       	adc	r25, r31
    2b5e:	08 95       	ret

00002b60 <fputc>:
    2b60:	0f 93       	push	r16
    2b62:	1f 93       	push	r17
    2b64:	cf 93       	push	r28
    2b66:	df 93       	push	r29
    2b68:	fb 01       	movw	r30, r22
    2b6a:	23 81       	ldd	r18, Z+3	; 0x03
    2b6c:	21 fd       	sbrc	r18, 1
    2b6e:	03 c0       	rjmp	.+6      	; 0x2b76 <fputc+0x16>
    2b70:	8f ef       	ldi	r24, 0xFF	; 255
    2b72:	9f ef       	ldi	r25, 0xFF	; 255
    2b74:	2c c0       	rjmp	.+88     	; 0x2bce <fputc+0x6e>
    2b76:	22 ff       	sbrs	r18, 2
    2b78:	16 c0       	rjmp	.+44     	; 0x2ba6 <fputc+0x46>
    2b7a:	46 81       	ldd	r20, Z+6	; 0x06
    2b7c:	57 81       	ldd	r21, Z+7	; 0x07
    2b7e:	24 81       	ldd	r18, Z+4	; 0x04
    2b80:	35 81       	ldd	r19, Z+5	; 0x05
    2b82:	42 17       	cp	r20, r18
    2b84:	53 07       	cpc	r21, r19
    2b86:	44 f4       	brge	.+16     	; 0x2b98 <fputc+0x38>
    2b88:	a0 81       	ld	r26, Z
    2b8a:	b1 81       	ldd	r27, Z+1	; 0x01
    2b8c:	9d 01       	movw	r18, r26
    2b8e:	2f 5f       	subi	r18, 0xFF	; 255
    2b90:	3f 4f       	sbci	r19, 0xFF	; 255
    2b92:	20 83       	st	Z, r18
    2b94:	31 83       	std	Z+1, r19	; 0x01
    2b96:	8c 93       	st	X, r24
    2b98:	26 81       	ldd	r18, Z+6	; 0x06
    2b9a:	37 81       	ldd	r19, Z+7	; 0x07
    2b9c:	2f 5f       	subi	r18, 0xFF	; 255
    2b9e:	3f 4f       	sbci	r19, 0xFF	; 255
    2ba0:	26 83       	std	Z+6, r18	; 0x06
    2ba2:	37 83       	std	Z+7, r19	; 0x07
    2ba4:	14 c0       	rjmp	.+40     	; 0x2bce <fputc+0x6e>
    2ba6:	8b 01       	movw	r16, r22
    2ba8:	ec 01       	movw	r28, r24
    2baa:	fb 01       	movw	r30, r22
    2bac:	00 84       	ldd	r0, Z+8	; 0x08
    2bae:	f1 85       	ldd	r31, Z+9	; 0x09
    2bb0:	e0 2d       	mov	r30, r0
    2bb2:	09 95       	icall
    2bb4:	89 2b       	or	r24, r25
    2bb6:	e1 f6       	brne	.-72     	; 0x2b70 <fputc+0x10>
    2bb8:	d8 01       	movw	r26, r16
    2bba:	16 96       	adiw	r26, 0x06	; 6
    2bbc:	8d 91       	ld	r24, X+
    2bbe:	9c 91       	ld	r25, X
    2bc0:	17 97       	sbiw	r26, 0x07	; 7
    2bc2:	01 96       	adiw	r24, 0x01	; 1
    2bc4:	16 96       	adiw	r26, 0x06	; 6
    2bc6:	8d 93       	st	X+, r24
    2bc8:	9c 93       	st	X, r25
    2bca:	17 97       	sbiw	r26, 0x07	; 7
    2bcc:	ce 01       	movw	r24, r28
    2bce:	df 91       	pop	r29
    2bd0:	cf 91       	pop	r28
    2bd2:	1f 91       	pop	r17
    2bd4:	0f 91       	pop	r16
    2bd6:	08 95       	ret

00002bd8 <printf>:
    2bd8:	cf 93       	push	r28
    2bda:	df 93       	push	r29
    2bdc:	cd b7       	in	r28, 0x3d	; 61
    2bde:	de b7       	in	r29, 0x3e	; 62
    2be0:	ae 01       	movw	r20, r28
    2be2:	4b 5f       	subi	r20, 0xFB	; 251
    2be4:	5f 4f       	sbci	r21, 0xFF	; 255
    2be6:	fa 01       	movw	r30, r20
    2be8:	61 91       	ld	r22, Z+
    2bea:	71 91       	ld	r23, Z+
    2bec:	af 01       	movw	r20, r30
    2bee:	80 91 1a 42 	lds	r24, 0x421A	; 0x80421a <__iob+0x2>
    2bf2:	90 91 1b 42 	lds	r25, 0x421B	; 0x80421b <__iob+0x3>
    2bf6:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <vfprintf>
    2bfa:	df 91       	pop	r29
    2bfc:	cf 91       	pop	r28
    2bfe:	08 95       	ret

00002c00 <puts>:
    2c00:	0f 93       	push	r16
    2c02:	1f 93       	push	r17
    2c04:	cf 93       	push	r28
    2c06:	df 93       	push	r29
    2c08:	e0 91 1a 42 	lds	r30, 0x421A	; 0x80421a <__iob+0x2>
    2c0c:	f0 91 1b 42 	lds	r31, 0x421B	; 0x80421b <__iob+0x3>
    2c10:	23 81       	ldd	r18, Z+3	; 0x03
    2c12:	21 ff       	sbrs	r18, 1
    2c14:	1b c0       	rjmp	.+54     	; 0x2c4c <puts+0x4c>
    2c16:	8c 01       	movw	r16, r24
    2c18:	d0 e0       	ldi	r29, 0x00	; 0
    2c1a:	c0 e0       	ldi	r28, 0x00	; 0
    2c1c:	f8 01       	movw	r30, r16
    2c1e:	81 91       	ld	r24, Z+
    2c20:	8f 01       	movw	r16, r30
    2c22:	60 91 1a 42 	lds	r22, 0x421A	; 0x80421a <__iob+0x2>
    2c26:	70 91 1b 42 	lds	r23, 0x421B	; 0x80421b <__iob+0x3>
    2c2a:	db 01       	movw	r26, r22
    2c2c:	18 96       	adiw	r26, 0x08	; 8
    2c2e:	ed 91       	ld	r30, X+
    2c30:	fc 91       	ld	r31, X
    2c32:	19 97       	sbiw	r26, 0x09	; 9
    2c34:	88 23       	and	r24, r24
    2c36:	31 f0       	breq	.+12     	; 0x2c44 <puts+0x44>
    2c38:	09 95       	icall
    2c3a:	89 2b       	or	r24, r25
    2c3c:	79 f3       	breq	.-34     	; 0x2c1c <puts+0x1c>
    2c3e:	df ef       	ldi	r29, 0xFF	; 255
    2c40:	cf ef       	ldi	r28, 0xFF	; 255
    2c42:	ec cf       	rjmp	.-40     	; 0x2c1c <puts+0x1c>
    2c44:	8a e0       	ldi	r24, 0x0A	; 10
    2c46:	09 95       	icall
    2c48:	89 2b       	or	r24, r25
    2c4a:	19 f0       	breq	.+6      	; 0x2c52 <puts+0x52>
    2c4c:	8f ef       	ldi	r24, 0xFF	; 255
    2c4e:	9f ef       	ldi	r25, 0xFF	; 255
    2c50:	02 c0       	rjmp	.+4      	; 0x2c56 <puts+0x56>
    2c52:	8d 2f       	mov	r24, r29
    2c54:	9c 2f       	mov	r25, r28
    2c56:	df 91       	pop	r29
    2c58:	cf 91       	pop	r28
    2c5a:	1f 91       	pop	r17
    2c5c:	0f 91       	pop	r16
    2c5e:	08 95       	ret

00002c60 <__ultoa_invert>:
    2c60:	fa 01       	movw	r30, r20
    2c62:	aa 27       	eor	r26, r26
    2c64:	28 30       	cpi	r18, 0x08	; 8
    2c66:	51 f1       	breq	.+84     	; 0x2cbc <__ultoa_invert+0x5c>
    2c68:	20 31       	cpi	r18, 0x10	; 16
    2c6a:	81 f1       	breq	.+96     	; 0x2ccc <__ultoa_invert+0x6c>
    2c6c:	e8 94       	clt
    2c6e:	6f 93       	push	r22
    2c70:	6e 7f       	andi	r22, 0xFE	; 254
    2c72:	6e 5f       	subi	r22, 0xFE	; 254
    2c74:	7f 4f       	sbci	r23, 0xFF	; 255
    2c76:	8f 4f       	sbci	r24, 0xFF	; 255
    2c78:	9f 4f       	sbci	r25, 0xFF	; 255
    2c7a:	af 4f       	sbci	r26, 0xFF	; 255
    2c7c:	b1 e0       	ldi	r27, 0x01	; 1
    2c7e:	3e d0       	rcall	.+124    	; 0x2cfc <__ultoa_invert+0x9c>
    2c80:	b4 e0       	ldi	r27, 0x04	; 4
    2c82:	3c d0       	rcall	.+120    	; 0x2cfc <__ultoa_invert+0x9c>
    2c84:	67 0f       	add	r22, r23
    2c86:	78 1f       	adc	r23, r24
    2c88:	89 1f       	adc	r24, r25
    2c8a:	9a 1f       	adc	r25, r26
    2c8c:	a1 1d       	adc	r26, r1
    2c8e:	68 0f       	add	r22, r24
    2c90:	79 1f       	adc	r23, r25
    2c92:	8a 1f       	adc	r24, r26
    2c94:	91 1d       	adc	r25, r1
    2c96:	a1 1d       	adc	r26, r1
    2c98:	6a 0f       	add	r22, r26
    2c9a:	71 1d       	adc	r23, r1
    2c9c:	81 1d       	adc	r24, r1
    2c9e:	91 1d       	adc	r25, r1
    2ca0:	a1 1d       	adc	r26, r1
    2ca2:	20 d0       	rcall	.+64     	; 0x2ce4 <__ultoa_invert+0x84>
    2ca4:	09 f4       	brne	.+2      	; 0x2ca8 <__ultoa_invert+0x48>
    2ca6:	68 94       	set
    2ca8:	3f 91       	pop	r19
    2caa:	2a e0       	ldi	r18, 0x0A	; 10
    2cac:	26 9f       	mul	r18, r22
    2cae:	11 24       	eor	r1, r1
    2cb0:	30 19       	sub	r19, r0
    2cb2:	30 5d       	subi	r19, 0xD0	; 208
    2cb4:	31 93       	st	Z+, r19
    2cb6:	de f6       	brtc	.-74     	; 0x2c6e <__ultoa_invert+0xe>
    2cb8:	cf 01       	movw	r24, r30
    2cba:	08 95       	ret
    2cbc:	46 2f       	mov	r20, r22
    2cbe:	47 70       	andi	r20, 0x07	; 7
    2cc0:	40 5d       	subi	r20, 0xD0	; 208
    2cc2:	41 93       	st	Z+, r20
    2cc4:	b3 e0       	ldi	r27, 0x03	; 3
    2cc6:	0f d0       	rcall	.+30     	; 0x2ce6 <__ultoa_invert+0x86>
    2cc8:	c9 f7       	brne	.-14     	; 0x2cbc <__ultoa_invert+0x5c>
    2cca:	f6 cf       	rjmp	.-20     	; 0x2cb8 <__ultoa_invert+0x58>
    2ccc:	46 2f       	mov	r20, r22
    2cce:	4f 70       	andi	r20, 0x0F	; 15
    2cd0:	40 5d       	subi	r20, 0xD0	; 208
    2cd2:	4a 33       	cpi	r20, 0x3A	; 58
    2cd4:	18 f0       	brcs	.+6      	; 0x2cdc <__ultoa_invert+0x7c>
    2cd6:	49 5d       	subi	r20, 0xD9	; 217
    2cd8:	31 fd       	sbrc	r19, 1
    2cda:	40 52       	subi	r20, 0x20	; 32
    2cdc:	41 93       	st	Z+, r20
    2cde:	02 d0       	rcall	.+4      	; 0x2ce4 <__ultoa_invert+0x84>
    2ce0:	a9 f7       	brne	.-22     	; 0x2ccc <__ultoa_invert+0x6c>
    2ce2:	ea cf       	rjmp	.-44     	; 0x2cb8 <__ultoa_invert+0x58>
    2ce4:	b4 e0       	ldi	r27, 0x04	; 4
    2ce6:	a6 95       	lsr	r26
    2ce8:	97 95       	ror	r25
    2cea:	87 95       	ror	r24
    2cec:	77 95       	ror	r23
    2cee:	67 95       	ror	r22
    2cf0:	ba 95       	dec	r27
    2cf2:	c9 f7       	brne	.-14     	; 0x2ce6 <__ultoa_invert+0x86>
    2cf4:	00 97       	sbiw	r24, 0x00	; 0
    2cf6:	61 05       	cpc	r22, r1
    2cf8:	71 05       	cpc	r23, r1
    2cfa:	08 95       	ret
    2cfc:	9b 01       	movw	r18, r22
    2cfe:	ac 01       	movw	r20, r24
    2d00:	0a 2e       	mov	r0, r26
    2d02:	06 94       	lsr	r0
    2d04:	57 95       	ror	r21
    2d06:	47 95       	ror	r20
    2d08:	37 95       	ror	r19
    2d0a:	27 95       	ror	r18
    2d0c:	ba 95       	dec	r27
    2d0e:	c9 f7       	brne	.-14     	; 0x2d02 <__ultoa_invert+0xa2>
    2d10:	62 0f       	add	r22, r18
    2d12:	73 1f       	adc	r23, r19
    2d14:	84 1f       	adc	r24, r20
    2d16:	95 1f       	adc	r25, r21
    2d18:	a0 1d       	adc	r26, r0
    2d1a:	08 95       	ret

00002d1c <__do_global_dtors>:
    2d1c:	11 e0       	ldi	r17, 0x01	; 1
    2d1e:	c9 e6       	ldi	r28, 0x69	; 105
    2d20:	d1 e0       	ldi	r29, 0x01	; 1
    2d22:	04 c0       	rjmp	.+8      	; 0x2d2c <__do_global_dtors+0x10>
    2d24:	fe 01       	movw	r30, r28
    2d26:	0e 94 97 14 	call	0x292e	; 0x292e <__tablejump2__>
    2d2a:	21 96       	adiw	r28, 0x01	; 1
    2d2c:	cb 36       	cpi	r28, 0x6B	; 107
    2d2e:	d1 07       	cpc	r29, r17
    2d30:	c9 f7       	brne	.-14     	; 0x2d24 <__do_global_dtors+0x8>
    2d32:	f8 94       	cli

00002d34 <__stop_program>:
    2d34:	ff cf       	rjmp	.-2      	; 0x2d34 <__stop_program>
