Archive member included to satisfy reference by file (symbol)

c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
                              C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o (exit)

Discarded input sections

 .data          0x00000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 .bss           0x00000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 .text          0x00000000        0x0 atmel_start.o
 .data          0x00000000        0x0 atmel_start.o
 .bss           0x00000000        0x0 atmel_start.o
 .text          0x00000000        0x0 driver_isr.o
 .data          0x00000000        0x0 driver_isr.o
 .bss           0x00000000        0x0 driver_isr.o
 .debug_info    0x00000000       0x5d driver_isr.o
 .debug_abbrev  0x00000000       0x26 driver_isr.o
 .debug_aranges
                0x00000000       0x18 driver_isr.o
 .debug_line    0x00000000       0x1a driver_isr.o
 .debug_str     0x00000000      0x182 driver_isr.o
 .comment       0x00000000       0x31 driver_isr.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 src/bod.o
 .data          0x00000000        0x0 src/bod.o
 .bss           0x00000000        0x0 src/bod.o
 .text          0x00000000        0x0 src/clkctrl.o
 .data          0x00000000        0x0 src/clkctrl.o
 .bss           0x00000000        0x0 src/clkctrl.o
 .text          0x00000000        0x0 src/cpuint.o
 .data          0x00000000        0x0 src/cpuint.o
 .bss           0x00000000        0x0 src/cpuint.o
 .text          0x00000000        0x0 src/driver_init.o
 .data          0x00000000        0x0 src/driver_init.o
 .bss           0x00000000        0x0 src/driver_init.o
 .text          0x00000000        0x0 src/protected_io.o
 .data          0x00000000        0x0 src/protected_io.o
 .bss           0x00000000        0x0 src/protected_io.o
 .text          0x00000000        0x0 src/slpctrl.o
 .data          0x00000000        0x0 src/slpctrl.o
 .bss           0x00000000        0x0 src/slpctrl.o
 .text.SLPCTRL_set_sleep_mode
                0x00000000       0x10 src/slpctrl.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00804000         0x00004000         rw !x
eeprom           0x00810000         0x00000200         rw !x
fuse             0x00820000         0x00000010         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x804000
                0x00008000                __RODATA_PM_OFFSET__ = 0x8000
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
LOAD atmel_start.o
LOAD driver_isr.o
LOAD main.o
LOAD src/bod.o
LOAD src/clkctrl.o
LOAD src/cpuint.o
LOAD src/driver_init.o
LOAD src/protected_io.o
LOAD src/slpctrl.o
START GROUP
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avrxmega4\libm.a
END GROUP
START GROUP
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avrxmega4\libm.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avrxmega4\libc.a
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4\libavr128db48.a
END GROUP
                [0x00000000]                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x00804000]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x802000
                [0x00020000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x100000
                [0x00004000]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x00000200]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x00000010]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x00000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x00000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x00000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x1e0
 *(.vectors)
 .vectors       0x00000000       0xf4 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x000000f4                . = ALIGN (0x2)
                0x000000f4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000f4        0x0 linker stubs
 *(.trampolines*)
                0x000000f4                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000f4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000f4                __ctors_start = .
 *(.ctors)
                0x000000f4                __ctors_end = .
                0x000000f4                __dtors_start = .
 *(.dtors)
                0x000000f4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000f4        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
                0x000000f4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000f4        0xc C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000100        0x8 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 *(.init9)
 *(.text)
 .text          0x00000108        0x4 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
                0x00000108                __vector_38
                0x00000108                __vector_22
                0x00000108                __vector_28
                0x00000108                __vector_1
                0x00000108                __vector_32
                0x00000108                __vector_34
                0x00000108                __vector_24
                0x00000108                __vector_12
                0x00000108                __vector_55
                0x00000108                __vector_46
                0x00000108                __bad_interrupt
                0x00000108                __vector_6
                0x00000108                __vector_31
                0x00000108                __vector_35
                0x00000108                __vector_39
                0x00000108                __vector_3
                0x00000108                __vector_23
                0x00000108                __vector_30
                0x00000108                __vector_45
                0x00000108                __vector_25
                0x00000108                __vector_11
                0x00000108                __vector_54
                0x00000108                __vector_13
                0x00000108                __vector_17
                0x00000108                __vector_19
                0x00000108                __vector_56
                0x00000108                __vector_7
                0x00000108                __vector_49
                0x00000108                __vector_41
                0x00000108                __vector_43
                0x00000108                __vector_27
                0x00000108                __vector_5
                0x00000108                __vector_33
                0x00000108                __vector_47
                0x00000108                __vector_52
                0x00000108                __vector_37
                0x00000108                __vector_4
                0x00000108                __vector_44
                0x00000108                __vector_51
                0x00000108                __vector_9
                0x00000108                __vector_2
                0x00000108                __vector_21
                0x00000108                __vector_15
                0x00000108                __vector_36
                0x00000108                __vector_58
                0x00000108                __vector_29
                0x00000108                __vector_60
                0x00000108                __vector_40
                0x00000108                __vector_8
                0x00000108                __vector_26
                0x00000108                __vector_48
                0x00000108                __vector_14
                0x00000108                __vector_57
                0x00000108                __vector_53
                0x00000108                __vector_10
                0x00000108                __vector_50
                0x00000108                __vector_16
                0x00000108                __vector_59
                0x00000108                __vector_18
                0x00000108                __vector_20
                0x00000108                __vector_42
                0x0000010c                . = ALIGN (0x2)
 *(.text.*)
 .text.atmel_start_init
                0x0000010c        0x6 atmel_start.o
                0x0000010c                atmel_start_init
 .text.main     0x00000112        0x6 main.o
                0x00000112                main
 .text.BOD_init
                0x00000118        0x8 src/bod.o
                0x00000118                BOD_init
 .text.CLKCTRL_init
                0x00000120       0x26 src/clkctrl.o
                0x00000120                CLKCTRL_init
 .text.CPUINT_init
                0x00000146        0x4 src/cpuint.o
                0x00000146                CPUINT_init
 .text.mcu_init
                0x0000014a       0x6e src/driver_init.o
                0x0000014a                mcu_init
 .text.system_init
                0x000001b8       0x16 src/driver_init.o
                0x000001b8                system_init
 .text.protected_write_io
                0x000001ce        0xa src/protected_io.o
                0x000001ce                protected_write_io
 .text.SLPCTRL_init
                0x000001d8        0x4 src/slpctrl.o
                0x000001d8                SLPCTRL_init
                0x000001dc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000001dc        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
                0x000001dc                _exit
                0x000001dc                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000001dc        0x4 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avrxmega4\libgcc.a(_exit.o)
 *(.fini0)
                0x000001e0                _etext = .

.data           0x00804000        0x0 load address 0x000001e0
                [!provide]                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x00804000                . = ALIGN (0x2)
                0x00804000                _edata = .
                [!provide]                PROVIDE (__data_end, .)

.bss            0x00804000        0x0
                [!provide]                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                [!provide]                PROVIDE (__bss_end, .)
                0x000001e0                __data_load_start = LOADADDR (.data)
                0x000001e0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00804000        0x0
                [!provide]                PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                PROVIDE (__noinit_end, .)
                0x00804000                _end = .
                [!provide]                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 atmel_start.o
                                 0x31 (size before relaxing)
 .comment       0x00000030       0x31 main.o
 .comment       0x00000030       0x31 src/bod.o
 .comment       0x00000030       0x31 src/clkctrl.o
 .comment       0x00000030       0x31 src/cpuint.o
 .comment       0x00000030       0x31 src/driver_init.o
 .comment       0x00000030       0x31 src/slpctrl.o

.note.gnu.avr.deviceinfo
                0x00000000       0x40
 .note.gnu.avr.deviceinfo
                0x00000000       0x40 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x110
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 atmel_start.o
 .debug_aranges
                0x00000020       0x20 main.o
 .debug_aranges
                0x00000040       0x20 src/bod.o
 .debug_aranges
                0x00000060       0x20 src/clkctrl.o
 .debug_aranges
                0x00000080       0x20 src/cpuint.o
 .debug_aranges
                0x000000a0       0x28 src/driver_init.o
 .debug_aranges
                0x000000c8       0x20 src/protected_io.o
 .debug_aranges
                0x000000e8       0x28 src/slpctrl.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x3b49
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000     0x2f42 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 .debug_info    0x00002f42       0x9a atmel_start.o
 .debug_info    0x00002fdc       0x9f main.o
 .debug_info    0x0000307b      0x188 src/bod.o
 .debug_info    0x00003203      0x383 src/clkctrl.o
 .debug_info    0x00003586       0x8d src/cpuint.o
 .debug_info    0x00003613      0x374 src/driver_init.o
 .debug_info    0x00003987       0x8c src/protected_io.o
 .debug_info    0x00003a13      0x136 src/slpctrl.o

.debug_abbrev   0x00000000     0x318b
 *(.debug_abbrev)
 .debug_abbrev  0x00000000     0x2cc2 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 .debug_abbrev  0x00002cc2       0x63 atmel_start.o
 .debug_abbrev  0x00002d25       0x68 main.o
 .debug_abbrev  0x00002d8d       0xaf src/bod.o
 .debug_abbrev  0x00002e3c      0x131 src/clkctrl.o
 .debug_abbrev  0x00002f6d       0x51 src/cpuint.o
 .debug_abbrev  0x00002fbe       0xf5 src/driver_init.o
 .debug_abbrev  0x000030b3       0x14 src/protected_io.o
 .debug_abbrev  0x000030c7       0xc4 src/slpctrl.o

.debug_line     0x00000000      0x930
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x205 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 .debug_line    0x00000205       0x60 atmel_start.o
 .debug_line    0x00000265       0x51 main.o
 .debug_line    0x000002b6      0x10c src/bod.o
 .debug_line    0x000003c2      0x14c src/clkctrl.o
 .debug_line    0x0000050e       0xa5 src/cpuint.o
 .debug_line    0x000005b3      0x202 src/driver_init.o
 .debug_line    0x000007b5       0x5b src/protected_io.o
 .debug_line    0x00000810      0x120 src/slpctrl.o

.debug_frame    0x00000000      0x11c
 *(.debug_frame)
 .debug_frame   0x00000000       0x24 atmel_start.o
 .debug_frame   0x00000024       0x24 main.o
 .debug_frame   0x00000048       0x24 src/bod.o
 .debug_frame   0x0000006c       0x24 src/clkctrl.o
 .debug_frame   0x00000090       0x24 src/cpuint.o
 .debug_frame   0x000000b4       0x34 src/driver_init.o
 .debug_frame   0x000000e8       0x34 src/slpctrl.o

.debug_str      0x00000000     0x1b22
 *(.debug_str)
 .debug_str     0x00000000     0x14f0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/AVR-Dx_DFP/1.6.76/gcc/dev/avr128db48/avrxmega4/crtavr128db48.o
 .debug_str     0x000014f0      0x16c atmel_start.o
                                0x1a0 (size before relaxing)
 .debug_str     0x0000165c       0x11 main.o
                                0x192 (size before relaxing)
 .debug_str     0x0000166d       0xa8 src/bod.o
                                0x243 (size before relaxing)
 .debug_str     0x00001715      0x254 src/clkctrl.o
                                0x40c (size before relaxing)
 .debug_str     0x00001969       0x1c src/cpuint.o
                                0x193 (size before relaxing)
 .debug_str     0x00001985       0xe4 src/driver_init.o
                                0x2b5 (size before relaxing)
 .debug_str     0x00001a69       0xb9 src/slpctrl.o
                                0x257 (size before relaxing)

.debug_loc      0x00000000       0xc2
 *(.debug_loc)
 .debug_loc     0x00000000       0x29 src/clkctrl.o
 .debug_loc     0x00000029       0x78 src/driver_init.o
 .debug_loc     0x000000a1       0x21 src/slpctrl.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x80
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x10 atmel_start.o
 .debug_ranges  0x00000010       0x10 main.o
 .debug_ranges  0x00000020       0x10 src/bod.o
 .debug_ranges  0x00000030       0x10 src/clkctrl.o
 .debug_ranges  0x00000040       0x10 src/cpuint.o
 .debug_ranges  0x00000050       0x18 src/driver_init.o
 .debug_ranges  0x00000068       0x18 src/slpctrl.o

.debug_macro
 *(.debug_macro)
OUTPUT(AVR128DB_BSP.elf elf32-avr)
LOAD linker stubs
