
ADF5610_SAMD_LIB.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006168  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000006c  20000000  00006168  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000494  20000070  000061d8  0002006c  2**3
                  ALLOC
  3 .stack        00002004  20000504  0000666c  0002006c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
  6 .debug_info   0002cbb6  00000000  00000000  000200ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003945  00000000  00000000  0004cca3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00010979  00000000  00000000  000505e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000bf8  00000000  00000000  00060f61  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000e48  00000000  00000000  00061b59  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001d5c9  00000000  00000000  000629a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000107e5  00000000  00000000  0007ff6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00091b28  00000000  00000000  0009074f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002644  00000000  00000000  00122278  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	08 25 00 20 bd 0a 00 00 b9 0a 00 00 b9 0a 00 00     .%. ............
	...
      2c:	b9 0a 00 00 00 00 00 00 00 00 00 00 b9 0a 00 00     ................
      3c:	b9 0a 00 00 b9 0a 00 00 b9 0a 00 00 b9 0a 00 00     ................
      4c:	b9 0a 00 00 b9 0a 00 00 b9 0a 00 00 b9 0a 00 00     ................
      5c:	b1 25 00 00 b9 0a 00 00 b9 0a 00 00 b9 0a 00 00     .%..............
      6c:	b9 0a 00 00 b9 0a 00 00 b9 0a 00 00 b9 0a 00 00     ................
      7c:	b9 0a 00 00 b9 0a 00 00 b9 0a 00 00 b9 0a 00 00     ................
      8c:	b9 0a 00 00 b9 0a 00 00 b9 0a 00 00 b9 0a 00 00     ................
      9c:	b9 0a 00 00 b9 0a 00 00 b9 0a 00 00 b9 0a 00 00     ................
      ac:	b9 0a 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000070 	.word	0x20000070
      d4:	00000000 	.word	0x00000000
      d8:	00006168 	.word	0x00006168

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000074 	.word	0x20000074
     108:	00006168 	.word	0x00006168
     10c:	00006168 	.word	0x00006168
     110:	00000000 	.word	0x00000000

00000114 <_ZN14ADF5610_DriverD1Ev>:
		 pll_started=false;
}

ADF5610_Driver::~ADF5610_Driver() {
	// TODO Auto-generated destructor stub
}
     114:	4770      	bx	lr
	...

00000118 <_ZN14ADF5610_DriverD0Ev>:
ADF5610_Driver::~ADF5610_Driver() {
     118:	b510      	push	{r4, lr}
     11a:	0004      	movs	r4, r0
}
     11c:	21d4      	movs	r1, #212	; 0xd4
     11e:	0049      	lsls	r1, r1, #1
     120:	4b01      	ldr	r3, [pc, #4]	; (128 <_ZN14ADF5610_DriverD0Ev+0x10>)
     122:	4798      	blx	r3
     124:	0020      	movs	r0, r4
     126:	bd10      	pop	{r4, pc}
     128:	000025cb 	.word	0x000025cb

0000012c <_Z41__static_initialization_and_destruction_0ii>:
	else
	{
		delay_ms(1);
	}
	
}
     12c:	b510      	push	{r4, lr}
     12e:	2801      	cmp	r0, #1
     130:	d000      	beq.n	134 <_Z41__static_initialization_and_destruction_0ii+0x8>
     132:	bd10      	pop	{r4, pc}
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <_Z41__static_initialization_and_destruction_0ii+0x24>)
     136:	4299      	cmp	r1, r3
     138:	d1fb      	bne.n	132 <_Z41__static_initialization_and_destruction_0ii+0x6>
static SPI_Syn_Class staticSPI(&SPI_0);
     13a:	4c06      	ldr	r4, [pc, #24]	; (154 <_Z41__static_initialization_and_destruction_0ii+0x28>)
     13c:	4906      	ldr	r1, [pc, #24]	; (158 <_Z41__static_initialization_and_destruction_0ii+0x2c>)
     13e:	0020      	movs	r0, r4
     140:	4b06      	ldr	r3, [pc, #24]	; (15c <_Z41__static_initialization_and_destruction_0ii+0x30>)
     142:	4798      	blx	r3
     144:	4a06      	ldr	r2, [pc, #24]	; (160 <_Z41__static_initialization_and_destruction_0ii+0x34>)
     146:	4907      	ldr	r1, [pc, #28]	; (164 <_Z41__static_initialization_and_destruction_0ii+0x38>)
     148:	0020      	movs	r0, r4
     14a:	4b07      	ldr	r3, [pc, #28]	; (168 <_Z41__static_initialization_and_destruction_0ii+0x3c>)
     14c:	4798      	blx	r3
}
     14e:	e7f0      	b.n	132 <_Z41__static_initialization_and_destruction_0ii+0x6>
     150:	0000ffff 	.word	0x0000ffff
     154:	2000008c 	.word	0x2000008c
     158:	200004ec 	.word	0x200004ec
     15c:	00000c0d 	.word	0x00000c0d
     160:	20000000 	.word	0x20000000
     164:	00000c19 	.word	0x00000c19
     168:	000025bd 	.word	0x000025bd

0000016c <_ZN14ADF5610_DriverC1Ev>:
ADF5610_Driver::ADF5610_Driver() {
     16c:	b530      	push	{r4, r5, lr}
     16e:	4b16      	ldr	r3, [pc, #88]	; (1c8 <_ZN14ADF5610_DriverC1Ev+0x5c>)
     170:	3308      	adds	r3, #8
     172:	6003      	str	r3, [r0, #0]
	 current_frequency=3600;
     174:	2200      	movs	r2, #0
     176:	4b15      	ldr	r3, [pc, #84]	; (1cc <_ZN14ADF5610_DriverC1Ev+0x60>)
     178:	6082      	str	r2, [r0, #8]
     17a:	60c3      	str	r3, [r0, #12]
		 buffer32=0;
     17c:	2300      	movs	r3, #0
     17e:	229e      	movs	r2, #158	; 0x9e
     180:	0052      	lsls	r2, r2, #1
     182:	5083      	str	r3, [r0, r2]
		 dir=1;
     184:	2101      	movs	r1, #1
     186:	321c      	adds	r2, #28
     188:	5081      	str	r1, [r0, r2]
		 spi=&staticSPI;
     18a:	4a11      	ldr	r2, [pc, #68]	; (1d0 <_ZN14ADF5610_DriverC1Ev+0x64>)
     18c:	6102      	str	r2, [r0, #16]
		 is_locked=false;
     18e:	22ae      	movs	r2, #174	; 0xae
     190:	0052      	lsls	r2, r2, #1
     192:	5483      	strb	r3, [r0, r2]
		 upper_limit=3602;
     194:	2400      	movs	r4, #0
     196:	4d0f      	ldr	r5, [pc, #60]	; (1d4 <_ZN14ADF5610_DriverC1Ev+0x68>)
     198:	6184      	str	r4, [r0, #24]
     19a:	61c5      	str	r5, [r0, #28]
		 lower_limit=3598;
     19c:	2400      	movs	r4, #0
     19e:	4d0e      	ldr	r5, [pc, #56]	; (1d8 <_ZN14ADF5610_DriverC1Ev+0x6c>)
     1a0:	6204      	str	r4, [r0, #32]
     1a2:	6245      	str	r5, [r0, #36]	; 0x24
		 step=1.0/1024.0;
     1a4:	0002      	movs	r2, r0
     1a6:	3249      	adds	r2, #73	; 0x49
     1a8:	32ff      	adds	r2, #255	; 0xff
     1aa:	2400      	movs	r4, #0
     1ac:	4d0b      	ldr	r5, [pc, #44]	; (1dc <_ZN14ADF5610_DriverC1Ev+0x70>)
     1ae:	6014      	str	r4, [r2, #0]
     1b0:	6055      	str	r5, [r2, #4]
		 target_frequency=current_frequency+step;
     1b2:	3208      	adds	r2, #8
     1b4:	2480      	movs	r4, #128	; 0x80
     1b6:	0624      	lsls	r4, r4, #24
     1b8:	4d04      	ldr	r5, [pc, #16]	; (1cc <_ZN14ADF5610_DriverC1Ev+0x60>)
     1ba:	6014      	str	r4, [r2, #0]
     1bc:	6055      	str	r5, [r2, #4]
		 pll_started=false;
     1be:	2276      	movs	r2, #118	; 0x76
     1c0:	32ff      	adds	r2, #255	; 0xff
     1c2:	5483      	strb	r3, [r0, r2]
}
     1c4:	bd30      	pop	{r4, r5, pc}
     1c6:	46c0      	nop			; (mov r8, r8)
     1c8:	00005fcc 	.word	0x00005fcc
     1cc:	40ac2000 	.word	0x40ac2000
     1d0:	2000008c 	.word	0x2000008c
     1d4:	40ac2400 	.word	0x40ac2400
     1d8:	40ac1c00 	.word	0x40ac1c00
     1dc:	3f500000 	.word	0x3f500000

000001e0 <_ZN14ADF5610_Driver8IsLockedEv>:
bool ADF5610_Driver::IsLocked(void){
     1e0:	b530      	push	{r4, r5, lr}
     1e2:	b083      	sub	sp, #12
     1e4:	0005      	movs	r5, r0
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
     1e6:	a801      	add	r0, sp, #4
     1e8:	4b0b      	ldr	r3, [pc, #44]	; (218 <_ZN14ADF5610_Driver8IsLockedEv+0x38>)
     1ea:	4798      	blx	r3
	return tmp;
}

static inline hri_port_dir_reg_t hri_port_read_DIR_reg(const void *const hw, uint8_t submodule_index)
{
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
     1ec:	22c0      	movs	r2, #192	; 0xc0
     1ee:	05d2      	lsls	r2, r2, #23
     1f0:	6810      	ldr	r0, [r2, #0]
	return tmp;
}

static inline hri_port_in_reg_t hri_port_read_IN_reg(const void *const hw, uint8_t submodule_index)
{
	return ((Port *)hw)->Group[submodule_index].IN.reg;
     1f2:	4b0a      	ldr	r3, [pc, #40]	; (21c <_ZN14ADF5610_Driver8IsLockedEv+0x3c>)
     1f4:	6a1b      	ldr	r3, [r3, #32]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
     1f6:	6914      	ldr	r4, [r2, #16]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
     1f8:	405c      	eors	r4, r3
     1fa:	4004      	ands	r4, r0
     1fc:	405c      	eors	r4, r3

	CRITICAL_SECTION_LEAVE();
     1fe:	a801      	add	r0, sp, #4
     200:	4b07      	ldr	r3, [pc, #28]	; (220 <_ZN14ADF5610_Driver8IsLockedEv+0x40>)
     202:	4798      	blx	r3
 *
 * \param[in] pin       The pin number for device
 */
static inline bool gpio_get_pin_level(const uint8_t pin)
{
	return (bool)(_gpio_get_level((enum gpio_port)GPIO_PORT(pin)) & (0x01U << GPIO_PIN(pin)));
     204:	2040      	movs	r0, #64	; 0x40
     206:	4020      	ands	r0, r4
     208:	1e43      	subs	r3, r0, #1
     20a:	4198      	sbcs	r0, r3
     20c:	b2c0      	uxtb	r0, r0
	is_locked= gpio_get_pin_level(PA06);
     20e:	23ae      	movs	r3, #174	; 0xae
     210:	005b      	lsls	r3, r3, #1
     212:	54e8      	strb	r0, [r5, r3]
}
     214:	b003      	add	sp, #12
     216:	bd30      	pop	{r4, r5, pc}
     218:	00000ed1 	.word	0x00000ed1
     21c:	41004400 	.word	0x41004400
     220:	00000edf 	.word	0x00000edf

00000224 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm>:
void ADF5610_Driver::ConvertU32FourByteArray(uint8_t *array,uint32_t  data){
     224:	b510      	push	{r4, lr}
	for (int i =0;i<4;i++){
     226:	2000      	movs	r0, #0
     228:	2803      	cmp	r0, #3
     22a:	dc07      	bgt.n	23c <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x18>
		array[i]=(uint8_t)((data>>((3-i)*8)&0xff));
     22c:	2303      	movs	r3, #3
     22e:	1a1b      	subs	r3, r3, r0
     230:	00db      	lsls	r3, r3, #3
     232:	0014      	movs	r4, r2
     234:	40dc      	lsrs	r4, r3
     236:	540c      	strb	r4, [r1, r0]
	for (int i =0;i<4;i++){
     238:	3001      	adds	r0, #1
     23a:	e7f5      	b.n	228 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x4>
}
     23c:	bd10      	pop	{r4, pc}

0000023e <_ZN14ADF5610_Driver13ReadRegistersEh>:
	RegRead[index]=RegWrite[index];
     23e:	000b      	movs	r3, r1
     240:	3320      	adds	r3, #32
     242:	009b      	lsls	r3, r3, #2
     244:	18c3      	adds	r3, r0, r3
     246:	685b      	ldr	r3, [r3, #4]
     248:	310a      	adds	r1, #10
     24a:	0089      	lsls	r1, r1, #2
     24c:	500b      	str	r3, [r1, r0]
}
     24e:	4770      	bx	lr

00000250 <_ZN14ADF5610_Driver17InitiateRegistersEv>:
  for (int i = 0; i < 23; i++) {
     250:	2300      	movs	r3, #0
     252:	e00e      	b.n	272 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x22>
        RegIni[i] = 0x2;
     254:	001a      	movs	r2, r3
     256:	3238      	adds	r2, #56	; 0x38
     258:	0092      	lsls	r2, r2, #2
     25a:	2102      	movs	r1, #2
     25c:	5011      	str	r1, [r2, r0]
    RegWrite[i]=RegIni[i];
     25e:	001a      	movs	r2, r3
     260:	3238      	adds	r2, #56	; 0x38
     262:	0092      	lsls	r2, r2, #2
     264:	5811      	ldr	r1, [r2, r0]
     266:	001a      	movs	r2, r3
     268:	3220      	adds	r2, #32
     26a:	0092      	lsls	r2, r2, #2
     26c:	1882      	adds	r2, r0, r2
     26e:	6051      	str	r1, [r2, #4]
  for (int i = 0; i < 23; i++) {
     270:	3301      	adds	r3, #1
     272:	2b16      	cmp	r3, #22
     274:	dc66      	bgt.n	344 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xf4>
    switch (i) {
     276:	d85f      	bhi.n	338 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe8>
     278:	009a      	lsls	r2, r3, #2
     27a:	4933      	ldr	r1, [pc, #204]	; (348 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xf8>)
     27c:	588a      	ldr	r2, [r1, r2]
     27e:	4697      	mov	pc, r2
        RegIni[i] = 0x1;
     280:	001a      	movs	r2, r3
     282:	3238      	adds	r2, #56	; 0x38
     284:	0092      	lsls	r2, r2, #2
     286:	2101      	movs	r1, #1
     288:	5011      	str	r1, [r2, r0]
        break;
     28a:	e7e8      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x31;
     28c:	001a      	movs	r2, r3
     28e:	3238      	adds	r2, #56	; 0x38
     290:	0092      	lsls	r2, r2, #2
     292:	2131      	movs	r1, #49	; 0x31
     294:	5011      	str	r1, [r2, r0]
        break;
     296:	e7e2      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xFD70A3;
     298:	001a      	movs	r2, r3
     29a:	3238      	adds	r2, #56	; 0x38
     29c:	0092      	lsls	r2, r2, #2
     29e:	492b      	ldr	r1, [pc, #172]	; (34c <_ZN14ADF5610_Driver17InitiateRegistersEv+0xfc>)
     2a0:	5011      	str	r1, [r2, r0]
        break;
     2a2:	e7dc      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x000;
     2a4:	001a      	movs	r2, r3
     2a6:	3238      	adds	r2, #56	; 0x38
     2a8:	0092      	lsls	r2, r2, #2
     2aa:	2100      	movs	r1, #0
     2ac:	5011      	str	r1, [r2, r0]
        break;
     2ae:	e7d6      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x2F4A;
     2b0:	001a      	movs	r2, r3
     2b2:	3238      	adds	r2, #56	; 0x38
     2b4:	0092      	lsls	r2, r2, #2
     2b6:	4926      	ldr	r1, [pc, #152]	; (350 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x100>)
     2b8:	5011      	str	r1, [r2, r0]
        break;
     2ba:	e7d0      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x214D;
     2bc:	001a      	movs	r2, r3
     2be:	3238      	adds	r2, #56	; 0x38
     2c0:	0092      	lsls	r2, r2, #2
     2c2:	4924      	ldr	r1, [pc, #144]	; (354 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x104>)
     2c4:	5011      	str	r1, [r2, r0]
        break;
     2c6:	e7ca      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xC9BEFF;
     2c8:	001a      	movs	r2, r3
     2ca:	3238      	adds	r2, #56	; 0x38
     2cc:	0092      	lsls	r2, r2, #2
     2ce:	4922      	ldr	r1, [pc, #136]	; (358 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x108>)
     2d0:	5011      	str	r1, [r2, r0]
        break;
     2d2:	e7c4      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x3FFF;
     2d4:	001a      	movs	r2, r3
     2d6:	3238      	adds	r2, #56	; 0x38
     2d8:	0092      	lsls	r2, r2, #2
     2da:	4920      	ldr	r1, [pc, #128]	; (35c <_ZN14ADF5610_Driver17InitiateRegistersEv+0x10c>)
     2dc:	5011      	str	r1, [r2, r0]
        break;
     2de:	e7be      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x2047;
     2e0:	001a      	movs	r2, r3
     2e2:	3238      	adds	r2, #56	; 0x38
     2e4:	0092      	lsls	r2, r2, #2
     2e6:	491e      	ldr	r1, [pc, #120]	; (360 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x110>)
     2e8:	5011      	str	r1, [r2, r0]
        break;
     2ea:	e7b8      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xF8061;
     2ec:	001a      	movs	r2, r3
     2ee:	3238      	adds	r2, #56	; 0x38
     2f0:	0092      	lsls	r2, r2, #2
     2f2:	491c      	ldr	r1, [pc, #112]	; (364 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x114>)
     2f4:	5011      	str	r1, [r2, r0]
        break;
     2f6:	e7b2      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x081;
     2f8:	001a      	movs	r2, r3
     2fa:	3238      	adds	r2, #56	; 0x38
     2fc:	0092      	lsls	r2, r2, #2
     2fe:	2181      	movs	r1, #129	; 0x81
     300:	5011      	str	r1, [r2, r0]
        break;
     302:	e7ac      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
		RegIni[i] = 0x020;
     304:	001a      	movs	r2, r3
     306:	3238      	adds	r2, #56	; 0x38
     308:	0092      	lsls	r2, r2, #2
     30a:	2120      	movs	r1, #32
     30c:	5011      	str	r1, [r2, r0]
		break;
     30e:	e7a6      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = RegIni[5];
     310:	22f4      	movs	r2, #244	; 0xf4
     312:	5881      	ldr	r1, [r0, r2]
     314:	001a      	movs	r2, r3
     316:	3238      	adds	r2, #56	; 0x38
     318:	0092      	lsls	r2, r2, #2
     31a:	5011      	str	r1, [r2, r0]
         break;
     31c:	e79f      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
       RegIni[i] = (0x01<<3)|(0x00<<7)|(0x07<<9)|(0x03<<12)|(0x01<<15);
     31e:	001a      	movs	r2, r3
     320:	3238      	adds	r2, #56	; 0x38
     322:	0092      	lsls	r2, r2, #2
     324:	4910      	ldr	r1, [pc, #64]	; (368 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x118>)
     326:	5011      	str	r1, [r2, r0]
         break;
     328:	e799      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
         RegIni[i] =(0x02<<3)|(0x07<<7)|(0x00);
     32a:	001a      	movs	r2, r3
     32c:	3238      	adds	r2, #56	; 0x38
     32e:	0092      	lsls	r2, r2, #2
     330:	21e4      	movs	r1, #228	; 0xe4
     332:	0089      	lsls	r1, r1, #2
     334:	5011      	str	r1, [r2, r0]
         break;
     336:	e792      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x0;
     338:	001a      	movs	r2, r3
     33a:	3238      	adds	r2, #56	; 0x38
     33c:	0092      	lsls	r2, r2, #2
     33e:	2100      	movs	r1, #0
     340:	5011      	str	r1, [r2, r0]
        break;
     342:	e78c      	b.n	25e <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
}
     344:	4770      	bx	lr
     346:	46c0      	nop			; (mov r8, r8)
     348:	00005f20 	.word	0x00005f20
     34c:	00fd70a3 	.word	0x00fd70a3
     350:	00002f4a 	.word	0x00002f4a
     354:	0000214d 	.word	0x0000214d
     358:	00c9beff 	.word	0x00c9beff
     35c:	00003fff 	.word	0x00003fff
     360:	00002047 	.word	0x00002047
     364:	000f8061 	.word	0x000f8061
     368:	0000be08 	.word	0x0000be08

0000036c <_ZN14ADF5610_Driver16ReadAllRegistersEv>:
void ADF5610_Driver::ReadAllRegisters(){
     36c:	b570      	push	{r4, r5, r6, lr}
     36e:	0005      	movs	r5, r0
  for (int i=0; i<=19;i++){
     370:	2400      	movs	r4, #0
     372:	2c13      	cmp	r4, #19
     374:	dc05      	bgt.n	382 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x16>
    ReadRegisters((uint8_t)i);
     376:	b2e1      	uxtb	r1, r4
     378:	0028      	movs	r0, r5
     37a:	4b02      	ldr	r3, [pc, #8]	; (384 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x18>)
     37c:	4798      	blx	r3
  for (int i=0; i<=19;i++){
     37e:	3401      	adds	r4, #1
     380:	e7f7      	b.n	372 <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x6>
}
     382:	bd70      	pop	{r4, r5, r6, pc}
     384:	0000023f 	.word	0x0000023f

00000388 <_ZN14ADF5610_Driver3GCDEll>:
long ADF5610_Driver::GCD(long a, long b) {
     388:	b570      	push	{r4, r5, r6, lr}
     38a:	0006      	movs	r6, r0
     38c:	000d      	movs	r5, r1
     38e:	0014      	movs	r4, r2
	if (a == 0)
     390:	2900      	cmp	r1, #0
     392:	d016      	beq.n	3c2 <_ZN14ADF5610_Driver3GCDEll+0x3a>
	else if (b == 0)
     394:	2a00      	cmp	r2, #0
     396:	d016      	beq.n	3c6 <_ZN14ADF5610_Driver3GCDEll+0x3e>
	if (a < b)
     398:	4291      	cmp	r1, r2
     39a:	db09      	blt.n	3b0 <_ZN14ADF5610_Driver3GCDEll+0x28>
	return GCD(b, a % b);
     39c:	0011      	movs	r1, r2
     39e:	0028      	movs	r0, r5
     3a0:	4b0a      	ldr	r3, [pc, #40]	; (3cc <_ZN14ADF5610_Driver3GCDEll+0x44>)
     3a2:	4798      	blx	r3
     3a4:	000a      	movs	r2, r1
     3a6:	0021      	movs	r1, r4
     3a8:	0030      	movs	r0, r6
     3aa:	f7ff ffed 	bl	388 <_ZN14ADF5610_Driver3GCDEll>
     3ae:	e009      	b.n	3c4 <_ZN14ADF5610_Driver3GCDEll+0x3c>
	return GCD(a, b % a);
     3b0:	0010      	movs	r0, r2
     3b2:	4b06      	ldr	r3, [pc, #24]	; (3cc <_ZN14ADF5610_Driver3GCDEll+0x44>)
     3b4:	4798      	blx	r3
     3b6:	000a      	movs	r2, r1
     3b8:	0029      	movs	r1, r5
     3ba:	0030      	movs	r0, r6
     3bc:	f7ff ffe4 	bl	388 <_ZN14ADF5610_Driver3GCDEll>
     3c0:	e000      	b.n	3c4 <_ZN14ADF5610_Driver3GCDEll+0x3c>
	return b;
     3c2:	0010      	movs	r0, r2
}
     3c4:	bd70      	pop	{r4, r5, r6, pc}
	return a;
     3c6:	0008      	movs	r0, r1
     3c8:	e7fc      	b.n	3c4 <_ZN14ADF5610_Driver3GCDEll+0x3c>
     3ca:	46c0      	nop			; (mov r8, r8)
     3cc:	00004201 	.word	0x00004201

000003d0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv>:
void ADF5610_Driver::CalculateVCOValues(void){
     3d0:	b5f0      	push	{r4, r5, r6, r7, lr}
     3d2:	46de      	mov	lr, fp
     3d4:	4657      	mov	r7, sl
     3d6:	464e      	mov	r6, r9
     3d8:	4645      	mov	r5, r8
     3da:	b5e0      	push	{r5, r6, r7, lr}
     3dc:	b089      	sub	sp, #36	; 0x24
     3de:	0004      	movs	r4, r0
	 aux_register=0;
     3e0:	2200      	movs	r2, #0
     3e2:	23b0      	movs	r3, #176	; 0xb0
     3e4:	005b      	lsls	r3, r3, #1
     3e6:	50c2      	str	r2, [r0, r3]
		double  fDIV=target_frequency;
     3e8:	0006      	movs	r6, r0
     3ea:	3651      	adds	r6, #81	; 0x51
     3ec:	36ff      	adds	r6, #255	; 0xff
		int k=floor(log((14600)/(fDIV))/log(2));
     3ee:	4b9c      	ldr	r3, [pc, #624]	; (660 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x290>)
     3f0:	4698      	mov	r8, r3
     3f2:	6832      	ldr	r2, [r6, #0]
     3f4:	6873      	ldr	r3, [r6, #4]
     3f6:	2000      	movs	r0, #0
     3f8:	499a      	ldr	r1, [pc, #616]	; (664 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x294>)
     3fa:	47c0      	blx	r8
     3fc:	4b9a      	ldr	r3, [pc, #616]	; (668 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x298>)
     3fe:	4798      	blx	r3
     400:	4a9a      	ldr	r2, [pc, #616]	; (66c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x29c>)
     402:	4b9b      	ldr	r3, [pc, #620]	; (670 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a0>)
     404:	47c0      	blx	r8
     406:	4b9b      	ldr	r3, [pc, #620]	; (674 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a4>)
     408:	4798      	blx	r3
     40a:	4b9b      	ldr	r3, [pc, #620]	; (678 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a8>)
     40c:	4798      	blx	r3
		uint8_t kDIV=7-(uint8_t)(k);
     40e:	2507      	movs	r5, #7
     410:	1a2d      	subs	r5, r5, r0
     412:	b2eb      	uxtb	r3, r5
     414:	469b      	mov	fp, r3
	  double fVCO = 7300*((target_frequency*pow(2, k))/(14600)); //VCO
     416:	6877      	ldr	r7, [r6, #4]
     418:	6836      	ldr	r6, [r6, #0]
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
     41a:	4b98      	ldr	r3, [pc, #608]	; (67c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2ac>)
     41c:	4798      	blx	r3
     41e:	0002      	movs	r2, r0
     420:	000b      	movs	r3, r1
     422:	2000      	movs	r0, #0
     424:	2180      	movs	r1, #128	; 0x80
     426:	05c9      	lsls	r1, r1, #23
     428:	4d95      	ldr	r5, [pc, #596]	; (680 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2b0>)
     42a:	47a8      	blx	r5
     42c:	0002      	movs	r2, r0
     42e:	000b      	movs	r3, r1
     430:	4994      	ldr	r1, [pc, #592]	; (684 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2b4>)
     432:	4689      	mov	r9, r1
     434:	0030      	movs	r0, r6
     436:	0039      	movs	r1, r7
     438:	47c8      	blx	r9
     43a:	2200      	movs	r2, #0
     43c:	4b89      	ldr	r3, [pc, #548]	; (664 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x294>)
     43e:	47c0      	blx	r8
     440:	2200      	movs	r2, #0
     442:	4b91      	ldr	r3, [pc, #580]	; (688 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2b8>)
     444:	47c8      	blx	r9
     446:	9000      	str	r0, [sp, #0]
     448:	9101      	str	r1, [sp, #4]
	  if (fVCO<4000){
     44a:	2200      	movs	r2, #0
     44c:	4b8f      	ldr	r3, [pc, #572]	; (68c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2bc>)
     44e:	4e90      	ldr	r6, [pc, #576]	; (690 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2c0>)
     450:	47b0      	blx	r6
     452:	2800      	cmp	r0, #0
     454:	d05c      	beq.n	510 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x140>
		fPD = 1*fX; //Phase detector frequency
     456:	2200      	movs	r2, #0
     458:	4b8e      	ldr	r3, [pc, #568]	; (694 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2c4>)
     45a:	9202      	str	r2, [sp, #8]
     45c:	9303      	str	r3, [sp, #12]
    N_Int = floor(fVCO/fPD);   // N= 50 for 5 GHz   // Turn N into integer
     45e:	4f80      	ldr	r7, [pc, #512]	; (660 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x290>)
     460:	9a02      	ldr	r2, [sp, #8]
     462:	9b03      	ldr	r3, [sp, #12]
     464:	9800      	ldr	r0, [sp, #0]
     466:	9901      	ldr	r1, [sp, #4]
     468:	47b8      	blx	r7
     46a:	4b82      	ldr	r3, [pc, #520]	; (674 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a4>)
     46c:	4798      	blx	r3
     46e:	0005      	movs	r5, r0
     470:	000e      	movs	r6, r1
     472:	9504      	str	r5, [sp, #16]
     474:	9605      	str	r6, [sp, #20]
     476:	0023      	movs	r3, r4
     478:	3389      	adds	r3, #137	; 0x89
     47a:	33ff      	adds	r3, #255	; 0xff
     47c:	0001      	movs	r1, r0
     47e:	0032      	movs	r2, r6
     480:	6019      	str	r1, [r3, #0]
     482:	605a      	str	r2, [r3, #4]
    f_N=N_Int*fPD;
     484:	4b7f      	ldr	r3, [pc, #508]	; (684 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2b4>)
     486:	4699      	mov	r9, r3
     488:	9a02      	ldr	r2, [sp, #8]
     48a:	9b03      	ldr	r3, [sp, #12]
     48c:	0028      	movs	r0, r5
     48e:	0031      	movs	r1, r6
     490:	47c8      	blx	r9
     492:	0023      	movs	r3, r4
     494:	3379      	adds	r3, #121	; 0x79
     496:	33ff      	adds	r3, #255	; 0xff
     498:	9006      	str	r0, [sp, #24]
     49a:	9107      	str	r1, [sp, #28]
     49c:	000a      	movs	r2, r1
     49e:	0001      	movs	r1, r0
     4a0:	6019      	str	r1, [r3, #0]
     4a2:	605a      	str	r2, [r3, #4]
    f_GCD=GCD(long(fVCO),long(fPD));
     4a4:	4e74      	ldr	r6, [pc, #464]	; (678 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a8>)
     4a6:	9802      	ldr	r0, [sp, #8]
     4a8:	9903      	ldr	r1, [sp, #12]
     4aa:	47b0      	blx	r6
     4ac:	0005      	movs	r5, r0
     4ae:	9800      	ldr	r0, [sp, #0]
     4b0:	9901      	ldr	r1, [sp, #4]
     4b2:	47b0      	blx	r6
     4b4:	0001      	movs	r1, r0
     4b6:	002a      	movs	r2, r5
     4b8:	0020      	movs	r0, r4
     4ba:	4b77      	ldr	r3, [pc, #476]	; (698 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2c8>)
     4bc:	4798      	blx	r3
     4be:	4b6f      	ldr	r3, [pc, #444]	; (67c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2ac>)
     4c0:	4798      	blx	r3
     4c2:	0002      	movs	r2, r0
     4c4:	000b      	movs	r3, r1
     4c6:	0021      	movs	r1, r4
     4c8:	3181      	adds	r1, #129	; 0x81
     4ca:	31ff      	adds	r1, #255	; 0xff
     4cc:	600a      	str	r2, [r1, #0]
     4ce:	604b      	str	r3, [r1, #4]
    fPDfGCD=(uint32_t)(fPD/f_GCD);
     4d0:	9802      	ldr	r0, [sp, #8]
     4d2:	9903      	ldr	r1, [sp, #12]
     4d4:	47b8      	blx	r7
     4d6:	4b71      	ldr	r3, [pc, #452]	; (69c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2cc>)
     4d8:	4698      	mov	r8, r3
     4da:	4798      	blx	r3
     4dc:	0006      	movs	r6, r0
     4de:	23d2      	movs	r3, #210	; 0xd2
     4e0:	005b      	lsls	r3, r3, #1
     4e2:	50e0      	str	r0, [r4, r3]
    F_FracN=(uint32_t)(ceil(pow(2,24)*(fVCO-f_N)/(fPD)));
     4e4:	9a06      	ldr	r2, [sp, #24]
     4e6:	9b07      	ldr	r3, [sp, #28]
     4e8:	9800      	ldr	r0, [sp, #0]
     4ea:	9901      	ldr	r1, [sp, #4]
     4ec:	4d6c      	ldr	r5, [pc, #432]	; (6a0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2d0>)
     4ee:	47a8      	blx	r5
     4f0:	2200      	movs	r2, #0
     4f2:	4b6c      	ldr	r3, [pc, #432]	; (6a4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2d4>)
     4f4:	47c8      	blx	r9
     4f6:	9a02      	ldr	r2, [sp, #8]
     4f8:	9b03      	ldr	r3, [sp, #12]
     4fa:	47b8      	blx	r7
     4fc:	4b6a      	ldr	r3, [pc, #424]	; (6a8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2d8>)
     4fe:	4798      	blx	r3
     500:	47c0      	blx	r8
     502:	4681      	mov	r9, r0
     504:	23d0      	movs	r3, #208	; 0xd0
     506:	005b      	lsls	r3, r3, #1
     508:	50e0      	str	r0, [r4, r3]
  for (int i = 0; i < 23; i++) {
     50a:	2700      	movs	r7, #0
     50c:	46da      	mov	sl, fp
     50e:	e010      	b.n	532 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x162>
		fPD = 2*fX; //Phase detector frequency
     510:	2200      	movs	r2, #0
     512:	4b66      	ldr	r3, [pc, #408]	; (6ac <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2dc>)
     514:	9202      	str	r2, [sp, #8]
     516:	9303      	str	r3, [sp, #12]
     518:	e7a1      	b.n	45e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x8e>
        RegWrite[i] =(uint32_t)(0x00FFFFFF&((long)N_Int));  //Fixed value (Phase control not needed)
     51a:	9804      	ldr	r0, [sp, #16]
     51c:	9905      	ldr	r1, [sp, #20]
     51e:	4b56      	ldr	r3, [pc, #344]	; (678 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a8>)
     520:	4798      	blx	r3
     522:	0200      	lsls	r0, r0, #8
     524:	0a00      	lsrs	r0, r0, #8
     526:	003b      	movs	r3, r7
     528:	3320      	adds	r3, #32
     52a:	009b      	lsls	r3, r3, #2
     52c:	18e3      	adds	r3, r4, r3
     52e:	6058      	str	r0, [r3, #4]
  for (int i = 0; i < 23; i++) {
     530:	3701      	adds	r7, #1
     532:	2f16      	cmp	r7, #22
     534:	dd00      	ble.n	538 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x168>
     536:	e08c      	b.n	652 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x282>
    switch (i) {
     538:	1efb      	subs	r3, r7, #3
     53a:	2b13      	cmp	r3, #19
     53c:	d8f8      	bhi.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
     53e:	009b      	lsls	r3, r3, #2
     540:	4a5b      	ldr	r2, [pc, #364]	; (6b0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2e0>)
     542:	58d3      	ldr	r3, [r2, r3]
     544:	469f      	mov	pc, r3
        RegWrite[i] =(uint32_t)(0x00FFFFFF&(F_FracN));
     546:	464b      	mov	r3, r9
     548:	021a      	lsls	r2, r3, #8
     54a:	0a12      	lsrs	r2, r2, #8
     54c:	003b      	movs	r3, r7
     54e:	3320      	adds	r3, #32
     550:	009b      	lsls	r3, r3, #2
     552:	18e3      	adds	r3, r4, r3
     554:	605a      	str	r2, [r3, #4]
        break;
     556:	e7eb      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
		 RegWrite[i]=RegIni[i];
     558:	003b      	movs	r3, r7
     55a:	3338      	adds	r3, #56	; 0x38
     55c:	009b      	lsls	r3, r3, #2
     55e:	591a      	ldr	r2, [r3, r4]
     560:	003b      	movs	r3, r7
     562:	3320      	adds	r3, #32
     564:	009b      	lsls	r3, r3, #2
     566:	18e3      	adds	r3, r4, r3
     568:	605a      	str	r2, [r3, #4]
        break;
     56a:	e7e1      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
        if (fVCO<4000){
     56c:	2200      	movs	r2, #0
     56e:	4b47      	ldr	r3, [pc, #284]	; (68c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2bc>)
     570:	9800      	ldr	r0, [sp, #0]
     572:	9901      	ldr	r1, [sp, #4]
     574:	4d46      	ldr	r5, [pc, #280]	; (690 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2c0>)
     576:	47a8      	blx	r5
     578:	2800      	cmp	r0, #0
     57a:	d008      	beq.n	58e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1be>
          bitWrite(RegWrite[i], 19, 0);
     57c:	003b      	movs	r3, r7
     57e:	3320      	adds	r3, #32
     580:	009b      	lsls	r3, r3, #2
     582:	18e3      	adds	r3, r4, r3
     584:	4a4b      	ldr	r2, [pc, #300]	; (6b4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2e4>)
     586:	6859      	ldr	r1, [r3, #4]
     588:	400a      	ands	r2, r1
     58a:	605a      	str	r2, [r3, #4]
     58c:	e7d0      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
          bitWrite(RegWrite[i], 19, 1);
     58e:	003b      	movs	r3, r7
     590:	3320      	adds	r3, #32
     592:	009b      	lsls	r3, r3, #2
     594:	18e3      	adds	r3, r4, r3
     596:	2280      	movs	r2, #128	; 0x80
     598:	0312      	lsls	r2, r2, #12
     59a:	6859      	ldr	r1, [r3, #4]
     59c:	430a      	orrs	r2, r1
     59e:	605a      	str	r2, [r3, #4]
     5a0:	e7c6      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
		RegWrite[i]=(uint32_t)(0x3FFF&(fPDfGCD));
     5a2:	04b2      	lsls	r2, r6, #18
     5a4:	0c92      	lsrs	r2, r2, #18
     5a6:	003b      	movs	r3, r7
     5a8:	3320      	adds	r3, #32
     5aa:	009b      	lsls	r3, r3, #2
     5ac:	18e3      	adds	r3, r4, r3
     5ae:	605a      	str	r2, [r3, #4]
		break;
     5b0:	e7be      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
    	  aux_register=RegWrite[5];
     5b2:	2398      	movs	r3, #152	; 0x98
     5b4:	58e2      	ldr	r2, [r4, r3]
     5b6:	33c8      	adds	r3, #200	; 0xc8
     5b8:	50e2      	str	r2, [r4, r3]
        RegWrite[i]=aux_register;
     5ba:	003b      	movs	r3, r7
     5bc:	3320      	adds	r3, #32
     5be:	009b      	lsls	r3, r3, #2
     5c0:	18e3      	adds	r3, r4, r3
     5c2:	605a      	str	r2, [r3, #4]
        break;
     5c4:	e7b4      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
        RegWrite[i]=RegIni[i];
     5c6:	003b      	movs	r3, r7
     5c8:	3338      	adds	r3, #56	; 0x38
     5ca:	009b      	lsls	r3, r3, #2
     5cc:	591a      	ldr	r2, [r3, r4]
     5ce:	003b      	movs	r3, r7
     5d0:	3320      	adds	r3, #32
     5d2:	009b      	lsls	r3, r3, #2
     5d4:	18e3      	adds	r3, r4, r3
     5d6:	605a      	str	r2, [r3, #4]
        break;
     5d8:	e7aa      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
    switch (i) {
     5da:	2303      	movs	r3, #3
     5dc:	4655      	mov	r5, sl
     5de:	e022      	b.n	626 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x256>
					bitWrite(RegWrite[i], j, bitRead(VCOAdd,j-3));
     5e0:	1ed9      	subs	r1, r3, #3
     5e2:	2202      	movs	r2, #2
     5e4:	410a      	asrs	r2, r1
     5e6:	07d2      	lsls	r2, r2, #31
     5e8:	d509      	bpl.n	5fe <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x22e>
     5ea:	2101      	movs	r1, #1
     5ec:	4099      	lsls	r1, r3
     5ee:	003a      	movs	r2, r7
     5f0:	3220      	adds	r2, #32
     5f2:	0092      	lsls	r2, r2, #2
     5f4:	18a2      	adds	r2, r4, r2
     5f6:	6850      	ldr	r0, [r2, #4]
     5f8:	4301      	orrs	r1, r0
     5fa:	6051      	str	r1, [r2, #4]
     5fc:	e012      	b.n	624 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x254>
     5fe:	2101      	movs	r1, #1
     600:	4099      	lsls	r1, r3
     602:	003a      	movs	r2, r7
     604:	3220      	adds	r2, #32
     606:	0092      	lsls	r2, r2, #2
     608:	18a2      	adds	r2, r4, r2
     60a:	6850      	ldr	r0, [r2, #4]
     60c:	4388      	bics	r0, r1
     60e:	6050      	str	r0, [r2, #4]
     610:	e008      	b.n	624 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x254>
					bitWrite(RegWrite[i], j, bitRead(kDIV,j-7));
     612:	2101      	movs	r1, #1
     614:	4099      	lsls	r1, r3
     616:	003a      	movs	r2, r7
     618:	3220      	adds	r2, #32
     61a:	0092      	lsls	r2, r2, #2
     61c:	18a2      	adds	r2, r4, r2
     61e:	6850      	ldr	r0, [r2, #4]
     620:	4388      	bics	r0, r1
     622:	6050      	str	r0, [r2, #4]
			for (int j=3;j<16;j++){
     624:	3301      	adds	r3, #1
     626:	2b0f      	cmp	r3, #15
     628:	dc11      	bgt.n	64e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x27e>
				if (j<7){
     62a:	2b06      	cmp	r3, #6
     62c:	ddd8      	ble.n	5e0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x210>
					bitWrite(RegWrite[i], j, bitRead(kDIV,j-7));
     62e:	1fda      	subs	r2, r3, #7
     630:	0029      	movs	r1, r5
     632:	4111      	asrs	r1, r2
     634:	000a      	movs	r2, r1
     636:	07d2      	lsls	r2, r2, #31
     638:	d5eb      	bpl.n	612 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x242>
     63a:	2101      	movs	r1, #1
     63c:	4099      	lsls	r1, r3
     63e:	003a      	movs	r2, r7
     640:	3220      	adds	r2, #32
     642:	0092      	lsls	r2, r2, #2
     644:	18a2      	adds	r2, r4, r2
     646:	6850      	ldr	r0, [r2, #4]
     648:	4301      	orrs	r1, r0
     64a:	6051      	str	r1, [r2, #4]
     64c:	e7ea      	b.n	624 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x254>
     64e:	46aa      	mov	sl, r5
     650:	e76e      	b.n	530 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x160>
}
     652:	b009      	add	sp, #36	; 0x24
     654:	bc3c      	pop	{r2, r3, r4, r5}
     656:	4690      	mov	r8, r2
     658:	4699      	mov	r9, r3
     65a:	46a2      	mov	sl, r4
     65c:	46ab      	mov	fp, r5
     65e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     660:	000048e5 	.word	0x000048e5
     664:	40cc8400 	.word	0x40cc8400
     668:	00002839 	.word	0x00002839
     66c:	fefa39ef 	.word	0xfefa39ef
     670:	3fe62e42 	.word	0x3fe62e42
     674:	00002709 	.word	0x00002709
     678:	00005cb9 	.word	0x00005cb9
     67c:	00005d21 	.word	0x00005d21
     680:	00002949 	.word	0x00002949
     684:	0000514d 	.word	0x0000514d
     688:	40bc8400 	.word	0x40bc8400
     68c:	40af4000 	.word	0x40af4000
     690:	00004239 	.word	0x00004239
     694:	40490000 	.word	0x40490000
     698:	00000389 	.word	0x00000389
     69c:	00004289 	.word	0x00004289
     6a0:	0000564d 	.word	0x0000564d
     6a4:	41700000 	.word	0x41700000
     6a8:	000025dd 	.word	0x000025dd
     6ac:	40590000 	.word	0x40590000
     6b0:	00005f7c 	.word	0x00005f7c
     6b4:	fff7ffff 	.word	0xfff7ffff

000006b8 <_ZN14ADF5610_Driver16SetNextFrequencyEv>:
{
     6b8:	b510      	push	{r4, lr}
  CalculateVCOValues();
     6ba:	4b01      	ldr	r3, [pc, #4]	; (6c0 <_ZN14ADF5610_Driver16SetNextFrequencyEv+0x8>)
     6bc:	4798      	blx	r3
}
     6be:	bd10      	pop	{r4, pc}
     6c0:	000003d1 	.word	0x000003d1

000006c4 <_ZN14ADF5610_Driver6usleepEl>:
void ADF5610_Driver::usleep(long us){
     6c4:	b510      	push	{r4, lr}
     6c6:	0008      	movs	r0, r1
	if (us/1000>1)
     6c8:	4b07      	ldr	r3, [pc, #28]	; (6e8 <_ZN14ADF5610_Driver6usleepEl+0x24>)
     6ca:	4299      	cmp	r1, r3
     6cc:	dc03      	bgt.n	6d6 <_ZN14ADF5610_Driver6usleepEl+0x12>
		delay_ms(1);
     6ce:	2001      	movs	r0, #1
     6d0:	4b06      	ldr	r3, [pc, #24]	; (6ec <_ZN14ADF5610_Driver6usleepEl+0x28>)
     6d2:	4798      	blx	r3
}
     6d4:	bd10      	pop	{r4, pc}
		delay_ms(us/1000);
     6d6:	21fa      	movs	r1, #250	; 0xfa
     6d8:	0089      	lsls	r1, r1, #2
     6da:	4b05      	ldr	r3, [pc, #20]	; (6f0 <_ZN14ADF5610_Driver6usleepEl+0x2c>)
     6dc:	4798      	blx	r3
     6de:	b280      	uxth	r0, r0
     6e0:	4b02      	ldr	r3, [pc, #8]	; (6ec <_ZN14ADF5610_Driver6usleepEl+0x28>)
     6e2:	4798      	blx	r3
     6e4:	e7f6      	b.n	6d4 <_ZN14ADF5610_Driver6usleepEl+0x10>
     6e6:	46c0      	nop			; (mov r8, r8)
     6e8:	000007cf 	.word	0x000007cf
     6ec:	00000f01 	.word	0x00000f01
     6f0:	00004035 	.word	0x00004035

000006f4 <_ZN14ADF5610_Driver14WriteRegistersEh>:
void  ADF5610_Driver::WriteRegisters(uint8_t index) {
     6f4:	b570      	push	{r4, r5, r6, lr}
     6f6:	0004      	movs	r4, r0
     6f8:	000d      	movs	r5, r1
  local_index=0;
     6fa:	2300      	movs	r3, #0
     6fc:	22b2      	movs	r2, #178	; 0xb2
     6fe:	0052      	lsls	r2, r2, #1
     700:	5483      	strb	r3, [r0, r2]
  buffer32 = 0;
     702:	3a28      	subs	r2, #40	; 0x28
     704:	5083      	str	r3, [r0, r2]
  if (index>19){
     706:	2913      	cmp	r1, #19
     708:	dd1a      	ble.n	740 <_ZN14ADF5610_Driver14WriteRegistersEh+0x4c>
    if(index>22){
     70a:	2916      	cmp	r1, #22
     70c:	dd13      	ble.n	736 <_ZN14ADF5610_Driver14WriteRegistersEh+0x42>
		if (index>23)
     70e:	2917      	cmp	r1, #23
     710:	dd0c      	ble.n	72c <_ZN14ADF5610_Driver14WriteRegistersEh+0x38>
			if (index==24)
     712:	2918      	cmp	r1, #24
     714:	d004      	beq.n	720 <_ZN14ADF5610_Driver14WriteRegistersEh+0x2c>
				 local_index=3;
     716:	2203      	movs	r2, #3
     718:	23b2      	movs	r3, #178	; 0xb2
     71a:	005b      	lsls	r3, r3, #1
     71c:	54c2      	strb	r2, [r0, r3]
     71e:	e012      	b.n	746 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
				local_index=4;
     720:	3a39      	subs	r2, #57	; 0x39
     722:	3aff      	subs	r2, #255	; 0xff
     724:	23b2      	movs	r3, #178	; 0xb2
     726:	005b      	lsls	r3, r3, #1
     728:	54c2      	strb	r2, [r0, r3]
     72a:	e00c      	b.n	746 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
			 local_index=3;
     72c:	2203      	movs	r2, #3
     72e:	23b2      	movs	r3, #178	; 0xb2
     730:	005b      	lsls	r3, r3, #1
     732:	54c2      	strb	r2, [r0, r3]
     734:	e007      	b.n	746 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
		 local_index=5;
     736:	2205      	movs	r2, #5
     738:	23b2      	movs	r3, #178	; 0xb2
     73a:	005b      	lsls	r3, r3, #1
     73c:	54c2      	strb	r2, [r0, r3]
     73e:	e002      	b.n	746 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
    local_index=index;
     740:	23b2      	movs	r3, #178	; 0xb2
     742:	005b      	lsls	r3, r3, #1
     744:	54e1      	strb	r1, [r4, r3]
  switch (local_index){
     746:	23b2      	movs	r3, #178	; 0xb2
     748:	005b      	lsls	r3, r3, #1
     74a:	5ce3      	ldrb	r3, [r4, r3]
     74c:	3b10      	subs	r3, #16
     74e:	b2db      	uxtb	r3, r3
     750:	2b03      	cmp	r3, #3
     752:	d800      	bhi.n	756 <_ZN14ADF5610_Driver14WriteRegistersEh+0x62>
}
     754:	bd70      	pop	{r4, r5, r6, pc}
		    spi->SetCS(false);
     756:	2100      	movs	r1, #0
     758:	6920      	ldr	r0, [r4, #16]
     75a:	4e19      	ldr	r6, [pc, #100]	; (7c0 <_ZN14ADF5610_Driver14WriteRegistersEh+0xcc>)
     75c:	47b0      	blx	r6
			  buffer32 =((uint32_t)local_index <<3)|(RegWrite[index]<<8);
     75e:	23b2      	movs	r3, #178	; 0xb2
     760:	005b      	lsls	r3, r3, #1
     762:	5ce2      	ldrb	r2, [r4, r3]
     764:	00d2      	lsls	r2, r2, #3
     766:	3520      	adds	r5, #32
     768:	00ad      	lsls	r5, r5, #2
     76a:	1965      	adds	r5, r4, r5
     76c:	686b      	ldr	r3, [r5, #4]
     76e:	021b      	lsls	r3, r3, #8
     770:	431a      	orrs	r2, r3
     772:	239e      	movs	r3, #158	; 0x9e
     774:	005b      	lsls	r3, r3, #1
     776:	50e2      	str	r2, [r4, r3]
			  ConvertU32FourByteArray(to_send,buffer32);
     778:	0025      	movs	r5, r4
     77a:	3571      	adds	r5, #113	; 0x71
     77c:	35ff      	adds	r5, #255	; 0xff
     77e:	0029      	movs	r1, r5
     780:	0020      	movs	r0, r4
     782:	4b10      	ldr	r3, [pc, #64]	; (7c4 <_ZN14ADF5610_Driver14WriteRegistersEh+0xd0>)
     784:	4798      	blx	r3
		          spi->Write(to_send,4);
     786:	2204      	movs	r2, #4
     788:	0029      	movs	r1, r5
     78a:	6920      	ldr	r0, [r4, #16]
     78c:	4b0e      	ldr	r3, [pc, #56]	; (7c8 <_ZN14ADF5610_Driver14WriteRegistersEh+0xd4>)
     78e:	4798      	blx	r3
			 usleep(1);
     790:	2101      	movs	r1, #1
     792:	0020      	movs	r0, r4
     794:	4b0d      	ldr	r3, [pc, #52]	; (7cc <_ZN14ADF5610_Driver14WriteRegistersEh+0xd8>)
     796:	4798      	blx	r3
		   spi->SetCS(true);
     798:	2101      	movs	r1, #1
     79a:	6920      	ldr	r0, [r4, #16]
     79c:	47b0      	blx	r6
		   if(!is_locked){
     79e:	23ae      	movs	r3, #174	; 0xae
     7a0:	005b      	lsls	r3, r3, #1
     7a2:	5ce3      	ldrb	r3, [r4, r3]
     7a4:	2b00      	cmp	r3, #0
     7a6:	d1d5      	bne.n	754 <_ZN14ADF5610_Driver14WriteRegistersEh+0x60>
			   usleep(1);
     7a8:	2101      	movs	r1, #1
     7aa:	0020      	movs	r0, r4
     7ac:	4b07      	ldr	r3, [pc, #28]	; (7cc <_ZN14ADF5610_Driver14WriteRegistersEh+0xd8>)
     7ae:	4798      	blx	r3
			   ReadRegisters(local_index);
     7b0:	23b2      	movs	r3, #178	; 0xb2
     7b2:	005b      	lsls	r3, r3, #1
     7b4:	5ce1      	ldrb	r1, [r4, r3]
     7b6:	0020      	movs	r0, r4
     7b8:	4b05      	ldr	r3, [pc, #20]	; (7d0 <_ZN14ADF5610_Driver14WriteRegistersEh+0xdc>)
     7ba:	4798      	blx	r3
}
     7bc:	e7ca      	b.n	754 <_ZN14ADF5610_Driver14WriteRegistersEh+0x60>
     7be:	46c0      	nop			; (mov r8, r8)
     7c0:	00000c75 	.word	0x00000c75
     7c4:	00000225 	.word	0x00000225
     7c8:	00000c55 	.word	0x00000c55
     7cc:	000006c5 	.word	0x000006c5
     7d0:	0000023f 	.word	0x0000023f

000007d4 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj>:
void ADF5610_Driver::CompleteConfigurationFlow(unsigned int k){
     7d4:	b570      	push	{r4, r5, r6, lr}
     7d6:	0005      	movs	r5, r0
     7d8:	000c      	movs	r4, r1
     7da:	e00d      	b.n	7f8 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x24>
     7dc:	2616      	movs	r6, #22
      for(int j=22;j>19;j--){
     7de:	2e13      	cmp	r6, #19
     7e0:	dd05      	ble.n	7ee <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x1a>
        WriteRegisters(j);
     7e2:	b2f1      	uxtb	r1, r6
     7e4:	0028      	movs	r0, r5
     7e6:	4b0d      	ldr	r3, [pc, #52]	; (81c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     7e8:	4798      	blx	r3
      for(int j=22;j>19;j--){
     7ea:	3e01      	subs	r6, #1
     7ec:	e7f7      	b.n	7de <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0xa>
	   WriteRegisters(5);
     7ee:	2105      	movs	r1, #5
     7f0:	0028      	movs	r0, r5
     7f2:	4b0a      	ldr	r3, [pc, #40]	; (81c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     7f4:	4798      	blx	r3
  for (int i=k; i<20;i++){
     7f6:	3401      	adds	r4, #1
     7f8:	2c13      	cmp	r4, #19
     7fa:	dc06      	bgt.n	80a <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x36>
    if (i==5){
     7fc:	2c05      	cmp	r4, #5
     7fe:	d0ed      	beq.n	7dc <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x8>
      WriteRegisters(i);
     800:	b2e1      	uxtb	r1, r4
     802:	0028      	movs	r0, r5
     804:	4b05      	ldr	r3, [pc, #20]	; (81c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     806:	4798      	blx	r3
     808:	e7f5      	b.n	7f6 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x22>
  WriteRegisters(3);
     80a:	2103      	movs	r1, #3
     80c:	0028      	movs	r0, r5
     80e:	4c03      	ldr	r4, [pc, #12]	; (81c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     810:	47a0      	blx	r4
  WriteRegisters(4);
     812:	2104      	movs	r1, #4
     814:	0028      	movs	r0, r5
     816:	47a0      	blx	r4
}
     818:	bd70      	pop	{r4, r5, r6, pc}
     81a:	46c0      	nop			; (mov r8, r8)
     81c:	000006f5 	.word	0x000006f5

00000820 <_ZN14ADF5610_Driver7InitPLLEv>:
bool  ADF5610_Driver::InitPLL(void){
     820:	b570      	push	{r4, r5, r6, lr}
     822:	0004      	movs	r4, r0
		CompleteConfigurationFlow(0);
     824:	2100      	movs	r1, #0
     826:	0020      	movs	r0, r4
     828:	4b0d      	ldr	r3, [pc, #52]	; (860 <_ZN14ADF5610_Driver7InitPLLEv+0x40>)
     82a:	4798      	blx	r3
		ReadAllRegisters();
     82c:	0020      	movs	r0, r4
     82e:	4b0d      	ldr	r3, [pc, #52]	; (864 <_ZN14ADF5610_Driver7InitPLLEv+0x44>)
     830:	4798      	blx	r3
		pll_started= bitRead(RegRead[1],1)&(bitRead(RegRead[1],0)==0);
     832:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     834:	0859      	lsrs	r1, r3, #1
     836:	2201      	movs	r2, #1
     838:	401a      	ands	r2, r3
     83a:	4253      	negs	r3, r2
     83c:	4153      	adcs	r3, r2
     83e:	400b      	ands	r3, r1
     840:	2576      	movs	r5, #118	; 0x76
     842:	35ff      	adds	r5, #255	; 0xff
     844:	5563      	strb	r3, [r4, r5]
		delay_ms(100);
     846:	2064      	movs	r0, #100	; 0x64
     848:	4b07      	ldr	r3, [pc, #28]	; (868 <_ZN14ADF5610_Driver7InitPLLEv+0x48>)
     84a:	4798      	blx	r3
	}while((!IsLocked())|((!pll_started)|false));
     84c:	0020      	movs	r0, r4
     84e:	4b07      	ldr	r3, [pc, #28]	; (86c <_ZN14ADF5610_Driver7InitPLLEv+0x4c>)
     850:	4798      	blx	r3
     852:	5d63      	ldrb	r3, [r4, r5]
	do{
     854:	2800      	cmp	r0, #0
     856:	d0e5      	beq.n	824 <_ZN14ADF5610_Driver7InitPLLEv+0x4>
     858:	2b00      	cmp	r3, #0
     85a:	d0e3      	beq.n	824 <_ZN14ADF5610_Driver7InitPLLEv+0x4>
}
     85c:	0018      	movs	r0, r3
     85e:	bd70      	pop	{r4, r5, r6, pc}
     860:	000007d5 	.word	0x000007d5
     864:	0000036d 	.word	0x0000036d
     868:	00000f01 	.word	0x00000f01
     86c:	000001e1 	.word	0x000001e1

00000870 <_ZN14ADF5610_Driver4InitEv>:
void ADF5610_Driver::Init(void){
     870:	b510      	push	{r4, lr}
     872:	0004      	movs	r4, r0
	spi=&staticSPI;
     874:	4805      	ldr	r0, [pc, #20]	; (88c <_ZN14ADF5610_Driver4InitEv+0x1c>)
     876:	6120      	str	r0, [r4, #16]
	spi->Init();
     878:	4b05      	ldr	r3, [pc, #20]	; (890 <_ZN14ADF5610_Driver4InitEv+0x20>)
     87a:	4798      	blx	r3
	 InitiateRegisters();
     87c:	0020      	movs	r0, r4
     87e:	4b05      	ldr	r3, [pc, #20]	; (894 <_ZN14ADF5610_Driver4InitEv+0x24>)
     880:	4798      	blx	r3
	 InitPLL();
     882:	0020      	movs	r0, r4
     884:	4b04      	ldr	r3, [pc, #16]	; (898 <_ZN14ADF5610_Driver4InitEv+0x28>)
     886:	4798      	blx	r3
}
     888:	bd10      	pop	{r4, pc}
     88a:	46c0      	nop			; (mov r8, r8)
     88c:	2000008c 	.word	0x2000008c
     890:	00000c1d 	.word	0x00000c1d
     894:	00000251 	.word	0x00000251
     898:	00000821 	.word	0x00000821

0000089c <_ZN14ADF5610_Driver11WriteSubVCOEv>:
void ADF5610_Driver::WriteSubVCO(void){
     89c:	b570      	push	{r4, r5, r6, lr}
     89e:	0005      	movs	r5, r0
	WriteRegisters(22);
     8a0:	2116      	movs	r1, #22
     8a2:	4c04      	ldr	r4, [pc, #16]	; (8b4 <_ZN14ADF5610_Driver11WriteSubVCOEv+0x18>)
     8a4:	47a0      	blx	r4
	WriteRegisters(20);
     8a6:	2114      	movs	r1, #20
     8a8:	0028      	movs	r0, r5
     8aa:	47a0      	blx	r4
	WriteRegisters(5);
     8ac:	2105      	movs	r1, #5
     8ae:	0028      	movs	r0, r5
     8b0:	47a0      	blx	r4
}
     8b2:	bd70      	pop	{r4, r5, r6, pc}
     8b4:	000006f5 	.word	0x000006f5

000008b8 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv>:
void ADF5610_Driver::ShortConfigurationFlow(void){
     8b8:	b570      	push	{r4, r5, r6, lr}
     8ba:	0004      	movs	r4, r0
  WriteRegisters(8);
     8bc:	2108      	movs	r1, #8
     8be:	4d06      	ldr	r5, [pc, #24]	; (8d8 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv+0x20>)
     8c0:	47a8      	blx	r5
  WriteSubVCO();
     8c2:	0020      	movs	r0, r4
     8c4:	4b05      	ldr	r3, [pc, #20]	; (8dc <_ZN14ADF5610_Driver22ShortConfigurationFlowEv+0x24>)
     8c6:	4798      	blx	r3
  WriteRegisters(3);
     8c8:	2103      	movs	r1, #3
     8ca:	0020      	movs	r0, r4
     8cc:	47a8      	blx	r5
  WriteRegisters(4);
     8ce:	2104      	movs	r1, #4
     8d0:	0020      	movs	r0, r4
     8d2:	47a8      	blx	r5
}
     8d4:	bd70      	pop	{r4, r5, r6, pc}
     8d6:	46c0      	nop			; (mov r8, r8)
     8d8:	000006f5 	.word	0x000006f5
     8dc:	0000089d 	.word	0x0000089d

000008e0 <_ZN14ADF5610_Driver8SelfTestEh>:
bool	ADF5610_Driver::SelfTest(uint8_t cycles){
     8e0:	b5f0      	push	{r4, r5, r6, r7, lr}
     8e2:	46d6      	mov	lr, sl
     8e4:	464f      	mov	r7, r9
     8e6:	4646      	mov	r6, r8
     8e8:	b5c0      	push	{r6, r7, lr}
     8ea:	b082      	sub	sp, #8
     8ec:	0007      	movs	r7, r0
     8ee:	4689      	mov	r9, r1
	dir=1;
     8f0:	2201      	movs	r2, #1
     8f2:	23ac      	movs	r3, #172	; 0xac
     8f4:	005b      	lsls	r3, r3, #1
     8f6:	50c2      	str	r2, [r0, r3]
	int errorCounter=0;
     8f8:	2300      	movs	r3, #0
     8fa:	4698      	mov	r8, r3
     8fc:	e028      	b.n	950 <_ZN14ADF5610_Driver8SelfTestEh+0x70>
				dir=-1;
     8fe:	2201      	movs	r2, #1
     900:	4252      	negs	r2, r2
     902:	3358      	adds	r3, #88	; 0x58
     904:	33ff      	adds	r3, #255	; 0xff
     906:	50fa      	str	r2, [r7, r3]
				target_frequency=current_frequency+(dir*step);
     908:	23ac      	movs	r3, #172	; 0xac
     90a:	005b      	lsls	r3, r3, #1
     90c:	58f8      	ldr	r0, [r7, r3]
     90e:	4b57      	ldr	r3, [pc, #348]	; (a6c <_ZN14ADF5610_Driver8SelfTestEh+0x18c>)
     910:	4798      	blx	r3
     912:	9a00      	ldr	r2, [sp, #0]
     914:	9b01      	ldr	r3, [sp, #4]
     916:	4e56      	ldr	r6, [pc, #344]	; (a70 <_ZN14ADF5610_Driver8SelfTestEh+0x190>)
     918:	47b0      	blx	r6
     91a:	0002      	movs	r2, r0
     91c:	000b      	movs	r3, r1
     91e:	0020      	movs	r0, r4
     920:	0029      	movs	r1, r5
     922:	4c54      	ldr	r4, [pc, #336]	; (a74 <_ZN14ADF5610_Driver8SelfTestEh+0x194>)
     924:	47a0      	blx	r4
     926:	003b      	movs	r3, r7
     928:	3351      	adds	r3, #81	; 0x51
     92a:	33ff      	adds	r3, #255	; 0xff
     92c:	6018      	str	r0, [r3, #0]
     92e:	6059      	str	r1, [r3, #4]
				SetNextFrequency();
     930:	0038      	movs	r0, r7
     932:	4b51      	ldr	r3, [pc, #324]	; (a78 <_ZN14ADF5610_Driver8SelfTestEh+0x198>)
     934:	4798      	blx	r3
				ShortConfigurationFlow();
     936:	0038      	movs	r0, r7
     938:	4b50      	ldr	r3, [pc, #320]	; (a7c <_ZN14ADF5610_Driver8SelfTestEh+0x19c>)
     93a:	4798      	blx	r3
				usleep(1000);
     93c:	21fa      	movs	r1, #250	; 0xfa
     93e:	0089      	lsls	r1, r1, #2
     940:	0038      	movs	r0, r7
     942:	4b4f      	ldr	r3, [pc, #316]	; (a80 <_ZN14ADF5610_Driver8SelfTestEh+0x1a0>)
     944:	4798      	blx	r3
			 errorCounter=0;
     946:	2300      	movs	r3, #0
     948:	4698      	mov	r8, r3
		 delay_ms(1);
     94a:	2001      	movs	r0, #1
     94c:	4b4d      	ldr	r3, [pc, #308]	; (a84 <_ZN14ADF5610_Driver8SelfTestEh+0x1a4>)
     94e:	4798      	blx	r3
	while (((lower_limit<=current_frequency)&(current_frequency<=upper_limit))&&(cycles>counter)){
     950:	68bd      	ldr	r5, [r7, #8]
     952:	68fe      	ldr	r6, [r7, #12]
     954:	2301      	movs	r3, #1
     956:	466a      	mov	r2, sp
     958:	7013      	strb	r3, [r2, #0]
     95a:	002a      	movs	r2, r5
     95c:	0033      	movs	r3, r6
     95e:	6a38      	ldr	r0, [r7, #32]
     960:	6a79      	ldr	r1, [r7, #36]	; 0x24
     962:	4c49      	ldr	r4, [pc, #292]	; (a88 <_ZN14ADF5610_Driver8SelfTestEh+0x1a8>)
     964:	47a0      	blx	r4
     966:	2800      	cmp	r0, #0
     968:	d102      	bne.n	970 <_ZN14ADF5610_Driver8SelfTestEh+0x90>
     96a:	2300      	movs	r3, #0
     96c:	466a      	mov	r2, sp
     96e:	7013      	strb	r3, [r2, #0]
     970:	466b      	mov	r3, sp
     972:	781b      	ldrb	r3, [r3, #0]
     974:	469a      	mov	sl, r3
     976:	2401      	movs	r4, #1
     978:	69ba      	ldr	r2, [r7, #24]
     97a:	69fb      	ldr	r3, [r7, #28]
     97c:	0028      	movs	r0, r5
     97e:	0031      	movs	r1, r6
     980:	4e41      	ldr	r6, [pc, #260]	; (a88 <_ZN14ADF5610_Driver8SelfTestEh+0x1a8>)
     982:	47b0      	blx	r6
     984:	2800      	cmp	r0, #0
     986:	d100      	bne.n	98a <_ZN14ADF5610_Driver8SelfTestEh+0xaa>
     988:	2400      	movs	r4, #0
     98a:	4653      	mov	r3, sl
     98c:	4023      	ands	r3, r4
     98e:	1e1c      	subs	r4, r3, #0
     990:	d063      	beq.n	a5a <_ZN14ADF5610_Driver8SelfTestEh+0x17a>
     992:	464b      	mov	r3, r9
     994:	2b00      	cmp	r3, #0
     996:	dd61      	ble.n	a5c <_ZN14ADF5610_Driver8SelfTestEh+0x17c>
		 if(IsLocked()){
     998:	0038      	movs	r0, r7
     99a:	4b3c      	ldr	r3, [pc, #240]	; (a8c <_ZN14ADF5610_Driver8SelfTestEh+0x1ac>)
     99c:	4798      	blx	r3
     99e:	1e04      	subs	r4, r0, #0
     9a0:	d03a      	beq.n	a18 <_ZN14ADF5610_Driver8SelfTestEh+0x138>
			 is_locked=true;
     9a2:	2201      	movs	r2, #1
     9a4:	23ae      	movs	r3, #174	; 0xae
     9a6:	005b      	lsls	r3, r3, #1
     9a8:	54fa      	strb	r2, [r7, r3]
			 current_frequency=target_frequency;
     9aa:	003b      	movs	r3, r7
     9ac:	3351      	adds	r3, #81	; 0x51
     9ae:	33ff      	adds	r3, #255	; 0xff
     9b0:	681c      	ldr	r4, [r3, #0]
     9b2:	685d      	ldr	r5, [r3, #4]
     9b4:	60bc      	str	r4, [r7, #8]
     9b6:	60fd      	str	r5, [r7, #12]
			  if ((current_frequency>(upper_limit-step))&&(dir==1)){
     9b8:	3b08      	subs	r3, #8
     9ba:	681a      	ldr	r2, [r3, #0]
     9bc:	685b      	ldr	r3, [r3, #4]
     9be:	9200      	str	r2, [sp, #0]
     9c0:	9301      	str	r3, [sp, #4]
     9c2:	69b8      	ldr	r0, [r7, #24]
     9c4:	69f9      	ldr	r1, [r7, #28]
     9c6:	4e32      	ldr	r6, [pc, #200]	; (a90 <_ZN14ADF5610_Driver8SelfTestEh+0x1b0>)
     9c8:	47b0      	blx	r6
     9ca:	0002      	movs	r2, r0
     9cc:	000b      	movs	r3, r1
     9ce:	0020      	movs	r0, r4
     9d0:	0029      	movs	r1, r5
     9d2:	4e30      	ldr	r6, [pc, #192]	; (a94 <_ZN14ADF5610_Driver8SelfTestEh+0x1b4>)
     9d4:	47b0      	blx	r6
     9d6:	2800      	cmp	r0, #0
     9d8:	d004      	beq.n	9e4 <_ZN14ADF5610_Driver8SelfTestEh+0x104>
     9da:	23ac      	movs	r3, #172	; 0xac
     9dc:	005b      	lsls	r3, r3, #1
     9de:	58fb      	ldr	r3, [r7, r3]
     9e0:	2b01      	cmp	r3, #1
     9e2:	d08c      	beq.n	8fe <_ZN14ADF5610_Driver8SelfTestEh+0x1e>
			  }else if((current_frequency<(lower_limit+step))&&(dir==-1)){
     9e4:	6a3a      	ldr	r2, [r7, #32]
     9e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     9e8:	9800      	ldr	r0, [sp, #0]
     9ea:	9901      	ldr	r1, [sp, #4]
     9ec:	4e21      	ldr	r6, [pc, #132]	; (a74 <_ZN14ADF5610_Driver8SelfTestEh+0x194>)
     9ee:	47b0      	blx	r6
     9f0:	0002      	movs	r2, r0
     9f2:	000b      	movs	r3, r1
     9f4:	0020      	movs	r0, r4
     9f6:	0029      	movs	r1, r5
     9f8:	4e27      	ldr	r6, [pc, #156]	; (a98 <_ZN14ADF5610_Driver8SelfTestEh+0x1b8>)
     9fa:	47b0      	blx	r6
     9fc:	2800      	cmp	r0, #0
     9fe:	d100      	bne.n	a02 <_ZN14ADF5610_Driver8SelfTestEh+0x122>
     a00:	e782      	b.n	908 <_ZN14ADF5610_Driver8SelfTestEh+0x28>
     a02:	23ac      	movs	r3, #172	; 0xac
     a04:	005b      	lsls	r3, r3, #1
     a06:	58fb      	ldr	r3, [r7, r3]
     a08:	3301      	adds	r3, #1
     a0a:	d000      	beq.n	a0e <_ZN14ADF5610_Driver8SelfTestEh+0x12e>
     a0c:	e77c      	b.n	908 <_ZN14ADF5610_Driver8SelfTestEh+0x28>
				dir=1;
     a0e:	2201      	movs	r2, #1
     a10:	23ac      	movs	r3, #172	; 0xac
     a12:	005b      	lsls	r3, r3, #1
     a14:	50fa      	str	r2, [r7, r3]
     a16:	e777      	b.n	908 <_ZN14ADF5610_Driver8SelfTestEh+0x28>
			 errorCounter++;
     a18:	2301      	movs	r3, #1
     a1a:	469c      	mov	ip, r3
     a1c:	44e0      	add	r8, ip
			 if(is_locked){
     a1e:	335c      	adds	r3, #92	; 0x5c
     a20:	33ff      	adds	r3, #255	; 0xff
     a22:	5cfb      	ldrb	r3, [r7, r3]
     a24:	2b00      	cmp	r3, #0
     a26:	d003      	beq.n	a30 <_ZN14ADF5610_Driver8SelfTestEh+0x150>
				 is_locked=false;
     a28:	2200      	movs	r2, #0
     a2a:	23ae      	movs	r3, #174	; 0xae
     a2c:	005b      	lsls	r3, r3, #1
     a2e:	54fa      	strb	r2, [r7, r3]
		   SetNextFrequency();
     a30:	0038      	movs	r0, r7
     a32:	4b11      	ldr	r3, [pc, #68]	; (a78 <_ZN14ADF5610_Driver8SelfTestEh+0x198>)
     a34:	4798      	blx	r3
		   CompleteConfigurationFlow(0);
     a36:	2100      	movs	r1, #0
     a38:	0038      	movs	r0, r7
     a3a:	4b18      	ldr	r3, [pc, #96]	; (a9c <_ZN14ADF5610_Driver8SelfTestEh+0x1bc>)
     a3c:	4798      	blx	r3
			for (int var = 1; var < 24; ++var) {
     a3e:	2301      	movs	r3, #1
     a40:	2b17      	cmp	r3, #23
     a42:	dc01      	bgt.n	a48 <_ZN14ADF5610_Driver8SelfTestEh+0x168>
     a44:	3301      	adds	r3, #1
     a46:	e7fb      	b.n	a40 <_ZN14ADF5610_Driver8SelfTestEh+0x160>
			usleep(100000);
     a48:	4915      	ldr	r1, [pc, #84]	; (aa0 <_ZN14ADF5610_Driver8SelfTestEh+0x1c0>)
     a4a:	0038      	movs	r0, r7
     a4c:	4b0c      	ldr	r3, [pc, #48]	; (a80 <_ZN14ADF5610_Driver8SelfTestEh+0x1a0>)
     a4e:	4798      	blx	r3
			if(errorCounter>100){
     a50:	4643      	mov	r3, r8
     a52:	2b64      	cmp	r3, #100	; 0x64
     a54:	dc00      	bgt.n	a58 <_ZN14ADF5610_Driver8SelfTestEh+0x178>
     a56:	e778      	b.n	94a <_ZN14ADF5610_Driver8SelfTestEh+0x6a>
     a58:	e000      	b.n	a5c <_ZN14ADF5610_Driver8SelfTestEh+0x17c>
	return true;
     a5a:	2401      	movs	r4, #1
}
     a5c:	0020      	movs	r0, r4
     a5e:	b002      	add	sp, #8
     a60:	bc1c      	pop	{r2, r3, r4}
     a62:	4690      	mov	r8, r2
     a64:	4699      	mov	r9, r3
     a66:	46a2      	mov	sl, r4
     a68:	bdf0      	pop	{r4, r5, r6, r7, pc}
     a6a:	46c0      	nop			; (mov r8, r8)
     a6c:	00005d21 	.word	0x00005d21
     a70:	0000514d 	.word	0x0000514d
     a74:	000042c5 	.word	0x000042c5
     a78:	000006b9 	.word	0x000006b9
     a7c:	000008b9 	.word	0x000008b9
     a80:	000006c5 	.word	0x000006c5
     a84:	00000f01 	.word	0x00000f01
     a88:	0000424d 	.word	0x0000424d
     a8c:	000001e1 	.word	0x000001e1
     a90:	0000564d 	.word	0x0000564d
     a94:	00004261 	.word	0x00004261
     a98:	00004239 	.word	0x00004239
     a9c:	000007d5 	.word	0x000007d5
     aa0:	000186a0 	.word	0x000186a0

00000aa4 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev>:
}
     aa4:	b510      	push	{r4, lr}
     aa6:	4902      	ldr	r1, [pc, #8]	; (ab0 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev+0xc>)
     aa8:	2001      	movs	r0, #1
     aaa:	4b02      	ldr	r3, [pc, #8]	; (ab4 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev+0x10>)
     aac:	4798      	blx	r3
     aae:	bd10      	pop	{r4, pc}
     ab0:	0000ffff 	.word	0x0000ffff
     ab4:	0000012d 	.word	0x0000012d

00000ab8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     ab8:	e7fe      	b.n	ab8 <Dummy_Handler>
	...

00000abc <Reset_Handler>:
{
     abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     abe:	4a23      	ldr	r2, [pc, #140]	; (b4c <Reset_Handler+0x90>)
     ac0:	4b23      	ldr	r3, [pc, #140]	; (b50 <Reset_Handler+0x94>)
     ac2:	429a      	cmp	r2, r3
     ac4:	d009      	beq.n	ada <Reset_Handler+0x1e>
     ac6:	4b22      	ldr	r3, [pc, #136]	; (b50 <Reset_Handler+0x94>)
     ac8:	4a20      	ldr	r2, [pc, #128]	; (b4c <Reset_Handler+0x90>)
     aca:	e003      	b.n	ad4 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     acc:	6811      	ldr	r1, [r2, #0]
     ace:	6019      	str	r1, [r3, #0]
     ad0:	3304      	adds	r3, #4
     ad2:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     ad4:	491f      	ldr	r1, [pc, #124]	; (b54 <Reset_Handler+0x98>)
     ad6:	428b      	cmp	r3, r1
     ad8:	d3f8      	bcc.n	acc <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     ada:	4b1f      	ldr	r3, [pc, #124]	; (b58 <Reset_Handler+0x9c>)
     adc:	e002      	b.n	ae4 <Reset_Handler+0x28>
                *pDest++ = 0;
     ade:	2200      	movs	r2, #0
     ae0:	601a      	str	r2, [r3, #0]
     ae2:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     ae4:	4a1d      	ldr	r2, [pc, #116]	; (b5c <Reset_Handler+0xa0>)
     ae6:	4293      	cmp	r3, r2
     ae8:	d3f9      	bcc.n	ade <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     aea:	4a1d      	ldr	r2, [pc, #116]	; (b60 <Reset_Handler+0xa4>)
     aec:	21ff      	movs	r1, #255	; 0xff
     aee:	4b1d      	ldr	r3, [pc, #116]	; (b64 <Reset_Handler+0xa8>)
     af0:	438b      	bics	r3, r1
     af2:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     af4:	39fd      	subs	r1, #253	; 0xfd
     af6:	2390      	movs	r3, #144	; 0x90
     af8:	005b      	lsls	r3, r3, #1
     afa:	4a1b      	ldr	r2, [pc, #108]	; (b68 <Reset_Handler+0xac>)
     afc:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     afe:	4a1b      	ldr	r2, [pc, #108]	; (b6c <Reset_Handler+0xb0>)
     b00:	78d3      	ldrb	r3, [r2, #3]
     b02:	2503      	movs	r5, #3
     b04:	43ab      	bics	r3, r5
     b06:	2402      	movs	r4, #2
     b08:	4323      	orrs	r3, r4
     b0a:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     b0c:	78d3      	ldrb	r3, [r2, #3]
     b0e:	270c      	movs	r7, #12
     b10:	43bb      	bics	r3, r7
     b12:	2608      	movs	r6, #8
     b14:	4333      	orrs	r3, r6
     b16:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     b18:	4b15      	ldr	r3, [pc, #84]	; (b70 <Reset_Handler+0xb4>)
     b1a:	7b98      	ldrb	r0, [r3, #14]
     b1c:	2230      	movs	r2, #48	; 0x30
     b1e:	4390      	bics	r0, r2
     b20:	2220      	movs	r2, #32
     b22:	4310      	orrs	r0, r2
     b24:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     b26:	7b99      	ldrb	r1, [r3, #14]
     b28:	43b9      	bics	r1, r7
     b2a:	4331      	orrs	r1, r6
     b2c:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     b2e:	7b9a      	ldrb	r2, [r3, #14]
     b30:	43aa      	bics	r2, r5
     b32:	4322      	orrs	r2, r4
     b34:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     b36:	4a0f      	ldr	r2, [pc, #60]	; (b74 <Reset_Handler+0xb8>)
     b38:	6851      	ldr	r1, [r2, #4]
     b3a:	2380      	movs	r3, #128	; 0x80
     b3c:	430b      	orrs	r3, r1
     b3e:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     b40:	4b0d      	ldr	r3, [pc, #52]	; (b78 <Reset_Handler+0xbc>)
     b42:	4798      	blx	r3
        main();
     b44:	4b0d      	ldr	r3, [pc, #52]	; (b7c <Reset_Handler+0xc0>)
     b46:	4798      	blx	r3
     b48:	e7fe      	b.n	b48 <Reset_Handler+0x8c>
     b4a:	46c0      	nop			; (mov r8, r8)
     b4c:	00006168 	.word	0x00006168
     b50:	20000000 	.word	0x20000000
     b54:	2000006c 	.word	0x2000006c
     b58:	20000070 	.word	0x20000070
     b5c:	20000504 	.word	0x20000504
     b60:	e000ed00 	.word	0xe000ed00
     b64:	00000000 	.word	0x00000000
     b68:	41007000 	.word	0x41007000
     b6c:	41005000 	.word	0x41005000
     b70:	41004800 	.word	0x41004800
     b74:	41004000 	.word	0x41004000
     b78:	00005e09 	.word	0x00005e09
     b7c:	00000bbd 	.word	0x00000bbd

00000b80 <_Z41__static_initialization_and_destruction_0ii>:
	while (1) {
		adf.SelfTest(1);
		delay_ms(1000);
		adf.Init();
	}
}
     b80:	b510      	push	{r4, lr}
     b82:	2801      	cmp	r0, #1
     b84:	d000      	beq.n	b88 <_Z41__static_initialization_and_destruction_0ii+0x8>
     b86:	bd10      	pop	{r4, pc}
     b88:	4b06      	ldr	r3, [pc, #24]	; (ba4 <_Z41__static_initialization_and_destruction_0ii+0x24>)
     b8a:	4299      	cmp	r1, r3
     b8c:	d1fb      	bne.n	b86 <_Z41__static_initialization_and_destruction_0ii+0x6>
ADF5610_Driver adf;
     b8e:	4c06      	ldr	r4, [pc, #24]	; (ba8 <_Z41__static_initialization_and_destruction_0ii+0x28>)
     b90:	0020      	movs	r0, r4
     b92:	4b06      	ldr	r3, [pc, #24]	; (bac <_Z41__static_initialization_and_destruction_0ii+0x2c>)
     b94:	4798      	blx	r3
     b96:	4a06      	ldr	r2, [pc, #24]	; (bb0 <_Z41__static_initialization_and_destruction_0ii+0x30>)
     b98:	4906      	ldr	r1, [pc, #24]	; (bb4 <_Z41__static_initialization_and_destruction_0ii+0x34>)
     b9a:	0020      	movs	r0, r4
     b9c:	4b06      	ldr	r3, [pc, #24]	; (bb8 <_Z41__static_initialization_and_destruction_0ii+0x38>)
     b9e:	4798      	blx	r3
}
     ba0:	e7f1      	b.n	b86 <_Z41__static_initialization_and_destruction_0ii+0x6>
     ba2:	46c0      	nop			; (mov r8, r8)
     ba4:	0000ffff 	.word	0x0000ffff
     ba8:	200000b0 	.word	0x200000b0
     bac:	0000016d 	.word	0x0000016d
     bb0:	20000000 	.word	0x20000000
     bb4:	00000115 	.word	0x00000115
     bb8:	000025bd 	.word	0x000025bd

00000bbc <main>:
{
     bbc:	b510      	push	{r4, lr}
	atmel_start_init();
     bbe:	4b09      	ldr	r3, [pc, #36]	; (be4 <main+0x28>)
     bc0:	4798      	blx	r3
	adf.Init();
     bc2:	4809      	ldr	r0, [pc, #36]	; (be8 <main+0x2c>)
     bc4:	4b09      	ldr	r3, [pc, #36]	; (bec <main+0x30>)
     bc6:	4798      	blx	r3
		adf.SelfTest(1);
     bc8:	4c07      	ldr	r4, [pc, #28]	; (be8 <main+0x2c>)
     bca:	2101      	movs	r1, #1
     bcc:	0020      	movs	r0, r4
     bce:	4b08      	ldr	r3, [pc, #32]	; (bf0 <main+0x34>)
     bd0:	4798      	blx	r3
		delay_ms(1000);
     bd2:	20fa      	movs	r0, #250	; 0xfa
     bd4:	0080      	lsls	r0, r0, #2
     bd6:	4b07      	ldr	r3, [pc, #28]	; (bf4 <main+0x38>)
     bd8:	4798      	blx	r3
		adf.Init();
     bda:	0020      	movs	r0, r4
     bdc:	4b03      	ldr	r3, [pc, #12]	; (bec <main+0x30>)
     bde:	4798      	blx	r3
     be0:	e7f2      	b.n	bc8 <main+0xc>
     be2:	46c0      	nop			; (mov r8, r8)
     be4:	00000c8d 	.word	0x00000c8d
     be8:	200000b0 	.word	0x200000b0
     bec:	00000871 	.word	0x00000871
     bf0:	000008e1 	.word	0x000008e1
     bf4:	00000f01 	.word	0x00000f01

00000bf8 <_GLOBAL__sub_I_adf>:
}
     bf8:	b510      	push	{r4, lr}
     bfa:	4902      	ldr	r1, [pc, #8]	; (c04 <_GLOBAL__sub_I_adf+0xc>)
     bfc:	2001      	movs	r0, #1
     bfe:	4b02      	ldr	r3, [pc, #8]	; (c08 <_GLOBAL__sub_I_adf+0x10>)
     c00:	4798      	blx	r3
     c02:	bd10      	pop	{r4, pc}
     c04:	0000ffff 	.word	0x0000ffff
     c08:	00000b81 	.word	0x00000b81

00000c0c <_ZN13SPI_Syn_ClassC1EP21spi_m_sync_descriptor>:
	#ifdef ARDUINO_AVR_UNO
	#else
	
SPI_Syn_Class::SPI_Syn_Class(spi_m_sync_descriptor * spiDesc)
{
	SPI=spiDesc;
     c0c:	60c1      	str	r1, [r0, #12]
	ptrSPISync=this;
     c0e:	4b01      	ldr	r3, [pc, #4]	; (c14 <_ZN13SPI_Syn_ClassC1EP21spi_m_sync_descriptor+0x8>)
     c10:	6018      	str	r0, [r3, #0]
} //SPI_Syn_Class
     c12:	4770      	bx	lr
     c14:	20000258 	.word	0x20000258

00000c18 <_ZN13SPI_Syn_ClassD1Ev>:
#endif
// default destructor
SPI_Syn_Class::~SPI_Syn_Class()
{
} //~SPI_Syn_Class
     c18:	4770      	bx	lr
	...

00000c1c <_ZN13SPI_Syn_Class4InitEv>:

bool SPI_Syn_Class::Init(){
     c1c:	b510      	push	{r4, lr}
     c1e:	0004      	movs	r4, r0
		SPI.begin();
			ready=true;
	

	#else
	spi_m_sync_get_io_descriptor(SPI, &spio);
     c20:	0001      	movs	r1, r0
     c22:	3110      	adds	r1, #16
     c24:	68c0      	ldr	r0, [r0, #12]
     c26:	4b08      	ldr	r3, [pc, #32]	; (c48 <_ZN13SPI_Syn_Class4InitEv+0x2c>)
     c28:	4798      	blx	r3

	spi_m_sync_enable(SPI);
     c2a:	68e0      	ldr	r0, [r4, #12]
     c2c:	4b07      	ldr	r3, [pc, #28]	; (c4c <_ZN13SPI_Syn_Class4InitEv+0x30>)
     c2e:	4798      	blx	r3
	#endif
		txBuffer=txStaticBuffer;
     c30:	4b07      	ldr	r3, [pc, #28]	; (c50 <_ZN13SPI_Syn_Class4InitEv+0x34>)
     c32:	3304      	adds	r3, #4
     c34:	6063      	str	r3, [r4, #4]
		rxBuffer=txStaticBuffer;
     c36:	60a3      	str	r3, [r4, #8]
	ready=(SPI!=NULL);
     c38:	68e3      	ldr	r3, [r4, #12]
     c3a:	1e5a      	subs	r2, r3, #1
     c3c:	4193      	sbcs	r3, r2
     c3e:	b2db      	uxtb	r3, r3
     c40:	7023      	strb	r3, [r4, #0]
	return ready;
     c42:	7820      	ldrb	r0, [r4, #0]
     c44:	b2c0      	uxtb	r0, r0

	
}
     c46:	bd10      	pop	{r4, pc}
     c48:	00001099 	.word	0x00001099
     c4c:	00000fb1 	.word	0x00000fb1
     c50:	20000258 	.word	0x20000258

00000c54 <_ZN13SPI_Syn_Class5WriteEPKhl>:
#endif
	ready=true;
	return 0;
}

int32_t  SPI_Syn_Class::Write(const uint8_t * p, int32_t n){
     c54:	b510      	push	{r4, lr}
     c56:	0004      	movs	r4, r0
	int32_t w;
	wFlag=true;
     c58:	2301      	movs	r3, #1
     c5a:	7603      	strb	r3, [r0, #24]
#ifdef ARDUINO_AVR_UNO
	SPI.transfer((void*)p, n);
#else
	w=io_write(spio,p,n);
     c5c:	b292      	uxth	r2, r2
     c5e:	6900      	ldr	r0, [r0, #16]
     c60:	4b03      	ldr	r3, [pc, #12]	; (c70 <_ZN13SPI_Syn_Class5WriteEPKhl+0x1c>)
     c62:	4798      	blx	r3
	wFlag=(bool)w;
     c64:	0003      	movs	r3, r0
     c66:	1e5a      	subs	r2, r3, #1
     c68:	4193      	sbcs	r3, r2
     c6a:	7623      	strb	r3, [r4, #24]
#endif
	 return w;
	
}
     c6c:	bd10      	pop	{r4, pc}
     c6e:	46c0      	nop			; (mov r8, r8)
     c70:	00000f21 	.word	0x00000f21

00000c74 <_ZN13SPI_Syn_Class5SetCSEb>:
	if (level) {
     c74:	2900      	cmp	r1, #0
     c76:	d104      	bne.n	c82 <_ZN13SPI_Syn_Class5SetCSEb+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     c78:	2280      	movs	r2, #128	; 0x80
     c7a:	23c0      	movs	r3, #192	; 0xc0
     c7c:	05db      	lsls	r3, r3, #23
     c7e:	615a      	str	r2, [r3, #20]
	 delay(1);

	#else
	gpio_set_pin_level(CS_ADF5610,st);
	#endif
}
     c80:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     c82:	2280      	movs	r2, #128	; 0x80
     c84:	23c0      	movs	r3, #192	; 0xc0
     c86:	05db      	lsls	r3, r3, #23
     c88:	619a      	str	r2, [r3, #24]
     c8a:	e7f9      	b.n	c80 <_ZN13SPI_Syn_Class5SetCSEb+0xc>

00000c8c <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     c8c:	b510      	push	{r4, lr}
	system_init();
     c8e:	4b01      	ldr	r3, [pc, #4]	; (c94 <atmel_start_init+0x8>)
     c90:	4798      	blx	r3
	//usb_init();
}
     c92:	bd10      	pop	{r4, pc}
     c94:	00000e85 	.word	0x00000e85

00000c98 <SPI_0_PORT_init>:
#include <hpl_pm_base.h>

struct spi_m_sync_descriptor SPI_0;

void SPI_0_PORT_init(void)
{
     c98:	b5f0      	push	{r4, r5, r6, r7, lr}
     c9a:	46c6      	mov	lr, r8
     c9c:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     c9e:	22c0      	movs	r2, #192	; 0xc0
     ca0:	05d2      	lsls	r2, r2, #23
     ca2:	2310      	movs	r3, #16
     ca4:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     ca6:	6093      	str	r3, [r2, #8]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     ca8:	4b25      	ldr	r3, [pc, #148]	; (d40 <SPI_0_PORT_init+0xa8>)
     caa:	4926      	ldr	r1, [pc, #152]	; (d44 <SPI_0_PORT_init+0xac>)
     cac:	6299      	str	r1, [r3, #40]	; 0x28
     cae:	21c0      	movs	r1, #192	; 0xc0
     cb0:	0609      	lsls	r1, r1, #24
     cb2:	468c      	mov	ip, r1
     cb4:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     cb6:	2044      	movs	r0, #68	; 0x44
     cb8:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     cba:	2701      	movs	r7, #1
     cbc:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     cbe:	2601      	movs	r6, #1
     cc0:	4331      	orrs	r1, r6
     cc2:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     cc4:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     cc6:	2132      	movs	r1, #50	; 0x32
     cc8:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     cca:	250f      	movs	r5, #15
     ccc:	43a8      	bics	r0, r5
	tmp |= PORT_PMUX_PMUXE(data);
     cce:	2403      	movs	r4, #3
     cd0:	46a0      	mov	r8, r4
     cd2:	4644      	mov	r4, r8
     cd4:	4320      	orrs	r0, r4
     cd6:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     cd8:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     cda:	2020      	movs	r0, #32
     cdc:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     cde:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     ce0:	4819      	ldr	r0, [pc, #100]	; (d48 <SPI_0_PORT_init+0xb0>)
     ce2:	6298      	str	r0, [r3, #40]	; 0x28
     ce4:	4660      	mov	r0, ip
     ce6:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     ce8:	2045      	movs	r0, #69	; 0x45
     cea:	4684      	mov	ip, r0
     cec:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     cee:	43b8      	bics	r0, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     cf0:	4330      	orrs	r0, r6
     cf2:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     cf4:	4664      	mov	r4, ip
     cf6:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     cf8:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     cfa:	3c36      	subs	r4, #54	; 0x36
     cfc:	4020      	ands	r0, r4
	tmp |= PORT_PMUX_PMUXO(data);
     cfe:	2430      	movs	r4, #48	; 0x30
     d00:	46a4      	mov	ip, r4
     d02:	4664      	mov	r4, ip
     d04:	4320      	orrs	r0, r4
     d06:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     d08:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     d0a:	310e      	adds	r1, #14
     d0c:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     d0e:	4a0f      	ldr	r2, [pc, #60]	; (d4c <SPI_0_PORT_init+0xb4>)
     d10:	629a      	str	r2, [r3, #40]	; 0x28
     d12:	4a0f      	ldr	r2, [pc, #60]	; (d50 <SPI_0_PORT_init+0xb8>)
     d14:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     d16:	2246      	movs	r2, #70	; 0x46
     d18:	5c99      	ldrb	r1, [r3, r2]
     d1a:	2004      	movs	r0, #4
     d1c:	4381      	bics	r1, r0
     d1e:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     d20:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     d22:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     d24:	4331      	orrs	r1, r6
     d26:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     d28:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     d2a:	2133      	movs	r1, #51	; 0x33
     d2c:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     d2e:	43aa      	bics	r2, r5
	tmp |= PORT_PMUX_PMUXE(data);
     d30:	4640      	mov	r0, r8
     d32:	4302      	orrs	r2, r0
     d34:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     d36:	545a      	strb	r2, [r3, r1]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_OFF);

	gpio_set_pin_function(PA06, PINMUX_PA06D_SERCOM0_PAD2);
}
     d38:	bc04      	pop	{r2}
     d3a:	4690      	mov	r8, r2
     d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d3e:	46c0      	nop			; (mov r8, r8)
     d40:	41004400 	.word	0x41004400
     d44:	40000010 	.word	0x40000010
     d48:	40000020 	.word	0x40000020
     d4c:	40020040 	.word	0x40020040
     d50:	c0020000 	.word	0xc0020000

00000d54 <SPI_0_CLOCK_init>:
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
     d54:	4a04      	ldr	r2, [pc, #16]	; (d68 <SPI_0_CLOCK_init+0x14>)
     d56:	6a13      	ldr	r3, [r2, #32]
     d58:	2104      	movs	r1, #4
     d5a:	430b      	orrs	r3, r1
     d5c:	6213      	str	r3, [r2, #32]
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
     d5e:	4a03      	ldr	r2, [pc, #12]	; (d6c <SPI_0_CLOCK_init+0x18>)
     d60:	4b03      	ldr	r3, [pc, #12]	; (d70 <SPI_0_CLOCK_init+0x1c>)
     d62:	805a      	strh	r2, [r3, #2]

void SPI_0_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM0);
	_gclk_enable_channel(SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC);
}
     d64:	4770      	bx	lr
     d66:	46c0      	nop			; (mov r8, r8)
     d68:	40000400 	.word	0x40000400
     d6c:	00004014 	.word	0x00004014
     d70:	40000c00 	.word	0x40000c00

00000d74 <SPI_0_init>:

void SPI_0_init(void)
{
     d74:	b510      	push	{r4, lr}
	SPI_0_CLOCK_init();
     d76:	4b04      	ldr	r3, [pc, #16]	; (d88 <SPI_0_init+0x14>)
     d78:	4798      	blx	r3
	spi_m_sync_init(&SPI_0, SERCOM0);
     d7a:	4904      	ldr	r1, [pc, #16]	; (d8c <SPI_0_init+0x18>)
     d7c:	4804      	ldr	r0, [pc, #16]	; (d90 <SPI_0_init+0x1c>)
     d7e:	4b05      	ldr	r3, [pc, #20]	; (d94 <SPI_0_init+0x20>)
     d80:	4798      	blx	r3
	SPI_0_PORT_init();
     d82:	4b05      	ldr	r3, [pc, #20]	; (d98 <SPI_0_init+0x24>)
     d84:	4798      	blx	r3
}
     d86:	bd10      	pop	{r4, pc}
     d88:	00000d55 	.word	0x00000d55
     d8c:	42000800 	.word	0x42000800
     d90:	200004ec 	.word	0x200004ec
     d94:	00000f59 	.word	0x00000f59
     d98:	00000c99 	.word	0x00000c99

00000d9c <delay_driver_init>:

void delay_driver_init(void)
{
     d9c:	b510      	push	{r4, lr}
	delay_init(SysTick);
     d9e:	4802      	ldr	r0, [pc, #8]	; (da8 <delay_driver_init+0xc>)
     da0:	4b02      	ldr	r3, [pc, #8]	; (dac <delay_driver_init+0x10>)
     da2:	4798      	blx	r3
}
     da4:	bd10      	pop	{r4, pc}
     da6:	46c0      	nop			; (mov r8, r8)
     da8:	e000e010 	.word	0xe000e010
     dac:	00000eed 	.word	0x00000eed

00000db0 <USB_DEVICE_INSTANCE_PORT_init>:

void USB_DEVICE_INSTANCE_PORT_init(void)
{
     db0:	b5f0      	push	{r4, r5, r6, r7, lr}
     db2:	46c6      	mov	lr, r8
     db4:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     db6:	24c0      	movs	r4, #192	; 0xc0
     db8:	05e4      	lsls	r4, r4, #23
     dba:	2280      	movs	r2, #128	; 0x80
     dbc:	0452      	lsls	r2, r2, #17
     dbe:	60a2      	str	r2, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     dc0:	4b1c      	ldr	r3, [pc, #112]	; (e34 <USB_DEVICE_INSTANCE_PORT_init+0x84>)
     dc2:	2780      	movs	r7, #128	; 0x80
     dc4:	05ff      	lsls	r7, r7, #23
     dc6:	629f      	str	r7, [r3, #40]	; 0x28
     dc8:	491b      	ldr	r1, [pc, #108]	; (e38 <USB_DEVICE_INSTANCE_PORT_init+0x88>)
     dca:	6299      	str	r1, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     dcc:	6162      	str	r2, [r4, #20]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     dce:	2058      	movs	r0, #88	; 0x58
     dd0:	5c19      	ldrb	r1, [r3, r0]
     dd2:	2204      	movs	r2, #4
     dd4:	4690      	mov	r8, r2
     dd6:	4391      	bics	r1, r2
     dd8:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     dda:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     ddc:	2601      	movs	r6, #1
     dde:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     de0:	2501      	movs	r5, #1
     de2:	4329      	orrs	r1, r5
     de4:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     de6:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     de8:	381c      	subs	r0, #28
     dea:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     dec:	320b      	adds	r2, #11
     dee:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     df0:	2206      	movs	r2, #6
     df2:	4694      	mov	ip, r2
     df4:	4662      	mov	r2, ip
     df6:	4311      	orrs	r1, r2
     df8:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     dfa:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     dfc:	2180      	movs	r1, #128	; 0x80
     dfe:	0489      	lsls	r1, r1, #18
     e00:	60a1      	str	r1, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     e02:	629f      	str	r7, [r3, #40]	; 0x28
     e04:	4f0d      	ldr	r7, [pc, #52]	; (e3c <USB_DEVICE_INSTANCE_PORT_init+0x8c>)
     e06:	629f      	str	r7, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     e08:	6161      	str	r1, [r4, #20]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     e0a:	2159      	movs	r1, #89	; 0x59
     e0c:	5c5c      	ldrb	r4, [r3, r1]
     e0e:	4642      	mov	r2, r8
     e10:	4394      	bics	r4, r2
     e12:	545c      	strb	r4, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     e14:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     e16:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     e18:	432a      	orrs	r2, r5
     e1a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     e1c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     e1e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     e20:	394a      	subs	r1, #74	; 0x4a
     e22:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     e24:	2160      	movs	r1, #96	; 0x60
     e26:	430a      	orrs	r2, r1
     e28:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     e2a:	541a      	strb	r2, [r3, r0]
	                      // <GPIO_PIN_FUNCTION_E"> E
	                      // <GPIO_PIN_FUNCTION_F"> F
	                      // <GPIO_PIN_FUNCTION_G"> G
	                      // <GPIO_PIN_FUNCTION_H"> H
	                      PINMUX_PA25G_USB_DP);
}
     e2c:	bc04      	pop	{r2}
     e2e:	4690      	mov	r8, r2
     e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
     e32:	46c0      	nop			; (mov r8, r8)
     e34:	41004400 	.word	0x41004400
     e38:	c0000100 	.word	0xc0000100
     e3c:	c0000200 	.word	0xc0000200

00000e40 <USB_DEVICE_INSTANCE_CLOCK_init>:
			PM->APBBMASK.reg |= 1 << peripheral;
     e40:	4b06      	ldr	r3, [pc, #24]	; (e5c <USB_DEVICE_INSTANCE_CLOCK_init+0x1c>)
     e42:	69da      	ldr	r2, [r3, #28]
     e44:	2120      	movs	r1, #32
     e46:	430a      	orrs	r2, r1
     e48:	61da      	str	r2, [r3, #28]
			PM->AHBMASK.reg |= 1 << peripheral;
     e4a:	695a      	ldr	r2, [r3, #20]
     e4c:	3120      	adds	r1, #32
     e4e:	430a      	orrs	r2, r1
     e50:	615a      	str	r2, [r3, #20]
     e52:	4a03      	ldr	r2, [pc, #12]	; (e60 <USB_DEVICE_INSTANCE_CLOCK_init+0x20>)
     e54:	4b03      	ldr	r3, [pc, #12]	; (e64 <USB_DEVICE_INSTANCE_CLOCK_init+0x24>)
     e56:	805a      	strh	r2, [r3, #2]
{

	_pm_enable_bus_clock(PM_BUS_APBB, USB);
	_pm_enable_bus_clock(PM_BUS_AHB, USB);
	_gclk_enable_channel(USB_GCLK_ID, CONF_GCLK_USB_SRC);
}
     e58:	4770      	bx	lr
     e5a:	46c0      	nop			; (mov r8, r8)
     e5c:	40000400 	.word	0x40000400
     e60:	00004006 	.word	0x00004006
     e64:	40000c00 	.word	0x40000c00

00000e68 <USB_DEVICE_INSTANCE_init>:

void USB_DEVICE_INSTANCE_init(void)
{
     e68:	b510      	push	{r4, lr}
	USB_DEVICE_INSTANCE_CLOCK_init();
     e6a:	4b03      	ldr	r3, [pc, #12]	; (e78 <USB_DEVICE_INSTANCE_init+0x10>)
     e6c:	4798      	blx	r3
	usb_d_init();
     e6e:	4b03      	ldr	r3, [pc, #12]	; (e7c <USB_DEVICE_INSTANCE_init+0x14>)
     e70:	4798      	blx	r3
	USB_DEVICE_INSTANCE_PORT_init();
     e72:	4b03      	ldr	r3, [pc, #12]	; (e80 <USB_DEVICE_INSTANCE_init+0x18>)
     e74:	4798      	blx	r3
}
     e76:	bd10      	pop	{r4, pc}
     e78:	00000e41 	.word	0x00000e41
     e7c:	00001315 	.word	0x00001315
     e80:	00000db1 	.word	0x00000db1

00000e84 <system_init>:

void system_init(void)
{
     e84:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     e86:	4b0c      	ldr	r3, [pc, #48]	; (eb8 <system_init+0x34>)
     e88:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     e8a:	23c0      	movs	r3, #192	; 0xc0
     e8c:	05db      	lsls	r3, r3, #23
     e8e:	2280      	movs	r2, #128	; 0x80
     e90:	619a      	str	r2, [r3, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     e92:	609a      	str	r2, [r3, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     e94:	4b09      	ldr	r3, [pc, #36]	; (ebc <system_init+0x38>)
     e96:	4a0a      	ldr	r2, [pc, #40]	; (ec0 <system_init+0x3c>)
     e98:	629a      	str	r2, [r3, #40]	; 0x28
     e9a:	22c0      	movs	r2, #192	; 0xc0
     e9c:	0612      	lsls	r2, r2, #24
     e9e:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     ea0:	2147      	movs	r1, #71	; 0x47
     ea2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     ea4:	2001      	movs	r0, #1
     ea6:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     ea8:	545a      	strb	r2, [r3, r1]
	// Set pin direction to output
	gpio_set_pin_direction(CS_ADF5610, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(CS_ADF5610, GPIO_PIN_FUNCTION_OFF);

	SPI_0_init();
     eaa:	4b06      	ldr	r3, [pc, #24]	; (ec4 <system_init+0x40>)
     eac:	4798      	blx	r3

	delay_driver_init();
     eae:	4b06      	ldr	r3, [pc, #24]	; (ec8 <system_init+0x44>)
     eb0:	4798      	blx	r3

	USB_DEVICE_INSTANCE_init();
     eb2:	4b06      	ldr	r3, [pc, #24]	; (ecc <system_init+0x48>)
     eb4:	4798      	blx	r3
}
     eb6:	bd10      	pop	{r4, pc}
     eb8:	00001395 	.word	0x00001395
     ebc:	41004400 	.word	0x41004400
     ec0:	40000080 	.word	0x40000080
     ec4:	00000d75 	.word	0x00000d75
     ec8:	00000d9d 	.word	0x00000d9d
     ecc:	00000e69 	.word	0x00000e69

00000ed0 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     ed0:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     ed4:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     ed6:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     ed8:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     edc:	4770      	bx	lr

00000ede <atomic_leave_critical>:
     ede:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     ee2:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     ee4:	f383 8810 	msr	PRIMASK, r3
}
     ee8:	4770      	bx	lr
	...

00000eec <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
     eec:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
     eee:	4b02      	ldr	r3, [pc, #8]	; (ef8 <delay_init+0xc>)
     ef0:	6018      	str	r0, [r3, #0]
     ef2:	4b02      	ldr	r3, [pc, #8]	; (efc <delay_init+0x10>)
     ef4:	4798      	blx	r3
}
     ef6:	bd10      	pop	{r4, pc}
     ef8:	2000027c 	.word	0x2000027c
     efc:	000017e9 	.word	0x000017e9

00000f00 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     f00:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     f02:	4b04      	ldr	r3, [pc, #16]	; (f14 <delay_ms+0x14>)
     f04:	681c      	ldr	r4, [r3, #0]
     f06:	4b04      	ldr	r3, [pc, #16]	; (f18 <delay_ms+0x18>)
     f08:	4798      	blx	r3
     f0a:	0001      	movs	r1, r0
     f0c:	0020      	movs	r0, r4
     f0e:	4b03      	ldr	r3, [pc, #12]	; (f1c <delay_ms+0x1c>)
     f10:	4798      	blx	r3
}
     f12:	bd10      	pop	{r4, pc}
     f14:	2000027c 	.word	0x2000027c
     f18:	00001389 	.word	0x00001389
     f1c:	000017f5 	.word	0x000017f5

00000f20 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     f20:	b570      	push	{r4, r5, r6, lr}
     f22:	0004      	movs	r4, r0
     f24:	000d      	movs	r5, r1
     f26:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     f28:	2800      	cmp	r0, #0
     f2a:	d00e      	beq.n	f4a <io_write+0x2a>
     f2c:	2900      	cmp	r1, #0
     f2e:	d00a      	beq.n	f46 <io_write+0x26>
     f30:	2001      	movs	r0, #1
     f32:	2234      	movs	r2, #52	; 0x34
     f34:	4906      	ldr	r1, [pc, #24]	; (f50 <io_write+0x30>)
     f36:	4b07      	ldr	r3, [pc, #28]	; (f54 <io_write+0x34>)
     f38:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     f3a:	6823      	ldr	r3, [r4, #0]
     f3c:	0032      	movs	r2, r6
     f3e:	0029      	movs	r1, r5
     f40:	0020      	movs	r0, r4
     f42:	4798      	blx	r3
}
     f44:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     f46:	2000      	movs	r0, #0
     f48:	e7f3      	b.n	f32 <io_write+0x12>
     f4a:	2000      	movs	r0, #0
     f4c:	e7f1      	b.n	f32 <io_write+0x12>
     f4e:	46c0      	nop			; (mov r8, r8)
     f50:	00005fdc 	.word	0x00005fdc
     f54:	00001381 	.word	0x00001381

00000f58 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     f58:	b570      	push	{r4, r5, r6, lr}
     f5a:	0004      	movs	r4, r0
     f5c:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     f5e:	2800      	cmp	r0, #0
     f60:	d017      	beq.n	f92 <spi_m_sync_init+0x3a>
     f62:	2900      	cmp	r1, #0
     f64:	d013      	beq.n	f8e <spi_m_sync_init+0x36>
     f66:	2001      	movs	r0, #1
     f68:	2240      	movs	r2, #64	; 0x40
     f6a:	490b      	ldr	r1, [pc, #44]	; (f98 <spi_m_sync_init+0x40>)
     f6c:	4b0b      	ldr	r3, [pc, #44]	; (f9c <spi_m_sync_init+0x44>)
     f6e:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
     f70:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     f72:	1d20      	adds	r0, r4, #4
     f74:	0029      	movs	r1, r5
     f76:	4b0a      	ldr	r3, [pc, #40]	; (fa0 <spi_m_sync_init+0x48>)
     f78:	4798      	blx	r3

	if (rc < 0) {
     f7a:	2800      	cmp	r0, #0
     f7c:	db06      	blt.n	f8c <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     f7e:	4b09      	ldr	r3, [pc, #36]	; (fa4 <spi_m_sync_init+0x4c>)
     f80:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     f82:	4b09      	ldr	r3, [pc, #36]	; (fa8 <spi_m_sync_init+0x50>)
     f84:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     f86:	4b09      	ldr	r3, [pc, #36]	; (fac <spi_m_sync_init+0x54>)
     f88:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     f8a:	2000      	movs	r0, #0
}
     f8c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
     f8e:	2000      	movs	r0, #0
     f90:	e7ea      	b.n	f68 <spi_m_sync_init+0x10>
     f92:	2000      	movs	r0, #0
     f94:	e7e8      	b.n	f68 <spi_m_sync_init+0x10>
     f96:	46c0      	nop			; (mov r8, r8)
     f98:	00005ff0 	.word	0x00005ff0
     f9c:	00001381 	.word	0x00001381
     fa0:	00001435 	.word	0x00001435
     fa4:	ffff8000 	.word	0xffff8000
     fa8:	0000105d 	.word	0x0000105d
     fac:	00001021 	.word	0x00001021

00000fb0 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     fb0:	b510      	push	{r4, lr}
     fb2:	0004      	movs	r4, r0
	ASSERT(spi);
     fb4:	1e43      	subs	r3, r0, #1
     fb6:	4198      	sbcs	r0, r3
     fb8:	b2c0      	uxtb	r0, r0
     fba:	2257      	movs	r2, #87	; 0x57
     fbc:	4903      	ldr	r1, [pc, #12]	; (fcc <spi_m_sync_enable+0x1c>)
     fbe:	4b04      	ldr	r3, [pc, #16]	; (fd0 <spi_m_sync_enable+0x20>)
     fc0:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
     fc2:	1d20      	adds	r0, r4, #4
     fc4:	4b03      	ldr	r3, [pc, #12]	; (fd4 <spi_m_sync_enable+0x24>)
     fc6:	4798      	blx	r3
}
     fc8:	bd10      	pop	{r4, pc}
     fca:	46c0      	nop			; (mov r8, r8)
     fcc:	00005ff0 	.word	0x00005ff0
     fd0:	00001381 	.word	0x00001381
     fd4:	00001631 	.word	0x00001631

00000fd8 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     fd8:	b530      	push	{r4, r5, lr}
     fda:	b087      	sub	sp, #28
     fdc:	0004      	movs	r4, r0
     fde:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     fe0:	2800      	cmp	r0, #0
     fe2:	d015      	beq.n	1010 <spi_m_sync_transfer+0x38>
     fe4:	2900      	cmp	r1, #0
     fe6:	d011      	beq.n	100c <spi_m_sync_transfer+0x34>
     fe8:	2001      	movs	r0, #1
     fea:	22b3      	movs	r2, #179	; 0xb3
     fec:	4909      	ldr	r1, [pc, #36]	; (1014 <spi_m_sync_transfer+0x3c>)
     fee:	4b0a      	ldr	r3, [pc, #40]	; (1018 <spi_m_sync_transfer+0x40>)
     ff0:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
     ff2:	682b      	ldr	r3, [r5, #0]
     ff4:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     ff6:	686b      	ldr	r3, [r5, #4]
     ff8:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     ffa:	68ab      	ldr	r3, [r5, #8]
     ffc:	9301      	str	r3, [sp, #4]
     ffe:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
    1000:	1d20      	adds	r0, r4, #4
    1002:	a903      	add	r1, sp, #12
    1004:	4b05      	ldr	r3, [pc, #20]	; (101c <spi_m_sync_transfer+0x44>)
    1006:	4798      	blx	r3
}
    1008:	b007      	add	sp, #28
    100a:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
    100c:	2000      	movs	r0, #0
    100e:	e7ec      	b.n	fea <spi_m_sync_transfer+0x12>
    1010:	2000      	movs	r0, #0
    1012:	e7ea      	b.n	fea <spi_m_sync_transfer+0x12>
    1014:	00005ff0 	.word	0x00005ff0
    1018:	00001381 	.word	0x00001381
    101c:	00001665 	.word	0x00001665

00001020 <_spi_m_sync_io_write>:
{
    1020:	b570      	push	{r4, r5, r6, lr}
    1022:	b084      	sub	sp, #16
    1024:	0004      	movs	r4, r0
    1026:	000e      	movs	r6, r1
    1028:	0015      	movs	r5, r2
	ASSERT(io);
    102a:	1e43      	subs	r3, r0, #1
    102c:	4198      	sbcs	r0, r3
    102e:	b2c0      	uxtb	r0, r0
    1030:	22a3      	movs	r2, #163	; 0xa3
    1032:	4907      	ldr	r1, [pc, #28]	; (1050 <_spi_m_sync_io_write+0x30>)
    1034:	4b07      	ldr	r3, [pc, #28]	; (1054 <_spi_m_sync_io_write+0x34>)
    1036:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    1038:	0020      	movs	r0, r4
    103a:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
    103c:	2300      	movs	r3, #0
    103e:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
    1040:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
    1042:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    1044:	a901      	add	r1, sp, #4
    1046:	4b04      	ldr	r3, [pc, #16]	; (1058 <_spi_m_sync_io_write+0x38>)
    1048:	4798      	blx	r3
}
    104a:	b004      	add	sp, #16
    104c:	bd70      	pop	{r4, r5, r6, pc}
    104e:	46c0      	nop			; (mov r8, r8)
    1050:	00005ff0 	.word	0x00005ff0
    1054:	00001381 	.word	0x00001381
    1058:	00000fd9 	.word	0x00000fd9

0000105c <_spi_m_sync_io_read>:
{
    105c:	b570      	push	{r4, r5, r6, lr}
    105e:	b084      	sub	sp, #16
    1060:	0004      	movs	r4, r0
    1062:	000e      	movs	r6, r1
    1064:	0015      	movs	r5, r2
	ASSERT(io);
    1066:	1e43      	subs	r3, r0, #1
    1068:	4198      	sbcs	r0, r3
    106a:	b2c0      	uxtb	r0, r0
    106c:	2287      	movs	r2, #135	; 0x87
    106e:	4907      	ldr	r1, [pc, #28]	; (108c <_spi_m_sync_io_read+0x30>)
    1070:	4b07      	ldr	r3, [pc, #28]	; (1090 <_spi_m_sync_io_read+0x34>)
    1072:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    1074:	0020      	movs	r0, r4
    1076:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
    1078:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
    107a:	2300      	movs	r3, #0
    107c:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
    107e:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    1080:	a901      	add	r1, sp, #4
    1082:	4b04      	ldr	r3, [pc, #16]	; (1094 <_spi_m_sync_io_read+0x38>)
    1084:	4798      	blx	r3
}
    1086:	b004      	add	sp, #16
    1088:	bd70      	pop	{r4, r5, r6, pc}
    108a:	46c0      	nop			; (mov r8, r8)
    108c:	00005ff0 	.word	0x00005ff0
    1090:	00001381 	.word	0x00001381
    1094:	00000fd9 	.word	0x00000fd9

00001098 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
    1098:	b570      	push	{r4, r5, r6, lr}
    109a:	0004      	movs	r4, r0
    109c:	000d      	movs	r5, r1
	ASSERT(spi && io);
    109e:	2800      	cmp	r0, #0
    10a0:	d00c      	beq.n	10bc <spi_m_sync_get_io_descriptor+0x24>
    10a2:	2900      	cmp	r1, #0
    10a4:	d008      	beq.n	10b8 <spi_m_sync_get_io_descriptor+0x20>
    10a6:	2001      	movs	r0, #1
    10a8:	22bd      	movs	r2, #189	; 0xbd
    10aa:	4905      	ldr	r1, [pc, #20]	; (10c0 <spi_m_sync_get_io_descriptor+0x28>)
    10ac:	4b05      	ldr	r3, [pc, #20]	; (10c4 <spi_m_sync_get_io_descriptor+0x2c>)
    10ae:	4798      	blx	r3
	*io = &spi->io;
    10b0:	340c      	adds	r4, #12
    10b2:	602c      	str	r4, [r5, #0]
	return 0;
}
    10b4:	2000      	movs	r0, #0
    10b6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
    10b8:	2000      	movs	r0, #0
    10ba:	e7f5      	b.n	10a8 <spi_m_sync_get_io_descriptor+0x10>
    10bc:	2000      	movs	r0, #0
    10be:	e7f3      	b.n	10a8 <spi_m_sync_get_io_descriptor+0x10>
    10c0:	00005ff0 	.word	0x00005ff0
    10c4:	00001381 	.word	0x00001381

000010c8 <_usb_d_find_ep>:
 * \return Index of endpoint descriptor.
 * \retval >=0 The index.
 * \retval <0 Not found (endpoint is not initialized).
 */
static int8_t _usb_d_find_ep(const uint8_t ep)
{
    10c8:	b510      	push	{r4, lr}
    10ca:	0001      	movs	r1, r0
	int8_t i;
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    10cc:	2000      	movs	r0, #0
    10ce:	e001      	b.n	10d4 <_usb_d_find_ep+0xc>
    10d0:	3001      	adds	r0, #1
    10d2:	b240      	sxtb	r0, r0
    10d4:	2803      	cmp	r0, #3
    10d6:	dc0f      	bgt.n	10f8 <_usb_d_find_ep+0x30>
		if (usb_d_inst.ep[i].xfer.hdr.ep == ep) {
    10d8:	0142      	lsls	r2, r0, #5
    10da:	4b09      	ldr	r3, [pc, #36]	; (1100 <_usb_d_find_ep+0x38>)
    10dc:	189b      	adds	r3, r3, r2
    10de:	785a      	ldrb	r2, [r3, #1]
    10e0:	428a      	cmp	r2, r1
    10e2:	d00b      	beq.n	10fc <_usb_d_find_ep+0x34>
			return i;
		}
		if (usb_d_inst.ep[i].xfer.hdr.type == USB_EP_XTYPE_CTRL
    10e4:	0143      	lsls	r3, r0, #5
    10e6:	4c06      	ldr	r4, [pc, #24]	; (1100 <_usb_d_find_ep+0x38>)
    10e8:	5d1b      	ldrb	r3, [r3, r4]
    10ea:	2b00      	cmp	r3, #0
    10ec:	d1f0      	bne.n	10d0 <_usb_d_find_ep+0x8>
		    && (ep & USB_EP_N_MASK) == usb_d_inst.ep[i].xfer.hdr.ep) {
    10ee:	330f      	adds	r3, #15
    10f0:	400b      	ands	r3, r1
    10f2:	4293      	cmp	r3, r2
    10f4:	d1ec      	bne.n	10d0 <_usb_d_find_ep+0x8>
    10f6:	e001      	b.n	10fc <_usb_d_find_ep+0x34>
			return i;
		}
	}
	return -1;
    10f8:	2001      	movs	r0, #1
    10fa:	4240      	negs	r0, r0
}
    10fc:	bd10      	pop	{r4, pc}
    10fe:	46c0      	nop			; (mov r8, r8)
    1100:	20000280 	.word	0x20000280

00001104 <usb_d_dummy_cb_false>:
{
	(void)unused0;
	(void)unused1;
	(void)unused2;
	return false;
}
    1104:	2000      	movs	r0, #0
    1106:	4770      	bx	lr

00001108 <usb_d_cb_trans_more>:
 * \brief Callback invoked when request more data
 * \param[in] ep Endpoint number with transfer direction on bit 8.
 * \param[in] transfered Number of bytes transfered.
 */
static bool usb_d_cb_trans_more(const uint8_t ep, const uint32_t transfered)
{
    1108:	b570      	push	{r4, r5, r6, lr}
    110a:	0004      	movs	r4, r0
    110c:	000d      	movs	r5, r1
	int8_t           ep_index = _usb_d_find_ep(ep);
    110e:	4b08      	ldr	r3, [pc, #32]	; (1130 <usb_d_cb_trans_more+0x28>)
    1110:	4798      	blx	r3
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
	if (ept->xfer.hdr.state == USB_EP_S_X_DATA) {
    1112:	0142      	lsls	r2, r0, #5
    1114:	4b07      	ldr	r3, [pc, #28]	; (1134 <usb_d_cb_trans_more+0x2c>)
    1116:	189b      	adds	r3, r3, r2
    1118:	789b      	ldrb	r3, [r3, #2]
    111a:	2b03      	cmp	r3, #3
    111c:	d001      	beq.n	1122 <usb_d_cb_trans_more+0x1a>
		return ept->callbacks.more(ep, transfered);
	}
	return false;
    111e:	2000      	movs	r0, #0
}
    1120:	bd70      	pop	{r4, r5, r6, pc}
		return ept->callbacks.more(ep, transfered);
    1122:	4b04      	ldr	r3, [pc, #16]	; (1134 <usb_d_cb_trans_more+0x2c>)
    1124:	1898      	adds	r0, r3, r2
    1126:	6983      	ldr	r3, [r0, #24]
    1128:	0029      	movs	r1, r5
    112a:	0020      	movs	r0, r4
    112c:	4798      	blx	r3
    112e:	e7f7      	b.n	1120 <usb_d_cb_trans_more+0x18>
    1130:	000010c9 	.word	0x000010c9
    1134:	20000280 	.word	0x20000280

00001138 <_usb_d_cb_trans_done>:

/**
 * Callback when USB transactions are finished.
 */
static void _usb_d_cb_trans_done(const uint8_t ep, const int32_t code, const uint32_t transferred)
{
    1138:	b5f0      	push	{r4, r5, r6, r7, lr}
    113a:	b087      	sub	sp, #28
    113c:	0005      	movs	r5, r0
    113e:	000f      	movs	r7, r1
    1140:	9201      	str	r2, [sp, #4]
	int8_t           ep_index = _usb_d_find_ep(ep);
    1142:	4b4a      	ldr	r3, [pc, #296]	; (126c <_usb_d_cb_trans_done+0x134>)
    1144:	4798      	blx	r3
    1146:	0004      	movs	r4, r0
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
    1148:	0146      	lsls	r6, r0, #5
    114a:	4a49      	ldr	r2, [pc, #292]	; (1270 <_usb_d_cb_trans_done+0x138>)
    114c:	1996      	adds	r6, r2, r6

	if (code == USB_TRANS_DONE) {
    114e:	2f00      	cmp	r7, #0
    1150:	d151      	bne.n	11f6 <_usb_d_cb_trans_done+0xbe>
		ept->xfer.hdr.status = USB_XFER_DONE;
    1152:	0013      	movs	r3, r2
    1154:	0142      	lsls	r2, r0, #5
    1156:	2000      	movs	r0, #0
    1158:	70f0      	strb	r0, [r6, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    115a:	5cd3      	ldrb	r3, [r2, r3]
    115c:	2b00      	cmp	r3, #0
    115e:	d00e      	beq.n	117e <_usb_d_cb_trans_done+0x46>
			usb_d_ctrl_trans_done(ept);
			return;
		}
		ept->xfer.hdr.state = USB_EP_S_IDLE;
    1160:	0162      	lsls	r2, r4, #5
    1162:	4b43      	ldr	r3, [pc, #268]	; (1270 <_usb_d_cb_trans_done+0x138>)
    1164:	189b      	adds	r3, r3, r2
    1166:	2201      	movs	r2, #1
    1168:	709a      	strb	r2, [r3, #2]
	} else {
		ept->xfer.hdr.state  = USB_EP_S_ERROR;
		ept->xfer.hdr.status = USB_XFER_ERROR;
	}

	ept->callbacks.xfer(ep, (enum usb_xfer_code)ept->xfer.hdr.status, (void *)transferred);
    116a:	0164      	lsls	r4, r4, #5
    116c:	4b40      	ldr	r3, [pc, #256]	; (1270 <_usb_d_cb_trans_done+0x138>)
    116e:	191c      	adds	r4, r3, r4
    1170:	69e3      	ldr	r3, [r4, #28]
    1172:	78e1      	ldrb	r1, [r4, #3]
    1174:	9a01      	ldr	r2, [sp, #4]
    1176:	0028      	movs	r0, r5
    1178:	4798      	blx	r3
}
    117a:	b007      	add	sp, #28
    117c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint8_t state   = ept->xfer.hdr.state;
    117e:	78b3      	ldrb	r3, [r6, #2]
    1180:	240c      	movs	r4, #12
    1182:	5734      	ldrsb	r4, [r6, r4]
	if (state == USB_EP_S_X_DATA) {
    1184:	2b03      	cmp	r3, #3
    1186:	d008      	beq.n	119a <_usb_d_cb_trans_done+0x62>
		ept->callbacks.xfer(ept->xfer.hdr.ep, USB_XFER_DONE, ept->xfer.req);
    1188:	0032      	movs	r2, r6
    118a:	320c      	adds	r2, #12
    118c:	7870      	ldrb	r0, [r6, #1]
    118e:	2100      	movs	r1, #0
    1190:	69f3      	ldr	r3, [r6, #28]
    1192:	4798      	blx	r3
		ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    1194:	2302      	movs	r3, #2
    1196:	70b3      	strb	r3, [r6, #2]
    1198:	e7ef      	b.n	117a <_usb_d_cb_trans_done+0x42>
		bool err = ept->callbacks.xfer(ept->xfer.hdr.ep, USB_XFER_DATA, ept->xfer.req);
    119a:	7870      	ldrb	r0, [r6, #1]
    119c:	0032      	movs	r2, r6
    119e:	320c      	adds	r2, #12
    11a0:	2101      	movs	r1, #1
    11a2:	69f3      	ldr	r3, [r6, #28]
    11a4:	4798      	blx	r3
		if (err) {
    11a6:	2800      	cmp	r0, #0
    11a8:	d010      	beq.n	11cc <_usb_d_cb_trans_done+0x94>
			ept->xfer.hdr.state  = USB_EP_S_HALTED;
    11aa:	2305      	movs	r3, #5
    11ac:	70b3      	strb	r3, [r6, #2]
			ept->xfer.hdr.status = USB_XFER_HALT;
    11ae:	3b03      	subs	r3, #3
    11b0:	70f3      	strb	r3, [r6, #3]
			_usb_d_dev_ep_stall(req_dir ? ept->xfer.hdr.ep : (ept->xfer.hdr.ep | USB_EP_DIR), USB_EP_STALL_SET);
    11b2:	2c00      	cmp	r4, #0
    11b4:	db08      	blt.n	11c8 <_usb_d_cb_trans_done+0x90>
    11b6:	7873      	ldrb	r3, [r6, #1]
    11b8:	2080      	movs	r0, #128	; 0x80
    11ba:	4240      	negs	r0, r0
    11bc:	4318      	orrs	r0, r3
    11be:	b2c0      	uxtb	r0, r0
    11c0:	2101      	movs	r1, #1
    11c2:	4b2c      	ldr	r3, [pc, #176]	; (1274 <_usb_d_cb_trans_done+0x13c>)
    11c4:	4798      	blx	r3
    11c6:	e7d8      	b.n	117a <_usb_d_cb_trans_done+0x42>
    11c8:	7870      	ldrb	r0, [r6, #1]
    11ca:	e7f9      	b.n	11c0 <_usb_d_cb_trans_done+0x88>
			ept->xfer.hdr.state = USB_EP_S_X_STATUS;
    11cc:	2304      	movs	r3, #4
    11ce:	70b3      	strb	r3, [r6, #2]
			_usb_d_trans(ept->xfer.hdr.ep, !req_dir, NULL, 0, 1);
    11d0:	7871      	ldrb	r1, [r6, #1]
	struct usb_d_transfer trans
    11d2:	2200      	movs	r2, #0
    11d4:	9203      	str	r2, [sp, #12]
    11d6:	9204      	str	r2, [sp, #16]
    11d8:	2c00      	cmp	r4, #0
    11da:	db09      	blt.n	11f0 <_usb_d_cb_trans_done+0xb8>
    11dc:	3b84      	subs	r3, #132	; 0x84
    11de:	430b      	orrs	r3, r1
    11e0:	b2da      	uxtb	r2, r3
    11e2:	a803      	add	r0, sp, #12
    11e4:	7202      	strb	r2, [r0, #8]
    11e6:	2301      	movs	r3, #1
    11e8:	7243      	strb	r3, [r0, #9]
	return _usb_d_dev_ep_trans(&trans);
    11ea:	4b23      	ldr	r3, [pc, #140]	; (1278 <_usb_d_cb_trans_done+0x140>)
    11ec:	4798      	blx	r3
    11ee:	e7c4      	b.n	117a <_usb_d_cb_trans_done+0x42>
	struct usb_d_transfer trans
    11f0:	220f      	movs	r2, #15
    11f2:	400a      	ands	r2, r1
    11f4:	e7f5      	b.n	11e2 <_usb_d_cb_trans_done+0xaa>
	} else if (code == USB_TRANS_STALL) {
    11f6:	2f01      	cmp	r7, #1
    11f8:	d00a      	beq.n	1210 <_usb_d_cb_trans_done+0xd8>
	} else if (code == USB_TRANS_ABORT) {
    11fa:	2f02      	cmp	r7, #2
    11fc:	d01d      	beq.n	123a <_usb_d_cb_trans_done+0x102>
	} else if (code == USB_TRANS_RESET) {
    11fe:	2f03      	cmp	r7, #3
    1200:	d02c      	beq.n	125c <_usb_d_cb_trans_done+0x124>
		ept->xfer.hdr.state  = USB_EP_S_ERROR;
    1202:	0142      	lsls	r2, r0, #5
    1204:	4b1a      	ldr	r3, [pc, #104]	; (1270 <_usb_d_cb_trans_done+0x138>)
    1206:	189b      	adds	r3, r3, r2
    1208:	2206      	movs	r2, #6
    120a:	709a      	strb	r2, [r3, #2]
		ept->xfer.hdr.status = USB_XFER_ERROR;
    120c:	70da      	strb	r2, [r3, #3]
    120e:	e7ac      	b.n	116a <_usb_d_cb_trans_done+0x32>
		ept->xfer.hdr.status = USB_XFER_HALT;
    1210:	4b17      	ldr	r3, [pc, #92]	; (1270 <_usb_d_cb_trans_done+0x138>)
    1212:	0142      	lsls	r2, r0, #5
    1214:	1899      	adds	r1, r3, r2
    1216:	2002      	movs	r0, #2
    1218:	70c8      	strb	r0, [r1, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    121a:	5cd3      	ldrb	r3, [r2, r3]
    121c:	2b00      	cmp	r3, #0
    121e:	d005      	beq.n	122c <_usb_d_cb_trans_done+0xf4>
			ept->xfer.hdr.state = USB_EP_S_HALTED;
    1220:	0162      	lsls	r2, r4, #5
    1222:	4b13      	ldr	r3, [pc, #76]	; (1270 <_usb_d_cb_trans_done+0x138>)
    1224:	189b      	adds	r3, r3, r2
    1226:	2205      	movs	r2, #5
    1228:	709a      	strb	r2, [r3, #2]
    122a:	e79e      	b.n	116a <_usb_d_cb_trans_done+0x32>
			ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    122c:	2202      	movs	r2, #2
    122e:	708a      	strb	r2, [r1, #2]
			_usb_d_dev_ep_stall(ep, USB_EP_STALL_CLR);
    1230:	2100      	movs	r1, #0
    1232:	0028      	movs	r0, r5
    1234:	4b0f      	ldr	r3, [pc, #60]	; (1274 <_usb_d_cb_trans_done+0x13c>)
    1236:	4798      	blx	r3
    1238:	e797      	b.n	116a <_usb_d_cb_trans_done+0x32>
		ept->xfer.hdr.status = USB_XFER_ABORT;
    123a:	4b0d      	ldr	r3, [pc, #52]	; (1270 <_usb_d_cb_trans_done+0x138>)
    123c:	0142      	lsls	r2, r0, #5
    123e:	1899      	adds	r1, r3, r2
    1240:	2004      	movs	r0, #4
    1242:	70c8      	strb	r0, [r1, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    1244:	5cd3      	ldrb	r3, [r2, r3]
    1246:	2b00      	cmp	r3, #0
    1248:	d005      	beq.n	1256 <_usb_d_cb_trans_done+0x11e>
		ept->xfer.hdr.state = USB_EP_S_IDLE;
    124a:	0162      	lsls	r2, r4, #5
    124c:	4b08      	ldr	r3, [pc, #32]	; (1270 <_usb_d_cb_trans_done+0x138>)
    124e:	189b      	adds	r3, r3, r2
    1250:	2201      	movs	r2, #1
    1252:	709a      	strb	r2, [r3, #2]
    1254:	e789      	b.n	116a <_usb_d_cb_trans_done+0x32>
			ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    1256:	2302      	movs	r3, #2
    1258:	708b      	strb	r3, [r1, #2]
			return;
    125a:	e78e      	b.n	117a <_usb_d_cb_trans_done+0x42>
		ept->xfer.hdr.state  = USB_EP_S_DISABLED;
    125c:	0142      	lsls	r2, r0, #5
    125e:	4b04      	ldr	r3, [pc, #16]	; (1270 <_usb_d_cb_trans_done+0x138>)
    1260:	189b      	adds	r3, r3, r2
    1262:	2200      	movs	r2, #0
    1264:	709a      	strb	r2, [r3, #2]
		ept->xfer.hdr.status = USB_XFER_RESET;
    1266:	3205      	adds	r2, #5
    1268:	70da      	strb	r2, [r3, #3]
    126a:	e77e      	b.n	116a <_usb_d_cb_trans_done+0x32>
    126c:	000010c9 	.word	0x000010c9
    1270:	20000280 	.word	0x20000280
    1274:	000021d9 	.word	0x000021d9
    1278:	000023a9 	.word	0x000023a9

0000127c <usb_d_cb_trans_setup>:
{
    127c:	b5f0      	push	{r4, r5, r6, r7, lr}
    127e:	46c6      	mov	lr, r8
    1280:	b500      	push	{lr}
    1282:	0005      	movs	r5, r0
	int8_t           ep_index = _usb_d_find_ep(ep);
    1284:	4b1f      	ldr	r3, [pc, #124]	; (1304 <usb_d_cb_trans_setup+0x88>)
    1286:	4798      	blx	r3
    1288:	0006      	movs	r6, r0
	uint8_t *        req      = ept->xfer.req;
    128a:	0143      	lsls	r3, r0, #5
    128c:	3308      	adds	r3, #8
    128e:	4c1e      	ldr	r4, [pc, #120]	; (1308 <usb_d_cb_trans_setup+0x8c>)
    1290:	18e4      	adds	r4, r4, r3
    1292:	3404      	adds	r4, #4
	uint8_t n = _usb_d_dev_ep_read_req(ep, req);
    1294:	0021      	movs	r1, r4
    1296:	0028      	movs	r0, r5
    1298:	4b1c      	ldr	r3, [pc, #112]	; (130c <usb_d_cb_trans_setup+0x90>)
    129a:	4798      	blx	r3
    129c:	b2c0      	uxtb	r0, r0
	if (n != 8) {
    129e:	2808      	cmp	r0, #8
    12a0:	d00c      	beq.n	12bc <usb_d_cb_trans_setup+0x40>
		_usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
    12a2:	2101      	movs	r1, #1
    12a4:	0028      	movs	r0, r5
    12a6:	4c1a      	ldr	r4, [pc, #104]	; (1310 <usb_d_cb_trans_setup+0x94>)
    12a8:	47a0      	blx	r4
		_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_SET);
    12aa:	2080      	movs	r0, #128	; 0x80
    12ac:	4240      	negs	r0, r0
    12ae:	4328      	orrs	r0, r5
    12b0:	b2c0      	uxtb	r0, r0
    12b2:	2101      	movs	r1, #1
    12b4:	47a0      	blx	r4
}
    12b6:	bc04      	pop	{r2}
    12b8:	4690      	mov	r8, r2
    12ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
	_usb_d_dev_ep_stall(ep, USB_EP_STALL_CLR);
    12bc:	2100      	movs	r1, #0
    12be:	0028      	movs	r0, r5
    12c0:	4b13      	ldr	r3, [pc, #76]	; (1310 <usb_d_cb_trans_setup+0x94>)
    12c2:	4698      	mov	r8, r3
    12c4:	4798      	blx	r3
	_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_CLR);
    12c6:	2780      	movs	r7, #128	; 0x80
    12c8:	427f      	negs	r7, r7
    12ca:	432f      	orrs	r7, r5
    12cc:	b2ff      	uxtb	r7, r7
    12ce:	2100      	movs	r1, #0
    12d0:	0038      	movs	r0, r7
    12d2:	47c0      	blx	r8
	ept->xfer.hdr.state = USB_EP_S_IDLE;
    12d4:	0172      	lsls	r2, r6, #5
    12d6:	4b0c      	ldr	r3, [pc, #48]	; (1308 <usb_d_cb_trans_setup+0x8c>)
    12d8:	189b      	adds	r3, r3, r2
    12da:	2201      	movs	r2, #1
    12dc:	709a      	strb	r2, [r3, #2]
	if (!ept->callbacks.req(ep, req)) {
    12de:	695b      	ldr	r3, [r3, #20]
    12e0:	0021      	movs	r1, r4
    12e2:	0028      	movs	r0, r5
    12e4:	4798      	blx	r3
    12e6:	2800      	cmp	r0, #0
    12e8:	d1e5      	bne.n	12b6 <usb_d_cb_trans_setup+0x3a>
		ept->xfer.hdr.state = USB_EP_S_HALTED;
    12ea:	0176      	lsls	r6, r6, #5
    12ec:	4b06      	ldr	r3, [pc, #24]	; (1308 <usb_d_cb_trans_setup+0x8c>)
    12ee:	199e      	adds	r6, r3, r6
    12f0:	2305      	movs	r3, #5
    12f2:	70b3      	strb	r3, [r6, #2]
		_usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
    12f4:	2101      	movs	r1, #1
    12f6:	0028      	movs	r0, r5
    12f8:	4c05      	ldr	r4, [pc, #20]	; (1310 <usb_d_cb_trans_setup+0x94>)
    12fa:	47a0      	blx	r4
		_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_SET);
    12fc:	2101      	movs	r1, #1
    12fe:	0038      	movs	r0, r7
    1300:	47a0      	blx	r4
    1302:	e7d8      	b.n	12b6 <usb_d_cb_trans_setup+0x3a>
    1304:	000010c9 	.word	0x000010c9
    1308:	20000280 	.word	0x20000280
    130c:	00002331 	.word	0x00002331
    1310:	000021d9 	.word	0x000021d9

00001314 <usb_d_init>:

int32_t usb_d_init(void)
{
    1314:	b510      	push	{r4, lr}
	int32_t rc = _usb_d_dev_init();
    1316:	4b12      	ldr	r3, [pc, #72]	; (1360 <usb_d_init+0x4c>)
    1318:	4798      	blx	r3
	uint8_t i;
	if (rc < 0) {
    131a:	2800      	cmp	r0, #0
    131c:	db1e      	blt.n	135c <usb_d_init+0x48>
		return rc;
	}
	memset(usb_d_inst.ep, 0x00, sizeof(struct usb_d_ep) * CONF_USB_D_NUM_EP_SP);
    131e:	2280      	movs	r2, #128	; 0x80
    1320:	2100      	movs	r1, #0
    1322:	4810      	ldr	r0, [pc, #64]	; (1364 <usb_d_init+0x50>)
    1324:	4b10      	ldr	r3, [pc, #64]	; (1368 <usb_d_init+0x54>)
    1326:	4798      	blx	r3
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    1328:	2200      	movs	r2, #0
    132a:	e00a      	b.n	1342 <usb_d_init+0x2e>
		usb_d_inst.ep[i].xfer.hdr.ep    = 0xFF;
    132c:	0151      	lsls	r1, r2, #5
    132e:	4b0d      	ldr	r3, [pc, #52]	; (1364 <usb_d_init+0x50>)
    1330:	185b      	adds	r3, r3, r1
    1332:	21ff      	movs	r1, #255	; 0xff
    1334:	7059      	strb	r1, [r3, #1]
		usb_d_inst.ep[i].callbacks.req  = (usb_d_ep_cb_setup_t)usb_d_dummy_cb_false;
    1336:	490d      	ldr	r1, [pc, #52]	; (136c <usb_d_init+0x58>)
    1338:	6159      	str	r1, [r3, #20]
		usb_d_inst.ep[i].callbacks.more = (usb_d_ep_cb_more_t)usb_d_dummy_cb_false;
    133a:	6199      	str	r1, [r3, #24]
		usb_d_inst.ep[i].callbacks.xfer = (usb_d_ep_cb_xfer_t)usb_d_dummy_cb_false;
    133c:	61d9      	str	r1, [r3, #28]
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    133e:	3201      	adds	r2, #1
    1340:	b2d2      	uxtb	r2, r2
    1342:	2a03      	cmp	r2, #3
    1344:	d9f2      	bls.n	132c <usb_d_init+0x18>
	}
	/* Handles device driver endpoint callbacks to build transfer. */
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_SETUP, (FUNC_PTR)usb_d_cb_trans_setup);
    1346:	490a      	ldr	r1, [pc, #40]	; (1370 <usb_d_init+0x5c>)
    1348:	2000      	movs	r0, #0
    134a:	4c0a      	ldr	r4, [pc, #40]	; (1374 <usb_d_init+0x60>)
    134c:	47a0      	blx	r4
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_MORE, (FUNC_PTR)usb_d_cb_trans_more);
    134e:	490a      	ldr	r1, [pc, #40]	; (1378 <usb_d_init+0x64>)
    1350:	2001      	movs	r0, #1
    1352:	47a0      	blx	r4
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_DONE, (FUNC_PTR)_usb_d_cb_trans_done);
    1354:	4909      	ldr	r1, [pc, #36]	; (137c <usb_d_init+0x68>)
    1356:	2002      	movs	r0, #2
    1358:	47a0      	blx	r4
	return ERR_NONE;
    135a:	2000      	movs	r0, #0
}
    135c:	bd10      	pop	{r4, pc}
    135e:	46c0      	nop			; (mov r8, r8)
    1360:	00002135 	.word	0x00002135
    1364:	20000280 	.word	0x20000280
    1368:	00005e77 	.word	0x00005e77
    136c:	00001105 	.word	0x00001105
    1370:	0000127d 	.word	0x0000127d
    1374:	00002581 	.word	0x00002581
    1378:	00001109 	.word	0x00001109
    137c:	00001139 	.word	0x00001139

00001380 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
    1380:	2800      	cmp	r0, #0
    1382:	d100      	bne.n	1386 <assert+0x6>
		__asm("BKPT #0");
    1384:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
    1386:	4770      	bx	lr

00001388 <_get_cycles_for_ms>:
{
	switch (power) {
	case 8:
		return (ms * (freq / 100000)) * 100;
	case 7:
		return (ms * (freq / 10000)) * 10;
    1388:	2364      	movs	r3, #100	; 0x64
    138a:	4358      	muls	r0, r3
    138c:	0083      	lsls	r3, r0, #2
    138e:	181b      	adds	r3, r3, r0
    1390:	0058      	lsls	r0, r3, #1
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    1392:	4770      	bx	lr

00001394 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    1394:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    1396:	4b06      	ldr	r3, [pc, #24]	; (13b0 <_init_chip+0x1c>)
    1398:	685a      	ldr	r2, [r3, #4]
    139a:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
    139c:	4b05      	ldr	r3, [pc, #20]	; (13b4 <_init_chip+0x20>)
    139e:	4798      	blx	r3
	_sysctrl_init_sources();
    13a0:	4b05      	ldr	r3, [pc, #20]	; (13b8 <_init_chip+0x24>)
    13a2:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
    13a4:	4b05      	ldr	r3, [pc, #20]	; (13bc <_init_chip+0x28>)
    13a6:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    13a8:	20ff      	movs	r0, #255	; 0xff
    13aa:	4b05      	ldr	r3, [pc, #20]	; (13c0 <_init_chip+0x2c>)
    13ac:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
    13ae:	bd10      	pop	{r4, pc}
    13b0:	41004000 	.word	0x41004000
    13b4:	000013e5 	.word	0x000013e5
    13b8:	00001779 	.word	0x00001779
    13bc:	000017c5 	.word	0x000017c5
    13c0:	000013c5 	.word	0x000013c5

000013c4 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    13c4:	07c3      	lsls	r3, r0, #31
    13c6:	d50a      	bpl.n	13de <_gclk_init_generators_by_fref+0x1a>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
    13c8:	4b05      	ldr	r3, [pc, #20]	; (13e0 <_gclk_init_generators_by_fref+0x1c>)
    13ca:	2280      	movs	r2, #128	; 0x80
    13cc:	0052      	lsls	r2, r2, #1
    13ce:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    13d0:	2283      	movs	r2, #131	; 0x83
    13d2:	0252      	lsls	r2, r2, #9
    13d4:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    13d6:	4b02      	ldr	r3, [pc, #8]	; (13e0 <_gclk_init_generators_by_fref+0x1c>)
    13d8:	785b      	ldrb	r3, [r3, #1]
    13da:	09db      	lsrs	r3, r3, #7
    13dc:	d1fb      	bne.n	13d6 <_gclk_init_generators_by_fref+0x12>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
    13de:	4770      	bx	lr
    13e0:	40000c00 	.word	0x40000c00

000013e4 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
    13e4:	4b06      	ldr	r3, [pc, #24]	; (1400 <_pm_init+0x1c>)
    13e6:	7a1a      	ldrb	r2, [r3, #8]
    13e8:	b2d2      	uxtb	r2, r2
    13ea:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
    13ec:	7a5a      	ldrb	r2, [r3, #9]
    13ee:	b2d2      	uxtb	r2, r2
    13f0:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
    13f2:	7a9a      	ldrb	r2, [r3, #10]
    13f4:	b2d2      	uxtb	r2, r2
    13f6:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
    13f8:	7ada      	ldrb	r2, [r3, #11]
    13fa:	b2d2      	uxtb	r2, r2
    13fc:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
    13fe:	4770      	bx	lr
    1400:	40000400 	.word	0x40000400

00001404 <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    1404:	4b02      	ldr	r3, [pc, #8]	; (1410 <_sercom_get_hardware_index+0xc>)
    1406:	469c      	mov	ip, r3
    1408:	4460      	add	r0, ip
    140a:	0a80      	lsrs	r0, r0, #10
    140c:	b2c0      	uxtb	r0, r0
}
    140e:	4770      	bx	lr
    1410:	bdfff800 	.word	0xbdfff800

00001414 <_spi_sync_enable>:
	};
}

static inline bool hri_sercomspi_is_syncing(const void *const hw, hri_sercomspi_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1414:	69c3      	ldr	r3, [r0, #28]
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1416:	07db      	lsls	r3, r3, #31
    1418:	d408      	bmi.n	142c <_spi_sync_enable+0x18>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    141a:	6803      	ldr	r3, [r0, #0]
    141c:	2202      	movs	r2, #2
    141e:	4313      	orrs	r3, r2
    1420:	6003      	str	r3, [r0, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1422:	69c3      	ldr	r3, [r0, #28]
    1424:	079b      	lsls	r3, r3, #30
    1426:	d1fc      	bne.n	1422 <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
    1428:	2000      	movs	r0, #0
}
    142a:	4770      	bx	lr
		return ERR_BUSY;
    142c:	2004      	movs	r0, #4
    142e:	4240      	negs	r0, r0
    1430:	e7fb      	b.n	142a <_spi_sync_enable+0x16>
	...

00001434 <_spi_m_sync_init>:

	return NULL;
}

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    1434:	b570      	push	{r4, r5, r6, lr}
    1436:	0006      	movs	r6, r0
    1438:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    143a:	0008      	movs	r0, r1
    143c:	4b71      	ldr	r3, [pc, #452]	; (1604 <_spi_m_sync_init+0x1d0>)
    143e:	4798      	blx	r3
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1440:	2300      	movs	r3, #0
    1442:	2b00      	cmp	r3, #0
    1444:	d100      	bne.n	1448 <_spi_m_sync_init+0x14>
    1446:	e084      	b.n	1552 <_spi_m_sync_init+0x11e>
	return NULL;
    1448:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    144a:	2e00      	cmp	r6, #0
    144c:	d100      	bne.n	1450 <_spi_m_sync_init+0x1c>
    144e:	e08d      	b.n	156c <_spi_m_sync_init+0x138>
    1450:	2c00      	cmp	r4, #0
    1452:	d100      	bne.n	1456 <_spi_m_sync_init+0x22>
    1454:	e088      	b.n	1568 <_spi_m_sync_init+0x134>
    1456:	2001      	movs	r0, #1
    1458:	4a6b      	ldr	r2, [pc, #428]	; (1608 <_spi_m_sync_init+0x1d4>)
    145a:	496c      	ldr	r1, [pc, #432]	; (160c <_spi_m_sync_init+0x1d8>)
    145c:	4b6c      	ldr	r3, [pc, #432]	; (1610 <_spi_m_sync_init+0x1dc>)
    145e:	4798      	blx	r3

	if (regs == NULL) {
    1460:	2d00      	cmp	r5, #0
    1462:	d100      	bne.n	1466 <_spi_m_sync_init+0x32>
    1464:	e0cb      	b.n	15fe <_spi_m_sync_init+0x1ca>
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    1466:	69e3      	ldr	r3, [r4, #28]
		return ERR_INVALID_ARG;
	}

	if (!hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1468:	07db      	lsls	r3, r3, #31
    146a:	d421      	bmi.n	14b0 <_spi_m_sync_init+0x7c>
		uint32_t mode = regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk;
    146c:	782a      	ldrb	r2, [r5, #0]
    146e:	786b      	ldrb	r3, [r5, #1]
    1470:	021b      	lsls	r3, r3, #8
    1472:	4313      	orrs	r3, r2
    1474:	78aa      	ldrb	r2, [r5, #2]
    1476:	0412      	lsls	r2, r2, #16
    1478:	4313      	orrs	r3, r2
    147a:	78ea      	ldrb	r2, [r5, #3]
    147c:	0612      	lsls	r2, r2, #24
    147e:	431a      	orrs	r2, r3
    1480:	231c      	movs	r3, #28
    1482:	401a      	ands	r2, r3
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1484:	69e3      	ldr	r3, [r4, #28]
    1486:	079b      	lsls	r3, r3, #30
    1488:	d1fc      	bne.n	1484 <_spi_m_sync_init+0x50>
static inline hri_sercomspi_ctrla_reg_t hri_sercomspi_get_CTRLA_reg(const void *const         hw,
                                                                    hri_sercomspi_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    148a:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    148c:	079b      	lsls	r3, r3, #30
    148e:	d509      	bpl.n	14a4 <_spi_m_sync_init+0x70>
	((Sercom *)hw)->SPI.CTRLA.reg &= ~SERCOM_SPI_CTRLA_ENABLE;
    1490:	6823      	ldr	r3, [r4, #0]
    1492:	2102      	movs	r1, #2
    1494:	438b      	bics	r3, r1
    1496:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1498:	69e3      	ldr	r3, [r4, #28]
    149a:	079b      	lsls	r3, r3, #30
    149c:	d1fc      	bne.n	1498 <_spi_m_sync_init+0x64>
    149e:	69e3      	ldr	r3, [r4, #28]
    14a0:	079b      	lsls	r3, r3, #30
    14a2:	d4fc      	bmi.n	149e <_spi_m_sync_init+0x6a>
			hri_sercomspi_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_ENABLE);
		}
		hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST | mode);
    14a4:	2301      	movs	r3, #1
    14a6:	4313      	orrs	r3, r2
}

static inline void hri_sercomspi_write_CTRLA_reg(const void *const hw, hri_sercomspi_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    14a8:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    14aa:	69e3      	ldr	r3, [r4, #28]
    14ac:	079b      	lsls	r3, r3, #30
    14ae:	d1fc      	bne.n	14aa <_spi_m_sync_init+0x76>
    14b0:	69e3      	ldr	r3, [r4, #28]
    14b2:	07db      	lsls	r3, r3, #31
    14b4:	d4fc      	bmi.n	14b0 <_spi_m_sync_init+0x7c>
	}
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST);

	dev->prvt = hw;
    14b6:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    14b8:	782b      	ldrb	r3, [r5, #0]
    14ba:	786a      	ldrb	r2, [r5, #1]
    14bc:	0212      	lsls	r2, r2, #8
    14be:	431a      	orrs	r2, r3
    14c0:	78ab      	ldrb	r3, [r5, #2]
    14c2:	041b      	lsls	r3, r3, #16
    14c4:	431a      	orrs	r2, r3
    14c6:	78eb      	ldrb	r3, [r5, #3]
    14c8:	061b      	lsls	r3, r3, #24
    14ca:	4313      	orrs	r3, r2
    14cc:	221c      	movs	r2, #28
    14ce:	4013      	ands	r3, r2
    14d0:	2b08      	cmp	r3, #8
    14d2:	d04d      	beq.n	1570 <_spi_m_sync_init+0x13c>
	ASSERT(hw && regs);
    14d4:	2c00      	cmp	r4, #0
    14d6:	d100      	bne.n	14da <_spi_m_sync_init+0xa6>
    14d8:	e08d      	b.n	15f6 <_spi_m_sync_init+0x1c2>
    14da:	2d00      	cmp	r5, #0
    14dc:	d100      	bne.n	14e0 <_spi_m_sync_init+0xac>
    14de:	e088      	b.n	15f2 <_spi_m_sync_init+0x1be>
    14e0:	2001      	movs	r0, #1
    14e2:	4a4c      	ldr	r2, [pc, #304]	; (1614 <_spi_m_sync_init+0x1e0>)
    14e4:	4949      	ldr	r1, [pc, #292]	; (160c <_spi_m_sync_init+0x1d8>)
    14e6:	4b4a      	ldr	r3, [pc, #296]	; (1610 <_spi_m_sync_init+0x1dc>)
    14e8:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    14ea:	782b      	ldrb	r3, [r5, #0]
    14ec:	786a      	ldrb	r2, [r5, #1]
    14ee:	0212      	lsls	r2, r2, #8
    14f0:	431a      	orrs	r2, r3
    14f2:	78ab      	ldrb	r3, [r5, #2]
    14f4:	041b      	lsls	r3, r3, #16
    14f6:	431a      	orrs	r2, r3
    14f8:	78eb      	ldrb	r3, [r5, #3]
    14fa:	061b      	lsls	r3, r3, #24
    14fc:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    14fe:	4a46      	ldr	r2, [pc, #280]	; (1618 <_spi_m_sync_init+0x1e4>)
    1500:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1502:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1504:	69e3      	ldr	r3, [r4, #28]
    1506:	079b      	lsls	r3, r3, #30
    1508:	d1fc      	bne.n	1504 <_spi_m_sync_init+0xd0>
	    (regs->ctrlb
    150a:	792b      	ldrb	r3, [r5, #4]
    150c:	796a      	ldrb	r2, [r5, #5]
    150e:	0212      	lsls	r2, r2, #8
    1510:	431a      	orrs	r2, r3
    1512:	79ab      	ldrb	r3, [r5, #6]
    1514:	041b      	lsls	r3, r3, #16
    1516:	431a      	orrs	r2, r3
    1518:	79eb      	ldrb	r3, [r5, #7]
    151a:	061b      	lsls	r3, r3, #24
    151c:	4313      	orrs	r3, r2
	        | (SERCOM_SPI_CTRLB_RXEN));
    151e:	4a3f      	ldr	r2, [pc, #252]	; (161c <_spi_m_sync_init+0x1e8>)
    1520:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    1522:	2280      	movs	r2, #128	; 0x80
    1524:	0292      	lsls	r2, r2, #10
    1526:	4313      	orrs	r3, r2
}

static inline void hri_sercomspi_write_CTRLB_reg(const void *const hw, hri_sercomspi_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1528:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    152a:	69e3      	ldr	r3, [r4, #28]
    152c:	075b      	lsls	r3, r3, #29
    152e:	d1fc      	bne.n	152a <_spi_m_sync_init+0xf6>
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    1530:	7b2b      	ldrb	r3, [r5, #12]
}

static inline void hri_sercomspi_write_BAUD_reg(const void *const hw, hri_sercomspi_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.BAUD.reg = data;
    1532:	7323      	strb	r3, [r4, #12]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    1534:	7b6a      	ldrb	r2, [r5, #13]
}

static inline void hri_sercomspi_write_DBGCTRL_reg(const void *const hw, hri_sercomspi_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    1536:	2330      	movs	r3, #48	; 0x30
    1538:	54e2      	strb	r2, [r4, r3]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    153a:	792b      	ldrb	r3, [r5, #4]
    153c:	075b      	lsls	r3, r3, #29
    153e:	d15c      	bne.n	15fa <_spi_m_sync_init+0x1c6>
    1540:	2301      	movs	r3, #1
    1542:	7133      	strb	r3, [r6, #4]

	dev->dummy_byte = regs->dummy_byte;
    1544:	7baa      	ldrb	r2, [r5, #14]
    1546:	7beb      	ldrb	r3, [r5, #15]
    1548:	021b      	lsls	r3, r3, #8
    154a:	4313      	orrs	r3, r2
    154c:	80f3      	strh	r3, [r6, #6]

	return ERR_NONE;
    154e:	2000      	movs	r0, #0
}
    1550:	bd70      	pop	{r4, r5, r6, pc}
		if (sercomspi_regs[i].n == n) {
    1552:	2800      	cmp	r0, #0
    1554:	d002      	beq.n	155c <_spi_m_sync_init+0x128>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1556:	3301      	adds	r3, #1
    1558:	b2db      	uxtb	r3, r3
    155a:	e772      	b.n	1442 <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
    155c:	011d      	lsls	r5, r3, #4
    155e:	18ea      	adds	r2, r5, r3
    1560:	4d2f      	ldr	r5, [pc, #188]	; (1620 <_spi_m_sync_init+0x1ec>)
    1562:	353c      	adds	r5, #60	; 0x3c
    1564:	18ad      	adds	r5, r5, r2
    1566:	e770      	b.n	144a <_spi_m_sync_init+0x16>
	ASSERT(dev && hw);
    1568:	2000      	movs	r0, #0
    156a:	e775      	b.n	1458 <_spi_m_sync_init+0x24>
    156c:	2000      	movs	r0, #0
    156e:	e773      	b.n	1458 <_spi_m_sync_init+0x24>
	ASSERT(hw && regs);
    1570:	2c00      	cmp	r4, #0
    1572:	d03c      	beq.n	15ee <_spi_m_sync_init+0x1ba>
    1574:	2d00      	cmp	r5, #0
    1576:	d038      	beq.n	15ea <_spi_m_sync_init+0x1b6>
    1578:	2001      	movs	r0, #1
    157a:	4a2a      	ldr	r2, [pc, #168]	; (1624 <_spi_m_sync_init+0x1f0>)
    157c:	4923      	ldr	r1, [pc, #140]	; (160c <_spi_m_sync_init+0x1d8>)
    157e:	4b24      	ldr	r3, [pc, #144]	; (1610 <_spi_m_sync_init+0x1dc>)
    1580:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    1582:	782b      	ldrb	r3, [r5, #0]
    1584:	786a      	ldrb	r2, [r5, #1]
    1586:	0212      	lsls	r2, r2, #8
    1588:	431a      	orrs	r2, r3
    158a:	78ab      	ldrb	r3, [r5, #2]
    158c:	041b      	lsls	r3, r3, #16
    158e:	431a      	orrs	r2, r3
    1590:	78eb      	ldrb	r3, [r5, #3]
    1592:	061b      	lsls	r3, r3, #24
    1594:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    1596:	4a20      	ldr	r2, [pc, #128]	; (1618 <_spi_m_sync_init+0x1e4>)
    1598:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    159a:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    159c:	69e3      	ldr	r3, [r4, #28]
    159e:	079b      	lsls	r3, r3, #30
    15a0:	d1fc      	bne.n	159c <_spi_m_sync_init+0x168>
	                              (regs->ctrlb & ~(SERCOM_SPI_CTRLB_MSSEN))
    15a2:	792b      	ldrb	r3, [r5, #4]
    15a4:	796a      	ldrb	r2, [r5, #5]
    15a6:	0212      	lsls	r2, r2, #8
    15a8:	431a      	orrs	r2, r3
    15aa:	79ab      	ldrb	r3, [r5, #6]
    15ac:	041b      	lsls	r3, r3, #16
    15ae:	431a      	orrs	r2, r3
    15b0:	79eb      	ldrb	r3, [r5, #7]
    15b2:	061b      	lsls	r3, r3, #24
    15b4:	4313      	orrs	r3, r2
	                                  | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_SSDE | SERCOM_SPI_CTRLB_PLOADEN));
    15b6:	4a1c      	ldr	r2, [pc, #112]	; (1628 <_spi_m_sync_init+0x1f4>)
    15b8:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(hw,
    15ba:	4a1c      	ldr	r2, [pc, #112]	; (162c <_spi_m_sync_init+0x1f8>)
    15bc:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    15be:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15c0:	69e3      	ldr	r3, [r4, #28]
    15c2:	075b      	lsls	r3, r3, #29
    15c4:	d1fc      	bne.n	15c0 <_spi_m_sync_init+0x18c>
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    15c6:	7a2b      	ldrb	r3, [r5, #8]
    15c8:	7a6a      	ldrb	r2, [r5, #9]
    15ca:	0212      	lsls	r2, r2, #8
    15cc:	431a      	orrs	r2, r3
    15ce:	7aab      	ldrb	r3, [r5, #10]
    15d0:	041b      	lsls	r3, r3, #16
    15d2:	431a      	orrs	r2, r3
    15d4:	7aeb      	ldrb	r3, [r5, #11]
    15d6:	061b      	lsls	r3, r3, #24
    15d8:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    15da:	6263      	str	r3, [r4, #36]	; 0x24
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    15dc:	7b6a      	ldrb	r2, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    15de:	2330      	movs	r3, #48	; 0x30
    15e0:	54e2      	strb	r2, [r4, r3]
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    15e2:	69e3      	ldr	r3, [r4, #28]
	while (hri_sercomspi_is_syncing(hw, 0xFFFFFFFF))
    15e4:	2b00      	cmp	r3, #0
    15e6:	d1fc      	bne.n	15e2 <_spi_m_sync_init+0x1ae>
    15e8:	e7a7      	b.n	153a <_spi_m_sync_init+0x106>
	ASSERT(hw && regs);
    15ea:	2000      	movs	r0, #0
    15ec:	e7c5      	b.n	157a <_spi_m_sync_init+0x146>
    15ee:	2000      	movs	r0, #0
    15f0:	e7c3      	b.n	157a <_spi_m_sync_init+0x146>
	ASSERT(hw && regs);
    15f2:	2000      	movs	r0, #0
    15f4:	e775      	b.n	14e2 <_spi_m_sync_init+0xae>
    15f6:	2000      	movs	r0, #0
    15f8:	e773      	b.n	14e2 <_spi_m_sync_init+0xae>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    15fa:	2302      	movs	r3, #2
    15fc:	e7a1      	b.n	1542 <_spi_m_sync_init+0x10e>
		return ERR_INVALID_ARG;
    15fe:	200d      	movs	r0, #13
    1600:	4240      	negs	r0, r0
    1602:	e7a5      	b.n	1550 <_spi_m_sync_init+0x11c>
    1604:	00001405 	.word	0x00001405
    1608:	00000925 	.word	0x00000925
    160c:	0000605c 	.word	0x0000605c
    1610:	00001381 	.word	0x00001381
    1614:	000008ef 	.word	0x000008ef
    1618:	fffffefc 	.word	0xfffffefc
    161c:	fffd1dbf 	.word	0xfffd1dbf
    1620:	0000600c 	.word	0x0000600c
    1624:	00000903 	.word	0x00000903
    1628:	fffdddbf 	.word	0xfffdddbf
    162c:	00020240 	.word	0x00020240

00001630 <_spi_m_sync_enable>:
{
	return _spi_deinit(dev->prvt);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    1630:	b510      	push	{r4, lr}
    1632:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    1634:	d00e      	beq.n	1654 <_spi_m_sync_enable+0x24>
    1636:	6803      	ldr	r3, [r0, #0]
    1638:	2b00      	cmp	r3, #0
    163a:	d009      	beq.n	1650 <_spi_m_sync_enable+0x20>
    163c:	2001      	movs	r0, #1
    163e:	2298      	movs	r2, #152	; 0x98
    1640:	0112      	lsls	r2, r2, #4
    1642:	4905      	ldr	r1, [pc, #20]	; (1658 <_spi_m_sync_enable+0x28>)
    1644:	4b05      	ldr	r3, [pc, #20]	; (165c <_spi_m_sync_enable+0x2c>)
    1646:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    1648:	6820      	ldr	r0, [r4, #0]
    164a:	4b05      	ldr	r3, [pc, #20]	; (1660 <_spi_m_sync_enable+0x30>)
    164c:	4798      	blx	r3
}
    164e:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    1650:	2000      	movs	r0, #0
    1652:	e7f4      	b.n	163e <_spi_m_sync_enable+0xe>
    1654:	2000      	movs	r0, #0
    1656:	e7f2      	b.n	163e <_spi_m_sync_enable+0xe>
    1658:	0000605c 	.word	0x0000605c
    165c:	00001381 	.word	0x00001381
    1660:	00001415 	.word	0x00001415

00001664 <_spi_m_sync_trans>:

	return ERR_NONE;
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    1664:	b5f0      	push	{r4, r5, r6, r7, lr}
    1666:	46ce      	mov	lr, r9
    1668:	4647      	mov	r7, r8
    166a:	b580      	push	{r7, lr}
    166c:	b089      	sub	sp, #36	; 0x24
    166e:	4681      	mov	r9, r0
    1670:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    1672:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    1674:	680b      	ldr	r3, [r1, #0]
    1676:	9303      	str	r3, [sp, #12]
    1678:	684b      	ldr	r3, [r1, #4]
    167a:	9304      	str	r3, [sp, #16]
    167c:	2300      	movs	r3, #0
    167e:	9305      	str	r3, [sp, #20]
    1680:	9306      	str	r3, [sp, #24]
    1682:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    1684:	2800      	cmp	r0, #0
    1686:	d014      	beq.n	16b2 <_spi_m_sync_trans+0x4e>
    1688:	2c00      	cmp	r4, #0
    168a:	d010      	beq.n	16ae <_spi_m_sync_trans+0x4a>
    168c:	2001      	movs	r0, #1
    168e:	4a37      	ldr	r2, [pc, #220]	; (176c <_spi_m_sync_trans+0x108>)
    1690:	4937      	ldr	r1, [pc, #220]	; (1770 <_spi_m_sync_trans+0x10c>)
    1692:	4b38      	ldr	r3, [pc, #224]	; (1774 <_spi_m_sync_trans+0x110>)
    1694:	4798      	blx	r3
    1696:	69e3      	ldr	r3, [r4, #28]

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(
    1698:	075b      	lsls	r3, r3, #29
    169a:	d164      	bne.n	1766 <_spi_m_sync_trans+0x102>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    169c:	69e3      	ldr	r3, [r4, #28]
    169e:	079b      	lsls	r3, r3, #30
    16a0:	d1fc      	bne.n	169c <_spi_m_sync_trans+0x38>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    16a2:	6823      	ldr	r3, [r4, #0]
	        hw, (SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE | SERCOM_SPI_SYNCBUSY_CTRLB))) {
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    16a4:	079b      	lsls	r3, r3, #30
    16a6:	d420      	bmi.n	16ea <_spi_m_sync_trans+0x86>
		return ERR_NOT_INITIALIZED;
    16a8:	2014      	movs	r0, #20
    16aa:	4240      	negs	r0, r0
    16ac:	e056      	b.n	175c <_spi_m_sync_trans+0xf8>
	ASSERT(dev && hw);
    16ae:	2000      	movs	r0, #0
    16b0:	e7ed      	b.n	168e <_spi_m_sync_trans+0x2a>
    16b2:	2000      	movs	r0, #0
    16b4:	e7eb      	b.n	168e <_spi_m_sync_trans+0x2a>
		return false;
    16b6:	2200      	movs	r2, #0
    16b8:	e02d      	b.n	1716 <_spi_m_sync_trans+0xb2>
			data |= (*ctrl->txbuf) << 8;
    16ba:	7848      	ldrb	r0, [r1, #1]
    16bc:	0200      	lsls	r0, r0, #8
    16be:	4647      	mov	r7, r8
    16c0:	4307      	orrs	r7, r0
    16c2:	46b8      	mov	r8, r7
			ctrl->txbuf++;
    16c4:	3102      	adds	r1, #2
    16c6:	9103      	str	r1, [sp, #12]
	ctrl->txcnt++;
    16c8:	3201      	adds	r2, #1
    16ca:	9205      	str	r2, [sp, #20]
	((Sercom *)hw)->SPI.DATA.reg = data;
    16cc:	4642      	mov	r2, r8
    16ce:	62a2      	str	r2, [r4, #40]	; 0x28
	if (SERCOM_SPI_INTFLAG_ERROR & iflag) {
    16d0:	b25b      	sxtb	r3, r3
    16d2:	2b00      	cmp	r3, #0
    16d4:	db35      	blt.n	1742 <_spi_m_sync_trans+0xde>
	return ERR_NONE;
    16d6:	2000      	movs	r0, #0
			}
		}

		rc = _spi_err_check(iflag, hw);

		if (rc < 0) {
    16d8:	2800      	cmp	r0, #0
    16da:	db3a      	blt.n	1752 <_spi_m_sync_trans+0xee>
			break;
		}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    16dc:	9805      	ldr	r0, [sp, #20]
    16de:	68ab      	ldr	r3, [r5, #8]
    16e0:	4298      	cmp	r0, r3
    16e2:	d302      	bcc.n	16ea <_spi_m_sync_trans+0x86>
    16e4:	9a06      	ldr	r2, [sp, #24]
    16e6:	4293      	cmp	r3, r2
    16e8:	d933      	bls.n	1752 <_spi_m_sync_trans+0xee>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    16ea:	7e23      	ldrb	r3, [r4, #24]
    16ec:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    16ee:	075a      	lsls	r2, r3, #29
    16f0:	d5e1      	bpl.n	16b6 <_spi_m_sync_trans+0x52>
	return ((Sercom *)hw)->SPI.DATA.reg;
    16f2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
	if (ctrl->rxbuf) {
    16f4:	9a04      	ldr	r2, [sp, #16]
    16f6:	2a00      	cmp	r2, #0
    16f8:	d008      	beq.n	170c <_spi_m_sync_trans+0xa8>
		*ctrl->rxbuf++ = (uint8_t)data;
    16fa:	1c50      	adds	r0, r2, #1
    16fc:	9004      	str	r0, [sp, #16]
    16fe:	7011      	strb	r1, [r2, #0]
		if (ctrl->char_size > 1) {
    1700:	2e01      	cmp	r6, #1
    1702:	d903      	bls.n	170c <_spi_m_sync_trans+0xa8>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    1704:	1c90      	adds	r0, r2, #2
    1706:	9004      	str	r0, [sp, #16]
    1708:	0a09      	lsrs	r1, r1, #8
    170a:	7051      	strb	r1, [r2, #1]
	ctrl->rxcnt++;
    170c:	9a06      	ldr	r2, [sp, #24]
    170e:	9201      	str	r2, [sp, #4]
    1710:	3201      	adds	r2, #1
    1712:	9206      	str	r2, [sp, #24]
	return true;
    1714:	2201      	movs	r2, #1
		if (!_spi_rx_check_and_receive(hw, iflag, &ctrl)) {
    1716:	2a00      	cmp	r2, #0
    1718:	d1da      	bne.n	16d0 <_spi_m_sync_trans+0x6c>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    171a:	9906      	ldr	r1, [sp, #24]
    171c:	9a05      	ldr	r2, [sp, #20]
    171e:	4291      	cmp	r1, r2
    1720:	d3d6      	bcc.n	16d0 <_spi_m_sync_trans+0x6c>
				_spi_tx_check_and_send(hw, iflag, &ctrl, dev->dummy_byte);
    1722:	4649      	mov	r1, r9
    1724:	88c8      	ldrh	r0, [r1, #6]
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    1726:	07d9      	lsls	r1, r3, #31
    1728:	d5d2      	bpl.n	16d0 <_spi_m_sync_trans+0x6c>
	if (ctrl->txbuf) {
    172a:	9903      	ldr	r1, [sp, #12]
    172c:	2900      	cmp	r1, #0
    172e:	d006      	beq.n	173e <_spi_m_sync_trans+0xda>
		data = *ctrl->txbuf++;
    1730:	1c48      	adds	r0, r1, #1
    1732:	9003      	str	r0, [sp, #12]
    1734:	7808      	ldrb	r0, [r1, #0]
    1736:	4680      	mov	r8, r0
		if (ctrl->char_size > 1) {
    1738:	2e01      	cmp	r6, #1
    173a:	d8be      	bhi.n	16ba <_spi_m_sync_trans+0x56>
    173c:	e7c4      	b.n	16c8 <_spi_m_sync_trans+0x64>
		data = dummy;
    173e:	4680      	mov	r8, r0
    1740:	e7c2      	b.n	16c8 <_spi_m_sync_trans+0x64>
}

static inline void hri_sercomspi_clear_STATUS_reg(const void *const hw, hri_sercomspi_status_reg_t mask)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.STATUS.reg = mask;
    1742:	2301      	movs	r3, #1
    1744:	425b      	negs	r3, r3
    1746:	8363      	strh	r3, [r4, #26]
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1748:	3381      	adds	r3, #129	; 0x81
    174a:	7623      	strb	r3, [r4, #24]
		return ERR_OVERFLOW;
    174c:	2013      	movs	r0, #19
    174e:	4240      	negs	r0, r0
    1750:	e7c2      	b.n	16d8 <_spi_m_sync_trans+0x74>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    1752:	7e23      	ldrb	r3, [r4, #24]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    1754:	079b      	lsls	r3, r3, #30
    1756:	d0fc      	beq.n	1752 <_spi_m_sync_trans+0xee>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1758:	2303      	movs	r3, #3
    175a:	7623      	strb	r3, [r4, #24]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    175c:	b009      	add	sp, #36	; 0x24
    175e:	bc0c      	pop	{r2, r3}
    1760:	4690      	mov	r8, r2
    1762:	4699      	mov	r9, r3
    1764:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return ERR_BUSY;
    1766:	2004      	movs	r0, #4
    1768:	4240      	negs	r0, r0
    176a:	e7f7      	b.n	175c <_spi_m_sync_trans+0xf8>
    176c:	00000a85 	.word	0x00000a85
    1770:	0000605c 	.word	0x0000605c
    1774:	00001381 	.word	0x00001381

00001778 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    1778:	4b0f      	ldr	r3, [pc, #60]	; (17b8 <_sysctrl_init_sources+0x40>)
    177a:	6a19      	ldr	r1, [r3, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    177c:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    177e:	6a1a      	ldr	r2, [r3, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    1780:	0f92      	lsrs	r2, r2, #30
    1782:	0792      	lsls	r2, r2, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    1784:	0409      	lsls	r1, r1, #16
    1786:	480d      	ldr	r0, [pc, #52]	; (17bc <_sysctrl_init_sources+0x44>)
    1788:	4001      	ands	r1, r0
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    178a:	430a      	orrs	r2, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    178c:	490c      	ldr	r1, [pc, #48]	; (17c0 <_sysctrl_init_sources+0x48>)
    178e:	430a      	orrs	r2, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    1790:	621a      	str	r2, [r3, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    1792:	699a      	ldr	r2, [r3, #24]
    1794:	2102      	movs	r1, #2
    1796:	430a      	orrs	r2, r1
    1798:	619a      	str	r2, [r3, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    179a:	7f1a      	ldrb	r2, [r3, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    179c:	311d      	adds	r1, #29
    179e:	400a      	ands	r2, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    17a0:	771a      	strb	r2, [r3, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    17a2:	4b05      	ldr	r3, [pc, #20]	; (17b8 <_sysctrl_init_sources+0x40>)
    17a4:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    17a6:	071b      	lsls	r3, r3, #28
    17a8:	d5fb      	bpl.n	17a2 <_sysctrl_init_sources+0x2a>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    17aa:	4a03      	ldr	r2, [pc, #12]	; (17b8 <_sysctrl_init_sources+0x40>)
    17ac:	6a13      	ldr	r3, [r2, #32]
    17ae:	2180      	movs	r1, #128	; 0x80
    17b0:	430b      	orrs	r3, r1
    17b2:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    17b4:	4770      	bx	lr
    17b6:	46c0      	nop			; (mov r8, r8)
    17b8:	40000800 	.word	0x40000800
    17bc:	0fff0000 	.word	0x0fff0000
    17c0:	00000302 	.word	0x00000302

000017c4 <_sysctrl_init_referenced_generators>:
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    17c4:	4a02      	ldr	r2, [pc, #8]	; (17d0 <_sysctrl_init_referenced_generators+0xc>)
    17c6:	6993      	ldr	r3, [r2, #24]
    17c8:	2102      	movs	r1, #2
    17ca:	438b      	bics	r3, r1
    17cc:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    17ce:	4770      	bx	lr
    17d0:	40000800 	.word	0x40000800

000017d4 <_system_time_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
    17d4:	4b02      	ldr	r3, [pc, #8]	; (17e0 <_system_time_init+0xc>)
    17d6:	4a03      	ldr	r2, [pc, #12]	; (17e4 <_system_time_init+0x10>)
    17d8:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
    17da:	2205      	movs	r2, #5
    17dc:	601a      	str	r2, [r3, #0]
	                | (1 << SysTick_CTRL_CLKSOURCE_Pos);
}
    17de:	4770      	bx	lr
    17e0:	e000e010 	.word	0xe000e010
    17e4:	00ffffff 	.word	0x00ffffff

000017e8 <_delay_init>:
/**
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
    17e8:	b510      	push	{r4, lr}
	_system_time_init(hw);
    17ea:	4b01      	ldr	r3, [pc, #4]	; (17f0 <_delay_init+0x8>)
    17ec:	4798      	blx	r3
}
    17ee:	bd10      	pop	{r4, pc}
    17f0:	000017d5 	.word	0x000017d5

000017f4 <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
    17f4:	0e08      	lsrs	r0, r1, #24
	uint32_t buf = cycles;

	while (n--) {
    17f6:	e00b      	b.n	1810 <_delay_cycles+0x1c>
		SysTick->LOAD = 0xFFFFFF;
    17f8:	4b0b      	ldr	r3, [pc, #44]	; (1828 <_delay_cycles+0x34>)
    17fa:	480c      	ldr	r0, [pc, #48]	; (182c <_delay_cycles+0x38>)
    17fc:	6058      	str	r0, [r3, #4]
		SysTick->VAL  = 0xFFFFFF;
    17fe:	6098      	str	r0, [r3, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    1800:	4b09      	ldr	r3, [pc, #36]	; (1828 <_delay_cycles+0x34>)
    1802:	681b      	ldr	r3, [r3, #0]
    1804:	03db      	lsls	r3, r3, #15
    1806:	d5fb      	bpl.n	1800 <_delay_cycles+0xc>
			;
		buf -= 0xFFFFFF;
    1808:	4b09      	ldr	r3, [pc, #36]	; (1830 <_delay_cycles+0x3c>)
    180a:	469c      	mov	ip, r3
    180c:	4461      	add	r1, ip
	while (n--) {
    180e:	0010      	movs	r0, r2
    1810:	1e42      	subs	r2, r0, #1
    1812:	b2d2      	uxtb	r2, r2
    1814:	2800      	cmp	r0, #0
    1816:	d1ef      	bne.n	17f8 <_delay_cycles+0x4>
	}

	SysTick->LOAD = buf;
    1818:	4b03      	ldr	r3, [pc, #12]	; (1828 <_delay_cycles+0x34>)
    181a:	6059      	str	r1, [r3, #4]
	SysTick->VAL  = buf;
    181c:	6099      	str	r1, [r3, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    181e:	4b02      	ldr	r3, [pc, #8]	; (1828 <_delay_cycles+0x34>)
    1820:	681b      	ldr	r3, [r3, #0]
    1822:	03db      	lsls	r3, r3, #15
    1824:	d5fb      	bpl.n	181e <_delay_cycles+0x2a>
		;
}
    1826:	4770      	bx	lr
    1828:	e000e010 	.word	0xe000e010
    182c:	00ffffff 	.word	0x00ffffff
    1830:	ff000001 	.word	0xff000001

00001834 <_dummy_func_no_return>:
static bool _dummy_func_no_return(uint32_t unused0, uint32_t unused1)
{
	(void)unused0;
	(void)unused1;
	return false;
}
    1834:	2000      	movs	r0, #0
    1836:	4770      	bx	lr

00001838 <_usb_load_calib>:
#define NVM_USB_PAD_TRANSP_SIZE 5
#define NVM_USB_PAD_TRIM_POS 55
#define NVM_USB_PAD_TRIM_SIZE 3
	Usb *    hw = USB;
	uint32_t pad_transn
	    = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRANSN_POS / 32)) >> (NVM_USB_PAD_TRANSN_POS % 32))
    1838:	4b12      	ldr	r3, [pc, #72]	; (1884 <_usb_load_calib+0x4c>)
    183a:	681a      	ldr	r2, [r3, #0]
    183c:	0b53      	lsrs	r3, r2, #13
	uint32_t pad_transn
    183e:	211f      	movs	r1, #31
    1840:	400b      	ands	r3, r1
	      & ((1 << NVM_USB_PAD_TRANSN_SIZE) - 1);
	uint32_t pad_transp
	    = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRANSP_POS / 32)) >> (NVM_USB_PAD_TRANSP_POS % 32))
    1842:	0c90      	lsrs	r0, r2, #18
	uint32_t pad_transp
    1844:	4001      	ands	r1, r0
	      & ((1 << NVM_USB_PAD_TRANSP_SIZE) - 1);
	uint32_t pad_trim = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRIM_POS / 32)) >> (NVM_USB_PAD_TRIM_POS % 32))
    1846:	0dd0      	lsrs	r0, r2, #23
    1848:	2207      	movs	r2, #7
    184a:	4002      	ands	r2, r0
	                    & ((1 << NVM_USB_PAD_TRIM_SIZE) - 1);
	if (pad_transn == 0x1F) {
    184c:	2b1f      	cmp	r3, #31
    184e:	d012      	beq.n	1876 <_usb_load_calib+0x3e>
		pad_transn = 5;
	}
	if (pad_transp == 0x1F) {
    1850:	291f      	cmp	r1, #31
    1852:	d012      	beq.n	187a <_usb_load_calib+0x42>
		pad_transp = 29;
	}
	if (pad_trim == 0x7) {
    1854:	2a07      	cmp	r2, #7
    1856:	d012      	beq.n	187e <_usb_load_calib+0x46>
		pad_trim = 5;
	}

	hw->DEVICE.PADCAL.reg = USB_PADCAL_TRANSN(pad_transn) | USB_PADCAL_TRANSP(pad_transp) | USB_PADCAL_TRIM(pad_trim);
    1858:	019b      	lsls	r3, r3, #6
    185a:	430b      	orrs	r3, r1
    185c:	0312      	lsls	r2, r2, #12
    185e:	4313      	orrs	r3, r2
    1860:	4a09      	ldr	r2, [pc, #36]	; (1888 <_usb_load_calib+0x50>)
    1862:	8513      	strh	r3, [r2, #40]	; 0x28

	hw->DEVICE.QOSCTRL.bit.CQOS = 3;
    1864:	78d3      	ldrb	r3, [r2, #3]
    1866:	2103      	movs	r1, #3
    1868:	430b      	orrs	r3, r1
    186a:	70d3      	strb	r3, [r2, #3]
	hw->DEVICE.QOSCTRL.bit.DQOS = 3;
    186c:	78d3      	ldrb	r3, [r2, #3]
    186e:	210c      	movs	r1, #12
    1870:	430b      	orrs	r3, r1
    1872:	70d3      	strb	r3, [r2, #3]
}
    1874:	4770      	bx	lr
		pad_transn = 5;
    1876:	3b1a      	subs	r3, #26
    1878:	e7ea      	b.n	1850 <_usb_load_calib+0x18>
		pad_transp = 29;
    187a:	3902      	subs	r1, #2
    187c:	e7ea      	b.n	1854 <_usb_load_calib+0x1c>
		pad_trim = 5;
    187e:	3a02      	subs	r2, #2
    1880:	e7ea      	b.n	1858 <_usb_load_calib+0x20>
    1882:	46c0      	nop			; (mov r8, r8)
    1884:	00806024 	.word	0x00806024
    1888:	41005000 	.word	0x41005000

0000188c <_usb_d_dev_handle_setup>:
/**
 * \brief Handles setup received interrupt
 * \param[in] ept Pointer to endpoint information.
 */
static void _usb_d_dev_handle_setup(struct _usb_d_dev_ep *ept)
{
    188c:	b570      	push	{r4, r5, r6, lr}
	uint8_t epn     = USB_EP_GET_N(ept->ep);
    188e:	7c83      	ldrb	r3, [r0, #18]
    1890:	220f      	movs	r2, #15
    1892:	4013      	ands	r3, r2
	bool    is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    1894:	7cc1      	ldrb	r1, [r0, #19]
    1896:	3a08      	subs	r2, #8
    1898:	400a      	ands	r2, r1

	if (!is_ctrl) {
    189a:	2a01      	cmp	r2, #1
    189c:	d00d      	beq.n	18ba <_usb_d_dev_handle_setup+0x2e>
}

static inline void hri_usbendpoint_clear_EPINTFLAG_reg(const void *const hw, uint8_t submodule_index,
                                                       hri_usbendpoint_epintflag_reg_t mask)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    189e:	001a      	movs	r2, r3
    18a0:	3208      	adds	r2, #8
    18a2:	0152      	lsls	r2, r2, #5
    18a4:	4919      	ldr	r1, [pc, #100]	; (190c <_usb_d_dev_handle_setup+0x80>)
    18a6:	468c      	mov	ip, r1
    18a8:	4462      	add	r2, ip
    18aa:	2110      	movs	r1, #16
    18ac:	71d1      	strb	r1, [r2, #7]
	}
}

static inline void hri_usbendpoint_clear_EPINTEN_RXSTP_bit(const void *const hw, uint8_t submodule_index)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = USB_DEVICE_EPINTENSET_RXSTP;
    18ae:	015b      	lsls	r3, r3, #5
    18b0:	4a17      	ldr	r2, [pc, #92]	; (1910 <_usb_d_dev_handle_setup+0x84>)
    18b2:	4694      	mov	ip, r2
    18b4:	4463      	add	r3, ip
    18b6:	7019      	strb	r1, [r3, #0]
	_usbd_ep_clear_bank_status(epn, 1);
	_usbd_ep_int_ack(epn, USB_D_BANK0_INT_FLAGS | USB_D_BANK1_INT_FLAGS);
	_usbd_ep_int_dis(epn, USB_D_BANK0_INT_FLAGS | USB_D_BANK1_INT_FLAGS);
	/* Invoke callback. */
	dev_inst.ep_callbacks.setup(ept->ep);
}
    18b8:	bd70      	pop	{r4, r5, r6, pc}
	if (_usb_d_dev_ep_is_busy(ept)) {
    18ba:	064a      	lsls	r2, r1, #25
    18bc:	d50c      	bpl.n	18d8 <_usb_d_dev_handle_setup+0x4c>
		ept->flags.bits.is_busy = 0;
    18be:	7cc2      	ldrb	r2, [r0, #19]
    18c0:	2140      	movs	r1, #64	; 0x40
    18c2:	438a      	bics	r2, r1
    18c4:	74c2      	strb	r2, [r0, #19]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    18c6:	001a      	movs	r2, r3
    18c8:	3208      	adds	r2, #8
    18ca:	0152      	lsls	r2, r2, #5
    18cc:	4c0f      	ldr	r4, [pc, #60]	; (190c <_usb_d_dev_handle_setup+0x80>)
    18ce:	46a4      	mov	ip, r4
    18d0:	4462      	add	r2, ip
    18d2:	2480      	movs	r4, #128	; 0x80
    18d4:	7114      	strb	r4, [r2, #4]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    18d6:	7151      	strb	r1, [r2, #5]
	ept->flags.bits.is_stalled = 0;
    18d8:	7cc2      	ldrb	r2, [r0, #19]
    18da:	2108      	movs	r1, #8
    18dc:	438a      	bics	r2, r1
    18de:	74c2      	strb	r2, [r0, #19]
	bank->STATUS_BK.reg     = 0;
    18e0:	490c      	ldr	r1, [pc, #48]	; (1914 <_usb_d_dev_handle_setup+0x88>)
    18e2:	015a      	lsls	r2, r3, #5
    18e4:	188c      	adds	r4, r1, r2
    18e6:	2500      	movs	r5, #0
    18e8:	72a5      	strb	r5, [r4, #10]
    18ea:	76a5      	strb	r5, [r4, #26]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    18ec:	3308      	adds	r3, #8
    18ee:	015b      	lsls	r3, r3, #5
    18f0:	4c06      	ldr	r4, [pc, #24]	; (190c <_usb_d_dev_handle_setup+0x80>)
    18f2:	46a4      	mov	ip, r4
    18f4:	4463      	add	r3, ip
    18f6:	246f      	movs	r4, #111	; 0x6f
    18f8:	71dc      	strb	r4, [r3, #7]
}

static inline void hri_usbendpoint_clear_EPINTEN_reg(const void *const hw, uint8_t submodule_index,
                                                     hri_usbendpoint_epintenset_reg_t mask)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    18fa:	4b05      	ldr	r3, [pc, #20]	; (1910 <_usb_d_dev_handle_setup+0x84>)
    18fc:	469c      	mov	ip, r3
    18fe:	4462      	add	r2, ip
    1900:	7014      	strb	r4, [r2, #0]
	dev_inst.ep_callbacks.setup(ept->ep);
    1902:	6e8b      	ldr	r3, [r1, #104]	; 0x68
    1904:	7c80      	ldrb	r0, [r0, #18]
    1906:	4798      	blx	r3
    1908:	e7d6      	b.n	18b8 <_usb_d_dev_handle_setup+0x2c>
    190a:	46c0      	nop			; (mov r8, r8)
    190c:	41005000 	.word	0x41005000
    1910:	41005108 	.word	0x41005108
    1914:	20000300 	.word	0x20000300

00001918 <_usb_d_dev_handle_stall>:
 * \brief Handles stall sent interrupt
 * \param[in] ept Pointer to endpoint information.
 * \param[in] bank_n Bank number.
 */
static void _usb_d_dev_handle_stall(struct _usb_d_dev_ep *ept, const uint8_t bank_n)
{
    1918:	b510      	push	{r4, lr}
	uint8_t epn = USB_EP_GET_N(ept->ep);
    191a:	7c82      	ldrb	r2, [r0, #18]
    191c:	230f      	movs	r3, #15
    191e:	4013      	ands	r3, r2
		_usbd_ep_int_dis(epn, USB_DEVICE_EPINTFLAG_STALL0 << bank_n);
    1920:	2220      	movs	r2, #32
    1922:	408a      	lsls	r2, r1
	hri_usbendpoint_clear_EPINTEN_reg(USB, epn, flags);
    1924:	b2d2      	uxtb	r2, r2
    1926:	015b      	lsls	r3, r3, #5
    1928:	4905      	ldr	r1, [pc, #20]	; (1940 <_usb_d_dev_handle_stall+0x28>)
    192a:	468c      	mov	ip, r1
    192c:	4463      	add	r3, ip
    192e:	701a      	strb	r2, [r3, #0]
	/* Clear interrupt enable. Leave status there for status check. */
	_usbd_ep_int_stall_en(epn, bank_n, false);
	dev_inst.ep_callbacks.done(ept->ep, USB_TRANS_STALL, ept->trans_count);
    1930:	4b04      	ldr	r3, [pc, #16]	; (1944 <_usb_d_dev_handle_stall+0x2c>)
    1932:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    1934:	6882      	ldr	r2, [r0, #8]
    1936:	7c80      	ldrb	r0, [r0, #18]
    1938:	2101      	movs	r1, #1
    193a:	4798      	blx	r3
}
    193c:	bd10      	pop	{r4, pc}
    193e:	46c0      	nop			; (mov r8, r8)
    1940:	41005108 	.word	0x41005108
    1944:	20000300 	.word	0x20000300

00001948 <_usb_d_dev_trans_done>:
 *  \brief Finish the transaction and invoke callback
 * \param[in, out] ept Pointer to endpoint information.
 * \param[in] code Information code passed.
 */
static void _usb_d_dev_trans_done(struct _usb_d_dev_ep *ept, const int32_t code)
{
    1948:	b510      	push	{r4, lr}
	if (!(_usb_d_dev_ep_is_used(ept) && _usb_d_dev_ep_is_busy(ept))) {
    194a:	7c83      	ldrb	r3, [r0, #18]
    194c:	2bff      	cmp	r3, #255	; 0xff
    194e:	d002      	beq.n	1956 <_usb_d_dev_trans_done+0xe>
    1950:	7cc2      	ldrb	r2, [r0, #19]
    1952:	0652      	lsls	r2, r2, #25
    1954:	d400      	bmi.n	1958 <_usb_d_dev_trans_done+0x10>
		return;
	}
	ept->flags.bits.is_busy = 0;
	dev_inst.ep_callbacks.done(ept->ep, code, ept->trans_count);
}
    1956:	bd10      	pop	{r4, pc}
	ept->flags.bits.is_busy = 0;
    1958:	7cc2      	ldrb	r2, [r0, #19]
    195a:	2440      	movs	r4, #64	; 0x40
    195c:	43a2      	bics	r2, r4
    195e:	74c2      	strb	r2, [r0, #19]
	dev_inst.ep_callbacks.done(ept->ep, code, ept->trans_count);
    1960:	4a02      	ldr	r2, [pc, #8]	; (196c <_usb_d_dev_trans_done+0x24>)
    1962:	6f14      	ldr	r4, [r2, #112]	; 0x70
    1964:	6882      	ldr	r2, [r0, #8]
    1966:	0018      	movs	r0, r3
    1968:	47a0      	blx	r4
    196a:	e7f4      	b.n	1956 <_usb_d_dev_trans_done+0xe>
    196c:	20000300 	.word	0x20000300

00001970 <_usb_d_dev_trans_stop>:
 * \param[in, out] ept Pointer to endpoint information.
 * \param[in] dir Endpoint direction.
 * \param[in] code Information code passed.
 */
static void _usb_d_dev_trans_stop(struct _usb_d_dev_ep *ept, bool dir, const int32_t code)
{
    1970:	b5f0      	push	{r4, r5, r6, r7, lr}
    1972:	b083      	sub	sp, #12
	uint8_t epn = USB_EP_GET_N(ept->ep);
    1974:	7c84      	ldrb	r4, [r0, #18]
    1976:	230f      	movs	r3, #15
    1978:	4023      	ands	r3, r4
	;
	const uint8_t intflags[2] = {USB_D_BANK0_INT_FLAGS, USB_D_BANK1_INT_FLAGS};
    197a:	4d18      	ldr	r5, [pc, #96]	; (19dc <_usb_d_dev_trans_stop+0x6c>)
    197c:	882e      	ldrh	r6, [r5, #0]
    197e:	ad01      	add	r5, sp, #4
    1980:	802e      	strh	r6, [r5, #0]
	if (!(_usb_d_dev_ep_is_used(ept) && _usb_d_dev_ep_is_busy(ept))) {
    1982:	2cff      	cmp	r4, #255	; 0xff
    1984:	d01e      	beq.n	19c4 <_usb_d_dev_trans_stop+0x54>
    1986:	7cc4      	ldrb	r4, [r0, #19]
    1988:	0664      	lsls	r4, r4, #25
    198a:	d51b      	bpl.n	19c4 <_usb_d_dev_trans_stop+0x54>
		return;
	}
	/* Stop transfer */
	if (dir) {
    198c:	2900      	cmp	r1, #0
    198e:	d01b      	beq.n	19c8 <_usb_d_dev_trans_stop+0x58>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    1990:	001c      	movs	r4, r3
    1992:	3408      	adds	r4, #8
    1994:	0164      	lsls	r4, r4, #5
    1996:	4d12      	ldr	r5, [pc, #72]	; (19e0 <_usb_d_dev_trans_stop+0x70>)
    1998:	46ac      	mov	ip, r5
    199a:	4464      	add	r4, ip
    199c:	2580      	movs	r5, #128	; 0x80
    199e:	7125      	strb	r5, [r4, #4]
		_usbd_ep_set_in_rdy(epn, 1, false);
	} else {
		/* NAK OUT */
		_usbd_ep_set_out_rdy(epn, 0, false);
	}
	_usbd_ep_int_ack(epn, intflags[dir]);
    19a0:	ad01      	add	r5, sp, #4
    19a2:	5c6e      	ldrb	r6, [r5, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    19a4:	001c      	movs	r4, r3
    19a6:	3408      	adds	r4, #8
    19a8:	0164      	lsls	r4, r4, #5
    19aa:	4f0d      	ldr	r7, [pc, #52]	; (19e0 <_usb_d_dev_trans_stop+0x70>)
    19ac:	46bc      	mov	ip, r7
    19ae:	4464      	add	r4, ip
    19b0:	71e6      	strb	r6, [r4, #7]
	_usbd_ep_int_dis(epn, intflags[dir]);
    19b2:	5c69      	ldrb	r1, [r5, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    19b4:	015b      	lsls	r3, r3, #5
    19b6:	4c0b      	ldr	r4, [pc, #44]	; (19e4 <_usb_d_dev_trans_stop+0x74>)
    19b8:	46a4      	mov	ip, r4
    19ba:	4463      	add	r3, ip
    19bc:	7019      	strb	r1, [r3, #0]
	_usb_d_dev_trans_done(ept, code);
    19be:	0011      	movs	r1, r2
    19c0:	4b09      	ldr	r3, [pc, #36]	; (19e8 <_usb_d_dev_trans_stop+0x78>)
    19c2:	4798      	blx	r3
}
    19c4:	b003      	add	sp, #12
    19c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    19c8:	001c      	movs	r4, r3
    19ca:	3408      	adds	r4, #8
    19cc:	0164      	lsls	r4, r4, #5
    19ce:	4d04      	ldr	r5, [pc, #16]	; (19e0 <_usb_d_dev_trans_stop+0x70>)
    19d0:	46ac      	mov	ip, r5
    19d2:	4464      	add	r4, ip
    19d4:	2540      	movs	r5, #64	; 0x40
    19d6:	7165      	strb	r5, [r4, #5]
    19d8:	e7e2      	b.n	19a0 <_usb_d_dev_trans_stop+0x30>
    19da:	46c0      	nop			; (mov r8, r8)
    19dc:	00006078 	.word	0x00006078
    19e0:	41005000 	.word	0x41005000
    19e4:	41005108 	.word	0x41005108
    19e8:	00001949 	.word	0x00001949

000019ec <_usb_d_dev_handle_trfail>:
{
    19ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    19ee:	b083      	sub	sp, #12
	uint8_t            epn     = USB_EP_GET_N(ept->ep);
    19f0:	7c83      	ldrb	r3, [r0, #18]
    19f2:	220f      	movs	r2, #15
    19f4:	4013      	ands	r3, r2
	const uint8_t      fail[2] = {USB_DEVICE_EPINTFLAG_TRFAIL0, USB_DEVICE_EPINTFLAG_TRFAIL1};
    19f6:	4a3c      	ldr	r2, [pc, #240]	; (1ae8 <_usb_d_dev_handle_trfail+0xfc>)
    19f8:	8894      	ldrh	r4, [r2, #4]
    19fa:	aa01      	add	r2, sp, #4
    19fc:	8014      	strh	r4, [r2, #0]
	UsbDeviceDescBank *bank    = prvt_inst.desc_table[epn].DeviceDescBank;
    19fe:	015a      	lsls	r2, r3, #5
    1a00:	4c3a      	ldr	r4, [pc, #232]	; (1aec <_usb_d_dev_handle_trfail+0x100>)
    1a02:	18a4      	adds	r4, r4, r2
	uint8_t            eptype
    1a04:	2900      	cmp	r1, #0
    1a06:	d033      	beq.n	1a70 <_usb_d_dev_handle_trfail+0x84>

static inline hri_usbendpoint_epcfg_reg_t hri_usbendpoint_read_EPCFG_EPTYPE1_bf(const void *const hw,
                                                                                uint8_t           submodule_index)
{
	uint8_t tmp;
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    1a08:	001a      	movs	r2, r3
    1a0a:	3208      	adds	r2, #8
    1a0c:	0152      	lsls	r2, r2, #5
    1a0e:	4d38      	ldr	r5, [pc, #224]	; (1af0 <_usb_d_dev_handle_trfail+0x104>)
    1a10:	5d52      	ldrb	r2, [r2, r5]
	tmp = (tmp & USB_DEVICE_EPCFG_EPTYPE1_Msk) >> USB_DEVICE_EPCFG_EPTYPE1_Pos;
    1a12:	0912      	lsrs	r2, r2, #4
    1a14:	2507      	movs	r5, #7
    1a16:	4015      	ands	r5, r2
	bool                      is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    1a18:	7cc2      	ldrb	r2, [r0, #19]
    1a1a:	2607      	movs	r6, #7
    1a1c:	4016      	ands	r6, r2
	st.reg = bank[bank_n].STATUS_BK.reg;
    1a1e:	010a      	lsls	r2, r1, #4
    1a20:	18a2      	adds	r2, r4, r2
    1a22:	7a94      	ldrb	r4, [r2, #10]
    1a24:	b2e4      	uxtb	r4, r4
	if ((eptype == USB_D_EPTYPE_ISOCH) && st.bit.CRCERR) {
    1a26:	2d02      	cmp	r5, #2
    1a28:	d02a      	beq.n	1a80 <_usb_d_dev_handle_trfail+0x94>
	} else if (st.bit.ERRORFLOW) {
    1a2a:	07a4      	lsls	r4, r4, #30
    1a2c:	d544      	bpl.n	1ab8 <_usb_d_dev_handle_trfail+0xcc>
		bank[bank_n].STATUS_BK.bit.ERRORFLOW = 0;
    1a2e:	7a94      	ldrb	r4, [r2, #10]
    1a30:	2502      	movs	r5, #2
    1a32:	43ac      	bics	r4, r5
    1a34:	7294      	strb	r4, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    1a36:	ac01      	add	r4, sp, #4
    1a38:	5c65      	ldrb	r5, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1a3a:	001a      	movs	r2, r3
    1a3c:	3208      	adds	r2, #8
    1a3e:	0152      	lsls	r2, r2, #5
    1a40:	4f2b      	ldr	r7, [pc, #172]	; (1af0 <_usb_d_dev_handle_trfail+0x104>)
    1a42:	46bc      	mov	ip, r7
    1a44:	4462      	add	r2, ip
    1a46:	71d5      	strb	r5, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    1a48:	5c62      	ldrb	r2, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1a4a:	015b      	lsls	r3, r3, #5
    1a4c:	4c29      	ldr	r4, [pc, #164]	; (1af4 <_usb_d_dev_handle_trfail+0x108>)
    1a4e:	46a4      	mov	ip, r4
    1a50:	4463      	add	r3, ip
    1a52:	701a      	strb	r2, [r3, #0]
		if (is_ctrl && _usb_d_dev_ep_is_busy(ept)) {
    1a54:	2e01      	cmp	r6, #1
    1a56:	d145      	bne.n	1ae4 <_usb_d_dev_handle_trfail+0xf8>
    1a58:	7cc3      	ldrb	r3, [r0, #19]
    1a5a:	065b      	lsls	r3, r3, #25
    1a5c:	d542      	bpl.n	1ae4 <_usb_d_dev_handle_trfail+0xf8>
			if (bank_n != _usb_d_dev_ep_is_in(ept)) {
    1a5e:	7cc3      	ldrb	r3, [r0, #19]
    1a60:	09db      	lsrs	r3, r3, #7
    1a62:	4299      	cmp	r1, r3
    1a64:	d03e      	beq.n	1ae4 <_usb_d_dev_handle_trfail+0xf8>
				_usb_d_dev_trans_stop(ept, _usb_d_dev_ep_is_in(ept), USB_TRANS_DONE);
    1a66:	2200      	movs	r2, #0
    1a68:	0019      	movs	r1, r3
    1a6a:	4b23      	ldr	r3, [pc, #140]	; (1af8 <_usb_d_dev_handle_trfail+0x10c>)
    1a6c:	4798      	blx	r3
    1a6e:	e039      	b.n	1ae4 <_usb_d_dev_handle_trfail+0xf8>
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    1a70:	001a      	movs	r2, r3
    1a72:	3208      	adds	r2, #8
    1a74:	0152      	lsls	r2, r2, #5
    1a76:	4d1e      	ldr	r5, [pc, #120]	; (1af0 <_usb_d_dev_handle_trfail+0x104>)
    1a78:	5d55      	ldrb	r5, [r2, r5]
	tmp = (tmp & USB_DEVICE_EPCFG_EPTYPE0_Msk) >> USB_DEVICE_EPCFG_EPTYPE0_Pos;
    1a7a:	2207      	movs	r2, #7
    1a7c:	4015      	ands	r5, r2
    1a7e:	e7cb      	b.n	1a18 <_usb_d_dev_handle_trfail+0x2c>
	if ((eptype == USB_D_EPTYPE_ISOCH) && st.bit.CRCERR) {
    1a80:	07e5      	lsls	r5, r4, #31
    1a82:	d5d2      	bpl.n	1a2a <_usb_d_dev_handle_trfail+0x3e>
		bank[bank_n].STATUS_BK.bit.CRCERR = 0;
    1a84:	7a94      	ldrb	r4, [r2, #10]
    1a86:	2501      	movs	r5, #1
    1a88:	43ac      	bics	r4, r5
    1a8a:	7294      	strb	r4, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    1a8c:	ac01      	add	r4, sp, #4
    1a8e:	5c65      	ldrb	r5, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1a90:	001a      	movs	r2, r3
    1a92:	3208      	adds	r2, #8
    1a94:	0152      	lsls	r2, r2, #5
    1a96:	4e16      	ldr	r6, [pc, #88]	; (1af0 <_usb_d_dev_handle_trfail+0x104>)
    1a98:	46b4      	mov	ip, r6
    1a9a:	4462      	add	r2, ip
    1a9c:	71d5      	strb	r5, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    1a9e:	5c62      	ldrb	r2, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1aa0:	015b      	lsls	r3, r3, #5
    1aa2:	4c14      	ldr	r4, [pc, #80]	; (1af4 <_usb_d_dev_handle_trfail+0x108>)
    1aa4:	46a4      	mov	ip, r4
    1aa6:	4463      	add	r3, ip
    1aa8:	701a      	strb	r2, [r3, #0]
		_usb_d_dev_trans_stop(ept, bank_n, USB_TRANS_ERROR);
    1aaa:	1e4b      	subs	r3, r1, #1
    1aac:	4199      	sbcs	r1, r3
    1aae:	b2c9      	uxtb	r1, r1
    1ab0:	2204      	movs	r2, #4
    1ab2:	4b11      	ldr	r3, [pc, #68]	; (1af8 <_usb_d_dev_handle_trfail+0x10c>)
    1ab4:	4798      	blx	r3
    1ab6:	e015      	b.n	1ae4 <_usb_d_dev_handle_trfail+0xf8>
	bank->STATUS_BK.reg     = 0;
    1ab8:	005a      	lsls	r2, r3, #1
    1aba:	1852      	adds	r2, r2, r1
    1abc:	0112      	lsls	r2, r2, #4
    1abe:	480b      	ldr	r0, [pc, #44]	; (1aec <_usb_d_dev_handle_trfail+0x100>)
    1ac0:	1882      	adds	r2, r0, r2
    1ac2:	2000      	movs	r0, #0
    1ac4:	7290      	strb	r0, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    1ac6:	a801      	add	r0, sp, #4
    1ac8:	5c44      	ldrb	r4, [r0, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1aca:	001a      	movs	r2, r3
    1acc:	3208      	adds	r2, #8
    1ace:	0152      	lsls	r2, r2, #5
    1ad0:	4d07      	ldr	r5, [pc, #28]	; (1af0 <_usb_d_dev_handle_trfail+0x104>)
    1ad2:	46ac      	mov	ip, r5
    1ad4:	4462      	add	r2, ip
    1ad6:	71d4      	strb	r4, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    1ad8:	5c42      	ldrb	r2, [r0, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1ada:	015b      	lsls	r3, r3, #5
    1adc:	4905      	ldr	r1, [pc, #20]	; (1af4 <_usb_d_dev_handle_trfail+0x108>)
    1ade:	468c      	mov	ip, r1
    1ae0:	4463      	add	r3, ip
    1ae2:	701a      	strb	r2, [r3, #0]
}
    1ae4:	b003      	add	sp, #12
    1ae6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ae8:	00006078 	.word	0x00006078
    1aec:	20000300 	.word	0x20000300
    1af0:	41005000 	.word	0x41005000
    1af4:	41005108 	.word	0x41005108
    1af8:	00001971 	.word	0x00001971

00001afc <_usb_d_dev_reset_epts>:
{
    1afc:	b570      	push	{r4, r5, r6, lr}
	for (i = 0; i < USB_D_N_EP; i++) {
    1afe:	2500      	movs	r5, #0
    1b00:	e018      	b.n	1b34 <_usb_d_dev_reset_epts+0x38>
		_usb_d_dev_trans_done(&dev_inst.ep[i], USB_TRANS_RESET);
    1b02:	4c10      	ldr	r4, [pc, #64]	; (1b44 <_usb_d_dev_reset_epts+0x48>)
    1b04:	3460      	adds	r4, #96	; 0x60
    1b06:	00ae      	lsls	r6, r5, #2
    1b08:	1973      	adds	r3, r6, r5
    1b0a:	0098      	lsls	r0, r3, #2
    1b0c:	3010      	adds	r0, #16
    1b0e:	1820      	adds	r0, r4, r0
    1b10:	3004      	adds	r0, #4
    1b12:	2103      	movs	r1, #3
    1b14:	4b0c      	ldr	r3, [pc, #48]	; (1b48 <_usb_d_dev_reset_epts+0x4c>)
    1b16:	4798      	blx	r3
		dev_inst.ep[i].ep       = 0xFF;
    1b18:	1972      	adds	r2, r6, r5
    1b1a:	0093      	lsls	r3, r2, #2
    1b1c:	18e3      	adds	r3, r4, r3
    1b1e:	3326      	adds	r3, #38	; 0x26
    1b20:	22ff      	movs	r2, #255	; 0xff
    1b22:	701a      	strb	r2, [r3, #0]
		dev_inst.ep[i].flags.u8 = 0;
    1b24:	1976      	adds	r6, r6, r5
    1b26:	00b3      	lsls	r3, r6, #2
    1b28:	18e4      	adds	r4, r4, r3
    1b2a:	3427      	adds	r4, #39	; 0x27
    1b2c:	2300      	movs	r3, #0
    1b2e:	7023      	strb	r3, [r4, #0]
	for (i = 0; i < USB_D_N_EP; i++) {
    1b30:	3501      	adds	r5, #1
    1b32:	b2ed      	uxtb	r5, r5
    1b34:	2d08      	cmp	r5, #8
    1b36:	d9e4      	bls.n	1b02 <_usb_d_dev_reset_epts+0x6>
	memset(prvt_inst.desc_table, 0, sizeof(UsbDeviceDescriptor) * (CONF_USB_D_MAX_EP_N + 1));
    1b38:	2260      	movs	r2, #96	; 0x60
    1b3a:	2100      	movs	r1, #0
    1b3c:	4801      	ldr	r0, [pc, #4]	; (1b44 <_usb_d_dev_reset_epts+0x48>)
    1b3e:	4b03      	ldr	r3, [pc, #12]	; (1b4c <_usb_d_dev_reset_epts+0x50>)
    1b40:	4798      	blx	r3
}
    1b42:	bd70      	pop	{r4, r5, r6, pc}
    1b44:	20000300 	.word	0x20000300
    1b48:	00001949 	.word	0x00001949
    1b4c:	00005e77 	.word	0x00005e77

00001b50 <_usb_d_dev_in_next>:
{
    1b50:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b52:	46c6      	mov	lr, r8
    1b54:	b500      	push	{lr}
    1b56:	0005      	movs	r5, r0
    1b58:	000e      	movs	r6, r1
	uint8_t            epn         = USB_EP_GET_N(ept->ep);
    1b5a:	7c83      	ldrb	r3, [r0, #18]
    1b5c:	240f      	movs	r4, #15
    1b5e:	401c      	ands	r4, r3
	UsbDeviceDescBank *bank        = &prvt_inst.desc_table[epn].DeviceDescBank[0];
    1b60:	0162      	lsls	r2, r4, #5
    1b62:	4b56      	ldr	r3, [pc, #344]	; (1cbc <_usb_d_dev_in_next+0x16c>)
    1b64:	189b      	adds	r3, r3, r2
	uint16_t           trans_count = isr ? bank[1].PCKSIZE.bit.BYTE_COUNT : 0;
    1b66:	2900      	cmp	r1, #0
    1b68:	d058      	beq.n	1c1c <_usb_d_dev_in_next+0xcc>
    1b6a:	6959      	ldr	r1, [r3, #20]
    1b6c:	0489      	lsls	r1, r1, #18
    1b6e:	0c89      	lsrs	r1, r1, #18
	uint16_t           last_pkt = trans_count & ((ept->size == 1023) ? ept->size : (ept->size - 1));
    1b70:	8a2b      	ldrh	r3, [r5, #16]
    1b72:	4a53      	ldr	r2, [pc, #332]	; (1cc0 <_usb_d_dev_in_next+0x170>)
    1b74:	4293      	cmp	r3, r2
    1b76:	d053      	beq.n	1c20 <_usb_d_dev_in_next+0xd0>
    1b78:	3b01      	subs	r3, #1
    1b7a:	b21b      	sxth	r3, r3
    1b7c:	400b      	ands	r3, r1
	bool               is_ctrl  = _usb_d_dev_ep_is_ctrl(ept);
    1b7e:	7cea      	ldrb	r2, [r5, #19]
    1b80:	2707      	movs	r7, #7
    1b82:	4017      	ands	r7, r2
	if (isr) {
    1b84:	2e00      	cmp	r6, #0
    1b86:	d007      	beq.n	1b98 <_usb_d_dev_in_next+0x48>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1b88:	0022      	movs	r2, r4
    1b8a:	3208      	adds	r2, #8
    1b8c:	0152      	lsls	r2, r2, #5
    1b8e:	484d      	ldr	r0, [pc, #308]	; (1cc4 <_usb_d_dev_in_next+0x174>)
    1b90:	4684      	mov	ip, r0
    1b92:	4462      	add	r2, ip
    1b94:	2002      	movs	r0, #2
    1b96:	71d0      	strb	r0, [r2, #7]
	ept->trans_count += trans_count;
    1b98:	68aa      	ldr	r2, [r5, #8]
    1b9a:	4694      	mov	ip, r2
    1b9c:	4461      	add	r1, ip
    1b9e:	60a9      	str	r1, [r5, #8]
	if (ept->trans_count < ept->trans_size) {
    1ba0:	686a      	ldr	r2, [r5, #4]
    1ba2:	4291      	cmp	r1, r2
    1ba4:	d24e      	bcs.n	1c44 <_usb_d_dev_in_next+0xf4>
		trans_next = ept->trans_size - ept->trans_count;
    1ba6:	b292      	uxth	r2, r2
    1ba8:	b28b      	uxth	r3, r1
    1baa:	1ad2      	subs	r2, r2, r3
    1bac:	b292      	uxth	r2, r2
		if (ept->flags.bits.use_cache) {
    1bae:	7ceb      	ldrb	r3, [r5, #19]
    1bb0:	069b      	lsls	r3, r3, #26
    1bb2:	d537      	bpl.n	1c24 <_usb_d_dev_in_next+0xd4>
			if (trans_next > ept->size) {
    1bb4:	8a2b      	ldrh	r3, [r5, #16]
    1bb6:	4698      	mov	r8, r3
    1bb8:	429a      	cmp	r2, r3
    1bba:	d800      	bhi.n	1bbe <_usb_d_dev_in_next+0x6e>
		trans_next = ept->trans_size - ept->trans_count;
    1bbc:	4690      	mov	r8, r2
			memcpy(ept->cache, &ept->trans_buf[ept->trans_count], trans_next);
    1bbe:	682b      	ldr	r3, [r5, #0]
    1bc0:	469c      	mov	ip, r3
    1bc2:	4461      	add	r1, ip
    1bc4:	4642      	mov	r2, r8
    1bc6:	68e8      	ldr	r0, [r5, #12]
    1bc8:	4b3f      	ldr	r3, [pc, #252]	; (1cc8 <_usb_d_dev_in_next+0x178>)
    1bca:	4798      	blx	r3
			_usbd_ep_set_buf(epn, 1, (uint32_t)ept->cache);
    1bcc:	68e9      	ldr	r1, [r5, #12]
	bank->ADDR.reg          = addr;
    1bce:	0162      	lsls	r2, r4, #5
    1bd0:	4b3a      	ldr	r3, [pc, #232]	; (1cbc <_usb_d_dev_in_next+0x16c>)
    1bd2:	189b      	adds	r3, r3, r2
    1bd4:	6119      	str	r1, [r3, #16]
	bank->PCKSIZE.bit.BYTE_COUNT = size;
    1bd6:	0163      	lsls	r3, r4, #5
    1bd8:	4a38      	ldr	r2, [pc, #224]	; (1cbc <_usb_d_dev_in_next+0x16c>)
    1bda:	18d2      	adds	r2, r2, r3
    1bdc:	6951      	ldr	r1, [r2, #20]
    1bde:	4643      	mov	r3, r8
    1be0:	049b      	lsls	r3, r3, #18
    1be2:	0c9b      	lsrs	r3, r3, #18
    1be4:	0b89      	lsrs	r1, r1, #14
    1be6:	0389      	lsls	r1, r1, #14
    1be8:	430b      	orrs	r3, r1
    1bea:	6153      	str	r3, [r2, #20]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = count;
    1bec:	6951      	ldr	r1, [r2, #20]
    1bee:	4b37      	ldr	r3, [pc, #220]	; (1ccc <_usb_d_dev_in_next+0x17c>)
    1bf0:	400b      	ands	r3, r1
    1bf2:	6153      	str	r3, [r2, #20]
	if (!isr) {
    1bf4:	2e00      	cmp	r6, #0
    1bf6:	d107      	bne.n	1c08 <_usb_d_dev_in_next+0xb8>
		if (is_ctrl) {
    1bf8:	2f01      	cmp	r7, #1
    1bfa:	d05d      	beq.n	1cb8 <_usb_d_dev_in_next+0x168>
			inten = USB_D_BANK1_INT_FLAGS;
    1bfc:	224a      	movs	r2, #74	; 0x4a
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    1bfe:	0163      	lsls	r3, r4, #5
    1c00:	4933      	ldr	r1, [pc, #204]	; (1cd0 <_usb_d_dev_in_next+0x180>)
    1c02:	468c      	mov	ip, r1
    1c04:	4463      	add	r3, ip
    1c06:	701a      	strb	r2, [r3, #0]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    1c08:	3408      	adds	r4, #8
    1c0a:	0164      	lsls	r4, r4, #5
    1c0c:	4b2d      	ldr	r3, [pc, #180]	; (1cc4 <_usb_d_dev_in_next+0x174>)
    1c0e:	469c      	mov	ip, r3
    1c10:	4464      	add	r4, ip
    1c12:	2380      	movs	r3, #128	; 0x80
    1c14:	7163      	strb	r3, [r4, #5]
}
    1c16:	bc04      	pop	{r2}
    1c18:	4690      	mov	r8, r2
    1c1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint16_t           trans_count = isr ? bank[1].PCKSIZE.bit.BYTE_COUNT : 0;
    1c1c:	2100      	movs	r1, #0
    1c1e:	e7a7      	b.n	1b70 <_usb_d_dev_in_next+0x20>
	uint16_t           last_pkt = trans_count & ((ept->size == 1023) ? ept->size : (ept->size - 1));
    1c20:	b21b      	sxth	r3, r3
    1c22:	e7ab      	b.n	1b7c <_usb_d_dev_in_next+0x2c>
			if (trans_next > USB_D_DEV_TRANS_MAX) {
    1c24:	2380      	movs	r3, #128	; 0x80
    1c26:	019b      	lsls	r3, r3, #6
    1c28:	429a      	cmp	r2, r3
    1c2a:	d807      	bhi.n	1c3c <_usb_d_dev_in_next+0xec>
		trans_next = ept->trans_size - ept->trans_count;
    1c2c:	4690      	mov	r8, r2
			_usbd_ep_set_buf(epn, 1, (uint32_t)&ept->trans_buf[ept->trans_count]);
    1c2e:	682b      	ldr	r3, [r5, #0]
    1c30:	1859      	adds	r1, r3, r1
	bank->ADDR.reg          = addr;
    1c32:	0162      	lsls	r2, r4, #5
    1c34:	4b21      	ldr	r3, [pc, #132]	; (1cbc <_usb_d_dev_in_next+0x16c>)
    1c36:	189b      	adds	r3, r3, r2
    1c38:	6119      	str	r1, [r3, #16]
    1c3a:	e7cc      	b.n	1bd6 <_usb_d_dev_in_next+0x86>
				trans_next = USB_D_DEV_TRANS_MAX;
    1c3c:	2380      	movs	r3, #128	; 0x80
    1c3e:	019b      	lsls	r3, r3, #6
    1c40:	4698      	mov	r8, r3
    1c42:	e7f4      	b.n	1c2e <_usb_d_dev_in_next+0xde>
	} else if (ept->flags.bits.need_zlp) {
    1c44:	7cea      	ldrb	r2, [r5, #19]
    1c46:	06d2      	lsls	r2, r2, #27
    1c48:	d50f      	bpl.n	1c6a <_usb_d_dev_in_next+0x11a>
		ept->flags.bits.need_zlp = 0;
    1c4a:	7ceb      	ldrb	r3, [r5, #19]
    1c4c:	2210      	movs	r2, #16
    1c4e:	4393      	bics	r3, r2
    1c50:	74eb      	strb	r3, [r5, #19]
	bank->PCKSIZE.bit.BYTE_COUNT = size;
    1c52:	0162      	lsls	r2, r4, #5
    1c54:	4b19      	ldr	r3, [pc, #100]	; (1cbc <_usb_d_dev_in_next+0x16c>)
    1c56:	189b      	adds	r3, r3, r2
    1c58:	695a      	ldr	r2, [r3, #20]
    1c5a:	0b92      	lsrs	r2, r2, #14
    1c5c:	0391      	lsls	r1, r2, #14
    1c5e:	6159      	str	r1, [r3, #20]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = count;
    1c60:	6959      	ldr	r1, [r3, #20]
    1c62:	4a1a      	ldr	r2, [pc, #104]	; (1ccc <_usb_d_dev_in_next+0x17c>)
    1c64:	400a      	ands	r2, r1
    1c66:	615a      	str	r2, [r3, #20]
    1c68:	e7c4      	b.n	1bf4 <_usb_d_dev_in_next+0xa4>
	if (is_ctrl) {
    1c6a:	2f01      	cmp	r7, #1
    1c6c:	d00d      	beq.n	1c8a <_usb_d_dev_in_next+0x13a>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1c6e:	0164      	lsls	r4, r4, #5
    1c70:	4a18      	ldr	r2, [pc, #96]	; (1cd4 <_usb_d_dev_in_next+0x184>)
    1c72:	4694      	mov	ip, r2
    1c74:	4464      	add	r4, ip
    1c76:	224a      	movs	r2, #74	; 0x4a
    1c78:	7022      	strb	r2, [r4, #0]
	if (last_pkt == ept->size) {
    1c7a:	8a2a      	ldrh	r2, [r5, #16]
    1c7c:	4293      	cmp	r3, r2
    1c7e:	d00b      	beq.n	1c98 <_usb_d_dev_in_next+0x148>
	_usb_d_dev_trans_done(ept, USB_TRANS_DONE);
    1c80:	2100      	movs	r1, #0
    1c82:	0028      	movs	r0, r5
    1c84:	4b14      	ldr	r3, [pc, #80]	; (1cd8 <_usb_d_dev_in_next+0x188>)
    1c86:	4798      	blx	r3
	return;
    1c88:	e7c5      	b.n	1c16 <_usb_d_dev_in_next+0xc6>
    1c8a:	0164      	lsls	r4, r4, #5
    1c8c:	4a11      	ldr	r2, [pc, #68]	; (1cd4 <_usb_d_dev_in_next+0x184>)
    1c8e:	4694      	mov	ip, r2
    1c90:	4464      	add	r4, ip
    1c92:	224b      	movs	r2, #75	; 0x4b
    1c94:	7022      	strb	r2, [r4, #0]
    1c96:	e7f0      	b.n	1c7a <_usb_d_dev_in_next+0x12a>
		ept->flags.bits.is_busy = 0;
    1c98:	7ceb      	ldrb	r3, [r5, #19]
    1c9a:	2240      	movs	r2, #64	; 0x40
    1c9c:	4393      	bics	r3, r2
    1c9e:	74eb      	strb	r3, [r5, #19]
		if (dev_inst.ep_callbacks.more(ept->ep, ept->trans_count)) {
    1ca0:	4b06      	ldr	r3, [pc, #24]	; (1cbc <_usb_d_dev_in_next+0x16c>)
    1ca2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    1ca4:	7ca8      	ldrb	r0, [r5, #18]
    1ca6:	68a9      	ldr	r1, [r5, #8]
    1ca8:	4798      	blx	r3
    1caa:	2800      	cmp	r0, #0
    1cac:	d1b3      	bne.n	1c16 <_usb_d_dev_in_next+0xc6>
		ept->flags.bits.is_busy = 1;
    1cae:	7ceb      	ldrb	r3, [r5, #19]
    1cb0:	2240      	movs	r2, #64	; 0x40
    1cb2:	4313      	orrs	r3, r2
    1cb4:	74eb      	strb	r3, [r5, #19]
    1cb6:	e7e3      	b.n	1c80 <_usb_d_dev_in_next+0x130>
			inten = USB_D_BANK1_INT_FLAGS | USB_DEVICE_EPINTFLAG_TRFAIL0;
    1cb8:	224e      	movs	r2, #78	; 0x4e
    1cba:	e7a0      	b.n	1bfe <_usb_d_dev_in_next+0xae>
    1cbc:	20000300 	.word	0x20000300
    1cc0:	000003ff 	.word	0x000003ff
    1cc4:	41005000 	.word	0x41005000
    1cc8:	00005e65 	.word	0x00005e65
    1ccc:	f0003fff 	.word	0xf0003fff
    1cd0:	41005109 	.word	0x41005109
    1cd4:	41005108 	.word	0x41005108
    1cd8:	00001949 	.word	0x00001949

00001cdc <_usb_d_dev_out_next>:
{
    1cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1cde:	46de      	mov	lr, fp
    1ce0:	4657      	mov	r7, sl
    1ce2:	464e      	mov	r6, r9
    1ce4:	4645      	mov	r5, r8
    1ce6:	b5e0      	push	{r5, r6, r7, lr}
    1ce8:	0004      	movs	r4, r0
    1cea:	000f      	movs	r7, r1
	uint8_t            epn        = USB_EP_GET_N(ept->ep);
    1cec:	7c83      	ldrb	r3, [r0, #18]
    1cee:	250f      	movs	r5, #15
    1cf0:	401d      	ands	r5, r3
	uint16_t           trans_size = isr ? bank->PCKSIZE.bit.MULTI_PACKET_SIZE : 0;
    1cf2:	2900      	cmp	r1, #0
    1cf4:	d059      	beq.n	1daa <_usb_d_dev_out_next+0xce>
    1cf6:	016a      	lsls	r2, r5, #5
    1cf8:	4b71      	ldr	r3, [pc, #452]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1cfa:	189b      	adds	r3, r3, r2
    1cfc:	685b      	ldr	r3, [r3, #4]
    1cfe:	011b      	lsls	r3, r3, #4
    1d00:	0c9b      	lsrs	r3, r3, #18
    1d02:	469a      	mov	sl, r3
	uint16_t           last_trans = isr ? bank->PCKSIZE.bit.BYTE_COUNT : 0;
    1d04:	2f00      	cmp	r7, #0
    1d06:	d053      	beq.n	1db0 <_usb_d_dev_out_next+0xd4>
    1d08:	016a      	lsls	r2, r5, #5
    1d0a:	4b6d      	ldr	r3, [pc, #436]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1d0c:	189b      	adds	r3, r3, r2
    1d0e:	685b      	ldr	r3, [r3, #4]
    1d10:	049b      	lsls	r3, r3, #18
    1d12:	0c9b      	lsrs	r3, r3, #18
    1d14:	4698      	mov	r8, r3
	uint16_t           size_mask  = (ept->size == 1023) ? 1023 : (ept->size - 1);
    1d16:	8a26      	ldrh	r6, [r4, #16]
    1d18:	4b6a      	ldr	r3, [pc, #424]	; (1ec4 <_usb_d_dev_out_next+0x1e8>)
    1d1a:	429e      	cmp	r6, r3
    1d1c:	d001      	beq.n	1d22 <_usb_d_dev_out_next+0x46>
    1d1e:	3e01      	subs	r6, #1
    1d20:	b2b6      	uxth	r6, r6
	uint16_t           last_pkt   = last_trans & size_mask;
    1d22:	4643      	mov	r3, r8
    1d24:	4033      	ands	r3, r6
    1d26:	469b      	mov	fp, r3
	bool               is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    1d28:	7ce3      	ldrb	r3, [r4, #19]
    1d2a:	2207      	movs	r2, #7
    1d2c:	401a      	ands	r2, r3
    1d2e:	4691      	mov	r9, r2
	if (isr) {
    1d30:	2f00      	cmp	r7, #0
    1d32:	d007      	beq.n	1d44 <_usb_d_dev_out_next+0x68>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1d34:	002b      	movs	r3, r5
    1d36:	3308      	adds	r3, #8
    1d38:	015b      	lsls	r3, r3, #5
    1d3a:	4a63      	ldr	r2, [pc, #396]	; (1ec8 <_usb_d_dev_out_next+0x1ec>)
    1d3c:	4694      	mov	ip, r2
    1d3e:	4463      	add	r3, ip
    1d40:	2201      	movs	r2, #1
    1d42:	71da      	strb	r2, [r3, #7]
	if (ept->flags.bits.use_cache && ept->trans_size) {
    1d44:	7ce3      	ldrb	r3, [r4, #19]
    1d46:	069b      	lsls	r3, r3, #26
    1d48:	d511      	bpl.n	1d6e <_usb_d_dev_out_next+0x92>
    1d4a:	6862      	ldr	r2, [r4, #4]
    1d4c:	2a00      	cmp	r2, #0
    1d4e:	d00e      	beq.n	1d6e <_usb_d_dev_out_next+0x92>
		uint16_t buf_remain = ept->trans_size - ept->trans_count;
    1d50:	b292      	uxth	r2, r2
    1d52:	8923      	ldrh	r3, [r4, #8]
    1d54:	1ad2      	subs	r2, r2, r3
    1d56:	b292      	uxth	r2, r2
		memcpy(&ept->trans_buf[ept->trans_count], ept->cache, (buf_remain > last_pkt) ? last_pkt : buf_remain);
    1d58:	6823      	ldr	r3, [r4, #0]
    1d5a:	68a1      	ldr	r1, [r4, #8]
    1d5c:	468c      	mov	ip, r1
    1d5e:	4463      	add	r3, ip
    1d60:	0018      	movs	r0, r3
    1d62:	68e1      	ldr	r1, [r4, #12]
    1d64:	4593      	cmp	fp, r2
    1d66:	d200      	bcs.n	1d6a <_usb_d_dev_out_next+0x8e>
    1d68:	465a      	mov	r2, fp
    1d6a:	4b58      	ldr	r3, [pc, #352]	; (1ecc <_usb_d_dev_out_next+0x1f0>)
    1d6c:	4798      	blx	r3
	if (ept->trans_size == 0 && ept->flags.bits.need_zlp) {
    1d6e:	6863      	ldr	r3, [r4, #4]
    1d70:	2b00      	cmp	r3, #0
    1d72:	d120      	bne.n	1db6 <_usb_d_dev_out_next+0xda>
    1d74:	7ce2      	ldrb	r2, [r4, #19]
    1d76:	06d2      	lsls	r2, r2, #27
    1d78:	d51d      	bpl.n	1db6 <_usb_d_dev_out_next+0xda>
		ept->flags.bits.need_zlp  = 0;
    1d7a:	7ce3      	ldrb	r3, [r4, #19]
		ept->flags.bits.use_cache = 1;
    1d7c:	2210      	movs	r2, #16
    1d7e:	4393      	bics	r3, r2
    1d80:	2220      	movs	r2, #32
    1d82:	4313      	orrs	r3, r2
    1d84:	74e3      	strb	r3, [r4, #19]
	bank->ADDR.reg          = addr;
    1d86:	494e      	ldr	r1, [pc, #312]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1d88:	016a      	lsls	r2, r5, #5
    1d8a:	68e3      	ldr	r3, [r4, #12]
    1d8c:	5053      	str	r3, [r2, r1]
		_usbd_ep_set_out_trans(epn, 0, ept->size, 0);
    1d8e:	8a23      	ldrh	r3, [r4, #16]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = size;
    1d90:	188a      	adds	r2, r1, r2
    1d92:	6851      	ldr	r1, [r2, #4]
    1d94:	049b      	lsls	r3, r3, #18
    1d96:	091b      	lsrs	r3, r3, #4
    1d98:	484d      	ldr	r0, [pc, #308]	; (1ed0 <_usb_d_dev_out_next+0x1f4>)
    1d9a:	4001      	ands	r1, r0
    1d9c:	430b      	orrs	r3, r1
    1d9e:	6053      	str	r3, [r2, #4]
	bank->PCKSIZE.bit.BYTE_COUNT = count;
    1da0:	6853      	ldr	r3, [r2, #4]
    1da2:	0b9b      	lsrs	r3, r3, #14
    1da4:	0399      	lsls	r1, r3, #14
    1da6:	6051      	str	r1, [r2, #4]
    1da8:	e047      	b.n	1e3a <_usb_d_dev_out_next+0x15e>
	uint16_t           trans_size = isr ? bank->PCKSIZE.bit.MULTI_PACKET_SIZE : 0;
    1daa:	2300      	movs	r3, #0
    1dac:	469a      	mov	sl, r3
    1dae:	e7a9      	b.n	1d04 <_usb_d_dev_out_next+0x28>
	uint16_t           last_trans = isr ? bank->PCKSIZE.bit.BYTE_COUNT : 0;
    1db0:	2300      	movs	r3, #0
    1db2:	4698      	mov	r8, r3
    1db4:	e7af      	b.n	1d16 <_usb_d_dev_out_next+0x3a>
	} else if (isr && last_pkt < ept->size) {
    1db6:	2f00      	cmp	r7, #0
    1db8:	d01d      	beq.n	1df6 <_usb_d_dev_out_next+0x11a>
    1dba:	8a22      	ldrh	r2, [r4, #16]
    1dbc:	4593      	cmp	fp, r2
    1dbe:	d21a      	bcs.n	1df6 <_usb_d_dev_out_next+0x11a>
		ept->flags.bits.need_zlp = 0;
    1dc0:	7ce3      	ldrb	r3, [r4, #19]
    1dc2:	2210      	movs	r2, #16
    1dc4:	4393      	bics	r3, r2
    1dc6:	74e3      	strb	r3, [r4, #19]
		ept->trans_count += last_trans;
    1dc8:	68a3      	ldr	r3, [r4, #8]
    1dca:	4443      	add	r3, r8
    1dcc:	60a3      	str	r3, [r4, #8]
	if (is_ctrl) {
    1dce:	464b      	mov	r3, r9
    1dd0:	2b01      	cmp	r3, #1
    1dd2:	d066      	beq.n	1ea2 <_usb_d_dev_out_next+0x1c6>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1dd4:	016b      	lsls	r3, r5, #5
    1dd6:	4a3f      	ldr	r2, [pc, #252]	; (1ed4 <_usb_d_dev_out_next+0x1f8>)
    1dd8:	4694      	mov	ip, r2
    1dda:	4463      	add	r3, ip
    1ddc:	2225      	movs	r2, #37	; 0x25
    1dde:	701a      	strb	r2, [r3, #0]
	if (0 == epn) {
    1de0:	2d00      	cmp	r5, #0
    1de2:	d103      	bne.n	1dec <_usb_d_dev_out_next+0x110>
	bank->ADDR.reg          = addr;
    1de4:	016d      	lsls	r5, r5, #5
    1de6:	4b36      	ldr	r3, [pc, #216]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1de8:	68e2      	ldr	r2, [r4, #12]
    1dea:	50ea      	str	r2, [r5, r3]
	_usb_d_dev_trans_done(ept, USB_TRANS_DONE);
    1dec:	2100      	movs	r1, #0
    1dee:	0020      	movs	r0, r4
    1df0:	4b39      	ldr	r3, [pc, #228]	; (1ed8 <_usb_d_dev_out_next+0x1fc>)
    1df2:	4798      	blx	r3
	return;
    1df4:	e033      	b.n	1e5e <_usb_d_dev_out_next+0x182>
		ept->trans_count += trans_size;
    1df6:	68a2      	ldr	r2, [r4, #8]
    1df8:	4452      	add	r2, sl
    1dfa:	60a2      	str	r2, [r4, #8]
		if (ept->trans_count < ept->trans_size) {
    1dfc:	4293      	cmp	r3, r2
    1dfe:	d9e6      	bls.n	1dce <_usb_d_dev_out_next+0xf2>
			trans_next = ept->trans_size - ept->trans_count;
    1e00:	b29b      	uxth	r3, r3
    1e02:	b291      	uxth	r1, r2
    1e04:	1a5b      	subs	r3, r3, r1
    1e06:	b29b      	uxth	r3, r3
			if (ept->flags.bits.use_cache) {
    1e08:	7ce1      	ldrb	r1, [r4, #19]
    1e0a:	0689      	lsls	r1, r1, #26
    1e0c:	d52d      	bpl.n	1e6a <_usb_d_dev_out_next+0x18e>
				if (trans_next > ept->size) {
    1e0e:	8a21      	ldrh	r1, [r4, #16]
    1e10:	428b      	cmp	r3, r1
    1e12:	d800      	bhi.n	1e16 <_usb_d_dev_out_next+0x13a>
			trans_next = ept->trans_size - ept->trans_count;
    1e14:	0019      	movs	r1, r3
				_usbd_ep_set_buf(epn, 0, (uint32_t)ept->cache);
    1e16:	68e0      	ldr	r0, [r4, #12]
	bank->ADDR.reg          = addr;
    1e18:	016b      	lsls	r3, r5, #5
    1e1a:	4a29      	ldr	r2, [pc, #164]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1e1c:	5098      	str	r0, [r3, r2]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = size;
    1e1e:	016b      	lsls	r3, r5, #5
    1e20:	4827      	ldr	r0, [pc, #156]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1e22:	18c0      	adds	r0, r0, r3
    1e24:	6842      	ldr	r2, [r0, #4]
    1e26:	048b      	lsls	r3, r1, #18
    1e28:	091b      	lsrs	r3, r3, #4
    1e2a:	4929      	ldr	r1, [pc, #164]	; (1ed0 <_usb_d_dev_out_next+0x1f4>)
    1e2c:	400a      	ands	r2, r1
    1e2e:	4313      	orrs	r3, r2
    1e30:	6043      	str	r3, [r0, #4]
	bank->PCKSIZE.bit.BYTE_COUNT = count;
    1e32:	6843      	ldr	r3, [r0, #4]
    1e34:	0b9b      	lsrs	r3, r3, #14
    1e36:	039a      	lsls	r2, r3, #14
    1e38:	6042      	str	r2, [r0, #4]
	if (!isr) {
    1e3a:	2f00      	cmp	r7, #0
    1e3c:	d108      	bne.n	1e50 <_usb_d_dev_out_next+0x174>
		if (is_ctrl) {
    1e3e:	464b      	mov	r3, r9
    1e40:	2b01      	cmp	r3, #1
    1e42:	d035      	beq.n	1eb0 <_usb_d_dev_out_next+0x1d4>
			inten = USB_D_BANK0_INT_FLAGS;
    1e44:	2225      	movs	r2, #37	; 0x25
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    1e46:	016b      	lsls	r3, r5, #5
    1e48:	4924      	ldr	r1, [pc, #144]	; (1edc <_usb_d_dev_out_next+0x200>)
    1e4a:	468c      	mov	ip, r1
    1e4c:	4463      	add	r3, ip
    1e4e:	701a      	strb	r2, [r3, #0]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    1e50:	3508      	adds	r5, #8
    1e52:	016d      	lsls	r5, r5, #5
    1e54:	4b1c      	ldr	r3, [pc, #112]	; (1ec8 <_usb_d_dev_out_next+0x1ec>)
    1e56:	469c      	mov	ip, r3
    1e58:	4465      	add	r5, ip
    1e5a:	2340      	movs	r3, #64	; 0x40
    1e5c:	712b      	strb	r3, [r5, #4]
}
    1e5e:	bc3c      	pop	{r2, r3, r4, r5}
    1e60:	4690      	mov	r8, r2
    1e62:	4699      	mov	r9, r3
    1e64:	46a2      	mov	sl, r4
    1e66:	46ab      	mov	fp, r5
    1e68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if (trans_next > ept->size) {
    1e6a:	8a21      	ldrh	r1, [r4, #16]
    1e6c:	428b      	cmp	r3, r1
    1e6e:	d90b      	bls.n	1e88 <_usb_d_dev_out_next+0x1ac>
					if (trans_next > USB_D_DEV_TRANS_MAX) {
    1e70:	2180      	movs	r1, #128	; 0x80
    1e72:	0189      	lsls	r1, r1, #6
    1e74:	428b      	cmp	r3, r1
    1e76:	d80f      	bhi.n	1e98 <_usb_d_dev_out_next+0x1bc>
    1e78:	43b3      	bics	r3, r6
    1e7a:	0019      	movs	r1, r3
				_usbd_ep_set_buf(epn, 0, (uint32_t)&ept->trans_buf[ept->trans_count]);
    1e7c:	6823      	ldr	r3, [r4, #0]
    1e7e:	189a      	adds	r2, r3, r2
	bank->ADDR.reg          = addr;
    1e80:	016b      	lsls	r3, r5, #5
    1e82:	480f      	ldr	r0, [pc, #60]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1e84:	501a      	str	r2, [r3, r0]
    1e86:	e7ca      	b.n	1e1e <_usb_d_dev_out_next+0x142>
				} else if (trans_next < ept->size) {
    1e88:	428b      	cmp	r3, r1
    1e8a:	d208      	bcs.n	1e9e <_usb_d_dev_out_next+0x1c2>
					ept->flags.bits.use_cache = 1;
    1e8c:	7ce1      	ldrb	r1, [r4, #19]
    1e8e:	2020      	movs	r0, #32
    1e90:	4301      	orrs	r1, r0
    1e92:	74e1      	strb	r1, [r4, #19]
			trans_next = ept->trans_size - ept->trans_count;
    1e94:	0019      	movs	r1, r3
    1e96:	e7f1      	b.n	1e7c <_usb_d_dev_out_next+0x1a0>
						trans_next = USB_D_DEV_TRANS_MAX;
    1e98:	2180      	movs	r1, #128	; 0x80
    1e9a:	0189      	lsls	r1, r1, #6
    1e9c:	e7ee      	b.n	1e7c <_usb_d_dev_out_next+0x1a0>
			trans_next = ept->trans_size - ept->trans_count;
    1e9e:	0019      	movs	r1, r3
    1ea0:	e7ec      	b.n	1e7c <_usb_d_dev_out_next+0x1a0>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1ea2:	016b      	lsls	r3, r5, #5
    1ea4:	4a0b      	ldr	r2, [pc, #44]	; (1ed4 <_usb_d_dev_out_next+0x1f8>)
    1ea6:	4694      	mov	ip, r2
    1ea8:	4463      	add	r3, ip
    1eaa:	222d      	movs	r2, #45	; 0x2d
    1eac:	701a      	strb	r2, [r3, #0]
    1eae:	e797      	b.n	1de0 <_usb_d_dev_out_next+0x104>
	bank->STATUS_BK.reg     = 0;
    1eb0:	016a      	lsls	r2, r5, #5
    1eb2:	4b03      	ldr	r3, [pc, #12]	; (1ec0 <_usb_d_dev_out_next+0x1e4>)
    1eb4:	189b      	adds	r3, r3, r2
    1eb6:	2200      	movs	r2, #0
    1eb8:	769a      	strb	r2, [r3, #26]
			inten = USB_D_BANK0_INT_FLAGS | USB_DEVICE_EPINTFLAG_TRFAIL1;
    1eba:	322d      	adds	r2, #45	; 0x2d
    1ebc:	e7c3      	b.n	1e46 <_usb_d_dev_out_next+0x16a>
    1ebe:	46c0      	nop			; (mov r8, r8)
    1ec0:	20000300 	.word	0x20000300
    1ec4:	000003ff 	.word	0x000003ff
    1ec8:	41005000 	.word	0x41005000
    1ecc:	00005e65 	.word	0x00005e65
    1ed0:	f0003fff 	.word	0xf0003fff
    1ed4:	41005108 	.word	0x41005108
    1ed8:	00001949 	.word	0x00001949
    1edc:	41005109 	.word	0x41005109

00001ee0 <_usb_d_dev_handler>:
{
    1ee0:	b570      	push	{r4, r5, r6, lr}
	uint16_t epint = hw->DEVICE.EPINTSMRY.reg;
    1ee2:	4b89      	ldr	r3, [pc, #548]	; (2108 <STACK_SIZE+0x108>)
    1ee4:	8c1d      	ldrh	r5, [r3, #32]
    1ee6:	b2ad      	uxth	r5, r5
	if (0 == epint) {
    1ee8:	2d00      	cmp	r5, #0
    1eea:	d001      	beq.n	1ef0 <_usb_d_dev_handler+0x10>
	bool     rc    = true;
    1eec:	2400      	movs	r4, #0
    1eee:	e0bf      	b.n	2070 <STACK_SIZE+0x70>
	return tmp;
}

static inline hri_usbdevice_intflag_reg_t hri_usbdevice_read_INTFLAG_reg(const void *const hw)
{
	return ((Usb *)hw)->DEVICE.INTFLAG.reg;
    1ef0:	8b99      	ldrh	r1, [r3, #28]
	return tmp;
}

static inline hri_usbdevice_intenset_reg_t hri_usbdevice_read_INTEN_reg(const void *const hw)
{
	return ((Usb *)hw)->DEVICE.INTENSET.reg;
    1ef2:	8b1b      	ldrh	r3, [r3, #24]
	flags &= hri_usbdevice_read_INTEN_reg(USB);
    1ef4:	400b      	ands	r3, r1
	if (flags & USB_DEVICE_INTFLAG_SOF) {
    1ef6:	075a      	lsls	r2, r3, #29
    1ef8:	d40d      	bmi.n	1f16 <_usb_d_dev_handler+0x36>
	if (flags & USB_DEVICE_INTFLAG_LPMSUSP) {
    1efa:	059a      	lsls	r2, r3, #22
    1efc:	d415      	bmi.n	1f2a <_usb_d_dev_handler+0x4a>
	} else if (flags & USB_DEVICE_INTFLAG_RAMACER) {
    1efe:	061a      	lsls	r2, r3, #24
    1f00:	d437      	bmi.n	1f72 <_usb_d_dev_handler+0x92>
	} else if (flags & USB_D_WAKEUP_INT_FLAGS) {
    1f02:	2270      	movs	r2, #112	; 0x70
    1f04:	421a      	tst	r2, r3
    1f06:	d13e      	bne.n	1f86 <_usb_d_dev_handler+0xa6>
	} else if (flags & USB_DEVICE_INTFLAG_EORST) {
    1f08:	071a      	lsls	r2, r3, #28
    1f0a:	d457      	bmi.n	1fbc <_usb_d_dev_handler+0xdc>
	} else if (flags & USB_DEVICE_INTFLAG_SUSPEND) {
    1f0c:	07db      	lsls	r3, r3, #31
    1f0e:	d500      	bpl.n	1f12 <_usb_d_dev_handler+0x32>
    1f10:	e068      	b.n	1fe4 <_usb_d_dev_handler+0x104>
		rc = false;
    1f12:	2300      	movs	r3, #0
    1f14:	e006      	b.n	1f24 <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    1f16:	2204      	movs	r2, #4
    1f18:	4b7b      	ldr	r3, [pc, #492]	; (2108 <STACK_SIZE+0x108>)
    1f1a:	839a      	strh	r2, [r3, #28]
	dev_inst.callbacks.sof();
    1f1c:	4b7b      	ldr	r3, [pc, #492]	; (210c <STACK_SIZE+0x10c>)
    1f1e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    1f20:	4798      	blx	r3
		return true;
    1f22:	2301      	movs	r3, #1
		if (_usb_d_dev_handle_nep()) {
    1f24:	2b00      	cmp	r3, #0
    1f26:	d0e1      	beq.n	1eec <_usb_d_dev_handler+0xc>
}
    1f28:	bd70      	pop	{r4, r5, r6, pc}
    1f2a:	4b77      	ldr	r3, [pc, #476]	; (2108 <STACK_SIZE+0x108>)
    1f2c:	4a78      	ldr	r2, [pc, #480]	; (2110 <STACK_SIZE+0x110>)
    1f2e:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = ~data;
}

static inline void hri_usbdevice_clear_INTEN_reg(const void *const hw, hri_usbdevice_intenset_reg_t mask)
{
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    1f30:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    1f32:	3a92      	subs	r2, #146	; 0x92
    1f34:	3aff      	subs	r2, #255	; 0xff
    1f36:	831a      	strh	r2, [r3, #24]
	for (i = 0; i < CONF_USB_D_MAX_EP_N; i++) {
    1f38:	2300      	movs	r3, #0
    1f3a:	2b01      	cmp	r3, #1
    1f3c:	d812      	bhi.n	1f64 <_usb_d_dev_handler+0x84>
		if (bank->EXTREG.bit.SUBPID == 0x3) {
    1f3e:	0158      	lsls	r0, r3, #5
    1f40:	4a72      	ldr	r2, [pc, #456]	; (210c <STACK_SIZE+0x10c>)
    1f42:	1812      	adds	r2, r2, r0
    1f44:	8912      	ldrh	r2, [r2, #8]
    1f46:	0712      	lsls	r2, r2, #28
    1f48:	0f12      	lsrs	r2, r2, #28
    1f4a:	2a03      	cmp	r2, #3
    1f4c:	d002      	beq.n	1f54 <_usb_d_dev_handler+0x74>
	for (i = 0; i < CONF_USB_D_MAX_EP_N; i++) {
    1f4e:	3301      	adds	r3, #1
    1f50:	b2db      	uxtb	r3, r3
    1f52:	e7f2      	b.n	1f3a <_usb_d_dev_handler+0x5a>
			lpm_variable = bank->EXTREG.bit.VARIABLE;
    1f54:	4b6d      	ldr	r3, [pc, #436]	; (210c <STACK_SIZE+0x10c>)
    1f56:	181b      	adds	r3, r3, r0
    1f58:	8919      	ldrh	r1, [r3, #8]
    1f5a:	0449      	lsls	r1, r1, #17
    1f5c:	0d49      	lsrs	r1, r1, #21
			bank->EXTREG.reg = 0;
    1f5e:	2200      	movs	r2, #0
    1f60:	811a      	strh	r2, [r3, #8]
    1f62:	e000      	b.n	1f66 <_usb_d_dev_handler+0x86>
	uint32_t lpm_variable = 0;
    1f64:	2100      	movs	r1, #0
	dev_inst.callbacks.event(USB_EV_LPM_SUSPEND, lpm_variable);
    1f66:	4b69      	ldr	r3, [pc, #420]	; (210c <STACK_SIZE+0x10c>)
    1f68:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    1f6a:	2003      	movs	r0, #3
    1f6c:	4798      	blx	r3
	bool     rc    = true;
    1f6e:	2301      	movs	r3, #1
    1f70:	e7d8      	b.n	1f24 <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    1f72:	2280      	movs	r2, #128	; 0x80
    1f74:	4b64      	ldr	r3, [pc, #400]	; (2108 <STACK_SIZE+0x108>)
    1f76:	839a      	strh	r2, [r3, #28]
	dev_inst.callbacks.event(USB_EV_ERROR, 0);
    1f78:	4b64      	ldr	r3, [pc, #400]	; (210c <STACK_SIZE+0x10c>)
    1f7a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    1f7c:	2100      	movs	r1, #0
    1f7e:	2005      	movs	r0, #5
    1f80:	4798      	blx	r3
	bool     rc    = true;
    1f82:	2301      	movs	r3, #1
    1f84:	e7ce      	b.n	1f24 <_usb_d_dev_handler+0x44>
    1f86:	4b60      	ldr	r3, [pc, #384]	; (2108 <STACK_SIZE+0x108>)
    1f88:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    1f8a:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    1f8c:	4a60      	ldr	r2, [pc, #384]	; (2110 <STACK_SIZE+0x110>)
    1f8e:	831a      	strh	r2, [r3, #24]
	if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    1f90:	4b60      	ldr	r3, [pc, #384]	; (2114 <STACK_SIZE+0x114>)
    1f92:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    1f94:	069b      	lsls	r3, r3, #26
    1f96:	d40c      	bmi.n	1fb2 <_usb_d_dev_handler+0xd2>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    1f98:	4b5e      	ldr	r3, [pc, #376]	; (2114 <STACK_SIZE+0x114>)
    1f9a:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    1f9c:	23d0      	movs	r3, #208	; 0xd0
    1f9e:	4013      	ands	r3, r2
		while (hri_sysctrl_get_PCLKSR_reg(SYSCTRL, DFLL_READY_FLAG) != DFLL_READY_FLAG)
    1fa0:	2bd0      	cmp	r3, #208	; 0xd0
    1fa2:	d1f9      	bne.n	1f98 <_usb_d_dev_handler+0xb8>
	dev_inst.callbacks.event(USB_EV_WAKEUP, 0);
    1fa4:	4b59      	ldr	r3, [pc, #356]	; (210c <STACK_SIZE+0x10c>)
    1fa6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    1fa8:	2100      	movs	r1, #0
    1faa:	2002      	movs	r0, #2
    1fac:	4798      	blx	r3
	bool     rc    = true;
    1fae:	2301      	movs	r3, #1
    1fb0:	e7b8      	b.n	1f24 <_usb_d_dev_handler+0x44>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    1fb2:	4b58      	ldr	r3, [pc, #352]	; (2114 <STACK_SIZE+0x114>)
    1fb4:	68db      	ldr	r3, [r3, #12]
		while (hri_sysctrl_get_PCLKSR_reg(SYSCTRL, SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY)
    1fb6:	06db      	lsls	r3, r3, #27
    1fb8:	d5fb      	bpl.n	1fb2 <_usb_d_dev_handler+0xd2>
    1fba:	e7f3      	b.n	1fa4 <_usb_d_dev_handler+0xc4>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg = data;
    1fbc:	4b52      	ldr	r3, [pc, #328]	; (2108 <STACK_SIZE+0x108>)
    1fbe:	2100      	movs	r1, #0
    1fc0:	2280      	movs	r2, #128	; 0x80
    1fc2:	0052      	lsls	r2, r2, #1
    1fc4:	5499      	strb	r1, [r3, r2]
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    1fc6:	3af8      	subs	r2, #248	; 0xf8
    1fc8:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    1fca:	3268      	adds	r2, #104	; 0x68
    1fcc:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    1fce:	4a50      	ldr	r2, [pc, #320]	; (2110 <STACK_SIZE+0x110>)
    1fd0:	831a      	strh	r2, [r3, #24]
	_usb_d_dev_reset_epts();
    1fd2:	4b51      	ldr	r3, [pc, #324]	; (2118 <STACK_SIZE+0x118>)
    1fd4:	4798      	blx	r3
	dev_inst.callbacks.event(USB_EV_RESET, 0);
    1fd6:	4b4d      	ldr	r3, [pc, #308]	; (210c <STACK_SIZE+0x10c>)
    1fd8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    1fda:	2100      	movs	r1, #0
    1fdc:	2001      	movs	r0, #1
    1fde:	4798      	blx	r3
	bool     rc    = true;
    1fe0:	2301      	movs	r3, #1
    1fe2:	e79f      	b.n	1f24 <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    1fe4:	4b48      	ldr	r3, [pc, #288]	; (2108 <STACK_SIZE+0x108>)
    1fe6:	4a4a      	ldr	r2, [pc, #296]	; (2110 <STACK_SIZE+0x110>)
    1fe8:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    1fea:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    1fec:	3a92      	subs	r2, #146	; 0x92
    1fee:	3aff      	subs	r2, #255	; 0xff
    1ff0:	831a      	strh	r2, [r3, #24]
	dev_inst.callbacks.event(USB_EV_SUSPEND, 0);
    1ff2:	4b46      	ldr	r3, [pc, #280]	; (210c <STACK_SIZE+0x10c>)
    1ff4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    1ff6:	2100      	movs	r1, #0
    1ff8:	2004      	movs	r0, #4
    1ffa:	4798      	blx	r3
	bool     rc    = true;
    1ffc:	2301      	movs	r3, #1
    1ffe:	e791      	b.n	1f24 <_usb_d_dev_handler+0x44>
	if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    2000:	06da      	lsls	r2, r3, #27
    2002:	d407      	bmi.n	2014 <STACK_SIZE+0x14>
	} else if (flags & USB_DEVICE_EPINTFLAG_STALL1) {
    2004:	065a      	lsls	r2, r3, #25
    2006:	d408      	bmi.n	201a <STACK_SIZE+0x1a>
	} else if (flags & USB_DEVICE_EPINTFLAG_STALL0) {
    2008:	069b      	lsls	r3, r3, #26
    200a:	d52f      	bpl.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_handle_stall(ept, 0);
    200c:	2100      	movs	r1, #0
    200e:	4b43      	ldr	r3, [pc, #268]	; (211c <STACK_SIZE+0x11c>)
    2010:	4798      	blx	r3
    2012:	e02b      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_handle_setup(ept);
    2014:	4b42      	ldr	r3, [pc, #264]	; (2120 <STACK_SIZE+0x120>)
    2016:	4798      	blx	r3
    2018:	e028      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_handle_stall(ept, 1);
    201a:	2101      	movs	r1, #1
    201c:	4b3f      	ldr	r3, [pc, #252]	; (211c <STACK_SIZE+0x11c>)
    201e:	4798      	blx	r3
    2020:	e024      	b.n	206c <STACK_SIZE+0x6c>
	if (flags & USB_DEVICE_EPINTFLAG_STALL1) {
    2022:	065a      	lsls	r2, r3, #25
    2024:	d40f      	bmi.n	2046 <STACK_SIZE+0x46>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRFAIL1) {
    2026:	071a      	lsls	r2, r3, #28
    2028:	d411      	bmi.n	204e <STACK_SIZE+0x4e>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRCPT1) {
    202a:	079a      	lsls	r2, r3, #30
    202c:	d413      	bmi.n	2056 <STACK_SIZE+0x56>
	} else if (_usb_d_dev_ep_is_ctrl(ept)) {
    202e:	7cc1      	ldrb	r1, [r0, #19]
    2030:	2207      	movs	r2, #7
    2032:	400a      	ands	r2, r1
    2034:	2a01      	cmp	r2, #1
    2036:	d119      	bne.n	206c <STACK_SIZE+0x6c>
		if (flags & USB_DEVICE_EPINTFLAG_TRFAIL0) {
    2038:	075a      	lsls	r2, r3, #29
    203a:	d410      	bmi.n	205e <STACK_SIZE+0x5e>
		} else if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    203c:	06db      	lsls	r3, r3, #27
    203e:	d515      	bpl.n	206c <STACK_SIZE+0x6c>
			_usb_d_dev_handle_setup(ept);
    2040:	4b37      	ldr	r3, [pc, #220]	; (2120 <STACK_SIZE+0x120>)
    2042:	4798      	blx	r3
    2044:	e012      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_handle_stall(ept, 1);
    2046:	2101      	movs	r1, #1
    2048:	4b34      	ldr	r3, [pc, #208]	; (211c <STACK_SIZE+0x11c>)
    204a:	4798      	blx	r3
    204c:	e00e      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_handle_trfail(ept, 1);
    204e:	2101      	movs	r1, #1
    2050:	4b34      	ldr	r3, [pc, #208]	; (2124 <STACK_SIZE+0x124>)
    2052:	4798      	blx	r3
    2054:	e00a      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_in_next(ept, true);
    2056:	2101      	movs	r1, #1
    2058:	4b33      	ldr	r3, [pc, #204]	; (2128 <STACK_SIZE+0x128>)
    205a:	4798      	blx	r3
    205c:	e006      	b.n	206c <STACK_SIZE+0x6c>
			_usb_d_dev_handle_trfail(ept, 0);
    205e:	2100      	movs	r1, #0
    2060:	4b30      	ldr	r3, [pc, #192]	; (2124 <STACK_SIZE+0x124>)
    2062:	4798      	blx	r3
    2064:	e002      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_handle_stall(ept, 0);
    2066:	2100      	movs	r1, #0
    2068:	4b2c      	ldr	r3, [pc, #176]	; (211c <STACK_SIZE+0x11c>)
    206a:	4798      	blx	r3
	for (i = 0; i < USB_D_N_EP; i++) {
    206c:	3401      	adds	r4, #1
    206e:	b2e4      	uxtb	r4, r4
    2070:	2c08      	cmp	r4, #8
    2072:	d900      	bls.n	2076 <STACK_SIZE+0x76>
    2074:	e758      	b.n	1f28 <_usb_d_dev_handler+0x48>
		struct _usb_d_dev_ep *ept = &dev_inst.ep[i];
    2076:	4b25      	ldr	r3, [pc, #148]	; (210c <STACK_SIZE+0x10c>)
    2078:	3360      	adds	r3, #96	; 0x60
    207a:	00a2      	lsls	r2, r4, #2
    207c:	1911      	adds	r1, r2, r4
    207e:	0088      	lsls	r0, r1, #2
    2080:	0001      	movs	r1, r0
    2082:	3010      	adds	r0, #16
    2084:	1818      	adds	r0, r3, r0
    2086:	3004      	adds	r0, #4
		if (ept->ep == 0xFF) {
    2088:	185b      	adds	r3, r3, r1
    208a:	3326      	adds	r3, #38	; 0x26
    208c:	781b      	ldrb	r3, [r3, #0]
    208e:	2bff      	cmp	r3, #255	; 0xff
    2090:	d0ec      	beq.n	206c <STACK_SIZE+0x6c>
	uint8_t epn = USB_EP_GET_N(ept->ep);
    2092:	7c82      	ldrb	r2, [r0, #18]
    2094:	230f      	movs	r3, #15
    2096:	4013      	ands	r3, r2
	if (!(epint & (1u << epn))) {
    2098:	2201      	movs	r2, #1
    209a:	409a      	lsls	r2, r3
    209c:	422a      	tst	r2, r5
    209e:	d0e5      	beq.n	206c <STACK_SIZE+0x6c>
	flags = hw->DEVICE.DeviceEndpoint[epn].EPINTFLAG.reg;
    20a0:	001a      	movs	r2, r3
    20a2:	3208      	adds	r2, #8
    20a4:	0152      	lsls	r2, r2, #5
    20a6:	4918      	ldr	r1, [pc, #96]	; (2108 <STACK_SIZE+0x108>)
    20a8:	468c      	mov	ip, r1
    20aa:	4462      	add	r2, ip
    20ac:	79d2      	ldrb	r2, [r2, #7]
	mask  = hw->DEVICE.DeviceEndpoint[epn].EPINTENSET.reg;
    20ae:	015b      	lsls	r3, r3, #5
    20b0:	491e      	ldr	r1, [pc, #120]	; (212c <STACK_SIZE+0x12c>)
    20b2:	468c      	mov	ip, r1
    20b4:	4463      	add	r3, ip
    20b6:	781b      	ldrb	r3, [r3, #0]
	flags &= mask;
    20b8:	4013      	ands	r3, r2
	if (flags) {
    20ba:	d0d7      	beq.n	206c <STACK_SIZE+0x6c>
		if ((ept->flags.bits.eptype == 0x1) && !_usb_d_dev_ep_is_busy(ept)) {
    20bc:	7cc2      	ldrb	r2, [r0, #19]
    20be:	2147      	movs	r1, #71	; 0x47
    20c0:	4011      	ands	r1, r2
    20c2:	2901      	cmp	r1, #1
    20c4:	d09c      	beq.n	2000 <STACK_SIZE>
		} else if (_usb_d_dev_ep_is_in(ept)) {
    20c6:	b252      	sxtb	r2, r2
    20c8:	2a00      	cmp	r2, #0
    20ca:	dbaa      	blt.n	2022 <STACK_SIZE+0x22>
	if (flags & USB_DEVICE_EPINTFLAG_STALL0) {
    20cc:	069a      	lsls	r2, r3, #26
    20ce:	d4ca      	bmi.n	2066 <STACK_SIZE+0x66>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRFAIL0) {
    20d0:	075a      	lsls	r2, r3, #29
    20d2:	d40d      	bmi.n	20f0 <STACK_SIZE+0xf0>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRCPT0) {
    20d4:	07da      	lsls	r2, r3, #31
    20d6:	d40f      	bmi.n	20f8 <STACK_SIZE+0xf8>
	} else if (_usb_d_dev_ep_is_ctrl(ept)) {
    20d8:	7cc1      	ldrb	r1, [r0, #19]
    20da:	2207      	movs	r2, #7
    20dc:	400a      	ands	r2, r1
    20de:	2a01      	cmp	r2, #1
    20e0:	d1c4      	bne.n	206c <STACK_SIZE+0x6c>
		if (flags & USB_DEVICE_EPINTFLAG_TRFAIL1) {
    20e2:	071a      	lsls	r2, r3, #28
    20e4:	d40c      	bmi.n	2100 <STACK_SIZE+0x100>
		} else if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    20e6:	06db      	lsls	r3, r3, #27
    20e8:	d5c0      	bpl.n	206c <STACK_SIZE+0x6c>
			_usb_d_dev_handle_setup(ept);
    20ea:	4b0d      	ldr	r3, [pc, #52]	; (2120 <STACK_SIZE+0x120>)
    20ec:	4798      	blx	r3
    20ee:	e7bd      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_handle_trfail(ept, 0);
    20f0:	2100      	movs	r1, #0
    20f2:	4b0c      	ldr	r3, [pc, #48]	; (2124 <STACK_SIZE+0x124>)
    20f4:	4798      	blx	r3
    20f6:	e7b9      	b.n	206c <STACK_SIZE+0x6c>
		_usb_d_dev_out_next(ept, true);
    20f8:	2101      	movs	r1, #1
    20fa:	4b0d      	ldr	r3, [pc, #52]	; (2130 <STACK_SIZE+0x130>)
    20fc:	4798      	blx	r3
    20fe:	e7b5      	b.n	206c <STACK_SIZE+0x6c>
			_usb_d_dev_handle_trfail(ept, 1);
    2100:	2101      	movs	r1, #1
    2102:	4b08      	ldr	r3, [pc, #32]	; (2124 <STACK_SIZE+0x124>)
    2104:	4798      	blx	r3
    2106:	e7b1      	b.n	206c <STACK_SIZE+0x6c>
    2108:	41005000 	.word	0x41005000
    210c:	20000300 	.word	0x20000300
    2110:	00000201 	.word	0x00000201
    2114:	40000800 	.word	0x40000800
    2118:	00001afd 	.word	0x00001afd
    211c:	00001919 	.word	0x00001919
    2120:	0000188d 	.word	0x0000188d
    2124:	000019ed 	.word	0x000019ed
    2128:	00001b51 	.word	0x00001b51
    212c:	41005109 	.word	0x41005109
    2130:	00001cdd 	.word	0x00001cdd

00002134 <_usb_d_dev_init>:
{
    2134:	b500      	push	{lr}
    2136:	b083      	sub	sp, #12
	const uint8_t spdconf[4] = {
    2138:	2200      	movs	r2, #0
    213a:	ab01      	add	r3, sp, #4
    213c:	705a      	strb	r2, [r3, #1]
	return ((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg;
    213e:	4b21      	ldr	r3, [pc, #132]	; (21c4 <_usb_d_dev_init+0x90>)
    2140:	789b      	ldrb	r3, [r3, #2]
	if (!hri_usbdevice_is_syncing(hw, USB_SYNCBUSY_SWRST)) {
    2142:	07db      	lsls	r3, r3, #31
    2144:	d41b      	bmi.n	217e <_usb_d_dev_init+0x4a>
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    2146:	4b1f      	ldr	r3, [pc, #124]	; (21c4 <_usb_d_dev_init+0x90>)
    2148:	789b      	ldrb	r3, [r3, #2]
    214a:	079b      	lsls	r3, r3, #30
    214c:	d1fb      	bne.n	2146 <_usb_d_dev_init+0x12>

static inline hri_usb_ctrla_reg_t hri_usb_get_CTRLA_reg(const void *const hw, hri_usb_ctrla_reg_t mask)
{
	uint8_t tmp;
	hri_usb_wait_for_sync(hw, USB_SYNCBUSY_MASK);
	tmp = ((Usb *)hw)->HOST.CTRLA.reg;
    214e:	4b1d      	ldr	r3, [pc, #116]	; (21c4 <_usb_d_dev_init+0x90>)
    2150:	781b      	ldrb	r3, [r3, #0]
		if (hri_usbdevice_get_CTRLA_reg(hw, USB_CTRLA_ENABLE)) {
    2152:	079b      	lsls	r3, r3, #30
    2154:	d50c      	bpl.n	2170 <_usb_d_dev_init+0x3c>
	((Usb *)hw)->HOST.CTRLA.reg &= ~USB_CTRLA_ENABLE;
    2156:	4a1b      	ldr	r2, [pc, #108]	; (21c4 <_usb_d_dev_init+0x90>)
    2158:	7813      	ldrb	r3, [r2, #0]
    215a:	2102      	movs	r1, #2
    215c:	438b      	bics	r3, r1
    215e:	7013      	strb	r3, [r2, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    2160:	4b18      	ldr	r3, [pc, #96]	; (21c4 <_usb_d_dev_init+0x90>)
    2162:	789b      	ldrb	r3, [r3, #2]
    2164:	079b      	lsls	r3, r3, #30
    2166:	d1fb      	bne.n	2160 <_usb_d_dev_init+0x2c>
    2168:	4b16      	ldr	r3, [pc, #88]	; (21c4 <_usb_d_dev_init+0x90>)
    216a:	789b      	ldrb	r3, [r3, #2]
    216c:	079b      	lsls	r3, r3, #30
    216e:	d4fb      	bmi.n	2168 <_usb_d_dev_init+0x34>
}

static inline void hri_usb_write_CTRLA_reg(const void *const hw, hri_usb_ctrla_reg_t data)
{
	USB_CRITICAL_SECTION_ENTER();
	((Usb *)hw)->HOST.CTRLA.reg = data;
    2170:	2201      	movs	r2, #1
    2172:	4b14      	ldr	r3, [pc, #80]	; (21c4 <_usb_d_dev_init+0x90>)
    2174:	701a      	strb	r2, [r3, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    2176:	4b13      	ldr	r3, [pc, #76]	; (21c4 <_usb_d_dev_init+0x90>)
    2178:	789b      	ldrb	r3, [r3, #2]
    217a:	079b      	lsls	r3, r3, #30
    217c:	d1fb      	bne.n	2176 <_usb_d_dev_init+0x42>
    217e:	4b11      	ldr	r3, [pc, #68]	; (21c4 <_usb_d_dev_init+0x90>)
    2180:	789b      	ldrb	r3, [r3, #2]
    2182:	07db      	lsls	r3, r3, #31
    2184:	d4fb      	bmi.n	217e <_usb_d_dev_init+0x4a>
	dev_inst.callbacks.sof   = (_usb_d_dev_sof_cb_t)_dummy_func_no_return;
    2186:	4b10      	ldr	r3, [pc, #64]	; (21c8 <_usb_d_dev_init+0x94>)
    2188:	4a10      	ldr	r2, [pc, #64]	; (21cc <_usb_d_dev_init+0x98>)
    218a:	661a      	str	r2, [r3, #96]	; 0x60
	dev_inst.callbacks.event = (_usb_d_dev_event_cb_t)_dummy_func_no_return;
    218c:	665a      	str	r2, [r3, #100]	; 0x64
	dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)_dummy_func_no_return;
    218e:	669a      	str	r2, [r3, #104]	; 0x68
	dev_inst.ep_callbacks.more  = (_usb_d_dev_ep_cb_more_t)_dummy_func_no_return;
    2190:	66da      	str	r2, [r3, #108]	; 0x6c
	dev_inst.ep_callbacks.done  = (_usb_d_dev_ep_cb_done_t)_dummy_func_no_return;
    2192:	671a      	str	r2, [r3, #112]	; 0x70
	_usb_d_dev_reset_epts();
    2194:	4b0e      	ldr	r3, [pc, #56]	; (21d0 <_usb_d_dev_init+0x9c>)
    2196:	4798      	blx	r3
	_usb_load_calib();
    2198:	4b0e      	ldr	r3, [pc, #56]	; (21d4 <_usb_d_dev_init+0xa0>)
    219a:	4798      	blx	r3
	((Usb *)hw)->HOST.CTRLA.reg = data;
    219c:	2204      	movs	r2, #4
    219e:	4b09      	ldr	r3, [pc, #36]	; (21c4 <_usb_d_dev_init+0x90>)
    21a0:	701a      	strb	r2, [r3, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    21a2:	4b08      	ldr	r3, [pc, #32]	; (21c4 <_usb_d_dev_init+0x90>)
    21a4:	789b      	ldrb	r3, [r3, #2]
    21a6:	079b      	lsls	r3, r3, #30
    21a8:	d1fb      	bne.n	21a2 <_usb_d_dev_init+0x6e>
}

static inline void hri_usb_write_DESCADD_reg(const void *const hw, hri_usb_descadd_reg_t data)
{
	USB_CRITICAL_SECTION_ENTER();
	((Usb *)hw)->HOST.DESCADD.reg = data;
    21aa:	4a06      	ldr	r2, [pc, #24]	; (21c4 <_usb_d_dev_init+0x90>)
    21ac:	4b06      	ldr	r3, [pc, #24]	; (21c8 <_usb_d_dev_init+0x94>)
    21ae:	6253      	str	r3, [r2, #36]	; 0x24
	hri_usbdevice_write_CTRLB_reg(hw, spdconf[speed] | USB_DEVICE_CTRLB_DETACH);
    21b0:	ab01      	add	r3, sp, #4
    21b2:	785b      	ldrb	r3, [r3, #1]
    21b4:	2101      	movs	r1, #1
    21b6:	430b      	orrs	r3, r1
    21b8:	b2db      	uxtb	r3, r3
	((Usb *)hw)->DEVICE.CTRLB.reg = data;
    21ba:	8113      	strh	r3, [r2, #8]
}
    21bc:	2000      	movs	r0, #0
    21be:	b003      	add	sp, #12
    21c0:	bd00      	pop	{pc}
    21c2:	46c0      	nop			; (mov r8, r8)
    21c4:	41005000 	.word	0x41005000
    21c8:	20000300 	.word	0x20000300
    21cc:	00001835 	.word	0x00001835
    21d0:	00001afd 	.word	0x00001afd
    21d4:	00001839 	.word	0x00001839

000021d8 <_usb_d_dev_ep_stall>:
{
    21d8:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t               epn = USB_EP_GET_N(ep);
    21da:	220f      	movs	r2, #15
    21dc:	4002      	ands	r2, r0
    21de:	b240      	sxtb	r0, r0
	bool                  dir = USB_EP_GET_DIR(ep);
    21e0:	0fc4      	lsrs	r4, r0, #31
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    21e2:	2a00      	cmp	r2, #0
    21e4:	d005      	beq.n	21f2 <_usb_d_dev_ep_stall+0x1a>
    21e6:	2800      	cmp	r0, #0
    21e8:	db01      	blt.n	21ee <_usb_d_dev_ep_stall+0x16>
    21ea:	0013      	movs	r3, r2
    21ec:	e002      	b.n	21f4 <_usb_d_dev_ep_stall+0x1c>
    21ee:	1c93      	adds	r3, r2, #2
    21f0:	e000      	b.n	21f4 <_usb_d_dev_ep_stall+0x1c>
    21f2:	0013      	movs	r3, r2
	return &dev_inst.ep[ep_index];
    21f4:	001d      	movs	r5, r3
    21f6:	0098      	lsls	r0, r3, #2
    21f8:	18c0      	adds	r0, r0, r3
    21fa:	0083      	lsls	r3, r0, #2
    21fc:	3310      	adds	r3, #16
    21fe:	0018      	movs	r0, r3
    2200:	4b47      	ldr	r3, [pc, #284]	; (2320 <_usb_d_dev_ep_stall+0x148>)
    2202:	3360      	adds	r3, #96	; 0x60
    2204:	181b      	adds	r3, r3, r0
    2206:	3304      	adds	r3, #4
	if (epn > CONF_USB_D_MAX_EP_N) {
    2208:	2a02      	cmp	r2, #2
    220a:	d900      	bls.n	220e <_usb_d_dev_ep_stall+0x36>
    220c:	e084      	b.n	2318 <_usb_d_dev_ep_stall+0x140>
	if (USB_EP_STALL_SET == ctrl) {
    220e:	2901      	cmp	r1, #1
    2210:	d018      	beq.n	2244 <_usb_d_dev_ep_stall+0x6c>
	} else if (USB_EP_STALL_CLR == ctrl) {
    2212:	2900      	cmp	r1, #0
    2214:	d03d      	beq.n	2292 <_usb_d_dev_ep_stall+0xba>
	uint8_t epn = USB_EP_GET_N(ept->ep);
    2216:	00aa      	lsls	r2, r5, #2
    2218:	1952      	adds	r2, r2, r5
    221a:	0091      	lsls	r1, r2, #2
    221c:	4b40      	ldr	r3, [pc, #256]	; (2320 <_usb_d_dev_ep_stall+0x148>)
    221e:	3360      	adds	r3, #96	; 0x60
    2220:	185b      	adds	r3, r3, r1
    2222:	3326      	adds	r3, #38	; 0x26
    2224:	781a      	ldrb	r2, [r3, #0]
    2226:	230f      	movs	r3, #15
    2228:	4013      	ands	r3, r2
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    222a:	3308      	adds	r3, #8
    222c:	015b      	lsls	r3, r3, #5
    222e:	4a3d      	ldr	r2, [pc, #244]	; (2324 <_usb_d_dev_ep_stall+0x14c>)
    2230:	4694      	mov	ip, r2
    2232:	4463      	add	r3, ip
    2234:	7998      	ldrb	r0, [r3, #6]
	return (hri_usbendpoint_read_EPSTATUS_reg(hw, epn) & (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    2236:	2310      	movs	r3, #16
    2238:	40a3      	lsls	r3, r4
    223a:	4018      	ands	r0, r3
    223c:	1e43      	subs	r3, r0, #1
    223e:	4198      	sbcs	r0, r3
    2240:	b2c0      	uxtb	r0, r0
}
    2242:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint8_t epn = USB_EP_GET_N(ept->ep);
    2244:	4836      	ldr	r0, [pc, #216]	; (2320 <_usb_d_dev_ep_stall+0x148>)
    2246:	0003      	movs	r3, r0
    2248:	3360      	adds	r3, #96	; 0x60
    224a:	00aa      	lsls	r2, r5, #2
    224c:	1956      	adds	r6, r2, r5
    224e:	00b1      	lsls	r1, r6, #2
    2250:	185b      	adds	r3, r3, r1
    2252:	3326      	adds	r3, #38	; 0x26
    2254:	781b      	ldrb	r3, [r3, #0]
    2256:	210f      	movs	r1, #15
    2258:	400b      	ands	r3, r1
		hri_usbendpoint_set_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    225a:	2610      	movs	r6, #16
    225c:	40a6      	lsls	r6, r4
    225e:	b2f6      	uxtb	r6, r6
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    2260:	0019      	movs	r1, r3
    2262:	3108      	adds	r1, #8
    2264:	0149      	lsls	r1, r1, #5
    2266:	4f2f      	ldr	r7, [pc, #188]	; (2324 <_usb_d_dev_ep_stall+0x14c>)
    2268:	46bc      	mov	ip, r7
    226a:	4461      	add	r1, ip
    226c:	714e      	strb	r6, [r1, #5]
	_usbd_ep_int_en(epn, USB_DEVICE_EPINTFLAG_STALL0 << dir);
    226e:	2120      	movs	r1, #32
    2270:	40a1      	lsls	r1, r4
	hri_usbendpoint_set_EPINTEN_reg(USB, epn, flags);
    2272:	b2cc      	uxtb	r4, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    2274:	0159      	lsls	r1, r3, #5
    2276:	4b2c      	ldr	r3, [pc, #176]	; (2328 <_usb_d_dev_ep_stall+0x150>)
    2278:	469c      	mov	ip, r3
    227a:	4461      	add	r1, ip
    227c:	700c      	strb	r4, [r1, #0]
	ept->flags.bits.is_stalled = 1;
    227e:	1952      	adds	r2, r2, r5
    2280:	0093      	lsls	r3, r2, #2
    2282:	18c3      	adds	r3, r0, r3
    2284:	3380      	adds	r3, #128	; 0x80
    2286:	79da      	ldrb	r2, [r3, #7]
    2288:	2108      	movs	r1, #8
    228a:	430a      	orrs	r2, r1
    228c:	71da      	strb	r2, [r3, #7]
		rc = _usb_d_dev_ep_stall_set(ept, dir);
    228e:	2000      	movs	r0, #0
    2290:	e7d7      	b.n	2242 <_usb_d_dev_ep_stall+0x6a>
	uint8_t epn        = USB_EP_GET_N(ept->ep);
    2292:	7c9a      	ldrb	r2, [r3, #18]
    2294:	310f      	adds	r1, #15
    2296:	400a      	ands	r2, r1
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    2298:	0011      	movs	r1, r2
    229a:	3108      	adds	r1, #8
    229c:	0149      	lsls	r1, r1, #5
    229e:	4821      	ldr	r0, [pc, #132]	; (2324 <_usb_d_dev_ep_stall+0x14c>)
    22a0:	4684      	mov	ip, r0
    22a2:	4461      	add	r1, ip
    22a4:	7988      	ldrb	r0, [r1, #6]
	return (hri_usbendpoint_read_EPSTATUS_reg(hw, epn) & (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    22a6:	2110      	movs	r1, #16
    22a8:	40a1      	lsls	r1, r4
	if (!is_stalled) {
    22aa:	4208      	tst	r0, r1
    22ac:	d024      	beq.n	22f8 <_usb_d_dev_ep_stall+0x120>
		hri_usbendpoint_clear_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    22ae:	b2c9      	uxtb	r1, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    22b0:	0010      	movs	r0, r2
    22b2:	3008      	adds	r0, #8
    22b4:	0140      	lsls	r0, r0, #5
    22b6:	4460      	add	r0, ip
    22b8:	7101      	strb	r1, [r0, #4]
	_usbd_ep_int_dis(epn, USB_DEVICE_EPINTFLAG_STALL0 << dir);
    22ba:	2120      	movs	r1, #32
    22bc:	40a1      	lsls	r1, r4
	hri_usbendpoint_clear_EPINTEN_reg(USB, epn, flags);
    22be:	b2ce      	uxtb	r6, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    22c0:	0155      	lsls	r5, r2, #5
    22c2:	4f1a      	ldr	r7, [pc, #104]	; (232c <_usb_d_dev_ep_stall+0x154>)
    22c4:	46bc      	mov	ip, r7
    22c6:	4465      	add	r5, ip
    22c8:	702e      	strb	r6, [r5, #0]
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg;
    22ca:	79c0      	ldrb	r0, [r0, #7]
	if (_usbd_ep_is_stall_sent(epn, dir)) {
    22cc:	4208      	tst	r0, r1
    22ce:	d00a      	beq.n	22e6 <_usb_d_dev_ep_stall+0x10e>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    22d0:	0011      	movs	r1, r2
    22d2:	3108      	adds	r1, #8
    22d4:	0149      	lsls	r1, r1, #5
    22d6:	4813      	ldr	r0, [pc, #76]	; (2324 <_usb_d_dev_ep_stall+0x14c>)
    22d8:	4684      	mov	ip, r0
    22da:	4461      	add	r1, ip
    22dc:	71ce      	strb	r6, [r1, #7]
		hri_usbendpoint_clear_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_DTGLOUT << bank_n));
    22de:	2001      	movs	r0, #1
    22e0:	40a0      	lsls	r0, r4
    22e2:	b2c0      	uxtb	r0, r0
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    22e4:	7108      	strb	r0, [r1, #4]
	if (_usb_d_dev_ep_is_ctrl(ept)) {
    22e6:	7cd8      	ldrb	r0, [r3, #19]
    22e8:	2107      	movs	r1, #7
    22ea:	4001      	ands	r1, r0
    22ec:	2901      	cmp	r1, #1
    22ee:	d005      	beq.n	22fc <_usb_d_dev_ep_stall+0x124>
		ept->flags.bits.is_stalled = 0;
    22f0:	7cda      	ldrb	r2, [r3, #19]
    22f2:	2108      	movs	r1, #8
    22f4:	438a      	bics	r2, r1
    22f6:	74da      	strb	r2, [r3, #19]
		rc = _usb_d_dev_ep_stall_clr(ept, dir);
    22f8:	2000      	movs	r0, #0
    22fa:	e7a2      	b.n	2242 <_usb_d_dev_ep_stall+0x6a>
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    22fc:	3208      	adds	r2, #8
    22fe:	0152      	lsls	r2, r2, #5
    2300:	4908      	ldr	r1, [pc, #32]	; (2324 <_usb_d_dev_ep_stall+0x14c>)
    2302:	468c      	mov	ip, r1
    2304:	4462      	add	r2, ip
    2306:	7991      	ldrb	r1, [r2, #6]
		if ((hri_usbendpoint_read_EPSTATUS_reg(USB, epn) & USB_DEVICE_EPSTATUS_STALLRQ_Msk) == 0) {
    2308:	2230      	movs	r2, #48	; 0x30
    230a:	4211      	tst	r1, r2
    230c:	d1f4      	bne.n	22f8 <_usb_d_dev_ep_stall+0x120>
			ept->flags.bits.is_stalled = 0;
    230e:	0002      	movs	r2, r0
    2310:	2108      	movs	r1, #8
    2312:	438a      	bics	r2, r1
    2314:	74da      	strb	r2, [r3, #19]
    2316:	e7ef      	b.n	22f8 <_usb_d_dev_ep_stall+0x120>
		return -USB_ERR_PARAM;
    2318:	2012      	movs	r0, #18
    231a:	4240      	negs	r0, r0
    231c:	e791      	b.n	2242 <_usb_d_dev_ep_stall+0x6a>
    231e:	46c0      	nop			; (mov r8, r8)
    2320:	20000300 	.word	0x20000300
    2324:	41005000 	.word	0x41005000
    2328:	41005109 	.word	0x41005109
    232c:	41005108 	.word	0x41005108

00002330 <_usb_d_dev_ep_read_req>:

int32_t _usb_d_dev_ep_read_req(const uint8_t ep, uint8_t *req_buf)
{
    2330:	b570      	push	{r4, r5, r6, lr}
    2332:	000e      	movs	r6, r1
	uint8_t            epn   = USB_EP_GET_N(ep);
    2334:	240f      	movs	r4, #15
    2336:	4004      	ands	r4, r0
	UsbDeviceDescBank *bank  = prvt_inst.desc_table[epn].DeviceDescBank;
    2338:	0162      	lsls	r2, r4, #5
    233a:	4b18      	ldr	r3, [pc, #96]	; (239c <_usb_d_dev_ep_read_req+0x6c>)
    233c:	189b      	adds	r3, r3, r2
	uint32_t           addr  = bank[0].ADDR.reg;
    233e:	6819      	ldr	r1, [r3, #0]
	uint16_t           bytes = bank[0].PCKSIZE.bit.BYTE_COUNT;
    2340:	685d      	ldr	r5, [r3, #4]
    2342:	04ad      	lsls	r5, r5, #18
    2344:	0cad      	lsrs	r5, r5, #18

	if (epn > CONF_USB_D_MAX_EP_N || !req_buf) {
    2346:	2c02      	cmp	r4, #2
    2348:	d81f      	bhi.n	238a <_usb_d_dev_ep_read_req+0x5a>
    234a:	2e00      	cmp	r6, #0
    234c:	d020      	beq.n	2390 <_usb_d_dev_ep_read_req+0x60>
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    234e:	0023      	movs	r3, r4
    2350:	3308      	adds	r3, #8
    2352:	015b      	lsls	r3, r3, #5
    2354:	4a12      	ldr	r2, [pc, #72]	; (23a0 <_usb_d_dev_ep_read_req+0x70>)
    2356:	5c9b      	ldrb	r3, [r3, r2]
		return -USB_ERR_PARAM;
	}
	if (!_usbd_ep_is_ctrl(epn)) {
    2358:	2b11      	cmp	r3, #17
    235a:	d11c      	bne.n	2396 <_usb_d_dev_ep_read_req+0x66>
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg;
    235c:	0023      	movs	r3, r4
    235e:	3308      	adds	r3, #8
    2360:	015b      	lsls	r3, r3, #5
    2362:	4694      	mov	ip, r2
    2364:	4463      	add	r3, ip
    2366:	79db      	ldrb	r3, [r3, #7]
		return -USB_ERR_FUNC;
	}
	if (!_usbd_ep_is_setup(epn)) {
    2368:	06db      	lsls	r3, r3, #27
    236a:	d401      	bmi.n	2370 <_usb_d_dev_ep_read_req+0x40>
		return ERR_NONE;
    236c:	2000      	movs	r0, #0
	}
	memcpy(req_buf, (void *)addr, 8);
	_usbd_ep_ack_setup(epn);

	return bytes;
}
    236e:	bd70      	pop	{r4, r5, r6, pc}
	memcpy(req_buf, (void *)addr, 8);
    2370:	2208      	movs	r2, #8
    2372:	0030      	movs	r0, r6
    2374:	4b0b      	ldr	r3, [pc, #44]	; (23a4 <_usb_d_dev_ep_read_req+0x74>)
    2376:	4798      	blx	r3
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2378:	3408      	adds	r4, #8
    237a:	0164      	lsls	r4, r4, #5
    237c:	4b08      	ldr	r3, [pc, #32]	; (23a0 <_usb_d_dev_ep_read_req+0x70>)
    237e:	469c      	mov	ip, r3
    2380:	4464      	add	r4, ip
    2382:	2310      	movs	r3, #16
    2384:	71e3      	strb	r3, [r4, #7]
	return bytes;
    2386:	0028      	movs	r0, r5
    2388:	e7f1      	b.n	236e <_usb_d_dev_ep_read_req+0x3e>
		return -USB_ERR_PARAM;
    238a:	2012      	movs	r0, #18
    238c:	4240      	negs	r0, r0
    238e:	e7ee      	b.n	236e <_usb_d_dev_ep_read_req+0x3e>
    2390:	2012      	movs	r0, #18
    2392:	4240      	negs	r0, r0
    2394:	e7eb      	b.n	236e <_usb_d_dev_ep_read_req+0x3e>
		return -USB_ERR_FUNC;
    2396:	2013      	movs	r0, #19
    2398:	4240      	negs	r0, r0
    239a:	e7e8      	b.n	236e <_usb_d_dev_ep_read_req+0x3e>
    239c:	20000300 	.word	0x20000300
    23a0:	41005000 	.word	0x41005000
    23a4:	00005e65 	.word	0x00005e65

000023a8 <_usb_d_dev_ep_trans>:

int32_t _usb_d_dev_ep_trans(const struct usb_d_transfer *trans)
{
    23a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    23aa:	46de      	mov	lr, fp
    23ac:	4657      	mov	r7, sl
    23ae:	464e      	mov	r6, r9
    23b0:	4645      	mov	r5, r8
    23b2:	b5e0      	push	{r5, r6, r7, lr}
    23b4:	b085      	sub	sp, #20
    23b6:	4680      	mov	r8, r0
	uint8_t               epn = USB_EP_GET_N(trans->ep);
    23b8:	7a05      	ldrb	r5, [r0, #8]
    23ba:	220f      	movs	r2, #15
    23bc:	402a      	ands	r2, r5
    23be:	b26d      	sxtb	r5, r5
	bool                  dir = USB_EP_GET_DIR(trans->ep);
    23c0:	0feb      	lsrs	r3, r5, #31
    23c2:	4699      	mov	r9, r3
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    23c4:	2a00      	cmp	r2, #0
    23c6:	d005      	beq.n	23d4 <_usb_d_dev_ep_trans+0x2c>
    23c8:	2d00      	cmp	r5, #0
    23ca:	db01      	blt.n	23d0 <_usb_d_dev_ep_trans+0x28>
    23cc:	0010      	movs	r0, r2
    23ce:	e002      	b.n	23d6 <_usb_d_dev_ep_trans+0x2e>
    23d0:	1c90      	adds	r0, r2, #2
    23d2:	e000      	b.n	23d6 <_usb_d_dev_ep_trans+0x2e>
    23d4:	0010      	movs	r0, r2
	return &dev_inst.ep[ep_index];
    23d6:	0006      	movs	r6, r0
    23d8:	4b61      	ldr	r3, [pc, #388]	; (2560 <_usb_d_dev_ep_trans+0x1b8>)
    23da:	3360      	adds	r3, #96	; 0x60
    23dc:	0081      	lsls	r1, r0, #2
    23de:	180f      	adds	r7, r1, r0
    23e0:	00bc      	lsls	r4, r7, #2
    23e2:	3410      	adds	r4, #16
    23e4:	191c      	adds	r4, r3, r4
    23e6:	3404      	adds	r4, #4
	struct _usb_d_dev_ep *ept = _usb_d_dev_ept(epn, dir);

	uint16_t size_mask      = (ept->size == 1023) ? 1023 : (ept->size - 1);
    23e8:	00b8      	lsls	r0, r7, #2
    23ea:	181b      	adds	r3, r3, r0
    23ec:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    23ee:	495d      	ldr	r1, [pc, #372]	; (2564 <_usb_d_dev_ep_trans+0x1bc>)
    23f0:	428b      	cmp	r3, r1
    23f2:	d044      	beq.n	247e <_usb_d_dev_ep_trans+0xd6>
    23f4:	1e5f      	subs	r7, r3, #1
    23f6:	b2bf      	uxth	r7, r7
	bool     size_n_aligned = (trans->size & size_mask);
    23f8:	4641      	mov	r1, r8
    23fa:	6849      	ldr	r1, [r1, #4]
    23fc:	400f      	ands	r7, r1

	bool use_cache = false;

	volatile hal_atomic_t flags;

	if (epn > CONF_USB_D_MAX_EP_N) {
    23fe:	2a02      	cmp	r2, #2
    2400:	d900      	bls.n	2404 <_usb_d_dev_ep_trans+0x5c>
    2402:	e0a3      	b.n	254c <_usb_d_dev_ep_trans+0x1a4>
	 * 1. Buffer not in RAM (cache all).
	 * 2. IN/OUT with unaligned buffer (cache all).
	 * 3. OUT with unaligned packet size (cache last packet).
	 * 4. OUT size < 8 (sub-case for 3).
	 */
	if (!_usb_is_addr4dma(trans->buf, trans->size) || (!_usb_is_aligned(trans->buf))
    2404:	4642      	mov	r2, r8
    2406:	6812      	ldr	r2, [r2, #0]
    2408:	4857      	ldr	r0, [pc, #348]	; (2568 <_usb_d_dev_ep_trans+0x1c0>)
    240a:	4282      	cmp	r2, r0
    240c:	d90c      	bls.n	2428 <_usb_d_dev_ep_trans+0x80>
    240e:	1888      	adds	r0, r1, r2
    2410:	9001      	str	r0, [sp, #4]
    2412:	4856      	ldr	r0, [pc, #344]	; (256c <_usb_d_dev_ep_trans+0x1c4>)
    2414:	4684      	mov	ip, r0
    2416:	9801      	ldr	r0, [sp, #4]
    2418:	4560      	cmp	r0, ip
    241a:	d805      	bhi.n	2428 <_usb_d_dev_ep_trans+0x80>
    241c:	0792      	lsls	r2, r2, #30
    241e:	d103      	bne.n	2428 <_usb_d_dev_ep_trans+0x80>
	    || (!dir && (trans->size < ept->size))) {
    2420:	2d00      	cmp	r5, #0
    2422:	db2e      	blt.n	2482 <_usb_d_dev_ep_trans+0xda>
    2424:	4299      	cmp	r1, r3
    2426:	d22f      	bcs.n	2488 <_usb_d_dev_ep_trans+0xe0>
		if (!ept->cache) {
    2428:	00b2      	lsls	r2, r6, #2
    242a:	1992      	adds	r2, r2, r6
    242c:	0091      	lsls	r1, r2, #2
    242e:	4b4c      	ldr	r3, [pc, #304]	; (2560 <_usb_d_dev_ep_trans+0x1b8>)
    2430:	185b      	adds	r3, r3, r1
    2432:	3380      	adds	r3, #128	; 0x80
    2434:	681b      	ldr	r3, [r3, #0]
    2436:	2b00      	cmp	r3, #0
    2438:	d100      	bne.n	243c <_usb_d_dev_ep_trans+0x94>
    243a:	e08a      	b.n	2552 <_usb_d_dev_ep_trans+0x1aa>
			return -USB_ERR_FUNC;
		}
		/* Use cache all the time. */
		use_cache = true;
    243c:	2301      	movs	r3, #1
    243e:	9301      	str	r3, [sp, #4]
	}
	if (!dir && size_n_aligned) {
    2440:	2d00      	cmp	r5, #0
    2442:	db0b      	blt.n	245c <_usb_d_dev_ep_trans+0xb4>
    2444:	2f00      	cmp	r7, #0
    2446:	d009      	beq.n	245c <_usb_d_dev_ep_trans+0xb4>
		if (!ept->cache) {
    2448:	00b2      	lsls	r2, r6, #2
    244a:	1992      	adds	r2, r2, r6
    244c:	0091      	lsls	r1, r2, #2
    244e:	4b44      	ldr	r3, [pc, #272]	; (2560 <_usb_d_dev_ep_trans+0x1b8>)
    2450:	185b      	adds	r3, r3, r1
    2452:	3380      	adds	r3, #128	; 0x80
    2454:	681b      	ldr	r3, [r3, #0]
    2456:	2b00      	cmp	r3, #0
    2458:	d100      	bne.n	245c <_usb_d_dev_ep_trans+0xb4>
    245a:	e07d      	b.n	2558 <_usb_d_dev_ep_trans+0x1b0>
		}
		/* Set 'use_cache' on last packet. */
	}

	/* Check halt */
	if (ept->flags.bits.is_stalled) {
    245c:	00b2      	lsls	r2, r6, #2
    245e:	1992      	adds	r2, r2, r6
    2460:	0091      	lsls	r1, r2, #2
    2462:	4b3f      	ldr	r3, [pc, #252]	; (2560 <_usb_d_dev_ep_trans+0x1b8>)
    2464:	185b      	adds	r3, r3, r1
    2466:	3380      	adds	r3, #128	; 0x80
    2468:	79db      	ldrb	r3, [r3, #7]
    246a:	071b      	lsls	r3, r3, #28
    246c:	d50f      	bpl.n	248e <_usb_d_dev_ep_trans+0xe6>
		return USB_HALTED;
    246e:	2002      	movs	r0, #2
	} else {
		_usb_d_dev_out_next(ept, false);
	}

	return ERR_NONE;
}
    2470:	b005      	add	sp, #20
    2472:	bc3c      	pop	{r2, r3, r4, r5}
    2474:	4690      	mov	r8, r2
    2476:	4699      	mov	r9, r3
    2478:	46a2      	mov	sl, r4
    247a:	46ab      	mov	fp, r5
    247c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint16_t size_mask      = (ept->size == 1023) ? 1023 : (ept->size - 1);
    247e:	001f      	movs	r7, r3
    2480:	e7ba      	b.n	23f8 <_usb_d_dev_ep_trans+0x50>
	bool use_cache = false;
    2482:	2300      	movs	r3, #0
    2484:	9301      	str	r3, [sp, #4]
    2486:	e7db      	b.n	2440 <_usb_d_dev_ep_trans+0x98>
    2488:	2300      	movs	r3, #0
    248a:	9301      	str	r3, [sp, #4]
    248c:	e7d8      	b.n	2440 <_usb_d_dev_ep_trans+0x98>
	atomic_enter_critical(&flags);
    248e:	a803      	add	r0, sp, #12
    2490:	4b37      	ldr	r3, [pc, #220]	; (2570 <_usb_d_dev_ep_trans+0x1c8>)
    2492:	4798      	blx	r3
	if (_usb_d_dev_ep_is_busy(ept)) {
    2494:	00b2      	lsls	r2, r6, #2
    2496:	1992      	adds	r2, r2, r6
    2498:	0091      	lsls	r1, r2, #2
    249a:	4b31      	ldr	r3, [pc, #196]	; (2560 <_usb_d_dev_ep_trans+0x1b8>)
    249c:	185b      	adds	r3, r3, r1
    249e:	3380      	adds	r3, #128	; 0x80
    24a0:	79db      	ldrb	r3, [r3, #7]
    24a2:	065b      	lsls	r3, r3, #25
    24a4:	d430      	bmi.n	2508 <_usb_d_dev_ep_trans+0x160>
	ept->flags.bits.is_busy = 1;
    24a6:	00b3      	lsls	r3, r6, #2
    24a8:	199b      	adds	r3, r3, r6
    24aa:	009a      	lsls	r2, r3, #2
    24ac:	4b2c      	ldr	r3, [pc, #176]	; (2560 <_usb_d_dev_ep_trans+0x1b8>)
    24ae:	469b      	mov	fp, r3
    24b0:	4493      	add	fp, r2
    24b2:	2380      	movs	r3, #128	; 0x80
    24b4:	445b      	add	r3, fp
    24b6:	469a      	mov	sl, r3
    24b8:	79db      	ldrb	r3, [r3, #7]
    24ba:	2240      	movs	r2, #64	; 0x40
    24bc:	4313      	orrs	r3, r2
    24be:	4652      	mov	r2, sl
    24c0:	71d3      	strb	r3, [r2, #7]
	atomic_leave_critical(&flags);
    24c2:	a803      	add	r0, sp, #12
    24c4:	4b2b      	ldr	r3, [pc, #172]	; (2574 <_usb_d_dev_ep_trans+0x1cc>)
    24c6:	4798      	blx	r3
	ept->trans_buf   = trans->buf;
    24c8:	465b      	mov	r3, fp
    24ca:	4642      	mov	r2, r8
    24cc:	6812      	ldr	r2, [r2, #0]
    24ce:	675a      	str	r2, [r3, #116]	; 0x74
	ept->trans_size  = trans->size;
    24d0:	4642      	mov	r2, r8
    24d2:	6852      	ldr	r2, [r2, #4]
    24d4:	679a      	str	r2, [r3, #120]	; 0x78
	ept->trans_count = 0;
    24d6:	2300      	movs	r3, #0
    24d8:	465a      	mov	r2, fp
    24da:	67d3      	str	r3, [r2, #124]	; 0x7c
	ept->flags.bits.dir       = dir;
    24dc:	464b      	mov	r3, r9
    24de:	01db      	lsls	r3, r3, #7
    24e0:	4652      	mov	r2, sl
    24e2:	79d2      	ldrb	r2, [r2, #7]
    24e4:	217f      	movs	r1, #127	; 0x7f
    24e6:	4011      	ands	r1, r2
	ept->flags.bits.use_cache = use_cache;
    24e8:	9a01      	ldr	r2, [sp, #4]
    24ea:	0152      	lsls	r2, r2, #5
    24ec:	430b      	orrs	r3, r1
    24ee:	2120      	movs	r1, #32
    24f0:	438b      	bics	r3, r1
    24f2:	431a      	orrs	r2, r3
    24f4:	4653      	mov	r3, sl
    24f6:	71da      	strb	r2, [r3, #7]
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    24f8:	4643      	mov	r3, r8
    24fa:	7a5b      	ldrb	r3, [r3, #9]
    24fc:	2b00      	cmp	r3, #0
    24fe:	d008      	beq.n	2512 <_usb_d_dev_ep_trans+0x16a>
    2500:	2f00      	cmp	r7, #0
    2502:	d01b      	beq.n	253c <_usb_d_dev_ep_trans+0x194>
    2504:	2200      	movs	r2, #0
    2506:	e005      	b.n	2514 <_usb_d_dev_ep_trans+0x16c>
		atomic_leave_critical(&flags);
    2508:	a803      	add	r0, sp, #12
    250a:	4b1a      	ldr	r3, [pc, #104]	; (2574 <_usb_d_dev_ep_trans+0x1cc>)
    250c:	4798      	blx	r3
		return USB_BUSY;
    250e:	2001      	movs	r0, #1
    2510:	e7ae      	b.n	2470 <_usb_d_dev_ep_trans+0xc8>
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    2512:	2200      	movs	r2, #0
    2514:	00b3      	lsls	r3, r6, #2
    2516:	199e      	adds	r6, r3, r6
    2518:	00b1      	lsls	r1, r6, #2
    251a:	4b11      	ldr	r3, [pc, #68]	; (2560 <_usb_d_dev_ep_trans+0x1b8>)
    251c:	185b      	adds	r3, r3, r1
    251e:	3380      	adds	r3, #128	; 0x80
    2520:	0111      	lsls	r1, r2, #4
    2522:	79da      	ldrb	r2, [r3, #7]
    2524:	2010      	movs	r0, #16
    2526:	4382      	bics	r2, r0
    2528:	430a      	orrs	r2, r1
    252a:	71da      	strb	r2, [r3, #7]
	if (dir) {
    252c:	2d00      	cmp	r5, #0
    252e:	db07      	blt.n	2540 <_usb_d_dev_ep_trans+0x198>
		_usb_d_dev_out_next(ept, false);
    2530:	2100      	movs	r1, #0
    2532:	0020      	movs	r0, r4
    2534:	4b10      	ldr	r3, [pc, #64]	; (2578 <_usb_d_dev_ep_trans+0x1d0>)
    2536:	4798      	blx	r3
	return ERR_NONE;
    2538:	2000      	movs	r0, #0
    253a:	e799      	b.n	2470 <_usb_d_dev_ep_trans+0xc8>
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    253c:	2201      	movs	r2, #1
    253e:	e7e9      	b.n	2514 <_usb_d_dev_ep_trans+0x16c>
		_usb_d_dev_in_next(ept, false);
    2540:	2100      	movs	r1, #0
    2542:	0020      	movs	r0, r4
    2544:	4b0d      	ldr	r3, [pc, #52]	; (257c <_usb_d_dev_ep_trans+0x1d4>)
    2546:	4798      	blx	r3
	return ERR_NONE;
    2548:	2000      	movs	r0, #0
    254a:	e791      	b.n	2470 <_usb_d_dev_ep_trans+0xc8>
		return -USB_ERR_PARAM;
    254c:	2012      	movs	r0, #18
    254e:	4240      	negs	r0, r0
    2550:	e78e      	b.n	2470 <_usb_d_dev_ep_trans+0xc8>
			return -USB_ERR_FUNC;
    2552:	2013      	movs	r0, #19
    2554:	4240      	negs	r0, r0
    2556:	e78b      	b.n	2470 <_usb_d_dev_ep_trans+0xc8>
			return -USB_ERR_PARAM;
    2558:	2012      	movs	r0, #18
    255a:	4240      	negs	r0, r0
    255c:	e788      	b.n	2470 <_usb_d_dev_ep_trans+0xc8>
    255e:	46c0      	nop			; (mov r8, r8)
    2560:	20000300 	.word	0x20000300
    2564:	000003ff 	.word	0x000003ff
    2568:	1fffffff 	.word	0x1fffffff
    256c:	20007fff 	.word	0x20007fff
    2570:	00000ed1 	.word	0x00000ed1
    2574:	00000edf 	.word	0x00000edf
    2578:	00001cdd 	.word	0x00001cdd
    257c:	00001b51 	.word	0x00001b51

00002580 <_usb_d_dev_register_ep_callback>:
	}
}

void _usb_d_dev_register_ep_callback(const enum usb_d_dev_ep_cb_type type, const FUNC_PTR func)
{
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    2580:	2900      	cmp	r1, #0
    2582:	d008      	beq.n	2596 <_usb_d_dev_register_ep_callback+0x16>
	if (type == USB_D_DEV_EP_CB_SETUP) {
    2584:	2800      	cmp	r0, #0
    2586:	d008      	beq.n	259a <_usb_d_dev_register_ep_callback+0x1a>
		dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)f;
	} else if (type == USB_D_DEV_EP_CB_MORE) {
    2588:	2801      	cmp	r0, #1
    258a:	d009      	beq.n	25a0 <_usb_d_dev_register_ep_callback+0x20>
		dev_inst.ep_callbacks.more = (_usb_d_dev_ep_cb_more_t)f;
	} else if (type == USB_D_DEV_EP_CB_DONE) {
    258c:	2802      	cmp	r0, #2
    258e:	d106      	bne.n	259e <_usb_d_dev_register_ep_callback+0x1e>
		dev_inst.ep_callbacks.done = (_usb_d_dev_ep_cb_done_t)f;
    2590:	4b05      	ldr	r3, [pc, #20]	; (25a8 <_usb_d_dev_register_ep_callback+0x28>)
    2592:	6719      	str	r1, [r3, #112]	; 0x70
	}
}
    2594:	e003      	b.n	259e <_usb_d_dev_register_ep_callback+0x1e>
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    2596:	4905      	ldr	r1, [pc, #20]	; (25ac <_usb_d_dev_register_ep_callback+0x2c>)
    2598:	e7f4      	b.n	2584 <_usb_d_dev_register_ep_callback+0x4>
		dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)f;
    259a:	4b03      	ldr	r3, [pc, #12]	; (25a8 <_usb_d_dev_register_ep_callback+0x28>)
    259c:	6699      	str	r1, [r3, #104]	; 0x68
}
    259e:	4770      	bx	lr
		dev_inst.ep_callbacks.more = (_usb_d_dev_ep_cb_more_t)f;
    25a0:	4b01      	ldr	r3, [pc, #4]	; (25a8 <_usb_d_dev_register_ep_callback+0x28>)
    25a2:	66d9      	str	r1, [r3, #108]	; 0x6c
    25a4:	e7fb      	b.n	259e <_usb_d_dev_register_ep_callback+0x1e>
    25a6:	46c0      	nop			; (mov r8, r8)
    25a8:	20000300 	.word	0x20000300
    25ac:	00001835 	.word	0x00001835

000025b0 <USB_Handler>:

/**
 * \brief USB interrupt handler
 */
void USB_Handler(void)
{
    25b0:	b510      	push	{r4, lr}

	_usb_d_dev_handler();
    25b2:	4b01      	ldr	r3, [pc, #4]	; (25b8 <USB_Handler+0x8>)
    25b4:	4798      	blx	r3
}
    25b6:	bd10      	pop	{r4, pc}
    25b8:	00001ee1 	.word	0x00001ee1

000025bc <__aeabi_atexit>:
    25bc:	000b      	movs	r3, r1
    25be:	b510      	push	{r4, lr}
    25c0:	0001      	movs	r1, r0
    25c2:	0018      	movs	r0, r3
    25c4:	f003 fc0c 	bl	5de0 <__cxa_atexit>
    25c8:	bd10      	pop	{r4, pc}

000025ca <_ZdlPvj>:
    25ca:	b510      	push	{r4, lr}
    25cc:	f000 f801 	bl	25d2 <_ZdlPv>
    25d0:	bd10      	pop	{r4, pc}

000025d2 <_ZdlPv>:
    25d2:	b510      	push	{r4, lr}
    25d4:	f003 fc3c 	bl	5e50 <free>
    25d8:	bd10      	pop	{r4, pc}
	...

000025dc <ceil>:
    25dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    25de:	4657      	mov	r7, sl
    25e0:	464e      	mov	r6, r9
    25e2:	4645      	mov	r5, r8
    25e4:	46de      	mov	lr, fp
    25e6:	004b      	lsls	r3, r1, #1
    25e8:	4a41      	ldr	r2, [pc, #260]	; (26f0 <ceil+0x114>)
    25ea:	0d5b      	lsrs	r3, r3, #21
    25ec:	b5e0      	push	{r5, r6, r7, lr}
    25ee:	189f      	adds	r7, r3, r2
    25f0:	0005      	movs	r5, r0
    25f2:	000c      	movs	r4, r1
    25f4:	4680      	mov	r8, r0
    25f6:	000e      	movs	r6, r1
    25f8:	4689      	mov	r9, r1
    25fa:	4682      	mov	sl, r0
    25fc:	2f13      	cmp	r7, #19
    25fe:	dc26      	bgt.n	264e <ceil+0x72>
    2600:	2f00      	cmp	r7, #0
    2602:	db56      	blt.n	26b2 <ceil+0xd6>
    2604:	4b3b      	ldr	r3, [pc, #236]	; (26f4 <ceil+0x118>)
    2606:	413b      	asrs	r3, r7
    2608:	4698      	mov	r8, r3
    260a:	000b      	movs	r3, r1
    260c:	4642      	mov	r2, r8
    260e:	4013      	ands	r3, r2
    2610:	4303      	orrs	r3, r0
    2612:	d016      	beq.n	2642 <ceil+0x66>
    2614:	4a38      	ldr	r2, [pc, #224]	; (26f8 <ceil+0x11c>)
    2616:	4b39      	ldr	r3, [pc, #228]	; (26fc <ceil+0x120>)
    2618:	f001 fe54 	bl	42c4 <__aeabi_dadd>
    261c:	2200      	movs	r2, #0
    261e:	2300      	movs	r3, #0
    2620:	f001 fe1e 	bl	4260 <__aeabi_dcmpgt>
    2624:	2800      	cmp	r0, #0
    2626:	d00a      	beq.n	263e <ceil+0x62>
    2628:	2c00      	cmp	r4, #0
    262a:	dd03      	ble.n	2634 <ceil+0x58>
    262c:	2380      	movs	r3, #128	; 0x80
    262e:	035b      	lsls	r3, r3, #13
    2630:	413b      	asrs	r3, r7
    2632:	4499      	add	r9, r3
    2634:	4643      	mov	r3, r8
    2636:	464e      	mov	r6, r9
    2638:	439e      	bics	r6, r3
    263a:	2300      	movs	r3, #0
    263c:	469a      	mov	sl, r3
    263e:	4650      	mov	r0, sl
    2640:	0031      	movs	r1, r6
    2642:	bc3c      	pop	{r2, r3, r4, r5}
    2644:	4690      	mov	r8, r2
    2646:	4699      	mov	r9, r3
    2648:	46a2      	mov	sl, r4
    264a:	46ab      	mov	fp, r5
    264c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    264e:	2f33      	cmp	r7, #51	; 0x33
    2650:	dd08      	ble.n	2664 <ceil+0x88>
    2652:	2380      	movs	r3, #128	; 0x80
    2654:	00db      	lsls	r3, r3, #3
    2656:	429f      	cmp	r7, r3
    2658:	d1f3      	bne.n	2642 <ceil+0x66>
    265a:	0002      	movs	r2, r0
    265c:	000b      	movs	r3, r1
    265e:	f001 fe31 	bl	42c4 <__aeabi_dadd>
    2662:	e7ee      	b.n	2642 <ceil+0x66>
    2664:	4a26      	ldr	r2, [pc, #152]	; (2700 <ceil+0x124>)
    2666:	4694      	mov	ip, r2
    2668:	2201      	movs	r2, #1
    266a:	4463      	add	r3, ip
    266c:	4252      	negs	r2, r2
    266e:	40da      	lsrs	r2, r3
    2670:	4693      	mov	fp, r2
    2672:	4202      	tst	r2, r0
    2674:	d0e5      	beq.n	2642 <ceil+0x66>
    2676:	4a20      	ldr	r2, [pc, #128]	; (26f8 <ceil+0x11c>)
    2678:	4b20      	ldr	r3, [pc, #128]	; (26fc <ceil+0x120>)
    267a:	f001 fe23 	bl	42c4 <__aeabi_dadd>
    267e:	2200      	movs	r2, #0
    2680:	2300      	movs	r3, #0
    2682:	f001 fded 	bl	4260 <__aeabi_dcmpgt>
    2686:	2800      	cmp	r0, #0
    2688:	d0d9      	beq.n	263e <ceil+0x62>
    268a:	2c00      	cmp	r4, #0
    268c:	dd28      	ble.n	26e0 <ceil+0x104>
    268e:	2f14      	cmp	r7, #20
    2690:	d023      	beq.n	26da <ceil+0xfe>
    2692:	2334      	movs	r3, #52	; 0x34
    2694:	1bdb      	subs	r3, r3, r7
    2696:	2701      	movs	r7, #1
    2698:	409f      	lsls	r7, r3
    269a:	197f      	adds	r7, r7, r5
    269c:	42af      	cmp	r7, r5
    269e:	419b      	sbcs	r3, r3
    26a0:	425b      	negs	r3, r3
    26a2:	4499      	add	r9, r3
    26a4:	465b      	mov	r3, fp
    26a6:	439f      	bics	r7, r3
    26a8:	464e      	mov	r6, r9
    26aa:	46ba      	mov	sl, r7
    26ac:	0031      	movs	r1, r6
    26ae:	4650      	mov	r0, sl
    26b0:	e7c7      	b.n	2642 <ceil+0x66>
    26b2:	4a11      	ldr	r2, [pc, #68]	; (26f8 <ceil+0x11c>)
    26b4:	4b11      	ldr	r3, [pc, #68]	; (26fc <ceil+0x120>)
    26b6:	f001 fe05 	bl	42c4 <__aeabi_dadd>
    26ba:	2200      	movs	r2, #0
    26bc:	2300      	movs	r3, #0
    26be:	f001 fdcf 	bl	4260 <__aeabi_dcmpgt>
    26c2:	2800      	cmp	r0, #0
    26c4:	d0bb      	beq.n	263e <ceil+0x62>
    26c6:	2c00      	cmp	r4, #0
    26c8:	db0c      	blt.n	26e4 <ceil+0x108>
    26ca:	2300      	movs	r3, #0
    26cc:	432c      	orrs	r4, r5
    26ce:	469a      	mov	sl, r3
    26d0:	2600      	movs	r6, #0
    26d2:	2c00      	cmp	r4, #0
    26d4:	d0b3      	beq.n	263e <ceil+0x62>
    26d6:	4e0b      	ldr	r6, [pc, #44]	; (2704 <ceil+0x128>)
    26d8:	e7b1      	b.n	263e <ceil+0x62>
    26da:	2301      	movs	r3, #1
    26dc:	469c      	mov	ip, r3
    26de:	44e1      	add	r9, ip
    26e0:	4647      	mov	r7, r8
    26e2:	e7df      	b.n	26a4 <ceil+0xc8>
    26e4:	2300      	movs	r3, #0
    26e6:	2680      	movs	r6, #128	; 0x80
    26e8:	469a      	mov	sl, r3
    26ea:	0636      	lsls	r6, r6, #24
    26ec:	e7a7      	b.n	263e <ceil+0x62>
    26ee:	46c0      	nop			; (mov r8, r8)
    26f0:	fffffc01 	.word	0xfffffc01
    26f4:	000fffff 	.word	0x000fffff
    26f8:	8800759c 	.word	0x8800759c
    26fc:	7e37e43c 	.word	0x7e37e43c
    2700:	fffffbed 	.word	0xfffffbed
    2704:	3ff00000 	.word	0x3ff00000

00002708 <floor>:
    2708:	4a45      	ldr	r2, [pc, #276]	; (2820 <floor+0x118>)
    270a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    270c:	4657      	mov	r7, sl
    270e:	4692      	mov	sl, r2
    2710:	004b      	lsls	r3, r1, #1
    2712:	0d5b      	lsrs	r3, r3, #21
    2714:	449a      	add	sl, r3
    2716:	464e      	mov	r6, r9
    2718:	4645      	mov	r5, r8
    271a:	46de      	mov	lr, fp
    271c:	4652      	mov	r2, sl
    271e:	b5e0      	push	{r5, r6, r7, lr}
    2720:	000c      	movs	r4, r1
    2722:	0005      	movs	r5, r0
    2724:	000e      	movs	r6, r1
    2726:	4689      	mov	r9, r1
    2728:	0007      	movs	r7, r0
    272a:	2a13      	cmp	r2, #19
    272c:	dc22      	bgt.n	2774 <floor+0x6c>
    272e:	2a00      	cmp	r2, #0
    2730:	db47      	blt.n	27c2 <floor+0xba>
    2732:	4652      	mov	r2, sl
    2734:	4b3b      	ldr	r3, [pc, #236]	; (2824 <floor+0x11c>)
    2736:	4113      	asrs	r3, r2
    2738:	4698      	mov	r8, r3
    273a:	000b      	movs	r3, r1
    273c:	4642      	mov	r2, r8
    273e:	4013      	ands	r3, r2
    2740:	4303      	orrs	r3, r0
    2742:	d011      	beq.n	2768 <floor+0x60>
    2744:	4a38      	ldr	r2, [pc, #224]	; (2828 <floor+0x120>)
    2746:	4b39      	ldr	r3, [pc, #228]	; (282c <floor+0x124>)
    2748:	f001 fdbc 	bl	42c4 <__aeabi_dadd>
    274c:	2200      	movs	r2, #0
    274e:	2300      	movs	r3, #0
    2750:	f001 fd86 	bl	4260 <__aeabi_dcmpgt>
    2754:	2800      	cmp	r0, #0
    2756:	d005      	beq.n	2764 <floor+0x5c>
    2758:	2c00      	cmp	r4, #0
    275a:	db41      	blt.n	27e0 <floor+0xd8>
    275c:	464e      	mov	r6, r9
    275e:	4643      	mov	r3, r8
    2760:	2700      	movs	r7, #0
    2762:	439e      	bics	r6, r3
    2764:	0038      	movs	r0, r7
    2766:	0031      	movs	r1, r6
    2768:	bc3c      	pop	{r2, r3, r4, r5}
    276a:	4690      	mov	r8, r2
    276c:	4699      	mov	r9, r3
    276e:	46a2      	mov	sl, r4
    2770:	46ab      	mov	fp, r5
    2772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2774:	4652      	mov	r2, sl
    2776:	2a33      	cmp	r2, #51	; 0x33
    2778:	dd08      	ble.n	278c <floor+0x84>
    277a:	2380      	movs	r3, #128	; 0x80
    277c:	00db      	lsls	r3, r3, #3
    277e:	459a      	cmp	sl, r3
    2780:	d1f2      	bne.n	2768 <floor+0x60>
    2782:	0002      	movs	r2, r0
    2784:	000b      	movs	r3, r1
    2786:	f001 fd9d 	bl	42c4 <__aeabi_dadd>
    278a:	e7ed      	b.n	2768 <floor+0x60>
    278c:	4a28      	ldr	r2, [pc, #160]	; (2830 <floor+0x128>)
    278e:	4694      	mov	ip, r2
    2790:	2201      	movs	r2, #1
    2792:	4463      	add	r3, ip
    2794:	4252      	negs	r2, r2
    2796:	40da      	lsrs	r2, r3
    2798:	4693      	mov	fp, r2
    279a:	4202      	tst	r2, r0
    279c:	d0e4      	beq.n	2768 <floor+0x60>
    279e:	4a22      	ldr	r2, [pc, #136]	; (2828 <floor+0x120>)
    27a0:	4b22      	ldr	r3, [pc, #136]	; (282c <floor+0x124>)
    27a2:	f001 fd8f 	bl	42c4 <__aeabi_dadd>
    27a6:	2200      	movs	r2, #0
    27a8:	2300      	movs	r3, #0
    27aa:	f001 fd59 	bl	4260 <__aeabi_dcmpgt>
    27ae:	2800      	cmp	r0, #0
    27b0:	d0d8      	beq.n	2764 <floor+0x5c>
    27b2:	2c00      	cmp	r4, #0
    27b4:	db1a      	blt.n	27ec <floor+0xe4>
    27b6:	465b      	mov	r3, fp
    27b8:	464e      	mov	r6, r9
    27ba:	439f      	bics	r7, r3
    27bc:	0038      	movs	r0, r7
    27be:	0031      	movs	r1, r6
    27c0:	e7d2      	b.n	2768 <floor+0x60>
    27c2:	4a19      	ldr	r2, [pc, #100]	; (2828 <floor+0x120>)
    27c4:	4b19      	ldr	r3, [pc, #100]	; (282c <floor+0x124>)
    27c6:	f001 fd7d 	bl	42c4 <__aeabi_dadd>
    27ca:	2200      	movs	r2, #0
    27cc:	2300      	movs	r3, #0
    27ce:	f001 fd47 	bl	4260 <__aeabi_dcmpgt>
    27d2:	2800      	cmp	r0, #0
    27d4:	d0c6      	beq.n	2764 <floor+0x5c>
    27d6:	2c00      	cmp	r4, #0
    27d8:	db16      	blt.n	2808 <floor+0x100>
    27da:	2700      	movs	r7, #0
    27dc:	2600      	movs	r6, #0
    27de:	e7c1      	b.n	2764 <floor+0x5c>
    27e0:	2380      	movs	r3, #128	; 0x80
    27e2:	4652      	mov	r2, sl
    27e4:	035b      	lsls	r3, r3, #13
    27e6:	4113      	asrs	r3, r2
    27e8:	4499      	add	r9, r3
    27ea:	e7b7      	b.n	275c <floor+0x54>
    27ec:	4653      	mov	r3, sl
    27ee:	2b14      	cmp	r3, #20
    27f0:	d012      	beq.n	2818 <floor+0x110>
    27f2:	2334      	movs	r3, #52	; 0x34
    27f4:	4652      	mov	r2, sl
    27f6:	2701      	movs	r7, #1
    27f8:	1a9b      	subs	r3, r3, r2
    27fa:	409f      	lsls	r7, r3
    27fc:	197f      	adds	r7, r7, r5
    27fe:	42af      	cmp	r7, r5
    2800:	419b      	sbcs	r3, r3
    2802:	425b      	negs	r3, r3
    2804:	4499      	add	r9, r3
    2806:	e7d6      	b.n	27b6 <floor+0xae>
    2808:	0064      	lsls	r4, r4, #1
    280a:	0864      	lsrs	r4, r4, #1
    280c:	4325      	orrs	r5, r4
    280e:	2700      	movs	r7, #0
    2810:	2d00      	cmp	r5, #0
    2812:	d0a7      	beq.n	2764 <floor+0x5c>
    2814:	4e07      	ldr	r6, [pc, #28]	; (2834 <floor+0x12c>)
    2816:	e7a5      	b.n	2764 <floor+0x5c>
    2818:	3b13      	subs	r3, #19
    281a:	469c      	mov	ip, r3
    281c:	44e1      	add	r9, ip
    281e:	e7ca      	b.n	27b6 <floor+0xae>
    2820:	fffffc01 	.word	0xfffffc01
    2824:	000fffff 	.word	0x000fffff
    2828:	8800759c 	.word	0x8800759c
    282c:	7e37e43c 	.word	0x7e37e43c
    2830:	fffffbed 	.word	0xfffffbed
    2834:	bff00000 	.word	0xbff00000

00002838 <log>:
    2838:	b5f0      	push	{r4, r5, r6, r7, lr}
    283a:	46c6      	mov	lr, r8
    283c:	b500      	push	{lr}
    283e:	b08c      	sub	sp, #48	; 0x30
    2840:	0004      	movs	r4, r0
    2842:	000d      	movs	r5, r1
    2844:	f000 fa2c 	bl	2ca0 <__ieee754_log>
    2848:	4b3a      	ldr	r3, [pc, #232]	; (2934 <log+0xfc>)
    284a:	0006      	movs	r6, r0
    284c:	781b      	ldrb	r3, [r3, #0]
    284e:	000f      	movs	r7, r1
    2850:	b25b      	sxtb	r3, r3
    2852:	4698      	mov	r8, r3
    2854:	3301      	adds	r3, #1
    2856:	d00f      	beq.n	2878 <log+0x40>
    2858:	0022      	movs	r2, r4
    285a:	002b      	movs	r3, r5
    285c:	0020      	movs	r0, r4
    285e:	0029      	movs	r1, r5
    2860:	f003 fa0a 	bl	5c78 <__aeabi_dcmpun>
    2864:	2800      	cmp	r0, #0
    2866:	d107      	bne.n	2878 <log+0x40>
    2868:	2200      	movs	r2, #0
    286a:	2300      	movs	r3, #0
    286c:	0020      	movs	r0, r4
    286e:	0029      	movs	r1, r5
    2870:	f001 fcf6 	bl	4260 <__aeabi_dcmpgt>
    2874:	2800      	cmp	r0, #0
    2876:	d005      	beq.n	2884 <log+0x4c>
    2878:	0030      	movs	r0, r6
    287a:	0039      	movs	r1, r7
    287c:	b00c      	add	sp, #48	; 0x30
    287e:	bc04      	pop	{r2}
    2880:	4690      	mov	r8, r2
    2882:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2884:	4b2c      	ldr	r3, [pc, #176]	; (2938 <log+0x100>)
    2886:	900a      	str	r0, [sp, #40]	; 0x28
    2888:	9303      	str	r3, [sp, #12]
    288a:	4643      	mov	r3, r8
    288c:	9404      	str	r4, [sp, #16]
    288e:	9505      	str	r5, [sp, #20]
    2890:	9406      	str	r4, [sp, #24]
    2892:	9507      	str	r5, [sp, #28]
    2894:	2b00      	cmp	r3, #0
    2896:	d11a      	bne.n	28ce <log+0x96>
    2898:	22e0      	movs	r2, #224	; 0xe0
    289a:	4b28      	ldr	r3, [pc, #160]	; (293c <log+0x104>)
    289c:	0612      	lsls	r2, r2, #24
    289e:	9208      	str	r2, [sp, #32]
    28a0:	9309      	str	r3, [sp, #36]	; 0x24
    28a2:	0020      	movs	r0, r4
    28a4:	2200      	movs	r2, #0
    28a6:	2300      	movs	r3, #0
    28a8:	0029      	movs	r1, r5
    28aa:	f001 fcbf 	bl	422c <__aeabi_dcmpeq>
    28ae:	2800      	cmp	r0, #0
    28b0:	d038      	beq.n	2924 <log+0xec>
    28b2:	2302      	movs	r3, #2
    28b4:	9302      	str	r3, [sp, #8]
    28b6:	a802      	add	r0, sp, #8
    28b8:	f001 fa18 	bl	3cec <matherr>
    28bc:	2800      	cmp	r0, #0
    28be:	d017      	beq.n	28f0 <log+0xb8>
    28c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    28c2:	9301      	str	r3, [sp, #4]
    28c4:	2b00      	cmp	r3, #0
    28c6:	d118      	bne.n	28fa <log+0xc2>
    28c8:	9e08      	ldr	r6, [sp, #32]
    28ca:	9f09      	ldr	r7, [sp, #36]	; 0x24
    28cc:	e7d4      	b.n	2878 <log+0x40>
    28ce:	2200      	movs	r2, #0
    28d0:	4b1b      	ldr	r3, [pc, #108]	; (2940 <log+0x108>)
    28d2:	0020      	movs	r0, r4
    28d4:	9208      	str	r2, [sp, #32]
    28d6:	9309      	str	r3, [sp, #36]	; 0x24
    28d8:	0029      	movs	r1, r5
    28da:	2200      	movs	r2, #0
    28dc:	2300      	movs	r3, #0
    28de:	f001 fca5 	bl	422c <__aeabi_dcmpeq>
    28e2:	2800      	cmp	r0, #0
    28e4:	d00f      	beq.n	2906 <log+0xce>
    28e6:	2302      	movs	r3, #2
    28e8:	9302      	str	r3, [sp, #8]
    28ea:	4643      	mov	r3, r8
    28ec:	2b02      	cmp	r3, #2
    28ee:	d1e2      	bne.n	28b6 <log+0x7e>
    28f0:	f003 fa84 	bl	5dfc <__errno>
    28f4:	2322      	movs	r3, #34	; 0x22
    28f6:	6003      	str	r3, [r0, #0]
    28f8:	e7e2      	b.n	28c0 <log+0x88>
    28fa:	f003 fa7f 	bl	5dfc <__errno>
    28fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2900:	9301      	str	r3, [sp, #4]
    2902:	6003      	str	r3, [r0, #0]
    2904:	e7e0      	b.n	28c8 <log+0x90>
    2906:	2301      	movs	r3, #1
    2908:	9302      	str	r3, [sp, #8]
    290a:	4643      	mov	r3, r8
    290c:	2b02      	cmp	r3, #2
    290e:	d10b      	bne.n	2928 <log+0xf0>
    2910:	f003 fa74 	bl	5dfc <__errno>
    2914:	2321      	movs	r3, #33	; 0x21
    2916:	6003      	str	r3, [r0, #0]
    2918:	480a      	ldr	r0, [pc, #40]	; (2944 <log+0x10c>)
    291a:	f001 f9e9 	bl	3cf0 <nan>
    291e:	9008      	str	r0, [sp, #32]
    2920:	9109      	str	r1, [sp, #36]	; 0x24
    2922:	e7cd      	b.n	28c0 <log+0x88>
    2924:	2301      	movs	r3, #1
    2926:	9302      	str	r3, [sp, #8]
    2928:	a802      	add	r0, sp, #8
    292a:	f001 f9df 	bl	3cec <matherr>
    292e:	2800      	cmp	r0, #0
    2930:	d1f2      	bne.n	2918 <log+0xe0>
    2932:	e7ed      	b.n	2910 <log+0xd8>
    2934:	20000004 	.word	0x20000004
    2938:	000060a4 	.word	0x000060a4
    293c:	c7efffff 	.word	0xc7efffff
    2940:	fff00000 	.word	0xfff00000
    2944:	000060a8 	.word	0x000060a8

00002948 <pow>:
    2948:	b5f0      	push	{r4, r5, r6, r7, lr}
    294a:	4657      	mov	r7, sl
    294c:	464e      	mov	r6, r9
    294e:	46de      	mov	lr, fp
    2950:	4645      	mov	r5, r8
    2952:	b5e0      	push	{r5, r6, r7, lr}
    2954:	b08f      	sub	sp, #60	; 0x3c
    2956:	001d      	movs	r5, r3
    2958:	0006      	movs	r6, r0
    295a:	000f      	movs	r7, r1
    295c:	0014      	movs	r4, r2
    295e:	f000 fba1 	bl	30a4 <__ieee754_pow>
    2962:	4bc7      	ldr	r3, [pc, #796]	; (2c80 <pow+0x338>)
    2964:	9000      	str	r0, [sp, #0]
    2966:	9101      	str	r1, [sp, #4]
    2968:	469a      	mov	sl, r3
    296a:	781b      	ldrb	r3, [r3, #0]
    296c:	b25b      	sxtb	r3, r3
    296e:	4699      	mov	r9, r3
    2970:	3301      	adds	r3, #1
    2972:	d03e      	beq.n	29f2 <pow+0xaa>
    2974:	0022      	movs	r2, r4
    2976:	002b      	movs	r3, r5
    2978:	0020      	movs	r0, r4
    297a:	0029      	movs	r1, r5
    297c:	f003 f97c 	bl	5c78 <__aeabi_dcmpun>
    2980:	4683      	mov	fp, r0
    2982:	2800      	cmp	r0, #0
    2984:	d135      	bne.n	29f2 <pow+0xaa>
    2986:	0032      	movs	r2, r6
    2988:	003b      	movs	r3, r7
    298a:	0030      	movs	r0, r6
    298c:	0039      	movs	r1, r7
    298e:	f003 f973 	bl	5c78 <__aeabi_dcmpun>
    2992:	2200      	movs	r2, #0
    2994:	9003      	str	r0, [sp, #12]
    2996:	2800      	cmp	r0, #0
    2998:	d000      	beq.n	299c <pow+0x54>
    299a:	e0b6      	b.n	2b0a <pow+0x1c2>
    299c:	2300      	movs	r3, #0
    299e:	0030      	movs	r0, r6
    29a0:	0039      	movs	r1, r7
    29a2:	f001 fc43 	bl	422c <__aeabi_dcmpeq>
    29a6:	2800      	cmp	r0, #0
    29a8:	d02c      	beq.n	2a04 <pow+0xbc>
    29aa:	2200      	movs	r2, #0
    29ac:	2300      	movs	r3, #0
    29ae:	0020      	movs	r0, r4
    29b0:	0029      	movs	r1, r5
    29b2:	f001 fc3b 	bl	422c <__aeabi_dcmpeq>
    29b6:	4683      	mov	fp, r0
    29b8:	2800      	cmp	r0, #0
    29ba:	d100      	bne.n	29be <pow+0x76>
    29bc:	e077      	b.n	2aae <pow+0x166>
    29be:	ab04      	add	r3, sp, #16
    29c0:	4698      	mov	r8, r3
    29c2:	2301      	movs	r3, #1
    29c4:	4642      	mov	r2, r8
    29c6:	9304      	str	r3, [sp, #16]
    29c8:	4bae      	ldr	r3, [pc, #696]	; (2c84 <pow+0x33c>)
    29ca:	6053      	str	r3, [r2, #4]
    29cc:	4643      	mov	r3, r8
    29ce:	9a03      	ldr	r2, [sp, #12]
    29d0:	611c      	str	r4, [r3, #16]
    29d2:	615d      	str	r5, [r3, #20]
    29d4:	621a      	str	r2, [r3, #32]
    29d6:	609e      	str	r6, [r3, #8]
    29d8:	60df      	str	r7, [r3, #12]
    29da:	4642      	mov	r2, r8
    29dc:	2300      	movs	r3, #0
    29de:	2400      	movs	r4, #0
    29e0:	6193      	str	r3, [r2, #24]
    29e2:	61d4      	str	r4, [r2, #28]
    29e4:	464b      	mov	r3, r9
    29e6:	2b00      	cmp	r3, #0
    29e8:	d04d      	beq.n	2a86 <pow+0x13e>
    29ea:	2300      	movs	r3, #0
    29ec:	4ca6      	ldr	r4, [pc, #664]	; (2c88 <pow+0x340>)
    29ee:	9300      	str	r3, [sp, #0]
    29f0:	9401      	str	r4, [sp, #4]
    29f2:	9800      	ldr	r0, [sp, #0]
    29f4:	9901      	ldr	r1, [sp, #4]
    29f6:	b00f      	add	sp, #60	; 0x3c
    29f8:	bc3c      	pop	{r2, r3, r4, r5}
    29fa:	4690      	mov	r8, r2
    29fc:	4699      	mov	r9, r3
    29fe:	46a2      	mov	sl, r4
    2a00:	46ab      	mov	fp, r5
    2a02:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2a04:	9800      	ldr	r0, [sp, #0]
    2a06:	9901      	ldr	r1, [sp, #4]
    2a08:	f001 f966 	bl	3cd8 <finite>
    2a0c:	4681      	mov	r9, r0
    2a0e:	2800      	cmp	r0, #0
    2a10:	d100      	bne.n	2a14 <pow+0xcc>
    2a12:	e09b      	b.n	2b4c <pow+0x204>
    2a14:	9800      	ldr	r0, [sp, #0]
    2a16:	9901      	ldr	r1, [sp, #4]
    2a18:	2200      	movs	r2, #0
    2a1a:	2300      	movs	r3, #0
    2a1c:	f001 fc06 	bl	422c <__aeabi_dcmpeq>
    2a20:	2800      	cmp	r0, #0
    2a22:	d0e6      	beq.n	29f2 <pow+0xaa>
    2a24:	0030      	movs	r0, r6
    2a26:	0039      	movs	r1, r7
    2a28:	f001 f956 	bl	3cd8 <finite>
    2a2c:	2800      	cmp	r0, #0
    2a2e:	d0e0      	beq.n	29f2 <pow+0xaa>
    2a30:	0020      	movs	r0, r4
    2a32:	0029      	movs	r1, r5
    2a34:	f001 f950 	bl	3cd8 <finite>
    2a38:	2800      	cmp	r0, #0
    2a3a:	d0da      	beq.n	29f2 <pow+0xaa>
    2a3c:	ab04      	add	r3, sp, #16
    2a3e:	4698      	mov	r8, r3
    2a40:	2304      	movs	r3, #4
    2a42:	4642      	mov	r2, r8
    2a44:	9304      	str	r3, [sp, #16]
    2a46:	4b8f      	ldr	r3, [pc, #572]	; (2c84 <pow+0x33c>)
    2a48:	6114      	str	r4, [r2, #16]
    2a4a:	6155      	str	r5, [r2, #20]
    2a4c:	6053      	str	r3, [r2, #4]
    2a4e:	2300      	movs	r3, #0
    2a50:	2400      	movs	r4, #0
    2a52:	6213      	str	r3, [r2, #32]
    2a54:	2300      	movs	r3, #0
    2a56:	6193      	str	r3, [r2, #24]
    2a58:	61d4      	str	r4, [r2, #28]
    2a5a:	4653      	mov	r3, sl
    2a5c:	781b      	ldrb	r3, [r3, #0]
    2a5e:	6096      	str	r6, [r2, #8]
    2a60:	60d7      	str	r7, [r2, #12]
    2a62:	b25b      	sxtb	r3, r3
    2a64:	2b02      	cmp	r3, #2
    2a66:	d004      	beq.n	2a72 <pow+0x12a>
    2a68:	4640      	mov	r0, r8
    2a6a:	f001 f93f 	bl	3cec <matherr>
    2a6e:	2800      	cmp	r0, #0
    2a70:	d10e      	bne.n	2a90 <pow+0x148>
    2a72:	f003 f9c3 	bl	5dfc <__errno>
    2a76:	2322      	movs	r3, #34	; 0x22
    2a78:	6003      	str	r3, [r0, #0]
    2a7a:	e009      	b.n	2a90 <pow+0x148>
    2a7c:	4642      	mov	r2, r8
    2a7e:	2300      	movs	r3, #0
    2a80:	2400      	movs	r4, #0
    2a82:	6193      	str	r3, [r2, #24]
    2a84:	61d4      	str	r4, [r2, #28]
    2a86:	4640      	mov	r0, r8
    2a88:	f001 f930 	bl	3cec <matherr>
    2a8c:	2800      	cmp	r0, #0
    2a8e:	d037      	beq.n	2b00 <pow+0x1b8>
    2a90:	4643      	mov	r3, r8
    2a92:	6a1b      	ldr	r3, [r3, #32]
    2a94:	2b00      	cmp	r3, #0
    2a96:	d004      	beq.n	2aa2 <pow+0x15a>
    2a98:	f003 f9b0 	bl	5dfc <__errno>
    2a9c:	4643      	mov	r3, r8
    2a9e:	6a1b      	ldr	r3, [r3, #32]
    2aa0:	6003      	str	r3, [r0, #0]
    2aa2:	4643      	mov	r3, r8
    2aa4:	69dc      	ldr	r4, [r3, #28]
    2aa6:	699b      	ldr	r3, [r3, #24]
    2aa8:	9300      	str	r3, [sp, #0]
    2aaa:	9401      	str	r4, [sp, #4]
    2aac:	e7a1      	b.n	29f2 <pow+0xaa>
    2aae:	0020      	movs	r0, r4
    2ab0:	0029      	movs	r1, r5
    2ab2:	f001 f911 	bl	3cd8 <finite>
    2ab6:	2800      	cmp	r0, #0
    2ab8:	d09b      	beq.n	29f2 <pow+0xaa>
    2aba:	2200      	movs	r2, #0
    2abc:	2300      	movs	r3, #0
    2abe:	0020      	movs	r0, r4
    2ac0:	0029      	movs	r1, r5
    2ac2:	f001 fbb9 	bl	4238 <__aeabi_dcmplt>
    2ac6:	2800      	cmp	r0, #0
    2ac8:	d100      	bne.n	2acc <pow+0x184>
    2aca:	e792      	b.n	29f2 <pow+0xaa>
    2acc:	ab04      	add	r3, sp, #16
    2ace:	4698      	mov	r8, r3
    2ad0:	2301      	movs	r3, #1
    2ad2:	4642      	mov	r2, r8
    2ad4:	9304      	str	r3, [sp, #16]
    2ad6:	4b6b      	ldr	r3, [pc, #428]	; (2c84 <pow+0x33c>)
    2ad8:	6053      	str	r3, [r2, #4]
    2ada:	4643      	mov	r3, r8
    2adc:	465a      	mov	r2, fp
    2ade:	609e      	str	r6, [r3, #8]
    2ae0:	60df      	str	r7, [r3, #12]
    2ae2:	621a      	str	r2, [r3, #32]
    2ae4:	611c      	str	r4, [r3, #16]
    2ae6:	615d      	str	r5, [r3, #20]
    2ae8:	4653      	mov	r3, sl
    2aea:	781b      	ldrb	r3, [r3, #0]
    2aec:	b25b      	sxtb	r3, r3
    2aee:	2b00      	cmp	r3, #0
    2af0:	d0c4      	beq.n	2a7c <pow+0x134>
    2af2:	2000      	movs	r0, #0
    2af4:	4642      	mov	r2, r8
    2af6:	4965      	ldr	r1, [pc, #404]	; (2c8c <pow+0x344>)
    2af8:	6190      	str	r0, [r2, #24]
    2afa:	61d1      	str	r1, [r2, #28]
    2afc:	2b02      	cmp	r3, #2
    2afe:	d1c2      	bne.n	2a86 <pow+0x13e>
    2b00:	f003 f97c 	bl	5dfc <__errno>
    2b04:	2321      	movs	r3, #33	; 0x21
    2b06:	6003      	str	r3, [r0, #0]
    2b08:	e7c2      	b.n	2a90 <pow+0x148>
    2b0a:	2300      	movs	r3, #0
    2b0c:	0020      	movs	r0, r4
    2b0e:	0029      	movs	r1, r5
    2b10:	f001 fb8c 	bl	422c <__aeabi_dcmpeq>
    2b14:	2800      	cmp	r0, #0
    2b16:	d100      	bne.n	2b1a <pow+0x1d2>
    2b18:	e76b      	b.n	29f2 <pow+0xaa>
    2b1a:	ab04      	add	r3, sp, #16
    2b1c:	4698      	mov	r8, r3
    2b1e:	2301      	movs	r3, #1
    2b20:	4642      	mov	r2, r8
    2b22:	9304      	str	r3, [sp, #16]
    2b24:	4b57      	ldr	r3, [pc, #348]	; (2c84 <pow+0x33c>)
    2b26:	4641      	mov	r1, r8
    2b28:	6053      	str	r3, [r2, #4]
    2b2a:	4643      	mov	r3, r8
    2b2c:	465a      	mov	r2, fp
    2b2e:	621a      	str	r2, [r3, #32]
    2b30:	2200      	movs	r2, #0
    2b32:	609e      	str	r6, [r3, #8]
    2b34:	60df      	str	r7, [r3, #12]
    2b36:	611c      	str	r4, [r3, #16]
    2b38:	615d      	str	r5, [r3, #20]
    2b3a:	4b53      	ldr	r3, [pc, #332]	; (2c88 <pow+0x340>)
    2b3c:	618a      	str	r2, [r1, #24]
    2b3e:	61cb      	str	r3, [r1, #28]
    2b40:	9200      	str	r2, [sp, #0]
    2b42:	9301      	str	r3, [sp, #4]
    2b44:	464b      	mov	r3, r9
    2b46:	2b02      	cmp	r3, #2
    2b48:	d19d      	bne.n	2a86 <pow+0x13e>
    2b4a:	e752      	b.n	29f2 <pow+0xaa>
    2b4c:	0030      	movs	r0, r6
    2b4e:	0039      	movs	r1, r7
    2b50:	f001 f8c2 	bl	3cd8 <finite>
    2b54:	2800      	cmp	r0, #0
    2b56:	d100      	bne.n	2b5a <pow+0x212>
    2b58:	e75c      	b.n	2a14 <pow+0xcc>
    2b5a:	0020      	movs	r0, r4
    2b5c:	0029      	movs	r1, r5
    2b5e:	f001 f8bb 	bl	3cd8 <finite>
    2b62:	2800      	cmp	r0, #0
    2b64:	d100      	bne.n	2b68 <pow+0x220>
    2b66:	e755      	b.n	2a14 <pow+0xcc>
    2b68:	9800      	ldr	r0, [sp, #0]
    2b6a:	9901      	ldr	r1, [sp, #4]
    2b6c:	000b      	movs	r3, r1
    2b6e:	0002      	movs	r2, r0
    2b70:	f003 f882 	bl	5c78 <__aeabi_dcmpun>
    2b74:	ab04      	add	r3, sp, #16
    2b76:	4698      	mov	r8, r3
    2b78:	2800      	cmp	r0, #0
    2b7a:	d161      	bne.n	2c40 <pow+0x2f8>
    2b7c:	2303      	movs	r3, #3
    2b7e:	4642      	mov	r2, r8
    2b80:	9304      	str	r3, [sp, #16]
    2b82:	4b40      	ldr	r3, [pc, #256]	; (2c84 <pow+0x33c>)
    2b84:	6210      	str	r0, [r2, #32]
    2b86:	6053      	str	r3, [r2, #4]
    2b88:	4653      	mov	r3, sl
    2b8a:	781b      	ldrb	r3, [r3, #0]
    2b8c:	6096      	str	r6, [r2, #8]
    2b8e:	60d7      	str	r7, [r2, #12]
    2b90:	b25b      	sxtb	r3, r3
    2b92:	6114      	str	r4, [r2, #16]
    2b94:	6155      	str	r5, [r2, #20]
    2b96:	4699      	mov	r9, r3
    2b98:	2b00      	cmp	r3, #0
    2b9a:	d12f      	bne.n	2bfc <pow+0x2b4>
    2b9c:	22e0      	movs	r2, #224	; 0xe0
    2b9e:	4641      	mov	r1, r8
    2ba0:	4b3b      	ldr	r3, [pc, #236]	; (2c90 <pow+0x348>)
    2ba2:	0612      	lsls	r2, r2, #24
    2ba4:	618a      	str	r2, [r1, #24]
    2ba6:	61cb      	str	r3, [r1, #28]
    2ba8:	0030      	movs	r0, r6
    2baa:	2200      	movs	r2, #0
    2bac:	2300      	movs	r3, #0
    2bae:	0039      	movs	r1, r7
    2bb0:	f001 fb42 	bl	4238 <__aeabi_dcmplt>
    2bb4:	2800      	cmp	r0, #0
    2bb6:	d100      	bne.n	2bba <pow+0x272>
    2bb8:	e756      	b.n	2a68 <pow+0x120>
    2bba:	2200      	movs	r2, #0
    2bbc:	4b35      	ldr	r3, [pc, #212]	; (2c94 <pow+0x34c>)
    2bbe:	0020      	movs	r0, r4
    2bc0:	0029      	movs	r1, r5
    2bc2:	f002 fac3 	bl	514c <__aeabi_dmul>
    2bc6:	0004      	movs	r4, r0
    2bc8:	000d      	movs	r5, r1
    2bca:	f001 f897 	bl	3cfc <rint>
    2bce:	0002      	movs	r2, r0
    2bd0:	000b      	movs	r3, r1
    2bd2:	0020      	movs	r0, r4
    2bd4:	0029      	movs	r1, r5
    2bd6:	f001 fb29 	bl	422c <__aeabi_dcmpeq>
    2bda:	2800      	cmp	r0, #0
    2bdc:	d105      	bne.n	2bea <pow+0x2a2>
    2bde:	22e0      	movs	r2, #224	; 0xe0
    2be0:	4b2d      	ldr	r3, [pc, #180]	; (2c98 <pow+0x350>)
    2be2:	0612      	lsls	r2, r2, #24
    2be4:	4641      	mov	r1, r8
    2be6:	618a      	str	r2, [r1, #24]
    2be8:	61cb      	str	r3, [r1, #28]
    2bea:	4653      	mov	r3, sl
    2bec:	781b      	ldrb	r3, [r3, #0]
    2bee:	b25b      	sxtb	r3, r3
    2bf0:	4699      	mov	r9, r3
    2bf2:	464b      	mov	r3, r9
    2bf4:	2b02      	cmp	r3, #2
    2bf6:	d000      	beq.n	2bfa <pow+0x2b2>
    2bf8:	e736      	b.n	2a68 <pow+0x120>
    2bfa:	e73a      	b.n	2a72 <pow+0x12a>
    2bfc:	2200      	movs	r2, #0
    2bfe:	4641      	mov	r1, r8
    2c00:	4b26      	ldr	r3, [pc, #152]	; (2c9c <pow+0x354>)
    2c02:	0030      	movs	r0, r6
    2c04:	618a      	str	r2, [r1, #24]
    2c06:	61cb      	str	r3, [r1, #28]
    2c08:	2200      	movs	r2, #0
    2c0a:	2300      	movs	r3, #0
    2c0c:	0039      	movs	r1, r7
    2c0e:	f001 fb13 	bl	4238 <__aeabi_dcmplt>
    2c12:	2800      	cmp	r0, #0
    2c14:	d0ed      	beq.n	2bf2 <pow+0x2aa>
    2c16:	2200      	movs	r2, #0
    2c18:	4b1e      	ldr	r3, [pc, #120]	; (2c94 <pow+0x34c>)
    2c1a:	0020      	movs	r0, r4
    2c1c:	0029      	movs	r1, r5
    2c1e:	f002 fa95 	bl	514c <__aeabi_dmul>
    2c22:	0004      	movs	r4, r0
    2c24:	000d      	movs	r5, r1
    2c26:	f001 f869 	bl	3cfc <rint>
    2c2a:	0002      	movs	r2, r0
    2c2c:	000b      	movs	r3, r1
    2c2e:	0020      	movs	r0, r4
    2c30:	0029      	movs	r1, r5
    2c32:	f001 fafb 	bl	422c <__aeabi_dcmpeq>
    2c36:	2800      	cmp	r0, #0
    2c38:	d1d7      	bne.n	2bea <pow+0x2a2>
    2c3a:	2200      	movs	r2, #0
    2c3c:	4b13      	ldr	r3, [pc, #76]	; (2c8c <pow+0x344>)
    2c3e:	e7d1      	b.n	2be4 <pow+0x29c>
    2c40:	2301      	movs	r3, #1
    2c42:	4642      	mov	r2, r8
    2c44:	9304      	str	r3, [sp, #16]
    2c46:	4b0f      	ldr	r3, [pc, #60]	; (2c84 <pow+0x33c>)
    2c48:	6053      	str	r3, [r2, #4]
    2c4a:	4643      	mov	r3, r8
    2c4c:	464a      	mov	r2, r9
    2c4e:	611c      	str	r4, [r3, #16]
    2c50:	615d      	str	r5, [r3, #20]
    2c52:	621a      	str	r2, [r3, #32]
    2c54:	609e      	str	r6, [r3, #8]
    2c56:	60df      	str	r7, [r3, #12]
    2c58:	2400      	movs	r4, #0
    2c5a:	4653      	mov	r3, sl
    2c5c:	571c      	ldrsb	r4, [r3, r4]
    2c5e:	2c00      	cmp	r4, #0
    2c60:	d100      	bne.n	2c64 <pow+0x31c>
    2c62:	e70b      	b.n	2a7c <pow+0x134>
    2c64:	2300      	movs	r3, #0
    2c66:	2200      	movs	r2, #0
    2c68:	0019      	movs	r1, r3
    2c6a:	0010      	movs	r0, r2
    2c6c:	f001 fe3a 	bl	48e4 <__aeabi_ddiv>
    2c70:	4643      	mov	r3, r8
    2c72:	6198      	str	r0, [r3, #24]
    2c74:	61d9      	str	r1, [r3, #28]
    2c76:	2c02      	cmp	r4, #2
    2c78:	d100      	bne.n	2c7c <pow+0x334>
    2c7a:	e741      	b.n	2b00 <pow+0x1b8>
    2c7c:	e703      	b.n	2a86 <pow+0x13e>
    2c7e:	46c0      	nop			; (mov r8, r8)
    2c80:	20000004 	.word	0x20000004
    2c84:	000060ac 	.word	0x000060ac
    2c88:	3ff00000 	.word	0x3ff00000
    2c8c:	fff00000 	.word	0xfff00000
    2c90:	47efffff 	.word	0x47efffff
    2c94:	3fe00000 	.word	0x3fe00000
    2c98:	c7efffff 	.word	0xc7efffff
    2c9c:	7ff00000 	.word	0x7ff00000

00002ca0 <__ieee754_log>:
    2ca0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ca2:	46d6      	mov	lr, sl
    2ca4:	464f      	mov	r7, r9
    2ca6:	4646      	mov	r6, r8
    2ca8:	b5c0      	push	{r6, r7, lr}
    2caa:	4ada      	ldr	r2, [pc, #872]	; (3014 <__ieee754_log+0x374>)
    2cac:	b088      	sub	sp, #32
    2cae:	000b      	movs	r3, r1
    2cb0:	4291      	cmp	r1, r2
    2cb2:	dc55      	bgt.n	2d60 <__ieee754_log+0xc0>
    2cb4:	004a      	lsls	r2, r1, #1
    2cb6:	0852      	lsrs	r2, r2, #1
    2cb8:	4302      	orrs	r2, r0
    2cba:	d100      	bne.n	2cbe <__ieee754_log+0x1e>
    2cbc:	e0ef      	b.n	2e9e <__ieee754_log+0x1fe>
    2cbe:	2900      	cmp	r1, #0
    2cc0:	da00      	bge.n	2cc4 <__ieee754_log+0x24>
    2cc2:	e179      	b.n	2fb8 <__ieee754_log+0x318>
    2cc4:	4bd4      	ldr	r3, [pc, #848]	; (3018 <__ieee754_log+0x378>)
    2cc6:	2200      	movs	r2, #0
    2cc8:	f002 fa40 	bl	514c <__aeabi_dmul>
    2ccc:	2536      	movs	r5, #54	; 0x36
    2cce:	4cd3      	ldr	r4, [pc, #844]	; (301c <__ieee754_log+0x37c>)
    2cd0:	000b      	movs	r3, r1
    2cd2:	426d      	negs	r5, r5
    2cd4:	42a3      	cmp	r3, r4
    2cd6:	dc47      	bgt.n	2d68 <__ieee754_log+0xc8>
    2cd8:	151a      	asrs	r2, r3, #20
    2cda:	4cd1      	ldr	r4, [pc, #836]	; (3020 <__ieee754_log+0x380>)
    2cdc:	031b      	lsls	r3, r3, #12
    2cde:	0b1b      	lsrs	r3, r3, #12
    2ce0:	4698      	mov	r8, r3
    2ce2:	46a4      	mov	ip, r4
    2ce4:	2480      	movs	r4, #128	; 0x80
    2ce6:	4bcf      	ldr	r3, [pc, #828]	; (3024 <__ieee754_log+0x384>)
    2ce8:	0364      	lsls	r4, r4, #13
    2cea:	4443      	add	r3, r8
    2cec:	4023      	ands	r3, r4
    2cee:	4cce      	ldr	r4, [pc, #824]	; (3028 <__ieee754_log+0x388>)
    2cf0:	4462      	add	r2, ip
    2cf2:	1952      	adds	r2, r2, r5
    2cf4:	405c      	eors	r4, r3
    2cf6:	4645      	mov	r5, r8
    2cf8:	151b      	asrs	r3, r3, #20
    2cfa:	4699      	mov	r9, r3
    2cfc:	4325      	orrs	r5, r4
    2cfe:	4bca      	ldr	r3, [pc, #808]	; (3028 <__ieee754_log+0x388>)
    2d00:	0029      	movs	r1, r5
    2d02:	4491      	add	r9, r2
    2d04:	2200      	movs	r2, #0
    2d06:	f002 fca1 	bl	564c <__aeabi_dsub>
    2d0a:	4643      	mov	r3, r8
    2d0c:	3302      	adds	r3, #2
    2d0e:	031b      	lsls	r3, r3, #12
    2d10:	0006      	movs	r6, r0
    2d12:	000f      	movs	r7, r1
    2d14:	0b1b      	lsrs	r3, r3, #12
    2d16:	2200      	movs	r2, #0
    2d18:	2b02      	cmp	r3, #2
    2d1a:	dc2f      	bgt.n	2d7c <__ieee754_log+0xdc>
    2d1c:	2300      	movs	r3, #0
    2d1e:	f001 fa85 	bl	422c <__aeabi_dcmpeq>
    2d22:	2800      	cmp	r0, #0
    2d24:	d100      	bne.n	2d28 <__ieee754_log+0x88>
    2d26:	e0c1      	b.n	2eac <__ieee754_log+0x20c>
    2d28:	464b      	mov	r3, r9
    2d2a:	2b00      	cmp	r3, #0
    2d2c:	d100      	bne.n	2d30 <__ieee754_log+0x90>
    2d2e:	e14c      	b.n	2fca <__ieee754_log+0x32a>
    2d30:	4648      	mov	r0, r9
    2d32:	f002 fff5 	bl	5d20 <__aeabi_i2d>
    2d36:	4abd      	ldr	r2, [pc, #756]	; (302c <__ieee754_log+0x38c>)
    2d38:	4bbd      	ldr	r3, [pc, #756]	; (3030 <__ieee754_log+0x390>)
    2d3a:	0004      	movs	r4, r0
    2d3c:	000d      	movs	r5, r1
    2d3e:	f002 fa05 	bl	514c <__aeabi_dmul>
    2d42:	4abc      	ldr	r2, [pc, #752]	; (3034 <__ieee754_log+0x394>)
    2d44:	0006      	movs	r6, r0
    2d46:	000f      	movs	r7, r1
    2d48:	4bbb      	ldr	r3, [pc, #748]	; (3038 <__ieee754_log+0x398>)
    2d4a:	0020      	movs	r0, r4
    2d4c:	0029      	movs	r1, r5
    2d4e:	f002 f9fd 	bl	514c <__aeabi_dmul>
    2d52:	0002      	movs	r2, r0
    2d54:	000b      	movs	r3, r1
    2d56:	0030      	movs	r0, r6
    2d58:	0039      	movs	r1, r7
    2d5a:	f001 fab3 	bl	42c4 <__aeabi_dadd>
    2d5e:	e007      	b.n	2d70 <__ieee754_log+0xd0>
    2d60:	4cae      	ldr	r4, [pc, #696]	; (301c <__ieee754_log+0x37c>)
    2d62:	2500      	movs	r5, #0
    2d64:	42a3      	cmp	r3, r4
    2d66:	ddb7      	ble.n	2cd8 <__ieee754_log+0x38>
    2d68:	0002      	movs	r2, r0
    2d6a:	000b      	movs	r3, r1
    2d6c:	f001 faaa 	bl	42c4 <__aeabi_dadd>
    2d70:	b008      	add	sp, #32
    2d72:	bc1c      	pop	{r2, r3, r4}
    2d74:	4690      	mov	r8, r2
    2d76:	4699      	mov	r9, r3
    2d78:	46a2      	mov	sl, r4
    2d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d7c:	2380      	movs	r3, #128	; 0x80
    2d7e:	05db      	lsls	r3, r3, #23
    2d80:	f001 faa0 	bl	42c4 <__aeabi_dadd>
    2d84:	0002      	movs	r2, r0
    2d86:	000b      	movs	r3, r1
    2d88:	0030      	movs	r0, r6
    2d8a:	0039      	movs	r1, r7
    2d8c:	f001 fdaa 	bl	48e4 <__aeabi_ddiv>
    2d90:	0004      	movs	r4, r0
    2d92:	4648      	mov	r0, r9
    2d94:	000d      	movs	r5, r1
    2d96:	f002 ffc3 	bl	5d20 <__aeabi_i2d>
    2d9a:	0022      	movs	r2, r4
    2d9c:	9002      	str	r0, [sp, #8]
    2d9e:	9103      	str	r1, [sp, #12]
    2da0:	002b      	movs	r3, r5
    2da2:	0020      	movs	r0, r4
    2da4:	0029      	movs	r1, r5
    2da6:	9404      	str	r4, [sp, #16]
    2da8:	9505      	str	r5, [sp, #20]
    2daa:	f002 f9cf 	bl	514c <__aeabi_dmul>
    2dae:	0004      	movs	r4, r0
    2db0:	000d      	movs	r5, r1
    2db2:	4ba2      	ldr	r3, [pc, #648]	; (303c <__ieee754_log+0x39c>)
    2db4:	0002      	movs	r2, r0
    2db6:	4443      	add	r3, r8
    2db8:	469a      	mov	sl, r3
    2dba:	000b      	movs	r3, r1
    2dbc:	9400      	str	r4, [sp, #0]
    2dbe:	9501      	str	r5, [sp, #4]
    2dc0:	f002 f9c4 	bl	514c <__aeabi_dmul>
    2dc4:	0004      	movs	r4, r0
    2dc6:	000d      	movs	r5, r1
    2dc8:	4a9d      	ldr	r2, [pc, #628]	; (3040 <__ieee754_log+0x3a0>)
    2dca:	4b9e      	ldr	r3, [pc, #632]	; (3044 <__ieee754_log+0x3a4>)
    2dcc:	f002 f9be 	bl	514c <__aeabi_dmul>
    2dd0:	4a9d      	ldr	r2, [pc, #628]	; (3048 <__ieee754_log+0x3a8>)
    2dd2:	4b9e      	ldr	r3, [pc, #632]	; (304c <__ieee754_log+0x3ac>)
    2dd4:	f001 fa76 	bl	42c4 <__aeabi_dadd>
    2dd8:	0022      	movs	r2, r4
    2dda:	002b      	movs	r3, r5
    2ddc:	f002 f9b6 	bl	514c <__aeabi_dmul>
    2de0:	4a9b      	ldr	r2, [pc, #620]	; (3050 <__ieee754_log+0x3b0>)
    2de2:	4b9c      	ldr	r3, [pc, #624]	; (3054 <__ieee754_log+0x3b4>)
    2de4:	f001 fa6e 	bl	42c4 <__aeabi_dadd>
    2de8:	0022      	movs	r2, r4
    2dea:	002b      	movs	r3, r5
    2dec:	f002 f9ae 	bl	514c <__aeabi_dmul>
    2df0:	4a99      	ldr	r2, [pc, #612]	; (3058 <__ieee754_log+0x3b8>)
    2df2:	4b9a      	ldr	r3, [pc, #616]	; (305c <__ieee754_log+0x3bc>)
    2df4:	f001 fa66 	bl	42c4 <__aeabi_dadd>
    2df8:	9a00      	ldr	r2, [sp, #0]
    2dfa:	9b01      	ldr	r3, [sp, #4]
    2dfc:	f002 f9a6 	bl	514c <__aeabi_dmul>
    2e00:	4a97      	ldr	r2, [pc, #604]	; (3060 <__ieee754_log+0x3c0>)
    2e02:	9000      	str	r0, [sp, #0]
    2e04:	9101      	str	r1, [sp, #4]
    2e06:	4b97      	ldr	r3, [pc, #604]	; (3064 <__ieee754_log+0x3c4>)
    2e08:	0020      	movs	r0, r4
    2e0a:	0029      	movs	r1, r5
    2e0c:	f002 f99e 	bl	514c <__aeabi_dmul>
    2e10:	4a95      	ldr	r2, [pc, #596]	; (3068 <__ieee754_log+0x3c8>)
    2e12:	4b96      	ldr	r3, [pc, #600]	; (306c <__ieee754_log+0x3cc>)
    2e14:	f001 fa56 	bl	42c4 <__aeabi_dadd>
    2e18:	0022      	movs	r2, r4
    2e1a:	002b      	movs	r3, r5
    2e1c:	f002 f996 	bl	514c <__aeabi_dmul>
    2e20:	4a93      	ldr	r2, [pc, #588]	; (3070 <__ieee754_log+0x3d0>)
    2e22:	4b94      	ldr	r3, [pc, #592]	; (3074 <__ieee754_log+0x3d4>)
    2e24:	f001 fa4e 	bl	42c4 <__aeabi_dadd>
    2e28:	0022      	movs	r2, r4
    2e2a:	002b      	movs	r3, r5
    2e2c:	f002 f98e 	bl	514c <__aeabi_dmul>
    2e30:	000b      	movs	r3, r1
    2e32:	0002      	movs	r2, r0
    2e34:	9800      	ldr	r0, [sp, #0]
    2e36:	9901      	ldr	r1, [sp, #4]
    2e38:	f001 fa44 	bl	42c4 <__aeabi_dadd>
    2e3c:	000d      	movs	r5, r1
    2e3e:	4641      	mov	r1, r8
    2e40:	4b8d      	ldr	r3, [pc, #564]	; (3078 <__ieee754_log+0x3d8>)
    2e42:	0004      	movs	r4, r0
    2e44:	1a5b      	subs	r3, r3, r1
    2e46:	4651      	mov	r1, sl
    2e48:	430b      	orrs	r3, r1
    2e4a:	2b00      	cmp	r3, #0
    2e4c:	dd54      	ble.n	2ef8 <__ieee754_log+0x258>
    2e4e:	2200      	movs	r2, #0
    2e50:	4b8a      	ldr	r3, [pc, #552]	; (307c <__ieee754_log+0x3dc>)
    2e52:	0030      	movs	r0, r6
    2e54:	0039      	movs	r1, r7
    2e56:	f002 f979 	bl	514c <__aeabi_dmul>
    2e5a:	0032      	movs	r2, r6
    2e5c:	003b      	movs	r3, r7
    2e5e:	f002 f975 	bl	514c <__aeabi_dmul>
    2e62:	464b      	mov	r3, r9
    2e64:	000a      	movs	r2, r1
    2e66:	0001      	movs	r1, r0
    2e68:	9100      	str	r1, [sp, #0]
    2e6a:	9201      	str	r2, [sp, #4]
    2e6c:	2b00      	cmp	r3, #0
    2e6e:	d172      	bne.n	2f56 <__ieee754_log+0x2b6>
    2e70:	0013      	movs	r3, r2
    2e72:	0029      	movs	r1, r5
    2e74:	0002      	movs	r2, r0
    2e76:	0020      	movs	r0, r4
    2e78:	f001 fa24 	bl	42c4 <__aeabi_dadd>
    2e7c:	9a04      	ldr	r2, [sp, #16]
    2e7e:	9b05      	ldr	r3, [sp, #20]
    2e80:	f002 f964 	bl	514c <__aeabi_dmul>
    2e84:	0002      	movs	r2, r0
    2e86:	000b      	movs	r3, r1
    2e88:	9800      	ldr	r0, [sp, #0]
    2e8a:	9901      	ldr	r1, [sp, #4]
    2e8c:	f002 fbde 	bl	564c <__aeabi_dsub>
    2e90:	0002      	movs	r2, r0
    2e92:	000b      	movs	r3, r1
    2e94:	0030      	movs	r0, r6
    2e96:	0039      	movs	r1, r7
    2e98:	f002 fbd8 	bl	564c <__aeabi_dsub>
    2e9c:	e768      	b.n	2d70 <__ieee754_log+0xd0>
    2e9e:	2200      	movs	r2, #0
    2ea0:	2300      	movs	r3, #0
    2ea2:	2000      	movs	r0, #0
    2ea4:	4976      	ldr	r1, [pc, #472]	; (3080 <__ieee754_log+0x3e0>)
    2ea6:	f001 fd1d 	bl	48e4 <__aeabi_ddiv>
    2eaa:	e761      	b.n	2d70 <__ieee754_log+0xd0>
    2eac:	4a75      	ldr	r2, [pc, #468]	; (3084 <__ieee754_log+0x3e4>)
    2eae:	4b76      	ldr	r3, [pc, #472]	; (3088 <__ieee754_log+0x3e8>)
    2eb0:	0030      	movs	r0, r6
    2eb2:	0039      	movs	r1, r7
    2eb4:	f002 f94a 	bl	514c <__aeabi_dmul>
    2eb8:	0002      	movs	r2, r0
    2eba:	000b      	movs	r3, r1
    2ebc:	2000      	movs	r0, #0
    2ebe:	496f      	ldr	r1, [pc, #444]	; (307c <__ieee754_log+0x3dc>)
    2ec0:	f002 fbc4 	bl	564c <__aeabi_dsub>
    2ec4:	0032      	movs	r2, r6
    2ec6:	0004      	movs	r4, r0
    2ec8:	000d      	movs	r5, r1
    2eca:	003b      	movs	r3, r7
    2ecc:	0030      	movs	r0, r6
    2ece:	0039      	movs	r1, r7
    2ed0:	f002 f93c 	bl	514c <__aeabi_dmul>
    2ed4:	000b      	movs	r3, r1
    2ed6:	0002      	movs	r2, r0
    2ed8:	0029      	movs	r1, r5
    2eda:	0020      	movs	r0, r4
    2edc:	f002 f936 	bl	514c <__aeabi_dmul>
    2ee0:	464b      	mov	r3, r9
    2ee2:	0004      	movs	r4, r0
    2ee4:	000d      	movs	r5, r1
    2ee6:	2b00      	cmp	r3, #0
    2ee8:	d172      	bne.n	2fd0 <__ieee754_log+0x330>
    2eea:	0002      	movs	r2, r0
    2eec:	000b      	movs	r3, r1
    2eee:	0030      	movs	r0, r6
    2ef0:	0039      	movs	r1, r7
    2ef2:	f002 fbab 	bl	564c <__aeabi_dsub>
    2ef6:	e73b      	b.n	2d70 <__ieee754_log+0xd0>
    2ef8:	464b      	mov	r3, r9
    2efa:	2b00      	cmp	r3, #0
    2efc:	d100      	bne.n	2f00 <__ieee754_log+0x260>
    2efe:	e0c5      	b.n	308c <__ieee754_log+0x3ec>
    2f00:	9802      	ldr	r0, [sp, #8]
    2f02:	9903      	ldr	r1, [sp, #12]
    2f04:	4a49      	ldr	r2, [pc, #292]	; (302c <__ieee754_log+0x38c>)
    2f06:	4b4a      	ldr	r3, [pc, #296]	; (3030 <__ieee754_log+0x390>)
    2f08:	f002 f920 	bl	514c <__aeabi_dmul>
    2f0c:	0022      	movs	r2, r4
    2f0e:	9000      	str	r0, [sp, #0]
    2f10:	9101      	str	r1, [sp, #4]
    2f12:	002b      	movs	r3, r5
    2f14:	0030      	movs	r0, r6
    2f16:	0039      	movs	r1, r7
    2f18:	f002 fb98 	bl	564c <__aeabi_dsub>
    2f1c:	9a04      	ldr	r2, [sp, #16]
    2f1e:	9b05      	ldr	r3, [sp, #20]
    2f20:	f002 f914 	bl	514c <__aeabi_dmul>
    2f24:	4a43      	ldr	r2, [pc, #268]	; (3034 <__ieee754_log+0x394>)
    2f26:	0004      	movs	r4, r0
    2f28:	000d      	movs	r5, r1
    2f2a:	9802      	ldr	r0, [sp, #8]
    2f2c:	9903      	ldr	r1, [sp, #12]
    2f2e:	4b42      	ldr	r3, [pc, #264]	; (3038 <__ieee754_log+0x398>)
    2f30:	f002 f90c 	bl	514c <__aeabi_dmul>
    2f34:	0002      	movs	r2, r0
    2f36:	000b      	movs	r3, r1
    2f38:	0020      	movs	r0, r4
    2f3a:	0029      	movs	r1, r5
    2f3c:	f002 fb86 	bl	564c <__aeabi_dsub>
    2f40:	0032      	movs	r2, r6
    2f42:	003b      	movs	r3, r7
    2f44:	f002 fb82 	bl	564c <__aeabi_dsub>
    2f48:	0002      	movs	r2, r0
    2f4a:	000b      	movs	r3, r1
    2f4c:	9800      	ldr	r0, [sp, #0]
    2f4e:	9901      	ldr	r1, [sp, #4]
    2f50:	f002 fb7c 	bl	564c <__aeabi_dsub>
    2f54:	e70c      	b.n	2d70 <__ieee754_log+0xd0>
    2f56:	4a35      	ldr	r2, [pc, #212]	; (302c <__ieee754_log+0x38c>)
    2f58:	4b35      	ldr	r3, [pc, #212]	; (3030 <__ieee754_log+0x390>)
    2f5a:	9802      	ldr	r0, [sp, #8]
    2f5c:	9903      	ldr	r1, [sp, #12]
    2f5e:	f002 f8f5 	bl	514c <__aeabi_dmul>
    2f62:	9a00      	ldr	r2, [sp, #0]
    2f64:	9b01      	ldr	r3, [sp, #4]
    2f66:	9006      	str	r0, [sp, #24]
    2f68:	9107      	str	r1, [sp, #28]
    2f6a:	0020      	movs	r0, r4
    2f6c:	0029      	movs	r1, r5
    2f6e:	f001 f9a9 	bl	42c4 <__aeabi_dadd>
    2f72:	9a04      	ldr	r2, [sp, #16]
    2f74:	9b05      	ldr	r3, [sp, #20]
    2f76:	f002 f8e9 	bl	514c <__aeabi_dmul>
    2f7a:	4a2e      	ldr	r2, [pc, #184]	; (3034 <__ieee754_log+0x394>)
    2f7c:	0004      	movs	r4, r0
    2f7e:	000d      	movs	r5, r1
    2f80:	9802      	ldr	r0, [sp, #8]
    2f82:	9903      	ldr	r1, [sp, #12]
    2f84:	4b2c      	ldr	r3, [pc, #176]	; (3038 <__ieee754_log+0x398>)
    2f86:	f002 f8e1 	bl	514c <__aeabi_dmul>
    2f8a:	0002      	movs	r2, r0
    2f8c:	000b      	movs	r3, r1
    2f8e:	0020      	movs	r0, r4
    2f90:	0029      	movs	r1, r5
    2f92:	f001 f997 	bl	42c4 <__aeabi_dadd>
    2f96:	0002      	movs	r2, r0
    2f98:	000b      	movs	r3, r1
    2f9a:	9800      	ldr	r0, [sp, #0]
    2f9c:	9901      	ldr	r1, [sp, #4]
    2f9e:	f002 fb55 	bl	564c <__aeabi_dsub>
    2fa2:	0032      	movs	r2, r6
    2fa4:	003b      	movs	r3, r7
    2fa6:	f002 fb51 	bl	564c <__aeabi_dsub>
    2faa:	0002      	movs	r2, r0
    2fac:	000b      	movs	r3, r1
    2fae:	9806      	ldr	r0, [sp, #24]
    2fb0:	9907      	ldr	r1, [sp, #28]
    2fb2:	f002 fb4b 	bl	564c <__aeabi_dsub>
    2fb6:	e6db      	b.n	2d70 <__ieee754_log+0xd0>
    2fb8:	0002      	movs	r2, r0
    2fba:	000b      	movs	r3, r1
    2fbc:	f002 fb46 	bl	564c <__aeabi_dsub>
    2fc0:	2200      	movs	r2, #0
    2fc2:	2300      	movs	r3, #0
    2fc4:	f001 fc8e 	bl	48e4 <__aeabi_ddiv>
    2fc8:	e6d2      	b.n	2d70 <__ieee754_log+0xd0>
    2fca:	2000      	movs	r0, #0
    2fcc:	2100      	movs	r1, #0
    2fce:	e6cf      	b.n	2d70 <__ieee754_log+0xd0>
    2fd0:	4648      	mov	r0, r9
    2fd2:	f002 fea5 	bl	5d20 <__aeabi_i2d>
    2fd6:	4a15      	ldr	r2, [pc, #84]	; (302c <__ieee754_log+0x38c>)
    2fd8:	4b15      	ldr	r3, [pc, #84]	; (3030 <__ieee754_log+0x390>)
    2fda:	9000      	str	r0, [sp, #0]
    2fdc:	9101      	str	r1, [sp, #4]
    2fde:	f002 f8b5 	bl	514c <__aeabi_dmul>
    2fe2:	4a14      	ldr	r2, [pc, #80]	; (3034 <__ieee754_log+0x394>)
    2fe4:	9002      	str	r0, [sp, #8]
    2fe6:	9103      	str	r1, [sp, #12]
    2fe8:	9800      	ldr	r0, [sp, #0]
    2fea:	9901      	ldr	r1, [sp, #4]
    2fec:	4b12      	ldr	r3, [pc, #72]	; (3038 <__ieee754_log+0x398>)
    2fee:	f002 f8ad 	bl	514c <__aeabi_dmul>
    2ff2:	0002      	movs	r2, r0
    2ff4:	000b      	movs	r3, r1
    2ff6:	0020      	movs	r0, r4
    2ff8:	0029      	movs	r1, r5
    2ffa:	f002 fb27 	bl	564c <__aeabi_dsub>
    2ffe:	0032      	movs	r2, r6
    3000:	003b      	movs	r3, r7
    3002:	f002 fb23 	bl	564c <__aeabi_dsub>
    3006:	0002      	movs	r2, r0
    3008:	000b      	movs	r3, r1
    300a:	9802      	ldr	r0, [sp, #8]
    300c:	9903      	ldr	r1, [sp, #12]
    300e:	f002 fb1d 	bl	564c <__aeabi_dsub>
    3012:	e6ad      	b.n	2d70 <__ieee754_log+0xd0>
    3014:	000fffff 	.word	0x000fffff
    3018:	43500000 	.word	0x43500000
    301c:	7fefffff 	.word	0x7fefffff
    3020:	fffffc01 	.word	0xfffffc01
    3024:	00095f64 	.word	0x00095f64
    3028:	3ff00000 	.word	0x3ff00000
    302c:	fee00000 	.word	0xfee00000
    3030:	3fe62e42 	.word	0x3fe62e42
    3034:	35793c76 	.word	0x35793c76
    3038:	3dea39ef 	.word	0x3dea39ef
    303c:	fff9eb86 	.word	0xfff9eb86
    3040:	df3e5244 	.word	0xdf3e5244
    3044:	3fc2f112 	.word	0x3fc2f112
    3048:	96cb03de 	.word	0x96cb03de
    304c:	3fc74664 	.word	0x3fc74664
    3050:	94229359 	.word	0x94229359
    3054:	3fd24924 	.word	0x3fd24924
    3058:	55555593 	.word	0x55555593
    305c:	3fe55555 	.word	0x3fe55555
    3060:	d078c69f 	.word	0xd078c69f
    3064:	3fc39a09 	.word	0x3fc39a09
    3068:	1d8e78af 	.word	0x1d8e78af
    306c:	3fcc71c5 	.word	0x3fcc71c5
    3070:	9997fa04 	.word	0x9997fa04
    3074:	3fd99999 	.word	0x3fd99999
    3078:	0006b851 	.word	0x0006b851
    307c:	3fe00000 	.word	0x3fe00000
    3080:	c3500000 	.word	0xc3500000
    3084:	55555555 	.word	0x55555555
    3088:	3fd55555 	.word	0x3fd55555
    308c:	0022      	movs	r2, r4
    308e:	002b      	movs	r3, r5
    3090:	0030      	movs	r0, r6
    3092:	0039      	movs	r1, r7
    3094:	f002 fada 	bl	564c <__aeabi_dsub>
    3098:	9a04      	ldr	r2, [sp, #16]
    309a:	9b05      	ldr	r3, [sp, #20]
    309c:	f002 f856 	bl	514c <__aeabi_dmul>
    30a0:	e6f6      	b.n	2e90 <__ieee754_log+0x1f0>
    30a2:	46c0      	nop			; (mov r8, r8)

000030a4 <__ieee754_pow>:
    30a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    30a6:	4657      	mov	r7, sl
    30a8:	464e      	mov	r6, r9
    30aa:	4645      	mov	r5, r8
    30ac:	46de      	mov	lr, fp
    30ae:	001c      	movs	r4, r3
    30b0:	0013      	movs	r3, r2
    30b2:	b5e0      	push	{r5, r6, r7, lr}
    30b4:	0065      	lsls	r5, r4, #1
    30b6:	b091      	sub	sp, #68	; 0x44
    30b8:	086d      	lsrs	r5, r5, #1
    30ba:	9300      	str	r3, [sp, #0]
    30bc:	9401      	str	r4, [sp, #4]
    30be:	0007      	movs	r7, r0
    30c0:	000e      	movs	r6, r1
    30c2:	4680      	mov	r8, r0
    30c4:	4689      	mov	r9, r1
    30c6:	46a2      	mov	sl, r4
    30c8:	432b      	orrs	r3, r5
    30ca:	d031      	beq.n	3130 <__ieee754_pow+0x8c>
    30cc:	4b67      	ldr	r3, [pc, #412]	; (326c <__ieee754_pow+0x1c8>)
    30ce:	0074      	lsls	r4, r6, #1
    30d0:	0864      	lsrs	r4, r4, #1
    30d2:	429c      	cmp	r4, r3
    30d4:	dc27      	bgt.n	3126 <__ieee754_pow+0x82>
    30d6:	d024      	beq.n	3122 <__ieee754_pow+0x7e>
    30d8:	429d      	cmp	r5, r3
    30da:	dc24      	bgt.n	3126 <__ieee754_pow+0x82>
    30dc:	4b63      	ldr	r3, [pc, #396]	; (326c <__ieee754_pow+0x1c8>)
    30de:	429d      	cmp	r5, r3
    30e0:	d100      	bne.n	30e4 <__ieee754_pow+0x40>
    30e2:	e081      	b.n	31e8 <__ieee754_pow+0x144>
    30e4:	2300      	movs	r3, #0
    30e6:	469b      	mov	fp, r3
    30e8:	464b      	mov	r3, r9
    30ea:	2b00      	cmp	r3, #0
    30ec:	da00      	bge.n	30f0 <__ieee754_pow+0x4c>
    30ee:	e07f      	b.n	31f0 <__ieee754_pow+0x14c>
    30f0:	2a00      	cmp	r2, #0
    30f2:	d12c      	bne.n	314e <__ieee754_pow+0xaa>
    30f4:	4b5d      	ldr	r3, [pc, #372]	; (326c <__ieee754_pow+0x1c8>)
    30f6:	429d      	cmp	r5, r3
    30f8:	d100      	bne.n	30fc <__ieee754_pow+0x58>
    30fa:	e097      	b.n	322c <__ieee754_pow+0x188>
    30fc:	4b5c      	ldr	r3, [pc, #368]	; (3270 <__ieee754_pow+0x1cc>)
    30fe:	429d      	cmp	r5, r3
    3100:	d066      	beq.n	31d0 <__ieee754_pow+0x12c>
    3102:	2380      	movs	r3, #128	; 0x80
    3104:	05db      	lsls	r3, r3, #23
    3106:	459a      	cmp	sl, r3
    3108:	d100      	bne.n	310c <__ieee754_pow+0x68>
    310a:	e3b9      	b.n	3880 <__ieee754_pow+0x7dc>
    310c:	4b59      	ldr	r3, [pc, #356]	; (3274 <__ieee754_pow+0x1d0>)
    310e:	459a      	cmp	sl, r3
    3110:	d11d      	bne.n	314e <__ieee754_pow+0xaa>
    3112:	464b      	mov	r3, r9
    3114:	2b00      	cmp	r3, #0
    3116:	db1a      	blt.n	314e <__ieee754_pow+0xaa>
    3118:	0038      	movs	r0, r7
    311a:	0031      	movs	r1, r6
    311c:	f000 fcf8 	bl	3b10 <__ieee754_sqrt>
    3120:	e008      	b.n	3134 <__ieee754_pow+0x90>
    3122:	2800      	cmp	r0, #0
    3124:	d00d      	beq.n	3142 <__ieee754_pow+0x9e>
    3126:	4b54      	ldr	r3, [pc, #336]	; (3278 <__ieee754_pow+0x1d4>)
    3128:	469c      	mov	ip, r3
    312a:	4464      	add	r4, ip
    312c:	4327      	orrs	r7, r4
    312e:	d10a      	bne.n	3146 <__ieee754_pow+0xa2>
    3130:	2000      	movs	r0, #0
    3132:	494f      	ldr	r1, [pc, #316]	; (3270 <__ieee754_pow+0x1cc>)
    3134:	b011      	add	sp, #68	; 0x44
    3136:	bc3c      	pop	{r2, r3, r4, r5}
    3138:	4690      	mov	r8, r2
    313a:	4699      	mov	r9, r3
    313c:	46a2      	mov	sl, r4
    313e:	46ab      	mov	fp, r5
    3140:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3142:	42a5      	cmp	r5, r4
    3144:	ddca      	ble.n	30dc <__ieee754_pow+0x38>
    3146:	484d      	ldr	r0, [pc, #308]	; (327c <__ieee754_pow+0x1d8>)
    3148:	f000 fdd2 	bl	3cf0 <nan>
    314c:	e7f2      	b.n	3134 <__ieee754_pow+0x90>
    314e:	0038      	movs	r0, r7
    3150:	0031      	movs	r1, r6
    3152:	f000 fdbd 	bl	3cd0 <fabs>
    3156:	4643      	mov	r3, r8
    3158:	2b00      	cmp	r3, #0
    315a:	d11d      	bne.n	3198 <__ieee754_pow+0xf4>
    315c:	2c00      	cmp	r4, #0
    315e:	d004      	beq.n	316a <__ieee754_pow+0xc6>
    3160:	4a43      	ldr	r2, [pc, #268]	; (3270 <__ieee754_pow+0x1cc>)
    3162:	00b3      	lsls	r3, r6, #2
    3164:	089b      	lsrs	r3, r3, #2
    3166:	4293      	cmp	r3, r2
    3168:	d116      	bne.n	3198 <__ieee754_pow+0xf4>
    316a:	4653      	mov	r3, sl
    316c:	2b00      	cmp	r3, #0
    316e:	da00      	bge.n	3172 <__ieee754_pow+0xce>
    3170:	e3c5      	b.n	38fe <__ieee754_pow+0x85a>
    3172:	464b      	mov	r3, r9
    3174:	2b00      	cmp	r3, #0
    3176:	dadd      	bge.n	3134 <__ieee754_pow+0x90>
    3178:	4b3f      	ldr	r3, [pc, #252]	; (3278 <__ieee754_pow+0x1d4>)
    317a:	469c      	mov	ip, r3
    317c:	465b      	mov	r3, fp
    317e:	4464      	add	r4, ip
    3180:	431c      	orrs	r4, r3
    3182:	d101      	bne.n	3188 <__ieee754_pow+0xe4>
    3184:	f000 fc53 	bl	3a2e <__ieee754_pow+0x98a>
    3188:	465b      	mov	r3, fp
    318a:	2b01      	cmp	r3, #1
    318c:	d1d2      	bne.n	3134 <__ieee754_pow+0x90>
    318e:	2480      	movs	r4, #128	; 0x80
    3190:	0624      	lsls	r4, r4, #24
    3192:	190b      	adds	r3, r1, r4
    3194:	0019      	movs	r1, r3
    3196:	e7cd      	b.n	3134 <__ieee754_pow+0x90>
    3198:	0ff3      	lsrs	r3, r6, #31
    319a:	3b01      	subs	r3, #1
    319c:	4698      	mov	r8, r3
    319e:	465b      	mov	r3, fp
    31a0:	4642      	mov	r2, r8
    31a2:	4313      	orrs	r3, r2
    31a4:	d057      	beq.n	3256 <__ieee754_pow+0x1b2>
    31a6:	4b36      	ldr	r3, [pc, #216]	; (3280 <__ieee754_pow+0x1dc>)
    31a8:	429d      	cmp	r5, r3
    31aa:	dd77      	ble.n	329c <__ieee754_pow+0x1f8>
    31ac:	4b35      	ldr	r3, [pc, #212]	; (3284 <__ieee754_pow+0x1e0>)
    31ae:	429d      	cmp	r5, r3
    31b0:	dc00      	bgt.n	31b4 <__ieee754_pow+0x110>
    31b2:	e3b1      	b.n	3918 <__ieee754_pow+0x874>
    31b4:	4b34      	ldr	r3, [pc, #208]	; (3288 <__ieee754_pow+0x1e4>)
    31b6:	429c      	cmp	r4, r3
    31b8:	dc00      	bgt.n	31bc <__ieee754_pow+0x118>
    31ba:	e3a8      	b.n	390e <__ieee754_pow+0x86a>
    31bc:	4653      	mov	r3, sl
    31be:	2b00      	cmp	r3, #0
    31c0:	dd43      	ble.n	324a <__ieee754_pow+0x1a6>
    31c2:	4a32      	ldr	r2, [pc, #200]	; (328c <__ieee754_pow+0x1e8>)
    31c4:	4b32      	ldr	r3, [pc, #200]	; (3290 <__ieee754_pow+0x1ec>)
    31c6:	0010      	movs	r0, r2
    31c8:	0019      	movs	r1, r3
    31ca:	f001 ffbf 	bl	514c <__aeabi_dmul>
    31ce:	e7b1      	b.n	3134 <__ieee754_pow+0x90>
    31d0:	4653      	mov	r3, sl
    31d2:	0038      	movs	r0, r7
    31d4:	0031      	movs	r1, r6
    31d6:	2b00      	cmp	r3, #0
    31d8:	daac      	bge.n	3134 <__ieee754_pow+0x90>
    31da:	003a      	movs	r2, r7
    31dc:	0033      	movs	r3, r6
    31de:	2000      	movs	r0, #0
    31e0:	4923      	ldr	r1, [pc, #140]	; (3270 <__ieee754_pow+0x1cc>)
    31e2:	f001 fb7f 	bl	48e4 <__aeabi_ddiv>
    31e6:	e7a5      	b.n	3134 <__ieee754_pow+0x90>
    31e8:	2a00      	cmp	r2, #0
    31ea:	d100      	bne.n	31ee <__ieee754_pow+0x14a>
    31ec:	e77a      	b.n	30e4 <__ieee754_pow+0x40>
    31ee:	e79a      	b.n	3126 <__ieee754_pow+0x82>
    31f0:	4b28      	ldr	r3, [pc, #160]	; (3294 <__ieee754_pow+0x1f0>)
    31f2:	429d      	cmp	r5, r3
    31f4:	dc2c      	bgt.n	3250 <__ieee754_pow+0x1ac>
    31f6:	4b24      	ldr	r3, [pc, #144]	; (3288 <__ieee754_pow+0x1e4>)
    31f8:	429d      	cmp	r5, r3
    31fa:	dc00      	bgt.n	31fe <__ieee754_pow+0x15a>
    31fc:	e778      	b.n	30f0 <__ieee754_pow+0x4c>
    31fe:	4926      	ldr	r1, [pc, #152]	; (3298 <__ieee754_pow+0x1f4>)
    3200:	152b      	asrs	r3, r5, #20
    3202:	468c      	mov	ip, r1
    3204:	4463      	add	r3, ip
    3206:	2b14      	cmp	r3, #20
    3208:	dc01      	bgt.n	320e <__ieee754_pow+0x16a>
    320a:	f000 fbf3 	bl	39f4 <__ieee754_pow+0x950>
    320e:	2134      	movs	r1, #52	; 0x34
    3210:	1acb      	subs	r3, r1, r3
    3212:	9900      	ldr	r1, [sp, #0]
    3214:	40d9      	lsrs	r1, r3
    3216:	0008      	movs	r0, r1
    3218:	4098      	lsls	r0, r3
    321a:	4282      	cmp	r2, r0
    321c:	d000      	beq.n	3220 <__ieee754_pow+0x17c>
    321e:	e767      	b.n	30f0 <__ieee754_pow+0x4c>
    3220:	2301      	movs	r3, #1
    3222:	4019      	ands	r1, r3
    3224:	3301      	adds	r3, #1
    3226:	1a5b      	subs	r3, r3, r1
    3228:	469b      	mov	fp, r3
    322a:	e761      	b.n	30f0 <__ieee754_pow+0x4c>
    322c:	4b12      	ldr	r3, [pc, #72]	; (3278 <__ieee754_pow+0x1d4>)
    322e:	18e3      	adds	r3, r4, r3
    3230:	431f      	orrs	r7, r3
    3232:	d100      	bne.n	3236 <__ieee754_pow+0x192>
    3234:	e77c      	b.n	3130 <__ieee754_pow+0x8c>
    3236:	4b14      	ldr	r3, [pc, #80]	; (3288 <__ieee754_pow+0x1e4>)
    3238:	429c      	cmp	r4, r3
    323a:	dc00      	bgt.n	323e <__ieee754_pow+0x19a>
    323c:	e327      	b.n	388e <__ieee754_pow+0x7ea>
    323e:	9800      	ldr	r0, [sp, #0]
    3240:	9901      	ldr	r1, [sp, #4]
    3242:	4653      	mov	r3, sl
    3244:	2b00      	cmp	r3, #0
    3246:	db00      	blt.n	324a <__ieee754_pow+0x1a6>
    3248:	e774      	b.n	3134 <__ieee754_pow+0x90>
    324a:	2000      	movs	r0, #0
    324c:	2100      	movs	r1, #0
    324e:	e771      	b.n	3134 <__ieee754_pow+0x90>
    3250:	2302      	movs	r3, #2
    3252:	469b      	mov	fp, r3
    3254:	e74c      	b.n	30f0 <__ieee754_pow+0x4c>
    3256:	003a      	movs	r2, r7
    3258:	0033      	movs	r3, r6
    325a:	0038      	movs	r0, r7
    325c:	0031      	movs	r1, r6
    325e:	f002 f9f5 	bl	564c <__aeabi_dsub>
    3262:	0002      	movs	r2, r0
    3264:	000b      	movs	r3, r1
    3266:	f001 fb3d 	bl	48e4 <__aeabi_ddiv>
    326a:	e763      	b.n	3134 <__ieee754_pow+0x90>
    326c:	7ff00000 	.word	0x7ff00000
    3270:	3ff00000 	.word	0x3ff00000
    3274:	3fe00000 	.word	0x3fe00000
    3278:	c0100000 	.word	0xc0100000
    327c:	000060a8 	.word	0x000060a8
    3280:	41e00000 	.word	0x41e00000
    3284:	43f00000 	.word	0x43f00000
    3288:	3fefffff 	.word	0x3fefffff
    328c:	8800759c 	.word	0x8800759c
    3290:	7e37e43c 	.word	0x7e37e43c
    3294:	433fffff 	.word	0x433fffff
    3298:	fffffc01 	.word	0xfffffc01
    329c:	4be9      	ldr	r3, [pc, #932]	; (3644 <__ieee754_pow+0x5a0>)
    329e:	2200      	movs	r2, #0
    32a0:	429c      	cmp	r4, r3
    32a2:	dc06      	bgt.n	32b2 <__ieee754_pow+0x20e>
    32a4:	2200      	movs	r2, #0
    32a6:	4be8      	ldr	r3, [pc, #928]	; (3648 <__ieee754_pow+0x5a4>)
    32a8:	f001 ff50 	bl	514c <__aeabi_dmul>
    32ac:	2235      	movs	r2, #53	; 0x35
    32ae:	000c      	movs	r4, r1
    32b0:	4252      	negs	r2, r2
    32b2:	4de6      	ldr	r5, [pc, #920]	; (364c <__ieee754_pow+0x5a8>)
    32b4:	1523      	asrs	r3, r4, #20
    32b6:	46ac      	mov	ip, r5
    32b8:	4463      	add	r3, ip
    32ba:	4699      	mov	r9, r3
    32bc:	0324      	lsls	r4, r4, #12
    32be:	4de4      	ldr	r5, [pc, #912]	; (3650 <__ieee754_pow+0x5ac>)
    32c0:	4be4      	ldr	r3, [pc, #912]	; (3654 <__ieee754_pow+0x5b0>)
    32c2:	0b24      	lsrs	r4, r4, #12
    32c4:	4491      	add	r9, r2
    32c6:	4325      	orrs	r5, r4
    32c8:	429c      	cmp	r4, r3
    32ca:	dd09      	ble.n	32e0 <__ieee754_pow+0x23c>
    32cc:	4be2      	ldr	r3, [pc, #904]	; (3658 <__ieee754_pow+0x5b4>)
    32ce:	429c      	cmp	r4, r3
    32d0:	dc00      	bgt.n	32d4 <__ieee754_pow+0x230>
    32d2:	e3b6      	b.n	3a42 <__ieee754_pow+0x99e>
    32d4:	2301      	movs	r3, #1
    32d6:	469c      	mov	ip, r3
    32d8:	4be0      	ldr	r3, [pc, #896]	; (365c <__ieee754_pow+0x5b8>)
    32da:	44e1      	add	r9, ip
    32dc:	469c      	mov	ip, r3
    32de:	4465      	add	r5, ip
    32e0:	2300      	movs	r3, #0
    32e2:	2400      	movs	r4, #0
    32e4:	2200      	movs	r2, #0
    32e6:	9308      	str	r3, [sp, #32]
    32e8:	9409      	str	r4, [sp, #36]	; 0x24
    32ea:	930c      	str	r3, [sp, #48]	; 0x30
    32ec:	940d      	str	r4, [sp, #52]	; 0x34
    32ee:	2400      	movs	r4, #0
    32f0:	4bd7      	ldr	r3, [pc, #860]	; (3650 <__ieee754_pow+0x5ac>)
    32f2:	9206      	str	r2, [sp, #24]
    32f4:	9307      	str	r3, [sp, #28]
    32f6:	9a06      	ldr	r2, [sp, #24]
    32f8:	9b07      	ldr	r3, [sp, #28]
    32fa:	0029      	movs	r1, r5
    32fc:	900a      	str	r0, [sp, #40]	; 0x28
    32fe:	910b      	str	r1, [sp, #44]	; 0x2c
    3300:	f002 f9a4 	bl	564c <__aeabi_dsub>
    3304:	9a06      	ldr	r2, [sp, #24]
    3306:	9b07      	ldr	r3, [sp, #28]
    3308:	0006      	movs	r6, r0
    330a:	000f      	movs	r7, r1
    330c:	980a      	ldr	r0, [sp, #40]	; 0x28
    330e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    3310:	f000 ffd8 	bl	42c4 <__aeabi_dadd>
    3314:	0002      	movs	r2, r0
    3316:	000b      	movs	r3, r1
    3318:	2000      	movs	r0, #0
    331a:	49cd      	ldr	r1, [pc, #820]	; (3650 <__ieee754_pow+0x5ac>)
    331c:	f001 fae2 	bl	48e4 <__aeabi_ddiv>
    3320:	000a      	movs	r2, r1
    3322:	0001      	movs	r1, r0
    3324:	0013      	movs	r3, r2
    3326:	910e      	str	r1, [sp, #56]	; 0x38
    3328:	920f      	str	r2, [sp, #60]	; 0x3c
    332a:	0002      	movs	r2, r0
    332c:	0039      	movs	r1, r7
    332e:	0030      	movs	r0, r6
    3330:	f001 ff0c 	bl	514c <__aeabi_dmul>
    3334:	000a      	movs	r2, r1
    3336:	0001      	movs	r1, r0
    3338:	2080      	movs	r0, #128	; 0x80
    333a:	9104      	str	r1, [sp, #16]
    333c:	9205      	str	r2, [sp, #20]
    333e:	0013      	movs	r3, r2
    3340:	2200      	movs	r2, #0
    3342:	1069      	asrs	r1, r5, #1
    3344:	2580      	movs	r5, #128	; 0x80
    3346:	0300      	lsls	r0, r0, #12
    3348:	4684      	mov	ip, r0
    334a:	9202      	str	r2, [sp, #8]
    334c:	9303      	str	r3, [sp, #12]
    334e:	2200      	movs	r2, #0
    3350:	05ad      	lsls	r5, r5, #22
    3352:	430d      	orrs	r5, r1
    3354:	4465      	add	r5, ip
    3356:	192b      	adds	r3, r5, r4
    3358:	9802      	ldr	r0, [sp, #8]
    335a:	9903      	ldr	r1, [sp, #12]
    335c:	0014      	movs	r4, r2
    335e:	001d      	movs	r5, r3
    3360:	f001 fef4 	bl	514c <__aeabi_dmul>
    3364:	0002      	movs	r2, r0
    3366:	000b      	movs	r3, r1
    3368:	0030      	movs	r0, r6
    336a:	0039      	movs	r1, r7
    336c:	f002 f96e 	bl	564c <__aeabi_dsub>
    3370:	9a06      	ldr	r2, [sp, #24]
    3372:	9b07      	ldr	r3, [sp, #28]
    3374:	0006      	movs	r6, r0
    3376:	000f      	movs	r7, r1
    3378:	0020      	movs	r0, r4
    337a:	0029      	movs	r1, r5
    337c:	f002 f966 	bl	564c <__aeabi_dsub>
    3380:	0002      	movs	r2, r0
    3382:	000b      	movs	r3, r1
    3384:	980a      	ldr	r0, [sp, #40]	; 0x28
    3386:	990b      	ldr	r1, [sp, #44]	; 0x2c
    3388:	f002 f960 	bl	564c <__aeabi_dsub>
    338c:	9a02      	ldr	r2, [sp, #8]
    338e:	9b03      	ldr	r3, [sp, #12]
    3390:	f001 fedc 	bl	514c <__aeabi_dmul>
    3394:	0002      	movs	r2, r0
    3396:	000b      	movs	r3, r1
    3398:	0030      	movs	r0, r6
    339a:	0039      	movs	r1, r7
    339c:	f002 f956 	bl	564c <__aeabi_dsub>
    33a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    33a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    33a4:	f001 fed2 	bl	514c <__aeabi_dmul>
    33a8:	9d04      	ldr	r5, [sp, #16]
    33aa:	9e05      	ldr	r6, [sp, #20]
    33ac:	9006      	str	r0, [sp, #24]
    33ae:	9107      	str	r1, [sp, #28]
    33b0:	002a      	movs	r2, r5
    33b2:	0033      	movs	r3, r6
    33b4:	0028      	movs	r0, r5
    33b6:	0031      	movs	r1, r6
    33b8:	f001 fec8 	bl	514c <__aeabi_dmul>
    33bc:	0006      	movs	r6, r0
    33be:	000f      	movs	r7, r1
    33c0:	4aa7      	ldr	r2, [pc, #668]	; (3660 <__ieee754_pow+0x5bc>)
    33c2:	4ba8      	ldr	r3, [pc, #672]	; (3664 <__ieee754_pow+0x5c0>)
    33c4:	f001 fec2 	bl	514c <__aeabi_dmul>
    33c8:	4aa7      	ldr	r2, [pc, #668]	; (3668 <__ieee754_pow+0x5c4>)
    33ca:	4ba8      	ldr	r3, [pc, #672]	; (366c <__ieee754_pow+0x5c8>)
    33cc:	f000 ff7a 	bl	42c4 <__aeabi_dadd>
    33d0:	0032      	movs	r2, r6
    33d2:	003b      	movs	r3, r7
    33d4:	f001 feba 	bl	514c <__aeabi_dmul>
    33d8:	4aa5      	ldr	r2, [pc, #660]	; (3670 <__ieee754_pow+0x5cc>)
    33da:	4ba6      	ldr	r3, [pc, #664]	; (3674 <__ieee754_pow+0x5d0>)
    33dc:	f000 ff72 	bl	42c4 <__aeabi_dadd>
    33e0:	0032      	movs	r2, r6
    33e2:	003b      	movs	r3, r7
    33e4:	f001 feb2 	bl	514c <__aeabi_dmul>
    33e8:	4aa3      	ldr	r2, [pc, #652]	; (3678 <__ieee754_pow+0x5d4>)
    33ea:	4ba4      	ldr	r3, [pc, #656]	; (367c <__ieee754_pow+0x5d8>)
    33ec:	f000 ff6a 	bl	42c4 <__aeabi_dadd>
    33f0:	0032      	movs	r2, r6
    33f2:	003b      	movs	r3, r7
    33f4:	f001 feaa 	bl	514c <__aeabi_dmul>
    33f8:	4aa1      	ldr	r2, [pc, #644]	; (3680 <__ieee754_pow+0x5dc>)
    33fa:	4ba2      	ldr	r3, [pc, #648]	; (3684 <__ieee754_pow+0x5e0>)
    33fc:	f000 ff62 	bl	42c4 <__aeabi_dadd>
    3400:	0032      	movs	r2, r6
    3402:	003b      	movs	r3, r7
    3404:	f001 fea2 	bl	514c <__aeabi_dmul>
    3408:	4a9f      	ldr	r2, [pc, #636]	; (3688 <__ieee754_pow+0x5e4>)
    340a:	4ba0      	ldr	r3, [pc, #640]	; (368c <__ieee754_pow+0x5e8>)
    340c:	f000 ff5a 	bl	42c4 <__aeabi_dadd>
    3410:	0032      	movs	r2, r6
    3412:	0004      	movs	r4, r0
    3414:	000d      	movs	r5, r1
    3416:	003b      	movs	r3, r7
    3418:	0030      	movs	r0, r6
    341a:	0039      	movs	r1, r7
    341c:	f001 fe96 	bl	514c <__aeabi_dmul>
    3420:	0002      	movs	r2, r0
    3422:	000b      	movs	r3, r1
    3424:	0020      	movs	r0, r4
    3426:	0029      	movs	r1, r5
    3428:	f001 fe90 	bl	514c <__aeabi_dmul>
    342c:	9e02      	ldr	r6, [sp, #8]
    342e:	9f03      	ldr	r7, [sp, #12]
    3430:	0004      	movs	r4, r0
    3432:	000d      	movs	r5, r1
    3434:	9804      	ldr	r0, [sp, #16]
    3436:	9905      	ldr	r1, [sp, #20]
    3438:	0032      	movs	r2, r6
    343a:	003b      	movs	r3, r7
    343c:	f000 ff42 	bl	42c4 <__aeabi_dadd>
    3440:	9a06      	ldr	r2, [sp, #24]
    3442:	9b07      	ldr	r3, [sp, #28]
    3444:	f001 fe82 	bl	514c <__aeabi_dmul>
    3448:	0022      	movs	r2, r4
    344a:	002b      	movs	r3, r5
    344c:	f000 ff3a 	bl	42c4 <__aeabi_dadd>
    3450:	0032      	movs	r2, r6
    3452:	900a      	str	r0, [sp, #40]	; 0x28
    3454:	910b      	str	r1, [sp, #44]	; 0x2c
    3456:	003b      	movs	r3, r7
    3458:	0030      	movs	r0, r6
    345a:	0039      	movs	r1, r7
    345c:	9602      	str	r6, [sp, #8]
    345e:	9703      	str	r7, [sp, #12]
    3460:	f001 fe74 	bl	514c <__aeabi_dmul>
    3464:	2200      	movs	r2, #0
    3466:	4b8a      	ldr	r3, [pc, #552]	; (3690 <__ieee754_pow+0x5ec>)
    3468:	0004      	movs	r4, r0
    346a:	000d      	movs	r5, r1
    346c:	f000 ff2a 	bl	42c4 <__aeabi_dadd>
    3470:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3472:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3474:	f000 ff26 	bl	42c4 <__aeabi_dadd>
    3478:	2600      	movs	r6, #0
    347a:	000f      	movs	r7, r1
    347c:	0032      	movs	r2, r6
    347e:	000b      	movs	r3, r1
    3480:	9802      	ldr	r0, [sp, #8]
    3482:	9903      	ldr	r1, [sp, #12]
    3484:	f001 fe62 	bl	514c <__aeabi_dmul>
    3488:	2200      	movs	r2, #0
    348a:	9002      	str	r0, [sp, #8]
    348c:	9103      	str	r1, [sp, #12]
    348e:	4b80      	ldr	r3, [pc, #512]	; (3690 <__ieee754_pow+0x5ec>)
    3490:	0030      	movs	r0, r6
    3492:	0039      	movs	r1, r7
    3494:	f002 f8da 	bl	564c <__aeabi_dsub>
    3498:	0022      	movs	r2, r4
    349a:	002b      	movs	r3, r5
    349c:	f002 f8d6 	bl	564c <__aeabi_dsub>
    34a0:	0002      	movs	r2, r0
    34a2:	000b      	movs	r3, r1
    34a4:	980a      	ldr	r0, [sp, #40]	; 0x28
    34a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
    34a8:	f002 f8d0 	bl	564c <__aeabi_dsub>
    34ac:	9a04      	ldr	r2, [sp, #16]
    34ae:	9b05      	ldr	r3, [sp, #20]
    34b0:	f001 fe4c 	bl	514c <__aeabi_dmul>
    34b4:	0032      	movs	r2, r6
    34b6:	0004      	movs	r4, r0
    34b8:	000d      	movs	r5, r1
    34ba:	9806      	ldr	r0, [sp, #24]
    34bc:	9907      	ldr	r1, [sp, #28]
    34be:	003b      	movs	r3, r7
    34c0:	f001 fe44 	bl	514c <__aeabi_dmul>
    34c4:	0002      	movs	r2, r0
    34c6:	000b      	movs	r3, r1
    34c8:	0020      	movs	r0, r4
    34ca:	0029      	movs	r1, r5
    34cc:	f000 fefa 	bl	42c4 <__aeabi_dadd>
    34d0:	0004      	movs	r4, r0
    34d2:	000d      	movs	r5, r1
    34d4:	0002      	movs	r2, r0
    34d6:	000b      	movs	r3, r1
    34d8:	9802      	ldr	r0, [sp, #8]
    34da:	9903      	ldr	r1, [sp, #12]
    34dc:	f000 fef2 	bl	42c4 <__aeabi_dadd>
    34e0:	2600      	movs	r6, #0
    34e2:	22e0      	movs	r2, #224	; 0xe0
    34e4:	4b6b      	ldr	r3, [pc, #428]	; (3694 <__ieee754_pow+0x5f0>)
    34e6:	0612      	lsls	r2, r2, #24
    34e8:	0030      	movs	r0, r6
    34ea:	000f      	movs	r7, r1
    34ec:	f001 fe2e 	bl	514c <__aeabi_dmul>
    34f0:	9a02      	ldr	r2, [sp, #8]
    34f2:	9b03      	ldr	r3, [sp, #12]
    34f4:	9004      	str	r0, [sp, #16]
    34f6:	9105      	str	r1, [sp, #20]
    34f8:	0030      	movs	r0, r6
    34fa:	0039      	movs	r1, r7
    34fc:	f002 f8a6 	bl	564c <__aeabi_dsub>
    3500:	0002      	movs	r2, r0
    3502:	000b      	movs	r3, r1
    3504:	0020      	movs	r0, r4
    3506:	0029      	movs	r1, r5
    3508:	f002 f8a0 	bl	564c <__aeabi_dsub>
    350c:	4a62      	ldr	r2, [pc, #392]	; (3698 <__ieee754_pow+0x5f4>)
    350e:	4b61      	ldr	r3, [pc, #388]	; (3694 <__ieee754_pow+0x5f0>)
    3510:	f001 fe1c 	bl	514c <__aeabi_dmul>
    3514:	4a61      	ldr	r2, [pc, #388]	; (369c <__ieee754_pow+0x5f8>)
    3516:	0004      	movs	r4, r0
    3518:	000d      	movs	r5, r1
    351a:	4b61      	ldr	r3, [pc, #388]	; (36a0 <__ieee754_pow+0x5fc>)
    351c:	0030      	movs	r0, r6
    351e:	0039      	movs	r1, r7
    3520:	f001 fe14 	bl	514c <__aeabi_dmul>
    3524:	0002      	movs	r2, r0
    3526:	000b      	movs	r3, r1
    3528:	0020      	movs	r0, r4
    352a:	0029      	movs	r1, r5
    352c:	f000 feca 	bl	42c4 <__aeabi_dadd>
    3530:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3532:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3534:	f000 fec6 	bl	42c4 <__aeabi_dadd>
    3538:	0006      	movs	r6, r0
    353a:	4648      	mov	r0, r9
    353c:	000f      	movs	r7, r1
    353e:	f002 fbef 	bl	5d20 <__aeabi_i2d>
    3542:	0004      	movs	r4, r0
    3544:	000d      	movs	r5, r1
    3546:	9804      	ldr	r0, [sp, #16]
    3548:	9905      	ldr	r1, [sp, #20]
    354a:	0032      	movs	r2, r6
    354c:	003b      	movs	r3, r7
    354e:	f000 feb9 	bl	42c4 <__aeabi_dadd>
    3552:	9a08      	ldr	r2, [sp, #32]
    3554:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3556:	f000 feb5 	bl	42c4 <__aeabi_dadd>
    355a:	0022      	movs	r2, r4
    355c:	002b      	movs	r3, r5
    355e:	f000 feb1 	bl	42c4 <__aeabi_dadd>
    3562:	2000      	movs	r0, #0
    3564:	0022      	movs	r2, r4
    3566:	002b      	movs	r3, r5
    3568:	9002      	str	r0, [sp, #8]
    356a:	9103      	str	r1, [sp, #12]
    356c:	f002 f86e 	bl	564c <__aeabi_dsub>
    3570:	9a08      	ldr	r2, [sp, #32]
    3572:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3574:	f002 f86a 	bl	564c <__aeabi_dsub>
    3578:	9a04      	ldr	r2, [sp, #16]
    357a:	9b05      	ldr	r3, [sp, #20]
    357c:	f002 f866 	bl	564c <__aeabi_dsub>
    3580:	0002      	movs	r2, r0
    3582:	000b      	movs	r3, r1
    3584:	0030      	movs	r0, r6
    3586:	0039      	movs	r1, r7
    3588:	f002 f860 	bl	564c <__aeabi_dsub>
    358c:	9004      	str	r0, [sp, #16]
    358e:	9105      	str	r1, [sp, #20]
    3590:	465b      	mov	r3, fp
    3592:	4642      	mov	r2, r8
    3594:	3b01      	subs	r3, #1
    3596:	4313      	orrs	r3, r2
    3598:	d100      	bne.n	359c <__ieee754_pow+0x4f8>
    359a:	e1ab      	b.n	38f4 <__ieee754_pow+0x850>
    359c:	2300      	movs	r3, #0
    359e:	4c2c      	ldr	r4, [pc, #176]	; (3650 <__ieee754_pow+0x5ac>)
    35a0:	9306      	str	r3, [sp, #24]
    35a2:	9407      	str	r4, [sp, #28]
    35a4:	9800      	ldr	r0, [sp, #0]
    35a6:	9901      	ldr	r1, [sp, #4]
    35a8:	2600      	movs	r6, #0
    35aa:	000b      	movs	r3, r1
    35ac:	0032      	movs	r2, r6
    35ae:	000f      	movs	r7, r1
    35b0:	f002 f84c 	bl	564c <__aeabi_dsub>
    35b4:	9a02      	ldr	r2, [sp, #8]
    35b6:	9b03      	ldr	r3, [sp, #12]
    35b8:	f001 fdc8 	bl	514c <__aeabi_dmul>
    35bc:	9a00      	ldr	r2, [sp, #0]
    35be:	9b01      	ldr	r3, [sp, #4]
    35c0:	0004      	movs	r4, r0
    35c2:	000d      	movs	r5, r1
    35c4:	9804      	ldr	r0, [sp, #16]
    35c6:	9905      	ldr	r1, [sp, #20]
    35c8:	f001 fdc0 	bl	514c <__aeabi_dmul>
    35cc:	0002      	movs	r2, r0
    35ce:	000b      	movs	r3, r1
    35d0:	0020      	movs	r0, r4
    35d2:	0029      	movs	r1, r5
    35d4:	f000 fe76 	bl	42c4 <__aeabi_dadd>
    35d8:	0004      	movs	r4, r0
    35da:	000d      	movs	r5, r1
    35dc:	9802      	ldr	r0, [sp, #8]
    35de:	9903      	ldr	r1, [sp, #12]
    35e0:	0032      	movs	r2, r6
    35e2:	003b      	movs	r3, r7
    35e4:	9400      	str	r4, [sp, #0]
    35e6:	9501      	str	r5, [sp, #4]
    35e8:	f001 fdb0 	bl	514c <__aeabi_dmul>
    35ec:	0002      	movs	r2, r0
    35ee:	000b      	movs	r3, r1
    35f0:	0006      	movs	r6, r0
    35f2:	000f      	movs	r7, r1
    35f4:	0020      	movs	r0, r4
    35f6:	0029      	movs	r1, r5
    35f8:	f000 fe64 	bl	42c4 <__aeabi_dadd>
    35fc:	4b29      	ldr	r3, [pc, #164]	; (36a4 <__ieee754_pow+0x600>)
    35fe:	0004      	movs	r4, r0
    3600:	000d      	movs	r5, r1
    3602:	0002      	movs	r2, r0
    3604:	468b      	mov	fp, r1
    3606:	4299      	cmp	r1, r3
    3608:	dc00      	bgt.n	360c <__ieee754_pow+0x568>
    360a:	e14f      	b.n	38ac <__ieee754_pow+0x808>
    360c:	4b26      	ldr	r3, [pc, #152]	; (36a8 <__ieee754_pow+0x604>)
    360e:	18cb      	adds	r3, r1, r3
    3610:	4303      	orrs	r3, r0
    3612:	d000      	beq.n	3616 <__ieee754_pow+0x572>
    3614:	e1e2      	b.n	39dc <__ieee754_pow+0x938>
    3616:	9800      	ldr	r0, [sp, #0]
    3618:	9901      	ldr	r1, [sp, #4]
    361a:	4a24      	ldr	r2, [pc, #144]	; (36ac <__ieee754_pow+0x608>)
    361c:	4b24      	ldr	r3, [pc, #144]	; (36b0 <__ieee754_pow+0x60c>)
    361e:	f000 fe51 	bl	42c4 <__aeabi_dadd>
    3622:	0032      	movs	r2, r6
    3624:	9002      	str	r0, [sp, #8]
    3626:	9103      	str	r1, [sp, #12]
    3628:	003b      	movs	r3, r7
    362a:	0020      	movs	r0, r4
    362c:	0029      	movs	r1, r5
    362e:	f002 f80d 	bl	564c <__aeabi_dsub>
    3632:	0002      	movs	r2, r0
    3634:	000b      	movs	r3, r1
    3636:	9802      	ldr	r0, [sp, #8]
    3638:	9903      	ldr	r1, [sp, #12]
    363a:	f000 fe11 	bl	4260 <__aeabi_dcmpgt>
    363e:	46aa      	mov	sl, r5
    3640:	e038      	b.n	36b4 <__ieee754_pow+0x610>
    3642:	46c0      	nop			; (mov r8, r8)
    3644:	000fffff 	.word	0x000fffff
    3648:	43400000 	.word	0x43400000
    364c:	fffffc01 	.word	0xfffffc01
    3650:	3ff00000 	.word	0x3ff00000
    3654:	0003988e 	.word	0x0003988e
    3658:	000bb679 	.word	0x000bb679
    365c:	fff00000 	.word	0xfff00000
    3660:	4a454eef 	.word	0x4a454eef
    3664:	3fca7e28 	.word	0x3fca7e28
    3668:	93c9db65 	.word	0x93c9db65
    366c:	3fcd864a 	.word	0x3fcd864a
    3670:	a91d4101 	.word	0xa91d4101
    3674:	3fd17460 	.word	0x3fd17460
    3678:	518f264d 	.word	0x518f264d
    367c:	3fd55555 	.word	0x3fd55555
    3680:	db6fabff 	.word	0xdb6fabff
    3684:	3fdb6db6 	.word	0x3fdb6db6
    3688:	33333303 	.word	0x33333303
    368c:	3fe33333 	.word	0x3fe33333
    3690:	40080000 	.word	0x40080000
    3694:	3feec709 	.word	0x3feec709
    3698:	dc3a03fd 	.word	0xdc3a03fd
    369c:	145b01f5 	.word	0x145b01f5
    36a0:	be3e2fe0 	.word	0xbe3e2fe0
    36a4:	408fffff 	.word	0x408fffff
    36a8:	bf700000 	.word	0xbf700000
    36ac:	652b82fe 	.word	0x652b82fe
    36b0:	3c971547 	.word	0x3c971547
    36b4:	2800      	cmp	r0, #0
    36b6:	d000      	beq.n	36ba <__ieee754_pow+0x616>
    36b8:	e190      	b.n	39dc <__ieee754_pow+0x938>
    36ba:	4aec      	ldr	r2, [pc, #944]	; (3a6c <__ieee754_pow+0x9c8>)
    36bc:	4653      	mov	r3, sl
    36be:	4694      	mov	ip, r2
    36c0:	2280      	movs	r2, #128	; 0x80
    36c2:	0352      	lsls	r2, r2, #13
    36c4:	0011      	movs	r1, r2
    36c6:	151b      	asrs	r3, r3, #20
    36c8:	4463      	add	r3, ip
    36ca:	4119      	asrs	r1, r3
    36cc:	000b      	movs	r3, r1
    36ce:	4690      	mov	r8, r2
    36d0:	4ae7      	ldr	r2, [pc, #924]	; (3a70 <__ieee754_pow+0x9cc>)
    36d2:	445b      	add	r3, fp
    36d4:	4694      	mov	ip, r2
    36d6:	005c      	lsls	r4, r3, #1
    36d8:	0d64      	lsrs	r4, r4, #21
    36da:	4de6      	ldr	r5, [pc, #920]	; (3a74 <__ieee754_pow+0x9d0>)
    36dc:	4464      	add	r4, ip
    36de:	4125      	asrs	r5, r4
    36e0:	001a      	movs	r2, r3
    36e2:	43aa      	bics	r2, r5
    36e4:	0011      	movs	r1, r2
    36e6:	4642      	mov	r2, r8
    36e8:	031b      	lsls	r3, r3, #12
    36ea:	0b1b      	lsrs	r3, r3, #12
    36ec:	4313      	orrs	r3, r2
    36ee:	2214      	movs	r2, #20
    36f0:	1b14      	subs	r4, r2, r4
    36f2:	4123      	asrs	r3, r4
    36f4:	4699      	mov	r9, r3
    36f6:	465b      	mov	r3, fp
    36f8:	2000      	movs	r0, #0
    36fa:	2b00      	cmp	r3, #0
    36fc:	da00      	bge.n	3700 <__ieee754_pow+0x65c>
    36fe:	e1b0      	b.n	3a62 <__ieee754_pow+0x9be>
    3700:	0002      	movs	r2, r0
    3702:	000b      	movs	r3, r1
    3704:	0030      	movs	r0, r6
    3706:	0039      	movs	r1, r7
    3708:	f001 ffa0 	bl	564c <__aeabi_dsub>
    370c:	000b      	movs	r3, r1
    370e:	0002      	movs	r2, r0
    3710:	0006      	movs	r6, r0
    3712:	000f      	movs	r7, r1
    3714:	9800      	ldr	r0, [sp, #0]
    3716:	9901      	ldr	r1, [sp, #4]
    3718:	f000 fdd4 	bl	42c4 <__aeabi_dadd>
    371c:	464b      	mov	r3, r9
    371e:	051b      	lsls	r3, r3, #20
    3720:	000d      	movs	r5, r1
    3722:	4698      	mov	r8, r3
    3724:	2400      	movs	r4, #0
    3726:	2200      	movs	r2, #0
    3728:	4bd3      	ldr	r3, [pc, #844]	; (3a78 <__ieee754_pow+0x9d4>)
    372a:	0020      	movs	r0, r4
    372c:	0029      	movs	r1, r5
    372e:	f001 fd0d 	bl	514c <__aeabi_dmul>
    3732:	0032      	movs	r2, r6
    3734:	9002      	str	r0, [sp, #8]
    3736:	9103      	str	r1, [sp, #12]
    3738:	003b      	movs	r3, r7
    373a:	0020      	movs	r0, r4
    373c:	0029      	movs	r1, r5
    373e:	f001 ff85 	bl	564c <__aeabi_dsub>
    3742:	0002      	movs	r2, r0
    3744:	000b      	movs	r3, r1
    3746:	9800      	ldr	r0, [sp, #0]
    3748:	9901      	ldr	r1, [sp, #4]
    374a:	f001 ff7f 	bl	564c <__aeabi_dsub>
    374e:	4acb      	ldr	r2, [pc, #812]	; (3a7c <__ieee754_pow+0x9d8>)
    3750:	4bcb      	ldr	r3, [pc, #812]	; (3a80 <__ieee754_pow+0x9dc>)
    3752:	f001 fcfb 	bl	514c <__aeabi_dmul>
    3756:	4acb      	ldr	r2, [pc, #812]	; (3a84 <__ieee754_pow+0x9e0>)
    3758:	0006      	movs	r6, r0
    375a:	000f      	movs	r7, r1
    375c:	4bca      	ldr	r3, [pc, #808]	; (3a88 <__ieee754_pow+0x9e4>)
    375e:	0020      	movs	r0, r4
    3760:	0029      	movs	r1, r5
    3762:	f001 fcf3 	bl	514c <__aeabi_dmul>
    3766:	0002      	movs	r2, r0
    3768:	000b      	movs	r3, r1
    376a:	0030      	movs	r0, r6
    376c:	0039      	movs	r1, r7
    376e:	f000 fda9 	bl	42c4 <__aeabi_dadd>
    3772:	0004      	movs	r4, r0
    3774:	000d      	movs	r5, r1
    3776:	0002      	movs	r2, r0
    3778:	000b      	movs	r3, r1
    377a:	9802      	ldr	r0, [sp, #8]
    377c:	9903      	ldr	r1, [sp, #12]
    377e:	f000 fda1 	bl	42c4 <__aeabi_dadd>
    3782:	9a02      	ldr	r2, [sp, #8]
    3784:	9b03      	ldr	r3, [sp, #12]
    3786:	0006      	movs	r6, r0
    3788:	000f      	movs	r7, r1
    378a:	f001 ff5f 	bl	564c <__aeabi_dsub>
    378e:	0002      	movs	r2, r0
    3790:	000b      	movs	r3, r1
    3792:	0020      	movs	r0, r4
    3794:	0029      	movs	r1, r5
    3796:	f001 ff59 	bl	564c <__aeabi_dsub>
    379a:	0032      	movs	r2, r6
    379c:	9000      	str	r0, [sp, #0]
    379e:	9101      	str	r1, [sp, #4]
    37a0:	003b      	movs	r3, r7
    37a2:	0030      	movs	r0, r6
    37a4:	0039      	movs	r1, r7
    37a6:	f001 fcd1 	bl	514c <__aeabi_dmul>
    37aa:	0004      	movs	r4, r0
    37ac:	000d      	movs	r5, r1
    37ae:	4ab7      	ldr	r2, [pc, #732]	; (3a8c <__ieee754_pow+0x9e8>)
    37b0:	4bb7      	ldr	r3, [pc, #732]	; (3a90 <__ieee754_pow+0x9ec>)
    37b2:	f001 fccb 	bl	514c <__aeabi_dmul>
    37b6:	4ab7      	ldr	r2, [pc, #732]	; (3a94 <__ieee754_pow+0x9f0>)
    37b8:	4bb7      	ldr	r3, [pc, #732]	; (3a98 <__ieee754_pow+0x9f4>)
    37ba:	f001 ff47 	bl	564c <__aeabi_dsub>
    37be:	0022      	movs	r2, r4
    37c0:	002b      	movs	r3, r5
    37c2:	f001 fcc3 	bl	514c <__aeabi_dmul>
    37c6:	4ab5      	ldr	r2, [pc, #724]	; (3a9c <__ieee754_pow+0x9f8>)
    37c8:	4bb5      	ldr	r3, [pc, #724]	; (3aa0 <__ieee754_pow+0x9fc>)
    37ca:	f000 fd7b 	bl	42c4 <__aeabi_dadd>
    37ce:	0022      	movs	r2, r4
    37d0:	002b      	movs	r3, r5
    37d2:	f001 fcbb 	bl	514c <__aeabi_dmul>
    37d6:	4ab3      	ldr	r2, [pc, #716]	; (3aa4 <__ieee754_pow+0xa00>)
    37d8:	4bb3      	ldr	r3, [pc, #716]	; (3aa8 <__ieee754_pow+0xa04>)
    37da:	f001 ff37 	bl	564c <__aeabi_dsub>
    37de:	0022      	movs	r2, r4
    37e0:	002b      	movs	r3, r5
    37e2:	f001 fcb3 	bl	514c <__aeabi_dmul>
    37e6:	4ab1      	ldr	r2, [pc, #708]	; (3aac <__ieee754_pow+0xa08>)
    37e8:	4bb1      	ldr	r3, [pc, #708]	; (3ab0 <__ieee754_pow+0xa0c>)
    37ea:	f000 fd6b 	bl	42c4 <__aeabi_dadd>
    37ee:	0022      	movs	r2, r4
    37f0:	002b      	movs	r3, r5
    37f2:	f001 fcab 	bl	514c <__aeabi_dmul>
    37f6:	0002      	movs	r2, r0
    37f8:	000b      	movs	r3, r1
    37fa:	0030      	movs	r0, r6
    37fc:	0039      	movs	r1, r7
    37fe:	f001 ff25 	bl	564c <__aeabi_dsub>
    3802:	0004      	movs	r4, r0
    3804:	000d      	movs	r5, r1
    3806:	0002      	movs	r2, r0
    3808:	000b      	movs	r3, r1
    380a:	0030      	movs	r0, r6
    380c:	0039      	movs	r1, r7
    380e:	f001 fc9d 	bl	514c <__aeabi_dmul>
    3812:	2380      	movs	r3, #128	; 0x80
    3814:	9002      	str	r0, [sp, #8]
    3816:	9103      	str	r1, [sp, #12]
    3818:	2200      	movs	r2, #0
    381a:	05db      	lsls	r3, r3, #23
    381c:	0020      	movs	r0, r4
    381e:	0029      	movs	r1, r5
    3820:	f001 ff14 	bl	564c <__aeabi_dsub>
    3824:	0002      	movs	r2, r0
    3826:	000b      	movs	r3, r1
    3828:	9802      	ldr	r0, [sp, #8]
    382a:	9903      	ldr	r1, [sp, #12]
    382c:	f001 f85a 	bl	48e4 <__aeabi_ddiv>
    3830:	9a00      	ldr	r2, [sp, #0]
    3832:	9b01      	ldr	r3, [sp, #4]
    3834:	0004      	movs	r4, r0
    3836:	000d      	movs	r5, r1
    3838:	0030      	movs	r0, r6
    383a:	0039      	movs	r1, r7
    383c:	f001 fc86 	bl	514c <__aeabi_dmul>
    3840:	9a00      	ldr	r2, [sp, #0]
    3842:	9b01      	ldr	r3, [sp, #4]
    3844:	f000 fd3e 	bl	42c4 <__aeabi_dadd>
    3848:	0002      	movs	r2, r0
    384a:	000b      	movs	r3, r1
    384c:	0020      	movs	r0, r4
    384e:	0029      	movs	r1, r5
    3850:	f001 fefc 	bl	564c <__aeabi_dsub>
    3854:	0032      	movs	r2, r6
    3856:	003b      	movs	r3, r7
    3858:	f001 fef8 	bl	564c <__aeabi_dsub>
    385c:	0002      	movs	r2, r0
    385e:	000b      	movs	r3, r1
    3860:	2000      	movs	r0, #0
    3862:	4994      	ldr	r1, [pc, #592]	; (3ab4 <__ieee754_pow+0xa10>)
    3864:	f001 fef2 	bl	564c <__aeabi_dsub>
    3868:	4643      	mov	r3, r8
    386a:	185b      	adds	r3, r3, r1
    386c:	151a      	asrs	r2, r3, #20
    386e:	2a00      	cmp	r2, #0
    3870:	dc00      	bgt.n	3874 <__ieee754_pow+0x7d0>
    3872:	e149      	b.n	3b08 <__ieee754_pow+0xa64>
    3874:	0019      	movs	r1, r3
    3876:	9a06      	ldr	r2, [sp, #24]
    3878:	9b07      	ldr	r3, [sp, #28]
    387a:	f001 fc67 	bl	514c <__aeabi_dmul>
    387e:	e459      	b.n	3134 <__ieee754_pow+0x90>
    3880:	003a      	movs	r2, r7
    3882:	0033      	movs	r3, r6
    3884:	0038      	movs	r0, r7
    3886:	0031      	movs	r1, r6
    3888:	f001 fc60 	bl	514c <__aeabi_dmul>
    388c:	e452      	b.n	3134 <__ieee754_pow+0x90>
    388e:	4653      	mov	r3, sl
    3890:	2b00      	cmp	r3, #0
    3892:	db00      	blt.n	3896 <__ieee754_pow+0x7f2>
    3894:	e4d9      	b.n	324a <__ieee754_pow+0x1a6>
    3896:	9c00      	ldr	r4, [sp, #0]
    3898:	9d01      	ldr	r5, [sp, #4]
    389a:	2280      	movs	r2, #128	; 0x80
    389c:	0612      	lsls	r2, r2, #24
    389e:	002b      	movs	r3, r5
    38a0:	4694      	mov	ip, r2
    38a2:	4463      	add	r3, ip
    38a4:	0020      	movs	r0, r4
    38a6:	0019      	movs	r1, r3
    38a8:	f7ff fc44 	bl	3134 <__ieee754_pow+0x90>
    38ac:	004b      	lsls	r3, r1, #1
    38ae:	085b      	lsrs	r3, r3, #1
    38b0:	469a      	mov	sl, r3
    38b2:	4b81      	ldr	r3, [pc, #516]	; (3ab8 <__ieee754_pow+0xa14>)
    38b4:	459a      	cmp	sl, r3
    38b6:	dc00      	bgt.n	38ba <__ieee754_pow+0x816>
    38b8:	e0b1      	b.n	3a1e <__ieee754_pow+0x97a>
    38ba:	4b80      	ldr	r3, [pc, #512]	; (3abc <__ieee754_pow+0xa18>)
    38bc:	445b      	add	r3, fp
    38be:	431a      	orrs	r2, r3
    38c0:	d10c      	bne.n	38dc <__ieee754_pow+0x838>
    38c2:	0032      	movs	r2, r6
    38c4:	003b      	movs	r3, r7
    38c6:	f001 fec1 	bl	564c <__aeabi_dsub>
    38ca:	0002      	movs	r2, r0
    38cc:	000b      	movs	r3, r1
    38ce:	9800      	ldr	r0, [sp, #0]
    38d0:	9901      	ldr	r1, [sp, #4]
    38d2:	f000 fcbb 	bl	424c <__aeabi_dcmple>
    38d6:	2800      	cmp	r0, #0
    38d8:	d100      	bne.n	38dc <__ieee754_pow+0x838>
    38da:	e6ee      	b.n	36ba <__ieee754_pow+0x616>
    38dc:	9806      	ldr	r0, [sp, #24]
    38de:	9907      	ldr	r1, [sp, #28]
    38e0:	4a77      	ldr	r2, [pc, #476]	; (3ac0 <__ieee754_pow+0xa1c>)
    38e2:	4b78      	ldr	r3, [pc, #480]	; (3ac4 <__ieee754_pow+0xa20>)
    38e4:	f001 fc32 	bl	514c <__aeabi_dmul>
    38e8:	4a75      	ldr	r2, [pc, #468]	; (3ac0 <__ieee754_pow+0xa1c>)
    38ea:	4b76      	ldr	r3, [pc, #472]	; (3ac4 <__ieee754_pow+0xa20>)
    38ec:	f001 fc2e 	bl	514c <__aeabi_dmul>
    38f0:	f7ff fc20 	bl	3134 <__ieee754_pow+0x90>
    38f4:	2300      	movs	r3, #0
    38f6:	4c74      	ldr	r4, [pc, #464]	; (3ac8 <__ieee754_pow+0xa24>)
    38f8:	9306      	str	r3, [sp, #24]
    38fa:	9407      	str	r4, [sp, #28]
    38fc:	e652      	b.n	35a4 <__ieee754_pow+0x500>
    38fe:	0002      	movs	r2, r0
    3900:	000b      	movs	r3, r1
    3902:	2000      	movs	r0, #0
    3904:	496b      	ldr	r1, [pc, #428]	; (3ab4 <__ieee754_pow+0xa10>)
    3906:	f000 ffed 	bl	48e4 <__aeabi_ddiv>
    390a:	f7ff fc32 	bl	3172 <__ieee754_pow+0xce>
    390e:	4653      	mov	r3, sl
    3910:	2b00      	cmp	r3, #0
    3912:	db00      	blt.n	3916 <__ieee754_pow+0x872>
    3914:	e499      	b.n	324a <__ieee754_pow+0x1a6>
    3916:	e454      	b.n	31c2 <__ieee754_pow+0x11e>
    3918:	4b6c      	ldr	r3, [pc, #432]	; (3acc <__ieee754_pow+0xa28>)
    391a:	429c      	cmp	r4, r3
    391c:	ddf7      	ble.n	390e <__ieee754_pow+0x86a>
    391e:	4b65      	ldr	r3, [pc, #404]	; (3ab4 <__ieee754_pow+0xa10>)
    3920:	429c      	cmp	r4, r3
    3922:	dd00      	ble.n	3926 <__ieee754_pow+0x882>
    3924:	e44a      	b.n	31bc <__ieee754_pow+0x118>
    3926:	2200      	movs	r2, #0
    3928:	4b62      	ldr	r3, [pc, #392]	; (3ab4 <__ieee754_pow+0xa10>)
    392a:	f001 fe8f 	bl	564c <__aeabi_dsub>
    392e:	22c0      	movs	r2, #192	; 0xc0
    3930:	4b67      	ldr	r3, [pc, #412]	; (3ad0 <__ieee754_pow+0xa2c>)
    3932:	05d2      	lsls	r2, r2, #23
    3934:	0004      	movs	r4, r0
    3936:	000d      	movs	r5, r1
    3938:	f001 fc08 	bl	514c <__aeabi_dmul>
    393c:	4a65      	ldr	r2, [pc, #404]	; (3ad4 <__ieee754_pow+0xa30>)
    393e:	0006      	movs	r6, r0
    3940:	000f      	movs	r7, r1
    3942:	4b65      	ldr	r3, [pc, #404]	; (3ad8 <__ieee754_pow+0xa34>)
    3944:	0020      	movs	r0, r4
    3946:	0029      	movs	r1, r5
    3948:	f001 fc00 	bl	514c <__aeabi_dmul>
    394c:	2200      	movs	r2, #0
    394e:	9002      	str	r0, [sp, #8]
    3950:	9103      	str	r1, [sp, #12]
    3952:	4b62      	ldr	r3, [pc, #392]	; (3adc <__ieee754_pow+0xa38>)
    3954:	0020      	movs	r0, r4
    3956:	0029      	movs	r1, r5
    3958:	f001 fbf8 	bl	514c <__aeabi_dmul>
    395c:	0002      	movs	r2, r0
    395e:	000b      	movs	r3, r1
    3960:	485f      	ldr	r0, [pc, #380]	; (3ae0 <__ieee754_pow+0xa3c>)
    3962:	4960      	ldr	r1, [pc, #384]	; (3ae4 <__ieee754_pow+0xa40>)
    3964:	f001 fe72 	bl	564c <__aeabi_dsub>
    3968:	0022      	movs	r2, r4
    396a:	002b      	movs	r3, r5
    396c:	f001 fbee 	bl	514c <__aeabi_dmul>
    3970:	0002      	movs	r2, r0
    3972:	000b      	movs	r3, r1
    3974:	2000      	movs	r0, #0
    3976:	495c      	ldr	r1, [pc, #368]	; (3ae8 <__ieee754_pow+0xa44>)
    3978:	f001 fe68 	bl	564c <__aeabi_dsub>
    397c:	0022      	movs	r2, r4
    397e:	9004      	str	r0, [sp, #16]
    3980:	9105      	str	r1, [sp, #20]
    3982:	002b      	movs	r3, r5
    3984:	0020      	movs	r0, r4
    3986:	0029      	movs	r1, r5
    3988:	f001 fbe0 	bl	514c <__aeabi_dmul>
    398c:	0002      	movs	r2, r0
    398e:	000b      	movs	r3, r1
    3990:	9804      	ldr	r0, [sp, #16]
    3992:	9905      	ldr	r1, [sp, #20]
    3994:	f001 fbda 	bl	514c <__aeabi_dmul>
    3998:	4a54      	ldr	r2, [pc, #336]	; (3aec <__ieee754_pow+0xa48>)
    399a:	4b4d      	ldr	r3, [pc, #308]	; (3ad0 <__ieee754_pow+0xa2c>)
    399c:	f001 fbd6 	bl	514c <__aeabi_dmul>
    39a0:	0002      	movs	r2, r0
    39a2:	000b      	movs	r3, r1
    39a4:	9802      	ldr	r0, [sp, #8]
    39a6:	9903      	ldr	r1, [sp, #12]
    39a8:	f001 fe50 	bl	564c <__aeabi_dsub>
    39ac:	0002      	movs	r2, r0
    39ae:	000b      	movs	r3, r1
    39b0:	0004      	movs	r4, r0
    39b2:	000d      	movs	r5, r1
    39b4:	0030      	movs	r0, r6
    39b6:	0039      	movs	r1, r7
    39b8:	f000 fc84 	bl	42c4 <__aeabi_dadd>
    39bc:	2000      	movs	r0, #0
    39be:	0032      	movs	r2, r6
    39c0:	003b      	movs	r3, r7
    39c2:	9002      	str	r0, [sp, #8]
    39c4:	9103      	str	r1, [sp, #12]
    39c6:	f001 fe41 	bl	564c <__aeabi_dsub>
    39ca:	0002      	movs	r2, r0
    39cc:	000b      	movs	r3, r1
    39ce:	0020      	movs	r0, r4
    39d0:	0029      	movs	r1, r5
    39d2:	f001 fe3b 	bl	564c <__aeabi_dsub>
    39d6:	9004      	str	r0, [sp, #16]
    39d8:	9105      	str	r1, [sp, #20]
    39da:	e5d9      	b.n	3590 <__ieee754_pow+0x4ec>
    39dc:	4a44      	ldr	r2, [pc, #272]	; (3af0 <__ieee754_pow+0xa4c>)
    39de:	4b45      	ldr	r3, [pc, #276]	; (3af4 <__ieee754_pow+0xa50>)
    39e0:	9806      	ldr	r0, [sp, #24]
    39e2:	9907      	ldr	r1, [sp, #28]
    39e4:	f001 fbb2 	bl	514c <__aeabi_dmul>
    39e8:	4a41      	ldr	r2, [pc, #260]	; (3af0 <__ieee754_pow+0xa4c>)
    39ea:	4b42      	ldr	r3, [pc, #264]	; (3af4 <__ieee754_pow+0xa50>)
    39ec:	f001 fbae 	bl	514c <__aeabi_dmul>
    39f0:	f7ff fba0 	bl	3134 <__ieee754_pow+0x90>
    39f4:	2a00      	cmp	r2, #0
    39f6:	d001      	beq.n	39fc <__ieee754_pow+0x958>
    39f8:	f7ff fba9 	bl	314e <__ieee754_pow+0xaa>
    39fc:	3214      	adds	r2, #20
    39fe:	1ad3      	subs	r3, r2, r3
    3a00:	002a      	movs	r2, r5
    3a02:	411a      	asrs	r2, r3
    3a04:	0011      	movs	r1, r2
    3a06:	4099      	lsls	r1, r3
    3a08:	428d      	cmp	r5, r1
    3a0a:	d001      	beq.n	3a10 <__ieee754_pow+0x96c>
    3a0c:	f7ff fb76 	bl	30fc <__ieee754_pow+0x58>
    3a10:	2301      	movs	r3, #1
    3a12:	401a      	ands	r2, r3
    3a14:	18db      	adds	r3, r3, r3
    3a16:	1a9b      	subs	r3, r3, r2
    3a18:	469b      	mov	fp, r3
    3a1a:	f7ff fb6f 	bl	30fc <__ieee754_pow+0x58>
    3a1e:	2200      	movs	r2, #0
    3a20:	4b31      	ldr	r3, [pc, #196]	; (3ae8 <__ieee754_pow+0xa44>)
    3a22:	4690      	mov	r8, r2
    3a24:	4691      	mov	r9, r2
    3a26:	459a      	cmp	sl, r3
    3a28:	dc00      	bgt.n	3a2c <__ieee754_pow+0x988>
    3a2a:	e67b      	b.n	3724 <__ieee754_pow+0x680>
    3a2c:	e645      	b.n	36ba <__ieee754_pow+0x616>
    3a2e:	0002      	movs	r2, r0
    3a30:	000b      	movs	r3, r1
    3a32:	f001 fe0b 	bl	564c <__aeabi_dsub>
    3a36:	0002      	movs	r2, r0
    3a38:	000b      	movs	r3, r1
    3a3a:	f000 ff53 	bl	48e4 <__aeabi_ddiv>
    3a3e:	f7ff fb79 	bl	3134 <__ieee754_pow+0x90>
    3a42:	2380      	movs	r3, #128	; 0x80
    3a44:	4c2c      	ldr	r4, [pc, #176]	; (3af8 <__ieee754_pow+0xa54>)
    3a46:	05db      	lsls	r3, r3, #23
    3a48:	9308      	str	r3, [sp, #32]
    3a4a:	9409      	str	r4, [sp, #36]	; 0x24
    3a4c:	4b2b      	ldr	r3, [pc, #172]	; (3afc <__ieee754_pow+0xa58>)
    3a4e:	4c2c      	ldr	r4, [pc, #176]	; (3b00 <__ieee754_pow+0xa5c>)
    3a50:	2200      	movs	r2, #0
    3a52:	930c      	str	r3, [sp, #48]	; 0x30
    3a54:	940d      	str	r4, [sp, #52]	; 0x34
    3a56:	2480      	movs	r4, #128	; 0x80
    3a58:	4b2a      	ldr	r3, [pc, #168]	; (3b04 <__ieee754_pow+0xa60>)
    3a5a:	02e4      	lsls	r4, r4, #11
    3a5c:	9206      	str	r2, [sp, #24]
    3a5e:	9307      	str	r3, [sp, #28]
    3a60:	e449      	b.n	32f6 <__ieee754_pow+0x252>
    3a62:	464b      	mov	r3, r9
    3a64:	425b      	negs	r3, r3
    3a66:	4699      	mov	r9, r3
    3a68:	e64a      	b.n	3700 <__ieee754_pow+0x65c>
    3a6a:	46c0      	nop			; (mov r8, r8)
    3a6c:	fffffc02 	.word	0xfffffc02
    3a70:	fffffc01 	.word	0xfffffc01
    3a74:	000fffff 	.word	0x000fffff
    3a78:	3fe62e43 	.word	0x3fe62e43
    3a7c:	fefa39ef 	.word	0xfefa39ef
    3a80:	3fe62e42 	.word	0x3fe62e42
    3a84:	0ca86c39 	.word	0x0ca86c39
    3a88:	be205c61 	.word	0xbe205c61
    3a8c:	72bea4d0 	.word	0x72bea4d0
    3a90:	3e663769 	.word	0x3e663769
    3a94:	c5d26bf1 	.word	0xc5d26bf1
    3a98:	3ebbbd41 	.word	0x3ebbbd41
    3a9c:	af25de2c 	.word	0xaf25de2c
    3aa0:	3f11566a 	.word	0x3f11566a
    3aa4:	16bebd93 	.word	0x16bebd93
    3aa8:	3f66c16c 	.word	0x3f66c16c
    3aac:	5555553e 	.word	0x5555553e
    3ab0:	3fc55555 	.word	0x3fc55555
    3ab4:	3ff00000 	.word	0x3ff00000
    3ab8:	4090cbff 	.word	0x4090cbff
    3abc:	3f6f3400 	.word	0x3f6f3400
    3ac0:	c2f8f359 	.word	0xc2f8f359
    3ac4:	01a56e1f 	.word	0x01a56e1f
    3ac8:	bff00000 	.word	0xbff00000
    3acc:	3feffffe 	.word	0x3feffffe
    3ad0:	3ff71547 	.word	0x3ff71547
    3ad4:	f85ddf44 	.word	0xf85ddf44
    3ad8:	3e54ae0b 	.word	0x3e54ae0b
    3adc:	3fd00000 	.word	0x3fd00000
    3ae0:	55555555 	.word	0x55555555
    3ae4:	3fd55555 	.word	0x3fd55555
    3ae8:	3fe00000 	.word	0x3fe00000
    3aec:	652b82fe 	.word	0x652b82fe
    3af0:	8800759c 	.word	0x8800759c
    3af4:	7e37e43c 	.word	0x7e37e43c
    3af8:	3fe2b803 	.word	0x3fe2b803
    3afc:	43cfd006 	.word	0x43cfd006
    3b00:	3e4cfdeb 	.word	0x3e4cfdeb
    3b04:	3ff80000 	.word	0x3ff80000
    3b08:	464a      	mov	r2, r9
    3b0a:	f000 f999 	bl	3e40 <scalbn>
    3b0e:	e6b2      	b.n	3876 <__ieee754_pow+0x7d2>

00003b10 <__ieee754_sqrt>:
    3b10:	4b6c      	ldr	r3, [pc, #432]	; (3cc4 <__ieee754_sqrt+0x1b4>)
    3b12:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b14:	000a      	movs	r2, r1
    3b16:	4646      	mov	r6, r8
    3b18:	000d      	movs	r5, r1
    3b1a:	46d6      	mov	lr, sl
    3b1c:	464f      	mov	r7, r9
    3b1e:	0019      	movs	r1, r3
    3b20:	b5c0      	push	{r6, r7, lr}
    3b22:	0004      	movs	r4, r0
    3b24:	0006      	movs	r6, r0
    3b26:	4029      	ands	r1, r5
    3b28:	4299      	cmp	r1, r3
    3b2a:	d100      	bne.n	3b2e <__ieee754_sqrt+0x1e>
    3b2c:	e0a7      	b.n	3c7e <__ieee754_sqrt+0x16e>
    3b2e:	2d00      	cmp	r5, #0
    3b30:	dc00      	bgt.n	3b34 <__ieee754_sqrt+0x24>
    3b32:	e081      	b.n	3c38 <__ieee754_sqrt+0x128>
    3b34:	152f      	asrs	r7, r5, #20
    3b36:	d100      	bne.n	3b3a <__ieee754_sqrt+0x2a>
    3b38:	e08e      	b.n	3c58 <__ieee754_sqrt+0x148>
    3b3a:	4b63      	ldr	r3, [pc, #396]	; (3cc8 <__ieee754_sqrt+0x1b8>)
    3b3c:	0312      	lsls	r2, r2, #12
    3b3e:	469c      	mov	ip, r3
    3b40:	2380      	movs	r3, #128	; 0x80
    3b42:	0b12      	lsrs	r2, r2, #12
    3b44:	035b      	lsls	r3, r3, #13
    3b46:	4467      	add	r7, ip
    3b48:	431a      	orrs	r2, r3
    3b4a:	07fb      	lsls	r3, r7, #31
    3b4c:	d468      	bmi.n	3c20 <__ieee754_sqrt+0x110>
    3b4e:	107b      	asrs	r3, r7, #1
    3b50:	469c      	mov	ip, r3
    3b52:	0fe3      	lsrs	r3, r4, #31
    3b54:	189b      	adds	r3, r3, r2
    3b56:	189b      	adds	r3, r3, r2
    3b58:	2280      	movs	r2, #128	; 0x80
    3b5a:	2116      	movs	r1, #22
    3b5c:	2600      	movs	r6, #0
    3b5e:	2500      	movs	r5, #0
    3b60:	0064      	lsls	r4, r4, #1
    3b62:	0392      	lsls	r2, r2, #14
    3b64:	18a8      	adds	r0, r5, r2
    3b66:	4298      	cmp	r0, r3
    3b68:	dc02      	bgt.n	3b70 <__ieee754_sqrt+0x60>
    3b6a:	1885      	adds	r5, r0, r2
    3b6c:	1a1b      	subs	r3, r3, r0
    3b6e:	18b6      	adds	r6, r6, r2
    3b70:	0fe0      	lsrs	r0, r4, #31
    3b72:	005b      	lsls	r3, r3, #1
    3b74:	3901      	subs	r1, #1
    3b76:	181b      	adds	r3, r3, r0
    3b78:	0064      	lsls	r4, r4, #1
    3b7a:	0852      	lsrs	r2, r2, #1
    3b7c:	2900      	cmp	r1, #0
    3b7e:	d1f1      	bne.n	3b64 <__ieee754_sqrt+0x54>
    3b80:	2200      	movs	r2, #0
    3b82:	4692      	mov	sl, r2
    3b84:	4690      	mov	r8, r2
    3b86:	2280      	movs	r2, #128	; 0x80
    3b88:	2020      	movs	r0, #32
    3b8a:	0612      	lsls	r2, r2, #24
    3b8c:	e009      	b.n	3ba2 <__ieee754_sqrt+0x92>
    3b8e:	42ab      	cmp	r3, r5
    3b90:	d038      	beq.n	3c04 <__ieee754_sqrt+0xf4>
    3b92:	0fe1      	lsrs	r1, r4, #31
    3b94:	18c9      	adds	r1, r1, r3
    3b96:	3801      	subs	r0, #1
    3b98:	18cb      	adds	r3, r1, r3
    3b9a:	0064      	lsls	r4, r4, #1
    3b9c:	0852      	lsrs	r2, r2, #1
    3b9e:	2800      	cmp	r0, #0
    3ba0:	d018      	beq.n	3bd4 <__ieee754_sqrt+0xc4>
    3ba2:	4641      	mov	r1, r8
    3ba4:	1851      	adds	r1, r2, r1
    3ba6:	42ab      	cmp	r3, r5
    3ba8:	ddf1      	ble.n	3b8e <__ieee754_sqrt+0x7e>
    3baa:	188f      	adds	r7, r1, r2
    3bac:	46b8      	mov	r8, r7
    3bae:	46a9      	mov	r9, r5
    3bb0:	2900      	cmp	r1, #0
    3bb2:	db30      	blt.n	3c16 <__ieee754_sqrt+0x106>
    3bb4:	1b5b      	subs	r3, r3, r5
    3bb6:	428c      	cmp	r4, r1
    3bb8:	41ad      	sbcs	r5, r5
    3bba:	426d      	negs	r5, r5
    3bbc:	1b5b      	subs	r3, r3, r5
    3bbe:	1a64      	subs	r4, r4, r1
    3bc0:	0fe1      	lsrs	r1, r4, #31
    3bc2:	18c9      	adds	r1, r1, r3
    3bc4:	3801      	subs	r0, #1
    3bc6:	4492      	add	sl, r2
    3bc8:	464d      	mov	r5, r9
    3bca:	18cb      	adds	r3, r1, r3
    3bcc:	0064      	lsls	r4, r4, #1
    3bce:	0852      	lsrs	r2, r2, #1
    3bd0:	2800      	cmp	r0, #0
    3bd2:	d1e6      	bne.n	3ba2 <__ieee754_sqrt+0x92>
    3bd4:	4323      	orrs	r3, r4
    3bd6:	d128      	bne.n	3c2a <__ieee754_sqrt+0x11a>
    3bd8:	4653      	mov	r3, sl
    3bda:	085b      	lsrs	r3, r3, #1
    3bdc:	493b      	ldr	r1, [pc, #236]	; (3ccc <__ieee754_sqrt+0x1bc>)
    3bde:	1072      	asrs	r2, r6, #1
    3be0:	4688      	mov	r8, r1
    3be2:	4442      	add	r2, r8
    3be4:	07f1      	lsls	r1, r6, #31
    3be6:	d502      	bpl.n	3bee <__ieee754_sqrt+0xde>
    3be8:	2180      	movs	r1, #128	; 0x80
    3bea:	0609      	lsls	r1, r1, #24
    3bec:	430b      	orrs	r3, r1
    3bee:	4661      	mov	r1, ip
    3bf0:	001e      	movs	r6, r3
    3bf2:	050f      	lsls	r7, r1, #20
    3bf4:	18bd      	adds	r5, r7, r2
    3bf6:	0030      	movs	r0, r6
    3bf8:	0029      	movs	r1, r5
    3bfa:	bc1c      	pop	{r2, r3, r4}
    3bfc:	4690      	mov	r8, r2
    3bfe:	4699      	mov	r9, r3
    3c00:	46a2      	mov	sl, r4
    3c02:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c04:	42a1      	cmp	r1, r4
    3c06:	d8c4      	bhi.n	3b92 <__ieee754_sqrt+0x82>
    3c08:	188f      	adds	r7, r1, r2
    3c0a:	46b8      	mov	r8, r7
    3c0c:	2900      	cmp	r1, #0
    3c0e:	db42      	blt.n	3c96 <__ieee754_sqrt+0x186>
    3c10:	4699      	mov	r9, r3
    3c12:	2300      	movs	r3, #0
    3c14:	e7d3      	b.n	3bbe <__ieee754_sqrt+0xae>
    3c16:	2f00      	cmp	r7, #0
    3c18:	db2f      	blt.n	3c7a <__ieee754_sqrt+0x16a>
    3c1a:	1c6f      	adds	r7, r5, #1
    3c1c:	46b9      	mov	r9, r7
    3c1e:	e7c9      	b.n	3bb4 <__ieee754_sqrt+0xa4>
    3c20:	0fe1      	lsrs	r1, r4, #31
    3c22:	0052      	lsls	r2, r2, #1
    3c24:	188a      	adds	r2, r1, r2
    3c26:	0064      	lsls	r4, r4, #1
    3c28:	e791      	b.n	3b4e <__ieee754_sqrt+0x3e>
    3c2a:	4653      	mov	r3, sl
    3c2c:	3301      	adds	r3, #1
    3c2e:	d035      	beq.n	3c9c <__ieee754_sqrt+0x18c>
    3c30:	4653      	mov	r3, sl
    3c32:	3301      	adds	r3, #1
    3c34:	085b      	lsrs	r3, r3, #1
    3c36:	e7d1      	b.n	3bdc <__ieee754_sqrt+0xcc>
    3c38:	006b      	lsls	r3, r5, #1
    3c3a:	085b      	lsrs	r3, r3, #1
    3c3c:	4303      	orrs	r3, r0
    3c3e:	d0da      	beq.n	3bf6 <__ieee754_sqrt+0xe6>
    3c40:	2700      	movs	r7, #0
    3c42:	2d00      	cmp	r5, #0
    3c44:	d132      	bne.n	3cac <__ieee754_sqrt+0x19c>
    3c46:	0ae2      	lsrs	r2, r4, #11
    3c48:	3f15      	subs	r7, #21
    3c4a:	0564      	lsls	r4, r4, #21
    3c4c:	2a00      	cmp	r2, #0
    3c4e:	d0fa      	beq.n	3c46 <__ieee754_sqrt+0x136>
    3c50:	2380      	movs	r3, #128	; 0x80
    3c52:	035b      	lsls	r3, r3, #13
    3c54:	421a      	tst	r2, r3
    3c56:	d124      	bne.n	3ca2 <__ieee754_sqrt+0x192>
    3c58:	2080      	movs	r0, #128	; 0x80
    3c5a:	2300      	movs	r3, #0
    3c5c:	0340      	lsls	r0, r0, #13
    3c5e:	e000      	b.n	3c62 <__ieee754_sqrt+0x152>
    3c60:	000b      	movs	r3, r1
    3c62:	0052      	lsls	r2, r2, #1
    3c64:	1c59      	adds	r1, r3, #1
    3c66:	4202      	tst	r2, r0
    3c68:	d0fa      	beq.n	3c60 <__ieee754_sqrt+0x150>
    3c6a:	2020      	movs	r0, #32
    3c6c:	1a40      	subs	r0, r0, r1
    3c6e:	1aff      	subs	r7, r7, r3
    3c70:	0023      	movs	r3, r4
    3c72:	40c3      	lsrs	r3, r0
    3c74:	408c      	lsls	r4, r1
    3c76:	431a      	orrs	r2, r3
    3c78:	e75f      	b.n	3b3a <__ieee754_sqrt+0x2a>
    3c7a:	46a9      	mov	r9, r5
    3c7c:	e79a      	b.n	3bb4 <__ieee754_sqrt+0xa4>
    3c7e:	002b      	movs	r3, r5
    3c80:	0002      	movs	r2, r0
    3c82:	0029      	movs	r1, r5
    3c84:	f001 fa62 	bl	514c <__aeabi_dmul>
    3c88:	0032      	movs	r2, r6
    3c8a:	002b      	movs	r3, r5
    3c8c:	f000 fb1a 	bl	42c4 <__aeabi_dadd>
    3c90:	0006      	movs	r6, r0
    3c92:	000d      	movs	r5, r1
    3c94:	e7af      	b.n	3bf6 <__ieee754_sqrt+0xe6>
    3c96:	2f00      	cmp	r7, #0
    3c98:	dabf      	bge.n	3c1a <__ieee754_sqrt+0x10a>
    3c9a:	e7b9      	b.n	3c10 <__ieee754_sqrt+0x100>
    3c9c:	3601      	adds	r6, #1
    3c9e:	2300      	movs	r3, #0
    3ca0:	e79c      	b.n	3bdc <__ieee754_sqrt+0xcc>
    3ca2:	2301      	movs	r3, #1
    3ca4:	2100      	movs	r1, #0
    3ca6:	2020      	movs	r0, #32
    3ca8:	425b      	negs	r3, r3
    3caa:	e7e0      	b.n	3c6e <__ieee754_sqrt+0x15e>
    3cac:	002b      	movs	r3, r5
    3cae:	0002      	movs	r2, r0
    3cb0:	0029      	movs	r1, r5
    3cb2:	f001 fccb 	bl	564c <__aeabi_dsub>
    3cb6:	0002      	movs	r2, r0
    3cb8:	000b      	movs	r3, r1
    3cba:	f000 fe13 	bl	48e4 <__aeabi_ddiv>
    3cbe:	0006      	movs	r6, r0
    3cc0:	000d      	movs	r5, r1
    3cc2:	e798      	b.n	3bf6 <__ieee754_sqrt+0xe6>
    3cc4:	7ff00000 	.word	0x7ff00000
    3cc8:	fffffc01 	.word	0xfffffc01
    3ccc:	3fe00000 	.word	0x3fe00000

00003cd0 <fabs>:
    3cd0:	0049      	lsls	r1, r1, #1
    3cd2:	084b      	lsrs	r3, r1, #1
    3cd4:	0019      	movs	r1, r3
    3cd6:	4770      	bx	lr

00003cd8 <finite>:
    3cd8:	4b03      	ldr	r3, [pc, #12]	; (3ce8 <finite+0x10>)
    3cda:	0048      	lsls	r0, r1, #1
    3cdc:	469c      	mov	ip, r3
    3cde:	0840      	lsrs	r0, r0, #1
    3ce0:	4460      	add	r0, ip
    3ce2:	0fc0      	lsrs	r0, r0, #31
    3ce4:	4770      	bx	lr
    3ce6:	46c0      	nop			; (mov r8, r8)
    3ce8:	80100000 	.word	0x80100000

00003cec <matherr>:
    3cec:	2000      	movs	r0, #0
    3cee:	4770      	bx	lr

00003cf0 <nan>:
    3cf0:	2000      	movs	r0, #0
    3cf2:	4901      	ldr	r1, [pc, #4]	; (3cf8 <nan+0x8>)
    3cf4:	4770      	bx	lr
    3cf6:	46c0      	nop			; (mov r8, r8)
    3cf8:	7ff80000 	.word	0x7ff80000

00003cfc <rint>:
    3cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
    3cfe:	46c6      	mov	lr, r8
    3d00:	b500      	push	{lr}
    3d02:	0fcb      	lsrs	r3, r1, #31
    3d04:	4698      	mov	r8, r3
    3d06:	4c4a      	ldr	r4, [pc, #296]	; (3e30 <rint+0x134>)
    3d08:	004b      	lsls	r3, r1, #1
    3d0a:	0d5b      	lsrs	r3, r3, #21
    3d0c:	191e      	adds	r6, r3, r4
    3d0e:	b082      	sub	sp, #8
    3d10:	0007      	movs	r7, r0
    3d12:	000a      	movs	r2, r1
    3d14:	2e13      	cmp	r6, #19
    3d16:	dc35      	bgt.n	3d84 <rint+0x88>
    3d18:	2e00      	cmp	r6, #0
    3d1a:	db57      	blt.n	3dcc <rint+0xd0>
    3d1c:	4b45      	ldr	r3, [pc, #276]	; (3e34 <rint+0x138>)
    3d1e:	0004      	movs	r4, r0
    3d20:	4133      	asrs	r3, r6
    3d22:	001f      	movs	r7, r3
    3d24:	400f      	ands	r7, r1
    3d26:	4307      	orrs	r7, r0
    3d28:	000d      	movs	r5, r1
    3d2a:	2f00      	cmp	r7, #0
    3d2c:	d024      	beq.n	3d78 <rint+0x7c>
    3d2e:	085b      	lsrs	r3, r3, #1
    3d30:	001c      	movs	r4, r3
    3d32:	400c      	ands	r4, r1
    3d34:	4320      	orrs	r0, r4
    3d36:	2700      	movs	r7, #0
    3d38:	2800      	cmp	r0, #0
    3d3a:	d007      	beq.n	3d4c <rint+0x50>
    3d3c:	2e13      	cmp	r6, #19
    3d3e:	d100      	bne.n	3d42 <rint+0x46>
    3d40:	e073      	b.n	3e2a <rint+0x12e>
    3d42:	2280      	movs	r2, #128	; 0x80
    3d44:	02d2      	lsls	r2, r2, #11
    3d46:	4132      	asrs	r2, r6
    3d48:	4399      	bics	r1, r3
    3d4a:	430a      	orrs	r2, r1
    3d4c:	4643      	mov	r3, r8
    3d4e:	00de      	lsls	r6, r3, #3
    3d50:	4b39      	ldr	r3, [pc, #228]	; (3e38 <rint+0x13c>)
    3d52:	0011      	movs	r1, r2
    3d54:	199e      	adds	r6, r3, r6
    3d56:	6834      	ldr	r4, [r6, #0]
    3d58:	6875      	ldr	r5, [r6, #4]
    3d5a:	0038      	movs	r0, r7
    3d5c:	0022      	movs	r2, r4
    3d5e:	002b      	movs	r3, r5
    3d60:	f000 fab0 	bl	42c4 <__aeabi_dadd>
    3d64:	9000      	str	r0, [sp, #0]
    3d66:	9101      	str	r1, [sp, #4]
    3d68:	9800      	ldr	r0, [sp, #0]
    3d6a:	9901      	ldr	r1, [sp, #4]
    3d6c:	0022      	movs	r2, r4
    3d6e:	002b      	movs	r3, r5
    3d70:	f001 fc6c 	bl	564c <__aeabi_dsub>
    3d74:	0004      	movs	r4, r0
    3d76:	000d      	movs	r5, r1
    3d78:	0020      	movs	r0, r4
    3d7a:	0029      	movs	r1, r5
    3d7c:	b002      	add	sp, #8
    3d7e:	bc04      	pop	{r2}
    3d80:	4690      	mov	r8, r2
    3d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3d84:	2e33      	cmp	r6, #51	; 0x33
    3d86:	dd0c      	ble.n	3da2 <rint+0xa6>
    3d88:	2380      	movs	r3, #128	; 0x80
    3d8a:	0004      	movs	r4, r0
    3d8c:	00db      	lsls	r3, r3, #3
    3d8e:	000d      	movs	r5, r1
    3d90:	429e      	cmp	r6, r3
    3d92:	d1f1      	bne.n	3d78 <rint+0x7c>
    3d94:	0002      	movs	r2, r0
    3d96:	000b      	movs	r3, r1
    3d98:	f000 fa94 	bl	42c4 <__aeabi_dadd>
    3d9c:	0004      	movs	r4, r0
    3d9e:	000d      	movs	r5, r1
    3da0:	e7ea      	b.n	3d78 <rint+0x7c>
    3da2:	4c26      	ldr	r4, [pc, #152]	; (3e3c <rint+0x140>)
    3da4:	000d      	movs	r5, r1
    3da6:	46a4      	mov	ip, r4
    3da8:	2401      	movs	r4, #1
    3daa:	4463      	add	r3, ip
    3dac:	4264      	negs	r4, r4
    3dae:	40dc      	lsrs	r4, r3
    3db0:	46a4      	mov	ip, r4
    3db2:	4661      	mov	r1, ip
    3db4:	0004      	movs	r4, r0
    3db6:	4201      	tst	r1, r0
    3db8:	d0de      	beq.n	3d78 <rint+0x7c>
    3dba:	0849      	lsrs	r1, r1, #1
    3dbc:	4201      	tst	r1, r0
    3dbe:	d0c5      	beq.n	3d4c <rint+0x50>
    3dc0:	2780      	movs	r7, #128	; 0x80
    3dc2:	05ff      	lsls	r7, r7, #23
    3dc4:	411f      	asrs	r7, r3
    3dc6:	4388      	bics	r0, r1
    3dc8:	4307      	orrs	r7, r0
    3dca:	e7bf      	b.n	3d4c <rint+0x50>
    3dcc:	004b      	lsls	r3, r1, #1
    3dce:	085b      	lsrs	r3, r3, #1
    3dd0:	4303      	orrs	r3, r0
    3dd2:	0004      	movs	r4, r0
    3dd4:	000d      	movs	r5, r1
    3dd6:	2b00      	cmp	r3, #0
    3dd8:	d0ce      	beq.n	3d78 <rint+0x7c>
    3dda:	030b      	lsls	r3, r1, #12
    3ddc:	0b1b      	lsrs	r3, r3, #12
    3dde:	4303      	orrs	r3, r0
    3de0:	001a      	movs	r2, r3
    3de2:	425b      	negs	r3, r3
    3de4:	4313      	orrs	r3, r2
    3de6:	2280      	movs	r2, #128	; 0x80
    3de8:	0b1b      	lsrs	r3, r3, #12
    3dea:	0312      	lsls	r2, r2, #12
    3dec:	4013      	ands	r3, r2
    3dee:	0c4a      	lsrs	r2, r1, #17
    3df0:	0452      	lsls	r2, r2, #17
    3df2:	4313      	orrs	r3, r2
    3df4:	0019      	movs	r1, r3
    3df6:	4643      	mov	r3, r8
    3df8:	00da      	lsls	r2, r3, #3
    3dfa:	4b0f      	ldr	r3, [pc, #60]	; (3e38 <rint+0x13c>)
    3dfc:	189b      	adds	r3, r3, r2
    3dfe:	681c      	ldr	r4, [r3, #0]
    3e00:	685d      	ldr	r5, [r3, #4]
    3e02:	0022      	movs	r2, r4
    3e04:	002b      	movs	r3, r5
    3e06:	f000 fa5d 	bl	42c4 <__aeabi_dadd>
    3e0a:	9000      	str	r0, [sp, #0]
    3e0c:	9101      	str	r1, [sp, #4]
    3e0e:	9800      	ldr	r0, [sp, #0]
    3e10:	9901      	ldr	r1, [sp, #4]
    3e12:	0022      	movs	r2, r4
    3e14:	002b      	movs	r3, r5
    3e16:	f001 fc19 	bl	564c <__aeabi_dsub>
    3e1a:	4642      	mov	r2, r8
    3e1c:	004b      	lsls	r3, r1, #1
    3e1e:	085b      	lsrs	r3, r3, #1
    3e20:	07d6      	lsls	r6, r2, #31
    3e22:	4333      	orrs	r3, r6
    3e24:	0004      	movs	r4, r0
    3e26:	001d      	movs	r5, r3
    3e28:	e7a6      	b.n	3d78 <rint+0x7c>
    3e2a:	2780      	movs	r7, #128	; 0x80
    3e2c:	063f      	lsls	r7, r7, #24
    3e2e:	e788      	b.n	3d42 <rint+0x46>
    3e30:	fffffc01 	.word	0xfffffc01
    3e34:	000fffff 	.word	0x000fffff
    3e38:	000060b0 	.word	0x000060b0
    3e3c:	fffffbed 	.word	0xfffffbed

00003e40 <scalbn>:
    3e40:	004b      	lsls	r3, r1, #1
    3e42:	b570      	push	{r4, r5, r6, lr}
    3e44:	0d5b      	lsrs	r3, r3, #21
    3e46:	0014      	movs	r4, r2
    3e48:	000a      	movs	r2, r1
    3e4a:	2b00      	cmp	r3, #0
    3e4c:	d11a      	bne.n	3e84 <scalbn+0x44>
    3e4e:	004b      	lsls	r3, r1, #1
    3e50:	085b      	lsrs	r3, r3, #1
    3e52:	4303      	orrs	r3, r0
    3e54:	d015      	beq.n	3e82 <scalbn+0x42>
    3e56:	2200      	movs	r2, #0
    3e58:	4b22      	ldr	r3, [pc, #136]	; (3ee4 <scalbn+0xa4>)
    3e5a:	f001 f977 	bl	514c <__aeabi_dmul>
    3e5e:	4b22      	ldr	r3, [pc, #136]	; (3ee8 <scalbn+0xa8>)
    3e60:	000a      	movs	r2, r1
    3e62:	429c      	cmp	r4, r3
    3e64:	db22      	blt.n	3eac <scalbn+0x6c>
    3e66:	004b      	lsls	r3, r1, #1
    3e68:	0d5b      	lsrs	r3, r3, #21
    3e6a:	3b36      	subs	r3, #54	; 0x36
    3e6c:	4d1f      	ldr	r5, [pc, #124]	; (3eec <scalbn+0xac>)
    3e6e:	18e3      	adds	r3, r4, r3
    3e70:	42ab      	cmp	r3, r5
    3e72:	dc20      	bgt.n	3eb6 <scalbn+0x76>
    3e74:	2b00      	cmp	r3, #0
    3e76:	dd0d      	ble.n	3e94 <scalbn+0x54>
    3e78:	4c1d      	ldr	r4, [pc, #116]	; (3ef0 <scalbn+0xb0>)
    3e7a:	051b      	lsls	r3, r3, #20
    3e7c:	4022      	ands	r2, r4
    3e7e:	431a      	orrs	r2, r3
    3e80:	0011      	movs	r1, r2
    3e82:	bd70      	pop	{r4, r5, r6, pc}
    3e84:	4d1b      	ldr	r5, [pc, #108]	; (3ef4 <scalbn+0xb4>)
    3e86:	42ab      	cmp	r3, r5
    3e88:	d1f0      	bne.n	3e6c <scalbn+0x2c>
    3e8a:	0002      	movs	r2, r0
    3e8c:	000b      	movs	r3, r1
    3e8e:	f000 fa19 	bl	42c4 <__aeabi_dadd>
    3e92:	e7f6      	b.n	3e82 <scalbn+0x42>
    3e94:	001d      	movs	r5, r3
    3e96:	3535      	adds	r5, #53	; 0x35
    3e98:	da18      	bge.n	3ecc <scalbn+0x8c>
    3e9a:	4b17      	ldr	r3, [pc, #92]	; (3ef8 <scalbn+0xb8>)
    3e9c:	0002      	movs	r2, r0
    3e9e:	429c      	cmp	r4, r3
    3ea0:	dc0a      	bgt.n	3eb8 <scalbn+0x78>
    3ea2:	000b      	movs	r3, r1
    3ea4:	4815      	ldr	r0, [pc, #84]	; (3efc <scalbn+0xbc>)
    3ea6:	4916      	ldr	r1, [pc, #88]	; (3f00 <scalbn+0xc0>)
    3ea8:	f000 f832 	bl	3f10 <copysign>
    3eac:	4a13      	ldr	r2, [pc, #76]	; (3efc <scalbn+0xbc>)
    3eae:	4b14      	ldr	r3, [pc, #80]	; (3f00 <scalbn+0xc0>)
    3eb0:	f001 f94c 	bl	514c <__aeabi_dmul>
    3eb4:	e7e5      	b.n	3e82 <scalbn+0x42>
    3eb6:	0002      	movs	r2, r0
    3eb8:	000b      	movs	r3, r1
    3eba:	4812      	ldr	r0, [pc, #72]	; (3f04 <scalbn+0xc4>)
    3ebc:	4912      	ldr	r1, [pc, #72]	; (3f08 <scalbn+0xc8>)
    3ebe:	f000 f827 	bl	3f10 <copysign>
    3ec2:	4a10      	ldr	r2, [pc, #64]	; (3f04 <scalbn+0xc4>)
    3ec4:	4b10      	ldr	r3, [pc, #64]	; (3f08 <scalbn+0xc8>)
    3ec6:	f001 f941 	bl	514c <__aeabi_dmul>
    3eca:	e7da      	b.n	3e82 <scalbn+0x42>
    3ecc:	4c08      	ldr	r4, [pc, #32]	; (3ef0 <scalbn+0xb0>)
    3ece:	3336      	adds	r3, #54	; 0x36
    3ed0:	4022      	ands	r2, r4
    3ed2:	051b      	lsls	r3, r3, #20
    3ed4:	4313      	orrs	r3, r2
    3ed6:	0019      	movs	r1, r3
    3ed8:	2200      	movs	r2, #0
    3eda:	4b0c      	ldr	r3, [pc, #48]	; (3f0c <scalbn+0xcc>)
    3edc:	f001 f936 	bl	514c <__aeabi_dmul>
    3ee0:	e7cf      	b.n	3e82 <scalbn+0x42>
    3ee2:	46c0      	nop			; (mov r8, r8)
    3ee4:	43500000 	.word	0x43500000
    3ee8:	ffff3cb0 	.word	0xffff3cb0
    3eec:	000007fe 	.word	0x000007fe
    3ef0:	800fffff 	.word	0x800fffff
    3ef4:	000007ff 	.word	0x000007ff
    3ef8:	0000c350 	.word	0x0000c350
    3efc:	c2f8f359 	.word	0xc2f8f359
    3f00:	01a56e1f 	.word	0x01a56e1f
    3f04:	8800759c 	.word	0x8800759c
    3f08:	7e37e43c 	.word	0x7e37e43c
    3f0c:	3c900000 	.word	0x3c900000

00003f10 <copysign>:
    3f10:	b530      	push	{r4, r5, lr}
    3f12:	004a      	lsls	r2, r1, #1
    3f14:	0fdb      	lsrs	r3, r3, #31
    3f16:	07db      	lsls	r3, r3, #31
    3f18:	0852      	lsrs	r2, r2, #1
    3f1a:	431a      	orrs	r2, r3
    3f1c:	0011      	movs	r1, r2
    3f1e:	bd30      	pop	{r4, r5, pc}

00003f20 <__udivsi3>:
    3f20:	2200      	movs	r2, #0
    3f22:	0843      	lsrs	r3, r0, #1
    3f24:	428b      	cmp	r3, r1
    3f26:	d374      	bcc.n	4012 <__udivsi3+0xf2>
    3f28:	0903      	lsrs	r3, r0, #4
    3f2a:	428b      	cmp	r3, r1
    3f2c:	d35f      	bcc.n	3fee <__udivsi3+0xce>
    3f2e:	0a03      	lsrs	r3, r0, #8
    3f30:	428b      	cmp	r3, r1
    3f32:	d344      	bcc.n	3fbe <__udivsi3+0x9e>
    3f34:	0b03      	lsrs	r3, r0, #12
    3f36:	428b      	cmp	r3, r1
    3f38:	d328      	bcc.n	3f8c <__udivsi3+0x6c>
    3f3a:	0c03      	lsrs	r3, r0, #16
    3f3c:	428b      	cmp	r3, r1
    3f3e:	d30d      	bcc.n	3f5c <__udivsi3+0x3c>
    3f40:	22ff      	movs	r2, #255	; 0xff
    3f42:	0209      	lsls	r1, r1, #8
    3f44:	ba12      	rev	r2, r2
    3f46:	0c03      	lsrs	r3, r0, #16
    3f48:	428b      	cmp	r3, r1
    3f4a:	d302      	bcc.n	3f52 <__udivsi3+0x32>
    3f4c:	1212      	asrs	r2, r2, #8
    3f4e:	0209      	lsls	r1, r1, #8
    3f50:	d065      	beq.n	401e <__udivsi3+0xfe>
    3f52:	0b03      	lsrs	r3, r0, #12
    3f54:	428b      	cmp	r3, r1
    3f56:	d319      	bcc.n	3f8c <__udivsi3+0x6c>
    3f58:	e000      	b.n	3f5c <__udivsi3+0x3c>
    3f5a:	0a09      	lsrs	r1, r1, #8
    3f5c:	0bc3      	lsrs	r3, r0, #15
    3f5e:	428b      	cmp	r3, r1
    3f60:	d301      	bcc.n	3f66 <__udivsi3+0x46>
    3f62:	03cb      	lsls	r3, r1, #15
    3f64:	1ac0      	subs	r0, r0, r3
    3f66:	4152      	adcs	r2, r2
    3f68:	0b83      	lsrs	r3, r0, #14
    3f6a:	428b      	cmp	r3, r1
    3f6c:	d301      	bcc.n	3f72 <__udivsi3+0x52>
    3f6e:	038b      	lsls	r3, r1, #14
    3f70:	1ac0      	subs	r0, r0, r3
    3f72:	4152      	adcs	r2, r2
    3f74:	0b43      	lsrs	r3, r0, #13
    3f76:	428b      	cmp	r3, r1
    3f78:	d301      	bcc.n	3f7e <__udivsi3+0x5e>
    3f7a:	034b      	lsls	r3, r1, #13
    3f7c:	1ac0      	subs	r0, r0, r3
    3f7e:	4152      	adcs	r2, r2
    3f80:	0b03      	lsrs	r3, r0, #12
    3f82:	428b      	cmp	r3, r1
    3f84:	d301      	bcc.n	3f8a <__udivsi3+0x6a>
    3f86:	030b      	lsls	r3, r1, #12
    3f88:	1ac0      	subs	r0, r0, r3
    3f8a:	4152      	adcs	r2, r2
    3f8c:	0ac3      	lsrs	r3, r0, #11
    3f8e:	428b      	cmp	r3, r1
    3f90:	d301      	bcc.n	3f96 <__udivsi3+0x76>
    3f92:	02cb      	lsls	r3, r1, #11
    3f94:	1ac0      	subs	r0, r0, r3
    3f96:	4152      	adcs	r2, r2
    3f98:	0a83      	lsrs	r3, r0, #10
    3f9a:	428b      	cmp	r3, r1
    3f9c:	d301      	bcc.n	3fa2 <__udivsi3+0x82>
    3f9e:	028b      	lsls	r3, r1, #10
    3fa0:	1ac0      	subs	r0, r0, r3
    3fa2:	4152      	adcs	r2, r2
    3fa4:	0a43      	lsrs	r3, r0, #9
    3fa6:	428b      	cmp	r3, r1
    3fa8:	d301      	bcc.n	3fae <__udivsi3+0x8e>
    3faa:	024b      	lsls	r3, r1, #9
    3fac:	1ac0      	subs	r0, r0, r3
    3fae:	4152      	adcs	r2, r2
    3fb0:	0a03      	lsrs	r3, r0, #8
    3fb2:	428b      	cmp	r3, r1
    3fb4:	d301      	bcc.n	3fba <__udivsi3+0x9a>
    3fb6:	020b      	lsls	r3, r1, #8
    3fb8:	1ac0      	subs	r0, r0, r3
    3fba:	4152      	adcs	r2, r2
    3fbc:	d2cd      	bcs.n	3f5a <__udivsi3+0x3a>
    3fbe:	09c3      	lsrs	r3, r0, #7
    3fc0:	428b      	cmp	r3, r1
    3fc2:	d301      	bcc.n	3fc8 <__udivsi3+0xa8>
    3fc4:	01cb      	lsls	r3, r1, #7
    3fc6:	1ac0      	subs	r0, r0, r3
    3fc8:	4152      	adcs	r2, r2
    3fca:	0983      	lsrs	r3, r0, #6
    3fcc:	428b      	cmp	r3, r1
    3fce:	d301      	bcc.n	3fd4 <__udivsi3+0xb4>
    3fd0:	018b      	lsls	r3, r1, #6
    3fd2:	1ac0      	subs	r0, r0, r3
    3fd4:	4152      	adcs	r2, r2
    3fd6:	0943      	lsrs	r3, r0, #5
    3fd8:	428b      	cmp	r3, r1
    3fda:	d301      	bcc.n	3fe0 <__udivsi3+0xc0>
    3fdc:	014b      	lsls	r3, r1, #5
    3fde:	1ac0      	subs	r0, r0, r3
    3fe0:	4152      	adcs	r2, r2
    3fe2:	0903      	lsrs	r3, r0, #4
    3fe4:	428b      	cmp	r3, r1
    3fe6:	d301      	bcc.n	3fec <__udivsi3+0xcc>
    3fe8:	010b      	lsls	r3, r1, #4
    3fea:	1ac0      	subs	r0, r0, r3
    3fec:	4152      	adcs	r2, r2
    3fee:	08c3      	lsrs	r3, r0, #3
    3ff0:	428b      	cmp	r3, r1
    3ff2:	d301      	bcc.n	3ff8 <__udivsi3+0xd8>
    3ff4:	00cb      	lsls	r3, r1, #3
    3ff6:	1ac0      	subs	r0, r0, r3
    3ff8:	4152      	adcs	r2, r2
    3ffa:	0883      	lsrs	r3, r0, #2
    3ffc:	428b      	cmp	r3, r1
    3ffe:	d301      	bcc.n	4004 <__udivsi3+0xe4>
    4000:	008b      	lsls	r3, r1, #2
    4002:	1ac0      	subs	r0, r0, r3
    4004:	4152      	adcs	r2, r2
    4006:	0843      	lsrs	r3, r0, #1
    4008:	428b      	cmp	r3, r1
    400a:	d301      	bcc.n	4010 <__udivsi3+0xf0>
    400c:	004b      	lsls	r3, r1, #1
    400e:	1ac0      	subs	r0, r0, r3
    4010:	4152      	adcs	r2, r2
    4012:	1a41      	subs	r1, r0, r1
    4014:	d200      	bcs.n	4018 <__udivsi3+0xf8>
    4016:	4601      	mov	r1, r0
    4018:	4152      	adcs	r2, r2
    401a:	4610      	mov	r0, r2
    401c:	4770      	bx	lr
    401e:	e7ff      	b.n	4020 <__udivsi3+0x100>
    4020:	b501      	push	{r0, lr}
    4022:	2000      	movs	r0, #0
    4024:	f000 f8f0 	bl	4208 <__aeabi_idiv0>
    4028:	bd02      	pop	{r1, pc}
    402a:	46c0      	nop			; (mov r8, r8)

0000402c <__aeabi_uidivmod>:
    402c:	2900      	cmp	r1, #0
    402e:	d0f7      	beq.n	4020 <__udivsi3+0x100>
    4030:	e776      	b.n	3f20 <__udivsi3>
    4032:	4770      	bx	lr

00004034 <__divsi3>:
    4034:	4603      	mov	r3, r0
    4036:	430b      	orrs	r3, r1
    4038:	d47f      	bmi.n	413a <__divsi3+0x106>
    403a:	2200      	movs	r2, #0
    403c:	0843      	lsrs	r3, r0, #1
    403e:	428b      	cmp	r3, r1
    4040:	d374      	bcc.n	412c <__divsi3+0xf8>
    4042:	0903      	lsrs	r3, r0, #4
    4044:	428b      	cmp	r3, r1
    4046:	d35f      	bcc.n	4108 <__divsi3+0xd4>
    4048:	0a03      	lsrs	r3, r0, #8
    404a:	428b      	cmp	r3, r1
    404c:	d344      	bcc.n	40d8 <__divsi3+0xa4>
    404e:	0b03      	lsrs	r3, r0, #12
    4050:	428b      	cmp	r3, r1
    4052:	d328      	bcc.n	40a6 <__divsi3+0x72>
    4054:	0c03      	lsrs	r3, r0, #16
    4056:	428b      	cmp	r3, r1
    4058:	d30d      	bcc.n	4076 <__divsi3+0x42>
    405a:	22ff      	movs	r2, #255	; 0xff
    405c:	0209      	lsls	r1, r1, #8
    405e:	ba12      	rev	r2, r2
    4060:	0c03      	lsrs	r3, r0, #16
    4062:	428b      	cmp	r3, r1
    4064:	d302      	bcc.n	406c <__divsi3+0x38>
    4066:	1212      	asrs	r2, r2, #8
    4068:	0209      	lsls	r1, r1, #8
    406a:	d065      	beq.n	4138 <__divsi3+0x104>
    406c:	0b03      	lsrs	r3, r0, #12
    406e:	428b      	cmp	r3, r1
    4070:	d319      	bcc.n	40a6 <__divsi3+0x72>
    4072:	e000      	b.n	4076 <__divsi3+0x42>
    4074:	0a09      	lsrs	r1, r1, #8
    4076:	0bc3      	lsrs	r3, r0, #15
    4078:	428b      	cmp	r3, r1
    407a:	d301      	bcc.n	4080 <__divsi3+0x4c>
    407c:	03cb      	lsls	r3, r1, #15
    407e:	1ac0      	subs	r0, r0, r3
    4080:	4152      	adcs	r2, r2
    4082:	0b83      	lsrs	r3, r0, #14
    4084:	428b      	cmp	r3, r1
    4086:	d301      	bcc.n	408c <__divsi3+0x58>
    4088:	038b      	lsls	r3, r1, #14
    408a:	1ac0      	subs	r0, r0, r3
    408c:	4152      	adcs	r2, r2
    408e:	0b43      	lsrs	r3, r0, #13
    4090:	428b      	cmp	r3, r1
    4092:	d301      	bcc.n	4098 <__divsi3+0x64>
    4094:	034b      	lsls	r3, r1, #13
    4096:	1ac0      	subs	r0, r0, r3
    4098:	4152      	adcs	r2, r2
    409a:	0b03      	lsrs	r3, r0, #12
    409c:	428b      	cmp	r3, r1
    409e:	d301      	bcc.n	40a4 <__divsi3+0x70>
    40a0:	030b      	lsls	r3, r1, #12
    40a2:	1ac0      	subs	r0, r0, r3
    40a4:	4152      	adcs	r2, r2
    40a6:	0ac3      	lsrs	r3, r0, #11
    40a8:	428b      	cmp	r3, r1
    40aa:	d301      	bcc.n	40b0 <__divsi3+0x7c>
    40ac:	02cb      	lsls	r3, r1, #11
    40ae:	1ac0      	subs	r0, r0, r3
    40b0:	4152      	adcs	r2, r2
    40b2:	0a83      	lsrs	r3, r0, #10
    40b4:	428b      	cmp	r3, r1
    40b6:	d301      	bcc.n	40bc <__divsi3+0x88>
    40b8:	028b      	lsls	r3, r1, #10
    40ba:	1ac0      	subs	r0, r0, r3
    40bc:	4152      	adcs	r2, r2
    40be:	0a43      	lsrs	r3, r0, #9
    40c0:	428b      	cmp	r3, r1
    40c2:	d301      	bcc.n	40c8 <__divsi3+0x94>
    40c4:	024b      	lsls	r3, r1, #9
    40c6:	1ac0      	subs	r0, r0, r3
    40c8:	4152      	adcs	r2, r2
    40ca:	0a03      	lsrs	r3, r0, #8
    40cc:	428b      	cmp	r3, r1
    40ce:	d301      	bcc.n	40d4 <__divsi3+0xa0>
    40d0:	020b      	lsls	r3, r1, #8
    40d2:	1ac0      	subs	r0, r0, r3
    40d4:	4152      	adcs	r2, r2
    40d6:	d2cd      	bcs.n	4074 <__divsi3+0x40>
    40d8:	09c3      	lsrs	r3, r0, #7
    40da:	428b      	cmp	r3, r1
    40dc:	d301      	bcc.n	40e2 <__divsi3+0xae>
    40de:	01cb      	lsls	r3, r1, #7
    40e0:	1ac0      	subs	r0, r0, r3
    40e2:	4152      	adcs	r2, r2
    40e4:	0983      	lsrs	r3, r0, #6
    40e6:	428b      	cmp	r3, r1
    40e8:	d301      	bcc.n	40ee <__divsi3+0xba>
    40ea:	018b      	lsls	r3, r1, #6
    40ec:	1ac0      	subs	r0, r0, r3
    40ee:	4152      	adcs	r2, r2
    40f0:	0943      	lsrs	r3, r0, #5
    40f2:	428b      	cmp	r3, r1
    40f4:	d301      	bcc.n	40fa <__divsi3+0xc6>
    40f6:	014b      	lsls	r3, r1, #5
    40f8:	1ac0      	subs	r0, r0, r3
    40fa:	4152      	adcs	r2, r2
    40fc:	0903      	lsrs	r3, r0, #4
    40fe:	428b      	cmp	r3, r1
    4100:	d301      	bcc.n	4106 <__divsi3+0xd2>
    4102:	010b      	lsls	r3, r1, #4
    4104:	1ac0      	subs	r0, r0, r3
    4106:	4152      	adcs	r2, r2
    4108:	08c3      	lsrs	r3, r0, #3
    410a:	428b      	cmp	r3, r1
    410c:	d301      	bcc.n	4112 <__divsi3+0xde>
    410e:	00cb      	lsls	r3, r1, #3
    4110:	1ac0      	subs	r0, r0, r3
    4112:	4152      	adcs	r2, r2
    4114:	0883      	lsrs	r3, r0, #2
    4116:	428b      	cmp	r3, r1
    4118:	d301      	bcc.n	411e <__divsi3+0xea>
    411a:	008b      	lsls	r3, r1, #2
    411c:	1ac0      	subs	r0, r0, r3
    411e:	4152      	adcs	r2, r2
    4120:	0843      	lsrs	r3, r0, #1
    4122:	428b      	cmp	r3, r1
    4124:	d301      	bcc.n	412a <__divsi3+0xf6>
    4126:	004b      	lsls	r3, r1, #1
    4128:	1ac0      	subs	r0, r0, r3
    412a:	4152      	adcs	r2, r2
    412c:	1a41      	subs	r1, r0, r1
    412e:	d200      	bcs.n	4132 <__divsi3+0xfe>
    4130:	4601      	mov	r1, r0
    4132:	4152      	adcs	r2, r2
    4134:	4610      	mov	r0, r2
    4136:	4770      	bx	lr
    4138:	e05d      	b.n	41f6 <__divsi3+0x1c2>
    413a:	0fca      	lsrs	r2, r1, #31
    413c:	d000      	beq.n	4140 <__divsi3+0x10c>
    413e:	4249      	negs	r1, r1
    4140:	1003      	asrs	r3, r0, #32
    4142:	d300      	bcc.n	4146 <__divsi3+0x112>
    4144:	4240      	negs	r0, r0
    4146:	4053      	eors	r3, r2
    4148:	2200      	movs	r2, #0
    414a:	469c      	mov	ip, r3
    414c:	0903      	lsrs	r3, r0, #4
    414e:	428b      	cmp	r3, r1
    4150:	d32d      	bcc.n	41ae <__divsi3+0x17a>
    4152:	0a03      	lsrs	r3, r0, #8
    4154:	428b      	cmp	r3, r1
    4156:	d312      	bcc.n	417e <__divsi3+0x14a>
    4158:	22fc      	movs	r2, #252	; 0xfc
    415a:	0189      	lsls	r1, r1, #6
    415c:	ba12      	rev	r2, r2
    415e:	0a03      	lsrs	r3, r0, #8
    4160:	428b      	cmp	r3, r1
    4162:	d30c      	bcc.n	417e <__divsi3+0x14a>
    4164:	0189      	lsls	r1, r1, #6
    4166:	1192      	asrs	r2, r2, #6
    4168:	428b      	cmp	r3, r1
    416a:	d308      	bcc.n	417e <__divsi3+0x14a>
    416c:	0189      	lsls	r1, r1, #6
    416e:	1192      	asrs	r2, r2, #6
    4170:	428b      	cmp	r3, r1
    4172:	d304      	bcc.n	417e <__divsi3+0x14a>
    4174:	0189      	lsls	r1, r1, #6
    4176:	d03a      	beq.n	41ee <__divsi3+0x1ba>
    4178:	1192      	asrs	r2, r2, #6
    417a:	e000      	b.n	417e <__divsi3+0x14a>
    417c:	0989      	lsrs	r1, r1, #6
    417e:	09c3      	lsrs	r3, r0, #7
    4180:	428b      	cmp	r3, r1
    4182:	d301      	bcc.n	4188 <__divsi3+0x154>
    4184:	01cb      	lsls	r3, r1, #7
    4186:	1ac0      	subs	r0, r0, r3
    4188:	4152      	adcs	r2, r2
    418a:	0983      	lsrs	r3, r0, #6
    418c:	428b      	cmp	r3, r1
    418e:	d301      	bcc.n	4194 <__divsi3+0x160>
    4190:	018b      	lsls	r3, r1, #6
    4192:	1ac0      	subs	r0, r0, r3
    4194:	4152      	adcs	r2, r2
    4196:	0943      	lsrs	r3, r0, #5
    4198:	428b      	cmp	r3, r1
    419a:	d301      	bcc.n	41a0 <__divsi3+0x16c>
    419c:	014b      	lsls	r3, r1, #5
    419e:	1ac0      	subs	r0, r0, r3
    41a0:	4152      	adcs	r2, r2
    41a2:	0903      	lsrs	r3, r0, #4
    41a4:	428b      	cmp	r3, r1
    41a6:	d301      	bcc.n	41ac <__divsi3+0x178>
    41a8:	010b      	lsls	r3, r1, #4
    41aa:	1ac0      	subs	r0, r0, r3
    41ac:	4152      	adcs	r2, r2
    41ae:	08c3      	lsrs	r3, r0, #3
    41b0:	428b      	cmp	r3, r1
    41b2:	d301      	bcc.n	41b8 <__divsi3+0x184>
    41b4:	00cb      	lsls	r3, r1, #3
    41b6:	1ac0      	subs	r0, r0, r3
    41b8:	4152      	adcs	r2, r2
    41ba:	0883      	lsrs	r3, r0, #2
    41bc:	428b      	cmp	r3, r1
    41be:	d301      	bcc.n	41c4 <__divsi3+0x190>
    41c0:	008b      	lsls	r3, r1, #2
    41c2:	1ac0      	subs	r0, r0, r3
    41c4:	4152      	adcs	r2, r2
    41c6:	d2d9      	bcs.n	417c <__divsi3+0x148>
    41c8:	0843      	lsrs	r3, r0, #1
    41ca:	428b      	cmp	r3, r1
    41cc:	d301      	bcc.n	41d2 <__divsi3+0x19e>
    41ce:	004b      	lsls	r3, r1, #1
    41d0:	1ac0      	subs	r0, r0, r3
    41d2:	4152      	adcs	r2, r2
    41d4:	1a41      	subs	r1, r0, r1
    41d6:	d200      	bcs.n	41da <__divsi3+0x1a6>
    41d8:	4601      	mov	r1, r0
    41da:	4663      	mov	r3, ip
    41dc:	4152      	adcs	r2, r2
    41de:	105b      	asrs	r3, r3, #1
    41e0:	4610      	mov	r0, r2
    41e2:	d301      	bcc.n	41e8 <__divsi3+0x1b4>
    41e4:	4240      	negs	r0, r0
    41e6:	2b00      	cmp	r3, #0
    41e8:	d500      	bpl.n	41ec <__divsi3+0x1b8>
    41ea:	4249      	negs	r1, r1
    41ec:	4770      	bx	lr
    41ee:	4663      	mov	r3, ip
    41f0:	105b      	asrs	r3, r3, #1
    41f2:	d300      	bcc.n	41f6 <__divsi3+0x1c2>
    41f4:	4240      	negs	r0, r0
    41f6:	b501      	push	{r0, lr}
    41f8:	2000      	movs	r0, #0
    41fa:	f000 f805 	bl	4208 <__aeabi_idiv0>
    41fe:	bd02      	pop	{r1, pc}

00004200 <__aeabi_idivmod>:
    4200:	2900      	cmp	r1, #0
    4202:	d0f8      	beq.n	41f6 <__divsi3+0x1c2>
    4204:	e716      	b.n	4034 <__divsi3>
    4206:	4770      	bx	lr

00004208 <__aeabi_idiv0>:
    4208:	4770      	bx	lr
    420a:	46c0      	nop			; (mov r8, r8)

0000420c <__aeabi_cdrcmple>:
    420c:	4684      	mov	ip, r0
    420e:	1c10      	adds	r0, r2, #0
    4210:	4662      	mov	r2, ip
    4212:	468c      	mov	ip, r1
    4214:	1c19      	adds	r1, r3, #0
    4216:	4663      	mov	r3, ip
    4218:	e000      	b.n	421c <__aeabi_cdcmpeq>
    421a:	46c0      	nop			; (mov r8, r8)

0000421c <__aeabi_cdcmpeq>:
    421c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    421e:	f000 ff33 	bl	5088 <__ledf2>
    4222:	2800      	cmp	r0, #0
    4224:	d401      	bmi.n	422a <__aeabi_cdcmpeq+0xe>
    4226:	2100      	movs	r1, #0
    4228:	42c8      	cmn	r0, r1
    422a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0000422c <__aeabi_dcmpeq>:
    422c:	b510      	push	{r4, lr}
    422e:	f000 fe8d 	bl	4f4c <__eqdf2>
    4232:	4240      	negs	r0, r0
    4234:	3001      	adds	r0, #1
    4236:	bd10      	pop	{r4, pc}

00004238 <__aeabi_dcmplt>:
    4238:	b510      	push	{r4, lr}
    423a:	f000 ff25 	bl	5088 <__ledf2>
    423e:	2800      	cmp	r0, #0
    4240:	db01      	blt.n	4246 <__aeabi_dcmplt+0xe>
    4242:	2000      	movs	r0, #0
    4244:	bd10      	pop	{r4, pc}
    4246:	2001      	movs	r0, #1
    4248:	bd10      	pop	{r4, pc}
    424a:	46c0      	nop			; (mov r8, r8)

0000424c <__aeabi_dcmple>:
    424c:	b510      	push	{r4, lr}
    424e:	f000 ff1b 	bl	5088 <__ledf2>
    4252:	2800      	cmp	r0, #0
    4254:	dd01      	ble.n	425a <__aeabi_dcmple+0xe>
    4256:	2000      	movs	r0, #0
    4258:	bd10      	pop	{r4, pc}
    425a:	2001      	movs	r0, #1
    425c:	bd10      	pop	{r4, pc}
    425e:	46c0      	nop			; (mov r8, r8)

00004260 <__aeabi_dcmpgt>:
    4260:	b510      	push	{r4, lr}
    4262:	f000 fead 	bl	4fc0 <__gedf2>
    4266:	2800      	cmp	r0, #0
    4268:	dc01      	bgt.n	426e <__aeabi_dcmpgt+0xe>
    426a:	2000      	movs	r0, #0
    426c:	bd10      	pop	{r4, pc}
    426e:	2001      	movs	r0, #1
    4270:	bd10      	pop	{r4, pc}
    4272:	46c0      	nop			; (mov r8, r8)

00004274 <__aeabi_dcmpge>:
    4274:	b510      	push	{r4, lr}
    4276:	f000 fea3 	bl	4fc0 <__gedf2>
    427a:	2800      	cmp	r0, #0
    427c:	da01      	bge.n	4282 <__aeabi_dcmpge+0xe>
    427e:	2000      	movs	r0, #0
    4280:	bd10      	pop	{r4, pc}
    4282:	2001      	movs	r0, #1
    4284:	bd10      	pop	{r4, pc}
    4286:	46c0      	nop			; (mov r8, r8)

00004288 <__aeabi_d2uiz>:
    4288:	b570      	push	{r4, r5, r6, lr}
    428a:	2200      	movs	r2, #0
    428c:	4b0c      	ldr	r3, [pc, #48]	; (42c0 <__aeabi_d2uiz+0x38>)
    428e:	0004      	movs	r4, r0
    4290:	000d      	movs	r5, r1
    4292:	f7ff ffef 	bl	4274 <__aeabi_dcmpge>
    4296:	2800      	cmp	r0, #0
    4298:	d104      	bne.n	42a4 <__aeabi_d2uiz+0x1c>
    429a:	0020      	movs	r0, r4
    429c:	0029      	movs	r1, r5
    429e:	f001 fd0b 	bl	5cb8 <__aeabi_d2iz>
    42a2:	bd70      	pop	{r4, r5, r6, pc}
    42a4:	4b06      	ldr	r3, [pc, #24]	; (42c0 <__aeabi_d2uiz+0x38>)
    42a6:	2200      	movs	r2, #0
    42a8:	0020      	movs	r0, r4
    42aa:	0029      	movs	r1, r5
    42ac:	f001 f9ce 	bl	564c <__aeabi_dsub>
    42b0:	f001 fd02 	bl	5cb8 <__aeabi_d2iz>
    42b4:	2380      	movs	r3, #128	; 0x80
    42b6:	061b      	lsls	r3, r3, #24
    42b8:	469c      	mov	ip, r3
    42ba:	4460      	add	r0, ip
    42bc:	e7f1      	b.n	42a2 <__aeabi_d2uiz+0x1a>
    42be:	46c0      	nop			; (mov r8, r8)
    42c0:	41e00000 	.word	0x41e00000

000042c4 <__aeabi_dadd>:
    42c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    42c6:	4645      	mov	r5, r8
    42c8:	46de      	mov	lr, fp
    42ca:	4657      	mov	r7, sl
    42cc:	464e      	mov	r6, r9
    42ce:	030c      	lsls	r4, r1, #12
    42d0:	b5e0      	push	{r5, r6, r7, lr}
    42d2:	004e      	lsls	r6, r1, #1
    42d4:	0fc9      	lsrs	r1, r1, #31
    42d6:	4688      	mov	r8, r1
    42d8:	000d      	movs	r5, r1
    42da:	0a61      	lsrs	r1, r4, #9
    42dc:	0f44      	lsrs	r4, r0, #29
    42de:	430c      	orrs	r4, r1
    42e0:	00c7      	lsls	r7, r0, #3
    42e2:	0319      	lsls	r1, r3, #12
    42e4:	0058      	lsls	r0, r3, #1
    42e6:	0fdb      	lsrs	r3, r3, #31
    42e8:	469b      	mov	fp, r3
    42ea:	0a4b      	lsrs	r3, r1, #9
    42ec:	0f51      	lsrs	r1, r2, #29
    42ee:	430b      	orrs	r3, r1
    42f0:	0d76      	lsrs	r6, r6, #21
    42f2:	0d40      	lsrs	r0, r0, #21
    42f4:	0019      	movs	r1, r3
    42f6:	00d2      	lsls	r2, r2, #3
    42f8:	45d8      	cmp	r8, fp
    42fa:	d100      	bne.n	42fe <__aeabi_dadd+0x3a>
    42fc:	e0ae      	b.n	445c <__aeabi_dadd+0x198>
    42fe:	1a35      	subs	r5, r6, r0
    4300:	2d00      	cmp	r5, #0
    4302:	dc00      	bgt.n	4306 <__aeabi_dadd+0x42>
    4304:	e0f6      	b.n	44f4 <__aeabi_dadd+0x230>
    4306:	2800      	cmp	r0, #0
    4308:	d10f      	bne.n	432a <__aeabi_dadd+0x66>
    430a:	4313      	orrs	r3, r2
    430c:	d100      	bne.n	4310 <__aeabi_dadd+0x4c>
    430e:	e0db      	b.n	44c8 <__aeabi_dadd+0x204>
    4310:	1e6b      	subs	r3, r5, #1
    4312:	2b00      	cmp	r3, #0
    4314:	d000      	beq.n	4318 <__aeabi_dadd+0x54>
    4316:	e137      	b.n	4588 <__aeabi_dadd+0x2c4>
    4318:	1aba      	subs	r2, r7, r2
    431a:	4297      	cmp	r7, r2
    431c:	41bf      	sbcs	r7, r7
    431e:	1a64      	subs	r4, r4, r1
    4320:	427f      	negs	r7, r7
    4322:	1be4      	subs	r4, r4, r7
    4324:	2601      	movs	r6, #1
    4326:	0017      	movs	r7, r2
    4328:	e024      	b.n	4374 <__aeabi_dadd+0xb0>
    432a:	4bc6      	ldr	r3, [pc, #792]	; (4644 <__aeabi_dadd+0x380>)
    432c:	429e      	cmp	r6, r3
    432e:	d04d      	beq.n	43cc <__aeabi_dadd+0x108>
    4330:	2380      	movs	r3, #128	; 0x80
    4332:	041b      	lsls	r3, r3, #16
    4334:	4319      	orrs	r1, r3
    4336:	2d38      	cmp	r5, #56	; 0x38
    4338:	dd00      	ble.n	433c <__aeabi_dadd+0x78>
    433a:	e107      	b.n	454c <__aeabi_dadd+0x288>
    433c:	2d1f      	cmp	r5, #31
    433e:	dd00      	ble.n	4342 <__aeabi_dadd+0x7e>
    4340:	e138      	b.n	45b4 <__aeabi_dadd+0x2f0>
    4342:	2020      	movs	r0, #32
    4344:	1b43      	subs	r3, r0, r5
    4346:	469a      	mov	sl, r3
    4348:	000b      	movs	r3, r1
    434a:	4650      	mov	r0, sl
    434c:	4083      	lsls	r3, r0
    434e:	4699      	mov	r9, r3
    4350:	0013      	movs	r3, r2
    4352:	4648      	mov	r0, r9
    4354:	40eb      	lsrs	r3, r5
    4356:	4318      	orrs	r0, r3
    4358:	0003      	movs	r3, r0
    435a:	4650      	mov	r0, sl
    435c:	4082      	lsls	r2, r0
    435e:	1e50      	subs	r0, r2, #1
    4360:	4182      	sbcs	r2, r0
    4362:	40e9      	lsrs	r1, r5
    4364:	431a      	orrs	r2, r3
    4366:	1aba      	subs	r2, r7, r2
    4368:	1a61      	subs	r1, r4, r1
    436a:	4297      	cmp	r7, r2
    436c:	41a4      	sbcs	r4, r4
    436e:	0017      	movs	r7, r2
    4370:	4264      	negs	r4, r4
    4372:	1b0c      	subs	r4, r1, r4
    4374:	0223      	lsls	r3, r4, #8
    4376:	d562      	bpl.n	443e <__aeabi_dadd+0x17a>
    4378:	0264      	lsls	r4, r4, #9
    437a:	0a65      	lsrs	r5, r4, #9
    437c:	2d00      	cmp	r5, #0
    437e:	d100      	bne.n	4382 <__aeabi_dadd+0xbe>
    4380:	e0df      	b.n	4542 <__aeabi_dadd+0x27e>
    4382:	0028      	movs	r0, r5
    4384:	f001 fd0e 	bl	5da4 <__clzsi2>
    4388:	0003      	movs	r3, r0
    438a:	3b08      	subs	r3, #8
    438c:	2b1f      	cmp	r3, #31
    438e:	dd00      	ble.n	4392 <__aeabi_dadd+0xce>
    4390:	e0d2      	b.n	4538 <__aeabi_dadd+0x274>
    4392:	2220      	movs	r2, #32
    4394:	003c      	movs	r4, r7
    4396:	1ad2      	subs	r2, r2, r3
    4398:	409d      	lsls	r5, r3
    439a:	40d4      	lsrs	r4, r2
    439c:	409f      	lsls	r7, r3
    439e:	4325      	orrs	r5, r4
    43a0:	429e      	cmp	r6, r3
    43a2:	dd00      	ble.n	43a6 <__aeabi_dadd+0xe2>
    43a4:	e0c4      	b.n	4530 <__aeabi_dadd+0x26c>
    43a6:	1b9e      	subs	r6, r3, r6
    43a8:	1c73      	adds	r3, r6, #1
    43aa:	2b1f      	cmp	r3, #31
    43ac:	dd00      	ble.n	43b0 <__aeabi_dadd+0xec>
    43ae:	e0f1      	b.n	4594 <__aeabi_dadd+0x2d0>
    43b0:	2220      	movs	r2, #32
    43b2:	0038      	movs	r0, r7
    43b4:	0029      	movs	r1, r5
    43b6:	1ad2      	subs	r2, r2, r3
    43b8:	40d8      	lsrs	r0, r3
    43ba:	4091      	lsls	r1, r2
    43bc:	4097      	lsls	r7, r2
    43be:	002c      	movs	r4, r5
    43c0:	4301      	orrs	r1, r0
    43c2:	1e78      	subs	r0, r7, #1
    43c4:	4187      	sbcs	r7, r0
    43c6:	40dc      	lsrs	r4, r3
    43c8:	2600      	movs	r6, #0
    43ca:	430f      	orrs	r7, r1
    43cc:	077b      	lsls	r3, r7, #29
    43ce:	d009      	beq.n	43e4 <__aeabi_dadd+0x120>
    43d0:	230f      	movs	r3, #15
    43d2:	403b      	ands	r3, r7
    43d4:	2b04      	cmp	r3, #4
    43d6:	d005      	beq.n	43e4 <__aeabi_dadd+0x120>
    43d8:	1d3b      	adds	r3, r7, #4
    43da:	42bb      	cmp	r3, r7
    43dc:	41bf      	sbcs	r7, r7
    43de:	427f      	negs	r7, r7
    43e0:	19e4      	adds	r4, r4, r7
    43e2:	001f      	movs	r7, r3
    43e4:	0223      	lsls	r3, r4, #8
    43e6:	d52c      	bpl.n	4442 <__aeabi_dadd+0x17e>
    43e8:	4b96      	ldr	r3, [pc, #600]	; (4644 <__aeabi_dadd+0x380>)
    43ea:	3601      	adds	r6, #1
    43ec:	429e      	cmp	r6, r3
    43ee:	d100      	bne.n	43f2 <__aeabi_dadd+0x12e>
    43f0:	e09a      	b.n	4528 <__aeabi_dadd+0x264>
    43f2:	4645      	mov	r5, r8
    43f4:	4b94      	ldr	r3, [pc, #592]	; (4648 <__aeabi_dadd+0x384>)
    43f6:	08ff      	lsrs	r7, r7, #3
    43f8:	401c      	ands	r4, r3
    43fa:	0760      	lsls	r0, r4, #29
    43fc:	0576      	lsls	r6, r6, #21
    43fe:	0264      	lsls	r4, r4, #9
    4400:	4307      	orrs	r7, r0
    4402:	0b24      	lsrs	r4, r4, #12
    4404:	0d76      	lsrs	r6, r6, #21
    4406:	2100      	movs	r1, #0
    4408:	0324      	lsls	r4, r4, #12
    440a:	0b23      	lsrs	r3, r4, #12
    440c:	0d0c      	lsrs	r4, r1, #20
    440e:	4a8f      	ldr	r2, [pc, #572]	; (464c <__aeabi_dadd+0x388>)
    4410:	0524      	lsls	r4, r4, #20
    4412:	431c      	orrs	r4, r3
    4414:	4014      	ands	r4, r2
    4416:	0533      	lsls	r3, r6, #20
    4418:	4323      	orrs	r3, r4
    441a:	005b      	lsls	r3, r3, #1
    441c:	07ed      	lsls	r5, r5, #31
    441e:	085b      	lsrs	r3, r3, #1
    4420:	432b      	orrs	r3, r5
    4422:	0038      	movs	r0, r7
    4424:	0019      	movs	r1, r3
    4426:	bc3c      	pop	{r2, r3, r4, r5}
    4428:	4690      	mov	r8, r2
    442a:	4699      	mov	r9, r3
    442c:	46a2      	mov	sl, r4
    442e:	46ab      	mov	fp, r5
    4430:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4432:	4664      	mov	r4, ip
    4434:	4304      	orrs	r4, r0
    4436:	d100      	bne.n	443a <__aeabi_dadd+0x176>
    4438:	e211      	b.n	485e <__aeabi_dadd+0x59a>
    443a:	0004      	movs	r4, r0
    443c:	4667      	mov	r7, ip
    443e:	077b      	lsls	r3, r7, #29
    4440:	d1c6      	bne.n	43d0 <__aeabi_dadd+0x10c>
    4442:	4645      	mov	r5, r8
    4444:	0760      	lsls	r0, r4, #29
    4446:	08ff      	lsrs	r7, r7, #3
    4448:	4307      	orrs	r7, r0
    444a:	08e4      	lsrs	r4, r4, #3
    444c:	4b7d      	ldr	r3, [pc, #500]	; (4644 <__aeabi_dadd+0x380>)
    444e:	429e      	cmp	r6, r3
    4450:	d030      	beq.n	44b4 <__aeabi_dadd+0x1f0>
    4452:	0324      	lsls	r4, r4, #12
    4454:	0576      	lsls	r6, r6, #21
    4456:	0b24      	lsrs	r4, r4, #12
    4458:	0d76      	lsrs	r6, r6, #21
    445a:	e7d4      	b.n	4406 <__aeabi_dadd+0x142>
    445c:	1a33      	subs	r3, r6, r0
    445e:	469a      	mov	sl, r3
    4460:	2b00      	cmp	r3, #0
    4462:	dd78      	ble.n	4556 <__aeabi_dadd+0x292>
    4464:	2800      	cmp	r0, #0
    4466:	d031      	beq.n	44cc <__aeabi_dadd+0x208>
    4468:	4876      	ldr	r0, [pc, #472]	; (4644 <__aeabi_dadd+0x380>)
    446a:	4286      	cmp	r6, r0
    446c:	d0ae      	beq.n	43cc <__aeabi_dadd+0x108>
    446e:	2080      	movs	r0, #128	; 0x80
    4470:	0400      	lsls	r0, r0, #16
    4472:	4301      	orrs	r1, r0
    4474:	4653      	mov	r3, sl
    4476:	2b38      	cmp	r3, #56	; 0x38
    4478:	dc00      	bgt.n	447c <__aeabi_dadd+0x1b8>
    447a:	e0e9      	b.n	4650 <__aeabi_dadd+0x38c>
    447c:	430a      	orrs	r2, r1
    447e:	1e51      	subs	r1, r2, #1
    4480:	418a      	sbcs	r2, r1
    4482:	2100      	movs	r1, #0
    4484:	19d2      	adds	r2, r2, r7
    4486:	42ba      	cmp	r2, r7
    4488:	41bf      	sbcs	r7, r7
    448a:	1909      	adds	r1, r1, r4
    448c:	427c      	negs	r4, r7
    448e:	0017      	movs	r7, r2
    4490:	190c      	adds	r4, r1, r4
    4492:	0223      	lsls	r3, r4, #8
    4494:	d5d3      	bpl.n	443e <__aeabi_dadd+0x17a>
    4496:	4b6b      	ldr	r3, [pc, #428]	; (4644 <__aeabi_dadd+0x380>)
    4498:	3601      	adds	r6, #1
    449a:	429e      	cmp	r6, r3
    449c:	d100      	bne.n	44a0 <__aeabi_dadd+0x1dc>
    449e:	e13a      	b.n	4716 <__aeabi_dadd+0x452>
    44a0:	2001      	movs	r0, #1
    44a2:	4b69      	ldr	r3, [pc, #420]	; (4648 <__aeabi_dadd+0x384>)
    44a4:	401c      	ands	r4, r3
    44a6:	087b      	lsrs	r3, r7, #1
    44a8:	4007      	ands	r7, r0
    44aa:	431f      	orrs	r7, r3
    44ac:	07e0      	lsls	r0, r4, #31
    44ae:	4307      	orrs	r7, r0
    44b0:	0864      	lsrs	r4, r4, #1
    44b2:	e78b      	b.n	43cc <__aeabi_dadd+0x108>
    44b4:	0023      	movs	r3, r4
    44b6:	433b      	orrs	r3, r7
    44b8:	d100      	bne.n	44bc <__aeabi_dadd+0x1f8>
    44ba:	e1cb      	b.n	4854 <__aeabi_dadd+0x590>
    44bc:	2280      	movs	r2, #128	; 0x80
    44be:	0312      	lsls	r2, r2, #12
    44c0:	4314      	orrs	r4, r2
    44c2:	0324      	lsls	r4, r4, #12
    44c4:	0b24      	lsrs	r4, r4, #12
    44c6:	e79e      	b.n	4406 <__aeabi_dadd+0x142>
    44c8:	002e      	movs	r6, r5
    44ca:	e77f      	b.n	43cc <__aeabi_dadd+0x108>
    44cc:	0008      	movs	r0, r1
    44ce:	4310      	orrs	r0, r2
    44d0:	d100      	bne.n	44d4 <__aeabi_dadd+0x210>
    44d2:	e0b4      	b.n	463e <__aeabi_dadd+0x37a>
    44d4:	1e58      	subs	r0, r3, #1
    44d6:	2800      	cmp	r0, #0
    44d8:	d000      	beq.n	44dc <__aeabi_dadd+0x218>
    44da:	e0de      	b.n	469a <__aeabi_dadd+0x3d6>
    44dc:	18ba      	adds	r2, r7, r2
    44de:	42ba      	cmp	r2, r7
    44e0:	419b      	sbcs	r3, r3
    44e2:	1864      	adds	r4, r4, r1
    44e4:	425b      	negs	r3, r3
    44e6:	18e4      	adds	r4, r4, r3
    44e8:	0017      	movs	r7, r2
    44ea:	2601      	movs	r6, #1
    44ec:	0223      	lsls	r3, r4, #8
    44ee:	d5a6      	bpl.n	443e <__aeabi_dadd+0x17a>
    44f0:	2602      	movs	r6, #2
    44f2:	e7d5      	b.n	44a0 <__aeabi_dadd+0x1dc>
    44f4:	2d00      	cmp	r5, #0
    44f6:	d16e      	bne.n	45d6 <__aeabi_dadd+0x312>
    44f8:	1c70      	adds	r0, r6, #1
    44fa:	0540      	lsls	r0, r0, #21
    44fc:	0d40      	lsrs	r0, r0, #21
    44fe:	2801      	cmp	r0, #1
    4500:	dc00      	bgt.n	4504 <__aeabi_dadd+0x240>
    4502:	e0f9      	b.n	46f8 <__aeabi_dadd+0x434>
    4504:	1ab8      	subs	r0, r7, r2
    4506:	4684      	mov	ip, r0
    4508:	4287      	cmp	r7, r0
    450a:	4180      	sbcs	r0, r0
    450c:	1ae5      	subs	r5, r4, r3
    450e:	4240      	negs	r0, r0
    4510:	1a2d      	subs	r5, r5, r0
    4512:	0228      	lsls	r0, r5, #8
    4514:	d400      	bmi.n	4518 <__aeabi_dadd+0x254>
    4516:	e089      	b.n	462c <__aeabi_dadd+0x368>
    4518:	1bd7      	subs	r7, r2, r7
    451a:	42ba      	cmp	r2, r7
    451c:	4192      	sbcs	r2, r2
    451e:	1b1c      	subs	r4, r3, r4
    4520:	4252      	negs	r2, r2
    4522:	1aa5      	subs	r5, r4, r2
    4524:	46d8      	mov	r8, fp
    4526:	e729      	b.n	437c <__aeabi_dadd+0xb8>
    4528:	4645      	mov	r5, r8
    452a:	2400      	movs	r4, #0
    452c:	2700      	movs	r7, #0
    452e:	e76a      	b.n	4406 <__aeabi_dadd+0x142>
    4530:	4c45      	ldr	r4, [pc, #276]	; (4648 <__aeabi_dadd+0x384>)
    4532:	1af6      	subs	r6, r6, r3
    4534:	402c      	ands	r4, r5
    4536:	e749      	b.n	43cc <__aeabi_dadd+0x108>
    4538:	003d      	movs	r5, r7
    453a:	3828      	subs	r0, #40	; 0x28
    453c:	4085      	lsls	r5, r0
    453e:	2700      	movs	r7, #0
    4540:	e72e      	b.n	43a0 <__aeabi_dadd+0xdc>
    4542:	0038      	movs	r0, r7
    4544:	f001 fc2e 	bl	5da4 <__clzsi2>
    4548:	3020      	adds	r0, #32
    454a:	e71d      	b.n	4388 <__aeabi_dadd+0xc4>
    454c:	430a      	orrs	r2, r1
    454e:	1e51      	subs	r1, r2, #1
    4550:	418a      	sbcs	r2, r1
    4552:	2100      	movs	r1, #0
    4554:	e707      	b.n	4366 <__aeabi_dadd+0xa2>
    4556:	2b00      	cmp	r3, #0
    4558:	d000      	beq.n	455c <__aeabi_dadd+0x298>
    455a:	e0f3      	b.n	4744 <__aeabi_dadd+0x480>
    455c:	1c70      	adds	r0, r6, #1
    455e:	0543      	lsls	r3, r0, #21
    4560:	0d5b      	lsrs	r3, r3, #21
    4562:	2b01      	cmp	r3, #1
    4564:	dc00      	bgt.n	4568 <__aeabi_dadd+0x2a4>
    4566:	e0ad      	b.n	46c4 <__aeabi_dadd+0x400>
    4568:	4b36      	ldr	r3, [pc, #216]	; (4644 <__aeabi_dadd+0x380>)
    456a:	4298      	cmp	r0, r3
    456c:	d100      	bne.n	4570 <__aeabi_dadd+0x2ac>
    456e:	e0d1      	b.n	4714 <__aeabi_dadd+0x450>
    4570:	18ba      	adds	r2, r7, r2
    4572:	42ba      	cmp	r2, r7
    4574:	41bf      	sbcs	r7, r7
    4576:	1864      	adds	r4, r4, r1
    4578:	427f      	negs	r7, r7
    457a:	19e4      	adds	r4, r4, r7
    457c:	07e7      	lsls	r7, r4, #31
    457e:	0852      	lsrs	r2, r2, #1
    4580:	4317      	orrs	r7, r2
    4582:	0864      	lsrs	r4, r4, #1
    4584:	0006      	movs	r6, r0
    4586:	e721      	b.n	43cc <__aeabi_dadd+0x108>
    4588:	482e      	ldr	r0, [pc, #184]	; (4644 <__aeabi_dadd+0x380>)
    458a:	4285      	cmp	r5, r0
    458c:	d100      	bne.n	4590 <__aeabi_dadd+0x2cc>
    458e:	e093      	b.n	46b8 <__aeabi_dadd+0x3f4>
    4590:	001d      	movs	r5, r3
    4592:	e6d0      	b.n	4336 <__aeabi_dadd+0x72>
    4594:	0029      	movs	r1, r5
    4596:	3e1f      	subs	r6, #31
    4598:	40f1      	lsrs	r1, r6
    459a:	2b20      	cmp	r3, #32
    459c:	d100      	bne.n	45a0 <__aeabi_dadd+0x2dc>
    459e:	e08d      	b.n	46bc <__aeabi_dadd+0x3f8>
    45a0:	2240      	movs	r2, #64	; 0x40
    45a2:	1ad3      	subs	r3, r2, r3
    45a4:	409d      	lsls	r5, r3
    45a6:	432f      	orrs	r7, r5
    45a8:	1e7d      	subs	r5, r7, #1
    45aa:	41af      	sbcs	r7, r5
    45ac:	2400      	movs	r4, #0
    45ae:	430f      	orrs	r7, r1
    45b0:	2600      	movs	r6, #0
    45b2:	e744      	b.n	443e <__aeabi_dadd+0x17a>
    45b4:	002b      	movs	r3, r5
    45b6:	0008      	movs	r0, r1
    45b8:	3b20      	subs	r3, #32
    45ba:	40d8      	lsrs	r0, r3
    45bc:	0003      	movs	r3, r0
    45be:	2d20      	cmp	r5, #32
    45c0:	d100      	bne.n	45c4 <__aeabi_dadd+0x300>
    45c2:	e07d      	b.n	46c0 <__aeabi_dadd+0x3fc>
    45c4:	2040      	movs	r0, #64	; 0x40
    45c6:	1b45      	subs	r5, r0, r5
    45c8:	40a9      	lsls	r1, r5
    45ca:	430a      	orrs	r2, r1
    45cc:	1e51      	subs	r1, r2, #1
    45ce:	418a      	sbcs	r2, r1
    45d0:	2100      	movs	r1, #0
    45d2:	431a      	orrs	r2, r3
    45d4:	e6c7      	b.n	4366 <__aeabi_dadd+0xa2>
    45d6:	2e00      	cmp	r6, #0
    45d8:	d050      	beq.n	467c <__aeabi_dadd+0x3b8>
    45da:	4e1a      	ldr	r6, [pc, #104]	; (4644 <__aeabi_dadd+0x380>)
    45dc:	42b0      	cmp	r0, r6
    45de:	d057      	beq.n	4690 <__aeabi_dadd+0x3cc>
    45e0:	2680      	movs	r6, #128	; 0x80
    45e2:	426b      	negs	r3, r5
    45e4:	4699      	mov	r9, r3
    45e6:	0436      	lsls	r6, r6, #16
    45e8:	4334      	orrs	r4, r6
    45ea:	464b      	mov	r3, r9
    45ec:	2b38      	cmp	r3, #56	; 0x38
    45ee:	dd00      	ble.n	45f2 <__aeabi_dadd+0x32e>
    45f0:	e0d6      	b.n	47a0 <__aeabi_dadd+0x4dc>
    45f2:	2b1f      	cmp	r3, #31
    45f4:	dd00      	ble.n	45f8 <__aeabi_dadd+0x334>
    45f6:	e135      	b.n	4864 <__aeabi_dadd+0x5a0>
    45f8:	2620      	movs	r6, #32
    45fa:	1af5      	subs	r5, r6, r3
    45fc:	0026      	movs	r6, r4
    45fe:	40ae      	lsls	r6, r5
    4600:	46b2      	mov	sl, r6
    4602:	003e      	movs	r6, r7
    4604:	40de      	lsrs	r6, r3
    4606:	46ac      	mov	ip, r5
    4608:	0035      	movs	r5, r6
    460a:	4656      	mov	r6, sl
    460c:	432e      	orrs	r6, r5
    460e:	4665      	mov	r5, ip
    4610:	40af      	lsls	r7, r5
    4612:	1e7d      	subs	r5, r7, #1
    4614:	41af      	sbcs	r7, r5
    4616:	40dc      	lsrs	r4, r3
    4618:	4337      	orrs	r7, r6
    461a:	1bd7      	subs	r7, r2, r7
    461c:	42ba      	cmp	r2, r7
    461e:	4192      	sbcs	r2, r2
    4620:	1b0c      	subs	r4, r1, r4
    4622:	4252      	negs	r2, r2
    4624:	1aa4      	subs	r4, r4, r2
    4626:	0006      	movs	r6, r0
    4628:	46d8      	mov	r8, fp
    462a:	e6a3      	b.n	4374 <__aeabi_dadd+0xb0>
    462c:	4664      	mov	r4, ip
    462e:	4667      	mov	r7, ip
    4630:	432c      	orrs	r4, r5
    4632:	d000      	beq.n	4636 <__aeabi_dadd+0x372>
    4634:	e6a2      	b.n	437c <__aeabi_dadd+0xb8>
    4636:	2500      	movs	r5, #0
    4638:	2600      	movs	r6, #0
    463a:	2700      	movs	r7, #0
    463c:	e706      	b.n	444c <__aeabi_dadd+0x188>
    463e:	001e      	movs	r6, r3
    4640:	e6c4      	b.n	43cc <__aeabi_dadd+0x108>
    4642:	46c0      	nop			; (mov r8, r8)
    4644:	000007ff 	.word	0x000007ff
    4648:	ff7fffff 	.word	0xff7fffff
    464c:	800fffff 	.word	0x800fffff
    4650:	2b1f      	cmp	r3, #31
    4652:	dc63      	bgt.n	471c <__aeabi_dadd+0x458>
    4654:	2020      	movs	r0, #32
    4656:	1ac3      	subs	r3, r0, r3
    4658:	0008      	movs	r0, r1
    465a:	4098      	lsls	r0, r3
    465c:	469c      	mov	ip, r3
    465e:	4683      	mov	fp, r0
    4660:	4653      	mov	r3, sl
    4662:	0010      	movs	r0, r2
    4664:	40d8      	lsrs	r0, r3
    4666:	0003      	movs	r3, r0
    4668:	4658      	mov	r0, fp
    466a:	4318      	orrs	r0, r3
    466c:	4663      	mov	r3, ip
    466e:	409a      	lsls	r2, r3
    4670:	1e53      	subs	r3, r2, #1
    4672:	419a      	sbcs	r2, r3
    4674:	4653      	mov	r3, sl
    4676:	4302      	orrs	r2, r0
    4678:	40d9      	lsrs	r1, r3
    467a:	e703      	b.n	4484 <__aeabi_dadd+0x1c0>
    467c:	0026      	movs	r6, r4
    467e:	433e      	orrs	r6, r7
    4680:	d006      	beq.n	4690 <__aeabi_dadd+0x3cc>
    4682:	43eb      	mvns	r3, r5
    4684:	4699      	mov	r9, r3
    4686:	2b00      	cmp	r3, #0
    4688:	d0c7      	beq.n	461a <__aeabi_dadd+0x356>
    468a:	4e94      	ldr	r6, [pc, #592]	; (48dc <__aeabi_dadd+0x618>)
    468c:	42b0      	cmp	r0, r6
    468e:	d1ac      	bne.n	45ea <__aeabi_dadd+0x326>
    4690:	000c      	movs	r4, r1
    4692:	0017      	movs	r7, r2
    4694:	0006      	movs	r6, r0
    4696:	46d8      	mov	r8, fp
    4698:	e698      	b.n	43cc <__aeabi_dadd+0x108>
    469a:	4b90      	ldr	r3, [pc, #576]	; (48dc <__aeabi_dadd+0x618>)
    469c:	459a      	cmp	sl, r3
    469e:	d00b      	beq.n	46b8 <__aeabi_dadd+0x3f4>
    46a0:	4682      	mov	sl, r0
    46a2:	e6e7      	b.n	4474 <__aeabi_dadd+0x1b0>
    46a4:	2800      	cmp	r0, #0
    46a6:	d000      	beq.n	46aa <__aeabi_dadd+0x3e6>
    46a8:	e09e      	b.n	47e8 <__aeabi_dadd+0x524>
    46aa:	0018      	movs	r0, r3
    46ac:	4310      	orrs	r0, r2
    46ae:	d100      	bne.n	46b2 <__aeabi_dadd+0x3ee>
    46b0:	e0e9      	b.n	4886 <__aeabi_dadd+0x5c2>
    46b2:	001c      	movs	r4, r3
    46b4:	0017      	movs	r7, r2
    46b6:	46d8      	mov	r8, fp
    46b8:	4e88      	ldr	r6, [pc, #544]	; (48dc <__aeabi_dadd+0x618>)
    46ba:	e687      	b.n	43cc <__aeabi_dadd+0x108>
    46bc:	2500      	movs	r5, #0
    46be:	e772      	b.n	45a6 <__aeabi_dadd+0x2e2>
    46c0:	2100      	movs	r1, #0
    46c2:	e782      	b.n	45ca <__aeabi_dadd+0x306>
    46c4:	0023      	movs	r3, r4
    46c6:	433b      	orrs	r3, r7
    46c8:	2e00      	cmp	r6, #0
    46ca:	d000      	beq.n	46ce <__aeabi_dadd+0x40a>
    46cc:	e0ab      	b.n	4826 <__aeabi_dadd+0x562>
    46ce:	2b00      	cmp	r3, #0
    46d0:	d100      	bne.n	46d4 <__aeabi_dadd+0x410>
    46d2:	e0e7      	b.n	48a4 <__aeabi_dadd+0x5e0>
    46d4:	000b      	movs	r3, r1
    46d6:	4313      	orrs	r3, r2
    46d8:	d100      	bne.n	46dc <__aeabi_dadd+0x418>
    46da:	e677      	b.n	43cc <__aeabi_dadd+0x108>
    46dc:	18ba      	adds	r2, r7, r2
    46de:	42ba      	cmp	r2, r7
    46e0:	41bf      	sbcs	r7, r7
    46e2:	1864      	adds	r4, r4, r1
    46e4:	427f      	negs	r7, r7
    46e6:	19e4      	adds	r4, r4, r7
    46e8:	0223      	lsls	r3, r4, #8
    46ea:	d400      	bmi.n	46ee <__aeabi_dadd+0x42a>
    46ec:	e0f2      	b.n	48d4 <__aeabi_dadd+0x610>
    46ee:	4b7c      	ldr	r3, [pc, #496]	; (48e0 <__aeabi_dadd+0x61c>)
    46f0:	0017      	movs	r7, r2
    46f2:	401c      	ands	r4, r3
    46f4:	0006      	movs	r6, r0
    46f6:	e669      	b.n	43cc <__aeabi_dadd+0x108>
    46f8:	0020      	movs	r0, r4
    46fa:	4338      	orrs	r0, r7
    46fc:	2e00      	cmp	r6, #0
    46fe:	d1d1      	bne.n	46a4 <__aeabi_dadd+0x3e0>
    4700:	2800      	cmp	r0, #0
    4702:	d15b      	bne.n	47bc <__aeabi_dadd+0x4f8>
    4704:	001c      	movs	r4, r3
    4706:	4314      	orrs	r4, r2
    4708:	d100      	bne.n	470c <__aeabi_dadd+0x448>
    470a:	e0a8      	b.n	485e <__aeabi_dadd+0x59a>
    470c:	001c      	movs	r4, r3
    470e:	0017      	movs	r7, r2
    4710:	46d8      	mov	r8, fp
    4712:	e65b      	b.n	43cc <__aeabi_dadd+0x108>
    4714:	0006      	movs	r6, r0
    4716:	2400      	movs	r4, #0
    4718:	2700      	movs	r7, #0
    471a:	e697      	b.n	444c <__aeabi_dadd+0x188>
    471c:	4650      	mov	r0, sl
    471e:	000b      	movs	r3, r1
    4720:	3820      	subs	r0, #32
    4722:	40c3      	lsrs	r3, r0
    4724:	4699      	mov	r9, r3
    4726:	4653      	mov	r3, sl
    4728:	2b20      	cmp	r3, #32
    472a:	d100      	bne.n	472e <__aeabi_dadd+0x46a>
    472c:	e095      	b.n	485a <__aeabi_dadd+0x596>
    472e:	2340      	movs	r3, #64	; 0x40
    4730:	4650      	mov	r0, sl
    4732:	1a1b      	subs	r3, r3, r0
    4734:	4099      	lsls	r1, r3
    4736:	430a      	orrs	r2, r1
    4738:	1e51      	subs	r1, r2, #1
    473a:	418a      	sbcs	r2, r1
    473c:	464b      	mov	r3, r9
    473e:	2100      	movs	r1, #0
    4740:	431a      	orrs	r2, r3
    4742:	e69f      	b.n	4484 <__aeabi_dadd+0x1c0>
    4744:	2e00      	cmp	r6, #0
    4746:	d130      	bne.n	47aa <__aeabi_dadd+0x4e6>
    4748:	0026      	movs	r6, r4
    474a:	433e      	orrs	r6, r7
    474c:	d067      	beq.n	481e <__aeabi_dadd+0x55a>
    474e:	43db      	mvns	r3, r3
    4750:	469a      	mov	sl, r3
    4752:	2b00      	cmp	r3, #0
    4754:	d01c      	beq.n	4790 <__aeabi_dadd+0x4cc>
    4756:	4e61      	ldr	r6, [pc, #388]	; (48dc <__aeabi_dadd+0x618>)
    4758:	42b0      	cmp	r0, r6
    475a:	d060      	beq.n	481e <__aeabi_dadd+0x55a>
    475c:	4653      	mov	r3, sl
    475e:	2b38      	cmp	r3, #56	; 0x38
    4760:	dd00      	ble.n	4764 <__aeabi_dadd+0x4a0>
    4762:	e096      	b.n	4892 <__aeabi_dadd+0x5ce>
    4764:	2b1f      	cmp	r3, #31
    4766:	dd00      	ble.n	476a <__aeabi_dadd+0x4a6>
    4768:	e09f      	b.n	48aa <__aeabi_dadd+0x5e6>
    476a:	2620      	movs	r6, #32
    476c:	1af3      	subs	r3, r6, r3
    476e:	0026      	movs	r6, r4
    4770:	409e      	lsls	r6, r3
    4772:	469c      	mov	ip, r3
    4774:	46b3      	mov	fp, r6
    4776:	4653      	mov	r3, sl
    4778:	003e      	movs	r6, r7
    477a:	40de      	lsrs	r6, r3
    477c:	0033      	movs	r3, r6
    477e:	465e      	mov	r6, fp
    4780:	431e      	orrs	r6, r3
    4782:	4663      	mov	r3, ip
    4784:	409f      	lsls	r7, r3
    4786:	1e7b      	subs	r3, r7, #1
    4788:	419f      	sbcs	r7, r3
    478a:	4653      	mov	r3, sl
    478c:	40dc      	lsrs	r4, r3
    478e:	4337      	orrs	r7, r6
    4790:	18bf      	adds	r7, r7, r2
    4792:	4297      	cmp	r7, r2
    4794:	4192      	sbcs	r2, r2
    4796:	1864      	adds	r4, r4, r1
    4798:	4252      	negs	r2, r2
    479a:	18a4      	adds	r4, r4, r2
    479c:	0006      	movs	r6, r0
    479e:	e678      	b.n	4492 <__aeabi_dadd+0x1ce>
    47a0:	4327      	orrs	r7, r4
    47a2:	1e7c      	subs	r4, r7, #1
    47a4:	41a7      	sbcs	r7, r4
    47a6:	2400      	movs	r4, #0
    47a8:	e737      	b.n	461a <__aeabi_dadd+0x356>
    47aa:	4e4c      	ldr	r6, [pc, #304]	; (48dc <__aeabi_dadd+0x618>)
    47ac:	42b0      	cmp	r0, r6
    47ae:	d036      	beq.n	481e <__aeabi_dadd+0x55a>
    47b0:	2680      	movs	r6, #128	; 0x80
    47b2:	425b      	negs	r3, r3
    47b4:	0436      	lsls	r6, r6, #16
    47b6:	469a      	mov	sl, r3
    47b8:	4334      	orrs	r4, r6
    47ba:	e7cf      	b.n	475c <__aeabi_dadd+0x498>
    47bc:	0018      	movs	r0, r3
    47be:	4310      	orrs	r0, r2
    47c0:	d100      	bne.n	47c4 <__aeabi_dadd+0x500>
    47c2:	e603      	b.n	43cc <__aeabi_dadd+0x108>
    47c4:	1ab8      	subs	r0, r7, r2
    47c6:	4684      	mov	ip, r0
    47c8:	4567      	cmp	r7, ip
    47ca:	41ad      	sbcs	r5, r5
    47cc:	1ae0      	subs	r0, r4, r3
    47ce:	426d      	negs	r5, r5
    47d0:	1b40      	subs	r0, r0, r5
    47d2:	0205      	lsls	r5, r0, #8
    47d4:	d400      	bmi.n	47d8 <__aeabi_dadd+0x514>
    47d6:	e62c      	b.n	4432 <__aeabi_dadd+0x16e>
    47d8:	1bd7      	subs	r7, r2, r7
    47da:	42ba      	cmp	r2, r7
    47dc:	4192      	sbcs	r2, r2
    47de:	1b1c      	subs	r4, r3, r4
    47e0:	4252      	negs	r2, r2
    47e2:	1aa4      	subs	r4, r4, r2
    47e4:	46d8      	mov	r8, fp
    47e6:	e5f1      	b.n	43cc <__aeabi_dadd+0x108>
    47e8:	0018      	movs	r0, r3
    47ea:	4310      	orrs	r0, r2
    47ec:	d100      	bne.n	47f0 <__aeabi_dadd+0x52c>
    47ee:	e763      	b.n	46b8 <__aeabi_dadd+0x3f4>
    47f0:	08f8      	lsrs	r0, r7, #3
    47f2:	0767      	lsls	r7, r4, #29
    47f4:	4307      	orrs	r7, r0
    47f6:	2080      	movs	r0, #128	; 0x80
    47f8:	08e4      	lsrs	r4, r4, #3
    47fa:	0300      	lsls	r0, r0, #12
    47fc:	4204      	tst	r4, r0
    47fe:	d008      	beq.n	4812 <__aeabi_dadd+0x54e>
    4800:	08dd      	lsrs	r5, r3, #3
    4802:	4205      	tst	r5, r0
    4804:	d105      	bne.n	4812 <__aeabi_dadd+0x54e>
    4806:	08d2      	lsrs	r2, r2, #3
    4808:	0759      	lsls	r1, r3, #29
    480a:	4311      	orrs	r1, r2
    480c:	000f      	movs	r7, r1
    480e:	002c      	movs	r4, r5
    4810:	46d8      	mov	r8, fp
    4812:	0f7b      	lsrs	r3, r7, #29
    4814:	00e4      	lsls	r4, r4, #3
    4816:	431c      	orrs	r4, r3
    4818:	00ff      	lsls	r7, r7, #3
    481a:	4e30      	ldr	r6, [pc, #192]	; (48dc <__aeabi_dadd+0x618>)
    481c:	e5d6      	b.n	43cc <__aeabi_dadd+0x108>
    481e:	000c      	movs	r4, r1
    4820:	0017      	movs	r7, r2
    4822:	0006      	movs	r6, r0
    4824:	e5d2      	b.n	43cc <__aeabi_dadd+0x108>
    4826:	2b00      	cmp	r3, #0
    4828:	d038      	beq.n	489c <__aeabi_dadd+0x5d8>
    482a:	000b      	movs	r3, r1
    482c:	4313      	orrs	r3, r2
    482e:	d100      	bne.n	4832 <__aeabi_dadd+0x56e>
    4830:	e742      	b.n	46b8 <__aeabi_dadd+0x3f4>
    4832:	08f8      	lsrs	r0, r7, #3
    4834:	0767      	lsls	r7, r4, #29
    4836:	4307      	orrs	r7, r0
    4838:	2080      	movs	r0, #128	; 0x80
    483a:	08e4      	lsrs	r4, r4, #3
    483c:	0300      	lsls	r0, r0, #12
    483e:	4204      	tst	r4, r0
    4840:	d0e7      	beq.n	4812 <__aeabi_dadd+0x54e>
    4842:	08cb      	lsrs	r3, r1, #3
    4844:	4203      	tst	r3, r0
    4846:	d1e4      	bne.n	4812 <__aeabi_dadd+0x54e>
    4848:	08d2      	lsrs	r2, r2, #3
    484a:	0749      	lsls	r1, r1, #29
    484c:	4311      	orrs	r1, r2
    484e:	000f      	movs	r7, r1
    4850:	001c      	movs	r4, r3
    4852:	e7de      	b.n	4812 <__aeabi_dadd+0x54e>
    4854:	2700      	movs	r7, #0
    4856:	2400      	movs	r4, #0
    4858:	e5d5      	b.n	4406 <__aeabi_dadd+0x142>
    485a:	2100      	movs	r1, #0
    485c:	e76b      	b.n	4736 <__aeabi_dadd+0x472>
    485e:	2500      	movs	r5, #0
    4860:	2700      	movs	r7, #0
    4862:	e5f3      	b.n	444c <__aeabi_dadd+0x188>
    4864:	464e      	mov	r6, r9
    4866:	0025      	movs	r5, r4
    4868:	3e20      	subs	r6, #32
    486a:	40f5      	lsrs	r5, r6
    486c:	464b      	mov	r3, r9
    486e:	002e      	movs	r6, r5
    4870:	2b20      	cmp	r3, #32
    4872:	d02d      	beq.n	48d0 <__aeabi_dadd+0x60c>
    4874:	2540      	movs	r5, #64	; 0x40
    4876:	1aed      	subs	r5, r5, r3
    4878:	40ac      	lsls	r4, r5
    487a:	4327      	orrs	r7, r4
    487c:	1e7c      	subs	r4, r7, #1
    487e:	41a7      	sbcs	r7, r4
    4880:	2400      	movs	r4, #0
    4882:	4337      	orrs	r7, r6
    4884:	e6c9      	b.n	461a <__aeabi_dadd+0x356>
    4886:	2480      	movs	r4, #128	; 0x80
    4888:	2500      	movs	r5, #0
    488a:	0324      	lsls	r4, r4, #12
    488c:	4e13      	ldr	r6, [pc, #76]	; (48dc <__aeabi_dadd+0x618>)
    488e:	2700      	movs	r7, #0
    4890:	e5dc      	b.n	444c <__aeabi_dadd+0x188>
    4892:	4327      	orrs	r7, r4
    4894:	1e7c      	subs	r4, r7, #1
    4896:	41a7      	sbcs	r7, r4
    4898:	2400      	movs	r4, #0
    489a:	e779      	b.n	4790 <__aeabi_dadd+0x4cc>
    489c:	000c      	movs	r4, r1
    489e:	0017      	movs	r7, r2
    48a0:	4e0e      	ldr	r6, [pc, #56]	; (48dc <__aeabi_dadd+0x618>)
    48a2:	e593      	b.n	43cc <__aeabi_dadd+0x108>
    48a4:	000c      	movs	r4, r1
    48a6:	0017      	movs	r7, r2
    48a8:	e590      	b.n	43cc <__aeabi_dadd+0x108>
    48aa:	4656      	mov	r6, sl
    48ac:	0023      	movs	r3, r4
    48ae:	3e20      	subs	r6, #32
    48b0:	40f3      	lsrs	r3, r6
    48b2:	4699      	mov	r9, r3
    48b4:	4653      	mov	r3, sl
    48b6:	2b20      	cmp	r3, #32
    48b8:	d00e      	beq.n	48d8 <__aeabi_dadd+0x614>
    48ba:	2340      	movs	r3, #64	; 0x40
    48bc:	4656      	mov	r6, sl
    48be:	1b9b      	subs	r3, r3, r6
    48c0:	409c      	lsls	r4, r3
    48c2:	4327      	orrs	r7, r4
    48c4:	1e7c      	subs	r4, r7, #1
    48c6:	41a7      	sbcs	r7, r4
    48c8:	464b      	mov	r3, r9
    48ca:	2400      	movs	r4, #0
    48cc:	431f      	orrs	r7, r3
    48ce:	e75f      	b.n	4790 <__aeabi_dadd+0x4cc>
    48d0:	2400      	movs	r4, #0
    48d2:	e7d2      	b.n	487a <__aeabi_dadd+0x5b6>
    48d4:	0017      	movs	r7, r2
    48d6:	e5b2      	b.n	443e <__aeabi_dadd+0x17a>
    48d8:	2400      	movs	r4, #0
    48da:	e7f2      	b.n	48c2 <__aeabi_dadd+0x5fe>
    48dc:	000007ff 	.word	0x000007ff
    48e0:	ff7fffff 	.word	0xff7fffff

000048e4 <__aeabi_ddiv>:
    48e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    48e6:	4657      	mov	r7, sl
    48e8:	4645      	mov	r5, r8
    48ea:	46de      	mov	lr, fp
    48ec:	464e      	mov	r6, r9
    48ee:	b5e0      	push	{r5, r6, r7, lr}
    48f0:	004c      	lsls	r4, r1, #1
    48f2:	030e      	lsls	r6, r1, #12
    48f4:	b087      	sub	sp, #28
    48f6:	4683      	mov	fp, r0
    48f8:	4692      	mov	sl, r2
    48fa:	001d      	movs	r5, r3
    48fc:	4680      	mov	r8, r0
    48fe:	0b36      	lsrs	r6, r6, #12
    4900:	0d64      	lsrs	r4, r4, #21
    4902:	0fcf      	lsrs	r7, r1, #31
    4904:	2c00      	cmp	r4, #0
    4906:	d04f      	beq.n	49a8 <__aeabi_ddiv+0xc4>
    4908:	4b6f      	ldr	r3, [pc, #444]	; (4ac8 <__aeabi_ddiv+0x1e4>)
    490a:	429c      	cmp	r4, r3
    490c:	d035      	beq.n	497a <__aeabi_ddiv+0x96>
    490e:	2380      	movs	r3, #128	; 0x80
    4910:	0f42      	lsrs	r2, r0, #29
    4912:	041b      	lsls	r3, r3, #16
    4914:	00f6      	lsls	r6, r6, #3
    4916:	4313      	orrs	r3, r2
    4918:	4333      	orrs	r3, r6
    491a:	4699      	mov	r9, r3
    491c:	00c3      	lsls	r3, r0, #3
    491e:	4698      	mov	r8, r3
    4920:	4b6a      	ldr	r3, [pc, #424]	; (4acc <__aeabi_ddiv+0x1e8>)
    4922:	2600      	movs	r6, #0
    4924:	469c      	mov	ip, r3
    4926:	2300      	movs	r3, #0
    4928:	4464      	add	r4, ip
    492a:	9303      	str	r3, [sp, #12]
    492c:	032b      	lsls	r3, r5, #12
    492e:	0b1b      	lsrs	r3, r3, #12
    4930:	469b      	mov	fp, r3
    4932:	006b      	lsls	r3, r5, #1
    4934:	0fed      	lsrs	r5, r5, #31
    4936:	4650      	mov	r0, sl
    4938:	0d5b      	lsrs	r3, r3, #21
    493a:	9501      	str	r5, [sp, #4]
    493c:	d05e      	beq.n	49fc <__aeabi_ddiv+0x118>
    493e:	4a62      	ldr	r2, [pc, #392]	; (4ac8 <__aeabi_ddiv+0x1e4>)
    4940:	4293      	cmp	r3, r2
    4942:	d053      	beq.n	49ec <__aeabi_ddiv+0x108>
    4944:	465a      	mov	r2, fp
    4946:	00d1      	lsls	r1, r2, #3
    4948:	2280      	movs	r2, #128	; 0x80
    494a:	0f40      	lsrs	r0, r0, #29
    494c:	0412      	lsls	r2, r2, #16
    494e:	4302      	orrs	r2, r0
    4950:	430a      	orrs	r2, r1
    4952:	4693      	mov	fp, r2
    4954:	4652      	mov	r2, sl
    4956:	00d1      	lsls	r1, r2, #3
    4958:	4a5c      	ldr	r2, [pc, #368]	; (4acc <__aeabi_ddiv+0x1e8>)
    495a:	4694      	mov	ip, r2
    495c:	2200      	movs	r2, #0
    495e:	4463      	add	r3, ip
    4960:	0038      	movs	r0, r7
    4962:	4068      	eors	r0, r5
    4964:	4684      	mov	ip, r0
    4966:	9002      	str	r0, [sp, #8]
    4968:	1ae4      	subs	r4, r4, r3
    496a:	4316      	orrs	r6, r2
    496c:	2e0f      	cmp	r6, #15
    496e:	d900      	bls.n	4972 <__aeabi_ddiv+0x8e>
    4970:	e0b4      	b.n	4adc <__aeabi_ddiv+0x1f8>
    4972:	4b57      	ldr	r3, [pc, #348]	; (4ad0 <__aeabi_ddiv+0x1ec>)
    4974:	00b6      	lsls	r6, r6, #2
    4976:	599b      	ldr	r3, [r3, r6]
    4978:	469f      	mov	pc, r3
    497a:	0003      	movs	r3, r0
    497c:	4333      	orrs	r3, r6
    497e:	4699      	mov	r9, r3
    4980:	d16c      	bne.n	4a5c <__aeabi_ddiv+0x178>
    4982:	2300      	movs	r3, #0
    4984:	4698      	mov	r8, r3
    4986:	3302      	adds	r3, #2
    4988:	2608      	movs	r6, #8
    498a:	9303      	str	r3, [sp, #12]
    498c:	e7ce      	b.n	492c <__aeabi_ddiv+0x48>
    498e:	46cb      	mov	fp, r9
    4990:	4641      	mov	r1, r8
    4992:	9a03      	ldr	r2, [sp, #12]
    4994:	9701      	str	r7, [sp, #4]
    4996:	2a02      	cmp	r2, #2
    4998:	d165      	bne.n	4a66 <__aeabi_ddiv+0x182>
    499a:	9b01      	ldr	r3, [sp, #4]
    499c:	4c4a      	ldr	r4, [pc, #296]	; (4ac8 <__aeabi_ddiv+0x1e4>)
    499e:	469c      	mov	ip, r3
    49a0:	2300      	movs	r3, #0
    49a2:	2200      	movs	r2, #0
    49a4:	4698      	mov	r8, r3
    49a6:	e06b      	b.n	4a80 <__aeabi_ddiv+0x19c>
    49a8:	0003      	movs	r3, r0
    49aa:	4333      	orrs	r3, r6
    49ac:	4699      	mov	r9, r3
    49ae:	d04e      	beq.n	4a4e <__aeabi_ddiv+0x16a>
    49b0:	2e00      	cmp	r6, #0
    49b2:	d100      	bne.n	49b6 <__aeabi_ddiv+0xd2>
    49b4:	e1bc      	b.n	4d30 <__aeabi_ddiv+0x44c>
    49b6:	0030      	movs	r0, r6
    49b8:	f001 f9f4 	bl	5da4 <__clzsi2>
    49bc:	0003      	movs	r3, r0
    49be:	3b0b      	subs	r3, #11
    49c0:	2b1c      	cmp	r3, #28
    49c2:	dd00      	ble.n	49c6 <__aeabi_ddiv+0xe2>
    49c4:	e1ac      	b.n	4d20 <__aeabi_ddiv+0x43c>
    49c6:	221d      	movs	r2, #29
    49c8:	1ad3      	subs	r3, r2, r3
    49ca:	465a      	mov	r2, fp
    49cc:	0001      	movs	r1, r0
    49ce:	40da      	lsrs	r2, r3
    49d0:	3908      	subs	r1, #8
    49d2:	408e      	lsls	r6, r1
    49d4:	0013      	movs	r3, r2
    49d6:	4333      	orrs	r3, r6
    49d8:	4699      	mov	r9, r3
    49da:	465b      	mov	r3, fp
    49dc:	408b      	lsls	r3, r1
    49de:	4698      	mov	r8, r3
    49e0:	2300      	movs	r3, #0
    49e2:	4c3c      	ldr	r4, [pc, #240]	; (4ad4 <__aeabi_ddiv+0x1f0>)
    49e4:	2600      	movs	r6, #0
    49e6:	1a24      	subs	r4, r4, r0
    49e8:	9303      	str	r3, [sp, #12]
    49ea:	e79f      	b.n	492c <__aeabi_ddiv+0x48>
    49ec:	4651      	mov	r1, sl
    49ee:	465a      	mov	r2, fp
    49f0:	4311      	orrs	r1, r2
    49f2:	d129      	bne.n	4a48 <__aeabi_ddiv+0x164>
    49f4:	2200      	movs	r2, #0
    49f6:	4693      	mov	fp, r2
    49f8:	3202      	adds	r2, #2
    49fa:	e7b1      	b.n	4960 <__aeabi_ddiv+0x7c>
    49fc:	4659      	mov	r1, fp
    49fe:	4301      	orrs	r1, r0
    4a00:	d01e      	beq.n	4a40 <__aeabi_ddiv+0x15c>
    4a02:	465b      	mov	r3, fp
    4a04:	2b00      	cmp	r3, #0
    4a06:	d100      	bne.n	4a0a <__aeabi_ddiv+0x126>
    4a08:	e19e      	b.n	4d48 <__aeabi_ddiv+0x464>
    4a0a:	4658      	mov	r0, fp
    4a0c:	f001 f9ca 	bl	5da4 <__clzsi2>
    4a10:	0003      	movs	r3, r0
    4a12:	3b0b      	subs	r3, #11
    4a14:	2b1c      	cmp	r3, #28
    4a16:	dd00      	ble.n	4a1a <__aeabi_ddiv+0x136>
    4a18:	e18f      	b.n	4d3a <__aeabi_ddiv+0x456>
    4a1a:	0002      	movs	r2, r0
    4a1c:	4659      	mov	r1, fp
    4a1e:	3a08      	subs	r2, #8
    4a20:	4091      	lsls	r1, r2
    4a22:	468b      	mov	fp, r1
    4a24:	211d      	movs	r1, #29
    4a26:	1acb      	subs	r3, r1, r3
    4a28:	4651      	mov	r1, sl
    4a2a:	40d9      	lsrs	r1, r3
    4a2c:	000b      	movs	r3, r1
    4a2e:	4659      	mov	r1, fp
    4a30:	430b      	orrs	r3, r1
    4a32:	4651      	mov	r1, sl
    4a34:	469b      	mov	fp, r3
    4a36:	4091      	lsls	r1, r2
    4a38:	4b26      	ldr	r3, [pc, #152]	; (4ad4 <__aeabi_ddiv+0x1f0>)
    4a3a:	2200      	movs	r2, #0
    4a3c:	1a1b      	subs	r3, r3, r0
    4a3e:	e78f      	b.n	4960 <__aeabi_ddiv+0x7c>
    4a40:	2300      	movs	r3, #0
    4a42:	2201      	movs	r2, #1
    4a44:	469b      	mov	fp, r3
    4a46:	e78b      	b.n	4960 <__aeabi_ddiv+0x7c>
    4a48:	4651      	mov	r1, sl
    4a4a:	2203      	movs	r2, #3
    4a4c:	e788      	b.n	4960 <__aeabi_ddiv+0x7c>
    4a4e:	2300      	movs	r3, #0
    4a50:	4698      	mov	r8, r3
    4a52:	3301      	adds	r3, #1
    4a54:	2604      	movs	r6, #4
    4a56:	2400      	movs	r4, #0
    4a58:	9303      	str	r3, [sp, #12]
    4a5a:	e767      	b.n	492c <__aeabi_ddiv+0x48>
    4a5c:	2303      	movs	r3, #3
    4a5e:	46b1      	mov	r9, r6
    4a60:	9303      	str	r3, [sp, #12]
    4a62:	260c      	movs	r6, #12
    4a64:	e762      	b.n	492c <__aeabi_ddiv+0x48>
    4a66:	2a03      	cmp	r2, #3
    4a68:	d100      	bne.n	4a6c <__aeabi_ddiv+0x188>
    4a6a:	e25c      	b.n	4f26 <__aeabi_ddiv+0x642>
    4a6c:	9b01      	ldr	r3, [sp, #4]
    4a6e:	2a01      	cmp	r2, #1
    4a70:	d000      	beq.n	4a74 <__aeabi_ddiv+0x190>
    4a72:	e1e4      	b.n	4e3e <__aeabi_ddiv+0x55a>
    4a74:	4013      	ands	r3, r2
    4a76:	469c      	mov	ip, r3
    4a78:	2300      	movs	r3, #0
    4a7a:	2400      	movs	r4, #0
    4a7c:	2200      	movs	r2, #0
    4a7e:	4698      	mov	r8, r3
    4a80:	2100      	movs	r1, #0
    4a82:	0312      	lsls	r2, r2, #12
    4a84:	0b13      	lsrs	r3, r2, #12
    4a86:	0d0a      	lsrs	r2, r1, #20
    4a88:	0512      	lsls	r2, r2, #20
    4a8a:	431a      	orrs	r2, r3
    4a8c:	0523      	lsls	r3, r4, #20
    4a8e:	4c12      	ldr	r4, [pc, #72]	; (4ad8 <__aeabi_ddiv+0x1f4>)
    4a90:	4640      	mov	r0, r8
    4a92:	4022      	ands	r2, r4
    4a94:	4313      	orrs	r3, r2
    4a96:	4662      	mov	r2, ip
    4a98:	005b      	lsls	r3, r3, #1
    4a9a:	07d2      	lsls	r2, r2, #31
    4a9c:	085b      	lsrs	r3, r3, #1
    4a9e:	4313      	orrs	r3, r2
    4aa0:	0019      	movs	r1, r3
    4aa2:	b007      	add	sp, #28
    4aa4:	bc3c      	pop	{r2, r3, r4, r5}
    4aa6:	4690      	mov	r8, r2
    4aa8:	4699      	mov	r9, r3
    4aaa:	46a2      	mov	sl, r4
    4aac:	46ab      	mov	fp, r5
    4aae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4ab0:	2300      	movs	r3, #0
    4ab2:	2280      	movs	r2, #128	; 0x80
    4ab4:	469c      	mov	ip, r3
    4ab6:	0312      	lsls	r2, r2, #12
    4ab8:	4698      	mov	r8, r3
    4aba:	4c03      	ldr	r4, [pc, #12]	; (4ac8 <__aeabi_ddiv+0x1e4>)
    4abc:	e7e0      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4abe:	2300      	movs	r3, #0
    4ac0:	4c01      	ldr	r4, [pc, #4]	; (4ac8 <__aeabi_ddiv+0x1e4>)
    4ac2:	2200      	movs	r2, #0
    4ac4:	4698      	mov	r8, r3
    4ac6:	e7db      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4ac8:	000007ff 	.word	0x000007ff
    4acc:	fffffc01 	.word	0xfffffc01
    4ad0:	000060c0 	.word	0x000060c0
    4ad4:	fffffc0d 	.word	0xfffffc0d
    4ad8:	800fffff 	.word	0x800fffff
    4adc:	45d9      	cmp	r9, fp
    4ade:	d900      	bls.n	4ae2 <__aeabi_ddiv+0x1fe>
    4ae0:	e139      	b.n	4d56 <__aeabi_ddiv+0x472>
    4ae2:	d100      	bne.n	4ae6 <__aeabi_ddiv+0x202>
    4ae4:	e134      	b.n	4d50 <__aeabi_ddiv+0x46c>
    4ae6:	2300      	movs	r3, #0
    4ae8:	4646      	mov	r6, r8
    4aea:	464d      	mov	r5, r9
    4aec:	469a      	mov	sl, r3
    4aee:	3c01      	subs	r4, #1
    4af0:	465b      	mov	r3, fp
    4af2:	0e0a      	lsrs	r2, r1, #24
    4af4:	021b      	lsls	r3, r3, #8
    4af6:	431a      	orrs	r2, r3
    4af8:	020b      	lsls	r3, r1, #8
    4afa:	0c17      	lsrs	r7, r2, #16
    4afc:	9303      	str	r3, [sp, #12]
    4afe:	0413      	lsls	r3, r2, #16
    4b00:	0c1b      	lsrs	r3, r3, #16
    4b02:	0039      	movs	r1, r7
    4b04:	0028      	movs	r0, r5
    4b06:	4690      	mov	r8, r2
    4b08:	9301      	str	r3, [sp, #4]
    4b0a:	f7ff fa09 	bl	3f20 <__udivsi3>
    4b0e:	0002      	movs	r2, r0
    4b10:	9b01      	ldr	r3, [sp, #4]
    4b12:	4683      	mov	fp, r0
    4b14:	435a      	muls	r2, r3
    4b16:	0028      	movs	r0, r5
    4b18:	0039      	movs	r1, r7
    4b1a:	4691      	mov	r9, r2
    4b1c:	f7ff fa86 	bl	402c <__aeabi_uidivmod>
    4b20:	0c35      	lsrs	r5, r6, #16
    4b22:	0409      	lsls	r1, r1, #16
    4b24:	430d      	orrs	r5, r1
    4b26:	45a9      	cmp	r9, r5
    4b28:	d90d      	bls.n	4b46 <__aeabi_ddiv+0x262>
    4b2a:	465b      	mov	r3, fp
    4b2c:	4445      	add	r5, r8
    4b2e:	3b01      	subs	r3, #1
    4b30:	45a8      	cmp	r8, r5
    4b32:	d900      	bls.n	4b36 <__aeabi_ddiv+0x252>
    4b34:	e13a      	b.n	4dac <__aeabi_ddiv+0x4c8>
    4b36:	45a9      	cmp	r9, r5
    4b38:	d800      	bhi.n	4b3c <__aeabi_ddiv+0x258>
    4b3a:	e137      	b.n	4dac <__aeabi_ddiv+0x4c8>
    4b3c:	2302      	movs	r3, #2
    4b3e:	425b      	negs	r3, r3
    4b40:	469c      	mov	ip, r3
    4b42:	4445      	add	r5, r8
    4b44:	44e3      	add	fp, ip
    4b46:	464b      	mov	r3, r9
    4b48:	1aeb      	subs	r3, r5, r3
    4b4a:	0039      	movs	r1, r7
    4b4c:	0018      	movs	r0, r3
    4b4e:	9304      	str	r3, [sp, #16]
    4b50:	f7ff f9e6 	bl	3f20 <__udivsi3>
    4b54:	9b01      	ldr	r3, [sp, #4]
    4b56:	0005      	movs	r5, r0
    4b58:	4343      	muls	r3, r0
    4b5a:	0039      	movs	r1, r7
    4b5c:	9804      	ldr	r0, [sp, #16]
    4b5e:	4699      	mov	r9, r3
    4b60:	f7ff fa64 	bl	402c <__aeabi_uidivmod>
    4b64:	0433      	lsls	r3, r6, #16
    4b66:	0409      	lsls	r1, r1, #16
    4b68:	0c1b      	lsrs	r3, r3, #16
    4b6a:	430b      	orrs	r3, r1
    4b6c:	4599      	cmp	r9, r3
    4b6e:	d909      	bls.n	4b84 <__aeabi_ddiv+0x2a0>
    4b70:	4443      	add	r3, r8
    4b72:	1e6a      	subs	r2, r5, #1
    4b74:	4598      	cmp	r8, r3
    4b76:	d900      	bls.n	4b7a <__aeabi_ddiv+0x296>
    4b78:	e11a      	b.n	4db0 <__aeabi_ddiv+0x4cc>
    4b7a:	4599      	cmp	r9, r3
    4b7c:	d800      	bhi.n	4b80 <__aeabi_ddiv+0x29c>
    4b7e:	e117      	b.n	4db0 <__aeabi_ddiv+0x4cc>
    4b80:	3d02      	subs	r5, #2
    4b82:	4443      	add	r3, r8
    4b84:	464a      	mov	r2, r9
    4b86:	1a9b      	subs	r3, r3, r2
    4b88:	465a      	mov	r2, fp
    4b8a:	0412      	lsls	r2, r2, #16
    4b8c:	432a      	orrs	r2, r5
    4b8e:	9903      	ldr	r1, [sp, #12]
    4b90:	4693      	mov	fp, r2
    4b92:	0c10      	lsrs	r0, r2, #16
    4b94:	0c0a      	lsrs	r2, r1, #16
    4b96:	4691      	mov	r9, r2
    4b98:	0409      	lsls	r1, r1, #16
    4b9a:	465a      	mov	r2, fp
    4b9c:	0c09      	lsrs	r1, r1, #16
    4b9e:	464e      	mov	r6, r9
    4ba0:	000d      	movs	r5, r1
    4ba2:	0412      	lsls	r2, r2, #16
    4ba4:	0c12      	lsrs	r2, r2, #16
    4ba6:	4345      	muls	r5, r0
    4ba8:	9105      	str	r1, [sp, #20]
    4baa:	4351      	muls	r1, r2
    4bac:	4372      	muls	r2, r6
    4bae:	4370      	muls	r0, r6
    4bb0:	1952      	adds	r2, r2, r5
    4bb2:	0c0e      	lsrs	r6, r1, #16
    4bb4:	18b2      	adds	r2, r6, r2
    4bb6:	4295      	cmp	r5, r2
    4bb8:	d903      	bls.n	4bc2 <__aeabi_ddiv+0x2de>
    4bba:	2580      	movs	r5, #128	; 0x80
    4bbc:	026d      	lsls	r5, r5, #9
    4bbe:	46ac      	mov	ip, r5
    4bc0:	4460      	add	r0, ip
    4bc2:	0c15      	lsrs	r5, r2, #16
    4bc4:	0409      	lsls	r1, r1, #16
    4bc6:	0412      	lsls	r2, r2, #16
    4bc8:	0c09      	lsrs	r1, r1, #16
    4bca:	1828      	adds	r0, r5, r0
    4bcc:	1852      	adds	r2, r2, r1
    4bce:	4283      	cmp	r3, r0
    4bd0:	d200      	bcs.n	4bd4 <__aeabi_ddiv+0x2f0>
    4bd2:	e0ce      	b.n	4d72 <__aeabi_ddiv+0x48e>
    4bd4:	d100      	bne.n	4bd8 <__aeabi_ddiv+0x2f4>
    4bd6:	e0c8      	b.n	4d6a <__aeabi_ddiv+0x486>
    4bd8:	1a1d      	subs	r5, r3, r0
    4bda:	4653      	mov	r3, sl
    4bdc:	1a9e      	subs	r6, r3, r2
    4bde:	45b2      	cmp	sl, r6
    4be0:	4192      	sbcs	r2, r2
    4be2:	4252      	negs	r2, r2
    4be4:	1aab      	subs	r3, r5, r2
    4be6:	469a      	mov	sl, r3
    4be8:	4598      	cmp	r8, r3
    4bea:	d100      	bne.n	4bee <__aeabi_ddiv+0x30a>
    4bec:	e117      	b.n	4e1e <__aeabi_ddiv+0x53a>
    4bee:	0039      	movs	r1, r7
    4bf0:	0018      	movs	r0, r3
    4bf2:	f7ff f995 	bl	3f20 <__udivsi3>
    4bf6:	9b01      	ldr	r3, [sp, #4]
    4bf8:	0005      	movs	r5, r0
    4bfa:	4343      	muls	r3, r0
    4bfc:	0039      	movs	r1, r7
    4bfe:	4650      	mov	r0, sl
    4c00:	9304      	str	r3, [sp, #16]
    4c02:	f7ff fa13 	bl	402c <__aeabi_uidivmod>
    4c06:	9804      	ldr	r0, [sp, #16]
    4c08:	040b      	lsls	r3, r1, #16
    4c0a:	0c31      	lsrs	r1, r6, #16
    4c0c:	4319      	orrs	r1, r3
    4c0e:	4288      	cmp	r0, r1
    4c10:	d909      	bls.n	4c26 <__aeabi_ddiv+0x342>
    4c12:	4441      	add	r1, r8
    4c14:	1e6b      	subs	r3, r5, #1
    4c16:	4588      	cmp	r8, r1
    4c18:	d900      	bls.n	4c1c <__aeabi_ddiv+0x338>
    4c1a:	e107      	b.n	4e2c <__aeabi_ddiv+0x548>
    4c1c:	4288      	cmp	r0, r1
    4c1e:	d800      	bhi.n	4c22 <__aeabi_ddiv+0x33e>
    4c20:	e104      	b.n	4e2c <__aeabi_ddiv+0x548>
    4c22:	3d02      	subs	r5, #2
    4c24:	4441      	add	r1, r8
    4c26:	9b04      	ldr	r3, [sp, #16]
    4c28:	1acb      	subs	r3, r1, r3
    4c2a:	0018      	movs	r0, r3
    4c2c:	0039      	movs	r1, r7
    4c2e:	9304      	str	r3, [sp, #16]
    4c30:	f7ff f976 	bl	3f20 <__udivsi3>
    4c34:	9b01      	ldr	r3, [sp, #4]
    4c36:	4682      	mov	sl, r0
    4c38:	4343      	muls	r3, r0
    4c3a:	0039      	movs	r1, r7
    4c3c:	9804      	ldr	r0, [sp, #16]
    4c3e:	9301      	str	r3, [sp, #4]
    4c40:	f7ff f9f4 	bl	402c <__aeabi_uidivmod>
    4c44:	9801      	ldr	r0, [sp, #4]
    4c46:	040b      	lsls	r3, r1, #16
    4c48:	0431      	lsls	r1, r6, #16
    4c4a:	0c09      	lsrs	r1, r1, #16
    4c4c:	4319      	orrs	r1, r3
    4c4e:	4288      	cmp	r0, r1
    4c50:	d90d      	bls.n	4c6e <__aeabi_ddiv+0x38a>
    4c52:	4653      	mov	r3, sl
    4c54:	4441      	add	r1, r8
    4c56:	3b01      	subs	r3, #1
    4c58:	4588      	cmp	r8, r1
    4c5a:	d900      	bls.n	4c5e <__aeabi_ddiv+0x37a>
    4c5c:	e0e8      	b.n	4e30 <__aeabi_ddiv+0x54c>
    4c5e:	4288      	cmp	r0, r1
    4c60:	d800      	bhi.n	4c64 <__aeabi_ddiv+0x380>
    4c62:	e0e5      	b.n	4e30 <__aeabi_ddiv+0x54c>
    4c64:	2302      	movs	r3, #2
    4c66:	425b      	negs	r3, r3
    4c68:	469c      	mov	ip, r3
    4c6a:	4441      	add	r1, r8
    4c6c:	44e2      	add	sl, ip
    4c6e:	9b01      	ldr	r3, [sp, #4]
    4c70:	042d      	lsls	r5, r5, #16
    4c72:	1ace      	subs	r6, r1, r3
    4c74:	4651      	mov	r1, sl
    4c76:	4329      	orrs	r1, r5
    4c78:	9d05      	ldr	r5, [sp, #20]
    4c7a:	464f      	mov	r7, r9
    4c7c:	002a      	movs	r2, r5
    4c7e:	040b      	lsls	r3, r1, #16
    4c80:	0c08      	lsrs	r0, r1, #16
    4c82:	0c1b      	lsrs	r3, r3, #16
    4c84:	435a      	muls	r2, r3
    4c86:	4345      	muls	r5, r0
    4c88:	437b      	muls	r3, r7
    4c8a:	4378      	muls	r0, r7
    4c8c:	195b      	adds	r3, r3, r5
    4c8e:	0c17      	lsrs	r7, r2, #16
    4c90:	18fb      	adds	r3, r7, r3
    4c92:	429d      	cmp	r5, r3
    4c94:	d903      	bls.n	4c9e <__aeabi_ddiv+0x3ba>
    4c96:	2580      	movs	r5, #128	; 0x80
    4c98:	026d      	lsls	r5, r5, #9
    4c9a:	46ac      	mov	ip, r5
    4c9c:	4460      	add	r0, ip
    4c9e:	0c1d      	lsrs	r5, r3, #16
    4ca0:	0412      	lsls	r2, r2, #16
    4ca2:	041b      	lsls	r3, r3, #16
    4ca4:	0c12      	lsrs	r2, r2, #16
    4ca6:	1828      	adds	r0, r5, r0
    4ca8:	189b      	adds	r3, r3, r2
    4caa:	4286      	cmp	r6, r0
    4cac:	d200      	bcs.n	4cb0 <__aeabi_ddiv+0x3cc>
    4cae:	e093      	b.n	4dd8 <__aeabi_ddiv+0x4f4>
    4cb0:	d100      	bne.n	4cb4 <__aeabi_ddiv+0x3d0>
    4cb2:	e08e      	b.n	4dd2 <__aeabi_ddiv+0x4ee>
    4cb4:	2301      	movs	r3, #1
    4cb6:	4319      	orrs	r1, r3
    4cb8:	4ba0      	ldr	r3, [pc, #640]	; (4f3c <__aeabi_ddiv+0x658>)
    4cba:	18e3      	adds	r3, r4, r3
    4cbc:	2b00      	cmp	r3, #0
    4cbe:	dc00      	bgt.n	4cc2 <__aeabi_ddiv+0x3de>
    4cc0:	e099      	b.n	4df6 <__aeabi_ddiv+0x512>
    4cc2:	074a      	lsls	r2, r1, #29
    4cc4:	d000      	beq.n	4cc8 <__aeabi_ddiv+0x3e4>
    4cc6:	e09e      	b.n	4e06 <__aeabi_ddiv+0x522>
    4cc8:	465a      	mov	r2, fp
    4cca:	01d2      	lsls	r2, r2, #7
    4ccc:	d506      	bpl.n	4cdc <__aeabi_ddiv+0x3f8>
    4cce:	465a      	mov	r2, fp
    4cd0:	4b9b      	ldr	r3, [pc, #620]	; (4f40 <__aeabi_ddiv+0x65c>)
    4cd2:	401a      	ands	r2, r3
    4cd4:	2380      	movs	r3, #128	; 0x80
    4cd6:	4693      	mov	fp, r2
    4cd8:	00db      	lsls	r3, r3, #3
    4cda:	18e3      	adds	r3, r4, r3
    4cdc:	4a99      	ldr	r2, [pc, #612]	; (4f44 <__aeabi_ddiv+0x660>)
    4cde:	4293      	cmp	r3, r2
    4ce0:	dd68      	ble.n	4db4 <__aeabi_ddiv+0x4d0>
    4ce2:	2301      	movs	r3, #1
    4ce4:	9a02      	ldr	r2, [sp, #8]
    4ce6:	4c98      	ldr	r4, [pc, #608]	; (4f48 <__aeabi_ddiv+0x664>)
    4ce8:	401a      	ands	r2, r3
    4cea:	2300      	movs	r3, #0
    4cec:	4694      	mov	ip, r2
    4cee:	4698      	mov	r8, r3
    4cf0:	2200      	movs	r2, #0
    4cf2:	e6c5      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4cf4:	2280      	movs	r2, #128	; 0x80
    4cf6:	464b      	mov	r3, r9
    4cf8:	0312      	lsls	r2, r2, #12
    4cfa:	4213      	tst	r3, r2
    4cfc:	d00a      	beq.n	4d14 <__aeabi_ddiv+0x430>
    4cfe:	465b      	mov	r3, fp
    4d00:	4213      	tst	r3, r2
    4d02:	d106      	bne.n	4d12 <__aeabi_ddiv+0x42e>
    4d04:	431a      	orrs	r2, r3
    4d06:	0312      	lsls	r2, r2, #12
    4d08:	0b12      	lsrs	r2, r2, #12
    4d0a:	46ac      	mov	ip, r5
    4d0c:	4688      	mov	r8, r1
    4d0e:	4c8e      	ldr	r4, [pc, #568]	; (4f48 <__aeabi_ddiv+0x664>)
    4d10:	e6b6      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4d12:	464b      	mov	r3, r9
    4d14:	431a      	orrs	r2, r3
    4d16:	0312      	lsls	r2, r2, #12
    4d18:	0b12      	lsrs	r2, r2, #12
    4d1a:	46bc      	mov	ip, r7
    4d1c:	4c8a      	ldr	r4, [pc, #552]	; (4f48 <__aeabi_ddiv+0x664>)
    4d1e:	e6af      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4d20:	0003      	movs	r3, r0
    4d22:	465a      	mov	r2, fp
    4d24:	3b28      	subs	r3, #40	; 0x28
    4d26:	409a      	lsls	r2, r3
    4d28:	2300      	movs	r3, #0
    4d2a:	4691      	mov	r9, r2
    4d2c:	4698      	mov	r8, r3
    4d2e:	e657      	b.n	49e0 <__aeabi_ddiv+0xfc>
    4d30:	4658      	mov	r0, fp
    4d32:	f001 f837 	bl	5da4 <__clzsi2>
    4d36:	3020      	adds	r0, #32
    4d38:	e640      	b.n	49bc <__aeabi_ddiv+0xd8>
    4d3a:	0003      	movs	r3, r0
    4d3c:	4652      	mov	r2, sl
    4d3e:	3b28      	subs	r3, #40	; 0x28
    4d40:	409a      	lsls	r2, r3
    4d42:	2100      	movs	r1, #0
    4d44:	4693      	mov	fp, r2
    4d46:	e677      	b.n	4a38 <__aeabi_ddiv+0x154>
    4d48:	f001 f82c 	bl	5da4 <__clzsi2>
    4d4c:	3020      	adds	r0, #32
    4d4e:	e65f      	b.n	4a10 <__aeabi_ddiv+0x12c>
    4d50:	4588      	cmp	r8, r1
    4d52:	d200      	bcs.n	4d56 <__aeabi_ddiv+0x472>
    4d54:	e6c7      	b.n	4ae6 <__aeabi_ddiv+0x202>
    4d56:	464b      	mov	r3, r9
    4d58:	07de      	lsls	r6, r3, #31
    4d5a:	085d      	lsrs	r5, r3, #1
    4d5c:	4643      	mov	r3, r8
    4d5e:	085b      	lsrs	r3, r3, #1
    4d60:	431e      	orrs	r6, r3
    4d62:	4643      	mov	r3, r8
    4d64:	07db      	lsls	r3, r3, #31
    4d66:	469a      	mov	sl, r3
    4d68:	e6c2      	b.n	4af0 <__aeabi_ddiv+0x20c>
    4d6a:	2500      	movs	r5, #0
    4d6c:	4592      	cmp	sl, r2
    4d6e:	d300      	bcc.n	4d72 <__aeabi_ddiv+0x48e>
    4d70:	e733      	b.n	4bda <__aeabi_ddiv+0x2f6>
    4d72:	9e03      	ldr	r6, [sp, #12]
    4d74:	4659      	mov	r1, fp
    4d76:	46b4      	mov	ip, r6
    4d78:	44e2      	add	sl, ip
    4d7a:	45b2      	cmp	sl, r6
    4d7c:	41ad      	sbcs	r5, r5
    4d7e:	426d      	negs	r5, r5
    4d80:	4445      	add	r5, r8
    4d82:	18eb      	adds	r3, r5, r3
    4d84:	3901      	subs	r1, #1
    4d86:	4598      	cmp	r8, r3
    4d88:	d207      	bcs.n	4d9a <__aeabi_ddiv+0x4b6>
    4d8a:	4298      	cmp	r0, r3
    4d8c:	d900      	bls.n	4d90 <__aeabi_ddiv+0x4ac>
    4d8e:	e07f      	b.n	4e90 <__aeabi_ddiv+0x5ac>
    4d90:	d100      	bne.n	4d94 <__aeabi_ddiv+0x4b0>
    4d92:	e0bc      	b.n	4f0e <__aeabi_ddiv+0x62a>
    4d94:	1a1d      	subs	r5, r3, r0
    4d96:	468b      	mov	fp, r1
    4d98:	e71f      	b.n	4bda <__aeabi_ddiv+0x2f6>
    4d9a:	4598      	cmp	r8, r3
    4d9c:	d1fa      	bne.n	4d94 <__aeabi_ddiv+0x4b0>
    4d9e:	9d03      	ldr	r5, [sp, #12]
    4da0:	4555      	cmp	r5, sl
    4da2:	d9f2      	bls.n	4d8a <__aeabi_ddiv+0x4a6>
    4da4:	4643      	mov	r3, r8
    4da6:	468b      	mov	fp, r1
    4da8:	1a1d      	subs	r5, r3, r0
    4daa:	e716      	b.n	4bda <__aeabi_ddiv+0x2f6>
    4dac:	469b      	mov	fp, r3
    4dae:	e6ca      	b.n	4b46 <__aeabi_ddiv+0x262>
    4db0:	0015      	movs	r5, r2
    4db2:	e6e7      	b.n	4b84 <__aeabi_ddiv+0x2a0>
    4db4:	465a      	mov	r2, fp
    4db6:	08c9      	lsrs	r1, r1, #3
    4db8:	0752      	lsls	r2, r2, #29
    4dba:	430a      	orrs	r2, r1
    4dbc:	055b      	lsls	r3, r3, #21
    4dbe:	4690      	mov	r8, r2
    4dc0:	0d5c      	lsrs	r4, r3, #21
    4dc2:	465a      	mov	r2, fp
    4dc4:	2301      	movs	r3, #1
    4dc6:	9902      	ldr	r1, [sp, #8]
    4dc8:	0252      	lsls	r2, r2, #9
    4dca:	4019      	ands	r1, r3
    4dcc:	0b12      	lsrs	r2, r2, #12
    4dce:	468c      	mov	ip, r1
    4dd0:	e656      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4dd2:	2b00      	cmp	r3, #0
    4dd4:	d100      	bne.n	4dd8 <__aeabi_ddiv+0x4f4>
    4dd6:	e76f      	b.n	4cb8 <__aeabi_ddiv+0x3d4>
    4dd8:	4446      	add	r6, r8
    4dda:	1e4a      	subs	r2, r1, #1
    4ddc:	45b0      	cmp	r8, r6
    4dde:	d929      	bls.n	4e34 <__aeabi_ddiv+0x550>
    4de0:	0011      	movs	r1, r2
    4de2:	4286      	cmp	r6, r0
    4de4:	d000      	beq.n	4de8 <__aeabi_ddiv+0x504>
    4de6:	e765      	b.n	4cb4 <__aeabi_ddiv+0x3d0>
    4de8:	9a03      	ldr	r2, [sp, #12]
    4dea:	4293      	cmp	r3, r2
    4dec:	d000      	beq.n	4df0 <__aeabi_ddiv+0x50c>
    4dee:	e761      	b.n	4cb4 <__aeabi_ddiv+0x3d0>
    4df0:	e762      	b.n	4cb8 <__aeabi_ddiv+0x3d4>
    4df2:	2101      	movs	r1, #1
    4df4:	4249      	negs	r1, r1
    4df6:	2001      	movs	r0, #1
    4df8:	1ac2      	subs	r2, r0, r3
    4dfa:	2a38      	cmp	r2, #56	; 0x38
    4dfc:	dd21      	ble.n	4e42 <__aeabi_ddiv+0x55e>
    4dfe:	9b02      	ldr	r3, [sp, #8]
    4e00:	4003      	ands	r3, r0
    4e02:	469c      	mov	ip, r3
    4e04:	e638      	b.n	4a78 <__aeabi_ddiv+0x194>
    4e06:	220f      	movs	r2, #15
    4e08:	400a      	ands	r2, r1
    4e0a:	2a04      	cmp	r2, #4
    4e0c:	d100      	bne.n	4e10 <__aeabi_ddiv+0x52c>
    4e0e:	e75b      	b.n	4cc8 <__aeabi_ddiv+0x3e4>
    4e10:	000a      	movs	r2, r1
    4e12:	1d11      	adds	r1, r2, #4
    4e14:	4291      	cmp	r1, r2
    4e16:	4192      	sbcs	r2, r2
    4e18:	4252      	negs	r2, r2
    4e1a:	4493      	add	fp, r2
    4e1c:	e754      	b.n	4cc8 <__aeabi_ddiv+0x3e4>
    4e1e:	4b47      	ldr	r3, [pc, #284]	; (4f3c <__aeabi_ddiv+0x658>)
    4e20:	18e3      	adds	r3, r4, r3
    4e22:	2b00      	cmp	r3, #0
    4e24:	dde5      	ble.n	4df2 <__aeabi_ddiv+0x50e>
    4e26:	2201      	movs	r2, #1
    4e28:	4252      	negs	r2, r2
    4e2a:	e7f2      	b.n	4e12 <__aeabi_ddiv+0x52e>
    4e2c:	001d      	movs	r5, r3
    4e2e:	e6fa      	b.n	4c26 <__aeabi_ddiv+0x342>
    4e30:	469a      	mov	sl, r3
    4e32:	e71c      	b.n	4c6e <__aeabi_ddiv+0x38a>
    4e34:	42b0      	cmp	r0, r6
    4e36:	d839      	bhi.n	4eac <__aeabi_ddiv+0x5c8>
    4e38:	d06e      	beq.n	4f18 <__aeabi_ddiv+0x634>
    4e3a:	0011      	movs	r1, r2
    4e3c:	e73a      	b.n	4cb4 <__aeabi_ddiv+0x3d0>
    4e3e:	9302      	str	r3, [sp, #8]
    4e40:	e73a      	b.n	4cb8 <__aeabi_ddiv+0x3d4>
    4e42:	2a1f      	cmp	r2, #31
    4e44:	dc3c      	bgt.n	4ec0 <__aeabi_ddiv+0x5dc>
    4e46:	2320      	movs	r3, #32
    4e48:	1a9b      	subs	r3, r3, r2
    4e4a:	000c      	movs	r4, r1
    4e4c:	4658      	mov	r0, fp
    4e4e:	4099      	lsls	r1, r3
    4e50:	4098      	lsls	r0, r3
    4e52:	1e4b      	subs	r3, r1, #1
    4e54:	4199      	sbcs	r1, r3
    4e56:	465b      	mov	r3, fp
    4e58:	40d4      	lsrs	r4, r2
    4e5a:	40d3      	lsrs	r3, r2
    4e5c:	4320      	orrs	r0, r4
    4e5e:	4308      	orrs	r0, r1
    4e60:	001a      	movs	r2, r3
    4e62:	0743      	lsls	r3, r0, #29
    4e64:	d009      	beq.n	4e7a <__aeabi_ddiv+0x596>
    4e66:	230f      	movs	r3, #15
    4e68:	4003      	ands	r3, r0
    4e6a:	2b04      	cmp	r3, #4
    4e6c:	d005      	beq.n	4e7a <__aeabi_ddiv+0x596>
    4e6e:	0001      	movs	r1, r0
    4e70:	1d08      	adds	r0, r1, #4
    4e72:	4288      	cmp	r0, r1
    4e74:	419b      	sbcs	r3, r3
    4e76:	425b      	negs	r3, r3
    4e78:	18d2      	adds	r2, r2, r3
    4e7a:	0213      	lsls	r3, r2, #8
    4e7c:	d53a      	bpl.n	4ef4 <__aeabi_ddiv+0x610>
    4e7e:	2301      	movs	r3, #1
    4e80:	9a02      	ldr	r2, [sp, #8]
    4e82:	2401      	movs	r4, #1
    4e84:	401a      	ands	r2, r3
    4e86:	2300      	movs	r3, #0
    4e88:	4694      	mov	ip, r2
    4e8a:	4698      	mov	r8, r3
    4e8c:	2200      	movs	r2, #0
    4e8e:	e5f7      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4e90:	2102      	movs	r1, #2
    4e92:	4249      	negs	r1, r1
    4e94:	468c      	mov	ip, r1
    4e96:	9d03      	ldr	r5, [sp, #12]
    4e98:	44e3      	add	fp, ip
    4e9a:	46ac      	mov	ip, r5
    4e9c:	44e2      	add	sl, ip
    4e9e:	45aa      	cmp	sl, r5
    4ea0:	41ad      	sbcs	r5, r5
    4ea2:	426d      	negs	r5, r5
    4ea4:	4445      	add	r5, r8
    4ea6:	18ed      	adds	r5, r5, r3
    4ea8:	1a2d      	subs	r5, r5, r0
    4eaa:	e696      	b.n	4bda <__aeabi_ddiv+0x2f6>
    4eac:	1e8a      	subs	r2, r1, #2
    4eae:	9903      	ldr	r1, [sp, #12]
    4eb0:	004d      	lsls	r5, r1, #1
    4eb2:	428d      	cmp	r5, r1
    4eb4:	4189      	sbcs	r1, r1
    4eb6:	4249      	negs	r1, r1
    4eb8:	4441      	add	r1, r8
    4eba:	1876      	adds	r6, r6, r1
    4ebc:	9503      	str	r5, [sp, #12]
    4ebe:	e78f      	b.n	4de0 <__aeabi_ddiv+0x4fc>
    4ec0:	201f      	movs	r0, #31
    4ec2:	4240      	negs	r0, r0
    4ec4:	1ac3      	subs	r3, r0, r3
    4ec6:	4658      	mov	r0, fp
    4ec8:	40d8      	lsrs	r0, r3
    4eca:	0003      	movs	r3, r0
    4ecc:	2a20      	cmp	r2, #32
    4ece:	d028      	beq.n	4f22 <__aeabi_ddiv+0x63e>
    4ed0:	2040      	movs	r0, #64	; 0x40
    4ed2:	465d      	mov	r5, fp
    4ed4:	1a82      	subs	r2, r0, r2
    4ed6:	4095      	lsls	r5, r2
    4ed8:	4329      	orrs	r1, r5
    4eda:	1e4a      	subs	r2, r1, #1
    4edc:	4191      	sbcs	r1, r2
    4ede:	4319      	orrs	r1, r3
    4ee0:	2307      	movs	r3, #7
    4ee2:	2200      	movs	r2, #0
    4ee4:	400b      	ands	r3, r1
    4ee6:	d009      	beq.n	4efc <__aeabi_ddiv+0x618>
    4ee8:	230f      	movs	r3, #15
    4eea:	2200      	movs	r2, #0
    4eec:	400b      	ands	r3, r1
    4eee:	0008      	movs	r0, r1
    4ef0:	2b04      	cmp	r3, #4
    4ef2:	d1bd      	bne.n	4e70 <__aeabi_ddiv+0x58c>
    4ef4:	0001      	movs	r1, r0
    4ef6:	0753      	lsls	r3, r2, #29
    4ef8:	0252      	lsls	r2, r2, #9
    4efa:	0b12      	lsrs	r2, r2, #12
    4efc:	08c9      	lsrs	r1, r1, #3
    4efe:	4319      	orrs	r1, r3
    4f00:	2301      	movs	r3, #1
    4f02:	4688      	mov	r8, r1
    4f04:	9902      	ldr	r1, [sp, #8]
    4f06:	2400      	movs	r4, #0
    4f08:	4019      	ands	r1, r3
    4f0a:	468c      	mov	ip, r1
    4f0c:	e5b8      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4f0e:	4552      	cmp	r2, sl
    4f10:	d8be      	bhi.n	4e90 <__aeabi_ddiv+0x5ac>
    4f12:	468b      	mov	fp, r1
    4f14:	2500      	movs	r5, #0
    4f16:	e660      	b.n	4bda <__aeabi_ddiv+0x2f6>
    4f18:	9d03      	ldr	r5, [sp, #12]
    4f1a:	429d      	cmp	r5, r3
    4f1c:	d3c6      	bcc.n	4eac <__aeabi_ddiv+0x5c8>
    4f1e:	0011      	movs	r1, r2
    4f20:	e762      	b.n	4de8 <__aeabi_ddiv+0x504>
    4f22:	2500      	movs	r5, #0
    4f24:	e7d8      	b.n	4ed8 <__aeabi_ddiv+0x5f4>
    4f26:	2280      	movs	r2, #128	; 0x80
    4f28:	465b      	mov	r3, fp
    4f2a:	0312      	lsls	r2, r2, #12
    4f2c:	431a      	orrs	r2, r3
    4f2e:	9b01      	ldr	r3, [sp, #4]
    4f30:	0312      	lsls	r2, r2, #12
    4f32:	0b12      	lsrs	r2, r2, #12
    4f34:	469c      	mov	ip, r3
    4f36:	4688      	mov	r8, r1
    4f38:	4c03      	ldr	r4, [pc, #12]	; (4f48 <__aeabi_ddiv+0x664>)
    4f3a:	e5a1      	b.n	4a80 <__aeabi_ddiv+0x19c>
    4f3c:	000003ff 	.word	0x000003ff
    4f40:	feffffff 	.word	0xfeffffff
    4f44:	000007fe 	.word	0x000007fe
    4f48:	000007ff 	.word	0x000007ff

00004f4c <__eqdf2>:
    4f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f4e:	464f      	mov	r7, r9
    4f50:	4646      	mov	r6, r8
    4f52:	46d6      	mov	lr, sl
    4f54:	005c      	lsls	r4, r3, #1
    4f56:	b5c0      	push	{r6, r7, lr}
    4f58:	031f      	lsls	r7, r3, #12
    4f5a:	0fdb      	lsrs	r3, r3, #31
    4f5c:	469a      	mov	sl, r3
    4f5e:	4b17      	ldr	r3, [pc, #92]	; (4fbc <__eqdf2+0x70>)
    4f60:	030e      	lsls	r6, r1, #12
    4f62:	004d      	lsls	r5, r1, #1
    4f64:	4684      	mov	ip, r0
    4f66:	4680      	mov	r8, r0
    4f68:	0b36      	lsrs	r6, r6, #12
    4f6a:	0d6d      	lsrs	r5, r5, #21
    4f6c:	0fc9      	lsrs	r1, r1, #31
    4f6e:	4691      	mov	r9, r2
    4f70:	0b3f      	lsrs	r7, r7, #12
    4f72:	0d64      	lsrs	r4, r4, #21
    4f74:	2001      	movs	r0, #1
    4f76:	429d      	cmp	r5, r3
    4f78:	d008      	beq.n	4f8c <__eqdf2+0x40>
    4f7a:	429c      	cmp	r4, r3
    4f7c:	d001      	beq.n	4f82 <__eqdf2+0x36>
    4f7e:	42a5      	cmp	r5, r4
    4f80:	d00b      	beq.n	4f9a <__eqdf2+0x4e>
    4f82:	bc1c      	pop	{r2, r3, r4}
    4f84:	4690      	mov	r8, r2
    4f86:	4699      	mov	r9, r3
    4f88:	46a2      	mov	sl, r4
    4f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4f8c:	4663      	mov	r3, ip
    4f8e:	4333      	orrs	r3, r6
    4f90:	d1f7      	bne.n	4f82 <__eqdf2+0x36>
    4f92:	42ac      	cmp	r4, r5
    4f94:	d1f5      	bne.n	4f82 <__eqdf2+0x36>
    4f96:	433a      	orrs	r2, r7
    4f98:	d1f3      	bne.n	4f82 <__eqdf2+0x36>
    4f9a:	2001      	movs	r0, #1
    4f9c:	42be      	cmp	r6, r7
    4f9e:	d1f0      	bne.n	4f82 <__eqdf2+0x36>
    4fa0:	45c8      	cmp	r8, r9
    4fa2:	d1ee      	bne.n	4f82 <__eqdf2+0x36>
    4fa4:	4551      	cmp	r1, sl
    4fa6:	d007      	beq.n	4fb8 <__eqdf2+0x6c>
    4fa8:	2d00      	cmp	r5, #0
    4faa:	d1ea      	bne.n	4f82 <__eqdf2+0x36>
    4fac:	4663      	mov	r3, ip
    4fae:	431e      	orrs	r6, r3
    4fb0:	0030      	movs	r0, r6
    4fb2:	1e46      	subs	r6, r0, #1
    4fb4:	41b0      	sbcs	r0, r6
    4fb6:	e7e4      	b.n	4f82 <__eqdf2+0x36>
    4fb8:	2000      	movs	r0, #0
    4fba:	e7e2      	b.n	4f82 <__eqdf2+0x36>
    4fbc:	000007ff 	.word	0x000007ff

00004fc0 <__gedf2>:
    4fc0:	b5f0      	push	{r4, r5, r6, r7, lr}
    4fc2:	4645      	mov	r5, r8
    4fc4:	46de      	mov	lr, fp
    4fc6:	4657      	mov	r7, sl
    4fc8:	464e      	mov	r6, r9
    4fca:	b5e0      	push	{r5, r6, r7, lr}
    4fcc:	031f      	lsls	r7, r3, #12
    4fce:	0b3d      	lsrs	r5, r7, #12
    4fd0:	4f2c      	ldr	r7, [pc, #176]	; (5084 <__gedf2+0xc4>)
    4fd2:	030e      	lsls	r6, r1, #12
    4fd4:	004c      	lsls	r4, r1, #1
    4fd6:	46ab      	mov	fp, r5
    4fd8:	005d      	lsls	r5, r3, #1
    4fda:	4684      	mov	ip, r0
    4fdc:	0b36      	lsrs	r6, r6, #12
    4fde:	0d64      	lsrs	r4, r4, #21
    4fe0:	0fc9      	lsrs	r1, r1, #31
    4fe2:	4690      	mov	r8, r2
    4fe4:	0d6d      	lsrs	r5, r5, #21
    4fe6:	0fdb      	lsrs	r3, r3, #31
    4fe8:	42bc      	cmp	r4, r7
    4fea:	d02a      	beq.n	5042 <__gedf2+0x82>
    4fec:	4f25      	ldr	r7, [pc, #148]	; (5084 <__gedf2+0xc4>)
    4fee:	42bd      	cmp	r5, r7
    4ff0:	d02d      	beq.n	504e <__gedf2+0x8e>
    4ff2:	2c00      	cmp	r4, #0
    4ff4:	d10f      	bne.n	5016 <__gedf2+0x56>
    4ff6:	4330      	orrs	r0, r6
    4ff8:	0007      	movs	r7, r0
    4ffa:	4681      	mov	r9, r0
    4ffc:	4278      	negs	r0, r7
    4ffe:	4178      	adcs	r0, r7
    5000:	b2c0      	uxtb	r0, r0
    5002:	2d00      	cmp	r5, #0
    5004:	d117      	bne.n	5036 <__gedf2+0x76>
    5006:	465f      	mov	r7, fp
    5008:	433a      	orrs	r2, r7
    500a:	d114      	bne.n	5036 <__gedf2+0x76>
    500c:	464b      	mov	r3, r9
    500e:	2000      	movs	r0, #0
    5010:	2b00      	cmp	r3, #0
    5012:	d00a      	beq.n	502a <__gedf2+0x6a>
    5014:	e006      	b.n	5024 <__gedf2+0x64>
    5016:	2d00      	cmp	r5, #0
    5018:	d102      	bne.n	5020 <__gedf2+0x60>
    501a:	4658      	mov	r0, fp
    501c:	4302      	orrs	r2, r0
    501e:	d001      	beq.n	5024 <__gedf2+0x64>
    5020:	4299      	cmp	r1, r3
    5022:	d018      	beq.n	5056 <__gedf2+0x96>
    5024:	4248      	negs	r0, r1
    5026:	2101      	movs	r1, #1
    5028:	4308      	orrs	r0, r1
    502a:	bc3c      	pop	{r2, r3, r4, r5}
    502c:	4690      	mov	r8, r2
    502e:	4699      	mov	r9, r3
    5030:	46a2      	mov	sl, r4
    5032:	46ab      	mov	fp, r5
    5034:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5036:	2800      	cmp	r0, #0
    5038:	d0f2      	beq.n	5020 <__gedf2+0x60>
    503a:	2001      	movs	r0, #1
    503c:	3b01      	subs	r3, #1
    503e:	4318      	orrs	r0, r3
    5040:	e7f3      	b.n	502a <__gedf2+0x6a>
    5042:	0037      	movs	r7, r6
    5044:	4307      	orrs	r7, r0
    5046:	d0d1      	beq.n	4fec <__gedf2+0x2c>
    5048:	2002      	movs	r0, #2
    504a:	4240      	negs	r0, r0
    504c:	e7ed      	b.n	502a <__gedf2+0x6a>
    504e:	465f      	mov	r7, fp
    5050:	4317      	orrs	r7, r2
    5052:	d0ce      	beq.n	4ff2 <__gedf2+0x32>
    5054:	e7f8      	b.n	5048 <__gedf2+0x88>
    5056:	42ac      	cmp	r4, r5
    5058:	dce4      	bgt.n	5024 <__gedf2+0x64>
    505a:	da03      	bge.n	5064 <__gedf2+0xa4>
    505c:	1e48      	subs	r0, r1, #1
    505e:	2101      	movs	r1, #1
    5060:	4308      	orrs	r0, r1
    5062:	e7e2      	b.n	502a <__gedf2+0x6a>
    5064:	455e      	cmp	r6, fp
    5066:	d8dd      	bhi.n	5024 <__gedf2+0x64>
    5068:	d006      	beq.n	5078 <__gedf2+0xb8>
    506a:	2000      	movs	r0, #0
    506c:	455e      	cmp	r6, fp
    506e:	d2dc      	bcs.n	502a <__gedf2+0x6a>
    5070:	2301      	movs	r3, #1
    5072:	1e48      	subs	r0, r1, #1
    5074:	4318      	orrs	r0, r3
    5076:	e7d8      	b.n	502a <__gedf2+0x6a>
    5078:	45c4      	cmp	ip, r8
    507a:	d8d3      	bhi.n	5024 <__gedf2+0x64>
    507c:	2000      	movs	r0, #0
    507e:	45c4      	cmp	ip, r8
    5080:	d3f6      	bcc.n	5070 <__gedf2+0xb0>
    5082:	e7d2      	b.n	502a <__gedf2+0x6a>
    5084:	000007ff 	.word	0x000007ff

00005088 <__ledf2>:
    5088:	b5f0      	push	{r4, r5, r6, r7, lr}
    508a:	464e      	mov	r6, r9
    508c:	4645      	mov	r5, r8
    508e:	46de      	mov	lr, fp
    5090:	4657      	mov	r7, sl
    5092:	005c      	lsls	r4, r3, #1
    5094:	b5e0      	push	{r5, r6, r7, lr}
    5096:	031f      	lsls	r7, r3, #12
    5098:	0fdb      	lsrs	r3, r3, #31
    509a:	4699      	mov	r9, r3
    509c:	4b2a      	ldr	r3, [pc, #168]	; (5148 <__ledf2+0xc0>)
    509e:	030e      	lsls	r6, r1, #12
    50a0:	004d      	lsls	r5, r1, #1
    50a2:	0fc9      	lsrs	r1, r1, #31
    50a4:	4684      	mov	ip, r0
    50a6:	0b36      	lsrs	r6, r6, #12
    50a8:	0d6d      	lsrs	r5, r5, #21
    50aa:	468b      	mov	fp, r1
    50ac:	4690      	mov	r8, r2
    50ae:	0b3f      	lsrs	r7, r7, #12
    50b0:	0d64      	lsrs	r4, r4, #21
    50b2:	429d      	cmp	r5, r3
    50b4:	d020      	beq.n	50f8 <__ledf2+0x70>
    50b6:	4b24      	ldr	r3, [pc, #144]	; (5148 <__ledf2+0xc0>)
    50b8:	429c      	cmp	r4, r3
    50ba:	d022      	beq.n	5102 <__ledf2+0x7a>
    50bc:	2d00      	cmp	r5, #0
    50be:	d112      	bne.n	50e6 <__ledf2+0x5e>
    50c0:	4330      	orrs	r0, r6
    50c2:	4243      	negs	r3, r0
    50c4:	4143      	adcs	r3, r0
    50c6:	b2db      	uxtb	r3, r3
    50c8:	2c00      	cmp	r4, #0
    50ca:	d01f      	beq.n	510c <__ledf2+0x84>
    50cc:	2b00      	cmp	r3, #0
    50ce:	d00c      	beq.n	50ea <__ledf2+0x62>
    50d0:	464b      	mov	r3, r9
    50d2:	2001      	movs	r0, #1
    50d4:	3b01      	subs	r3, #1
    50d6:	4303      	orrs	r3, r0
    50d8:	0018      	movs	r0, r3
    50da:	bc3c      	pop	{r2, r3, r4, r5}
    50dc:	4690      	mov	r8, r2
    50de:	4699      	mov	r9, r3
    50e0:	46a2      	mov	sl, r4
    50e2:	46ab      	mov	fp, r5
    50e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    50e6:	2c00      	cmp	r4, #0
    50e8:	d016      	beq.n	5118 <__ledf2+0x90>
    50ea:	45cb      	cmp	fp, r9
    50ec:	d017      	beq.n	511e <__ledf2+0x96>
    50ee:	465b      	mov	r3, fp
    50f0:	4259      	negs	r1, r3
    50f2:	2301      	movs	r3, #1
    50f4:	430b      	orrs	r3, r1
    50f6:	e7ef      	b.n	50d8 <__ledf2+0x50>
    50f8:	0031      	movs	r1, r6
    50fa:	2302      	movs	r3, #2
    50fc:	4301      	orrs	r1, r0
    50fe:	d1eb      	bne.n	50d8 <__ledf2+0x50>
    5100:	e7d9      	b.n	50b6 <__ledf2+0x2e>
    5102:	0039      	movs	r1, r7
    5104:	2302      	movs	r3, #2
    5106:	4311      	orrs	r1, r2
    5108:	d1e6      	bne.n	50d8 <__ledf2+0x50>
    510a:	e7d7      	b.n	50bc <__ledf2+0x34>
    510c:	433a      	orrs	r2, r7
    510e:	d1dd      	bne.n	50cc <__ledf2+0x44>
    5110:	2300      	movs	r3, #0
    5112:	2800      	cmp	r0, #0
    5114:	d0e0      	beq.n	50d8 <__ledf2+0x50>
    5116:	e7ea      	b.n	50ee <__ledf2+0x66>
    5118:	433a      	orrs	r2, r7
    511a:	d1e6      	bne.n	50ea <__ledf2+0x62>
    511c:	e7e7      	b.n	50ee <__ledf2+0x66>
    511e:	42a5      	cmp	r5, r4
    5120:	dce5      	bgt.n	50ee <__ledf2+0x66>
    5122:	db05      	blt.n	5130 <__ledf2+0xa8>
    5124:	42be      	cmp	r6, r7
    5126:	d8e2      	bhi.n	50ee <__ledf2+0x66>
    5128:	d007      	beq.n	513a <__ledf2+0xb2>
    512a:	2300      	movs	r3, #0
    512c:	42be      	cmp	r6, r7
    512e:	d2d3      	bcs.n	50d8 <__ledf2+0x50>
    5130:	4659      	mov	r1, fp
    5132:	2301      	movs	r3, #1
    5134:	3901      	subs	r1, #1
    5136:	430b      	orrs	r3, r1
    5138:	e7ce      	b.n	50d8 <__ledf2+0x50>
    513a:	45c4      	cmp	ip, r8
    513c:	d8d7      	bhi.n	50ee <__ledf2+0x66>
    513e:	2300      	movs	r3, #0
    5140:	45c4      	cmp	ip, r8
    5142:	d3f5      	bcc.n	5130 <__ledf2+0xa8>
    5144:	e7c8      	b.n	50d8 <__ledf2+0x50>
    5146:	46c0      	nop			; (mov r8, r8)
    5148:	000007ff 	.word	0x000007ff

0000514c <__aeabi_dmul>:
    514c:	b5f0      	push	{r4, r5, r6, r7, lr}
    514e:	4657      	mov	r7, sl
    5150:	4645      	mov	r5, r8
    5152:	46de      	mov	lr, fp
    5154:	464e      	mov	r6, r9
    5156:	b5e0      	push	{r5, r6, r7, lr}
    5158:	030c      	lsls	r4, r1, #12
    515a:	4698      	mov	r8, r3
    515c:	004e      	lsls	r6, r1, #1
    515e:	0b23      	lsrs	r3, r4, #12
    5160:	b087      	sub	sp, #28
    5162:	0007      	movs	r7, r0
    5164:	4692      	mov	sl, r2
    5166:	469b      	mov	fp, r3
    5168:	0d76      	lsrs	r6, r6, #21
    516a:	0fcd      	lsrs	r5, r1, #31
    516c:	2e00      	cmp	r6, #0
    516e:	d06b      	beq.n	5248 <__aeabi_dmul+0xfc>
    5170:	4b6d      	ldr	r3, [pc, #436]	; (5328 <__aeabi_dmul+0x1dc>)
    5172:	429e      	cmp	r6, r3
    5174:	d035      	beq.n	51e2 <__aeabi_dmul+0x96>
    5176:	2480      	movs	r4, #128	; 0x80
    5178:	465b      	mov	r3, fp
    517a:	0f42      	lsrs	r2, r0, #29
    517c:	0424      	lsls	r4, r4, #16
    517e:	00db      	lsls	r3, r3, #3
    5180:	4314      	orrs	r4, r2
    5182:	431c      	orrs	r4, r3
    5184:	00c3      	lsls	r3, r0, #3
    5186:	4699      	mov	r9, r3
    5188:	4b68      	ldr	r3, [pc, #416]	; (532c <__aeabi_dmul+0x1e0>)
    518a:	46a3      	mov	fp, r4
    518c:	469c      	mov	ip, r3
    518e:	2300      	movs	r3, #0
    5190:	2700      	movs	r7, #0
    5192:	4466      	add	r6, ip
    5194:	9302      	str	r3, [sp, #8]
    5196:	4643      	mov	r3, r8
    5198:	031c      	lsls	r4, r3, #12
    519a:	005a      	lsls	r2, r3, #1
    519c:	0fdb      	lsrs	r3, r3, #31
    519e:	4650      	mov	r0, sl
    51a0:	0b24      	lsrs	r4, r4, #12
    51a2:	0d52      	lsrs	r2, r2, #21
    51a4:	4698      	mov	r8, r3
    51a6:	d100      	bne.n	51aa <__aeabi_dmul+0x5e>
    51a8:	e076      	b.n	5298 <__aeabi_dmul+0x14c>
    51aa:	4b5f      	ldr	r3, [pc, #380]	; (5328 <__aeabi_dmul+0x1dc>)
    51ac:	429a      	cmp	r2, r3
    51ae:	d06d      	beq.n	528c <__aeabi_dmul+0x140>
    51b0:	2380      	movs	r3, #128	; 0x80
    51b2:	0f41      	lsrs	r1, r0, #29
    51b4:	041b      	lsls	r3, r3, #16
    51b6:	430b      	orrs	r3, r1
    51b8:	495c      	ldr	r1, [pc, #368]	; (532c <__aeabi_dmul+0x1e0>)
    51ba:	00e4      	lsls	r4, r4, #3
    51bc:	468c      	mov	ip, r1
    51be:	431c      	orrs	r4, r3
    51c0:	00c3      	lsls	r3, r0, #3
    51c2:	2000      	movs	r0, #0
    51c4:	4462      	add	r2, ip
    51c6:	4641      	mov	r1, r8
    51c8:	18b6      	adds	r6, r6, r2
    51ca:	4069      	eors	r1, r5
    51cc:	1c72      	adds	r2, r6, #1
    51ce:	9101      	str	r1, [sp, #4]
    51d0:	4694      	mov	ip, r2
    51d2:	4307      	orrs	r7, r0
    51d4:	2f0f      	cmp	r7, #15
    51d6:	d900      	bls.n	51da <__aeabi_dmul+0x8e>
    51d8:	e0b0      	b.n	533c <__aeabi_dmul+0x1f0>
    51da:	4a55      	ldr	r2, [pc, #340]	; (5330 <__aeabi_dmul+0x1e4>)
    51dc:	00bf      	lsls	r7, r7, #2
    51de:	59d2      	ldr	r2, [r2, r7]
    51e0:	4697      	mov	pc, r2
    51e2:	465b      	mov	r3, fp
    51e4:	4303      	orrs	r3, r0
    51e6:	4699      	mov	r9, r3
    51e8:	d000      	beq.n	51ec <__aeabi_dmul+0xa0>
    51ea:	e087      	b.n	52fc <__aeabi_dmul+0x1b0>
    51ec:	2300      	movs	r3, #0
    51ee:	469b      	mov	fp, r3
    51f0:	3302      	adds	r3, #2
    51f2:	2708      	movs	r7, #8
    51f4:	9302      	str	r3, [sp, #8]
    51f6:	e7ce      	b.n	5196 <__aeabi_dmul+0x4a>
    51f8:	4642      	mov	r2, r8
    51fa:	9201      	str	r2, [sp, #4]
    51fc:	2802      	cmp	r0, #2
    51fe:	d067      	beq.n	52d0 <__aeabi_dmul+0x184>
    5200:	2803      	cmp	r0, #3
    5202:	d100      	bne.n	5206 <__aeabi_dmul+0xba>
    5204:	e20e      	b.n	5624 <__aeabi_dmul+0x4d8>
    5206:	2801      	cmp	r0, #1
    5208:	d000      	beq.n	520c <__aeabi_dmul+0xc0>
    520a:	e162      	b.n	54d2 <__aeabi_dmul+0x386>
    520c:	2300      	movs	r3, #0
    520e:	2400      	movs	r4, #0
    5210:	2200      	movs	r2, #0
    5212:	4699      	mov	r9, r3
    5214:	9901      	ldr	r1, [sp, #4]
    5216:	4001      	ands	r1, r0
    5218:	b2cd      	uxtb	r5, r1
    521a:	2100      	movs	r1, #0
    521c:	0312      	lsls	r2, r2, #12
    521e:	0d0b      	lsrs	r3, r1, #20
    5220:	0b12      	lsrs	r2, r2, #12
    5222:	051b      	lsls	r3, r3, #20
    5224:	4313      	orrs	r3, r2
    5226:	4a43      	ldr	r2, [pc, #268]	; (5334 <__aeabi_dmul+0x1e8>)
    5228:	0524      	lsls	r4, r4, #20
    522a:	4013      	ands	r3, r2
    522c:	431c      	orrs	r4, r3
    522e:	0064      	lsls	r4, r4, #1
    5230:	07ed      	lsls	r5, r5, #31
    5232:	0864      	lsrs	r4, r4, #1
    5234:	432c      	orrs	r4, r5
    5236:	4648      	mov	r0, r9
    5238:	0021      	movs	r1, r4
    523a:	b007      	add	sp, #28
    523c:	bc3c      	pop	{r2, r3, r4, r5}
    523e:	4690      	mov	r8, r2
    5240:	4699      	mov	r9, r3
    5242:	46a2      	mov	sl, r4
    5244:	46ab      	mov	fp, r5
    5246:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5248:	4303      	orrs	r3, r0
    524a:	4699      	mov	r9, r3
    524c:	d04f      	beq.n	52ee <__aeabi_dmul+0x1a2>
    524e:	465b      	mov	r3, fp
    5250:	2b00      	cmp	r3, #0
    5252:	d100      	bne.n	5256 <__aeabi_dmul+0x10a>
    5254:	e189      	b.n	556a <__aeabi_dmul+0x41e>
    5256:	4658      	mov	r0, fp
    5258:	f000 fda4 	bl	5da4 <__clzsi2>
    525c:	0003      	movs	r3, r0
    525e:	3b0b      	subs	r3, #11
    5260:	2b1c      	cmp	r3, #28
    5262:	dd00      	ble.n	5266 <__aeabi_dmul+0x11a>
    5264:	e17a      	b.n	555c <__aeabi_dmul+0x410>
    5266:	221d      	movs	r2, #29
    5268:	1ad3      	subs	r3, r2, r3
    526a:	003a      	movs	r2, r7
    526c:	0001      	movs	r1, r0
    526e:	465c      	mov	r4, fp
    5270:	40da      	lsrs	r2, r3
    5272:	3908      	subs	r1, #8
    5274:	408c      	lsls	r4, r1
    5276:	0013      	movs	r3, r2
    5278:	408f      	lsls	r7, r1
    527a:	4323      	orrs	r3, r4
    527c:	469b      	mov	fp, r3
    527e:	46b9      	mov	r9, r7
    5280:	2300      	movs	r3, #0
    5282:	4e2d      	ldr	r6, [pc, #180]	; (5338 <__aeabi_dmul+0x1ec>)
    5284:	2700      	movs	r7, #0
    5286:	1a36      	subs	r6, r6, r0
    5288:	9302      	str	r3, [sp, #8]
    528a:	e784      	b.n	5196 <__aeabi_dmul+0x4a>
    528c:	4653      	mov	r3, sl
    528e:	4323      	orrs	r3, r4
    5290:	d12a      	bne.n	52e8 <__aeabi_dmul+0x19c>
    5292:	2400      	movs	r4, #0
    5294:	2002      	movs	r0, #2
    5296:	e796      	b.n	51c6 <__aeabi_dmul+0x7a>
    5298:	4653      	mov	r3, sl
    529a:	4323      	orrs	r3, r4
    529c:	d020      	beq.n	52e0 <__aeabi_dmul+0x194>
    529e:	2c00      	cmp	r4, #0
    52a0:	d100      	bne.n	52a4 <__aeabi_dmul+0x158>
    52a2:	e157      	b.n	5554 <__aeabi_dmul+0x408>
    52a4:	0020      	movs	r0, r4
    52a6:	f000 fd7d 	bl	5da4 <__clzsi2>
    52aa:	0003      	movs	r3, r0
    52ac:	3b0b      	subs	r3, #11
    52ae:	2b1c      	cmp	r3, #28
    52b0:	dd00      	ble.n	52b4 <__aeabi_dmul+0x168>
    52b2:	e149      	b.n	5548 <__aeabi_dmul+0x3fc>
    52b4:	211d      	movs	r1, #29
    52b6:	1acb      	subs	r3, r1, r3
    52b8:	4651      	mov	r1, sl
    52ba:	0002      	movs	r2, r0
    52bc:	40d9      	lsrs	r1, r3
    52be:	4653      	mov	r3, sl
    52c0:	3a08      	subs	r2, #8
    52c2:	4094      	lsls	r4, r2
    52c4:	4093      	lsls	r3, r2
    52c6:	430c      	orrs	r4, r1
    52c8:	4a1b      	ldr	r2, [pc, #108]	; (5338 <__aeabi_dmul+0x1ec>)
    52ca:	1a12      	subs	r2, r2, r0
    52cc:	2000      	movs	r0, #0
    52ce:	e77a      	b.n	51c6 <__aeabi_dmul+0x7a>
    52d0:	2501      	movs	r5, #1
    52d2:	9b01      	ldr	r3, [sp, #4]
    52d4:	4c14      	ldr	r4, [pc, #80]	; (5328 <__aeabi_dmul+0x1dc>)
    52d6:	401d      	ands	r5, r3
    52d8:	2300      	movs	r3, #0
    52da:	2200      	movs	r2, #0
    52dc:	4699      	mov	r9, r3
    52de:	e79c      	b.n	521a <__aeabi_dmul+0xce>
    52e0:	2400      	movs	r4, #0
    52e2:	2200      	movs	r2, #0
    52e4:	2001      	movs	r0, #1
    52e6:	e76e      	b.n	51c6 <__aeabi_dmul+0x7a>
    52e8:	4653      	mov	r3, sl
    52ea:	2003      	movs	r0, #3
    52ec:	e76b      	b.n	51c6 <__aeabi_dmul+0x7a>
    52ee:	2300      	movs	r3, #0
    52f0:	469b      	mov	fp, r3
    52f2:	3301      	adds	r3, #1
    52f4:	2704      	movs	r7, #4
    52f6:	2600      	movs	r6, #0
    52f8:	9302      	str	r3, [sp, #8]
    52fa:	e74c      	b.n	5196 <__aeabi_dmul+0x4a>
    52fc:	2303      	movs	r3, #3
    52fe:	4681      	mov	r9, r0
    5300:	270c      	movs	r7, #12
    5302:	9302      	str	r3, [sp, #8]
    5304:	e747      	b.n	5196 <__aeabi_dmul+0x4a>
    5306:	2280      	movs	r2, #128	; 0x80
    5308:	2300      	movs	r3, #0
    530a:	2500      	movs	r5, #0
    530c:	0312      	lsls	r2, r2, #12
    530e:	4699      	mov	r9, r3
    5310:	4c05      	ldr	r4, [pc, #20]	; (5328 <__aeabi_dmul+0x1dc>)
    5312:	e782      	b.n	521a <__aeabi_dmul+0xce>
    5314:	465c      	mov	r4, fp
    5316:	464b      	mov	r3, r9
    5318:	9802      	ldr	r0, [sp, #8]
    531a:	e76f      	b.n	51fc <__aeabi_dmul+0xb0>
    531c:	465c      	mov	r4, fp
    531e:	464b      	mov	r3, r9
    5320:	9501      	str	r5, [sp, #4]
    5322:	9802      	ldr	r0, [sp, #8]
    5324:	e76a      	b.n	51fc <__aeabi_dmul+0xb0>
    5326:	46c0      	nop			; (mov r8, r8)
    5328:	000007ff 	.word	0x000007ff
    532c:	fffffc01 	.word	0xfffffc01
    5330:	00006100 	.word	0x00006100
    5334:	800fffff 	.word	0x800fffff
    5338:	fffffc0d 	.word	0xfffffc0d
    533c:	464a      	mov	r2, r9
    533e:	4649      	mov	r1, r9
    5340:	0c17      	lsrs	r7, r2, #16
    5342:	0c1a      	lsrs	r2, r3, #16
    5344:	041b      	lsls	r3, r3, #16
    5346:	0c1b      	lsrs	r3, r3, #16
    5348:	0408      	lsls	r0, r1, #16
    534a:	0019      	movs	r1, r3
    534c:	0c00      	lsrs	r0, r0, #16
    534e:	4341      	muls	r1, r0
    5350:	0015      	movs	r5, r2
    5352:	4688      	mov	r8, r1
    5354:	0019      	movs	r1, r3
    5356:	437d      	muls	r5, r7
    5358:	4379      	muls	r1, r7
    535a:	9503      	str	r5, [sp, #12]
    535c:	4689      	mov	r9, r1
    535e:	0029      	movs	r1, r5
    5360:	0015      	movs	r5, r2
    5362:	4345      	muls	r5, r0
    5364:	444d      	add	r5, r9
    5366:	9502      	str	r5, [sp, #8]
    5368:	4645      	mov	r5, r8
    536a:	0c2d      	lsrs	r5, r5, #16
    536c:	46aa      	mov	sl, r5
    536e:	9d02      	ldr	r5, [sp, #8]
    5370:	4455      	add	r5, sl
    5372:	45a9      	cmp	r9, r5
    5374:	d906      	bls.n	5384 <__aeabi_dmul+0x238>
    5376:	468a      	mov	sl, r1
    5378:	2180      	movs	r1, #128	; 0x80
    537a:	0249      	lsls	r1, r1, #9
    537c:	4689      	mov	r9, r1
    537e:	44ca      	add	sl, r9
    5380:	4651      	mov	r1, sl
    5382:	9103      	str	r1, [sp, #12]
    5384:	0c29      	lsrs	r1, r5, #16
    5386:	9104      	str	r1, [sp, #16]
    5388:	4641      	mov	r1, r8
    538a:	0409      	lsls	r1, r1, #16
    538c:	042d      	lsls	r5, r5, #16
    538e:	0c09      	lsrs	r1, r1, #16
    5390:	4688      	mov	r8, r1
    5392:	0029      	movs	r1, r5
    5394:	0c25      	lsrs	r5, r4, #16
    5396:	0424      	lsls	r4, r4, #16
    5398:	4441      	add	r1, r8
    539a:	0c24      	lsrs	r4, r4, #16
    539c:	9105      	str	r1, [sp, #20]
    539e:	0021      	movs	r1, r4
    53a0:	4341      	muls	r1, r0
    53a2:	4688      	mov	r8, r1
    53a4:	0021      	movs	r1, r4
    53a6:	4379      	muls	r1, r7
    53a8:	468a      	mov	sl, r1
    53aa:	4368      	muls	r0, r5
    53ac:	4641      	mov	r1, r8
    53ae:	4450      	add	r0, sl
    53b0:	4681      	mov	r9, r0
    53b2:	0c08      	lsrs	r0, r1, #16
    53b4:	4448      	add	r0, r9
    53b6:	436f      	muls	r7, r5
    53b8:	4582      	cmp	sl, r0
    53ba:	d903      	bls.n	53c4 <__aeabi_dmul+0x278>
    53bc:	2180      	movs	r1, #128	; 0x80
    53be:	0249      	lsls	r1, r1, #9
    53c0:	4689      	mov	r9, r1
    53c2:	444f      	add	r7, r9
    53c4:	0c01      	lsrs	r1, r0, #16
    53c6:	4689      	mov	r9, r1
    53c8:	0039      	movs	r1, r7
    53ca:	4449      	add	r1, r9
    53cc:	9102      	str	r1, [sp, #8]
    53ce:	4641      	mov	r1, r8
    53d0:	040f      	lsls	r7, r1, #16
    53d2:	9904      	ldr	r1, [sp, #16]
    53d4:	0c3f      	lsrs	r7, r7, #16
    53d6:	4688      	mov	r8, r1
    53d8:	0400      	lsls	r0, r0, #16
    53da:	19c0      	adds	r0, r0, r7
    53dc:	4480      	add	r8, r0
    53de:	4641      	mov	r1, r8
    53e0:	9104      	str	r1, [sp, #16]
    53e2:	4659      	mov	r1, fp
    53e4:	0c0f      	lsrs	r7, r1, #16
    53e6:	0409      	lsls	r1, r1, #16
    53e8:	0c09      	lsrs	r1, r1, #16
    53ea:	4688      	mov	r8, r1
    53ec:	4359      	muls	r1, r3
    53ee:	468a      	mov	sl, r1
    53f0:	0039      	movs	r1, r7
    53f2:	4351      	muls	r1, r2
    53f4:	4689      	mov	r9, r1
    53f6:	4641      	mov	r1, r8
    53f8:	434a      	muls	r2, r1
    53fa:	4651      	mov	r1, sl
    53fc:	0c09      	lsrs	r1, r1, #16
    53fe:	468b      	mov	fp, r1
    5400:	437b      	muls	r3, r7
    5402:	18d2      	adds	r2, r2, r3
    5404:	445a      	add	r2, fp
    5406:	4293      	cmp	r3, r2
    5408:	d903      	bls.n	5412 <__aeabi_dmul+0x2c6>
    540a:	2380      	movs	r3, #128	; 0x80
    540c:	025b      	lsls	r3, r3, #9
    540e:	469b      	mov	fp, r3
    5410:	44d9      	add	r9, fp
    5412:	4651      	mov	r1, sl
    5414:	0409      	lsls	r1, r1, #16
    5416:	0c09      	lsrs	r1, r1, #16
    5418:	468a      	mov	sl, r1
    541a:	4641      	mov	r1, r8
    541c:	4361      	muls	r1, r4
    541e:	437c      	muls	r4, r7
    5420:	0c13      	lsrs	r3, r2, #16
    5422:	0412      	lsls	r2, r2, #16
    5424:	444b      	add	r3, r9
    5426:	4452      	add	r2, sl
    5428:	46a1      	mov	r9, r4
    542a:	468a      	mov	sl, r1
    542c:	003c      	movs	r4, r7
    542e:	4641      	mov	r1, r8
    5430:	436c      	muls	r4, r5
    5432:	434d      	muls	r5, r1
    5434:	4651      	mov	r1, sl
    5436:	444d      	add	r5, r9
    5438:	0c0f      	lsrs	r7, r1, #16
    543a:	197d      	adds	r5, r7, r5
    543c:	45a9      	cmp	r9, r5
    543e:	d903      	bls.n	5448 <__aeabi_dmul+0x2fc>
    5440:	2180      	movs	r1, #128	; 0x80
    5442:	0249      	lsls	r1, r1, #9
    5444:	4688      	mov	r8, r1
    5446:	4444      	add	r4, r8
    5448:	9f04      	ldr	r7, [sp, #16]
    544a:	9903      	ldr	r1, [sp, #12]
    544c:	46b8      	mov	r8, r7
    544e:	4441      	add	r1, r8
    5450:	468b      	mov	fp, r1
    5452:	4583      	cmp	fp, r0
    5454:	4180      	sbcs	r0, r0
    5456:	4241      	negs	r1, r0
    5458:	4688      	mov	r8, r1
    545a:	4651      	mov	r1, sl
    545c:	0408      	lsls	r0, r1, #16
    545e:	042f      	lsls	r7, r5, #16
    5460:	0c00      	lsrs	r0, r0, #16
    5462:	183f      	adds	r7, r7, r0
    5464:	4658      	mov	r0, fp
    5466:	9902      	ldr	r1, [sp, #8]
    5468:	1810      	adds	r0, r2, r0
    546a:	4689      	mov	r9, r1
    546c:	4290      	cmp	r0, r2
    546e:	4192      	sbcs	r2, r2
    5470:	444f      	add	r7, r9
    5472:	46ba      	mov	sl, r7
    5474:	4252      	negs	r2, r2
    5476:	4699      	mov	r9, r3
    5478:	4693      	mov	fp, r2
    547a:	44c2      	add	sl, r8
    547c:	44d1      	add	r9, sl
    547e:	44cb      	add	fp, r9
    5480:	428f      	cmp	r7, r1
    5482:	41bf      	sbcs	r7, r7
    5484:	45c2      	cmp	sl, r8
    5486:	4189      	sbcs	r1, r1
    5488:	4599      	cmp	r9, r3
    548a:	419b      	sbcs	r3, r3
    548c:	4593      	cmp	fp, r2
    548e:	4192      	sbcs	r2, r2
    5490:	427f      	negs	r7, r7
    5492:	4249      	negs	r1, r1
    5494:	0c2d      	lsrs	r5, r5, #16
    5496:	4252      	negs	r2, r2
    5498:	430f      	orrs	r7, r1
    549a:	425b      	negs	r3, r3
    549c:	4313      	orrs	r3, r2
    549e:	197f      	adds	r7, r7, r5
    54a0:	18ff      	adds	r7, r7, r3
    54a2:	465b      	mov	r3, fp
    54a4:	193c      	adds	r4, r7, r4
    54a6:	0ddb      	lsrs	r3, r3, #23
    54a8:	9a05      	ldr	r2, [sp, #20]
    54aa:	0264      	lsls	r4, r4, #9
    54ac:	431c      	orrs	r4, r3
    54ae:	0243      	lsls	r3, r0, #9
    54b0:	4313      	orrs	r3, r2
    54b2:	1e5d      	subs	r5, r3, #1
    54b4:	41ab      	sbcs	r3, r5
    54b6:	465a      	mov	r2, fp
    54b8:	0dc0      	lsrs	r0, r0, #23
    54ba:	4303      	orrs	r3, r0
    54bc:	0252      	lsls	r2, r2, #9
    54be:	4313      	orrs	r3, r2
    54c0:	01e2      	lsls	r2, r4, #7
    54c2:	d556      	bpl.n	5572 <__aeabi_dmul+0x426>
    54c4:	2001      	movs	r0, #1
    54c6:	085a      	lsrs	r2, r3, #1
    54c8:	4003      	ands	r3, r0
    54ca:	4313      	orrs	r3, r2
    54cc:	07e2      	lsls	r2, r4, #31
    54ce:	4313      	orrs	r3, r2
    54d0:	0864      	lsrs	r4, r4, #1
    54d2:	485a      	ldr	r0, [pc, #360]	; (563c <__aeabi_dmul+0x4f0>)
    54d4:	4460      	add	r0, ip
    54d6:	2800      	cmp	r0, #0
    54d8:	dd4d      	ble.n	5576 <__aeabi_dmul+0x42a>
    54da:	075a      	lsls	r2, r3, #29
    54dc:	d009      	beq.n	54f2 <__aeabi_dmul+0x3a6>
    54de:	220f      	movs	r2, #15
    54e0:	401a      	ands	r2, r3
    54e2:	2a04      	cmp	r2, #4
    54e4:	d005      	beq.n	54f2 <__aeabi_dmul+0x3a6>
    54e6:	1d1a      	adds	r2, r3, #4
    54e8:	429a      	cmp	r2, r3
    54ea:	419b      	sbcs	r3, r3
    54ec:	425b      	negs	r3, r3
    54ee:	18e4      	adds	r4, r4, r3
    54f0:	0013      	movs	r3, r2
    54f2:	01e2      	lsls	r2, r4, #7
    54f4:	d504      	bpl.n	5500 <__aeabi_dmul+0x3b4>
    54f6:	2080      	movs	r0, #128	; 0x80
    54f8:	4a51      	ldr	r2, [pc, #324]	; (5640 <__aeabi_dmul+0x4f4>)
    54fa:	00c0      	lsls	r0, r0, #3
    54fc:	4014      	ands	r4, r2
    54fe:	4460      	add	r0, ip
    5500:	4a50      	ldr	r2, [pc, #320]	; (5644 <__aeabi_dmul+0x4f8>)
    5502:	4290      	cmp	r0, r2
    5504:	dd00      	ble.n	5508 <__aeabi_dmul+0x3bc>
    5506:	e6e3      	b.n	52d0 <__aeabi_dmul+0x184>
    5508:	2501      	movs	r5, #1
    550a:	08db      	lsrs	r3, r3, #3
    550c:	0762      	lsls	r2, r4, #29
    550e:	431a      	orrs	r2, r3
    5510:	0264      	lsls	r4, r4, #9
    5512:	9b01      	ldr	r3, [sp, #4]
    5514:	4691      	mov	r9, r2
    5516:	0b22      	lsrs	r2, r4, #12
    5518:	0544      	lsls	r4, r0, #21
    551a:	0d64      	lsrs	r4, r4, #21
    551c:	401d      	ands	r5, r3
    551e:	e67c      	b.n	521a <__aeabi_dmul+0xce>
    5520:	2280      	movs	r2, #128	; 0x80
    5522:	4659      	mov	r1, fp
    5524:	0312      	lsls	r2, r2, #12
    5526:	4211      	tst	r1, r2
    5528:	d008      	beq.n	553c <__aeabi_dmul+0x3f0>
    552a:	4214      	tst	r4, r2
    552c:	d106      	bne.n	553c <__aeabi_dmul+0x3f0>
    552e:	4322      	orrs	r2, r4
    5530:	0312      	lsls	r2, r2, #12
    5532:	0b12      	lsrs	r2, r2, #12
    5534:	4645      	mov	r5, r8
    5536:	4699      	mov	r9, r3
    5538:	4c43      	ldr	r4, [pc, #268]	; (5648 <__aeabi_dmul+0x4fc>)
    553a:	e66e      	b.n	521a <__aeabi_dmul+0xce>
    553c:	465b      	mov	r3, fp
    553e:	431a      	orrs	r2, r3
    5540:	0312      	lsls	r2, r2, #12
    5542:	0b12      	lsrs	r2, r2, #12
    5544:	4c40      	ldr	r4, [pc, #256]	; (5648 <__aeabi_dmul+0x4fc>)
    5546:	e668      	b.n	521a <__aeabi_dmul+0xce>
    5548:	0003      	movs	r3, r0
    554a:	4654      	mov	r4, sl
    554c:	3b28      	subs	r3, #40	; 0x28
    554e:	409c      	lsls	r4, r3
    5550:	2300      	movs	r3, #0
    5552:	e6b9      	b.n	52c8 <__aeabi_dmul+0x17c>
    5554:	f000 fc26 	bl	5da4 <__clzsi2>
    5558:	3020      	adds	r0, #32
    555a:	e6a6      	b.n	52aa <__aeabi_dmul+0x15e>
    555c:	0003      	movs	r3, r0
    555e:	3b28      	subs	r3, #40	; 0x28
    5560:	409f      	lsls	r7, r3
    5562:	2300      	movs	r3, #0
    5564:	46bb      	mov	fp, r7
    5566:	4699      	mov	r9, r3
    5568:	e68a      	b.n	5280 <__aeabi_dmul+0x134>
    556a:	f000 fc1b 	bl	5da4 <__clzsi2>
    556e:	3020      	adds	r0, #32
    5570:	e674      	b.n	525c <__aeabi_dmul+0x110>
    5572:	46b4      	mov	ip, r6
    5574:	e7ad      	b.n	54d2 <__aeabi_dmul+0x386>
    5576:	2501      	movs	r5, #1
    5578:	1a2a      	subs	r2, r5, r0
    557a:	2a38      	cmp	r2, #56	; 0x38
    557c:	dd06      	ble.n	558c <__aeabi_dmul+0x440>
    557e:	9b01      	ldr	r3, [sp, #4]
    5580:	2400      	movs	r4, #0
    5582:	401d      	ands	r5, r3
    5584:	2300      	movs	r3, #0
    5586:	2200      	movs	r2, #0
    5588:	4699      	mov	r9, r3
    558a:	e646      	b.n	521a <__aeabi_dmul+0xce>
    558c:	2a1f      	cmp	r2, #31
    558e:	dc21      	bgt.n	55d4 <__aeabi_dmul+0x488>
    5590:	2520      	movs	r5, #32
    5592:	0020      	movs	r0, r4
    5594:	1aad      	subs	r5, r5, r2
    5596:	001e      	movs	r6, r3
    5598:	40ab      	lsls	r3, r5
    559a:	40a8      	lsls	r0, r5
    559c:	40d6      	lsrs	r6, r2
    559e:	1e5d      	subs	r5, r3, #1
    55a0:	41ab      	sbcs	r3, r5
    55a2:	4330      	orrs	r0, r6
    55a4:	4318      	orrs	r0, r3
    55a6:	40d4      	lsrs	r4, r2
    55a8:	0743      	lsls	r3, r0, #29
    55aa:	d009      	beq.n	55c0 <__aeabi_dmul+0x474>
    55ac:	230f      	movs	r3, #15
    55ae:	4003      	ands	r3, r0
    55b0:	2b04      	cmp	r3, #4
    55b2:	d005      	beq.n	55c0 <__aeabi_dmul+0x474>
    55b4:	0003      	movs	r3, r0
    55b6:	1d18      	adds	r0, r3, #4
    55b8:	4298      	cmp	r0, r3
    55ba:	419b      	sbcs	r3, r3
    55bc:	425b      	negs	r3, r3
    55be:	18e4      	adds	r4, r4, r3
    55c0:	0223      	lsls	r3, r4, #8
    55c2:	d521      	bpl.n	5608 <__aeabi_dmul+0x4bc>
    55c4:	2501      	movs	r5, #1
    55c6:	9b01      	ldr	r3, [sp, #4]
    55c8:	2401      	movs	r4, #1
    55ca:	401d      	ands	r5, r3
    55cc:	2300      	movs	r3, #0
    55ce:	2200      	movs	r2, #0
    55d0:	4699      	mov	r9, r3
    55d2:	e622      	b.n	521a <__aeabi_dmul+0xce>
    55d4:	251f      	movs	r5, #31
    55d6:	0021      	movs	r1, r4
    55d8:	426d      	negs	r5, r5
    55da:	1a28      	subs	r0, r5, r0
    55dc:	40c1      	lsrs	r1, r0
    55de:	0008      	movs	r0, r1
    55e0:	2a20      	cmp	r2, #32
    55e2:	d01d      	beq.n	5620 <__aeabi_dmul+0x4d4>
    55e4:	355f      	adds	r5, #95	; 0x5f
    55e6:	1aaa      	subs	r2, r5, r2
    55e8:	4094      	lsls	r4, r2
    55ea:	4323      	orrs	r3, r4
    55ec:	1e5c      	subs	r4, r3, #1
    55ee:	41a3      	sbcs	r3, r4
    55f0:	2507      	movs	r5, #7
    55f2:	4303      	orrs	r3, r0
    55f4:	401d      	ands	r5, r3
    55f6:	2200      	movs	r2, #0
    55f8:	2d00      	cmp	r5, #0
    55fa:	d009      	beq.n	5610 <__aeabi_dmul+0x4c4>
    55fc:	220f      	movs	r2, #15
    55fe:	2400      	movs	r4, #0
    5600:	401a      	ands	r2, r3
    5602:	0018      	movs	r0, r3
    5604:	2a04      	cmp	r2, #4
    5606:	d1d6      	bne.n	55b6 <__aeabi_dmul+0x46a>
    5608:	0003      	movs	r3, r0
    560a:	0765      	lsls	r5, r4, #29
    560c:	0264      	lsls	r4, r4, #9
    560e:	0b22      	lsrs	r2, r4, #12
    5610:	08db      	lsrs	r3, r3, #3
    5612:	432b      	orrs	r3, r5
    5614:	2501      	movs	r5, #1
    5616:	4699      	mov	r9, r3
    5618:	9b01      	ldr	r3, [sp, #4]
    561a:	2400      	movs	r4, #0
    561c:	401d      	ands	r5, r3
    561e:	e5fc      	b.n	521a <__aeabi_dmul+0xce>
    5620:	2400      	movs	r4, #0
    5622:	e7e2      	b.n	55ea <__aeabi_dmul+0x49e>
    5624:	2280      	movs	r2, #128	; 0x80
    5626:	2501      	movs	r5, #1
    5628:	0312      	lsls	r2, r2, #12
    562a:	4322      	orrs	r2, r4
    562c:	9901      	ldr	r1, [sp, #4]
    562e:	0312      	lsls	r2, r2, #12
    5630:	0b12      	lsrs	r2, r2, #12
    5632:	400d      	ands	r5, r1
    5634:	4699      	mov	r9, r3
    5636:	4c04      	ldr	r4, [pc, #16]	; (5648 <__aeabi_dmul+0x4fc>)
    5638:	e5ef      	b.n	521a <__aeabi_dmul+0xce>
    563a:	46c0      	nop			; (mov r8, r8)
    563c:	000003ff 	.word	0x000003ff
    5640:	feffffff 	.word	0xfeffffff
    5644:	000007fe 	.word	0x000007fe
    5648:	000007ff 	.word	0x000007ff

0000564c <__aeabi_dsub>:
    564c:	b5f0      	push	{r4, r5, r6, r7, lr}
    564e:	4646      	mov	r6, r8
    5650:	46d6      	mov	lr, sl
    5652:	464f      	mov	r7, r9
    5654:	030c      	lsls	r4, r1, #12
    5656:	b5c0      	push	{r6, r7, lr}
    5658:	0fcd      	lsrs	r5, r1, #31
    565a:	004e      	lsls	r6, r1, #1
    565c:	0a61      	lsrs	r1, r4, #9
    565e:	0f44      	lsrs	r4, r0, #29
    5660:	430c      	orrs	r4, r1
    5662:	00c1      	lsls	r1, r0, #3
    5664:	0058      	lsls	r0, r3, #1
    5666:	0d40      	lsrs	r0, r0, #21
    5668:	4684      	mov	ip, r0
    566a:	468a      	mov	sl, r1
    566c:	000f      	movs	r7, r1
    566e:	0319      	lsls	r1, r3, #12
    5670:	0f50      	lsrs	r0, r2, #29
    5672:	0a49      	lsrs	r1, r1, #9
    5674:	4301      	orrs	r1, r0
    5676:	48c6      	ldr	r0, [pc, #792]	; (5990 <__aeabi_dsub+0x344>)
    5678:	0d76      	lsrs	r6, r6, #21
    567a:	46a8      	mov	r8, r5
    567c:	0fdb      	lsrs	r3, r3, #31
    567e:	00d2      	lsls	r2, r2, #3
    5680:	4584      	cmp	ip, r0
    5682:	d100      	bne.n	5686 <__aeabi_dsub+0x3a>
    5684:	e0d8      	b.n	5838 <__aeabi_dsub+0x1ec>
    5686:	2001      	movs	r0, #1
    5688:	4043      	eors	r3, r0
    568a:	42ab      	cmp	r3, r5
    568c:	d100      	bne.n	5690 <__aeabi_dsub+0x44>
    568e:	e0a6      	b.n	57de <__aeabi_dsub+0x192>
    5690:	4660      	mov	r0, ip
    5692:	1a35      	subs	r5, r6, r0
    5694:	2d00      	cmp	r5, #0
    5696:	dc00      	bgt.n	569a <__aeabi_dsub+0x4e>
    5698:	e105      	b.n	58a6 <__aeabi_dsub+0x25a>
    569a:	2800      	cmp	r0, #0
    569c:	d110      	bne.n	56c0 <__aeabi_dsub+0x74>
    569e:	000b      	movs	r3, r1
    56a0:	4313      	orrs	r3, r2
    56a2:	d100      	bne.n	56a6 <__aeabi_dsub+0x5a>
    56a4:	e0d7      	b.n	5856 <__aeabi_dsub+0x20a>
    56a6:	1e6b      	subs	r3, r5, #1
    56a8:	2b00      	cmp	r3, #0
    56aa:	d000      	beq.n	56ae <__aeabi_dsub+0x62>
    56ac:	e14b      	b.n	5946 <__aeabi_dsub+0x2fa>
    56ae:	4653      	mov	r3, sl
    56b0:	1a9f      	subs	r7, r3, r2
    56b2:	45ba      	cmp	sl, r7
    56b4:	4180      	sbcs	r0, r0
    56b6:	1a64      	subs	r4, r4, r1
    56b8:	4240      	negs	r0, r0
    56ba:	1a24      	subs	r4, r4, r0
    56bc:	2601      	movs	r6, #1
    56be:	e01e      	b.n	56fe <__aeabi_dsub+0xb2>
    56c0:	4bb3      	ldr	r3, [pc, #716]	; (5990 <__aeabi_dsub+0x344>)
    56c2:	429e      	cmp	r6, r3
    56c4:	d048      	beq.n	5758 <__aeabi_dsub+0x10c>
    56c6:	2380      	movs	r3, #128	; 0x80
    56c8:	041b      	lsls	r3, r3, #16
    56ca:	4319      	orrs	r1, r3
    56cc:	2d38      	cmp	r5, #56	; 0x38
    56ce:	dd00      	ble.n	56d2 <__aeabi_dsub+0x86>
    56d0:	e119      	b.n	5906 <__aeabi_dsub+0x2ba>
    56d2:	2d1f      	cmp	r5, #31
    56d4:	dd00      	ble.n	56d8 <__aeabi_dsub+0x8c>
    56d6:	e14c      	b.n	5972 <__aeabi_dsub+0x326>
    56d8:	2320      	movs	r3, #32
    56da:	000f      	movs	r7, r1
    56dc:	1b5b      	subs	r3, r3, r5
    56de:	0010      	movs	r0, r2
    56e0:	409a      	lsls	r2, r3
    56e2:	409f      	lsls	r7, r3
    56e4:	40e8      	lsrs	r0, r5
    56e6:	1e53      	subs	r3, r2, #1
    56e8:	419a      	sbcs	r2, r3
    56ea:	40e9      	lsrs	r1, r5
    56ec:	4307      	orrs	r7, r0
    56ee:	4317      	orrs	r7, r2
    56f0:	4653      	mov	r3, sl
    56f2:	1bdf      	subs	r7, r3, r7
    56f4:	1a61      	subs	r1, r4, r1
    56f6:	45ba      	cmp	sl, r7
    56f8:	41a4      	sbcs	r4, r4
    56fa:	4264      	negs	r4, r4
    56fc:	1b0c      	subs	r4, r1, r4
    56fe:	0223      	lsls	r3, r4, #8
    5700:	d400      	bmi.n	5704 <__aeabi_dsub+0xb8>
    5702:	e0c5      	b.n	5890 <__aeabi_dsub+0x244>
    5704:	0264      	lsls	r4, r4, #9
    5706:	0a65      	lsrs	r5, r4, #9
    5708:	2d00      	cmp	r5, #0
    570a:	d100      	bne.n	570e <__aeabi_dsub+0xc2>
    570c:	e0f6      	b.n	58fc <__aeabi_dsub+0x2b0>
    570e:	0028      	movs	r0, r5
    5710:	f000 fb48 	bl	5da4 <__clzsi2>
    5714:	0003      	movs	r3, r0
    5716:	3b08      	subs	r3, #8
    5718:	2b1f      	cmp	r3, #31
    571a:	dd00      	ble.n	571e <__aeabi_dsub+0xd2>
    571c:	e0e9      	b.n	58f2 <__aeabi_dsub+0x2a6>
    571e:	2220      	movs	r2, #32
    5720:	003c      	movs	r4, r7
    5722:	1ad2      	subs	r2, r2, r3
    5724:	409d      	lsls	r5, r3
    5726:	40d4      	lsrs	r4, r2
    5728:	409f      	lsls	r7, r3
    572a:	4325      	orrs	r5, r4
    572c:	429e      	cmp	r6, r3
    572e:	dd00      	ble.n	5732 <__aeabi_dsub+0xe6>
    5730:	e0db      	b.n	58ea <__aeabi_dsub+0x29e>
    5732:	1b9e      	subs	r6, r3, r6
    5734:	1c73      	adds	r3, r6, #1
    5736:	2b1f      	cmp	r3, #31
    5738:	dd00      	ble.n	573c <__aeabi_dsub+0xf0>
    573a:	e10a      	b.n	5952 <__aeabi_dsub+0x306>
    573c:	2220      	movs	r2, #32
    573e:	0038      	movs	r0, r7
    5740:	1ad2      	subs	r2, r2, r3
    5742:	0029      	movs	r1, r5
    5744:	4097      	lsls	r7, r2
    5746:	002c      	movs	r4, r5
    5748:	4091      	lsls	r1, r2
    574a:	40d8      	lsrs	r0, r3
    574c:	1e7a      	subs	r2, r7, #1
    574e:	4197      	sbcs	r7, r2
    5750:	40dc      	lsrs	r4, r3
    5752:	2600      	movs	r6, #0
    5754:	4301      	orrs	r1, r0
    5756:	430f      	orrs	r7, r1
    5758:	077b      	lsls	r3, r7, #29
    575a:	d009      	beq.n	5770 <__aeabi_dsub+0x124>
    575c:	230f      	movs	r3, #15
    575e:	403b      	ands	r3, r7
    5760:	2b04      	cmp	r3, #4
    5762:	d005      	beq.n	5770 <__aeabi_dsub+0x124>
    5764:	1d3b      	adds	r3, r7, #4
    5766:	42bb      	cmp	r3, r7
    5768:	41bf      	sbcs	r7, r7
    576a:	427f      	negs	r7, r7
    576c:	19e4      	adds	r4, r4, r7
    576e:	001f      	movs	r7, r3
    5770:	0223      	lsls	r3, r4, #8
    5772:	d525      	bpl.n	57c0 <__aeabi_dsub+0x174>
    5774:	4b86      	ldr	r3, [pc, #536]	; (5990 <__aeabi_dsub+0x344>)
    5776:	3601      	adds	r6, #1
    5778:	429e      	cmp	r6, r3
    577a:	d100      	bne.n	577e <__aeabi_dsub+0x132>
    577c:	e0af      	b.n	58de <__aeabi_dsub+0x292>
    577e:	4b85      	ldr	r3, [pc, #532]	; (5994 <__aeabi_dsub+0x348>)
    5780:	2501      	movs	r5, #1
    5782:	401c      	ands	r4, r3
    5784:	4643      	mov	r3, r8
    5786:	0762      	lsls	r2, r4, #29
    5788:	08ff      	lsrs	r7, r7, #3
    578a:	0264      	lsls	r4, r4, #9
    578c:	0576      	lsls	r6, r6, #21
    578e:	4317      	orrs	r7, r2
    5790:	0b24      	lsrs	r4, r4, #12
    5792:	0d76      	lsrs	r6, r6, #21
    5794:	401d      	ands	r5, r3
    5796:	2100      	movs	r1, #0
    5798:	0324      	lsls	r4, r4, #12
    579a:	0b23      	lsrs	r3, r4, #12
    579c:	0d0c      	lsrs	r4, r1, #20
    579e:	4a7e      	ldr	r2, [pc, #504]	; (5998 <__aeabi_dsub+0x34c>)
    57a0:	0524      	lsls	r4, r4, #20
    57a2:	431c      	orrs	r4, r3
    57a4:	4014      	ands	r4, r2
    57a6:	0533      	lsls	r3, r6, #20
    57a8:	4323      	orrs	r3, r4
    57aa:	005b      	lsls	r3, r3, #1
    57ac:	07ed      	lsls	r5, r5, #31
    57ae:	085b      	lsrs	r3, r3, #1
    57b0:	432b      	orrs	r3, r5
    57b2:	0038      	movs	r0, r7
    57b4:	0019      	movs	r1, r3
    57b6:	bc1c      	pop	{r2, r3, r4}
    57b8:	4690      	mov	r8, r2
    57ba:	4699      	mov	r9, r3
    57bc:	46a2      	mov	sl, r4
    57be:	bdf0      	pop	{r4, r5, r6, r7, pc}
    57c0:	2501      	movs	r5, #1
    57c2:	4643      	mov	r3, r8
    57c4:	0762      	lsls	r2, r4, #29
    57c6:	08ff      	lsrs	r7, r7, #3
    57c8:	4317      	orrs	r7, r2
    57ca:	08e4      	lsrs	r4, r4, #3
    57cc:	401d      	ands	r5, r3
    57ce:	4b70      	ldr	r3, [pc, #448]	; (5990 <__aeabi_dsub+0x344>)
    57d0:	429e      	cmp	r6, r3
    57d2:	d036      	beq.n	5842 <__aeabi_dsub+0x1f6>
    57d4:	0324      	lsls	r4, r4, #12
    57d6:	0576      	lsls	r6, r6, #21
    57d8:	0b24      	lsrs	r4, r4, #12
    57da:	0d76      	lsrs	r6, r6, #21
    57dc:	e7db      	b.n	5796 <__aeabi_dsub+0x14a>
    57de:	4663      	mov	r3, ip
    57e0:	1af3      	subs	r3, r6, r3
    57e2:	2b00      	cmp	r3, #0
    57e4:	dc00      	bgt.n	57e8 <__aeabi_dsub+0x19c>
    57e6:	e094      	b.n	5912 <__aeabi_dsub+0x2c6>
    57e8:	4660      	mov	r0, ip
    57ea:	2800      	cmp	r0, #0
    57ec:	d035      	beq.n	585a <__aeabi_dsub+0x20e>
    57ee:	4868      	ldr	r0, [pc, #416]	; (5990 <__aeabi_dsub+0x344>)
    57f0:	4286      	cmp	r6, r0
    57f2:	d0b1      	beq.n	5758 <__aeabi_dsub+0x10c>
    57f4:	2780      	movs	r7, #128	; 0x80
    57f6:	043f      	lsls	r7, r7, #16
    57f8:	4339      	orrs	r1, r7
    57fa:	2b38      	cmp	r3, #56	; 0x38
    57fc:	dc00      	bgt.n	5800 <__aeabi_dsub+0x1b4>
    57fe:	e0fd      	b.n	59fc <__aeabi_dsub+0x3b0>
    5800:	430a      	orrs	r2, r1
    5802:	0017      	movs	r7, r2
    5804:	2100      	movs	r1, #0
    5806:	1e7a      	subs	r2, r7, #1
    5808:	4197      	sbcs	r7, r2
    580a:	4457      	add	r7, sl
    580c:	4557      	cmp	r7, sl
    580e:	4180      	sbcs	r0, r0
    5810:	1909      	adds	r1, r1, r4
    5812:	4244      	negs	r4, r0
    5814:	190c      	adds	r4, r1, r4
    5816:	0223      	lsls	r3, r4, #8
    5818:	d53a      	bpl.n	5890 <__aeabi_dsub+0x244>
    581a:	4b5d      	ldr	r3, [pc, #372]	; (5990 <__aeabi_dsub+0x344>)
    581c:	3601      	adds	r6, #1
    581e:	429e      	cmp	r6, r3
    5820:	d100      	bne.n	5824 <__aeabi_dsub+0x1d8>
    5822:	e14b      	b.n	5abc <__aeabi_dsub+0x470>
    5824:	2201      	movs	r2, #1
    5826:	4b5b      	ldr	r3, [pc, #364]	; (5994 <__aeabi_dsub+0x348>)
    5828:	401c      	ands	r4, r3
    582a:	087b      	lsrs	r3, r7, #1
    582c:	4017      	ands	r7, r2
    582e:	431f      	orrs	r7, r3
    5830:	07e2      	lsls	r2, r4, #31
    5832:	4317      	orrs	r7, r2
    5834:	0864      	lsrs	r4, r4, #1
    5836:	e78f      	b.n	5758 <__aeabi_dsub+0x10c>
    5838:	0008      	movs	r0, r1
    583a:	4310      	orrs	r0, r2
    583c:	d000      	beq.n	5840 <__aeabi_dsub+0x1f4>
    583e:	e724      	b.n	568a <__aeabi_dsub+0x3e>
    5840:	e721      	b.n	5686 <__aeabi_dsub+0x3a>
    5842:	0023      	movs	r3, r4
    5844:	433b      	orrs	r3, r7
    5846:	d100      	bne.n	584a <__aeabi_dsub+0x1fe>
    5848:	e1b9      	b.n	5bbe <__aeabi_dsub+0x572>
    584a:	2280      	movs	r2, #128	; 0x80
    584c:	0312      	lsls	r2, r2, #12
    584e:	4314      	orrs	r4, r2
    5850:	0324      	lsls	r4, r4, #12
    5852:	0b24      	lsrs	r4, r4, #12
    5854:	e79f      	b.n	5796 <__aeabi_dsub+0x14a>
    5856:	002e      	movs	r6, r5
    5858:	e77e      	b.n	5758 <__aeabi_dsub+0x10c>
    585a:	0008      	movs	r0, r1
    585c:	4310      	orrs	r0, r2
    585e:	d100      	bne.n	5862 <__aeabi_dsub+0x216>
    5860:	e0ca      	b.n	59f8 <__aeabi_dsub+0x3ac>
    5862:	1e58      	subs	r0, r3, #1
    5864:	4684      	mov	ip, r0
    5866:	2800      	cmp	r0, #0
    5868:	d000      	beq.n	586c <__aeabi_dsub+0x220>
    586a:	e0e7      	b.n	5a3c <__aeabi_dsub+0x3f0>
    586c:	4452      	add	r2, sl
    586e:	4552      	cmp	r2, sl
    5870:	4180      	sbcs	r0, r0
    5872:	1864      	adds	r4, r4, r1
    5874:	4240      	negs	r0, r0
    5876:	1824      	adds	r4, r4, r0
    5878:	0017      	movs	r7, r2
    587a:	2601      	movs	r6, #1
    587c:	0223      	lsls	r3, r4, #8
    587e:	d507      	bpl.n	5890 <__aeabi_dsub+0x244>
    5880:	2602      	movs	r6, #2
    5882:	e7cf      	b.n	5824 <__aeabi_dsub+0x1d8>
    5884:	4664      	mov	r4, ip
    5886:	432c      	orrs	r4, r5
    5888:	d100      	bne.n	588c <__aeabi_dsub+0x240>
    588a:	e1b3      	b.n	5bf4 <__aeabi_dsub+0x5a8>
    588c:	002c      	movs	r4, r5
    588e:	4667      	mov	r7, ip
    5890:	077b      	lsls	r3, r7, #29
    5892:	d000      	beq.n	5896 <__aeabi_dsub+0x24a>
    5894:	e762      	b.n	575c <__aeabi_dsub+0x110>
    5896:	0763      	lsls	r3, r4, #29
    5898:	08ff      	lsrs	r7, r7, #3
    589a:	431f      	orrs	r7, r3
    589c:	2501      	movs	r5, #1
    589e:	4643      	mov	r3, r8
    58a0:	08e4      	lsrs	r4, r4, #3
    58a2:	401d      	ands	r5, r3
    58a4:	e793      	b.n	57ce <__aeabi_dsub+0x182>
    58a6:	2d00      	cmp	r5, #0
    58a8:	d178      	bne.n	599c <__aeabi_dsub+0x350>
    58aa:	1c75      	adds	r5, r6, #1
    58ac:	056d      	lsls	r5, r5, #21
    58ae:	0d6d      	lsrs	r5, r5, #21
    58b0:	2d01      	cmp	r5, #1
    58b2:	dc00      	bgt.n	58b6 <__aeabi_dsub+0x26a>
    58b4:	e0f2      	b.n	5a9c <__aeabi_dsub+0x450>
    58b6:	4650      	mov	r0, sl
    58b8:	1a80      	subs	r0, r0, r2
    58ba:	4582      	cmp	sl, r0
    58bc:	41bf      	sbcs	r7, r7
    58be:	1a65      	subs	r5, r4, r1
    58c0:	427f      	negs	r7, r7
    58c2:	1bed      	subs	r5, r5, r7
    58c4:	4684      	mov	ip, r0
    58c6:	0228      	lsls	r0, r5, #8
    58c8:	d400      	bmi.n	58cc <__aeabi_dsub+0x280>
    58ca:	e08c      	b.n	59e6 <__aeabi_dsub+0x39a>
    58cc:	4650      	mov	r0, sl
    58ce:	1a17      	subs	r7, r2, r0
    58d0:	42ba      	cmp	r2, r7
    58d2:	4192      	sbcs	r2, r2
    58d4:	1b0c      	subs	r4, r1, r4
    58d6:	4255      	negs	r5, r2
    58d8:	1b65      	subs	r5, r4, r5
    58da:	4698      	mov	r8, r3
    58dc:	e714      	b.n	5708 <__aeabi_dsub+0xbc>
    58de:	2501      	movs	r5, #1
    58e0:	4643      	mov	r3, r8
    58e2:	2400      	movs	r4, #0
    58e4:	401d      	ands	r5, r3
    58e6:	2700      	movs	r7, #0
    58e8:	e755      	b.n	5796 <__aeabi_dsub+0x14a>
    58ea:	4c2a      	ldr	r4, [pc, #168]	; (5994 <__aeabi_dsub+0x348>)
    58ec:	1af6      	subs	r6, r6, r3
    58ee:	402c      	ands	r4, r5
    58f0:	e732      	b.n	5758 <__aeabi_dsub+0x10c>
    58f2:	003d      	movs	r5, r7
    58f4:	3828      	subs	r0, #40	; 0x28
    58f6:	4085      	lsls	r5, r0
    58f8:	2700      	movs	r7, #0
    58fa:	e717      	b.n	572c <__aeabi_dsub+0xe0>
    58fc:	0038      	movs	r0, r7
    58fe:	f000 fa51 	bl	5da4 <__clzsi2>
    5902:	3020      	adds	r0, #32
    5904:	e706      	b.n	5714 <__aeabi_dsub+0xc8>
    5906:	430a      	orrs	r2, r1
    5908:	0017      	movs	r7, r2
    590a:	2100      	movs	r1, #0
    590c:	1e7a      	subs	r2, r7, #1
    590e:	4197      	sbcs	r7, r2
    5910:	e6ee      	b.n	56f0 <__aeabi_dsub+0xa4>
    5912:	2b00      	cmp	r3, #0
    5914:	d000      	beq.n	5918 <__aeabi_dsub+0x2cc>
    5916:	e0e5      	b.n	5ae4 <__aeabi_dsub+0x498>
    5918:	1c73      	adds	r3, r6, #1
    591a:	469c      	mov	ip, r3
    591c:	055b      	lsls	r3, r3, #21
    591e:	0d5b      	lsrs	r3, r3, #21
    5920:	2b01      	cmp	r3, #1
    5922:	dc00      	bgt.n	5926 <__aeabi_dsub+0x2da>
    5924:	e09f      	b.n	5a66 <__aeabi_dsub+0x41a>
    5926:	4b1a      	ldr	r3, [pc, #104]	; (5990 <__aeabi_dsub+0x344>)
    5928:	459c      	cmp	ip, r3
    592a:	d100      	bne.n	592e <__aeabi_dsub+0x2e2>
    592c:	e0c5      	b.n	5aba <__aeabi_dsub+0x46e>
    592e:	4452      	add	r2, sl
    5930:	4552      	cmp	r2, sl
    5932:	4180      	sbcs	r0, r0
    5934:	1864      	adds	r4, r4, r1
    5936:	4240      	negs	r0, r0
    5938:	1824      	adds	r4, r4, r0
    593a:	07e7      	lsls	r7, r4, #31
    593c:	0852      	lsrs	r2, r2, #1
    593e:	4317      	orrs	r7, r2
    5940:	0864      	lsrs	r4, r4, #1
    5942:	4666      	mov	r6, ip
    5944:	e708      	b.n	5758 <__aeabi_dsub+0x10c>
    5946:	4812      	ldr	r0, [pc, #72]	; (5990 <__aeabi_dsub+0x344>)
    5948:	4285      	cmp	r5, r0
    594a:	d100      	bne.n	594e <__aeabi_dsub+0x302>
    594c:	e085      	b.n	5a5a <__aeabi_dsub+0x40e>
    594e:	001d      	movs	r5, r3
    5950:	e6bc      	b.n	56cc <__aeabi_dsub+0x80>
    5952:	0029      	movs	r1, r5
    5954:	3e1f      	subs	r6, #31
    5956:	40f1      	lsrs	r1, r6
    5958:	2b20      	cmp	r3, #32
    595a:	d100      	bne.n	595e <__aeabi_dsub+0x312>
    595c:	e07f      	b.n	5a5e <__aeabi_dsub+0x412>
    595e:	2240      	movs	r2, #64	; 0x40
    5960:	1ad3      	subs	r3, r2, r3
    5962:	409d      	lsls	r5, r3
    5964:	432f      	orrs	r7, r5
    5966:	1e7d      	subs	r5, r7, #1
    5968:	41af      	sbcs	r7, r5
    596a:	2400      	movs	r4, #0
    596c:	430f      	orrs	r7, r1
    596e:	2600      	movs	r6, #0
    5970:	e78e      	b.n	5890 <__aeabi_dsub+0x244>
    5972:	002b      	movs	r3, r5
    5974:	000f      	movs	r7, r1
    5976:	3b20      	subs	r3, #32
    5978:	40df      	lsrs	r7, r3
    597a:	2d20      	cmp	r5, #32
    597c:	d071      	beq.n	5a62 <__aeabi_dsub+0x416>
    597e:	2340      	movs	r3, #64	; 0x40
    5980:	1b5d      	subs	r5, r3, r5
    5982:	40a9      	lsls	r1, r5
    5984:	430a      	orrs	r2, r1
    5986:	1e51      	subs	r1, r2, #1
    5988:	418a      	sbcs	r2, r1
    598a:	2100      	movs	r1, #0
    598c:	4317      	orrs	r7, r2
    598e:	e6af      	b.n	56f0 <__aeabi_dsub+0xa4>
    5990:	000007ff 	.word	0x000007ff
    5994:	ff7fffff 	.word	0xff7fffff
    5998:	800fffff 	.word	0x800fffff
    599c:	2e00      	cmp	r6, #0
    599e:	d03e      	beq.n	5a1e <__aeabi_dsub+0x3d2>
    59a0:	4eb3      	ldr	r6, [pc, #716]	; (5c70 <__aeabi_dsub+0x624>)
    59a2:	45b4      	cmp	ip, r6
    59a4:	d045      	beq.n	5a32 <__aeabi_dsub+0x3e6>
    59a6:	2680      	movs	r6, #128	; 0x80
    59a8:	0436      	lsls	r6, r6, #16
    59aa:	426d      	negs	r5, r5
    59ac:	4334      	orrs	r4, r6
    59ae:	2d38      	cmp	r5, #56	; 0x38
    59b0:	dd00      	ble.n	59b4 <__aeabi_dsub+0x368>
    59b2:	e0a8      	b.n	5b06 <__aeabi_dsub+0x4ba>
    59b4:	2d1f      	cmp	r5, #31
    59b6:	dd00      	ble.n	59ba <__aeabi_dsub+0x36e>
    59b8:	e11f      	b.n	5bfa <__aeabi_dsub+0x5ae>
    59ba:	2620      	movs	r6, #32
    59bc:	0027      	movs	r7, r4
    59be:	4650      	mov	r0, sl
    59c0:	1b76      	subs	r6, r6, r5
    59c2:	40b7      	lsls	r7, r6
    59c4:	40e8      	lsrs	r0, r5
    59c6:	4307      	orrs	r7, r0
    59c8:	4650      	mov	r0, sl
    59ca:	40b0      	lsls	r0, r6
    59cc:	1e46      	subs	r6, r0, #1
    59ce:	41b0      	sbcs	r0, r6
    59d0:	40ec      	lsrs	r4, r5
    59d2:	4338      	orrs	r0, r7
    59d4:	1a17      	subs	r7, r2, r0
    59d6:	42ba      	cmp	r2, r7
    59d8:	4192      	sbcs	r2, r2
    59da:	1b0c      	subs	r4, r1, r4
    59dc:	4252      	negs	r2, r2
    59de:	1aa4      	subs	r4, r4, r2
    59e0:	4666      	mov	r6, ip
    59e2:	4698      	mov	r8, r3
    59e4:	e68b      	b.n	56fe <__aeabi_dsub+0xb2>
    59e6:	4664      	mov	r4, ip
    59e8:	4667      	mov	r7, ip
    59ea:	432c      	orrs	r4, r5
    59ec:	d000      	beq.n	59f0 <__aeabi_dsub+0x3a4>
    59ee:	e68b      	b.n	5708 <__aeabi_dsub+0xbc>
    59f0:	2500      	movs	r5, #0
    59f2:	2600      	movs	r6, #0
    59f4:	2700      	movs	r7, #0
    59f6:	e6ea      	b.n	57ce <__aeabi_dsub+0x182>
    59f8:	001e      	movs	r6, r3
    59fa:	e6ad      	b.n	5758 <__aeabi_dsub+0x10c>
    59fc:	2b1f      	cmp	r3, #31
    59fe:	dc60      	bgt.n	5ac2 <__aeabi_dsub+0x476>
    5a00:	2720      	movs	r7, #32
    5a02:	1af8      	subs	r0, r7, r3
    5a04:	000f      	movs	r7, r1
    5a06:	4684      	mov	ip, r0
    5a08:	4087      	lsls	r7, r0
    5a0a:	0010      	movs	r0, r2
    5a0c:	40d8      	lsrs	r0, r3
    5a0e:	4307      	orrs	r7, r0
    5a10:	4660      	mov	r0, ip
    5a12:	4082      	lsls	r2, r0
    5a14:	1e50      	subs	r0, r2, #1
    5a16:	4182      	sbcs	r2, r0
    5a18:	40d9      	lsrs	r1, r3
    5a1a:	4317      	orrs	r7, r2
    5a1c:	e6f5      	b.n	580a <__aeabi_dsub+0x1be>
    5a1e:	0026      	movs	r6, r4
    5a20:	4650      	mov	r0, sl
    5a22:	4306      	orrs	r6, r0
    5a24:	d005      	beq.n	5a32 <__aeabi_dsub+0x3e6>
    5a26:	43ed      	mvns	r5, r5
    5a28:	2d00      	cmp	r5, #0
    5a2a:	d0d3      	beq.n	59d4 <__aeabi_dsub+0x388>
    5a2c:	4e90      	ldr	r6, [pc, #576]	; (5c70 <__aeabi_dsub+0x624>)
    5a2e:	45b4      	cmp	ip, r6
    5a30:	d1bd      	bne.n	59ae <__aeabi_dsub+0x362>
    5a32:	000c      	movs	r4, r1
    5a34:	0017      	movs	r7, r2
    5a36:	4666      	mov	r6, ip
    5a38:	4698      	mov	r8, r3
    5a3a:	e68d      	b.n	5758 <__aeabi_dsub+0x10c>
    5a3c:	488c      	ldr	r0, [pc, #560]	; (5c70 <__aeabi_dsub+0x624>)
    5a3e:	4283      	cmp	r3, r0
    5a40:	d00b      	beq.n	5a5a <__aeabi_dsub+0x40e>
    5a42:	4663      	mov	r3, ip
    5a44:	e6d9      	b.n	57fa <__aeabi_dsub+0x1ae>
    5a46:	2d00      	cmp	r5, #0
    5a48:	d000      	beq.n	5a4c <__aeabi_dsub+0x400>
    5a4a:	e096      	b.n	5b7a <__aeabi_dsub+0x52e>
    5a4c:	0008      	movs	r0, r1
    5a4e:	4310      	orrs	r0, r2
    5a50:	d100      	bne.n	5a54 <__aeabi_dsub+0x408>
    5a52:	e0e2      	b.n	5c1a <__aeabi_dsub+0x5ce>
    5a54:	000c      	movs	r4, r1
    5a56:	0017      	movs	r7, r2
    5a58:	4698      	mov	r8, r3
    5a5a:	4e85      	ldr	r6, [pc, #532]	; (5c70 <__aeabi_dsub+0x624>)
    5a5c:	e67c      	b.n	5758 <__aeabi_dsub+0x10c>
    5a5e:	2500      	movs	r5, #0
    5a60:	e780      	b.n	5964 <__aeabi_dsub+0x318>
    5a62:	2100      	movs	r1, #0
    5a64:	e78e      	b.n	5984 <__aeabi_dsub+0x338>
    5a66:	0023      	movs	r3, r4
    5a68:	4650      	mov	r0, sl
    5a6a:	4303      	orrs	r3, r0
    5a6c:	2e00      	cmp	r6, #0
    5a6e:	d000      	beq.n	5a72 <__aeabi_dsub+0x426>
    5a70:	e0a8      	b.n	5bc4 <__aeabi_dsub+0x578>
    5a72:	2b00      	cmp	r3, #0
    5a74:	d100      	bne.n	5a78 <__aeabi_dsub+0x42c>
    5a76:	e0de      	b.n	5c36 <__aeabi_dsub+0x5ea>
    5a78:	000b      	movs	r3, r1
    5a7a:	4313      	orrs	r3, r2
    5a7c:	d100      	bne.n	5a80 <__aeabi_dsub+0x434>
    5a7e:	e66b      	b.n	5758 <__aeabi_dsub+0x10c>
    5a80:	4452      	add	r2, sl
    5a82:	4552      	cmp	r2, sl
    5a84:	4180      	sbcs	r0, r0
    5a86:	1864      	adds	r4, r4, r1
    5a88:	4240      	negs	r0, r0
    5a8a:	1824      	adds	r4, r4, r0
    5a8c:	0017      	movs	r7, r2
    5a8e:	0223      	lsls	r3, r4, #8
    5a90:	d400      	bmi.n	5a94 <__aeabi_dsub+0x448>
    5a92:	e6fd      	b.n	5890 <__aeabi_dsub+0x244>
    5a94:	4b77      	ldr	r3, [pc, #476]	; (5c74 <__aeabi_dsub+0x628>)
    5a96:	4666      	mov	r6, ip
    5a98:	401c      	ands	r4, r3
    5a9a:	e65d      	b.n	5758 <__aeabi_dsub+0x10c>
    5a9c:	0025      	movs	r5, r4
    5a9e:	4650      	mov	r0, sl
    5aa0:	4305      	orrs	r5, r0
    5aa2:	2e00      	cmp	r6, #0
    5aa4:	d1cf      	bne.n	5a46 <__aeabi_dsub+0x3fa>
    5aa6:	2d00      	cmp	r5, #0
    5aa8:	d14f      	bne.n	5b4a <__aeabi_dsub+0x4fe>
    5aaa:	000c      	movs	r4, r1
    5aac:	4314      	orrs	r4, r2
    5aae:	d100      	bne.n	5ab2 <__aeabi_dsub+0x466>
    5ab0:	e0a0      	b.n	5bf4 <__aeabi_dsub+0x5a8>
    5ab2:	000c      	movs	r4, r1
    5ab4:	0017      	movs	r7, r2
    5ab6:	4698      	mov	r8, r3
    5ab8:	e64e      	b.n	5758 <__aeabi_dsub+0x10c>
    5aba:	4666      	mov	r6, ip
    5abc:	2400      	movs	r4, #0
    5abe:	2700      	movs	r7, #0
    5ac0:	e685      	b.n	57ce <__aeabi_dsub+0x182>
    5ac2:	001f      	movs	r7, r3
    5ac4:	0008      	movs	r0, r1
    5ac6:	3f20      	subs	r7, #32
    5ac8:	40f8      	lsrs	r0, r7
    5aca:	0007      	movs	r7, r0
    5acc:	2b20      	cmp	r3, #32
    5ace:	d100      	bne.n	5ad2 <__aeabi_dsub+0x486>
    5ad0:	e08e      	b.n	5bf0 <__aeabi_dsub+0x5a4>
    5ad2:	2040      	movs	r0, #64	; 0x40
    5ad4:	1ac3      	subs	r3, r0, r3
    5ad6:	4099      	lsls	r1, r3
    5ad8:	430a      	orrs	r2, r1
    5ada:	1e51      	subs	r1, r2, #1
    5adc:	418a      	sbcs	r2, r1
    5ade:	2100      	movs	r1, #0
    5ae0:	4317      	orrs	r7, r2
    5ae2:	e692      	b.n	580a <__aeabi_dsub+0x1be>
    5ae4:	2e00      	cmp	r6, #0
    5ae6:	d114      	bne.n	5b12 <__aeabi_dsub+0x4c6>
    5ae8:	0026      	movs	r6, r4
    5aea:	4650      	mov	r0, sl
    5aec:	4306      	orrs	r6, r0
    5aee:	d062      	beq.n	5bb6 <__aeabi_dsub+0x56a>
    5af0:	43db      	mvns	r3, r3
    5af2:	2b00      	cmp	r3, #0
    5af4:	d15c      	bne.n	5bb0 <__aeabi_dsub+0x564>
    5af6:	1887      	adds	r7, r0, r2
    5af8:	4297      	cmp	r7, r2
    5afa:	4192      	sbcs	r2, r2
    5afc:	1864      	adds	r4, r4, r1
    5afe:	4252      	negs	r2, r2
    5b00:	18a4      	adds	r4, r4, r2
    5b02:	4666      	mov	r6, ip
    5b04:	e687      	b.n	5816 <__aeabi_dsub+0x1ca>
    5b06:	4650      	mov	r0, sl
    5b08:	4320      	orrs	r0, r4
    5b0a:	1e44      	subs	r4, r0, #1
    5b0c:	41a0      	sbcs	r0, r4
    5b0e:	2400      	movs	r4, #0
    5b10:	e760      	b.n	59d4 <__aeabi_dsub+0x388>
    5b12:	4e57      	ldr	r6, [pc, #348]	; (5c70 <__aeabi_dsub+0x624>)
    5b14:	45b4      	cmp	ip, r6
    5b16:	d04e      	beq.n	5bb6 <__aeabi_dsub+0x56a>
    5b18:	2680      	movs	r6, #128	; 0x80
    5b1a:	0436      	lsls	r6, r6, #16
    5b1c:	425b      	negs	r3, r3
    5b1e:	4334      	orrs	r4, r6
    5b20:	2b38      	cmp	r3, #56	; 0x38
    5b22:	dd00      	ble.n	5b26 <__aeabi_dsub+0x4da>
    5b24:	e07f      	b.n	5c26 <__aeabi_dsub+0x5da>
    5b26:	2b1f      	cmp	r3, #31
    5b28:	dd00      	ble.n	5b2c <__aeabi_dsub+0x4e0>
    5b2a:	e08b      	b.n	5c44 <__aeabi_dsub+0x5f8>
    5b2c:	2620      	movs	r6, #32
    5b2e:	0027      	movs	r7, r4
    5b30:	4650      	mov	r0, sl
    5b32:	1af6      	subs	r6, r6, r3
    5b34:	40b7      	lsls	r7, r6
    5b36:	40d8      	lsrs	r0, r3
    5b38:	4307      	orrs	r7, r0
    5b3a:	4650      	mov	r0, sl
    5b3c:	40b0      	lsls	r0, r6
    5b3e:	1e46      	subs	r6, r0, #1
    5b40:	41b0      	sbcs	r0, r6
    5b42:	4307      	orrs	r7, r0
    5b44:	40dc      	lsrs	r4, r3
    5b46:	18bf      	adds	r7, r7, r2
    5b48:	e7d6      	b.n	5af8 <__aeabi_dsub+0x4ac>
    5b4a:	000d      	movs	r5, r1
    5b4c:	4315      	orrs	r5, r2
    5b4e:	d100      	bne.n	5b52 <__aeabi_dsub+0x506>
    5b50:	e602      	b.n	5758 <__aeabi_dsub+0x10c>
    5b52:	4650      	mov	r0, sl
    5b54:	1a80      	subs	r0, r0, r2
    5b56:	4582      	cmp	sl, r0
    5b58:	41bf      	sbcs	r7, r7
    5b5a:	1a65      	subs	r5, r4, r1
    5b5c:	427f      	negs	r7, r7
    5b5e:	1bed      	subs	r5, r5, r7
    5b60:	4684      	mov	ip, r0
    5b62:	0228      	lsls	r0, r5, #8
    5b64:	d400      	bmi.n	5b68 <__aeabi_dsub+0x51c>
    5b66:	e68d      	b.n	5884 <__aeabi_dsub+0x238>
    5b68:	4650      	mov	r0, sl
    5b6a:	1a17      	subs	r7, r2, r0
    5b6c:	42ba      	cmp	r2, r7
    5b6e:	4192      	sbcs	r2, r2
    5b70:	1b0c      	subs	r4, r1, r4
    5b72:	4252      	negs	r2, r2
    5b74:	1aa4      	subs	r4, r4, r2
    5b76:	4698      	mov	r8, r3
    5b78:	e5ee      	b.n	5758 <__aeabi_dsub+0x10c>
    5b7a:	000d      	movs	r5, r1
    5b7c:	4315      	orrs	r5, r2
    5b7e:	d100      	bne.n	5b82 <__aeabi_dsub+0x536>
    5b80:	e76b      	b.n	5a5a <__aeabi_dsub+0x40e>
    5b82:	4650      	mov	r0, sl
    5b84:	0767      	lsls	r7, r4, #29
    5b86:	08c0      	lsrs	r0, r0, #3
    5b88:	4307      	orrs	r7, r0
    5b8a:	2080      	movs	r0, #128	; 0x80
    5b8c:	08e4      	lsrs	r4, r4, #3
    5b8e:	0300      	lsls	r0, r0, #12
    5b90:	4204      	tst	r4, r0
    5b92:	d007      	beq.n	5ba4 <__aeabi_dsub+0x558>
    5b94:	08cd      	lsrs	r5, r1, #3
    5b96:	4205      	tst	r5, r0
    5b98:	d104      	bne.n	5ba4 <__aeabi_dsub+0x558>
    5b9a:	002c      	movs	r4, r5
    5b9c:	4698      	mov	r8, r3
    5b9e:	08d7      	lsrs	r7, r2, #3
    5ba0:	0749      	lsls	r1, r1, #29
    5ba2:	430f      	orrs	r7, r1
    5ba4:	0f7b      	lsrs	r3, r7, #29
    5ba6:	00e4      	lsls	r4, r4, #3
    5ba8:	431c      	orrs	r4, r3
    5baa:	00ff      	lsls	r7, r7, #3
    5bac:	4e30      	ldr	r6, [pc, #192]	; (5c70 <__aeabi_dsub+0x624>)
    5bae:	e5d3      	b.n	5758 <__aeabi_dsub+0x10c>
    5bb0:	4e2f      	ldr	r6, [pc, #188]	; (5c70 <__aeabi_dsub+0x624>)
    5bb2:	45b4      	cmp	ip, r6
    5bb4:	d1b4      	bne.n	5b20 <__aeabi_dsub+0x4d4>
    5bb6:	000c      	movs	r4, r1
    5bb8:	0017      	movs	r7, r2
    5bba:	4666      	mov	r6, ip
    5bbc:	e5cc      	b.n	5758 <__aeabi_dsub+0x10c>
    5bbe:	2700      	movs	r7, #0
    5bc0:	2400      	movs	r4, #0
    5bc2:	e5e8      	b.n	5796 <__aeabi_dsub+0x14a>
    5bc4:	2b00      	cmp	r3, #0
    5bc6:	d039      	beq.n	5c3c <__aeabi_dsub+0x5f0>
    5bc8:	000b      	movs	r3, r1
    5bca:	4313      	orrs	r3, r2
    5bcc:	d100      	bne.n	5bd0 <__aeabi_dsub+0x584>
    5bce:	e744      	b.n	5a5a <__aeabi_dsub+0x40e>
    5bd0:	08c0      	lsrs	r0, r0, #3
    5bd2:	0767      	lsls	r7, r4, #29
    5bd4:	4307      	orrs	r7, r0
    5bd6:	2080      	movs	r0, #128	; 0x80
    5bd8:	08e4      	lsrs	r4, r4, #3
    5bda:	0300      	lsls	r0, r0, #12
    5bdc:	4204      	tst	r4, r0
    5bde:	d0e1      	beq.n	5ba4 <__aeabi_dsub+0x558>
    5be0:	08cb      	lsrs	r3, r1, #3
    5be2:	4203      	tst	r3, r0
    5be4:	d1de      	bne.n	5ba4 <__aeabi_dsub+0x558>
    5be6:	08d7      	lsrs	r7, r2, #3
    5be8:	0749      	lsls	r1, r1, #29
    5bea:	430f      	orrs	r7, r1
    5bec:	001c      	movs	r4, r3
    5bee:	e7d9      	b.n	5ba4 <__aeabi_dsub+0x558>
    5bf0:	2100      	movs	r1, #0
    5bf2:	e771      	b.n	5ad8 <__aeabi_dsub+0x48c>
    5bf4:	2500      	movs	r5, #0
    5bf6:	2700      	movs	r7, #0
    5bf8:	e5e9      	b.n	57ce <__aeabi_dsub+0x182>
    5bfa:	002e      	movs	r6, r5
    5bfc:	0027      	movs	r7, r4
    5bfe:	3e20      	subs	r6, #32
    5c00:	40f7      	lsrs	r7, r6
    5c02:	2d20      	cmp	r5, #32
    5c04:	d02f      	beq.n	5c66 <__aeabi_dsub+0x61a>
    5c06:	2640      	movs	r6, #64	; 0x40
    5c08:	1b75      	subs	r5, r6, r5
    5c0a:	40ac      	lsls	r4, r5
    5c0c:	4650      	mov	r0, sl
    5c0e:	4320      	orrs	r0, r4
    5c10:	1e44      	subs	r4, r0, #1
    5c12:	41a0      	sbcs	r0, r4
    5c14:	2400      	movs	r4, #0
    5c16:	4338      	orrs	r0, r7
    5c18:	e6dc      	b.n	59d4 <__aeabi_dsub+0x388>
    5c1a:	2480      	movs	r4, #128	; 0x80
    5c1c:	2500      	movs	r5, #0
    5c1e:	0324      	lsls	r4, r4, #12
    5c20:	4e13      	ldr	r6, [pc, #76]	; (5c70 <__aeabi_dsub+0x624>)
    5c22:	2700      	movs	r7, #0
    5c24:	e5d3      	b.n	57ce <__aeabi_dsub+0x182>
    5c26:	4650      	mov	r0, sl
    5c28:	4320      	orrs	r0, r4
    5c2a:	0007      	movs	r7, r0
    5c2c:	1e78      	subs	r0, r7, #1
    5c2e:	4187      	sbcs	r7, r0
    5c30:	2400      	movs	r4, #0
    5c32:	18bf      	adds	r7, r7, r2
    5c34:	e760      	b.n	5af8 <__aeabi_dsub+0x4ac>
    5c36:	000c      	movs	r4, r1
    5c38:	0017      	movs	r7, r2
    5c3a:	e58d      	b.n	5758 <__aeabi_dsub+0x10c>
    5c3c:	000c      	movs	r4, r1
    5c3e:	0017      	movs	r7, r2
    5c40:	4e0b      	ldr	r6, [pc, #44]	; (5c70 <__aeabi_dsub+0x624>)
    5c42:	e589      	b.n	5758 <__aeabi_dsub+0x10c>
    5c44:	001e      	movs	r6, r3
    5c46:	0027      	movs	r7, r4
    5c48:	3e20      	subs	r6, #32
    5c4a:	40f7      	lsrs	r7, r6
    5c4c:	2b20      	cmp	r3, #32
    5c4e:	d00c      	beq.n	5c6a <__aeabi_dsub+0x61e>
    5c50:	2640      	movs	r6, #64	; 0x40
    5c52:	1af3      	subs	r3, r6, r3
    5c54:	409c      	lsls	r4, r3
    5c56:	4650      	mov	r0, sl
    5c58:	4320      	orrs	r0, r4
    5c5a:	1e44      	subs	r4, r0, #1
    5c5c:	41a0      	sbcs	r0, r4
    5c5e:	4307      	orrs	r7, r0
    5c60:	2400      	movs	r4, #0
    5c62:	18bf      	adds	r7, r7, r2
    5c64:	e748      	b.n	5af8 <__aeabi_dsub+0x4ac>
    5c66:	2400      	movs	r4, #0
    5c68:	e7d0      	b.n	5c0c <__aeabi_dsub+0x5c0>
    5c6a:	2400      	movs	r4, #0
    5c6c:	e7f3      	b.n	5c56 <__aeabi_dsub+0x60a>
    5c6e:	46c0      	nop			; (mov r8, r8)
    5c70:	000007ff 	.word	0x000007ff
    5c74:	ff7fffff 	.word	0xff7fffff

00005c78 <__aeabi_dcmpun>:
    5c78:	b570      	push	{r4, r5, r6, lr}
    5c7a:	4e0e      	ldr	r6, [pc, #56]	; (5cb4 <__aeabi_dcmpun+0x3c>)
    5c7c:	030d      	lsls	r5, r1, #12
    5c7e:	031c      	lsls	r4, r3, #12
    5c80:	0049      	lsls	r1, r1, #1
    5c82:	005b      	lsls	r3, r3, #1
    5c84:	0b2d      	lsrs	r5, r5, #12
    5c86:	0d49      	lsrs	r1, r1, #21
    5c88:	0b24      	lsrs	r4, r4, #12
    5c8a:	0d5b      	lsrs	r3, r3, #21
    5c8c:	42b1      	cmp	r1, r6
    5c8e:	d004      	beq.n	5c9a <__aeabi_dcmpun+0x22>
    5c90:	4908      	ldr	r1, [pc, #32]	; (5cb4 <__aeabi_dcmpun+0x3c>)
    5c92:	2000      	movs	r0, #0
    5c94:	428b      	cmp	r3, r1
    5c96:	d008      	beq.n	5caa <__aeabi_dcmpun+0x32>
    5c98:	bd70      	pop	{r4, r5, r6, pc}
    5c9a:	4305      	orrs	r5, r0
    5c9c:	2001      	movs	r0, #1
    5c9e:	2d00      	cmp	r5, #0
    5ca0:	d1fa      	bne.n	5c98 <__aeabi_dcmpun+0x20>
    5ca2:	4904      	ldr	r1, [pc, #16]	; (5cb4 <__aeabi_dcmpun+0x3c>)
    5ca4:	2000      	movs	r0, #0
    5ca6:	428b      	cmp	r3, r1
    5ca8:	d1f6      	bne.n	5c98 <__aeabi_dcmpun+0x20>
    5caa:	4314      	orrs	r4, r2
    5cac:	0020      	movs	r0, r4
    5cae:	1e44      	subs	r4, r0, #1
    5cb0:	41a0      	sbcs	r0, r4
    5cb2:	e7f1      	b.n	5c98 <__aeabi_dcmpun+0x20>
    5cb4:	000007ff 	.word	0x000007ff

00005cb8 <__aeabi_d2iz>:
    5cb8:	b530      	push	{r4, r5, lr}
    5cba:	4d13      	ldr	r5, [pc, #76]	; (5d08 <__aeabi_d2iz+0x50>)
    5cbc:	030a      	lsls	r2, r1, #12
    5cbe:	004b      	lsls	r3, r1, #1
    5cc0:	0b12      	lsrs	r2, r2, #12
    5cc2:	0d5b      	lsrs	r3, r3, #21
    5cc4:	0fc9      	lsrs	r1, r1, #31
    5cc6:	2400      	movs	r4, #0
    5cc8:	42ab      	cmp	r3, r5
    5cca:	dd10      	ble.n	5cee <__aeabi_d2iz+0x36>
    5ccc:	4c0f      	ldr	r4, [pc, #60]	; (5d0c <__aeabi_d2iz+0x54>)
    5cce:	42a3      	cmp	r3, r4
    5cd0:	dc0f      	bgt.n	5cf2 <__aeabi_d2iz+0x3a>
    5cd2:	2480      	movs	r4, #128	; 0x80
    5cd4:	4d0e      	ldr	r5, [pc, #56]	; (5d10 <__aeabi_d2iz+0x58>)
    5cd6:	0364      	lsls	r4, r4, #13
    5cd8:	4322      	orrs	r2, r4
    5cda:	1aed      	subs	r5, r5, r3
    5cdc:	2d1f      	cmp	r5, #31
    5cde:	dd0b      	ble.n	5cf8 <__aeabi_d2iz+0x40>
    5ce0:	480c      	ldr	r0, [pc, #48]	; (5d14 <__aeabi_d2iz+0x5c>)
    5ce2:	1ac3      	subs	r3, r0, r3
    5ce4:	40da      	lsrs	r2, r3
    5ce6:	4254      	negs	r4, r2
    5ce8:	2900      	cmp	r1, #0
    5cea:	d100      	bne.n	5cee <__aeabi_d2iz+0x36>
    5cec:	0014      	movs	r4, r2
    5cee:	0020      	movs	r0, r4
    5cf0:	bd30      	pop	{r4, r5, pc}
    5cf2:	4b09      	ldr	r3, [pc, #36]	; (5d18 <__aeabi_d2iz+0x60>)
    5cf4:	18cc      	adds	r4, r1, r3
    5cf6:	e7fa      	b.n	5cee <__aeabi_d2iz+0x36>
    5cf8:	4c08      	ldr	r4, [pc, #32]	; (5d1c <__aeabi_d2iz+0x64>)
    5cfa:	40e8      	lsrs	r0, r5
    5cfc:	46a4      	mov	ip, r4
    5cfe:	4463      	add	r3, ip
    5d00:	409a      	lsls	r2, r3
    5d02:	4302      	orrs	r2, r0
    5d04:	e7ef      	b.n	5ce6 <__aeabi_d2iz+0x2e>
    5d06:	46c0      	nop			; (mov r8, r8)
    5d08:	000003fe 	.word	0x000003fe
    5d0c:	0000041d 	.word	0x0000041d
    5d10:	00000433 	.word	0x00000433
    5d14:	00000413 	.word	0x00000413
    5d18:	7fffffff 	.word	0x7fffffff
    5d1c:	fffffbed 	.word	0xfffffbed

00005d20 <__aeabi_i2d>:
    5d20:	b570      	push	{r4, r5, r6, lr}
    5d22:	2800      	cmp	r0, #0
    5d24:	d030      	beq.n	5d88 <__aeabi_i2d+0x68>
    5d26:	17c3      	asrs	r3, r0, #31
    5d28:	18c4      	adds	r4, r0, r3
    5d2a:	405c      	eors	r4, r3
    5d2c:	0fc5      	lsrs	r5, r0, #31
    5d2e:	0020      	movs	r0, r4
    5d30:	f000 f838 	bl	5da4 <__clzsi2>
    5d34:	4b17      	ldr	r3, [pc, #92]	; (5d94 <__aeabi_i2d+0x74>)
    5d36:	4a18      	ldr	r2, [pc, #96]	; (5d98 <__aeabi_i2d+0x78>)
    5d38:	1a1b      	subs	r3, r3, r0
    5d3a:	1ad2      	subs	r2, r2, r3
    5d3c:	2a1f      	cmp	r2, #31
    5d3e:	dd18      	ble.n	5d72 <__aeabi_i2d+0x52>
    5d40:	4a16      	ldr	r2, [pc, #88]	; (5d9c <__aeabi_i2d+0x7c>)
    5d42:	1ad2      	subs	r2, r2, r3
    5d44:	4094      	lsls	r4, r2
    5d46:	2200      	movs	r2, #0
    5d48:	0324      	lsls	r4, r4, #12
    5d4a:	055b      	lsls	r3, r3, #21
    5d4c:	0b24      	lsrs	r4, r4, #12
    5d4e:	0d5b      	lsrs	r3, r3, #21
    5d50:	2100      	movs	r1, #0
    5d52:	0010      	movs	r0, r2
    5d54:	0324      	lsls	r4, r4, #12
    5d56:	0d0a      	lsrs	r2, r1, #20
    5d58:	0b24      	lsrs	r4, r4, #12
    5d5a:	0512      	lsls	r2, r2, #20
    5d5c:	4322      	orrs	r2, r4
    5d5e:	4c10      	ldr	r4, [pc, #64]	; (5da0 <__aeabi_i2d+0x80>)
    5d60:	051b      	lsls	r3, r3, #20
    5d62:	4022      	ands	r2, r4
    5d64:	4313      	orrs	r3, r2
    5d66:	005b      	lsls	r3, r3, #1
    5d68:	07ed      	lsls	r5, r5, #31
    5d6a:	085b      	lsrs	r3, r3, #1
    5d6c:	432b      	orrs	r3, r5
    5d6e:	0019      	movs	r1, r3
    5d70:	bd70      	pop	{r4, r5, r6, pc}
    5d72:	0021      	movs	r1, r4
    5d74:	4091      	lsls	r1, r2
    5d76:	000a      	movs	r2, r1
    5d78:	210b      	movs	r1, #11
    5d7a:	1a08      	subs	r0, r1, r0
    5d7c:	40c4      	lsrs	r4, r0
    5d7e:	055b      	lsls	r3, r3, #21
    5d80:	0324      	lsls	r4, r4, #12
    5d82:	0b24      	lsrs	r4, r4, #12
    5d84:	0d5b      	lsrs	r3, r3, #21
    5d86:	e7e3      	b.n	5d50 <__aeabi_i2d+0x30>
    5d88:	2500      	movs	r5, #0
    5d8a:	2300      	movs	r3, #0
    5d8c:	2400      	movs	r4, #0
    5d8e:	2200      	movs	r2, #0
    5d90:	e7de      	b.n	5d50 <__aeabi_i2d+0x30>
    5d92:	46c0      	nop			; (mov r8, r8)
    5d94:	0000041e 	.word	0x0000041e
    5d98:	00000433 	.word	0x00000433
    5d9c:	00000413 	.word	0x00000413
    5da0:	800fffff 	.word	0x800fffff

00005da4 <__clzsi2>:
    5da4:	211c      	movs	r1, #28
    5da6:	2301      	movs	r3, #1
    5da8:	041b      	lsls	r3, r3, #16
    5daa:	4298      	cmp	r0, r3
    5dac:	d301      	bcc.n	5db2 <__clzsi2+0xe>
    5dae:	0c00      	lsrs	r0, r0, #16
    5db0:	3910      	subs	r1, #16
    5db2:	0a1b      	lsrs	r3, r3, #8
    5db4:	4298      	cmp	r0, r3
    5db6:	d301      	bcc.n	5dbc <__clzsi2+0x18>
    5db8:	0a00      	lsrs	r0, r0, #8
    5dba:	3908      	subs	r1, #8
    5dbc:	091b      	lsrs	r3, r3, #4
    5dbe:	4298      	cmp	r0, r3
    5dc0:	d301      	bcc.n	5dc6 <__clzsi2+0x22>
    5dc2:	0900      	lsrs	r0, r0, #4
    5dc4:	3904      	subs	r1, #4
    5dc6:	a202      	add	r2, pc, #8	; (adr r2, 5dd0 <__clzsi2+0x2c>)
    5dc8:	5c10      	ldrb	r0, [r2, r0]
    5dca:	1840      	adds	r0, r0, r1
    5dcc:	4770      	bx	lr
    5dce:	46c0      	nop			; (mov r8, r8)
    5dd0:	02020304 	.word	0x02020304
    5dd4:	01010101 	.word	0x01010101
	...

00005de0 <__cxa_atexit>:
    5de0:	b570      	push	{r4, r5, r6, lr}
    5de2:	4c05      	ldr	r4, [pc, #20]	; (5df8 <__cxa_atexit+0x18>)
    5de4:	0005      	movs	r5, r0
    5de6:	0013      	movs	r3, r2
    5de8:	1e20      	subs	r0, r4, #0
    5dea:	d004      	beq.n	5df6 <__cxa_atexit+0x16>
    5dec:	000a      	movs	r2, r1
    5dee:	2002      	movs	r0, #2
    5df0:	0029      	movs	r1, r5
    5df2:	e000      	b.n	5df6 <__cxa_atexit+0x16>
    5df4:	bf00      	nop
    5df6:	bd70      	pop	{r4, r5, r6, pc}
    5df8:	00000000 	.word	0x00000000

00005dfc <__errno>:
    5dfc:	4b01      	ldr	r3, [pc, #4]	; (5e04 <__errno+0x8>)
    5dfe:	6818      	ldr	r0, [r3, #0]
    5e00:	4770      	bx	lr
    5e02:	46c0      	nop			; (mov r8, r8)
    5e04:	20000008 	.word	0x20000008

00005e08 <__libc_init_array>:
    5e08:	b570      	push	{r4, r5, r6, lr}
    5e0a:	2600      	movs	r6, #0
    5e0c:	4d0c      	ldr	r5, [pc, #48]	; (5e40 <__libc_init_array+0x38>)
    5e0e:	4c0d      	ldr	r4, [pc, #52]	; (5e44 <__libc_init_array+0x3c>)
    5e10:	1b64      	subs	r4, r4, r5
    5e12:	10a4      	asrs	r4, r4, #2
    5e14:	42a6      	cmp	r6, r4
    5e16:	d109      	bne.n	5e2c <__libc_init_array+0x24>
    5e18:	2600      	movs	r6, #0
    5e1a:	f000 f991 	bl	6140 <_init>
    5e1e:	4d0a      	ldr	r5, [pc, #40]	; (5e48 <__libc_init_array+0x40>)
    5e20:	4c0a      	ldr	r4, [pc, #40]	; (5e4c <__libc_init_array+0x44>)
    5e22:	1b64      	subs	r4, r4, r5
    5e24:	10a4      	asrs	r4, r4, #2
    5e26:	42a6      	cmp	r6, r4
    5e28:	d105      	bne.n	5e36 <__libc_init_array+0x2e>
    5e2a:	bd70      	pop	{r4, r5, r6, pc}
    5e2c:	00b3      	lsls	r3, r6, #2
    5e2e:	58eb      	ldr	r3, [r5, r3]
    5e30:	4798      	blx	r3
    5e32:	3601      	adds	r6, #1
    5e34:	e7ee      	b.n	5e14 <__libc_init_array+0xc>
    5e36:	00b3      	lsls	r3, r6, #2
    5e38:	58eb      	ldr	r3, [r5, r3]
    5e3a:	4798      	blx	r3
    5e3c:	3601      	adds	r6, #1
    5e3e:	e7f2      	b.n	5e26 <__libc_init_array+0x1e>
    5e40:	0000614c 	.word	0x0000614c
    5e44:	0000614c 	.word	0x0000614c
    5e48:	0000614c 	.word	0x0000614c
    5e4c:	00006158 	.word	0x00006158

00005e50 <free>:
    5e50:	b510      	push	{r4, lr}
    5e52:	4b03      	ldr	r3, [pc, #12]	; (5e60 <free+0x10>)
    5e54:	0001      	movs	r1, r0
    5e56:	6818      	ldr	r0, [r3, #0]
    5e58:	f000 f816 	bl	5e88 <_free_r>
    5e5c:	bd10      	pop	{r4, pc}
    5e5e:	46c0      	nop			; (mov r8, r8)
    5e60:	20000008 	.word	0x20000008

00005e64 <memcpy>:
    5e64:	2300      	movs	r3, #0
    5e66:	b510      	push	{r4, lr}
    5e68:	429a      	cmp	r2, r3
    5e6a:	d100      	bne.n	5e6e <memcpy+0xa>
    5e6c:	bd10      	pop	{r4, pc}
    5e6e:	5ccc      	ldrb	r4, [r1, r3]
    5e70:	54c4      	strb	r4, [r0, r3]
    5e72:	3301      	adds	r3, #1
    5e74:	e7f8      	b.n	5e68 <memcpy+0x4>

00005e76 <memset>:
    5e76:	0003      	movs	r3, r0
    5e78:	1882      	adds	r2, r0, r2
    5e7a:	4293      	cmp	r3, r2
    5e7c:	d100      	bne.n	5e80 <memset+0xa>
    5e7e:	4770      	bx	lr
    5e80:	7019      	strb	r1, [r3, #0]
    5e82:	3301      	adds	r3, #1
    5e84:	e7f9      	b.n	5e7a <memset+0x4>
	...

00005e88 <_free_r>:
    5e88:	b570      	push	{r4, r5, r6, lr}
    5e8a:	0005      	movs	r5, r0
    5e8c:	2900      	cmp	r1, #0
    5e8e:	d010      	beq.n	5eb2 <_free_r+0x2a>
    5e90:	1f0c      	subs	r4, r1, #4
    5e92:	6823      	ldr	r3, [r4, #0]
    5e94:	2b00      	cmp	r3, #0
    5e96:	da00      	bge.n	5e9a <_free_r+0x12>
    5e98:	18e4      	adds	r4, r4, r3
    5e9a:	0028      	movs	r0, r5
    5e9c:	f000 f83e 	bl	5f1c <__malloc_lock>
    5ea0:	4a1d      	ldr	r2, [pc, #116]	; (5f18 <_free_r+0x90>)
    5ea2:	6813      	ldr	r3, [r2, #0]
    5ea4:	2b00      	cmp	r3, #0
    5ea6:	d105      	bne.n	5eb4 <_free_r+0x2c>
    5ea8:	6063      	str	r3, [r4, #4]
    5eaa:	6014      	str	r4, [r2, #0]
    5eac:	0028      	movs	r0, r5
    5eae:	f000 f836 	bl	5f1e <__malloc_unlock>
    5eb2:	bd70      	pop	{r4, r5, r6, pc}
    5eb4:	42a3      	cmp	r3, r4
    5eb6:	d909      	bls.n	5ecc <_free_r+0x44>
    5eb8:	6821      	ldr	r1, [r4, #0]
    5eba:	1860      	adds	r0, r4, r1
    5ebc:	4283      	cmp	r3, r0
    5ebe:	d1f3      	bne.n	5ea8 <_free_r+0x20>
    5ec0:	6818      	ldr	r0, [r3, #0]
    5ec2:	685b      	ldr	r3, [r3, #4]
    5ec4:	1841      	adds	r1, r0, r1
    5ec6:	6021      	str	r1, [r4, #0]
    5ec8:	e7ee      	b.n	5ea8 <_free_r+0x20>
    5eca:	0013      	movs	r3, r2
    5ecc:	685a      	ldr	r2, [r3, #4]
    5ece:	2a00      	cmp	r2, #0
    5ed0:	d001      	beq.n	5ed6 <_free_r+0x4e>
    5ed2:	42a2      	cmp	r2, r4
    5ed4:	d9f9      	bls.n	5eca <_free_r+0x42>
    5ed6:	6819      	ldr	r1, [r3, #0]
    5ed8:	1858      	adds	r0, r3, r1
    5eda:	42a0      	cmp	r0, r4
    5edc:	d10b      	bne.n	5ef6 <_free_r+0x6e>
    5ede:	6820      	ldr	r0, [r4, #0]
    5ee0:	1809      	adds	r1, r1, r0
    5ee2:	1858      	adds	r0, r3, r1
    5ee4:	6019      	str	r1, [r3, #0]
    5ee6:	4282      	cmp	r2, r0
    5ee8:	d1e0      	bne.n	5eac <_free_r+0x24>
    5eea:	6810      	ldr	r0, [r2, #0]
    5eec:	6852      	ldr	r2, [r2, #4]
    5eee:	1841      	adds	r1, r0, r1
    5ef0:	6019      	str	r1, [r3, #0]
    5ef2:	605a      	str	r2, [r3, #4]
    5ef4:	e7da      	b.n	5eac <_free_r+0x24>
    5ef6:	42a0      	cmp	r0, r4
    5ef8:	d902      	bls.n	5f00 <_free_r+0x78>
    5efa:	230c      	movs	r3, #12
    5efc:	602b      	str	r3, [r5, #0]
    5efe:	e7d5      	b.n	5eac <_free_r+0x24>
    5f00:	6821      	ldr	r1, [r4, #0]
    5f02:	1860      	adds	r0, r4, r1
    5f04:	4282      	cmp	r2, r0
    5f06:	d103      	bne.n	5f10 <_free_r+0x88>
    5f08:	6810      	ldr	r0, [r2, #0]
    5f0a:	6852      	ldr	r2, [r2, #4]
    5f0c:	1841      	adds	r1, r0, r1
    5f0e:	6021      	str	r1, [r4, #0]
    5f10:	6062      	str	r2, [r4, #4]
    5f12:	605c      	str	r4, [r3, #4]
    5f14:	e7ca      	b.n	5eac <_free_r+0x24>
    5f16:	46c0      	nop			; (mov r8, r8)
    5f18:	200004e8 	.word	0x200004e8

00005f1c <__malloc_lock>:
    5f1c:	4770      	bx	lr

00005f1e <__malloc_unlock>:
    5f1e:	4770      	bx	lr
    5f20:	0000025e 	.word	0x0000025e
    5f24:	00000254 	.word	0x00000254
    5f28:	00000280 	.word	0x00000280
    5f2c:	0000028c 	.word	0x0000028c
    5f30:	00000298 	.word	0x00000298
    5f34:	000002a4 	.word	0x000002a4
    5f38:	000002b0 	.word	0x000002b0
    5f3c:	000002bc 	.word	0x000002bc
    5f40:	000002c8 	.word	0x000002c8
    5f44:	000002d4 	.word	0x000002d4
    5f48:	000002e0 	.word	0x000002e0
    5f4c:	000002ec 	.word	0x000002ec
    5f50:	00000338 	.word	0x00000338
    5f54:	00000338 	.word	0x00000338
    5f58:	00000338 	.word	0x00000338
    5f5c:	000002f8 	.word	0x000002f8
    5f60:	00000304 	.word	0x00000304
    5f64:	00000338 	.word	0x00000338
    5f68:	00000338 	.word	0x00000338
    5f6c:	00000338 	.word	0x00000338
    5f70:	00000310 	.word	0x00000310
    5f74:	0000031e 	.word	0x0000031e
    5f78:	0000032a 	.word	0x0000032a
    5f7c:	0000051a 	.word	0x0000051a
    5f80:	00000546 	.word	0x00000546
    5f84:	00000558 	.word	0x00000558
    5f88:	00000530 	.word	0x00000530
    5f8c:	00000530 	.word	0x00000530
    5f90:	0000056c 	.word	0x0000056c
    5f94:	00000530 	.word	0x00000530
    5f98:	00000530 	.word	0x00000530
    5f9c:	00000530 	.word	0x00000530
    5fa0:	000005a2 	.word	0x000005a2
    5fa4:	00000530 	.word	0x00000530
    5fa8:	00000530 	.word	0x00000530
    5fac:	00000530 	.word	0x00000530
    5fb0:	00000530 	.word	0x00000530
    5fb4:	00000530 	.word	0x00000530
    5fb8:	00000530 	.word	0x00000530
    5fbc:	00000530 	.word	0x00000530
    5fc0:	000005b2 	.word	0x000005b2
    5fc4:	000005c6 	.word	0x000005c6
    5fc8:	000005da 	.word	0x000005da

00005fcc <_ZTV14ADF5610_Driver>:
	...
    5fd4:	00000115 00000119 682f2e2e 732f6c61     ........../hal/s
    5fe4:	682f6372 695f6c61 00632e6f 682f2e2e     rc/hal_io.c.../h
    5ff4:	732f6c61 682f6372 735f6c61 6d5f6970     al/src/hal_spi_m
    6004:	6e79735f 00632e63                       _sync.c.

0000600c <_usarts>:
	...

00006020 <_i2cms>:
	...

00006038 <_i2css>:
	...

00006048 <sercomspi_regs>:
    6048:	0020000c 00020000 00000000 01ff0009     .. .............
    6058:	00000000 682f2e2e 732f6c70 6f637265     ....../hpl/serco
    6068:	70682f6d 65735f6c 6d6f6372 0000632e     m/hpl_sercom.c..
    6078:	00004a25 00000804                       %J......

00006080 <_usb_ep_cfgs>:
    6080:	200004a8 00000000 00000040 20000468     ... ....@...h.. 
    6090:	00000000 00000040 20000428 00000000     ....@...(.. ....
    60a0:	00000040 00676f6c 00000000 00776f70     @...log.....pow.

000060b0 <TWO52>:
    60b0:	00000000 43300000 00000000 c3300000     ......0C......0.
    60c0:	00004adc 00004abe 00004a78 00004996     .J...J..xJ...I..
    60d0:	00004a78 00004ab0 00004a78 00004996     xJ...J..xJ...I..
    60e0:	00004abe 00004abe 00004ab0 00004996     .J...J...J...I..
    60f0:	0000498e 0000498e 0000498e 00004cf4     .I...I...I...L..
    6100:	0000533c 000051fc 000051fc 000051f8     <S...Q...Q...Q..
    6110:	00005314 00005314 00005306 000051f8     .S...S...S...Q..
    6120:	00005314 00005306 00005314 000051f8     .S...S...S...Q..
    6130:	0000531c 0000531c 0000531c 00005520     .S...S...S.. U..

00006140 <_init>:
    6140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6142:	46c0      	nop			; (mov r8, r8)
    6144:	bcf8      	pop	{r3, r4, r5, r6, r7}
    6146:	bc08      	pop	{r3}
    6148:	469e      	mov	lr, r3
    614a:	4770      	bx	lr

0000614c <__init_array_start>:
    614c:	000000dd 	.word	0x000000dd
    6150:	00000aa5 	.word	0x00000aa5
    6154:	00000bf9 	.word	0x00000bf9

00006158 <_fini>:
    6158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    615a:	46c0      	nop			; (mov r8, r8)
    615c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    615e:	bc08      	pop	{r3}
    6160:	469e      	mov	lr, r3
    6162:	4770      	bx	lr

00006164 <__fini_array_start>:
    6164:	000000b5 	.word	0x000000b5
