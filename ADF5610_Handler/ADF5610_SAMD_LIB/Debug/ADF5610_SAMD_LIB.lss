
ADF5610_SAMD_LIB.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000060f8  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000006c  20000000  000060f8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000494  20000070  00006168  0002006c  2**3
                  ALLOC
  3 .stack        00002004  20000504  000065fc  0002006c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
  6 .debug_info   0002cc2b  00000000  00000000  000200ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003945  00000000  00000000  0004cd18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000109e5  00000000  00000000  0005065d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000bf8  00000000  00000000  00061042  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000e48  00000000  00000000  00061c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001d5bd  00000000  00000000  00062a82  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00010811  00000000  00000000  0008003f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00091b07  00000000  00000000  00090850  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002610  00000000  00000000  00122358  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	08 25 00 20 1d 0b 00 00 19 0b 00 00 19 0b 00 00     .%. ............
	...
      2c:	19 0b 00 00 00 00 00 00 00 00 00 00 19 0b 00 00     ................
      3c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      4c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      5c:	69 26 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     i&..............
      6c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      7c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      8c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      9c:	19 0b 00 00 19 0b 00 00 19 0b 00 00 19 0b 00 00     ................
      ac:	19 0b 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000070 	.word	0x20000070
      d4:	00000000 	.word	0x00000000
      d8:	000060f8 	.word	0x000060f8

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000074 	.word	0x20000074
     108:	000060f8 	.word	0x000060f8
     10c:	000060f8 	.word	0x000060f8
     110:	00000000 	.word	0x00000000

00000114 <_ZN14ADF5610_DriverD1Ev>:
		 pll_started=false;
}

ADF5610_Driver::~ADF5610_Driver() {
	// TODO Auto-generated destructor stub
}
     114:	4770      	bx	lr
	...

00000118 <_ZN14ADF5610_DriverD0Ev>:
ADF5610_Driver::~ADF5610_Driver() {
     118:	b510      	push	{r4, lr}
     11a:	0004      	movs	r4, r0
}
     11c:	21d4      	movs	r1, #212	; 0xd4
     11e:	0049      	lsls	r1, r1, #1
     120:	4b01      	ldr	r3, [pc, #4]	; (128 <_ZN14ADF5610_DriverD0Ev+0x10>)
     122:	4798      	blx	r3
     124:	0020      	movs	r0, r4
     126:	bd10      	pop	{r4, pc}
     128:	00002683 	.word	0x00002683

0000012c <_Z41__static_initialization_and_destruction_0ii>:
	else
	{
		delay_ms(1);
	}
	
}
     12c:	b510      	push	{r4, lr}
     12e:	2801      	cmp	r0, #1
     130:	d000      	beq.n	134 <_Z41__static_initialization_and_destruction_0ii+0x8>
     132:	bd10      	pop	{r4, pc}
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <_Z41__static_initialization_and_destruction_0ii+0x24>)
     136:	4299      	cmp	r1, r3
     138:	d1fb      	bne.n	132 <_Z41__static_initialization_and_destruction_0ii+0x6>
static SPI_Syn_Class staticSPI(&SPI_0);
     13a:	4c06      	ldr	r4, [pc, #24]	; (154 <_Z41__static_initialization_and_destruction_0ii+0x28>)
     13c:	4906      	ldr	r1, [pc, #24]	; (158 <_Z41__static_initialization_and_destruction_0ii+0x2c>)
     13e:	0020      	movs	r0, r4
     140:	4b06      	ldr	r3, [pc, #24]	; (15c <_Z41__static_initialization_and_destruction_0ii+0x30>)
     142:	4798      	blx	r3
     144:	4a06      	ldr	r2, [pc, #24]	; (160 <_Z41__static_initialization_and_destruction_0ii+0x34>)
     146:	4907      	ldr	r1, [pc, #28]	; (164 <_Z41__static_initialization_and_destruction_0ii+0x38>)
     148:	0020      	movs	r0, r4
     14a:	4b07      	ldr	r3, [pc, #28]	; (168 <_Z41__static_initialization_and_destruction_0ii+0x3c>)
     14c:	4798      	blx	r3
}
     14e:	e7f0      	b.n	132 <_Z41__static_initialization_and_destruction_0ii+0x6>
     150:	0000ffff 	.word	0x0000ffff
     154:	2000008c 	.word	0x2000008c
     158:	200004ec 	.word	0x200004ec
     15c:	00000c6d 	.word	0x00000c6d
     160:	20000000 	.word	0x20000000
     164:	00000c79 	.word	0x00000c79
     168:	00002675 	.word	0x00002675

0000016c <_ZN14ADF5610_DriverC1Ev>:
ADF5610_Driver::ADF5610_Driver() {
     16c:	b530      	push	{r4, r5, lr}
     16e:	4b16      	ldr	r3, [pc, #88]	; (1c8 <_ZN14ADF5610_DriverC1Ev+0x5c>)
     170:	3308      	adds	r3, #8
     172:	6003      	str	r3, [r0, #0]
	 current_frequency=3600;
     174:	2200      	movs	r2, #0
     176:	4b15      	ldr	r3, [pc, #84]	; (1cc <_ZN14ADF5610_DriverC1Ev+0x60>)
     178:	6082      	str	r2, [r0, #8]
     17a:	60c3      	str	r3, [r0, #12]
		 buffer32=0;
     17c:	2300      	movs	r3, #0
     17e:	229e      	movs	r2, #158	; 0x9e
     180:	0052      	lsls	r2, r2, #1
     182:	5083      	str	r3, [r0, r2]
		 dir=1;
     184:	2101      	movs	r1, #1
     186:	321c      	adds	r2, #28
     188:	5081      	str	r1, [r0, r2]
		 spi=&staticSPI;
     18a:	4a11      	ldr	r2, [pc, #68]	; (1d0 <_ZN14ADF5610_DriverC1Ev+0x64>)
     18c:	6102      	str	r2, [r0, #16]
		 is_locked=false;
     18e:	22ae      	movs	r2, #174	; 0xae
     190:	0052      	lsls	r2, r2, #1
     192:	5483      	strb	r3, [r0, r2]
		 upper_limit=3602;
     194:	2400      	movs	r4, #0
     196:	4d0f      	ldr	r5, [pc, #60]	; (1d4 <_ZN14ADF5610_DriverC1Ev+0x68>)
     198:	6184      	str	r4, [r0, #24]
     19a:	61c5      	str	r5, [r0, #28]
		 lower_limit=3598;
     19c:	2400      	movs	r4, #0
     19e:	4d0e      	ldr	r5, [pc, #56]	; (1d8 <_ZN14ADF5610_DriverC1Ev+0x6c>)
     1a0:	6204      	str	r4, [r0, #32]
     1a2:	6245      	str	r5, [r0, #36]	; 0x24
		 step=1.0/1024.0;
     1a4:	0002      	movs	r2, r0
     1a6:	3249      	adds	r2, #73	; 0x49
     1a8:	32ff      	adds	r2, #255	; 0xff
     1aa:	2400      	movs	r4, #0
     1ac:	4d0b      	ldr	r5, [pc, #44]	; (1dc <_ZN14ADF5610_DriverC1Ev+0x70>)
     1ae:	6014      	str	r4, [r2, #0]
     1b0:	6055      	str	r5, [r2, #4]
		 target_frequency=current_frequency+step;
     1b2:	3208      	adds	r2, #8
     1b4:	2480      	movs	r4, #128	; 0x80
     1b6:	0624      	lsls	r4, r4, #24
     1b8:	4d04      	ldr	r5, [pc, #16]	; (1cc <_ZN14ADF5610_DriverC1Ev+0x60>)
     1ba:	6014      	str	r4, [r2, #0]
     1bc:	6055      	str	r5, [r2, #4]
		 pll_started=false;
     1be:	2276      	movs	r2, #118	; 0x76
     1c0:	32ff      	adds	r2, #255	; 0xff
     1c2:	5483      	strb	r3, [r0, r2]
}
     1c4:	bd30      	pop	{r4, r5, pc}
     1c6:	46c0      	nop			; (mov r8, r8)
     1c8:	00005f58 	.word	0x00005f58
     1cc:	40ac2000 	.word	0x40ac2000
     1d0:	2000008c 	.word	0x2000008c
     1d4:	40ac2400 	.word	0x40ac2400
     1d8:	40ac1c00 	.word	0x40ac1c00
     1dc:	3f500000 	.word	0x3f500000

000001e0 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm>:
void ADF5610_Driver::ConvertU32FourByteArray(uint8_t *array,uint32_t  data){
     1e0:	b510      	push	{r4, lr}
	for (int i =0;i<4;i++){
     1e2:	2000      	movs	r0, #0
     1e4:	2803      	cmp	r0, #3
     1e6:	dc07      	bgt.n	1f8 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x18>
		array[i]=(uint8_t)((data>>((3-i)*8)&0xff));
     1e8:	2303      	movs	r3, #3
     1ea:	1a1b      	subs	r3, r3, r0
     1ec:	00db      	lsls	r3, r3, #3
     1ee:	0014      	movs	r4, r2
     1f0:	40dc      	lsrs	r4, r3
     1f2:	540c      	strb	r4, [r1, r0]
	for (int i =0;i<4;i++){
     1f4:	3001      	adds	r0, #1
     1f6:	e7f5      	b.n	1e4 <_ZN14ADF5610_Driver23ConvertU32FourByteArrayEPhm+0x4>
}
     1f8:	bd10      	pop	{r4, pc}
	...

000001fc <_ZN14ADF5610_Driver13ReadRegistersEh>:
void ADF5610_Driver::ReadRegisters(uint8_t index) {
     1fc:	b570      	push	{r4, r5, r6, lr}
     1fe:	0004      	movs	r4, r0
     200:	000d      	movs	r5, r1
	spi->SetCS(false);
     202:	2100      	movs	r1, #0
     204:	6900      	ldr	r0, [r0, #16]
     206:	4e20      	ldr	r6, [pc, #128]	; (288 <_ZN14ADF5610_Driver13ReadRegistersEh+0x8c>)
     208:	47b0      	blx	r6
	to_send[0]=0;
     20a:	2300      	movs	r3, #0
     20c:	22b8      	movs	r2, #184	; 0xb8
     20e:	0052      	lsls	r2, r2, #1
     210:	54a3      	strb	r3, [r4, r2]
	to_send[1]=0;
     212:	2272      	movs	r2, #114	; 0x72
     214:	32ff      	adds	r2, #255	; 0xff
     216:	54a3      	strb	r3, [r4, r2]
	to_send[2]=index;
     218:	3201      	adds	r2, #1
     21a:	54a5      	strb	r5, [r4, r2]
	to_send[3]=0;
     21c:	2274      	movs	r2, #116	; 0x74
     21e:	32ff      	adds	r2, #255	; 0xff
     220:	54a3      	strb	r3, [r4, r2]
	spi->Write(to_send,4);
     222:	0021      	movs	r1, r4
     224:	3171      	adds	r1, #113	; 0x71
     226:	31ff      	adds	r1, #255	; 0xff
     228:	3a70      	subs	r2, #112	; 0x70
     22a:	3aff      	subs	r2, #255	; 0xff
     22c:	6920      	ldr	r0, [r4, #16]
     22e:	4b17      	ldr	r3, [pc, #92]	; (28c <_ZN14ADF5610_Driver13ReadRegistersEh+0x90>)
     230:	4798      	blx	r3
	spi->SetCS(true);
     232:	2101      	movs	r1, #1
     234:	6920      	ldr	r0, [r4, #16]
     236:	47b0      	blx	r6
	delay_ms(1);
     238:	2001      	movs	r0, #1
     23a:	4b15      	ldr	r3, [pc, #84]	; (290 <_ZN14ADF5610_Driver13ReadRegistersEh+0x94>)
     23c:	4798      	blx	r3
	spi->SetCS(false);
     23e:	2100      	movs	r1, #0
     240:	6920      	ldr	r0, [r4, #16]
     242:	47b0      	blx	r6
	spi->Read((uint8_t*)&recibido32,4);
     244:	0021      	movs	r1, r4
     246:	3169      	adds	r1, #105	; 0x69
     248:	31ff      	adds	r1, #255	; 0xff
     24a:	2204      	movs	r2, #4
     24c:	6920      	ldr	r0, [r4, #16]
     24e:	4b11      	ldr	r3, [pc, #68]	; (294 <_ZN14ADF5610_Driver13ReadRegistersEh+0x98>)
     250:	4798      	blx	r3
	RegRead[index]=((recibido32&(0x000000FF))<<24)|((recibido32&(0x0000FF00))<<8);
     252:	23b4      	movs	r3, #180	; 0xb4
     254:	005b      	lsls	r3, r3, #1
     256:	58e2      	ldr	r2, [r4, r3]
     258:	0613      	lsls	r3, r2, #24
     25a:	0211      	lsls	r1, r2, #8
     25c:	20ff      	movs	r0, #255	; 0xff
     25e:	0400      	lsls	r0, r0, #16
     260:	4001      	ands	r1, r0
     262:	430b      	orrs	r3, r1
	RegRead[index]|=((recibido32&(0xFF000000))>>24)|((recibido32&(0x00FF0000))>>8);
     264:	0e11      	lsrs	r1, r2, #24
     266:	0a12      	lsrs	r2, r2, #8
     268:	20ff      	movs	r0, #255	; 0xff
     26a:	0200      	lsls	r0, r0, #8
     26c:	4002      	ands	r2, r0
     26e:	430a      	orrs	r2, r1
     270:	4313      	orrs	r3, r2
	RegRead[index]>>=7;
     272:	09db      	lsrs	r3, r3, #7
	bitClear(RegRead[index],24);
     274:	4a08      	ldr	r2, [pc, #32]	; (298 <_ZN14ADF5610_Driver13ReadRegistersEh+0x9c>)
     276:	4013      	ands	r3, r2
     278:	350a      	adds	r5, #10
     27a:	00ad      	lsls	r5, r5, #2
     27c:	512b      	str	r3, [r5, r4]
	spi->SetCS(true);
     27e:	6920      	ldr	r0, [r4, #16]
     280:	2101      	movs	r1, #1
     282:	47b0      	blx	r6
}
     284:	bd70      	pop	{r4, r5, r6, pc}
     286:	46c0      	nop			; (mov r8, r8)
     288:	00000cf5 	.word	0x00000cf5
     28c:	00000cb5 	.word	0x00000cb5
     290:	00000f81 	.word	0x00000f81
     294:	00000cd5 	.word	0x00000cd5
     298:	feffffff 	.word	0xfeffffff

0000029c <_ZN14ADF5610_Driver8IsLockedEv>:
bool ADF5610_Driver::IsLocked(void){
     29c:	b530      	push	{r4, r5, lr}
     29e:	b083      	sub	sp, #12
     2a0:	0005      	movs	r5, r0
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
     2a2:	a801      	add	r0, sp, #4
     2a4:	4b15      	ldr	r3, [pc, #84]	; (2fc <_ZN14ADF5610_Driver8IsLockedEv+0x60>)
     2a6:	4798      	blx	r3
	return tmp;
}

static inline hri_port_dir_reg_t hri_port_read_DIR_reg(const void *const hw, uint8_t submodule_index)
{
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
     2a8:	23c0      	movs	r3, #192	; 0xc0
     2aa:	05db      	lsls	r3, r3, #23
     2ac:	681c      	ldr	r4, [r3, #0]
	return tmp;
}

static inline hri_port_in_reg_t hri_port_read_IN_reg(const void *const hw, uint8_t submodule_index)
{
	return ((Port *)hw)->Group[submodule_index].IN.reg;
     2ae:	4a14      	ldr	r2, [pc, #80]	; (300 <_ZN14ADF5610_Driver8IsLockedEv+0x64>)
     2b0:	6a12      	ldr	r2, [r2, #32]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
     2b2:	691b      	ldr	r3, [r3, #16]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
     2b4:	4053      	eors	r3, r2
     2b6:	401c      	ands	r4, r3
     2b8:	4054      	eors	r4, r2

	CRITICAL_SECTION_LEAVE();
     2ba:	a801      	add	r0, sp, #4
     2bc:	4b11      	ldr	r3, [pc, #68]	; (304 <_ZN14ADF5610_Driver8IsLockedEv+0x68>)
     2be:	4798      	blx	r3
	if (gpio_get_pin_level(PA06)){
     2c0:	0663      	lsls	r3, r4, #25
     2c2:	d508      	bpl.n	2d6 <_ZN14ADF5610_Driver8IsLockedEv+0x3a>
		is_locked = true;
     2c4:	2201      	movs	r2, #1
     2c6:	23ae      	movs	r3, #174	; 0xae
     2c8:	005b      	lsls	r3, r3, #1
     2ca:	54ea      	strb	r2, [r5, r3]
	return is_locked;
     2cc:	23ae      	movs	r3, #174	; 0xae
     2ce:	005b      	lsls	r3, r3, #1
     2d0:	5ce8      	ldrb	r0, [r5, r3]
}
     2d2:	b003      	add	sp, #12
     2d4:	bd30      	pop	{r4, r5, pc}
		ReadRegisters(18);
     2d6:	2112      	movs	r1, #18
     2d8:	0028      	movs	r0, r5
     2da:	4b0b      	ldr	r3, [pc, #44]	; (308 <_ZN14ADF5610_Driver8IsLockedEv+0x6c>)
     2dc:	4798      	blx	r3
		if ((bitRead(RegRead[18],1)== true)&&(bitRead(RegRead[18],2)== false))   // select lock/unlock
     2de:	2306      	movs	r3, #6
     2e0:	6f2a      	ldr	r2, [r5, #112]	; 0x70
     2e2:	4013      	ands	r3, r2
     2e4:	2b02      	cmp	r3, #2
     2e6:	d004      	beq.n	2f2 <_ZN14ADF5610_Driver8IsLockedEv+0x56>
			is_locked = false;
     2e8:	2200      	movs	r2, #0
     2ea:	23ae      	movs	r3, #174	; 0xae
     2ec:	005b      	lsls	r3, r3, #1
     2ee:	54ea      	strb	r2, [r5, r3]
     2f0:	e7ec      	b.n	2cc <_ZN14ADF5610_Driver8IsLockedEv+0x30>
			is_locked = true;
     2f2:	2201      	movs	r2, #1
     2f4:	335b      	adds	r3, #91	; 0x5b
     2f6:	33ff      	adds	r3, #255	; 0xff
     2f8:	54ea      	strb	r2, [r5, r3]
     2fa:	e7e7      	b.n	2cc <_ZN14ADF5610_Driver8IsLockedEv+0x30>
     2fc:	00000f51 	.word	0x00000f51
     300:	41004400 	.word	0x41004400
     304:	00000f5f 	.word	0x00000f5f
     308:	000001fd 	.word	0x000001fd

0000030c <_ZN14ADF5610_Driver17InitiateRegistersEv>:
  for (int i = 0; i < 23; i++) {
     30c:	2300      	movs	r3, #0
     30e:	e00e      	b.n	32e <_ZN14ADF5610_Driver17InitiateRegistersEv+0x22>
          RegIni[i] = 0x20;
     310:	001a      	movs	r2, r3
     312:	3238      	adds	r2, #56	; 0x38
     314:	0092      	lsls	r2, r2, #2
     316:	2120      	movs	r1, #32
     318:	5011      	str	r1, [r2, r0]
    RegWrite[i]=RegIni[i];
     31a:	001a      	movs	r2, r3
     31c:	3238      	adds	r2, #56	; 0x38
     31e:	0092      	lsls	r2, r2, #2
     320:	5811      	ldr	r1, [r2, r0]
     322:	001a      	movs	r2, r3
     324:	3220      	adds	r2, #32
     326:	0092      	lsls	r2, r2, #2
     328:	1882      	adds	r2, r0, r2
     32a:	6051      	str	r1, [r2, #4]
  for (int i = 0; i < 23; i++) {
     32c:	3301      	adds	r3, #1
     32e:	2b16      	cmp	r3, #22
     330:	dc6c      	bgt.n	40c <_ZN14ADF5610_Driver17InitiateRegistersEv+0x100>
    switch (i) {
     332:	d865      	bhi.n	400 <_ZN14ADF5610_Driver17InitiateRegistersEv+0xf4>
     334:	009a      	lsls	r2, r3, #2
     336:	4936      	ldr	r1, [pc, #216]	; (410 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x104>)
     338:	588a      	ldr	r2, [r1, r2]
     33a:	4697      	mov	pc, r2
        RegIni[i] = 0x2;
     33c:	001a      	movs	r2, r3
     33e:	3238      	adds	r2, #56	; 0x38
     340:	0092      	lsls	r2, r2, #2
     342:	2102      	movs	r1, #2
     344:	5011      	str	r1, [r2, r0]
        break;
     346:	e7e8      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x1;
     348:	001a      	movs	r2, r3
     34a:	3238      	adds	r2, #56	; 0x38
     34c:	0092      	lsls	r2, r2, #2
     34e:	2101      	movs	r1, #1
     350:	5011      	str	r1, [r2, r0]
        break;
     352:	e7e2      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x31;
     354:	001a      	movs	r2, r3
     356:	3238      	adds	r2, #56	; 0x38
     358:	0092      	lsls	r2, r2, #2
     35a:	2131      	movs	r1, #49	; 0x31
     35c:	5011      	str	r1, [r2, r0]
        break;
     35e:	e7dc      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xFD70A3;
     360:	001a      	movs	r2, r3
     362:	3238      	adds	r2, #56	; 0x38
     364:	0092      	lsls	r2, r2, #2
     366:	492b      	ldr	r1, [pc, #172]	; (414 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x108>)
     368:	5011      	str	r1, [r2, r0]
        break;
     36a:	e7d6      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x000;
     36c:	001a      	movs	r2, r3
     36e:	3238      	adds	r2, #56	; 0x38
     370:	0092      	lsls	r2, r2, #2
     372:	2100      	movs	r1, #0
     374:	5011      	str	r1, [r2, r0]
        break;
     376:	e7d0      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x2F4A;
     378:	001a      	movs	r2, r3
     37a:	3238      	adds	r2, #56	; 0x38
     37c:	0092      	lsls	r2, r2, #2
     37e:	4926      	ldr	r1, [pc, #152]	; (418 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x10c>)
     380:	5011      	str	r1, [r2, r0]
        break;
     382:	e7ca      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x214D;
     384:	001a      	movs	r2, r3
     386:	3238      	adds	r2, #56	; 0x38
     388:	0092      	lsls	r2, r2, #2
     38a:	4924      	ldr	r1, [pc, #144]	; (41c <_ZN14ADF5610_Driver17InitiateRegistersEv+0x110>)
     38c:	5011      	str	r1, [r2, r0]
        break;
     38e:	e7c4      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xC9BEFF;
     390:	001a      	movs	r2, r3
     392:	3238      	adds	r2, #56	; 0x38
     394:	0092      	lsls	r2, r2, #2
     396:	4922      	ldr	r1, [pc, #136]	; (420 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x114>)
     398:	5011      	str	r1, [r2, r0]
        break;
     39a:	e7be      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x3FFF;
     39c:	001a      	movs	r2, r3
     39e:	3238      	adds	r2, #56	; 0x38
     3a0:	0092      	lsls	r2, r2, #2
     3a2:	4920      	ldr	r1, [pc, #128]	; (424 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x118>)
     3a4:	5011      	str	r1, [r2, r0]
        break;
     3a6:	e7b8      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x2047;
     3a8:	001a      	movs	r2, r3
     3aa:	3238      	adds	r2, #56	; 0x38
     3ac:	0092      	lsls	r2, r2, #2
     3ae:	491e      	ldr	r1, [pc, #120]	; (428 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x11c>)
     3b0:	5011      	str	r1, [r2, r0]
        break;
     3b2:	e7b2      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0xF8061;
     3b4:	001a      	movs	r2, r3
     3b6:	3238      	adds	r2, #56	; 0x38
     3b8:	0092      	lsls	r2, r2, #2
     3ba:	491c      	ldr	r1, [pc, #112]	; (42c <_ZN14ADF5610_Driver17InitiateRegistersEv+0x120>)
     3bc:	5011      	str	r1, [r2, r0]
        break;
     3be:	e7ac      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x081;
     3c0:	001a      	movs	r2, r3
     3c2:	3238      	adds	r2, #56	; 0x38
     3c4:	0092      	lsls	r2, r2, #2
     3c6:	2181      	movs	r1, #129	; 0x81
     3c8:	5011      	str	r1, [r2, r0]
        break;
     3ca:	e7a6      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
		RegIni[i] = 0x020;
     3cc:	001a      	movs	r2, r3
     3ce:	3238      	adds	r2, #56	; 0x38
     3d0:	0092      	lsls	r2, r2, #2
     3d2:	2120      	movs	r1, #32
     3d4:	5011      	str	r1, [r2, r0]
		break;
     3d6:	e7a0      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = RegIni[5];
     3d8:	22f4      	movs	r2, #244	; 0xf4
     3da:	5881      	ldr	r1, [r0, r2]
     3dc:	001a      	movs	r2, r3
     3de:	3238      	adds	r2, #56	; 0x38
     3e0:	0092      	lsls	r2, r2, #2
     3e2:	5011      	str	r1, [r2, r0]
         break;
     3e4:	e799      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
       RegIni[i] = (0x01<<3)|(0x00<<7)|(0x07<<9)|(0x03<<12)|(0x01<<15);
     3e6:	001a      	movs	r2, r3
     3e8:	3238      	adds	r2, #56	; 0x38
     3ea:	0092      	lsls	r2, r2, #2
     3ec:	4910      	ldr	r1, [pc, #64]	; (430 <_ZN14ADF5610_Driver17InitiateRegistersEv+0x124>)
     3ee:	5011      	str	r1, [r2, r0]
         break;
     3f0:	e793      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
         RegIni[i] =(0x02<<3)|(0x07<<7)|(0x00);
     3f2:	001a      	movs	r2, r3
     3f4:	3238      	adds	r2, #56	; 0x38
     3f6:	0092      	lsls	r2, r2, #2
     3f8:	21e4      	movs	r1, #228	; 0xe4
     3fa:	0089      	lsls	r1, r1, #2
     3fc:	5011      	str	r1, [r2, r0]
         break;
     3fe:	e78c      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
        RegIni[i] = 0x0;
     400:	001a      	movs	r2, r3
     402:	3238      	adds	r2, #56	; 0x38
     404:	0092      	lsls	r2, r2, #2
     406:	2100      	movs	r1, #0
     408:	5011      	str	r1, [r2, r0]
        break;
     40a:	e786      	b.n	31a <_ZN14ADF5610_Driver17InitiateRegistersEv+0xe>
}
     40c:	4770      	bx	lr
     40e:	46c0      	nop			; (mov r8, r8)
     410:	00005eac 	.word	0x00005eac
     414:	00fd70a3 	.word	0x00fd70a3
     418:	00002f4a 	.word	0x00002f4a
     41c:	0000214d 	.word	0x0000214d
     420:	00c9beff 	.word	0x00c9beff
     424:	00003fff 	.word	0x00003fff
     428:	00002047 	.word	0x00002047
     42c:	000f8061 	.word	0x000f8061
     430:	0000be08 	.word	0x0000be08

00000434 <_ZN14ADF5610_Driver16ReadAllRegistersEv>:
void ADF5610_Driver::ReadAllRegisters(){
     434:	b570      	push	{r4, r5, r6, lr}
     436:	0005      	movs	r5, r0
  for (int i=0; i<=19;i++){
     438:	2400      	movs	r4, #0
     43a:	2c13      	cmp	r4, #19
     43c:	dc05      	bgt.n	44a <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x16>
    ReadRegisters((uint8_t)i);
     43e:	b2e1      	uxtb	r1, r4
     440:	0028      	movs	r0, r5
     442:	4b02      	ldr	r3, [pc, #8]	; (44c <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x18>)
     444:	4798      	blx	r3
  for (int i=0; i<=19;i++){
     446:	3401      	adds	r4, #1
     448:	e7f7      	b.n	43a <_ZN14ADF5610_Driver16ReadAllRegistersEv+0x6>
}
     44a:	bd70      	pop	{r4, r5, r6, pc}
     44c:	000001fd 	.word	0x000001fd

00000450 <_ZN14ADF5610_Driver18CalculateVCOValuesEv>:
void ADF5610_Driver::CalculateVCOValues(void){
     450:	b5f0      	push	{r4, r5, r6, r7, lr}
     452:	46ce      	mov	lr, r9
     454:	4647      	mov	r7, r8
     456:	b580      	push	{r7, lr}
     458:	b083      	sub	sp, #12
     45a:	0006      	movs	r6, r0
	 aux_register=0;
     45c:	2200      	movs	r2, #0
     45e:	23b0      	movs	r3, #176	; 0xb0
     460:	005b      	lsls	r3, r3, #1
     462:	50c2      	str	r2, [r0, r3]
		double  fDIV=target_frequency;
     464:	0004      	movs	r4, r0
     466:	3451      	adds	r4, #81	; 0x51
     468:	34ff      	adds	r4, #255	; 0xff
		int k=floor(log((14600)/(fDIV))/log(2));
     46a:	4b96      	ldr	r3, [pc, #600]	; (6c4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x274>)
     46c:	4699      	mov	r9, r3
     46e:	6822      	ldr	r2, [r4, #0]
     470:	6863      	ldr	r3, [r4, #4]
     472:	2000      	movs	r0, #0
     474:	4994      	ldr	r1, [pc, #592]	; (6c8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x278>)
     476:	47c8      	blx	r9
     478:	4b94      	ldr	r3, [pc, #592]	; (6cc <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x27c>)
     47a:	4798      	blx	r3
     47c:	4a94      	ldr	r2, [pc, #592]	; (6d0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x280>)
     47e:	4b95      	ldr	r3, [pc, #596]	; (6d4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x284>)
     480:	47c8      	blx	r9
     482:	4b95      	ldr	r3, [pc, #596]	; (6d8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x288>)
     484:	4798      	blx	r3
     486:	4b95      	ldr	r3, [pc, #596]	; (6dc <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x28c>)
     488:	4798      	blx	r3
		uint8_t kDIV=7-(uint8_t)(k);
     48a:	2307      	movs	r3, #7
     48c:	1a1b      	subs	r3, r3, r0
     48e:	b2df      	uxtb	r7, r3
	  double fVCO = 7300*((target_frequency*pow(2, k))/(14600)); //VCO
     490:	6823      	ldr	r3, [r4, #0]
     492:	6864      	ldr	r4, [r4, #4]
     494:	9300      	str	r3, [sp, #0]
     496:	9401      	str	r4, [sp, #4]
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
     498:	4b91      	ldr	r3, [pc, #580]	; (6e0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x290>)
     49a:	4798      	blx	r3
     49c:	0002      	movs	r2, r0
     49e:	000b      	movs	r3, r1
     4a0:	2000      	movs	r0, #0
     4a2:	2180      	movs	r1, #128	; 0x80
     4a4:	05c9      	lsls	r1, r1, #23
     4a6:	4c8f      	ldr	r4, [pc, #572]	; (6e4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x294>)
     4a8:	47a0      	blx	r4
     4aa:	0002      	movs	r2, r0
     4ac:	000b      	movs	r3, r1
     4ae:	498e      	ldr	r1, [pc, #568]	; (6e8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x298>)
     4b0:	4688      	mov	r8, r1
     4b2:	9800      	ldr	r0, [sp, #0]
     4b4:	9901      	ldr	r1, [sp, #4]
     4b6:	47c0      	blx	r8
     4b8:	2200      	movs	r2, #0
     4ba:	4b83      	ldr	r3, [pc, #524]	; (6c8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x278>)
     4bc:	47c8      	blx	r9
     4be:	2200      	movs	r2, #0
     4c0:	4b8a      	ldr	r3, [pc, #552]	; (6ec <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x29c>)
     4c2:	47c0      	blx	r8
     4c4:	9000      	str	r0, [sp, #0]
     4c6:	9101      	str	r1, [sp, #4]
	  if (fVCO<4000){
     4c8:	2200      	movs	r2, #0
     4ca:	4b89      	ldr	r3, [pc, #548]	; (6f0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a0>)
     4cc:	4c89      	ldr	r4, [pc, #548]	; (6f4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a4>)
     4ce:	47a0      	blx	r4
     4d0:	2800      	cmp	r0, #0
     4d2:	d029      	beq.n	528 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xd8>
		fPD = 1*fX; //Phase detector frequency
     4d4:	2200      	movs	r2, #0
     4d6:	4b88      	ldr	r3, [pc, #544]	; (6f8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a8>)
 N = fVCO /fPD;   // Calculate N
     4d8:	9800      	ldr	r0, [sp, #0]
     4da:	9901      	ldr	r1, [sp, #4]
     4dc:	4c79      	ldr	r4, [pc, #484]	; (6c4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x274>)
     4de:	47a0      	blx	r4
     4e0:	0004      	movs	r4, r0
     4e2:	000d      	movs	r5, r1
     4e4:	0033      	movs	r3, r6
     4e6:	3391      	adds	r3, #145	; 0x91
     4e8:	33ff      	adds	r3, #255	; 0xff
     4ea:	601c      	str	r4, [r3, #0]
     4ec:	605d      	str	r5, [r3, #4]
  N_Int = floor(fVCO/fPD);   // N= 50 for 5 GHz   // Turn N into integer
     4ee:	4b7a      	ldr	r3, [pc, #488]	; (6d8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x288>)
     4f0:	4798      	blx	r3
     4f2:	0002      	movs	r2, r0
     4f4:	000b      	movs	r3, r1
     4f6:	0031      	movs	r1, r6
     4f8:	3189      	adds	r1, #137	; 0x89
     4fa:	31ff      	adds	r1, #255	; 0xff
     4fc:	600a      	str	r2, [r1, #0]
     4fe:	604b      	str	r3, [r1, #4]
 F_Frac1x = (N - N_Int) * pow(2, 24);   // Calculate Frac1 (N remainder * 2^24)
     500:	0020      	movs	r0, r4
     502:	0029      	movs	r1, r5
     504:	4c7d      	ldr	r4, [pc, #500]	; (6fc <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2ac>)
     506:	47a0      	blx	r4
     508:	2200      	movs	r2, #0
     50a:	4b7d      	ldr	r3, [pc, #500]	; (700 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2b0>)
     50c:	4c76      	ldr	r4, [pc, #472]	; (6e8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x298>)
     50e:	47a0      	blx	r4
     510:	0033      	movs	r3, r6
     512:	3399      	adds	r3, #153	; 0x99
     514:	33ff      	adds	r3, #255	; 0xff
     516:	6018      	str	r0, [r3, #0]
     518:	6059      	str	r1, [r3, #4]
   F_FracN = (uint32_t)F_Frac1x;  // turn Frac1 into an integer
     51a:	4b7a      	ldr	r3, [pc, #488]	; (704 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2b4>)
     51c:	4798      	blx	r3
     51e:	23d0      	movs	r3, #208	; 0xd0
     520:	005b      	lsls	r3, r3, #1
     522:	50f0      	str	r0, [r6, r3]
  for (int i = 0; i < 23; i++) {
     524:	2400      	movs	r4, #0
     526:	e011      	b.n	54c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfc>
		fPD = 2*fX; //Phase detector frequency
     528:	2200      	movs	r2, #0
     52a:	4b77      	ldr	r3, [pc, #476]	; (708 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2b8>)
     52c:	e7d4      	b.n	4d8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x88>
        RegWrite[i] =(uint32_t)(0x00FFFFFF&((long)N_Int));  //Fixed value (Phase control not needed)
     52e:	0033      	movs	r3, r6
     530:	3389      	adds	r3, #137	; 0x89
     532:	33ff      	adds	r3, #255	; 0xff
     534:	6818      	ldr	r0, [r3, #0]
     536:	6859      	ldr	r1, [r3, #4]
     538:	4b68      	ldr	r3, [pc, #416]	; (6dc <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x28c>)
     53a:	4798      	blx	r3
     53c:	0200      	lsls	r0, r0, #8
     53e:	0a00      	lsrs	r0, r0, #8
     540:	0023      	movs	r3, r4
     542:	3320      	adds	r3, #32
     544:	009b      	lsls	r3, r3, #2
     546:	18f3      	adds	r3, r6, r3
     548:	6058      	str	r0, [r3, #4]
  for (int i = 0; i < 23; i++) {
     54a:	3401      	adds	r4, #1
     54c:	2c16      	cmp	r4, #22
     54e:	dd00      	ble.n	552 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x102>
     550:	e0b3      	b.n	6ba <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x26a>
    switch (i) {
     552:	1ee3      	subs	r3, r4, #3
     554:	2b13      	cmp	r3, #19
     556:	d8f8      	bhi.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
     558:	009b      	lsls	r3, r3, #2
     55a:	4a6c      	ldr	r2, [pc, #432]	; (70c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2bc>)
     55c:	58d3      	ldr	r3, [r2, r3]
     55e:	469f      	mov	pc, r3
        RegWrite[i] =(uint32_t)(0x00FFFFFF&(F_FracN));
     560:	23d0      	movs	r3, #208	; 0xd0
     562:	005b      	lsls	r3, r3, #1
     564:	58f2      	ldr	r2, [r6, r3]
     566:	0212      	lsls	r2, r2, #8
     568:	0a12      	lsrs	r2, r2, #8
     56a:	0023      	movs	r3, r4
     56c:	3320      	adds	r3, #32
     56e:	009b      	lsls	r3, r3, #2
     570:	18f3      	adds	r3, r6, r3
     572:	605a      	str	r2, [r3, #4]
        break;
     574:	e7e9      	b.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
		 ReadRegisters((uint8_t)0x10);
     576:	2110      	movs	r1, #16
     578:	0030      	movs	r0, r6
     57a:	4b65      	ldr	r3, [pc, #404]	; (710 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2c0>)
     57c:	4798      	blx	r3
		  for (int j=15;j>0;j--){
     57e:	230f      	movs	r3, #15
     580:	e013      	b.n	5aa <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x15a>
				   bitWrite(RegWrite[i], j, bitRead(RegRead[0x10],j-8));
     582:	2101      	movs	r1, #1
     584:	4099      	lsls	r1, r3
     586:	0022      	movs	r2, r4
     588:	3220      	adds	r2, #32
     58a:	0092      	lsls	r2, r2, #2
     58c:	18b2      	adds	r2, r6, r2
     58e:	6850      	ldr	r0, [r2, #4]
     590:	4388      	bics	r0, r1
     592:	6050      	str	r0, [r2, #4]
     594:	e008      	b.n	5a8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x158>
				   bitWrite(RegWrite[i], j, 0);
     596:	2101      	movs	r1, #1
     598:	4099      	lsls	r1, r3
     59a:	0022      	movs	r2, r4
     59c:	3220      	adds	r2, #32
     59e:	0092      	lsls	r2, r2, #2
     5a0:	18b2      	adds	r2, r6, r2
     5a2:	6850      	ldr	r0, [r2, #4]
     5a4:	4388      	bics	r0, r1
     5a6:	6050      	str	r0, [r2, #4]
		  for (int j=15;j>0;j--){
     5a8:	3b01      	subs	r3, #1
     5aa:	2b00      	cmp	r3, #0
     5ac:	dd12      	ble.n	5d4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x184>
			   if(j>7){
     5ae:	2b07      	cmp	r3, #7
     5b0:	ddf1      	ble.n	596 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x146>
				   bitWrite(RegWrite[i], j, bitRead(RegRead[0x10],j-8));
     5b2:	001a      	movs	r2, r3
     5b4:	3a08      	subs	r2, #8
     5b6:	6eb1      	ldr	r1, [r6, #104]	; 0x68
     5b8:	40d1      	lsrs	r1, r2
     5ba:	000a      	movs	r2, r1
     5bc:	07d2      	lsls	r2, r2, #31
     5be:	d5e0      	bpl.n	582 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x132>
     5c0:	2101      	movs	r1, #1
     5c2:	4099      	lsls	r1, r3
     5c4:	0022      	movs	r2, r4
     5c6:	3220      	adds	r2, #32
     5c8:	0092      	lsls	r2, r2, #2
     5ca:	18b2      	adds	r2, r6, r2
     5cc:	6850      	ldr	r0, [r2, #4]
     5ce:	4301      	orrs	r1, r0
     5d0:	6051      	str	r1, [r2, #4]
     5d2:	e7e9      	b.n	5a8 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x158>
		   bitWrite(RegWrite[i], 13,1);
     5d4:	0023      	movs	r3, r4
     5d6:	3320      	adds	r3, #32
     5d8:	009b      	lsls	r3, r3, #2
     5da:	18f3      	adds	r3, r6, r3
     5dc:	2280      	movs	r2, #128	; 0x80
     5de:	0192      	lsls	r2, r2, #6
     5e0:	6859      	ldr	r1, [r3, #4]
     5e2:	430a      	orrs	r2, r1
     5e4:	605a      	str	r2, [r3, #4]
     5e6:	e7b0      	b.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
        if (fVCO<4000){
     5e8:	2200      	movs	r2, #0
     5ea:	4b41      	ldr	r3, [pc, #260]	; (6f0 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a0>)
     5ec:	9800      	ldr	r0, [sp, #0]
     5ee:	9901      	ldr	r1, [sp, #4]
     5f0:	4d40      	ldr	r5, [pc, #256]	; (6f4 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2a4>)
     5f2:	47a8      	blx	r5
     5f4:	2800      	cmp	r0, #0
     5f6:	d008      	beq.n	60a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1ba>
          bitWrite(RegWrite[i], 19, 0);
     5f8:	0023      	movs	r3, r4
     5fa:	3320      	adds	r3, #32
     5fc:	009b      	lsls	r3, r3, #2
     5fe:	18f3      	adds	r3, r6, r3
     600:	4a44      	ldr	r2, [pc, #272]	; (714 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x2c4>)
     602:	6859      	ldr	r1, [r3, #4]
     604:	400a      	ands	r2, r1
     606:	605a      	str	r2, [r3, #4]
     608:	e79f      	b.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
          bitWrite(RegWrite[i], 19, 1);
     60a:	0023      	movs	r3, r4
     60c:	3320      	adds	r3, #32
     60e:	009b      	lsls	r3, r3, #2
     610:	18f3      	adds	r3, r6, r3
     612:	2280      	movs	r2, #128	; 0x80
     614:	0312      	lsls	r2, r2, #12
     616:	6859      	ldr	r1, [r3, #4]
     618:	430a      	orrs	r2, r1
     61a:	605a      	str	r2, [r3, #4]
     61c:	e795      	b.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
    	  aux_register=RegWrite[5];
     61e:	2398      	movs	r3, #152	; 0x98
     620:	58f2      	ldr	r2, [r6, r3]
     622:	33c8      	adds	r3, #200	; 0xc8
     624:	50f2      	str	r2, [r6, r3]
        RegWrite[i]=aux_register;
     626:	0023      	movs	r3, r4
     628:	3320      	adds	r3, #32
     62a:	009b      	lsls	r3, r3, #2
     62c:	18f3      	adds	r3, r6, r3
     62e:	605a      	str	r2, [r3, #4]
        break;
     630:	e78b      	b.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
        RegWrite[i]=RegIni[i];
     632:	0023      	movs	r3, r4
     634:	3338      	adds	r3, #56	; 0x38
     636:	009b      	lsls	r3, r3, #2
     638:	599a      	ldr	r2, [r3, r6]
     63a:	0023      	movs	r3, r4
     63c:	3320      	adds	r3, #32
     63e:	009b      	lsls	r3, r3, #2
     640:	18f3      	adds	r3, r6, r3
     642:	605a      	str	r2, [r3, #4]
        break;
     644:	e781      	b.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
    switch (i) {
     646:	2303      	movs	r3, #3
     648:	e022      	b.n	690 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x240>
					bitWrite(RegWrite[i], j, bitRead(VCOAdd,j-3));
     64a:	1ed9      	subs	r1, r3, #3
     64c:	2202      	movs	r2, #2
     64e:	410a      	asrs	r2, r1
     650:	07d2      	lsls	r2, r2, #31
     652:	d509      	bpl.n	668 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x218>
     654:	2101      	movs	r1, #1
     656:	4099      	lsls	r1, r3
     658:	0022      	movs	r2, r4
     65a:	3220      	adds	r2, #32
     65c:	0092      	lsls	r2, r2, #2
     65e:	18b2      	adds	r2, r6, r2
     660:	6850      	ldr	r0, [r2, #4]
     662:	4301      	orrs	r1, r0
     664:	6051      	str	r1, [r2, #4]
     666:	e012      	b.n	68e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x23e>
     668:	2101      	movs	r1, #1
     66a:	4099      	lsls	r1, r3
     66c:	0022      	movs	r2, r4
     66e:	3220      	adds	r2, #32
     670:	0092      	lsls	r2, r2, #2
     672:	18b2      	adds	r2, r6, r2
     674:	6850      	ldr	r0, [r2, #4]
     676:	4388      	bics	r0, r1
     678:	6050      	str	r0, [r2, #4]
     67a:	e008      	b.n	68e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x23e>
					bitWrite(RegWrite[i], j, bitRead(kDIV,j-7));
     67c:	2101      	movs	r1, #1
     67e:	4099      	lsls	r1, r3
     680:	0022      	movs	r2, r4
     682:	3220      	adds	r2, #32
     684:	0092      	lsls	r2, r2, #2
     686:	18b2      	adds	r2, r6, r2
     688:	6850      	ldr	r0, [r2, #4]
     68a:	4388      	bics	r0, r1
     68c:	6050      	str	r0, [r2, #4]
			for (int j=3;j<16;j++){
     68e:	3301      	adds	r3, #1
     690:	2b0f      	cmp	r3, #15
     692:	dd00      	ble.n	696 <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x246>
     694:	e759      	b.n	54a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0xfa>
				if (j<7){
     696:	2b06      	cmp	r3, #6
     698:	ddd7      	ble.n	64a <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x1fa>
					bitWrite(RegWrite[i], j, bitRead(kDIV,j-7));
     69a:	1fda      	subs	r2, r3, #7
     69c:	0039      	movs	r1, r7
     69e:	4111      	asrs	r1, r2
     6a0:	000a      	movs	r2, r1
     6a2:	07d2      	lsls	r2, r2, #31
     6a4:	d5ea      	bpl.n	67c <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x22c>
     6a6:	2101      	movs	r1, #1
     6a8:	4099      	lsls	r1, r3
     6aa:	0022      	movs	r2, r4
     6ac:	3220      	adds	r2, #32
     6ae:	0092      	lsls	r2, r2, #2
     6b0:	18b2      	adds	r2, r6, r2
     6b2:	6850      	ldr	r0, [r2, #4]
     6b4:	4301      	orrs	r1, r0
     6b6:	6051      	str	r1, [r2, #4]
     6b8:	e7e9      	b.n	68e <_ZN14ADF5610_Driver18CalculateVCOValuesEv+0x23e>
}
     6ba:	b003      	add	sp, #12
     6bc:	bc0c      	pop	{r2, r3}
     6be:	4690      	mov	r8, r2
     6c0:	4699      	mov	r9, r3
     6c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     6c4:	00004871 	.word	0x00004871
     6c8:	40cc8400 	.word	0x40cc8400
     6cc:	000027c5 	.word	0x000027c5
     6d0:	fefa39ef 	.word	0xfefa39ef
     6d4:	3fe62e42 	.word	0x3fe62e42
     6d8:	00002695 	.word	0x00002695
     6dc:	00005c45 	.word	0x00005c45
     6e0:	00005cad 	.word	0x00005cad
     6e4:	000028d5 	.word	0x000028d5
     6e8:	000050d9 	.word	0x000050d9
     6ec:	40bc8400 	.word	0x40bc8400
     6f0:	40af4000 	.word	0x40af4000
     6f4:	000041c5 	.word	0x000041c5
     6f8:	40490000 	.word	0x40490000
     6fc:	000055d9 	.word	0x000055d9
     700:	41700000 	.word	0x41700000
     704:	00004215 	.word	0x00004215
     708:	40590000 	.word	0x40590000
     70c:	00005f08 	.word	0x00005f08
     710:	000001fd 	.word	0x000001fd
     714:	fff7ffff 	.word	0xfff7ffff

00000718 <_ZN14ADF5610_Driver16SetNextFrequencyEv>:
{
     718:	b510      	push	{r4, lr}
  CalculateVCOValues();
     71a:	4b01      	ldr	r3, [pc, #4]	; (720 <_ZN14ADF5610_Driver16SetNextFrequencyEv+0x8>)
     71c:	4798      	blx	r3
}
     71e:	bd10      	pop	{r4, pc}
     720:	00000451 	.word	0x00000451

00000724 <_ZN14ADF5610_Driver6usleepEl>:
void ADF5610_Driver::usleep(long us){
     724:	b510      	push	{r4, lr}
     726:	0008      	movs	r0, r1
	if (us/1000>1)
     728:	4b07      	ldr	r3, [pc, #28]	; (748 <_ZN14ADF5610_Driver6usleepEl+0x24>)
     72a:	4299      	cmp	r1, r3
     72c:	dc03      	bgt.n	736 <_ZN14ADF5610_Driver6usleepEl+0x12>
		delay_ms(1);
     72e:	2001      	movs	r0, #1
     730:	4b06      	ldr	r3, [pc, #24]	; (74c <_ZN14ADF5610_Driver6usleepEl+0x28>)
     732:	4798      	blx	r3
}
     734:	bd10      	pop	{r4, pc}
		delay_ms(us/1000);
     736:	21fa      	movs	r1, #250	; 0xfa
     738:	0089      	lsls	r1, r1, #2
     73a:	4b05      	ldr	r3, [pc, #20]	; (750 <_ZN14ADF5610_Driver6usleepEl+0x2c>)
     73c:	4798      	blx	r3
     73e:	b280      	uxth	r0, r0
     740:	4b02      	ldr	r3, [pc, #8]	; (74c <_ZN14ADF5610_Driver6usleepEl+0x28>)
     742:	4798      	blx	r3
     744:	e7f6      	b.n	734 <_ZN14ADF5610_Driver6usleepEl+0x10>
     746:	46c0      	nop			; (mov r8, r8)
     748:	000007cf 	.word	0x000007cf
     74c:	00000f81 	.word	0x00000f81
     750:	00003fc1 	.word	0x00003fc1

00000754 <_ZN14ADF5610_Driver14WriteRegistersEh>:
void  ADF5610_Driver::WriteRegisters(uint8_t index) {
     754:	b570      	push	{r4, r5, r6, lr}
     756:	0004      	movs	r4, r0
     758:	000d      	movs	r5, r1
  local_index=0;
     75a:	2300      	movs	r3, #0
     75c:	22b2      	movs	r2, #178	; 0xb2
     75e:	0052      	lsls	r2, r2, #1
     760:	5483      	strb	r3, [r0, r2]
  buffer32 = 0;
     762:	3a28      	subs	r2, #40	; 0x28
     764:	5083      	str	r3, [r0, r2]
  if (index>19){
     766:	2913      	cmp	r1, #19
     768:	dd1a      	ble.n	7a0 <_ZN14ADF5610_Driver14WriteRegistersEh+0x4c>
    if(index>22){
     76a:	2916      	cmp	r1, #22
     76c:	dd13      	ble.n	796 <_ZN14ADF5610_Driver14WriteRegistersEh+0x42>
		if (index>23)
     76e:	2917      	cmp	r1, #23
     770:	dd0c      	ble.n	78c <_ZN14ADF5610_Driver14WriteRegistersEh+0x38>
			if (index==24)
     772:	2918      	cmp	r1, #24
     774:	d004      	beq.n	780 <_ZN14ADF5610_Driver14WriteRegistersEh+0x2c>
				 local_index=3;
     776:	2203      	movs	r2, #3
     778:	23b2      	movs	r3, #178	; 0xb2
     77a:	005b      	lsls	r3, r3, #1
     77c:	54c2      	strb	r2, [r0, r3]
     77e:	e012      	b.n	7a6 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
				local_index=4;
     780:	3a39      	subs	r2, #57	; 0x39
     782:	3aff      	subs	r2, #255	; 0xff
     784:	23b2      	movs	r3, #178	; 0xb2
     786:	005b      	lsls	r3, r3, #1
     788:	54c2      	strb	r2, [r0, r3]
     78a:	e00c      	b.n	7a6 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
			 local_index=3;
     78c:	2203      	movs	r2, #3
     78e:	23b2      	movs	r3, #178	; 0xb2
     790:	005b      	lsls	r3, r3, #1
     792:	54c2      	strb	r2, [r0, r3]
     794:	e007      	b.n	7a6 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
		 local_index=5;
     796:	2205      	movs	r2, #5
     798:	23b2      	movs	r3, #178	; 0xb2
     79a:	005b      	lsls	r3, r3, #1
     79c:	54c2      	strb	r2, [r0, r3]
     79e:	e002      	b.n	7a6 <_ZN14ADF5610_Driver14WriteRegistersEh+0x52>
    local_index=index;
     7a0:	23b2      	movs	r3, #178	; 0xb2
     7a2:	005b      	lsls	r3, r3, #1
     7a4:	54e1      	strb	r1, [r4, r3]
  switch (local_index){
     7a6:	23b2      	movs	r3, #178	; 0xb2
     7a8:	005b      	lsls	r3, r3, #1
     7aa:	5ce3      	ldrb	r3, [r4, r3]
     7ac:	3b10      	subs	r3, #16
     7ae:	b2db      	uxtb	r3, r3
     7b0:	2b03      	cmp	r3, #3
     7b2:	d800      	bhi.n	7b6 <_ZN14ADF5610_Driver14WriteRegistersEh+0x62>
}
     7b4:	bd70      	pop	{r4, r5, r6, pc}
		    spi->SetCS(false);
     7b6:	2100      	movs	r1, #0
     7b8:	6920      	ldr	r0, [r4, #16]
     7ba:	4e19      	ldr	r6, [pc, #100]	; (820 <_ZN14ADF5610_Driver14WriteRegistersEh+0xcc>)
     7bc:	47b0      	blx	r6
			  buffer32 =((uint32_t)local_index <<3)|(RegWrite[index]<<8);
     7be:	23b2      	movs	r3, #178	; 0xb2
     7c0:	005b      	lsls	r3, r3, #1
     7c2:	5ce2      	ldrb	r2, [r4, r3]
     7c4:	00d2      	lsls	r2, r2, #3
     7c6:	3520      	adds	r5, #32
     7c8:	00ad      	lsls	r5, r5, #2
     7ca:	1965      	adds	r5, r4, r5
     7cc:	686b      	ldr	r3, [r5, #4]
     7ce:	021b      	lsls	r3, r3, #8
     7d0:	431a      	orrs	r2, r3
     7d2:	239e      	movs	r3, #158	; 0x9e
     7d4:	005b      	lsls	r3, r3, #1
     7d6:	50e2      	str	r2, [r4, r3]
			  ConvertU32FourByteArray(to_send,buffer32);
     7d8:	0025      	movs	r5, r4
     7da:	3571      	adds	r5, #113	; 0x71
     7dc:	35ff      	adds	r5, #255	; 0xff
     7de:	0029      	movs	r1, r5
     7e0:	0020      	movs	r0, r4
     7e2:	4b10      	ldr	r3, [pc, #64]	; (824 <_ZN14ADF5610_Driver14WriteRegistersEh+0xd0>)
     7e4:	4798      	blx	r3
		          spi->Write(to_send,4);
     7e6:	2204      	movs	r2, #4
     7e8:	0029      	movs	r1, r5
     7ea:	6920      	ldr	r0, [r4, #16]
     7ec:	4b0e      	ldr	r3, [pc, #56]	; (828 <_ZN14ADF5610_Driver14WriteRegistersEh+0xd4>)
     7ee:	4798      	blx	r3
			 usleep(1);
     7f0:	2101      	movs	r1, #1
     7f2:	0020      	movs	r0, r4
     7f4:	4b0d      	ldr	r3, [pc, #52]	; (82c <_ZN14ADF5610_Driver14WriteRegistersEh+0xd8>)
     7f6:	4798      	blx	r3
		   spi->SetCS(true);
     7f8:	2101      	movs	r1, #1
     7fa:	6920      	ldr	r0, [r4, #16]
     7fc:	47b0      	blx	r6
		   if(!is_locked){
     7fe:	23ae      	movs	r3, #174	; 0xae
     800:	005b      	lsls	r3, r3, #1
     802:	5ce3      	ldrb	r3, [r4, r3]
     804:	2b00      	cmp	r3, #0
     806:	d1d5      	bne.n	7b4 <_ZN14ADF5610_Driver14WriteRegistersEh+0x60>
			   usleep(1);
     808:	2101      	movs	r1, #1
     80a:	0020      	movs	r0, r4
     80c:	4b07      	ldr	r3, [pc, #28]	; (82c <_ZN14ADF5610_Driver14WriteRegistersEh+0xd8>)
     80e:	4798      	blx	r3
			   ReadRegisters(local_index);
     810:	23b2      	movs	r3, #178	; 0xb2
     812:	005b      	lsls	r3, r3, #1
     814:	5ce1      	ldrb	r1, [r4, r3]
     816:	0020      	movs	r0, r4
     818:	4b05      	ldr	r3, [pc, #20]	; (830 <_ZN14ADF5610_Driver14WriteRegistersEh+0xdc>)
     81a:	4798      	blx	r3
}
     81c:	e7ca      	b.n	7b4 <_ZN14ADF5610_Driver14WriteRegistersEh+0x60>
     81e:	46c0      	nop			; (mov r8, r8)
     820:	00000cf5 	.word	0x00000cf5
     824:	000001e1 	.word	0x000001e1
     828:	00000cb5 	.word	0x00000cb5
     82c:	00000725 	.word	0x00000725
     830:	000001fd 	.word	0x000001fd

00000834 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj>:
void ADF5610_Driver::CompleteConfigurationFlow(unsigned int k){
     834:	b570      	push	{r4, r5, r6, lr}
     836:	0005      	movs	r5, r0
     838:	000c      	movs	r4, r1
     83a:	e00d      	b.n	858 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x24>
     83c:	2616      	movs	r6, #22
      for(int j=22;j>19;j--){
     83e:	2e13      	cmp	r6, #19
     840:	dd05      	ble.n	84e <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x1a>
        WriteRegisters(j);
     842:	b2f1      	uxtb	r1, r6
     844:	0028      	movs	r0, r5
     846:	4b0d      	ldr	r3, [pc, #52]	; (87c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     848:	4798      	blx	r3
      for(int j=22;j>19;j--){
     84a:	3e01      	subs	r6, #1
     84c:	e7f7      	b.n	83e <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0xa>
	   WriteRegisters(5);
     84e:	2105      	movs	r1, #5
     850:	0028      	movs	r0, r5
     852:	4b0a      	ldr	r3, [pc, #40]	; (87c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     854:	4798      	blx	r3
  for (int i=k; i<20;i++){
     856:	3401      	adds	r4, #1
     858:	2c13      	cmp	r4, #19
     85a:	dc06      	bgt.n	86a <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x36>
    if (i==5){
     85c:	2c05      	cmp	r4, #5
     85e:	d0ed      	beq.n	83c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x8>
      WriteRegisters(i);
     860:	b2e1      	uxtb	r1, r4
     862:	0028      	movs	r0, r5
     864:	4b05      	ldr	r3, [pc, #20]	; (87c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     866:	4798      	blx	r3
     868:	e7f5      	b.n	856 <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x22>
  WriteRegisters(3);
     86a:	2103      	movs	r1, #3
     86c:	0028      	movs	r0, r5
     86e:	4c03      	ldr	r4, [pc, #12]	; (87c <_ZN14ADF5610_Driver25CompleteConfigurationFlowEj+0x48>)
     870:	47a0      	blx	r4
  WriteRegisters(4);
     872:	2104      	movs	r1, #4
     874:	0028      	movs	r0, r5
     876:	47a0      	blx	r4
}
     878:	bd70      	pop	{r4, r5, r6, pc}
     87a:	46c0      	nop			; (mov r8, r8)
     87c:	00000755 	.word	0x00000755

00000880 <_ZN14ADF5610_Driver7InitPLLEv>:
bool  ADF5610_Driver::InitPLL(void){
     880:	b570      	push	{r4, r5, r6, lr}
     882:	0004      	movs	r4, r0
		CompleteConfigurationFlow(0);
     884:	2100      	movs	r1, #0
     886:	0020      	movs	r0, r4
     888:	4b0d      	ldr	r3, [pc, #52]	; (8c0 <_ZN14ADF5610_Driver7InitPLLEv+0x40>)
     88a:	4798      	blx	r3
		ReadAllRegisters();
     88c:	0020      	movs	r0, r4
     88e:	4b0d      	ldr	r3, [pc, #52]	; (8c4 <_ZN14ADF5610_Driver7InitPLLEv+0x44>)
     890:	4798      	blx	r3
		pll_started= bitRead(RegRead[1],1)&(bitRead(RegRead[1],0)==0);
     892:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     894:	0859      	lsrs	r1, r3, #1
     896:	2201      	movs	r2, #1
     898:	401a      	ands	r2, r3
     89a:	4253      	negs	r3, r2
     89c:	4153      	adcs	r3, r2
     89e:	400b      	ands	r3, r1
     8a0:	2576      	movs	r5, #118	; 0x76
     8a2:	35ff      	adds	r5, #255	; 0xff
     8a4:	5563      	strb	r3, [r4, r5]
		delay_ms(100);
     8a6:	2064      	movs	r0, #100	; 0x64
     8a8:	4b07      	ldr	r3, [pc, #28]	; (8c8 <_ZN14ADF5610_Driver7InitPLLEv+0x48>)
     8aa:	4798      	blx	r3
	}while((!IsLocked())|((!pll_started)|false));
     8ac:	0020      	movs	r0, r4
     8ae:	4b07      	ldr	r3, [pc, #28]	; (8cc <_ZN14ADF5610_Driver7InitPLLEv+0x4c>)
     8b0:	4798      	blx	r3
     8b2:	5d63      	ldrb	r3, [r4, r5]
	do{
     8b4:	2800      	cmp	r0, #0
     8b6:	d0e5      	beq.n	884 <_ZN14ADF5610_Driver7InitPLLEv+0x4>
     8b8:	2b00      	cmp	r3, #0
     8ba:	d0e3      	beq.n	884 <_ZN14ADF5610_Driver7InitPLLEv+0x4>
}
     8bc:	0018      	movs	r0, r3
     8be:	bd70      	pop	{r4, r5, r6, pc}
     8c0:	00000835 	.word	0x00000835
     8c4:	00000435 	.word	0x00000435
     8c8:	00000f81 	.word	0x00000f81
     8cc:	0000029d 	.word	0x0000029d

000008d0 <_ZN14ADF5610_Driver4InitEv>:
void ADF5610_Driver::Init(void){
     8d0:	b510      	push	{r4, lr}
     8d2:	0004      	movs	r4, r0
	spi=&staticSPI;
     8d4:	4805      	ldr	r0, [pc, #20]	; (8ec <_ZN14ADF5610_Driver4InitEv+0x1c>)
     8d6:	6120      	str	r0, [r4, #16]
	spi->Init();
     8d8:	4b05      	ldr	r3, [pc, #20]	; (8f0 <_ZN14ADF5610_Driver4InitEv+0x20>)
     8da:	4798      	blx	r3
	 InitiateRegisters();
     8dc:	0020      	movs	r0, r4
     8de:	4b05      	ldr	r3, [pc, #20]	; (8f4 <_ZN14ADF5610_Driver4InitEv+0x24>)
     8e0:	4798      	blx	r3
	 InitPLL();
     8e2:	0020      	movs	r0, r4
     8e4:	4b04      	ldr	r3, [pc, #16]	; (8f8 <_ZN14ADF5610_Driver4InitEv+0x28>)
     8e6:	4798      	blx	r3
}
     8e8:	bd10      	pop	{r4, pc}
     8ea:	46c0      	nop			; (mov r8, r8)
     8ec:	2000008c 	.word	0x2000008c
     8f0:	00000c7d 	.word	0x00000c7d
     8f4:	0000030d 	.word	0x0000030d
     8f8:	00000881 	.word	0x00000881

000008fc <_ZN14ADF5610_Driver11WriteSubVCOEv>:
void ADF5610_Driver::WriteSubVCO(void){
     8fc:	b570      	push	{r4, r5, r6, lr}
     8fe:	0005      	movs	r5, r0
	WriteRegisters(22);
     900:	2116      	movs	r1, #22
     902:	4c04      	ldr	r4, [pc, #16]	; (914 <_ZN14ADF5610_Driver11WriteSubVCOEv+0x18>)
     904:	47a0      	blx	r4
	WriteRegisters(20);
     906:	2114      	movs	r1, #20
     908:	0028      	movs	r0, r5
     90a:	47a0      	blx	r4
	WriteRegisters(5);
     90c:	2105      	movs	r1, #5
     90e:	0028      	movs	r0, r5
     910:	47a0      	blx	r4
}
     912:	bd70      	pop	{r4, r5, r6, pc}
     914:	00000755 	.word	0x00000755

00000918 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv>:
void ADF5610_Driver::ShortConfigurationFlow(void){
     918:	b570      	push	{r4, r5, r6, lr}
     91a:	0004      	movs	r4, r0
  WriteRegisters(8);
     91c:	2108      	movs	r1, #8
     91e:	4d06      	ldr	r5, [pc, #24]	; (938 <_ZN14ADF5610_Driver22ShortConfigurationFlowEv+0x20>)
     920:	47a8      	blx	r5
  WriteSubVCO();
     922:	0020      	movs	r0, r4
     924:	4b05      	ldr	r3, [pc, #20]	; (93c <_ZN14ADF5610_Driver22ShortConfigurationFlowEv+0x24>)
     926:	4798      	blx	r3
  WriteRegisters(3);
     928:	2103      	movs	r1, #3
     92a:	0020      	movs	r0, r4
     92c:	47a8      	blx	r5
  WriteRegisters(4);
     92e:	2104      	movs	r1, #4
     930:	0020      	movs	r0, r4
     932:	47a8      	blx	r5
}
     934:	bd70      	pop	{r4, r5, r6, pc}
     936:	46c0      	nop			; (mov r8, r8)
     938:	00000755 	.word	0x00000755
     93c:	000008fd 	.word	0x000008fd

00000940 <_ZN14ADF5610_Driver8SelfTestEh>:
bool	ADF5610_Driver::SelfTest(uint8_t cycles){
     940:	b5f0      	push	{r4, r5, r6, r7, lr}
     942:	46d6      	mov	lr, sl
     944:	464f      	mov	r7, r9
     946:	4646      	mov	r6, r8
     948:	b5c0      	push	{r6, r7, lr}
     94a:	b082      	sub	sp, #8
     94c:	0007      	movs	r7, r0
     94e:	4689      	mov	r9, r1
	dir=1;
     950:	2201      	movs	r2, #1
     952:	23ac      	movs	r3, #172	; 0xac
     954:	005b      	lsls	r3, r3, #1
     956:	50c2      	str	r2, [r0, r3]
	int errorCounter=0;
     958:	2300      	movs	r3, #0
     95a:	4698      	mov	r8, r3
     95c:	e028      	b.n	9b0 <_ZN14ADF5610_Driver8SelfTestEh+0x70>
				dir=-1;
     95e:	2201      	movs	r2, #1
     960:	4252      	negs	r2, r2
     962:	3358      	adds	r3, #88	; 0x58
     964:	33ff      	adds	r3, #255	; 0xff
     966:	50fa      	str	r2, [r7, r3]
				target_frequency=current_frequency+(dir*step);
     968:	23ac      	movs	r3, #172	; 0xac
     96a:	005b      	lsls	r3, r3, #1
     96c:	58f8      	ldr	r0, [r7, r3]
     96e:	4b57      	ldr	r3, [pc, #348]	; (acc <_ZN14ADF5610_Driver8SelfTestEh+0x18c>)
     970:	4798      	blx	r3
     972:	9a00      	ldr	r2, [sp, #0]
     974:	9b01      	ldr	r3, [sp, #4]
     976:	4e56      	ldr	r6, [pc, #344]	; (ad0 <_ZN14ADF5610_Driver8SelfTestEh+0x190>)
     978:	47b0      	blx	r6
     97a:	0002      	movs	r2, r0
     97c:	000b      	movs	r3, r1
     97e:	0020      	movs	r0, r4
     980:	0029      	movs	r1, r5
     982:	4c54      	ldr	r4, [pc, #336]	; (ad4 <_ZN14ADF5610_Driver8SelfTestEh+0x194>)
     984:	47a0      	blx	r4
     986:	003b      	movs	r3, r7
     988:	3351      	adds	r3, #81	; 0x51
     98a:	33ff      	adds	r3, #255	; 0xff
     98c:	6018      	str	r0, [r3, #0]
     98e:	6059      	str	r1, [r3, #4]
				SetNextFrequency();
     990:	0038      	movs	r0, r7
     992:	4b51      	ldr	r3, [pc, #324]	; (ad8 <_ZN14ADF5610_Driver8SelfTestEh+0x198>)
     994:	4798      	blx	r3
				ShortConfigurationFlow();
     996:	0038      	movs	r0, r7
     998:	4b50      	ldr	r3, [pc, #320]	; (adc <_ZN14ADF5610_Driver8SelfTestEh+0x19c>)
     99a:	4798      	blx	r3
				usleep(1000);
     99c:	21fa      	movs	r1, #250	; 0xfa
     99e:	0089      	lsls	r1, r1, #2
     9a0:	0038      	movs	r0, r7
     9a2:	4b4f      	ldr	r3, [pc, #316]	; (ae0 <_ZN14ADF5610_Driver8SelfTestEh+0x1a0>)
     9a4:	4798      	blx	r3
			 errorCounter=0;
     9a6:	2300      	movs	r3, #0
     9a8:	4698      	mov	r8, r3
		 delay_ms(1);
     9aa:	2001      	movs	r0, #1
     9ac:	4b4d      	ldr	r3, [pc, #308]	; (ae4 <_ZN14ADF5610_Driver8SelfTestEh+0x1a4>)
     9ae:	4798      	blx	r3
	while (((lower_limit<=current_frequency)&(current_frequency<=upper_limit))&&(cycles>counter)){
     9b0:	68bd      	ldr	r5, [r7, #8]
     9b2:	68fe      	ldr	r6, [r7, #12]
     9b4:	2301      	movs	r3, #1
     9b6:	466a      	mov	r2, sp
     9b8:	7013      	strb	r3, [r2, #0]
     9ba:	002a      	movs	r2, r5
     9bc:	0033      	movs	r3, r6
     9be:	6a38      	ldr	r0, [r7, #32]
     9c0:	6a79      	ldr	r1, [r7, #36]	; 0x24
     9c2:	4c49      	ldr	r4, [pc, #292]	; (ae8 <_ZN14ADF5610_Driver8SelfTestEh+0x1a8>)
     9c4:	47a0      	blx	r4
     9c6:	2800      	cmp	r0, #0
     9c8:	d102      	bne.n	9d0 <_ZN14ADF5610_Driver8SelfTestEh+0x90>
     9ca:	2300      	movs	r3, #0
     9cc:	466a      	mov	r2, sp
     9ce:	7013      	strb	r3, [r2, #0]
     9d0:	466b      	mov	r3, sp
     9d2:	781b      	ldrb	r3, [r3, #0]
     9d4:	469a      	mov	sl, r3
     9d6:	2401      	movs	r4, #1
     9d8:	69ba      	ldr	r2, [r7, #24]
     9da:	69fb      	ldr	r3, [r7, #28]
     9dc:	0028      	movs	r0, r5
     9de:	0031      	movs	r1, r6
     9e0:	4e41      	ldr	r6, [pc, #260]	; (ae8 <_ZN14ADF5610_Driver8SelfTestEh+0x1a8>)
     9e2:	47b0      	blx	r6
     9e4:	2800      	cmp	r0, #0
     9e6:	d100      	bne.n	9ea <_ZN14ADF5610_Driver8SelfTestEh+0xaa>
     9e8:	2400      	movs	r4, #0
     9ea:	4653      	mov	r3, sl
     9ec:	4023      	ands	r3, r4
     9ee:	1e1c      	subs	r4, r3, #0
     9f0:	d063      	beq.n	aba <_ZN14ADF5610_Driver8SelfTestEh+0x17a>
     9f2:	464b      	mov	r3, r9
     9f4:	2b00      	cmp	r3, #0
     9f6:	dd61      	ble.n	abc <_ZN14ADF5610_Driver8SelfTestEh+0x17c>
		 if(IsLocked()){
     9f8:	0038      	movs	r0, r7
     9fa:	4b3c      	ldr	r3, [pc, #240]	; (aec <_ZN14ADF5610_Driver8SelfTestEh+0x1ac>)
     9fc:	4798      	blx	r3
     9fe:	1e04      	subs	r4, r0, #0
     a00:	d03a      	beq.n	a78 <_ZN14ADF5610_Driver8SelfTestEh+0x138>
			 is_locked=true;
     a02:	2201      	movs	r2, #1
     a04:	23ae      	movs	r3, #174	; 0xae
     a06:	005b      	lsls	r3, r3, #1
     a08:	54fa      	strb	r2, [r7, r3]
			 current_frequency=target_frequency;
     a0a:	003b      	movs	r3, r7
     a0c:	3351      	adds	r3, #81	; 0x51
     a0e:	33ff      	adds	r3, #255	; 0xff
     a10:	681c      	ldr	r4, [r3, #0]
     a12:	685d      	ldr	r5, [r3, #4]
     a14:	60bc      	str	r4, [r7, #8]
     a16:	60fd      	str	r5, [r7, #12]
			  if ((current_frequency>(upper_limit-step))&&(dir==1)){
     a18:	3b08      	subs	r3, #8
     a1a:	681a      	ldr	r2, [r3, #0]
     a1c:	685b      	ldr	r3, [r3, #4]
     a1e:	9200      	str	r2, [sp, #0]
     a20:	9301      	str	r3, [sp, #4]
     a22:	69b8      	ldr	r0, [r7, #24]
     a24:	69f9      	ldr	r1, [r7, #28]
     a26:	4e32      	ldr	r6, [pc, #200]	; (af0 <_ZN14ADF5610_Driver8SelfTestEh+0x1b0>)
     a28:	47b0      	blx	r6
     a2a:	0002      	movs	r2, r0
     a2c:	000b      	movs	r3, r1
     a2e:	0020      	movs	r0, r4
     a30:	0029      	movs	r1, r5
     a32:	4e30      	ldr	r6, [pc, #192]	; (af4 <_ZN14ADF5610_Driver8SelfTestEh+0x1b4>)
     a34:	47b0      	blx	r6
     a36:	2800      	cmp	r0, #0
     a38:	d004      	beq.n	a44 <_ZN14ADF5610_Driver8SelfTestEh+0x104>
     a3a:	23ac      	movs	r3, #172	; 0xac
     a3c:	005b      	lsls	r3, r3, #1
     a3e:	58fb      	ldr	r3, [r7, r3]
     a40:	2b01      	cmp	r3, #1
     a42:	d08c      	beq.n	95e <_ZN14ADF5610_Driver8SelfTestEh+0x1e>
			  }else if((current_frequency<(lower_limit+step))&&(dir==-1)){
     a44:	6a3a      	ldr	r2, [r7, #32]
     a46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     a48:	9800      	ldr	r0, [sp, #0]
     a4a:	9901      	ldr	r1, [sp, #4]
     a4c:	4e21      	ldr	r6, [pc, #132]	; (ad4 <_ZN14ADF5610_Driver8SelfTestEh+0x194>)
     a4e:	47b0      	blx	r6
     a50:	0002      	movs	r2, r0
     a52:	000b      	movs	r3, r1
     a54:	0020      	movs	r0, r4
     a56:	0029      	movs	r1, r5
     a58:	4e27      	ldr	r6, [pc, #156]	; (af8 <_ZN14ADF5610_Driver8SelfTestEh+0x1b8>)
     a5a:	47b0      	blx	r6
     a5c:	2800      	cmp	r0, #0
     a5e:	d100      	bne.n	a62 <_ZN14ADF5610_Driver8SelfTestEh+0x122>
     a60:	e782      	b.n	968 <_ZN14ADF5610_Driver8SelfTestEh+0x28>
     a62:	23ac      	movs	r3, #172	; 0xac
     a64:	005b      	lsls	r3, r3, #1
     a66:	58fb      	ldr	r3, [r7, r3]
     a68:	3301      	adds	r3, #1
     a6a:	d000      	beq.n	a6e <_ZN14ADF5610_Driver8SelfTestEh+0x12e>
     a6c:	e77c      	b.n	968 <_ZN14ADF5610_Driver8SelfTestEh+0x28>
				dir=1;
     a6e:	2201      	movs	r2, #1
     a70:	23ac      	movs	r3, #172	; 0xac
     a72:	005b      	lsls	r3, r3, #1
     a74:	50fa      	str	r2, [r7, r3]
     a76:	e777      	b.n	968 <_ZN14ADF5610_Driver8SelfTestEh+0x28>
			 errorCounter++;
     a78:	2301      	movs	r3, #1
     a7a:	469c      	mov	ip, r3
     a7c:	44e0      	add	r8, ip
			 if(is_locked){
     a7e:	335c      	adds	r3, #92	; 0x5c
     a80:	33ff      	adds	r3, #255	; 0xff
     a82:	5cfb      	ldrb	r3, [r7, r3]
     a84:	2b00      	cmp	r3, #0
     a86:	d003      	beq.n	a90 <_ZN14ADF5610_Driver8SelfTestEh+0x150>
				 is_locked=false;
     a88:	2200      	movs	r2, #0
     a8a:	23ae      	movs	r3, #174	; 0xae
     a8c:	005b      	lsls	r3, r3, #1
     a8e:	54fa      	strb	r2, [r7, r3]
		   SetNextFrequency();
     a90:	0038      	movs	r0, r7
     a92:	4b11      	ldr	r3, [pc, #68]	; (ad8 <_ZN14ADF5610_Driver8SelfTestEh+0x198>)
     a94:	4798      	blx	r3
		   CompleteConfigurationFlow(0);
     a96:	2100      	movs	r1, #0
     a98:	0038      	movs	r0, r7
     a9a:	4b18      	ldr	r3, [pc, #96]	; (afc <_ZN14ADF5610_Driver8SelfTestEh+0x1bc>)
     a9c:	4798      	blx	r3
			for (int var = 1; var < 24; ++var) {
     a9e:	2301      	movs	r3, #1
     aa0:	2b17      	cmp	r3, #23
     aa2:	dc01      	bgt.n	aa8 <_ZN14ADF5610_Driver8SelfTestEh+0x168>
     aa4:	3301      	adds	r3, #1
     aa6:	e7fb      	b.n	aa0 <_ZN14ADF5610_Driver8SelfTestEh+0x160>
			usleep(100000);
     aa8:	4915      	ldr	r1, [pc, #84]	; (b00 <_ZN14ADF5610_Driver8SelfTestEh+0x1c0>)
     aaa:	0038      	movs	r0, r7
     aac:	4b0c      	ldr	r3, [pc, #48]	; (ae0 <_ZN14ADF5610_Driver8SelfTestEh+0x1a0>)
     aae:	4798      	blx	r3
			if(errorCounter>100){
     ab0:	4643      	mov	r3, r8
     ab2:	2b64      	cmp	r3, #100	; 0x64
     ab4:	dc00      	bgt.n	ab8 <_ZN14ADF5610_Driver8SelfTestEh+0x178>
     ab6:	e778      	b.n	9aa <_ZN14ADF5610_Driver8SelfTestEh+0x6a>
     ab8:	e000      	b.n	abc <_ZN14ADF5610_Driver8SelfTestEh+0x17c>
	return true;
     aba:	2401      	movs	r4, #1
}
     abc:	0020      	movs	r0, r4
     abe:	b002      	add	sp, #8
     ac0:	bc1c      	pop	{r2, r3, r4}
     ac2:	4690      	mov	r8, r2
     ac4:	4699      	mov	r9, r3
     ac6:	46a2      	mov	sl, r4
     ac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     aca:	46c0      	nop			; (mov r8, r8)
     acc:	00005cad 	.word	0x00005cad
     ad0:	000050d9 	.word	0x000050d9
     ad4:	00004251 	.word	0x00004251
     ad8:	00000719 	.word	0x00000719
     adc:	00000919 	.word	0x00000919
     ae0:	00000725 	.word	0x00000725
     ae4:	00000f81 	.word	0x00000f81
     ae8:	000041d9 	.word	0x000041d9
     aec:	0000029d 	.word	0x0000029d
     af0:	000055d9 	.word	0x000055d9
     af4:	000041ed 	.word	0x000041ed
     af8:	000041c5 	.word	0x000041c5
     afc:	00000835 	.word	0x00000835
     b00:	000186a0 	.word	0x000186a0

00000b04 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev>:
}
     b04:	b510      	push	{r4, lr}
     b06:	4902      	ldr	r1, [pc, #8]	; (b10 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev+0xc>)
     b08:	2001      	movs	r0, #1
     b0a:	4b02      	ldr	r3, [pc, #8]	; (b14 <_GLOBAL__sub_I__ZN14ADF5610_DriverC2Ev+0x10>)
     b0c:	4798      	blx	r3
     b0e:	bd10      	pop	{r4, pc}
     b10:	0000ffff 	.word	0x0000ffff
     b14:	0000012d 	.word	0x0000012d

00000b18 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     b18:	e7fe      	b.n	b18 <Dummy_Handler>
	...

00000b1c <Reset_Handler>:
{
     b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     b1e:	4a23      	ldr	r2, [pc, #140]	; (bac <Reset_Handler+0x90>)
     b20:	4b23      	ldr	r3, [pc, #140]	; (bb0 <Reset_Handler+0x94>)
     b22:	429a      	cmp	r2, r3
     b24:	d009      	beq.n	b3a <Reset_Handler+0x1e>
     b26:	4b22      	ldr	r3, [pc, #136]	; (bb0 <Reset_Handler+0x94>)
     b28:	4a20      	ldr	r2, [pc, #128]	; (bac <Reset_Handler+0x90>)
     b2a:	e003      	b.n	b34 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     b2c:	6811      	ldr	r1, [r2, #0]
     b2e:	6019      	str	r1, [r3, #0]
     b30:	3304      	adds	r3, #4
     b32:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     b34:	491f      	ldr	r1, [pc, #124]	; (bb4 <Reset_Handler+0x98>)
     b36:	428b      	cmp	r3, r1
     b38:	d3f8      	bcc.n	b2c <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     b3a:	4b1f      	ldr	r3, [pc, #124]	; (bb8 <Reset_Handler+0x9c>)
     b3c:	e002      	b.n	b44 <Reset_Handler+0x28>
                *pDest++ = 0;
     b3e:	2200      	movs	r2, #0
     b40:	601a      	str	r2, [r3, #0]
     b42:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     b44:	4a1d      	ldr	r2, [pc, #116]	; (bbc <Reset_Handler+0xa0>)
     b46:	4293      	cmp	r3, r2
     b48:	d3f9      	bcc.n	b3e <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     b4a:	4a1d      	ldr	r2, [pc, #116]	; (bc0 <Reset_Handler+0xa4>)
     b4c:	21ff      	movs	r1, #255	; 0xff
     b4e:	4b1d      	ldr	r3, [pc, #116]	; (bc4 <Reset_Handler+0xa8>)
     b50:	438b      	bics	r3, r1
     b52:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     b54:	39fd      	subs	r1, #253	; 0xfd
     b56:	2390      	movs	r3, #144	; 0x90
     b58:	005b      	lsls	r3, r3, #1
     b5a:	4a1b      	ldr	r2, [pc, #108]	; (bc8 <Reset_Handler+0xac>)
     b5c:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     b5e:	4a1b      	ldr	r2, [pc, #108]	; (bcc <Reset_Handler+0xb0>)
     b60:	78d3      	ldrb	r3, [r2, #3]
     b62:	2503      	movs	r5, #3
     b64:	43ab      	bics	r3, r5
     b66:	2402      	movs	r4, #2
     b68:	4323      	orrs	r3, r4
     b6a:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     b6c:	78d3      	ldrb	r3, [r2, #3]
     b6e:	270c      	movs	r7, #12
     b70:	43bb      	bics	r3, r7
     b72:	2608      	movs	r6, #8
     b74:	4333      	orrs	r3, r6
     b76:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     b78:	4b15      	ldr	r3, [pc, #84]	; (bd0 <Reset_Handler+0xb4>)
     b7a:	7b98      	ldrb	r0, [r3, #14]
     b7c:	2230      	movs	r2, #48	; 0x30
     b7e:	4390      	bics	r0, r2
     b80:	2220      	movs	r2, #32
     b82:	4310      	orrs	r0, r2
     b84:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     b86:	7b99      	ldrb	r1, [r3, #14]
     b88:	43b9      	bics	r1, r7
     b8a:	4331      	orrs	r1, r6
     b8c:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     b8e:	7b9a      	ldrb	r2, [r3, #14]
     b90:	43aa      	bics	r2, r5
     b92:	4322      	orrs	r2, r4
     b94:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     b96:	4a0f      	ldr	r2, [pc, #60]	; (bd4 <Reset_Handler+0xb8>)
     b98:	6851      	ldr	r1, [r2, #4]
     b9a:	2380      	movs	r3, #128	; 0x80
     b9c:	430b      	orrs	r3, r1
     b9e:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     ba0:	4b0d      	ldr	r3, [pc, #52]	; (bd8 <Reset_Handler+0xbc>)
     ba2:	4798      	blx	r3
        main();
     ba4:	4b0d      	ldr	r3, [pc, #52]	; (bdc <Reset_Handler+0xc0>)
     ba6:	4798      	blx	r3
     ba8:	e7fe      	b.n	ba8 <Reset_Handler+0x8c>
     baa:	46c0      	nop			; (mov r8, r8)
     bac:	000060f8 	.word	0x000060f8
     bb0:	20000000 	.word	0x20000000
     bb4:	2000006c 	.word	0x2000006c
     bb8:	20000070 	.word	0x20000070
     bbc:	20000504 	.word	0x20000504
     bc0:	e000ed00 	.word	0xe000ed00
     bc4:	00000000 	.word	0x00000000
     bc8:	41007000 	.word	0x41007000
     bcc:	41005000 	.word	0x41005000
     bd0:	41004800 	.word	0x41004800
     bd4:	41004000 	.word	0x41004000
     bd8:	00005d95 	.word	0x00005d95
     bdc:	00000c1d 	.word	0x00000c1d

00000be0 <_Z41__static_initialization_and_destruction_0ii>:
	while (1) {
		adf.SelfTest(1);
		delay_ms(1000);
		adf.Init();
	}
}
     be0:	b510      	push	{r4, lr}
     be2:	2801      	cmp	r0, #1
     be4:	d000      	beq.n	be8 <_Z41__static_initialization_and_destruction_0ii+0x8>
     be6:	bd10      	pop	{r4, pc}
     be8:	4b06      	ldr	r3, [pc, #24]	; (c04 <_Z41__static_initialization_and_destruction_0ii+0x24>)
     bea:	4299      	cmp	r1, r3
     bec:	d1fb      	bne.n	be6 <_Z41__static_initialization_and_destruction_0ii+0x6>
ADF5610_Driver adf;
     bee:	4c06      	ldr	r4, [pc, #24]	; (c08 <_Z41__static_initialization_and_destruction_0ii+0x28>)
     bf0:	0020      	movs	r0, r4
     bf2:	4b06      	ldr	r3, [pc, #24]	; (c0c <_Z41__static_initialization_and_destruction_0ii+0x2c>)
     bf4:	4798      	blx	r3
     bf6:	4a06      	ldr	r2, [pc, #24]	; (c10 <_Z41__static_initialization_and_destruction_0ii+0x30>)
     bf8:	4906      	ldr	r1, [pc, #24]	; (c14 <_Z41__static_initialization_and_destruction_0ii+0x34>)
     bfa:	0020      	movs	r0, r4
     bfc:	4b06      	ldr	r3, [pc, #24]	; (c18 <_Z41__static_initialization_and_destruction_0ii+0x38>)
     bfe:	4798      	blx	r3
}
     c00:	e7f1      	b.n	be6 <_Z41__static_initialization_and_destruction_0ii+0x6>
     c02:	46c0      	nop			; (mov r8, r8)
     c04:	0000ffff 	.word	0x0000ffff
     c08:	200000b0 	.word	0x200000b0
     c0c:	0000016d 	.word	0x0000016d
     c10:	20000000 	.word	0x20000000
     c14:	00000115 	.word	0x00000115
     c18:	00002675 	.word	0x00002675

00000c1c <main>:
{
     c1c:	b510      	push	{r4, lr}
	atmel_start_init();
     c1e:	4b09      	ldr	r3, [pc, #36]	; (c44 <main+0x28>)
     c20:	4798      	blx	r3
	adf.Init();
     c22:	4809      	ldr	r0, [pc, #36]	; (c48 <main+0x2c>)
     c24:	4b09      	ldr	r3, [pc, #36]	; (c4c <main+0x30>)
     c26:	4798      	blx	r3
		adf.SelfTest(1);
     c28:	4c07      	ldr	r4, [pc, #28]	; (c48 <main+0x2c>)
     c2a:	2101      	movs	r1, #1
     c2c:	0020      	movs	r0, r4
     c2e:	4b08      	ldr	r3, [pc, #32]	; (c50 <main+0x34>)
     c30:	4798      	blx	r3
		delay_ms(1000);
     c32:	20fa      	movs	r0, #250	; 0xfa
     c34:	0080      	lsls	r0, r0, #2
     c36:	4b07      	ldr	r3, [pc, #28]	; (c54 <main+0x38>)
     c38:	4798      	blx	r3
		adf.Init();
     c3a:	0020      	movs	r0, r4
     c3c:	4b03      	ldr	r3, [pc, #12]	; (c4c <main+0x30>)
     c3e:	4798      	blx	r3
     c40:	e7f2      	b.n	c28 <main+0xc>
     c42:	46c0      	nop			; (mov r8, r8)
     c44:	00000d0d 	.word	0x00000d0d
     c48:	200000b0 	.word	0x200000b0
     c4c:	000008d1 	.word	0x000008d1
     c50:	00000941 	.word	0x00000941
     c54:	00000f81 	.word	0x00000f81

00000c58 <_GLOBAL__sub_I_adf>:
}
     c58:	b510      	push	{r4, lr}
     c5a:	4902      	ldr	r1, [pc, #8]	; (c64 <_GLOBAL__sub_I_adf+0xc>)
     c5c:	2001      	movs	r0, #1
     c5e:	4b02      	ldr	r3, [pc, #8]	; (c68 <_GLOBAL__sub_I_adf+0x10>)
     c60:	4798      	blx	r3
     c62:	bd10      	pop	{r4, pc}
     c64:	0000ffff 	.word	0x0000ffff
     c68:	00000be1 	.word	0x00000be1

00000c6c <_ZN13SPI_Syn_ClassC1EP21spi_m_sync_descriptor>:
	#ifdef ARDUINO_AVR_UNO
	#else
	
SPI_Syn_Class::SPI_Syn_Class(spi_m_sync_descriptor * spiDesc)
{
	SPI=spiDesc;
     c6c:	60c1      	str	r1, [r0, #12]
	ptrSPISync=this;
     c6e:	4b01      	ldr	r3, [pc, #4]	; (c74 <_ZN13SPI_Syn_ClassC1EP21spi_m_sync_descriptor+0x8>)
     c70:	6018      	str	r0, [r3, #0]
} //SPI_Syn_Class
     c72:	4770      	bx	lr
     c74:	20000258 	.word	0x20000258

00000c78 <_ZN13SPI_Syn_ClassD1Ev>:
#endif
// default destructor
SPI_Syn_Class::~SPI_Syn_Class()
{
} //~SPI_Syn_Class
     c78:	4770      	bx	lr
	...

00000c7c <_ZN13SPI_Syn_Class4InitEv>:

bool SPI_Syn_Class::Init(){
     c7c:	b510      	push	{r4, lr}
     c7e:	0004      	movs	r4, r0
		SPI.begin();
			ready=true;
	

	#else
	spi_m_sync_get_io_descriptor(SPI, &spio);
     c80:	0001      	movs	r1, r0
     c82:	3110      	adds	r1, #16
     c84:	68c0      	ldr	r0, [r0, #12]
     c86:	4b08      	ldr	r3, [pc, #32]	; (ca8 <_ZN13SPI_Syn_Class4InitEv+0x2c>)
     c88:	4798      	blx	r3

	spi_m_sync_enable(SPI);
     c8a:	68e0      	ldr	r0, [r4, #12]
     c8c:	4b07      	ldr	r3, [pc, #28]	; (cac <_ZN13SPI_Syn_Class4InitEv+0x30>)
     c8e:	4798      	blx	r3
	#endif
		txBuffer=txStaticBuffer;
     c90:	4b07      	ldr	r3, [pc, #28]	; (cb0 <_ZN13SPI_Syn_Class4InitEv+0x34>)
     c92:	3304      	adds	r3, #4
     c94:	6063      	str	r3, [r4, #4]
		rxBuffer=txStaticBuffer;
     c96:	60a3      	str	r3, [r4, #8]
	ready=(SPI!=NULL);
     c98:	68e3      	ldr	r3, [r4, #12]
     c9a:	1e5a      	subs	r2, r3, #1
     c9c:	4193      	sbcs	r3, r2
     c9e:	b2db      	uxtb	r3, r3
     ca0:	7023      	strb	r3, [r4, #0]
	return ready;
     ca2:	7820      	ldrb	r0, [r4, #0]
     ca4:	b2c0      	uxtb	r0, r0

	
}
     ca6:	bd10      	pop	{r4, pc}
     ca8:	00001151 	.word	0x00001151
     cac:	00001069 	.word	0x00001069
     cb0:	20000258 	.word	0x20000258

00000cb4 <_ZN13SPI_Syn_Class5WriteEPKhl>:
#endif
	ready=true;
	return 0;
}

int32_t  SPI_Syn_Class::Write(const uint8_t * p, int32_t n){
     cb4:	b510      	push	{r4, lr}
     cb6:	0004      	movs	r4, r0
	int32_t w;
	wFlag=true;
     cb8:	2301      	movs	r3, #1
     cba:	7603      	strb	r3, [r0, #24]
#ifdef ARDUINO_AVR_UNO
	SPI.transfer((void*)p, n);
#else
	w=io_write(spio,p,n);
     cbc:	b292      	uxth	r2, r2
     cbe:	6900      	ldr	r0, [r0, #16]
     cc0:	4b03      	ldr	r3, [pc, #12]	; (cd0 <_ZN13SPI_Syn_Class5WriteEPKhl+0x1c>)
     cc2:	4798      	blx	r3
	wFlag=(bool)w;
     cc4:	0003      	movs	r3, r0
     cc6:	1e5a      	subs	r2, r3, #1
     cc8:	4193      	sbcs	r3, r2
     cca:	7623      	strb	r3, [r4, #24]
#endif
	 return w;
	
}
     ccc:	bd10      	pop	{r4, pc}
     cce:	46c0      	nop			; (mov r8, r8)
     cd0:	00000fa1 	.word	0x00000fa1

00000cd4 <_ZN13SPI_Syn_Class4ReadEPhl>:
int32_t  SPI_Syn_Class::Read(uint8_t * p, int32_t n){
     cd4:	b510      	push	{r4, lr}
     cd6:	0004      	movs	r4, r0
	int32_t r;
	rFlag=true;
     cd8:	2301      	movs	r3, #1
     cda:	7643      	strb	r3, [r0, #25]
#ifdef ARDUINO_AVR_UNO
	SPI.transfer((void*)p, n);
#else
	r=io_read(spio,p,n);
     cdc:	b292      	uxth	r2, r2
     cde:	6900      	ldr	r0, [r0, #16]
     ce0:	4b03      	ldr	r3, [pc, #12]	; (cf0 <_ZN13SPI_Syn_Class4ReadEPhl+0x1c>)
     ce2:	4798      	blx	r3
	rFlag=(bool)r;
     ce4:	0003      	movs	r3, r0
     ce6:	1e5a      	subs	r2, r3, #1
     ce8:	4193      	sbcs	r3, r2
     cea:	7663      	strb	r3, [r4, #25]
#endif
	return  r;
}
     cec:	bd10      	pop	{r4, pc}
     cee:	46c0      	nop			; (mov r8, r8)
     cf0:	00000fd9 	.word	0x00000fd9

00000cf4 <_ZN13SPI_Syn_Class5SetCSEb>:
	if (level) {
     cf4:	2900      	cmp	r1, #0
     cf6:	d104      	bne.n	d02 <_ZN13SPI_Syn_Class5SetCSEb+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     cf8:	2280      	movs	r2, #128	; 0x80
     cfa:	23c0      	movs	r3, #192	; 0xc0
     cfc:	05db      	lsls	r3, r3, #23
     cfe:	615a      	str	r2, [r3, #20]
	 delay(1);

	#else
	gpio_set_pin_level(CS_ADF5610,st);
	#endif
}
     d00:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     d02:	2280      	movs	r2, #128	; 0x80
     d04:	23c0      	movs	r3, #192	; 0xc0
     d06:	05db      	lsls	r3, r3, #23
     d08:	619a      	str	r2, [r3, #24]
     d0a:	e7f9      	b.n	d00 <_ZN13SPI_Syn_Class5SetCSEb+0xc>

00000d0c <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     d0c:	b510      	push	{r4, lr}
	system_init();
     d0e:	4b01      	ldr	r3, [pc, #4]	; (d14 <atmel_start_init+0x8>)
     d10:	4798      	blx	r3
	//usb_init();
}
     d12:	bd10      	pop	{r4, pc}
     d14:	00000f05 	.word	0x00000f05

00000d18 <SPI_0_PORT_init>:
#include <hpl_pm_base.h>

struct spi_m_sync_descriptor SPI_0;

void SPI_0_PORT_init(void)
{
     d18:	b5f0      	push	{r4, r5, r6, r7, lr}
     d1a:	46c6      	mov	lr, r8
     d1c:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     d1e:	22c0      	movs	r2, #192	; 0xc0
     d20:	05d2      	lsls	r2, r2, #23
     d22:	2310      	movs	r3, #16
     d24:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     d26:	6093      	str	r3, [r2, #8]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     d28:	4b25      	ldr	r3, [pc, #148]	; (dc0 <SPI_0_PORT_init+0xa8>)
     d2a:	4926      	ldr	r1, [pc, #152]	; (dc4 <SPI_0_PORT_init+0xac>)
     d2c:	6299      	str	r1, [r3, #40]	; 0x28
     d2e:	21c0      	movs	r1, #192	; 0xc0
     d30:	0609      	lsls	r1, r1, #24
     d32:	468c      	mov	ip, r1
     d34:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     d36:	2044      	movs	r0, #68	; 0x44
     d38:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     d3a:	2701      	movs	r7, #1
     d3c:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     d3e:	2601      	movs	r6, #1
     d40:	4331      	orrs	r1, r6
     d42:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     d44:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     d46:	2132      	movs	r1, #50	; 0x32
     d48:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     d4a:	250f      	movs	r5, #15
     d4c:	43a8      	bics	r0, r5
	tmp |= PORT_PMUX_PMUXE(data);
     d4e:	2403      	movs	r4, #3
     d50:	46a0      	mov	r8, r4
     d52:	4644      	mov	r4, r8
     d54:	4320      	orrs	r0, r4
     d56:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     d58:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     d5a:	2020      	movs	r0, #32
     d5c:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     d5e:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     d60:	4819      	ldr	r0, [pc, #100]	; (dc8 <SPI_0_PORT_init+0xb0>)
     d62:	6298      	str	r0, [r3, #40]	; 0x28
     d64:	4660      	mov	r0, ip
     d66:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     d68:	2045      	movs	r0, #69	; 0x45
     d6a:	4684      	mov	ip, r0
     d6c:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     d6e:	43b8      	bics	r0, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     d70:	4330      	orrs	r0, r6
     d72:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     d74:	4664      	mov	r4, ip
     d76:	5518      	strb	r0, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     d78:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     d7a:	3c36      	subs	r4, #54	; 0x36
     d7c:	4020      	ands	r0, r4
	tmp |= PORT_PMUX_PMUXO(data);
     d7e:	2430      	movs	r4, #48	; 0x30
     d80:	46a4      	mov	ip, r4
     d82:	4664      	mov	r4, ip
     d84:	4320      	orrs	r0, r4
     d86:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     d88:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     d8a:	310e      	adds	r1, #14
     d8c:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     d8e:	4a0f      	ldr	r2, [pc, #60]	; (dcc <SPI_0_PORT_init+0xb4>)
     d90:	629a      	str	r2, [r3, #40]	; 0x28
     d92:	4a0f      	ldr	r2, [pc, #60]	; (dd0 <SPI_0_PORT_init+0xb8>)
     d94:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     d96:	2246      	movs	r2, #70	; 0x46
     d98:	5c99      	ldrb	r1, [r3, r2]
     d9a:	2004      	movs	r0, #4
     d9c:	4381      	bics	r1, r0
     d9e:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     da0:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     da2:	43b9      	bics	r1, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     da4:	4331      	orrs	r1, r6
     da6:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     da8:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     daa:	2133      	movs	r1, #51	; 0x33
     dac:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     dae:	43aa      	bics	r2, r5
	tmp |= PORT_PMUX_PMUXE(data);
     db0:	4640      	mov	r0, r8
     db2:	4302      	orrs	r2, r0
     db4:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     db6:	545a      	strb	r2, [r3, r1]
	                       // <GPIO_PULL_UP"> Pull-up
	                       // <GPIO_PULL_DOWN"> Pull-down
	                       GPIO_PULL_OFF);

	gpio_set_pin_function(PA06, PINMUX_PA06D_SERCOM0_PAD2);
}
     db8:	bc04      	pop	{r2}
     dba:	4690      	mov	r8, r2
     dbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
     dbe:	46c0      	nop			; (mov r8, r8)
     dc0:	41004400 	.word	0x41004400
     dc4:	40000010 	.word	0x40000010
     dc8:	40000020 	.word	0x40000020
     dcc:	40020040 	.word	0x40020040
     dd0:	c0020000 	.word	0xc0020000

00000dd4 <SPI_0_CLOCK_init>:
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
     dd4:	4a04      	ldr	r2, [pc, #16]	; (de8 <SPI_0_CLOCK_init+0x14>)
     dd6:	6a13      	ldr	r3, [r2, #32]
     dd8:	2104      	movs	r1, #4
     dda:	430b      	orrs	r3, r1
     ddc:	6213      	str	r3, [r2, #32]
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
     dde:	4a03      	ldr	r2, [pc, #12]	; (dec <SPI_0_CLOCK_init+0x18>)
     de0:	4b03      	ldr	r3, [pc, #12]	; (df0 <SPI_0_CLOCK_init+0x1c>)
     de2:	805a      	strh	r2, [r3, #2]

void SPI_0_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM0);
	_gclk_enable_channel(SERCOM0_GCLK_ID_CORE, CONF_GCLK_SERCOM0_CORE_SRC);
}
     de4:	4770      	bx	lr
     de6:	46c0      	nop			; (mov r8, r8)
     de8:	40000400 	.word	0x40000400
     dec:	00004014 	.word	0x00004014
     df0:	40000c00 	.word	0x40000c00

00000df4 <SPI_0_init>:

void SPI_0_init(void)
{
     df4:	b510      	push	{r4, lr}
	SPI_0_CLOCK_init();
     df6:	4b04      	ldr	r3, [pc, #16]	; (e08 <SPI_0_init+0x14>)
     df8:	4798      	blx	r3
	spi_m_sync_init(&SPI_0, SERCOM0);
     dfa:	4904      	ldr	r1, [pc, #16]	; (e0c <SPI_0_init+0x18>)
     dfc:	4804      	ldr	r0, [pc, #16]	; (e10 <SPI_0_init+0x1c>)
     dfe:	4b05      	ldr	r3, [pc, #20]	; (e14 <SPI_0_init+0x20>)
     e00:	4798      	blx	r3
	SPI_0_PORT_init();
     e02:	4b05      	ldr	r3, [pc, #20]	; (e18 <SPI_0_init+0x24>)
     e04:	4798      	blx	r3
}
     e06:	bd10      	pop	{r4, pc}
     e08:	00000dd5 	.word	0x00000dd5
     e0c:	42000800 	.word	0x42000800
     e10:	200004ec 	.word	0x200004ec
     e14:	00001011 	.word	0x00001011
     e18:	00000d19 	.word	0x00000d19

00000e1c <delay_driver_init>:

void delay_driver_init(void)
{
     e1c:	b510      	push	{r4, lr}
	delay_init(SysTick);
     e1e:	4802      	ldr	r0, [pc, #8]	; (e28 <delay_driver_init+0xc>)
     e20:	4b02      	ldr	r3, [pc, #8]	; (e2c <delay_driver_init+0x10>)
     e22:	4798      	blx	r3
}
     e24:	bd10      	pop	{r4, pc}
     e26:	46c0      	nop			; (mov r8, r8)
     e28:	e000e010 	.word	0xe000e010
     e2c:	00000f6d 	.word	0x00000f6d

00000e30 <USB_DEVICE_INSTANCE_PORT_init>:

void USB_DEVICE_INSTANCE_PORT_init(void)
{
     e30:	b5f0      	push	{r4, r5, r6, r7, lr}
     e32:	46c6      	mov	lr, r8
     e34:	b500      	push	{lr}
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     e36:	24c0      	movs	r4, #192	; 0xc0
     e38:	05e4      	lsls	r4, r4, #23
     e3a:	2280      	movs	r2, #128	; 0x80
     e3c:	0452      	lsls	r2, r2, #17
     e3e:	60a2      	str	r2, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     e40:	4b1c      	ldr	r3, [pc, #112]	; (eb4 <USB_DEVICE_INSTANCE_PORT_init+0x84>)
     e42:	2780      	movs	r7, #128	; 0x80
     e44:	05ff      	lsls	r7, r7, #23
     e46:	629f      	str	r7, [r3, #40]	; 0x28
     e48:	491b      	ldr	r1, [pc, #108]	; (eb8 <USB_DEVICE_INSTANCE_PORT_init+0x88>)
     e4a:	6299      	str	r1, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     e4c:	6162      	str	r2, [r4, #20]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     e4e:	2058      	movs	r0, #88	; 0x58
     e50:	5c19      	ldrb	r1, [r3, r0]
     e52:	2204      	movs	r2, #4
     e54:	4690      	mov	r8, r2
     e56:	4391      	bics	r1, r2
     e58:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     e5a:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     e5c:	2601      	movs	r6, #1
     e5e:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     e60:	2501      	movs	r5, #1
     e62:	4329      	orrs	r1, r5
     e64:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     e66:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     e68:	381c      	subs	r0, #28
     e6a:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     e6c:	320b      	adds	r2, #11
     e6e:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     e70:	2206      	movs	r2, #6
     e72:	4694      	mov	ip, r2
     e74:	4662      	mov	r2, ip
     e76:	4311      	orrs	r1, r2
     e78:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     e7a:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     e7c:	2180      	movs	r1, #128	; 0x80
     e7e:	0489      	lsls	r1, r1, #18
     e80:	60a1      	str	r1, [r4, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     e82:	629f      	str	r7, [r3, #40]	; 0x28
     e84:	4f0d      	ldr	r7, [pc, #52]	; (ebc <USB_DEVICE_INSTANCE_PORT_init+0x8c>)
     e86:	629f      	str	r7, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     e88:	6161      	str	r1, [r4, #20]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     e8a:	2159      	movs	r1, #89	; 0x59
     e8c:	5c5c      	ldrb	r4, [r3, r1]
     e8e:	4642      	mov	r2, r8
     e90:	4394      	bics	r4, r2
     e92:	545c      	strb	r4, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     e94:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     e96:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     e98:	432a      	orrs	r2, r5
     e9a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     e9c:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     e9e:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     ea0:	394a      	subs	r1, #74	; 0x4a
     ea2:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     ea4:	2160      	movs	r1, #96	; 0x60
     ea6:	430a      	orrs	r2, r1
     ea8:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     eaa:	541a      	strb	r2, [r3, r0]
	                      // <GPIO_PIN_FUNCTION_E"> E
	                      // <GPIO_PIN_FUNCTION_F"> F
	                      // <GPIO_PIN_FUNCTION_G"> G
	                      // <GPIO_PIN_FUNCTION_H"> H
	                      PINMUX_PA25G_USB_DP);
}
     eac:	bc04      	pop	{r2}
     eae:	4690      	mov	r8, r2
     eb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     eb2:	46c0      	nop			; (mov r8, r8)
     eb4:	41004400 	.word	0x41004400
     eb8:	c0000100 	.word	0xc0000100
     ebc:	c0000200 	.word	0xc0000200

00000ec0 <USB_DEVICE_INSTANCE_CLOCK_init>:
			PM->APBBMASK.reg |= 1 << peripheral;
     ec0:	4b06      	ldr	r3, [pc, #24]	; (edc <USB_DEVICE_INSTANCE_CLOCK_init+0x1c>)
     ec2:	69da      	ldr	r2, [r3, #28]
     ec4:	2120      	movs	r1, #32
     ec6:	430a      	orrs	r2, r1
     ec8:	61da      	str	r2, [r3, #28]
			PM->AHBMASK.reg |= 1 << peripheral;
     eca:	695a      	ldr	r2, [r3, #20]
     ecc:	3120      	adds	r1, #32
     ece:	430a      	orrs	r2, r1
     ed0:	615a      	str	r2, [r3, #20]
     ed2:	4a03      	ldr	r2, [pc, #12]	; (ee0 <USB_DEVICE_INSTANCE_CLOCK_init+0x20>)
     ed4:	4b03      	ldr	r3, [pc, #12]	; (ee4 <USB_DEVICE_INSTANCE_CLOCK_init+0x24>)
     ed6:	805a      	strh	r2, [r3, #2]
{

	_pm_enable_bus_clock(PM_BUS_APBB, USB);
	_pm_enable_bus_clock(PM_BUS_AHB, USB);
	_gclk_enable_channel(USB_GCLK_ID, CONF_GCLK_USB_SRC);
}
     ed8:	4770      	bx	lr
     eda:	46c0      	nop			; (mov r8, r8)
     edc:	40000400 	.word	0x40000400
     ee0:	00004006 	.word	0x00004006
     ee4:	40000c00 	.word	0x40000c00

00000ee8 <USB_DEVICE_INSTANCE_init>:

void USB_DEVICE_INSTANCE_init(void)
{
     ee8:	b510      	push	{r4, lr}
	USB_DEVICE_INSTANCE_CLOCK_init();
     eea:	4b03      	ldr	r3, [pc, #12]	; (ef8 <USB_DEVICE_INSTANCE_init+0x10>)
     eec:	4798      	blx	r3
	usb_d_init();
     eee:	4b03      	ldr	r3, [pc, #12]	; (efc <USB_DEVICE_INSTANCE_init+0x14>)
     ef0:	4798      	blx	r3
	USB_DEVICE_INSTANCE_PORT_init();
     ef2:	4b03      	ldr	r3, [pc, #12]	; (f00 <USB_DEVICE_INSTANCE_init+0x18>)
     ef4:	4798      	blx	r3
}
     ef6:	bd10      	pop	{r4, pc}
     ef8:	00000ec1 	.word	0x00000ec1
     efc:	000013cd 	.word	0x000013cd
     f00:	00000e31 	.word	0x00000e31

00000f04 <system_init>:

void system_init(void)
{
     f04:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     f06:	4b0c      	ldr	r3, [pc, #48]	; (f38 <system_init+0x34>)
     f08:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     f0a:	23c0      	movs	r3, #192	; 0xc0
     f0c:	05db      	lsls	r3, r3, #23
     f0e:	2280      	movs	r2, #128	; 0x80
     f10:	619a      	str	r2, [r3, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     f12:	609a      	str	r2, [r3, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     f14:	4b09      	ldr	r3, [pc, #36]	; (f3c <system_init+0x38>)
     f16:	4a0a      	ldr	r2, [pc, #40]	; (f40 <system_init+0x3c>)
     f18:	629a      	str	r2, [r3, #40]	; 0x28
     f1a:	22c0      	movs	r2, #192	; 0xc0
     f1c:	0612      	lsls	r2, r2, #24
     f1e:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     f20:	2147      	movs	r1, #71	; 0x47
     f22:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     f24:	2001      	movs	r0, #1
     f26:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     f28:	545a      	strb	r2, [r3, r1]
	// Set pin direction to output
	gpio_set_pin_direction(CS_ADF5610, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(CS_ADF5610, GPIO_PIN_FUNCTION_OFF);

	SPI_0_init();
     f2a:	4b06      	ldr	r3, [pc, #24]	; (f44 <system_init+0x40>)
     f2c:	4798      	blx	r3

	delay_driver_init();
     f2e:	4b06      	ldr	r3, [pc, #24]	; (f48 <system_init+0x44>)
     f30:	4798      	blx	r3

	USB_DEVICE_INSTANCE_init();
     f32:	4b06      	ldr	r3, [pc, #24]	; (f4c <system_init+0x48>)
     f34:	4798      	blx	r3
}
     f36:	bd10      	pop	{r4, pc}
     f38:	0000144d 	.word	0x0000144d
     f3c:	41004400 	.word	0x41004400
     f40:	40000080 	.word	0x40000080
     f44:	00000df5 	.word	0x00000df5
     f48:	00000e1d 	.word	0x00000e1d
     f4c:	00000ee9 	.word	0x00000ee9

00000f50 <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     f50:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     f54:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     f56:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     f58:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     f5c:	4770      	bx	lr

00000f5e <atomic_leave_critical>:
     f5e:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     f62:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     f64:	f383 8810 	msr	PRIMASK, r3
}
     f68:	4770      	bx	lr
	...

00000f6c <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
     f6c:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
     f6e:	4b02      	ldr	r3, [pc, #8]	; (f78 <delay_init+0xc>)
     f70:	6018      	str	r0, [r3, #0]
     f72:	4b02      	ldr	r3, [pc, #8]	; (f7c <delay_init+0x10>)
     f74:	4798      	blx	r3
}
     f76:	bd10      	pop	{r4, pc}
     f78:	2000027c 	.word	0x2000027c
     f7c:	000018a1 	.word	0x000018a1

00000f80 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     f80:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     f82:	4b04      	ldr	r3, [pc, #16]	; (f94 <delay_ms+0x14>)
     f84:	681c      	ldr	r4, [r3, #0]
     f86:	4b04      	ldr	r3, [pc, #16]	; (f98 <delay_ms+0x18>)
     f88:	4798      	blx	r3
     f8a:	0001      	movs	r1, r0
     f8c:	0020      	movs	r0, r4
     f8e:	4b03      	ldr	r3, [pc, #12]	; (f9c <delay_ms+0x1c>)
     f90:	4798      	blx	r3
}
     f92:	bd10      	pop	{r4, pc}
     f94:	2000027c 	.word	0x2000027c
     f98:	00001441 	.word	0x00001441
     f9c:	000018ad 	.word	0x000018ad

00000fa0 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     fa0:	b570      	push	{r4, r5, r6, lr}
     fa2:	0004      	movs	r4, r0
     fa4:	000d      	movs	r5, r1
     fa6:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     fa8:	2800      	cmp	r0, #0
     faa:	d00e      	beq.n	fca <io_write+0x2a>
     fac:	2900      	cmp	r1, #0
     fae:	d00a      	beq.n	fc6 <io_write+0x26>
     fb0:	2001      	movs	r0, #1
     fb2:	2234      	movs	r2, #52	; 0x34
     fb4:	4906      	ldr	r1, [pc, #24]	; (fd0 <io_write+0x30>)
     fb6:	4b07      	ldr	r3, [pc, #28]	; (fd4 <io_write+0x34>)
     fb8:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     fba:	6823      	ldr	r3, [r4, #0]
     fbc:	0032      	movs	r2, r6
     fbe:	0029      	movs	r1, r5
     fc0:	0020      	movs	r0, r4
     fc2:	4798      	blx	r3
}
     fc4:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     fc6:	2000      	movs	r0, #0
     fc8:	e7f3      	b.n	fb2 <io_write+0x12>
     fca:	2000      	movs	r0, #0
     fcc:	e7f1      	b.n	fb2 <io_write+0x12>
     fce:	46c0      	nop			; (mov r8, r8)
     fd0:	00005f68 	.word	0x00005f68
     fd4:	00001439 	.word	0x00001439

00000fd8 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     fd8:	b570      	push	{r4, r5, r6, lr}
     fda:	0004      	movs	r4, r0
     fdc:	000d      	movs	r5, r1
     fde:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     fe0:	2800      	cmp	r0, #0
     fe2:	d00e      	beq.n	1002 <io_read+0x2a>
     fe4:	2900      	cmp	r1, #0
     fe6:	d00a      	beq.n	ffe <io_read+0x26>
     fe8:	2001      	movs	r0, #1
     fea:	223d      	movs	r2, #61	; 0x3d
     fec:	4906      	ldr	r1, [pc, #24]	; (1008 <io_read+0x30>)
     fee:	4b07      	ldr	r3, [pc, #28]	; (100c <io_read+0x34>)
     ff0:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     ff2:	6863      	ldr	r3, [r4, #4]
     ff4:	0032      	movs	r2, r6
     ff6:	0029      	movs	r1, r5
     ff8:	0020      	movs	r0, r4
     ffa:	4798      	blx	r3
}
     ffc:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     ffe:	2000      	movs	r0, #0
    1000:	e7f3      	b.n	fea <io_read+0x12>
    1002:	2000      	movs	r0, #0
    1004:	e7f1      	b.n	fea <io_read+0x12>
    1006:	46c0      	nop			; (mov r8, r8)
    1008:	00005f68 	.word	0x00005f68
    100c:	00001439 	.word	0x00001439

00001010 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
    1010:	b570      	push	{r4, r5, r6, lr}
    1012:	0004      	movs	r4, r0
    1014:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
    1016:	2800      	cmp	r0, #0
    1018:	d017      	beq.n	104a <spi_m_sync_init+0x3a>
    101a:	2900      	cmp	r1, #0
    101c:	d013      	beq.n	1046 <spi_m_sync_init+0x36>
    101e:	2001      	movs	r0, #1
    1020:	2240      	movs	r2, #64	; 0x40
    1022:	490b      	ldr	r1, [pc, #44]	; (1050 <spi_m_sync_init+0x40>)
    1024:	4b0b      	ldr	r3, [pc, #44]	; (1054 <spi_m_sync_init+0x44>)
    1026:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
    1028:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
    102a:	1d20      	adds	r0, r4, #4
    102c:	0029      	movs	r1, r5
    102e:	4b0a      	ldr	r3, [pc, #40]	; (1058 <spi_m_sync_init+0x48>)
    1030:	4798      	blx	r3

	if (rc < 0) {
    1032:	2800      	cmp	r0, #0
    1034:	db06      	blt.n	1044 <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
    1036:	4b09      	ldr	r3, [pc, #36]	; (105c <spi_m_sync_init+0x4c>)
    1038:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
    103a:	4b09      	ldr	r3, [pc, #36]	; (1060 <spi_m_sync_init+0x50>)
    103c:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
    103e:	4b09      	ldr	r3, [pc, #36]	; (1064 <spi_m_sync_init+0x54>)
    1040:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
    1042:	2000      	movs	r0, #0
}
    1044:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
    1046:	2000      	movs	r0, #0
    1048:	e7ea      	b.n	1020 <spi_m_sync_init+0x10>
    104a:	2000      	movs	r0, #0
    104c:	e7e8      	b.n	1020 <spi_m_sync_init+0x10>
    104e:	46c0      	nop			; (mov r8, r8)
    1050:	00005f7c 	.word	0x00005f7c
    1054:	00001439 	.word	0x00001439
    1058:	000014ed 	.word	0x000014ed
    105c:	ffff8000 	.word	0xffff8000
    1060:	00001115 	.word	0x00001115
    1064:	000010d9 	.word	0x000010d9

00001068 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
    1068:	b510      	push	{r4, lr}
    106a:	0004      	movs	r4, r0
	ASSERT(spi);
    106c:	1e43      	subs	r3, r0, #1
    106e:	4198      	sbcs	r0, r3
    1070:	b2c0      	uxtb	r0, r0
    1072:	2257      	movs	r2, #87	; 0x57
    1074:	4903      	ldr	r1, [pc, #12]	; (1084 <spi_m_sync_enable+0x1c>)
    1076:	4b04      	ldr	r3, [pc, #16]	; (1088 <spi_m_sync_enable+0x20>)
    1078:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
    107a:	1d20      	adds	r0, r4, #4
    107c:	4b03      	ldr	r3, [pc, #12]	; (108c <spi_m_sync_enable+0x24>)
    107e:	4798      	blx	r3
}
    1080:	bd10      	pop	{r4, pc}
    1082:	46c0      	nop			; (mov r8, r8)
    1084:	00005f7c 	.word	0x00005f7c
    1088:	00001439 	.word	0x00001439
    108c:	000016e9 	.word	0x000016e9

00001090 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
    1090:	b530      	push	{r4, r5, lr}
    1092:	b087      	sub	sp, #28
    1094:	0004      	movs	r4, r0
    1096:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
    1098:	2800      	cmp	r0, #0
    109a:	d015      	beq.n	10c8 <spi_m_sync_transfer+0x38>
    109c:	2900      	cmp	r1, #0
    109e:	d011      	beq.n	10c4 <spi_m_sync_transfer+0x34>
    10a0:	2001      	movs	r0, #1
    10a2:	22b3      	movs	r2, #179	; 0xb3
    10a4:	4909      	ldr	r1, [pc, #36]	; (10cc <spi_m_sync_transfer+0x3c>)
    10a6:	4b0a      	ldr	r3, [pc, #40]	; (10d0 <spi_m_sync_transfer+0x40>)
    10a8:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
    10aa:	682b      	ldr	r3, [r5, #0]
    10ac:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
    10ae:	686b      	ldr	r3, [r5, #4]
    10b0:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
    10b2:	68ab      	ldr	r3, [r5, #8]
    10b4:	9301      	str	r3, [sp, #4]
    10b6:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
    10b8:	1d20      	adds	r0, r4, #4
    10ba:	a903      	add	r1, sp, #12
    10bc:	4b05      	ldr	r3, [pc, #20]	; (10d4 <spi_m_sync_transfer+0x44>)
    10be:	4798      	blx	r3
}
    10c0:	b007      	add	sp, #28
    10c2:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
    10c4:	2000      	movs	r0, #0
    10c6:	e7ec      	b.n	10a2 <spi_m_sync_transfer+0x12>
    10c8:	2000      	movs	r0, #0
    10ca:	e7ea      	b.n	10a2 <spi_m_sync_transfer+0x12>
    10cc:	00005f7c 	.word	0x00005f7c
    10d0:	00001439 	.word	0x00001439
    10d4:	0000171d 	.word	0x0000171d

000010d8 <_spi_m_sync_io_write>:
{
    10d8:	b570      	push	{r4, r5, r6, lr}
    10da:	b084      	sub	sp, #16
    10dc:	0004      	movs	r4, r0
    10de:	000e      	movs	r6, r1
    10e0:	0015      	movs	r5, r2
	ASSERT(io);
    10e2:	1e43      	subs	r3, r0, #1
    10e4:	4198      	sbcs	r0, r3
    10e6:	b2c0      	uxtb	r0, r0
    10e8:	22a3      	movs	r2, #163	; 0xa3
    10ea:	4907      	ldr	r1, [pc, #28]	; (1108 <_spi_m_sync_io_write+0x30>)
    10ec:	4b07      	ldr	r3, [pc, #28]	; (110c <_spi_m_sync_io_write+0x34>)
    10ee:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    10f0:	0020      	movs	r0, r4
    10f2:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
    10f4:	2300      	movs	r3, #0
    10f6:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
    10f8:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
    10fa:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    10fc:	a901      	add	r1, sp, #4
    10fe:	4b04      	ldr	r3, [pc, #16]	; (1110 <_spi_m_sync_io_write+0x38>)
    1100:	4798      	blx	r3
}
    1102:	b004      	add	sp, #16
    1104:	bd70      	pop	{r4, r5, r6, pc}
    1106:	46c0      	nop			; (mov r8, r8)
    1108:	00005f7c 	.word	0x00005f7c
    110c:	00001439 	.word	0x00001439
    1110:	00001091 	.word	0x00001091

00001114 <_spi_m_sync_io_read>:
{
    1114:	b570      	push	{r4, r5, r6, lr}
    1116:	b084      	sub	sp, #16
    1118:	0004      	movs	r4, r0
    111a:	000e      	movs	r6, r1
    111c:	0015      	movs	r5, r2
	ASSERT(io);
    111e:	1e43      	subs	r3, r0, #1
    1120:	4198      	sbcs	r0, r3
    1122:	b2c0      	uxtb	r0, r0
    1124:	2287      	movs	r2, #135	; 0x87
    1126:	4907      	ldr	r1, [pc, #28]	; (1144 <_spi_m_sync_io_read+0x30>)
    1128:	4b07      	ldr	r3, [pc, #28]	; (1148 <_spi_m_sync_io_read+0x34>)
    112a:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
    112c:	0020      	movs	r0, r4
    112e:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
    1130:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
    1132:	2300      	movs	r3, #0
    1134:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
    1136:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
    1138:	a901      	add	r1, sp, #4
    113a:	4b04      	ldr	r3, [pc, #16]	; (114c <_spi_m_sync_io_read+0x38>)
    113c:	4798      	blx	r3
}
    113e:	b004      	add	sp, #16
    1140:	bd70      	pop	{r4, r5, r6, pc}
    1142:	46c0      	nop			; (mov r8, r8)
    1144:	00005f7c 	.word	0x00005f7c
    1148:	00001439 	.word	0x00001439
    114c:	00001091 	.word	0x00001091

00001150 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
    1150:	b570      	push	{r4, r5, r6, lr}
    1152:	0004      	movs	r4, r0
    1154:	000d      	movs	r5, r1
	ASSERT(spi && io);
    1156:	2800      	cmp	r0, #0
    1158:	d00c      	beq.n	1174 <spi_m_sync_get_io_descriptor+0x24>
    115a:	2900      	cmp	r1, #0
    115c:	d008      	beq.n	1170 <spi_m_sync_get_io_descriptor+0x20>
    115e:	2001      	movs	r0, #1
    1160:	22bd      	movs	r2, #189	; 0xbd
    1162:	4905      	ldr	r1, [pc, #20]	; (1178 <spi_m_sync_get_io_descriptor+0x28>)
    1164:	4b05      	ldr	r3, [pc, #20]	; (117c <spi_m_sync_get_io_descriptor+0x2c>)
    1166:	4798      	blx	r3
	*io = &spi->io;
    1168:	340c      	adds	r4, #12
    116a:	602c      	str	r4, [r5, #0]
	return 0;
}
    116c:	2000      	movs	r0, #0
    116e:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
    1170:	2000      	movs	r0, #0
    1172:	e7f5      	b.n	1160 <spi_m_sync_get_io_descriptor+0x10>
    1174:	2000      	movs	r0, #0
    1176:	e7f3      	b.n	1160 <spi_m_sync_get_io_descriptor+0x10>
    1178:	00005f7c 	.word	0x00005f7c
    117c:	00001439 	.word	0x00001439

00001180 <_usb_d_find_ep>:
 * \return Index of endpoint descriptor.
 * \retval >=0 The index.
 * \retval <0 Not found (endpoint is not initialized).
 */
static int8_t _usb_d_find_ep(const uint8_t ep)
{
    1180:	b510      	push	{r4, lr}
    1182:	0001      	movs	r1, r0
	int8_t i;
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    1184:	2000      	movs	r0, #0
    1186:	e001      	b.n	118c <_usb_d_find_ep+0xc>
    1188:	3001      	adds	r0, #1
    118a:	b240      	sxtb	r0, r0
    118c:	2803      	cmp	r0, #3
    118e:	dc0f      	bgt.n	11b0 <_usb_d_find_ep+0x30>
		if (usb_d_inst.ep[i].xfer.hdr.ep == ep) {
    1190:	0142      	lsls	r2, r0, #5
    1192:	4b09      	ldr	r3, [pc, #36]	; (11b8 <_usb_d_find_ep+0x38>)
    1194:	189b      	adds	r3, r3, r2
    1196:	785a      	ldrb	r2, [r3, #1]
    1198:	428a      	cmp	r2, r1
    119a:	d00b      	beq.n	11b4 <_usb_d_find_ep+0x34>
			return i;
		}
		if (usb_d_inst.ep[i].xfer.hdr.type == USB_EP_XTYPE_CTRL
    119c:	0143      	lsls	r3, r0, #5
    119e:	4c06      	ldr	r4, [pc, #24]	; (11b8 <_usb_d_find_ep+0x38>)
    11a0:	5d1b      	ldrb	r3, [r3, r4]
    11a2:	2b00      	cmp	r3, #0
    11a4:	d1f0      	bne.n	1188 <_usb_d_find_ep+0x8>
		    && (ep & USB_EP_N_MASK) == usb_d_inst.ep[i].xfer.hdr.ep) {
    11a6:	330f      	adds	r3, #15
    11a8:	400b      	ands	r3, r1
    11aa:	4293      	cmp	r3, r2
    11ac:	d1ec      	bne.n	1188 <_usb_d_find_ep+0x8>
    11ae:	e001      	b.n	11b4 <_usb_d_find_ep+0x34>
			return i;
		}
	}
	return -1;
    11b0:	2001      	movs	r0, #1
    11b2:	4240      	negs	r0, r0
}
    11b4:	bd10      	pop	{r4, pc}
    11b6:	46c0      	nop			; (mov r8, r8)
    11b8:	20000280 	.word	0x20000280

000011bc <usb_d_dummy_cb_false>:
{
	(void)unused0;
	(void)unused1;
	(void)unused2;
	return false;
}
    11bc:	2000      	movs	r0, #0
    11be:	4770      	bx	lr

000011c0 <usb_d_cb_trans_more>:
 * \brief Callback invoked when request more data
 * \param[in] ep Endpoint number with transfer direction on bit 8.
 * \param[in] transfered Number of bytes transfered.
 */
static bool usb_d_cb_trans_more(const uint8_t ep, const uint32_t transfered)
{
    11c0:	b570      	push	{r4, r5, r6, lr}
    11c2:	0004      	movs	r4, r0
    11c4:	000d      	movs	r5, r1
	int8_t           ep_index = _usb_d_find_ep(ep);
    11c6:	4b08      	ldr	r3, [pc, #32]	; (11e8 <usb_d_cb_trans_more+0x28>)
    11c8:	4798      	blx	r3
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
	if (ept->xfer.hdr.state == USB_EP_S_X_DATA) {
    11ca:	0142      	lsls	r2, r0, #5
    11cc:	4b07      	ldr	r3, [pc, #28]	; (11ec <usb_d_cb_trans_more+0x2c>)
    11ce:	189b      	adds	r3, r3, r2
    11d0:	789b      	ldrb	r3, [r3, #2]
    11d2:	2b03      	cmp	r3, #3
    11d4:	d001      	beq.n	11da <usb_d_cb_trans_more+0x1a>
		return ept->callbacks.more(ep, transfered);
	}
	return false;
    11d6:	2000      	movs	r0, #0
}
    11d8:	bd70      	pop	{r4, r5, r6, pc}
		return ept->callbacks.more(ep, transfered);
    11da:	4b04      	ldr	r3, [pc, #16]	; (11ec <usb_d_cb_trans_more+0x2c>)
    11dc:	1898      	adds	r0, r3, r2
    11de:	6983      	ldr	r3, [r0, #24]
    11e0:	0029      	movs	r1, r5
    11e2:	0020      	movs	r0, r4
    11e4:	4798      	blx	r3
    11e6:	e7f7      	b.n	11d8 <usb_d_cb_trans_more+0x18>
    11e8:	00001181 	.word	0x00001181
    11ec:	20000280 	.word	0x20000280

000011f0 <_usb_d_cb_trans_done>:

/**
 * Callback when USB transactions are finished.
 */
static void _usb_d_cb_trans_done(const uint8_t ep, const int32_t code, const uint32_t transferred)
{
    11f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    11f2:	b087      	sub	sp, #28
    11f4:	0005      	movs	r5, r0
    11f6:	000f      	movs	r7, r1
    11f8:	9201      	str	r2, [sp, #4]
	int8_t           ep_index = _usb_d_find_ep(ep);
    11fa:	4b4a      	ldr	r3, [pc, #296]	; (1324 <_usb_d_cb_trans_done+0x134>)
    11fc:	4798      	blx	r3
    11fe:	0004      	movs	r4, r0
	struct usb_d_ep *ept      = &usb_d_inst.ep[ep_index];
    1200:	0146      	lsls	r6, r0, #5
    1202:	4a49      	ldr	r2, [pc, #292]	; (1328 <_usb_d_cb_trans_done+0x138>)
    1204:	1996      	adds	r6, r2, r6

	if (code == USB_TRANS_DONE) {
    1206:	2f00      	cmp	r7, #0
    1208:	d151      	bne.n	12ae <_usb_d_cb_trans_done+0xbe>
		ept->xfer.hdr.status = USB_XFER_DONE;
    120a:	0013      	movs	r3, r2
    120c:	0142      	lsls	r2, r0, #5
    120e:	2000      	movs	r0, #0
    1210:	70f0      	strb	r0, [r6, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    1212:	5cd3      	ldrb	r3, [r2, r3]
    1214:	2b00      	cmp	r3, #0
    1216:	d00e      	beq.n	1236 <_usb_d_cb_trans_done+0x46>
			usb_d_ctrl_trans_done(ept);
			return;
		}
		ept->xfer.hdr.state = USB_EP_S_IDLE;
    1218:	0162      	lsls	r2, r4, #5
    121a:	4b43      	ldr	r3, [pc, #268]	; (1328 <_usb_d_cb_trans_done+0x138>)
    121c:	189b      	adds	r3, r3, r2
    121e:	2201      	movs	r2, #1
    1220:	709a      	strb	r2, [r3, #2]
	} else {
		ept->xfer.hdr.state  = USB_EP_S_ERROR;
		ept->xfer.hdr.status = USB_XFER_ERROR;
	}

	ept->callbacks.xfer(ep, (enum usb_xfer_code)ept->xfer.hdr.status, (void *)transferred);
    1222:	0164      	lsls	r4, r4, #5
    1224:	4b40      	ldr	r3, [pc, #256]	; (1328 <_usb_d_cb_trans_done+0x138>)
    1226:	191c      	adds	r4, r3, r4
    1228:	69e3      	ldr	r3, [r4, #28]
    122a:	78e1      	ldrb	r1, [r4, #3]
    122c:	9a01      	ldr	r2, [sp, #4]
    122e:	0028      	movs	r0, r5
    1230:	4798      	blx	r3
}
    1232:	b007      	add	sp, #28
    1234:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint8_t state   = ept->xfer.hdr.state;
    1236:	78b3      	ldrb	r3, [r6, #2]
    1238:	240c      	movs	r4, #12
    123a:	5734      	ldrsb	r4, [r6, r4]
	if (state == USB_EP_S_X_DATA) {
    123c:	2b03      	cmp	r3, #3
    123e:	d008      	beq.n	1252 <_usb_d_cb_trans_done+0x62>
		ept->callbacks.xfer(ept->xfer.hdr.ep, USB_XFER_DONE, ept->xfer.req);
    1240:	0032      	movs	r2, r6
    1242:	320c      	adds	r2, #12
    1244:	7870      	ldrb	r0, [r6, #1]
    1246:	2100      	movs	r1, #0
    1248:	69f3      	ldr	r3, [r6, #28]
    124a:	4798      	blx	r3
		ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    124c:	2302      	movs	r3, #2
    124e:	70b3      	strb	r3, [r6, #2]
    1250:	e7ef      	b.n	1232 <_usb_d_cb_trans_done+0x42>
		bool err = ept->callbacks.xfer(ept->xfer.hdr.ep, USB_XFER_DATA, ept->xfer.req);
    1252:	7870      	ldrb	r0, [r6, #1]
    1254:	0032      	movs	r2, r6
    1256:	320c      	adds	r2, #12
    1258:	2101      	movs	r1, #1
    125a:	69f3      	ldr	r3, [r6, #28]
    125c:	4798      	blx	r3
		if (err) {
    125e:	2800      	cmp	r0, #0
    1260:	d010      	beq.n	1284 <_usb_d_cb_trans_done+0x94>
			ept->xfer.hdr.state  = USB_EP_S_HALTED;
    1262:	2305      	movs	r3, #5
    1264:	70b3      	strb	r3, [r6, #2]
			ept->xfer.hdr.status = USB_XFER_HALT;
    1266:	3b03      	subs	r3, #3
    1268:	70f3      	strb	r3, [r6, #3]
			_usb_d_dev_ep_stall(req_dir ? ept->xfer.hdr.ep : (ept->xfer.hdr.ep | USB_EP_DIR), USB_EP_STALL_SET);
    126a:	2c00      	cmp	r4, #0
    126c:	db08      	blt.n	1280 <_usb_d_cb_trans_done+0x90>
    126e:	7873      	ldrb	r3, [r6, #1]
    1270:	2080      	movs	r0, #128	; 0x80
    1272:	4240      	negs	r0, r0
    1274:	4318      	orrs	r0, r3
    1276:	b2c0      	uxtb	r0, r0
    1278:	2101      	movs	r1, #1
    127a:	4b2c      	ldr	r3, [pc, #176]	; (132c <_usb_d_cb_trans_done+0x13c>)
    127c:	4798      	blx	r3
    127e:	e7d8      	b.n	1232 <_usb_d_cb_trans_done+0x42>
    1280:	7870      	ldrb	r0, [r6, #1]
    1282:	e7f9      	b.n	1278 <_usb_d_cb_trans_done+0x88>
			ept->xfer.hdr.state = USB_EP_S_X_STATUS;
    1284:	2304      	movs	r3, #4
    1286:	70b3      	strb	r3, [r6, #2]
			_usb_d_trans(ept->xfer.hdr.ep, !req_dir, NULL, 0, 1);
    1288:	7871      	ldrb	r1, [r6, #1]
	struct usb_d_transfer trans
    128a:	2200      	movs	r2, #0
    128c:	9203      	str	r2, [sp, #12]
    128e:	9204      	str	r2, [sp, #16]
    1290:	2c00      	cmp	r4, #0
    1292:	db09      	blt.n	12a8 <_usb_d_cb_trans_done+0xb8>
    1294:	3b84      	subs	r3, #132	; 0x84
    1296:	430b      	orrs	r3, r1
    1298:	b2da      	uxtb	r2, r3
    129a:	a803      	add	r0, sp, #12
    129c:	7202      	strb	r2, [r0, #8]
    129e:	2301      	movs	r3, #1
    12a0:	7243      	strb	r3, [r0, #9]
	return _usb_d_dev_ep_trans(&trans);
    12a2:	4b23      	ldr	r3, [pc, #140]	; (1330 <_usb_d_cb_trans_done+0x140>)
    12a4:	4798      	blx	r3
    12a6:	e7c4      	b.n	1232 <_usb_d_cb_trans_done+0x42>
	struct usb_d_transfer trans
    12a8:	220f      	movs	r2, #15
    12aa:	400a      	ands	r2, r1
    12ac:	e7f5      	b.n	129a <_usb_d_cb_trans_done+0xaa>
	} else if (code == USB_TRANS_STALL) {
    12ae:	2f01      	cmp	r7, #1
    12b0:	d00a      	beq.n	12c8 <_usb_d_cb_trans_done+0xd8>
	} else if (code == USB_TRANS_ABORT) {
    12b2:	2f02      	cmp	r7, #2
    12b4:	d01d      	beq.n	12f2 <_usb_d_cb_trans_done+0x102>
	} else if (code == USB_TRANS_RESET) {
    12b6:	2f03      	cmp	r7, #3
    12b8:	d02c      	beq.n	1314 <_usb_d_cb_trans_done+0x124>
		ept->xfer.hdr.state  = USB_EP_S_ERROR;
    12ba:	0142      	lsls	r2, r0, #5
    12bc:	4b1a      	ldr	r3, [pc, #104]	; (1328 <_usb_d_cb_trans_done+0x138>)
    12be:	189b      	adds	r3, r3, r2
    12c0:	2206      	movs	r2, #6
    12c2:	709a      	strb	r2, [r3, #2]
		ept->xfer.hdr.status = USB_XFER_ERROR;
    12c4:	70da      	strb	r2, [r3, #3]
    12c6:	e7ac      	b.n	1222 <_usb_d_cb_trans_done+0x32>
		ept->xfer.hdr.status = USB_XFER_HALT;
    12c8:	4b17      	ldr	r3, [pc, #92]	; (1328 <_usb_d_cb_trans_done+0x138>)
    12ca:	0142      	lsls	r2, r0, #5
    12cc:	1899      	adds	r1, r3, r2
    12ce:	2002      	movs	r0, #2
    12d0:	70c8      	strb	r0, [r1, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    12d2:	5cd3      	ldrb	r3, [r2, r3]
    12d4:	2b00      	cmp	r3, #0
    12d6:	d005      	beq.n	12e4 <_usb_d_cb_trans_done+0xf4>
			ept->xfer.hdr.state = USB_EP_S_HALTED;
    12d8:	0162      	lsls	r2, r4, #5
    12da:	4b13      	ldr	r3, [pc, #76]	; (1328 <_usb_d_cb_trans_done+0x138>)
    12dc:	189b      	adds	r3, r3, r2
    12de:	2205      	movs	r2, #5
    12e0:	709a      	strb	r2, [r3, #2]
    12e2:	e79e      	b.n	1222 <_usb_d_cb_trans_done+0x32>
			ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    12e4:	2202      	movs	r2, #2
    12e6:	708a      	strb	r2, [r1, #2]
			_usb_d_dev_ep_stall(ep, USB_EP_STALL_CLR);
    12e8:	2100      	movs	r1, #0
    12ea:	0028      	movs	r0, r5
    12ec:	4b0f      	ldr	r3, [pc, #60]	; (132c <_usb_d_cb_trans_done+0x13c>)
    12ee:	4798      	blx	r3
    12f0:	e797      	b.n	1222 <_usb_d_cb_trans_done+0x32>
		ept->xfer.hdr.status = USB_XFER_ABORT;
    12f2:	4b0d      	ldr	r3, [pc, #52]	; (1328 <_usb_d_cb_trans_done+0x138>)
    12f4:	0142      	lsls	r2, r0, #5
    12f6:	1899      	adds	r1, r3, r2
    12f8:	2004      	movs	r0, #4
    12fa:	70c8      	strb	r0, [r1, #3]
		if (ept->xfer.hdr.type == USB_EP_XTYPE_CTRL) {
    12fc:	5cd3      	ldrb	r3, [r2, r3]
    12fe:	2b00      	cmp	r3, #0
    1300:	d005      	beq.n	130e <_usb_d_cb_trans_done+0x11e>
		ept->xfer.hdr.state = USB_EP_S_IDLE;
    1302:	0162      	lsls	r2, r4, #5
    1304:	4b08      	ldr	r3, [pc, #32]	; (1328 <_usb_d_cb_trans_done+0x138>)
    1306:	189b      	adds	r3, r3, r2
    1308:	2201      	movs	r2, #1
    130a:	709a      	strb	r2, [r3, #2]
    130c:	e789      	b.n	1222 <_usb_d_cb_trans_done+0x32>
			ept->xfer.hdr.state = USB_EP_S_X_SETUP;
    130e:	2302      	movs	r3, #2
    1310:	708b      	strb	r3, [r1, #2]
			return;
    1312:	e78e      	b.n	1232 <_usb_d_cb_trans_done+0x42>
		ept->xfer.hdr.state  = USB_EP_S_DISABLED;
    1314:	0142      	lsls	r2, r0, #5
    1316:	4b04      	ldr	r3, [pc, #16]	; (1328 <_usb_d_cb_trans_done+0x138>)
    1318:	189b      	adds	r3, r3, r2
    131a:	2200      	movs	r2, #0
    131c:	709a      	strb	r2, [r3, #2]
		ept->xfer.hdr.status = USB_XFER_RESET;
    131e:	3205      	adds	r2, #5
    1320:	70da      	strb	r2, [r3, #3]
    1322:	e77e      	b.n	1222 <_usb_d_cb_trans_done+0x32>
    1324:	00001181 	.word	0x00001181
    1328:	20000280 	.word	0x20000280
    132c:	00002291 	.word	0x00002291
    1330:	00002461 	.word	0x00002461

00001334 <usb_d_cb_trans_setup>:
{
    1334:	b5f0      	push	{r4, r5, r6, r7, lr}
    1336:	46c6      	mov	lr, r8
    1338:	b500      	push	{lr}
    133a:	0005      	movs	r5, r0
	int8_t           ep_index = _usb_d_find_ep(ep);
    133c:	4b1f      	ldr	r3, [pc, #124]	; (13bc <usb_d_cb_trans_setup+0x88>)
    133e:	4798      	blx	r3
    1340:	0006      	movs	r6, r0
	uint8_t *        req      = ept->xfer.req;
    1342:	0143      	lsls	r3, r0, #5
    1344:	3308      	adds	r3, #8
    1346:	4c1e      	ldr	r4, [pc, #120]	; (13c0 <usb_d_cb_trans_setup+0x8c>)
    1348:	18e4      	adds	r4, r4, r3
    134a:	3404      	adds	r4, #4
	uint8_t n = _usb_d_dev_ep_read_req(ep, req);
    134c:	0021      	movs	r1, r4
    134e:	0028      	movs	r0, r5
    1350:	4b1c      	ldr	r3, [pc, #112]	; (13c4 <usb_d_cb_trans_setup+0x90>)
    1352:	4798      	blx	r3
    1354:	b2c0      	uxtb	r0, r0
	if (n != 8) {
    1356:	2808      	cmp	r0, #8
    1358:	d00c      	beq.n	1374 <usb_d_cb_trans_setup+0x40>
		_usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
    135a:	2101      	movs	r1, #1
    135c:	0028      	movs	r0, r5
    135e:	4c1a      	ldr	r4, [pc, #104]	; (13c8 <usb_d_cb_trans_setup+0x94>)
    1360:	47a0      	blx	r4
		_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_SET);
    1362:	2080      	movs	r0, #128	; 0x80
    1364:	4240      	negs	r0, r0
    1366:	4328      	orrs	r0, r5
    1368:	b2c0      	uxtb	r0, r0
    136a:	2101      	movs	r1, #1
    136c:	47a0      	blx	r4
}
    136e:	bc04      	pop	{r2}
    1370:	4690      	mov	r8, r2
    1372:	bdf0      	pop	{r4, r5, r6, r7, pc}
	_usb_d_dev_ep_stall(ep, USB_EP_STALL_CLR);
    1374:	2100      	movs	r1, #0
    1376:	0028      	movs	r0, r5
    1378:	4b13      	ldr	r3, [pc, #76]	; (13c8 <usb_d_cb_trans_setup+0x94>)
    137a:	4698      	mov	r8, r3
    137c:	4798      	blx	r3
	_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_CLR);
    137e:	2780      	movs	r7, #128	; 0x80
    1380:	427f      	negs	r7, r7
    1382:	432f      	orrs	r7, r5
    1384:	b2ff      	uxtb	r7, r7
    1386:	2100      	movs	r1, #0
    1388:	0038      	movs	r0, r7
    138a:	47c0      	blx	r8
	ept->xfer.hdr.state = USB_EP_S_IDLE;
    138c:	0172      	lsls	r2, r6, #5
    138e:	4b0c      	ldr	r3, [pc, #48]	; (13c0 <usb_d_cb_trans_setup+0x8c>)
    1390:	189b      	adds	r3, r3, r2
    1392:	2201      	movs	r2, #1
    1394:	709a      	strb	r2, [r3, #2]
	if (!ept->callbacks.req(ep, req)) {
    1396:	695b      	ldr	r3, [r3, #20]
    1398:	0021      	movs	r1, r4
    139a:	0028      	movs	r0, r5
    139c:	4798      	blx	r3
    139e:	2800      	cmp	r0, #0
    13a0:	d1e5      	bne.n	136e <usb_d_cb_trans_setup+0x3a>
		ept->xfer.hdr.state = USB_EP_S_HALTED;
    13a2:	0176      	lsls	r6, r6, #5
    13a4:	4b06      	ldr	r3, [pc, #24]	; (13c0 <usb_d_cb_trans_setup+0x8c>)
    13a6:	199e      	adds	r6, r3, r6
    13a8:	2305      	movs	r3, #5
    13aa:	70b3      	strb	r3, [r6, #2]
		_usb_d_dev_ep_stall(ep, USB_EP_STALL_SET);
    13ac:	2101      	movs	r1, #1
    13ae:	0028      	movs	r0, r5
    13b0:	4c05      	ldr	r4, [pc, #20]	; (13c8 <usb_d_cb_trans_setup+0x94>)
    13b2:	47a0      	blx	r4
		_usb_d_dev_ep_stall(ep | USB_EP_DIR, USB_EP_STALL_SET);
    13b4:	2101      	movs	r1, #1
    13b6:	0038      	movs	r0, r7
    13b8:	47a0      	blx	r4
    13ba:	e7d8      	b.n	136e <usb_d_cb_trans_setup+0x3a>
    13bc:	00001181 	.word	0x00001181
    13c0:	20000280 	.word	0x20000280
    13c4:	000023e9 	.word	0x000023e9
    13c8:	00002291 	.word	0x00002291

000013cc <usb_d_init>:

int32_t usb_d_init(void)
{
    13cc:	b510      	push	{r4, lr}
	int32_t rc = _usb_d_dev_init();
    13ce:	4b12      	ldr	r3, [pc, #72]	; (1418 <usb_d_init+0x4c>)
    13d0:	4798      	blx	r3
	uint8_t i;
	if (rc < 0) {
    13d2:	2800      	cmp	r0, #0
    13d4:	db1e      	blt.n	1414 <usb_d_init+0x48>
		return rc;
	}
	memset(usb_d_inst.ep, 0x00, sizeof(struct usb_d_ep) * CONF_USB_D_NUM_EP_SP);
    13d6:	2280      	movs	r2, #128	; 0x80
    13d8:	2100      	movs	r1, #0
    13da:	4810      	ldr	r0, [pc, #64]	; (141c <usb_d_init+0x50>)
    13dc:	4b10      	ldr	r3, [pc, #64]	; (1420 <usb_d_init+0x54>)
    13de:	4798      	blx	r3
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    13e0:	2200      	movs	r2, #0
    13e2:	e00a      	b.n	13fa <usb_d_init+0x2e>
		usb_d_inst.ep[i].xfer.hdr.ep    = 0xFF;
    13e4:	0151      	lsls	r1, r2, #5
    13e6:	4b0d      	ldr	r3, [pc, #52]	; (141c <usb_d_init+0x50>)
    13e8:	185b      	adds	r3, r3, r1
    13ea:	21ff      	movs	r1, #255	; 0xff
    13ec:	7059      	strb	r1, [r3, #1]
		usb_d_inst.ep[i].callbacks.req  = (usb_d_ep_cb_setup_t)usb_d_dummy_cb_false;
    13ee:	490d      	ldr	r1, [pc, #52]	; (1424 <usb_d_init+0x58>)
    13f0:	6159      	str	r1, [r3, #20]
		usb_d_inst.ep[i].callbacks.more = (usb_d_ep_cb_more_t)usb_d_dummy_cb_false;
    13f2:	6199      	str	r1, [r3, #24]
		usb_d_inst.ep[i].callbacks.xfer = (usb_d_ep_cb_xfer_t)usb_d_dummy_cb_false;
    13f4:	61d9      	str	r1, [r3, #28]
	for (i = 0; i < CONF_USB_D_NUM_EP_SP; i++) {
    13f6:	3201      	adds	r2, #1
    13f8:	b2d2      	uxtb	r2, r2
    13fa:	2a03      	cmp	r2, #3
    13fc:	d9f2      	bls.n	13e4 <usb_d_init+0x18>
	}
	/* Handles device driver endpoint callbacks to build transfer. */
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_SETUP, (FUNC_PTR)usb_d_cb_trans_setup);
    13fe:	490a      	ldr	r1, [pc, #40]	; (1428 <usb_d_init+0x5c>)
    1400:	2000      	movs	r0, #0
    1402:	4c0a      	ldr	r4, [pc, #40]	; (142c <usb_d_init+0x60>)
    1404:	47a0      	blx	r4
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_MORE, (FUNC_PTR)usb_d_cb_trans_more);
    1406:	490a      	ldr	r1, [pc, #40]	; (1430 <usb_d_init+0x64>)
    1408:	2001      	movs	r0, #1
    140a:	47a0      	blx	r4
	_usb_d_dev_register_ep_callback(USB_D_DEV_EP_CB_DONE, (FUNC_PTR)_usb_d_cb_trans_done);
    140c:	4909      	ldr	r1, [pc, #36]	; (1434 <usb_d_init+0x68>)
    140e:	2002      	movs	r0, #2
    1410:	47a0      	blx	r4
	return ERR_NONE;
    1412:	2000      	movs	r0, #0
}
    1414:	bd10      	pop	{r4, pc}
    1416:	46c0      	nop			; (mov r8, r8)
    1418:	000021ed 	.word	0x000021ed
    141c:	20000280 	.word	0x20000280
    1420:	00005e03 	.word	0x00005e03
    1424:	000011bd 	.word	0x000011bd
    1428:	00001335 	.word	0x00001335
    142c:	00002639 	.word	0x00002639
    1430:	000011c1 	.word	0x000011c1
    1434:	000011f1 	.word	0x000011f1

00001438 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
    1438:	2800      	cmp	r0, #0
    143a:	d100      	bne.n	143e <assert+0x6>
		__asm("BKPT #0");
    143c:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
    143e:	4770      	bx	lr

00001440 <_get_cycles_for_ms>:
{
	switch (power) {
	case 8:
		return (ms * (freq / 100000)) * 100;
	case 7:
		return (ms * (freq / 10000)) * 10;
    1440:	2364      	movs	r3, #100	; 0x64
    1442:	4358      	muls	r0, r3
    1444:	0083      	lsls	r3, r0, #2
    1446:	181b      	adds	r3, r3, r0
    1448:	0058      	lsls	r0, r3, #1
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
    144a:	4770      	bx	lr

0000144c <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
    144c:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
    144e:	4b06      	ldr	r3, [pc, #24]	; (1468 <_init_chip+0x1c>)
    1450:	685a      	ldr	r2, [r3, #4]
    1452:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
    1454:	4b05      	ldr	r3, [pc, #20]	; (146c <_init_chip+0x20>)
    1456:	4798      	blx	r3
	_sysctrl_init_sources();
    1458:	4b05      	ldr	r3, [pc, #20]	; (1470 <_init_chip+0x24>)
    145a:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
    145c:	4b05      	ldr	r3, [pc, #20]	; (1474 <_init_chip+0x28>)
    145e:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
    1460:	20ff      	movs	r0, #255	; 0xff
    1462:	4b05      	ldr	r3, [pc, #20]	; (1478 <_init_chip+0x2c>)
    1464:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
    1466:	bd10      	pop	{r4, pc}
    1468:	41004000 	.word	0x41004000
    146c:	0000149d 	.word	0x0000149d
    1470:	00001831 	.word	0x00001831
    1474:	0000187d 	.word	0x0000187d
    1478:	0000147d 	.word	0x0000147d

0000147c <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
    147c:	07c3      	lsls	r3, r0, #31
    147e:	d50a      	bpl.n	1496 <_gclk_init_generators_by_fref+0x1a>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
    1480:	4b05      	ldr	r3, [pc, #20]	; (1498 <_gclk_init_generators_by_fref+0x1c>)
    1482:	2280      	movs	r2, #128	; 0x80
    1484:	0052      	lsls	r2, r2, #1
    1486:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
    1488:	2283      	movs	r2, #131	; 0x83
    148a:	0252      	lsls	r2, r2, #9
    148c:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
    148e:	4b02      	ldr	r3, [pc, #8]	; (1498 <_gclk_init_generators_by_fref+0x1c>)
    1490:	785b      	ldrb	r3, [r3, #1]
    1492:	09db      	lsrs	r3, r3, #7
    1494:	d1fb      	bne.n	148e <_gclk_init_generators_by_fref+0x12>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
    1496:	4770      	bx	lr
    1498:	40000c00 	.word	0x40000c00

0000149c <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
    149c:	4b06      	ldr	r3, [pc, #24]	; (14b8 <_pm_init+0x1c>)
    149e:	7a1a      	ldrb	r2, [r3, #8]
    14a0:	b2d2      	uxtb	r2, r2
    14a2:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
    14a4:	7a5a      	ldrb	r2, [r3, #9]
    14a6:	b2d2      	uxtb	r2, r2
    14a8:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
    14aa:	7a9a      	ldrb	r2, [r3, #10]
    14ac:	b2d2      	uxtb	r2, r2
    14ae:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
    14b0:	7ada      	ldrb	r2, [r3, #11]
    14b2:	b2d2      	uxtb	r2, r2
    14b4:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
    14b6:	4770      	bx	lr
    14b8:	40000400 	.word	0x40000400

000014bc <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
    14bc:	4b02      	ldr	r3, [pc, #8]	; (14c8 <_sercom_get_hardware_index+0xc>)
    14be:	469c      	mov	ip, r3
    14c0:	4460      	add	r0, ip
    14c2:	0a80      	lsrs	r0, r0, #10
    14c4:	b2c0      	uxtb	r0, r0
}
    14c6:	4770      	bx	lr
    14c8:	bdfff800 	.word	0xbdfff800

000014cc <_spi_sync_enable>:
	};
}

static inline bool hri_sercomspi_is_syncing(const void *const hw, hri_sercomspi_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    14cc:	69c3      	ldr	r3, [r0, #28]
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    14ce:	07db      	lsls	r3, r3, #31
    14d0:	d408      	bmi.n	14e4 <_spi_sync_enable+0x18>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    14d2:	6803      	ldr	r3, [r0, #0]
    14d4:	2202      	movs	r2, #2
    14d6:	4313      	orrs	r3, r2
    14d8:	6003      	str	r3, [r0, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    14da:	69c3      	ldr	r3, [r0, #28]
    14dc:	079b      	lsls	r3, r3, #30
    14de:	d1fc      	bne.n	14da <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
    14e0:	2000      	movs	r0, #0
}
    14e2:	4770      	bx	lr
		return ERR_BUSY;
    14e4:	2004      	movs	r0, #4
    14e6:	4240      	negs	r0, r0
    14e8:	e7fb      	b.n	14e2 <_spi_sync_enable+0x16>
	...

000014ec <_spi_m_sync_init>:

	return NULL;
}

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    14ec:	b570      	push	{r4, r5, r6, lr}
    14ee:	0006      	movs	r6, r0
    14f0:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    14f2:	0008      	movs	r0, r1
    14f4:	4b71      	ldr	r3, [pc, #452]	; (16bc <_spi_m_sync_init+0x1d0>)
    14f6:	4798      	blx	r3
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    14f8:	2300      	movs	r3, #0
    14fa:	2b00      	cmp	r3, #0
    14fc:	d100      	bne.n	1500 <_spi_m_sync_init+0x14>
    14fe:	e084      	b.n	160a <_spi_m_sync_init+0x11e>
	return NULL;
    1500:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    1502:	2e00      	cmp	r6, #0
    1504:	d100      	bne.n	1508 <_spi_m_sync_init+0x1c>
    1506:	e08d      	b.n	1624 <_spi_m_sync_init+0x138>
    1508:	2c00      	cmp	r4, #0
    150a:	d100      	bne.n	150e <_spi_m_sync_init+0x22>
    150c:	e088      	b.n	1620 <_spi_m_sync_init+0x134>
    150e:	2001      	movs	r0, #1
    1510:	4a6b      	ldr	r2, [pc, #428]	; (16c0 <_spi_m_sync_init+0x1d4>)
    1512:	496c      	ldr	r1, [pc, #432]	; (16c4 <_spi_m_sync_init+0x1d8>)
    1514:	4b6c      	ldr	r3, [pc, #432]	; (16c8 <_spi_m_sync_init+0x1dc>)
    1516:	4798      	blx	r3

	if (regs == NULL) {
    1518:	2d00      	cmp	r5, #0
    151a:	d100      	bne.n	151e <_spi_m_sync_init+0x32>
    151c:	e0cb      	b.n	16b6 <_spi_m_sync_init+0x1ca>
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    151e:	69e3      	ldr	r3, [r4, #28]
		return ERR_INVALID_ARG;
	}

	if (!hri_sercomspi_is_syncing(hw, SERCOM_SPI_SYNCBUSY_SWRST)) {
    1520:	07db      	lsls	r3, r3, #31
    1522:	d421      	bmi.n	1568 <_spi_m_sync_init+0x7c>
		uint32_t mode = regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk;
    1524:	782a      	ldrb	r2, [r5, #0]
    1526:	786b      	ldrb	r3, [r5, #1]
    1528:	021b      	lsls	r3, r3, #8
    152a:	4313      	orrs	r3, r2
    152c:	78aa      	ldrb	r2, [r5, #2]
    152e:	0412      	lsls	r2, r2, #16
    1530:	4313      	orrs	r3, r2
    1532:	78ea      	ldrb	r2, [r5, #3]
    1534:	0612      	lsls	r2, r2, #24
    1536:	431a      	orrs	r2, r3
    1538:	231c      	movs	r3, #28
    153a:	401a      	ands	r2, r3
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    153c:	69e3      	ldr	r3, [r4, #28]
    153e:	079b      	lsls	r3, r3, #30
    1540:	d1fc      	bne.n	153c <_spi_m_sync_init+0x50>
static inline hri_sercomspi_ctrla_reg_t hri_sercomspi_get_CTRLA_reg(const void *const         hw,
                                                                    hri_sercomspi_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1542:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    1544:	079b      	lsls	r3, r3, #30
    1546:	d509      	bpl.n	155c <_spi_m_sync_init+0x70>
	((Sercom *)hw)->SPI.CTRLA.reg &= ~SERCOM_SPI_CTRLA_ENABLE;
    1548:	6823      	ldr	r3, [r4, #0]
    154a:	2102      	movs	r1, #2
    154c:	438b      	bics	r3, r1
    154e:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1550:	69e3      	ldr	r3, [r4, #28]
    1552:	079b      	lsls	r3, r3, #30
    1554:	d1fc      	bne.n	1550 <_spi_m_sync_init+0x64>
    1556:	69e3      	ldr	r3, [r4, #28]
    1558:	079b      	lsls	r3, r3, #30
    155a:	d4fc      	bmi.n	1556 <_spi_m_sync_init+0x6a>
			hri_sercomspi_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_ENABLE);
		}
		hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST | mode);
    155c:	2301      	movs	r3, #1
    155e:	4313      	orrs	r3, r2
}

static inline void hri_sercomspi_write_CTRLA_reg(const void *const hw, hri_sercomspi_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1560:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1562:	69e3      	ldr	r3, [r4, #28]
    1564:	079b      	lsls	r3, r3, #30
    1566:	d1fc      	bne.n	1562 <_spi_m_sync_init+0x76>
    1568:	69e3      	ldr	r3, [r4, #28]
    156a:	07db      	lsls	r3, r3, #31
    156c:	d4fc      	bmi.n	1568 <_spi_m_sync_init+0x7c>
	}
	hri_sercomspi_wait_for_sync(hw, SERCOM_SPI_SYNCBUSY_SWRST);

	dev->prvt = hw;
    156e:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    1570:	782b      	ldrb	r3, [r5, #0]
    1572:	786a      	ldrb	r2, [r5, #1]
    1574:	0212      	lsls	r2, r2, #8
    1576:	431a      	orrs	r2, r3
    1578:	78ab      	ldrb	r3, [r5, #2]
    157a:	041b      	lsls	r3, r3, #16
    157c:	431a      	orrs	r2, r3
    157e:	78eb      	ldrb	r3, [r5, #3]
    1580:	061b      	lsls	r3, r3, #24
    1582:	4313      	orrs	r3, r2
    1584:	221c      	movs	r2, #28
    1586:	4013      	ands	r3, r2
    1588:	2b08      	cmp	r3, #8
    158a:	d04d      	beq.n	1628 <_spi_m_sync_init+0x13c>
	ASSERT(hw && regs);
    158c:	2c00      	cmp	r4, #0
    158e:	d100      	bne.n	1592 <_spi_m_sync_init+0xa6>
    1590:	e08d      	b.n	16ae <_spi_m_sync_init+0x1c2>
    1592:	2d00      	cmp	r5, #0
    1594:	d100      	bne.n	1598 <_spi_m_sync_init+0xac>
    1596:	e088      	b.n	16aa <_spi_m_sync_init+0x1be>
    1598:	2001      	movs	r0, #1
    159a:	4a4c      	ldr	r2, [pc, #304]	; (16cc <_spi_m_sync_init+0x1e0>)
    159c:	4949      	ldr	r1, [pc, #292]	; (16c4 <_spi_m_sync_init+0x1d8>)
    159e:	4b4a      	ldr	r3, [pc, #296]	; (16c8 <_spi_m_sync_init+0x1dc>)
    15a0:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    15a2:	782b      	ldrb	r3, [r5, #0]
    15a4:	786a      	ldrb	r2, [r5, #1]
    15a6:	0212      	lsls	r2, r2, #8
    15a8:	431a      	orrs	r2, r3
    15aa:	78ab      	ldrb	r3, [r5, #2]
    15ac:	041b      	lsls	r3, r3, #16
    15ae:	431a      	orrs	r2, r3
    15b0:	78eb      	ldrb	r3, [r5, #3]
    15b2:	061b      	lsls	r3, r3, #24
    15b4:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    15b6:	4a46      	ldr	r2, [pc, #280]	; (16d0 <_spi_m_sync_init+0x1e4>)
    15b8:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    15ba:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15bc:	69e3      	ldr	r3, [r4, #28]
    15be:	079b      	lsls	r3, r3, #30
    15c0:	d1fc      	bne.n	15bc <_spi_m_sync_init+0xd0>
	    (regs->ctrlb
    15c2:	792b      	ldrb	r3, [r5, #4]
    15c4:	796a      	ldrb	r2, [r5, #5]
    15c6:	0212      	lsls	r2, r2, #8
    15c8:	431a      	orrs	r2, r3
    15ca:	79ab      	ldrb	r3, [r5, #6]
    15cc:	041b      	lsls	r3, r3, #16
    15ce:	431a      	orrs	r2, r3
    15d0:	79eb      	ldrb	r3, [r5, #7]
    15d2:	061b      	lsls	r3, r3, #24
    15d4:	4313      	orrs	r3, r2
	        | (SERCOM_SPI_CTRLB_RXEN));
    15d6:	4a3f      	ldr	r2, [pc, #252]	; (16d4 <_spi_m_sync_init+0x1e8>)
    15d8:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    15da:	2280      	movs	r2, #128	; 0x80
    15dc:	0292      	lsls	r2, r2, #10
    15de:	4313      	orrs	r3, r2
}

static inline void hri_sercomspi_write_CTRLB_reg(const void *const hw, hri_sercomspi_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    15e0:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    15e2:	69e3      	ldr	r3, [r4, #28]
    15e4:	075b      	lsls	r3, r3, #29
    15e6:	d1fc      	bne.n	15e2 <_spi_m_sync_init+0xf6>
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    15e8:	7b2b      	ldrb	r3, [r5, #12]
}

static inline void hri_sercomspi_write_BAUD_reg(const void *const hw, hri_sercomspi_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.BAUD.reg = data;
    15ea:	7323      	strb	r3, [r4, #12]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    15ec:	7b6a      	ldrb	r2, [r5, #13]
}

static inline void hri_sercomspi_write_DBGCTRL_reg(const void *const hw, hri_sercomspi_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    15ee:	2330      	movs	r3, #48	; 0x30
    15f0:	54e2      	strb	r2, [r4, r3]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    15f2:	792b      	ldrb	r3, [r5, #4]
    15f4:	075b      	lsls	r3, r3, #29
    15f6:	d15c      	bne.n	16b2 <_spi_m_sync_init+0x1c6>
    15f8:	2301      	movs	r3, #1
    15fa:	7133      	strb	r3, [r6, #4]

	dev->dummy_byte = regs->dummy_byte;
    15fc:	7baa      	ldrb	r2, [r5, #14]
    15fe:	7beb      	ldrb	r3, [r5, #15]
    1600:	021b      	lsls	r3, r3, #8
    1602:	4313      	orrs	r3, r2
    1604:	80f3      	strh	r3, [r6, #6]

	return ERR_NONE;
    1606:	2000      	movs	r0, #0
}
    1608:	bd70      	pop	{r4, r5, r6, pc}
		if (sercomspi_regs[i].n == n) {
    160a:	2800      	cmp	r0, #0
    160c:	d002      	beq.n	1614 <_spi_m_sync_init+0x128>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    160e:	3301      	adds	r3, #1
    1610:	b2db      	uxtb	r3, r3
    1612:	e772      	b.n	14fa <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
    1614:	011d      	lsls	r5, r3, #4
    1616:	18ea      	adds	r2, r5, r3
    1618:	4d2f      	ldr	r5, [pc, #188]	; (16d8 <_spi_m_sync_init+0x1ec>)
    161a:	353c      	adds	r5, #60	; 0x3c
    161c:	18ad      	adds	r5, r5, r2
    161e:	e770      	b.n	1502 <_spi_m_sync_init+0x16>
	ASSERT(dev && hw);
    1620:	2000      	movs	r0, #0
    1622:	e775      	b.n	1510 <_spi_m_sync_init+0x24>
    1624:	2000      	movs	r0, #0
    1626:	e773      	b.n	1510 <_spi_m_sync_init+0x24>
	ASSERT(hw && regs);
    1628:	2c00      	cmp	r4, #0
    162a:	d03c      	beq.n	16a6 <_spi_m_sync_init+0x1ba>
    162c:	2d00      	cmp	r5, #0
    162e:	d038      	beq.n	16a2 <_spi_m_sync_init+0x1b6>
    1630:	2001      	movs	r0, #1
    1632:	4a2a      	ldr	r2, [pc, #168]	; (16dc <_spi_m_sync_init+0x1f0>)
    1634:	4923      	ldr	r1, [pc, #140]	; (16c4 <_spi_m_sync_init+0x1d8>)
    1636:	4b24      	ldr	r3, [pc, #144]	; (16c8 <_spi_m_sync_init+0x1dc>)
    1638:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    163a:	782b      	ldrb	r3, [r5, #0]
    163c:	786a      	ldrb	r2, [r5, #1]
    163e:	0212      	lsls	r2, r2, #8
    1640:	431a      	orrs	r2, r3
    1642:	78ab      	ldrb	r3, [r5, #2]
    1644:	041b      	lsls	r3, r3, #16
    1646:	431a      	orrs	r2, r3
    1648:	78eb      	ldrb	r3, [r5, #3]
    164a:	061b      	lsls	r3, r3, #24
    164c:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    164e:	4a20      	ldr	r2, [pc, #128]	; (16d0 <_spi_m_sync_init+0x1e4>)
    1650:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1652:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1654:	69e3      	ldr	r3, [r4, #28]
    1656:	079b      	lsls	r3, r3, #30
    1658:	d1fc      	bne.n	1654 <_spi_m_sync_init+0x168>
	                              (regs->ctrlb & ~(SERCOM_SPI_CTRLB_MSSEN))
    165a:	792b      	ldrb	r3, [r5, #4]
    165c:	796a      	ldrb	r2, [r5, #5]
    165e:	0212      	lsls	r2, r2, #8
    1660:	431a      	orrs	r2, r3
    1662:	79ab      	ldrb	r3, [r5, #6]
    1664:	041b      	lsls	r3, r3, #16
    1666:	431a      	orrs	r2, r3
    1668:	79eb      	ldrb	r3, [r5, #7]
    166a:	061b      	lsls	r3, r3, #24
    166c:	4313      	orrs	r3, r2
	                                  | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_SSDE | SERCOM_SPI_CTRLB_PLOADEN));
    166e:	4a1c      	ldr	r2, [pc, #112]	; (16e0 <_spi_m_sync_init+0x1f4>)
    1670:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(hw,
    1672:	4a1c      	ldr	r2, [pc, #112]	; (16e4 <_spi_m_sync_init+0x1f8>)
    1674:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1676:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1678:	69e3      	ldr	r3, [r4, #28]
    167a:	075b      	lsls	r3, r3, #29
    167c:	d1fc      	bne.n	1678 <_spi_m_sync_init+0x18c>
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    167e:	7a2b      	ldrb	r3, [r5, #8]
    1680:	7a6a      	ldrb	r2, [r5, #9]
    1682:	0212      	lsls	r2, r2, #8
    1684:	431a      	orrs	r2, r3
    1686:	7aab      	ldrb	r3, [r5, #10]
    1688:	041b      	lsls	r3, r3, #16
    168a:	431a      	orrs	r2, r3
    168c:	7aeb      	ldrb	r3, [r5, #11]
    168e:	061b      	lsls	r3, r3, #24
    1690:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    1692:	6263      	str	r3, [r4, #36]	; 0x24
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    1694:	7b6a      	ldrb	r2, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    1696:	2330      	movs	r3, #48	; 0x30
    1698:	54e2      	strb	r2, [r4, r3]
	return ((Sercom *)hw)->SPI.SYNCBUSY.reg & reg;
    169a:	69e3      	ldr	r3, [r4, #28]
	while (hri_sercomspi_is_syncing(hw, 0xFFFFFFFF))
    169c:	2b00      	cmp	r3, #0
    169e:	d1fc      	bne.n	169a <_spi_m_sync_init+0x1ae>
    16a0:	e7a7      	b.n	15f2 <_spi_m_sync_init+0x106>
	ASSERT(hw && regs);
    16a2:	2000      	movs	r0, #0
    16a4:	e7c5      	b.n	1632 <_spi_m_sync_init+0x146>
    16a6:	2000      	movs	r0, #0
    16a8:	e7c3      	b.n	1632 <_spi_m_sync_init+0x146>
	ASSERT(hw && regs);
    16aa:	2000      	movs	r0, #0
    16ac:	e775      	b.n	159a <_spi_m_sync_init+0xae>
    16ae:	2000      	movs	r0, #0
    16b0:	e773      	b.n	159a <_spi_m_sync_init+0xae>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    16b2:	2302      	movs	r3, #2
    16b4:	e7a1      	b.n	15fa <_spi_m_sync_init+0x10e>
		return ERR_INVALID_ARG;
    16b6:	200d      	movs	r0, #13
    16b8:	4240      	negs	r0, r0
    16ba:	e7a5      	b.n	1608 <_spi_m_sync_init+0x11c>
    16bc:	000014bd 	.word	0x000014bd
    16c0:	00000925 	.word	0x00000925
    16c4:	00005fe8 	.word	0x00005fe8
    16c8:	00001439 	.word	0x00001439
    16cc:	000008ef 	.word	0x000008ef
    16d0:	fffffefc 	.word	0xfffffefc
    16d4:	fffd1dbf 	.word	0xfffd1dbf
    16d8:	00005f98 	.word	0x00005f98
    16dc:	00000903 	.word	0x00000903
    16e0:	fffdddbf 	.word	0xfffdddbf
    16e4:	00020240 	.word	0x00020240

000016e8 <_spi_m_sync_enable>:
{
	return _spi_deinit(dev->prvt);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    16e8:	b510      	push	{r4, lr}
    16ea:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    16ec:	d00e      	beq.n	170c <_spi_m_sync_enable+0x24>
    16ee:	6803      	ldr	r3, [r0, #0]
    16f0:	2b00      	cmp	r3, #0
    16f2:	d009      	beq.n	1708 <_spi_m_sync_enable+0x20>
    16f4:	2001      	movs	r0, #1
    16f6:	2298      	movs	r2, #152	; 0x98
    16f8:	0112      	lsls	r2, r2, #4
    16fa:	4905      	ldr	r1, [pc, #20]	; (1710 <_spi_m_sync_enable+0x28>)
    16fc:	4b05      	ldr	r3, [pc, #20]	; (1714 <_spi_m_sync_enable+0x2c>)
    16fe:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    1700:	6820      	ldr	r0, [r4, #0]
    1702:	4b05      	ldr	r3, [pc, #20]	; (1718 <_spi_m_sync_enable+0x30>)
    1704:	4798      	blx	r3
}
    1706:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    1708:	2000      	movs	r0, #0
    170a:	e7f4      	b.n	16f6 <_spi_m_sync_enable+0xe>
    170c:	2000      	movs	r0, #0
    170e:	e7f2      	b.n	16f6 <_spi_m_sync_enable+0xe>
    1710:	00005fe8 	.word	0x00005fe8
    1714:	00001439 	.word	0x00001439
    1718:	000014cd 	.word	0x000014cd

0000171c <_spi_m_sync_trans>:

	return ERR_NONE;
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    171c:	b5f0      	push	{r4, r5, r6, r7, lr}
    171e:	46ce      	mov	lr, r9
    1720:	4647      	mov	r7, r8
    1722:	b580      	push	{r7, lr}
    1724:	b089      	sub	sp, #36	; 0x24
    1726:	4681      	mov	r9, r0
    1728:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    172a:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    172c:	680b      	ldr	r3, [r1, #0]
    172e:	9303      	str	r3, [sp, #12]
    1730:	684b      	ldr	r3, [r1, #4]
    1732:	9304      	str	r3, [sp, #16]
    1734:	2300      	movs	r3, #0
    1736:	9305      	str	r3, [sp, #20]
    1738:	9306      	str	r3, [sp, #24]
    173a:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    173c:	2800      	cmp	r0, #0
    173e:	d014      	beq.n	176a <_spi_m_sync_trans+0x4e>
    1740:	2c00      	cmp	r4, #0
    1742:	d010      	beq.n	1766 <_spi_m_sync_trans+0x4a>
    1744:	2001      	movs	r0, #1
    1746:	4a37      	ldr	r2, [pc, #220]	; (1824 <_spi_m_sync_trans+0x108>)
    1748:	4937      	ldr	r1, [pc, #220]	; (1828 <_spi_m_sync_trans+0x10c>)
    174a:	4b38      	ldr	r3, [pc, #224]	; (182c <_spi_m_sync_trans+0x110>)
    174c:	4798      	blx	r3
    174e:	69e3      	ldr	r3, [r4, #28]

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(
    1750:	075b      	lsls	r3, r3, #29
    1752:	d164      	bne.n	181e <_spi_m_sync_trans+0x102>
	while (((Sercom *)hw)->SPI.SYNCBUSY.reg & reg) {
    1754:	69e3      	ldr	r3, [r4, #28]
    1756:	079b      	lsls	r3, r3, #30
    1758:	d1fc      	bne.n	1754 <_spi_m_sync_trans+0x38>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    175a:	6823      	ldr	r3, [r4, #0]
	        hw, (SERCOM_SPI_SYNCBUSY_SWRST | SERCOM_SPI_SYNCBUSY_ENABLE | SERCOM_SPI_SYNCBUSY_CTRLB))) {
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    175c:	079b      	lsls	r3, r3, #30
    175e:	d420      	bmi.n	17a2 <_spi_m_sync_trans+0x86>
		return ERR_NOT_INITIALIZED;
    1760:	2014      	movs	r0, #20
    1762:	4240      	negs	r0, r0
    1764:	e056      	b.n	1814 <_spi_m_sync_trans+0xf8>
	ASSERT(dev && hw);
    1766:	2000      	movs	r0, #0
    1768:	e7ed      	b.n	1746 <_spi_m_sync_trans+0x2a>
    176a:	2000      	movs	r0, #0
    176c:	e7eb      	b.n	1746 <_spi_m_sync_trans+0x2a>
		return false;
    176e:	2200      	movs	r2, #0
    1770:	e02d      	b.n	17ce <_spi_m_sync_trans+0xb2>
			data |= (*ctrl->txbuf) << 8;
    1772:	7848      	ldrb	r0, [r1, #1]
    1774:	0200      	lsls	r0, r0, #8
    1776:	4647      	mov	r7, r8
    1778:	4307      	orrs	r7, r0
    177a:	46b8      	mov	r8, r7
			ctrl->txbuf++;
    177c:	3102      	adds	r1, #2
    177e:	9103      	str	r1, [sp, #12]
	ctrl->txcnt++;
    1780:	3201      	adds	r2, #1
    1782:	9205      	str	r2, [sp, #20]
	((Sercom *)hw)->SPI.DATA.reg = data;
    1784:	4642      	mov	r2, r8
    1786:	62a2      	str	r2, [r4, #40]	; 0x28
	if (SERCOM_SPI_INTFLAG_ERROR & iflag) {
    1788:	b25b      	sxtb	r3, r3
    178a:	2b00      	cmp	r3, #0
    178c:	db35      	blt.n	17fa <_spi_m_sync_trans+0xde>
	return ERR_NONE;
    178e:	2000      	movs	r0, #0
			}
		}

		rc = _spi_err_check(iflag, hw);

		if (rc < 0) {
    1790:	2800      	cmp	r0, #0
    1792:	db3a      	blt.n	180a <_spi_m_sync_trans+0xee>
			break;
		}
		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    1794:	9805      	ldr	r0, [sp, #20]
    1796:	68ab      	ldr	r3, [r5, #8]
    1798:	4298      	cmp	r0, r3
    179a:	d302      	bcc.n	17a2 <_spi_m_sync_trans+0x86>
    179c:	9a06      	ldr	r2, [sp, #24]
    179e:	4293      	cmp	r3, r2
    17a0:	d933      	bls.n	180a <_spi_m_sync_trans+0xee>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    17a2:	7e23      	ldrb	r3, [r4, #24]
    17a4:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    17a6:	075a      	lsls	r2, r3, #29
    17a8:	d5e1      	bpl.n	176e <_spi_m_sync_trans+0x52>
	return ((Sercom *)hw)->SPI.DATA.reg;
    17aa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
	if (ctrl->rxbuf) {
    17ac:	9a04      	ldr	r2, [sp, #16]
    17ae:	2a00      	cmp	r2, #0
    17b0:	d008      	beq.n	17c4 <_spi_m_sync_trans+0xa8>
		*ctrl->rxbuf++ = (uint8_t)data;
    17b2:	1c50      	adds	r0, r2, #1
    17b4:	9004      	str	r0, [sp, #16]
    17b6:	7011      	strb	r1, [r2, #0]
		if (ctrl->char_size > 1) {
    17b8:	2e01      	cmp	r6, #1
    17ba:	d903      	bls.n	17c4 <_spi_m_sync_trans+0xa8>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    17bc:	1c90      	adds	r0, r2, #2
    17be:	9004      	str	r0, [sp, #16]
    17c0:	0a09      	lsrs	r1, r1, #8
    17c2:	7051      	strb	r1, [r2, #1]
	ctrl->rxcnt++;
    17c4:	9a06      	ldr	r2, [sp, #24]
    17c6:	9201      	str	r2, [sp, #4]
    17c8:	3201      	adds	r2, #1
    17ca:	9206      	str	r2, [sp, #24]
	return true;
    17cc:	2201      	movs	r2, #1
		if (!_spi_rx_check_and_receive(hw, iflag, &ctrl)) {
    17ce:	2a00      	cmp	r2, #0
    17d0:	d1da      	bne.n	1788 <_spi_m_sync_trans+0x6c>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    17d2:	9906      	ldr	r1, [sp, #24]
    17d4:	9a05      	ldr	r2, [sp, #20]
    17d6:	4291      	cmp	r1, r2
    17d8:	d3d6      	bcc.n	1788 <_spi_m_sync_trans+0x6c>
				_spi_tx_check_and_send(hw, iflag, &ctrl, dev->dummy_byte);
    17da:	4649      	mov	r1, r9
    17dc:	88c8      	ldrh	r0, [r1, #6]
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    17de:	07d9      	lsls	r1, r3, #31
    17e0:	d5d2      	bpl.n	1788 <_spi_m_sync_trans+0x6c>
	if (ctrl->txbuf) {
    17e2:	9903      	ldr	r1, [sp, #12]
    17e4:	2900      	cmp	r1, #0
    17e6:	d006      	beq.n	17f6 <_spi_m_sync_trans+0xda>
		data = *ctrl->txbuf++;
    17e8:	1c48      	adds	r0, r1, #1
    17ea:	9003      	str	r0, [sp, #12]
    17ec:	7808      	ldrb	r0, [r1, #0]
    17ee:	4680      	mov	r8, r0
		if (ctrl->char_size > 1) {
    17f0:	2e01      	cmp	r6, #1
    17f2:	d8be      	bhi.n	1772 <_spi_m_sync_trans+0x56>
    17f4:	e7c4      	b.n	1780 <_spi_m_sync_trans+0x64>
		data = dummy;
    17f6:	4680      	mov	r8, r0
    17f8:	e7c2      	b.n	1780 <_spi_m_sync_trans+0x64>
}

static inline void hri_sercomspi_clear_STATUS_reg(const void *const hw, hri_sercomspi_status_reg_t mask)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.STATUS.reg = mask;
    17fa:	2301      	movs	r3, #1
    17fc:	425b      	negs	r3, r3
    17fe:	8363      	strh	r3, [r4, #26]
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1800:	3381      	adds	r3, #129	; 0x81
    1802:	7623      	strb	r3, [r4, #24]
		return ERR_OVERFLOW;
    1804:	2013      	movs	r0, #19
    1806:	4240      	negs	r0, r0
    1808:	e7c2      	b.n	1790 <_spi_m_sync_trans+0x74>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    180a:	7e23      	ldrb	r3, [r4, #24]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    180c:	079b      	lsls	r3, r3, #30
    180e:	d0fc      	beq.n	180a <_spi_m_sync_trans+0xee>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1810:	2303      	movs	r3, #3
    1812:	7623      	strb	r3, [r4, #24]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    1814:	b009      	add	sp, #36	; 0x24
    1816:	bc0c      	pop	{r2, r3}
    1818:	4690      	mov	r8, r2
    181a:	4699      	mov	r9, r3
    181c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return ERR_BUSY;
    181e:	2004      	movs	r0, #4
    1820:	4240      	negs	r0, r0
    1822:	e7f7      	b.n	1814 <_spi_m_sync_trans+0xf8>
    1824:	00000a85 	.word	0x00000a85
    1828:	00005fe8 	.word	0x00005fe8
    182c:	00001439 	.word	0x00001439

00001830 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    1830:	4b0f      	ldr	r3, [pc, #60]	; (1870 <_sysctrl_init_sources+0x40>)
    1832:	6a19      	ldr	r1, [r3, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    1834:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    1836:	6a1a      	ldr	r2, [r3, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    1838:	0f92      	lsrs	r2, r2, #30
    183a:	0792      	lsls	r2, r2, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    183c:	0409      	lsls	r1, r1, #16
    183e:	480d      	ldr	r0, [pc, #52]	; (1874 <_sysctrl_init_sources+0x44>)
    1840:	4001      	ands	r1, r0
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    1842:	430a      	orrs	r2, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    1844:	490c      	ldr	r1, [pc, #48]	; (1878 <_sysctrl_init_sources+0x48>)
    1846:	430a      	orrs	r2, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    1848:	621a      	str	r2, [r3, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    184a:	699a      	ldr	r2, [r3, #24]
    184c:	2102      	movs	r1, #2
    184e:	430a      	orrs	r2, r1
    1850:	619a      	str	r2, [r3, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    1852:	7f1a      	ldrb	r2, [r3, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    1854:	311d      	adds	r1, #29
    1856:	400a      	ands	r2, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    1858:	771a      	strb	r2, [r3, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    185a:	4b05      	ldr	r3, [pc, #20]	; (1870 <_sysctrl_init_sources+0x40>)
    185c:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    185e:	071b      	lsls	r3, r3, #28
    1860:	d5fb      	bpl.n	185a <_sysctrl_init_sources+0x2a>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    1862:	4a03      	ldr	r2, [pc, #12]	; (1870 <_sysctrl_init_sources+0x40>)
    1864:	6a13      	ldr	r3, [r2, #32]
    1866:	2180      	movs	r1, #128	; 0x80
    1868:	430b      	orrs	r3, r1
    186a:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    186c:	4770      	bx	lr
    186e:	46c0      	nop			; (mov r8, r8)
    1870:	40000800 	.word	0x40000800
    1874:	0fff0000 	.word	0x0fff0000
    1878:	00000302 	.word	0x00000302

0000187c <_sysctrl_init_referenced_generators>:
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    187c:	4a02      	ldr	r2, [pc, #8]	; (1888 <_sysctrl_init_referenced_generators+0xc>)
    187e:	6993      	ldr	r3, [r2, #24]
    1880:	2102      	movs	r1, #2
    1882:	438b      	bics	r3, r1
    1884:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    1886:	4770      	bx	lr
    1888:	40000800 	.word	0x40000800

0000188c <_system_time_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
    188c:	4b02      	ldr	r3, [pc, #8]	; (1898 <_system_time_init+0xc>)
    188e:	4a03      	ldr	r2, [pc, #12]	; (189c <_system_time_init+0x10>)
    1890:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
    1892:	2205      	movs	r2, #5
    1894:	601a      	str	r2, [r3, #0]
	                | (1 << SysTick_CTRL_CLKSOURCE_Pos);
}
    1896:	4770      	bx	lr
    1898:	e000e010 	.word	0xe000e010
    189c:	00ffffff 	.word	0x00ffffff

000018a0 <_delay_init>:
/**
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
    18a0:	b510      	push	{r4, lr}
	_system_time_init(hw);
    18a2:	4b01      	ldr	r3, [pc, #4]	; (18a8 <_delay_init+0x8>)
    18a4:	4798      	blx	r3
}
    18a6:	bd10      	pop	{r4, pc}
    18a8:	0000188d 	.word	0x0000188d

000018ac <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
    18ac:	0e08      	lsrs	r0, r1, #24
	uint32_t buf = cycles;

	while (n--) {
    18ae:	e00b      	b.n	18c8 <_delay_cycles+0x1c>
		SysTick->LOAD = 0xFFFFFF;
    18b0:	4b0b      	ldr	r3, [pc, #44]	; (18e0 <_delay_cycles+0x34>)
    18b2:	480c      	ldr	r0, [pc, #48]	; (18e4 <_delay_cycles+0x38>)
    18b4:	6058      	str	r0, [r3, #4]
		SysTick->VAL  = 0xFFFFFF;
    18b6:	6098      	str	r0, [r3, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    18b8:	4b09      	ldr	r3, [pc, #36]	; (18e0 <_delay_cycles+0x34>)
    18ba:	681b      	ldr	r3, [r3, #0]
    18bc:	03db      	lsls	r3, r3, #15
    18be:	d5fb      	bpl.n	18b8 <_delay_cycles+0xc>
			;
		buf -= 0xFFFFFF;
    18c0:	4b09      	ldr	r3, [pc, #36]	; (18e8 <_delay_cycles+0x3c>)
    18c2:	469c      	mov	ip, r3
    18c4:	4461      	add	r1, ip
	while (n--) {
    18c6:	0010      	movs	r0, r2
    18c8:	1e42      	subs	r2, r0, #1
    18ca:	b2d2      	uxtb	r2, r2
    18cc:	2800      	cmp	r0, #0
    18ce:	d1ef      	bne.n	18b0 <_delay_cycles+0x4>
	}

	SysTick->LOAD = buf;
    18d0:	4b03      	ldr	r3, [pc, #12]	; (18e0 <_delay_cycles+0x34>)
    18d2:	6059      	str	r1, [r3, #4]
	SysTick->VAL  = buf;
    18d4:	6099      	str	r1, [r3, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
    18d6:	4b02      	ldr	r3, [pc, #8]	; (18e0 <_delay_cycles+0x34>)
    18d8:	681b      	ldr	r3, [r3, #0]
    18da:	03db      	lsls	r3, r3, #15
    18dc:	d5fb      	bpl.n	18d6 <_delay_cycles+0x2a>
		;
}
    18de:	4770      	bx	lr
    18e0:	e000e010 	.word	0xe000e010
    18e4:	00ffffff 	.word	0x00ffffff
    18e8:	ff000001 	.word	0xff000001

000018ec <_dummy_func_no_return>:
static bool _dummy_func_no_return(uint32_t unused0, uint32_t unused1)
{
	(void)unused0;
	(void)unused1;
	return false;
}
    18ec:	2000      	movs	r0, #0
    18ee:	4770      	bx	lr

000018f0 <_usb_load_calib>:
#define NVM_USB_PAD_TRANSP_SIZE 5
#define NVM_USB_PAD_TRIM_POS 55
#define NVM_USB_PAD_TRIM_SIZE 3
	Usb *    hw = USB;
	uint32_t pad_transn
	    = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRANSN_POS / 32)) >> (NVM_USB_PAD_TRANSN_POS % 32))
    18f0:	4b12      	ldr	r3, [pc, #72]	; (193c <_usb_load_calib+0x4c>)
    18f2:	681a      	ldr	r2, [r3, #0]
    18f4:	0b53      	lsrs	r3, r2, #13
	uint32_t pad_transn
    18f6:	211f      	movs	r1, #31
    18f8:	400b      	ands	r3, r1
	      & ((1 << NVM_USB_PAD_TRANSN_SIZE) - 1);
	uint32_t pad_transp
	    = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRANSP_POS / 32)) >> (NVM_USB_PAD_TRANSP_POS % 32))
    18fa:	0c90      	lsrs	r0, r2, #18
	uint32_t pad_transp
    18fc:	4001      	ands	r1, r0
	      & ((1 << NVM_USB_PAD_TRANSP_SIZE) - 1);
	uint32_t pad_trim = (*((uint32_t *)(NVMCTRL_OTP4) + (NVM_USB_PAD_TRIM_POS / 32)) >> (NVM_USB_PAD_TRIM_POS % 32))
    18fe:	0dd0      	lsrs	r0, r2, #23
    1900:	2207      	movs	r2, #7
    1902:	4002      	ands	r2, r0
	                    & ((1 << NVM_USB_PAD_TRIM_SIZE) - 1);
	if (pad_transn == 0x1F) {
    1904:	2b1f      	cmp	r3, #31
    1906:	d012      	beq.n	192e <_usb_load_calib+0x3e>
		pad_transn = 5;
	}
	if (pad_transp == 0x1F) {
    1908:	291f      	cmp	r1, #31
    190a:	d012      	beq.n	1932 <_usb_load_calib+0x42>
		pad_transp = 29;
	}
	if (pad_trim == 0x7) {
    190c:	2a07      	cmp	r2, #7
    190e:	d012      	beq.n	1936 <_usb_load_calib+0x46>
		pad_trim = 5;
	}

	hw->DEVICE.PADCAL.reg = USB_PADCAL_TRANSN(pad_transn) | USB_PADCAL_TRANSP(pad_transp) | USB_PADCAL_TRIM(pad_trim);
    1910:	019b      	lsls	r3, r3, #6
    1912:	430b      	orrs	r3, r1
    1914:	0312      	lsls	r2, r2, #12
    1916:	4313      	orrs	r3, r2
    1918:	4a09      	ldr	r2, [pc, #36]	; (1940 <_usb_load_calib+0x50>)
    191a:	8513      	strh	r3, [r2, #40]	; 0x28

	hw->DEVICE.QOSCTRL.bit.CQOS = 3;
    191c:	78d3      	ldrb	r3, [r2, #3]
    191e:	2103      	movs	r1, #3
    1920:	430b      	orrs	r3, r1
    1922:	70d3      	strb	r3, [r2, #3]
	hw->DEVICE.QOSCTRL.bit.DQOS = 3;
    1924:	78d3      	ldrb	r3, [r2, #3]
    1926:	210c      	movs	r1, #12
    1928:	430b      	orrs	r3, r1
    192a:	70d3      	strb	r3, [r2, #3]
}
    192c:	4770      	bx	lr
		pad_transn = 5;
    192e:	3b1a      	subs	r3, #26
    1930:	e7ea      	b.n	1908 <_usb_load_calib+0x18>
		pad_transp = 29;
    1932:	3902      	subs	r1, #2
    1934:	e7ea      	b.n	190c <_usb_load_calib+0x1c>
		pad_trim = 5;
    1936:	3a02      	subs	r2, #2
    1938:	e7ea      	b.n	1910 <_usb_load_calib+0x20>
    193a:	46c0      	nop			; (mov r8, r8)
    193c:	00806024 	.word	0x00806024
    1940:	41005000 	.word	0x41005000

00001944 <_usb_d_dev_handle_setup>:
/**
 * \brief Handles setup received interrupt
 * \param[in] ept Pointer to endpoint information.
 */
static void _usb_d_dev_handle_setup(struct _usb_d_dev_ep *ept)
{
    1944:	b570      	push	{r4, r5, r6, lr}
	uint8_t epn     = USB_EP_GET_N(ept->ep);
    1946:	7c83      	ldrb	r3, [r0, #18]
    1948:	220f      	movs	r2, #15
    194a:	4013      	ands	r3, r2
	bool    is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    194c:	7cc1      	ldrb	r1, [r0, #19]
    194e:	3a08      	subs	r2, #8
    1950:	400a      	ands	r2, r1

	if (!is_ctrl) {
    1952:	2a01      	cmp	r2, #1
    1954:	d00d      	beq.n	1972 <_usb_d_dev_handle_setup+0x2e>
}

static inline void hri_usbendpoint_clear_EPINTFLAG_reg(const void *const hw, uint8_t submodule_index,
                                                       hri_usbendpoint_epintflag_reg_t mask)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1956:	001a      	movs	r2, r3
    1958:	3208      	adds	r2, #8
    195a:	0152      	lsls	r2, r2, #5
    195c:	4919      	ldr	r1, [pc, #100]	; (19c4 <_usb_d_dev_handle_setup+0x80>)
    195e:	468c      	mov	ip, r1
    1960:	4462      	add	r2, ip
    1962:	2110      	movs	r1, #16
    1964:	71d1      	strb	r1, [r2, #7]
	}
}

static inline void hri_usbendpoint_clear_EPINTEN_RXSTP_bit(const void *const hw, uint8_t submodule_index)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = USB_DEVICE_EPINTENSET_RXSTP;
    1966:	015b      	lsls	r3, r3, #5
    1968:	4a17      	ldr	r2, [pc, #92]	; (19c8 <_usb_d_dev_handle_setup+0x84>)
    196a:	4694      	mov	ip, r2
    196c:	4463      	add	r3, ip
    196e:	7019      	strb	r1, [r3, #0]
	_usbd_ep_clear_bank_status(epn, 1);
	_usbd_ep_int_ack(epn, USB_D_BANK0_INT_FLAGS | USB_D_BANK1_INT_FLAGS);
	_usbd_ep_int_dis(epn, USB_D_BANK0_INT_FLAGS | USB_D_BANK1_INT_FLAGS);
	/* Invoke callback. */
	dev_inst.ep_callbacks.setup(ept->ep);
}
    1970:	bd70      	pop	{r4, r5, r6, pc}
	if (_usb_d_dev_ep_is_busy(ept)) {
    1972:	064a      	lsls	r2, r1, #25
    1974:	d50c      	bpl.n	1990 <_usb_d_dev_handle_setup+0x4c>
		ept->flags.bits.is_busy = 0;
    1976:	7cc2      	ldrb	r2, [r0, #19]
    1978:	2140      	movs	r1, #64	; 0x40
    197a:	438a      	bics	r2, r1
    197c:	74c2      	strb	r2, [r0, #19]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    197e:	001a      	movs	r2, r3
    1980:	3208      	adds	r2, #8
    1982:	0152      	lsls	r2, r2, #5
    1984:	4c0f      	ldr	r4, [pc, #60]	; (19c4 <_usb_d_dev_handle_setup+0x80>)
    1986:	46a4      	mov	ip, r4
    1988:	4462      	add	r2, ip
    198a:	2480      	movs	r4, #128	; 0x80
    198c:	7114      	strb	r4, [r2, #4]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    198e:	7151      	strb	r1, [r2, #5]
	ept->flags.bits.is_stalled = 0;
    1990:	7cc2      	ldrb	r2, [r0, #19]
    1992:	2108      	movs	r1, #8
    1994:	438a      	bics	r2, r1
    1996:	74c2      	strb	r2, [r0, #19]
	bank->STATUS_BK.reg     = 0;
    1998:	490c      	ldr	r1, [pc, #48]	; (19cc <_usb_d_dev_handle_setup+0x88>)
    199a:	015a      	lsls	r2, r3, #5
    199c:	188c      	adds	r4, r1, r2
    199e:	2500      	movs	r5, #0
    19a0:	72a5      	strb	r5, [r4, #10]
    19a2:	76a5      	strb	r5, [r4, #26]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    19a4:	3308      	adds	r3, #8
    19a6:	015b      	lsls	r3, r3, #5
    19a8:	4c06      	ldr	r4, [pc, #24]	; (19c4 <_usb_d_dev_handle_setup+0x80>)
    19aa:	46a4      	mov	ip, r4
    19ac:	4463      	add	r3, ip
    19ae:	246f      	movs	r4, #111	; 0x6f
    19b0:	71dc      	strb	r4, [r3, #7]
}

static inline void hri_usbendpoint_clear_EPINTEN_reg(const void *const hw, uint8_t submodule_index,
                                                     hri_usbendpoint_epintenset_reg_t mask)
{
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    19b2:	4b05      	ldr	r3, [pc, #20]	; (19c8 <_usb_d_dev_handle_setup+0x84>)
    19b4:	469c      	mov	ip, r3
    19b6:	4462      	add	r2, ip
    19b8:	7014      	strb	r4, [r2, #0]
	dev_inst.ep_callbacks.setup(ept->ep);
    19ba:	6e8b      	ldr	r3, [r1, #104]	; 0x68
    19bc:	7c80      	ldrb	r0, [r0, #18]
    19be:	4798      	blx	r3
    19c0:	e7d6      	b.n	1970 <_usb_d_dev_handle_setup+0x2c>
    19c2:	46c0      	nop			; (mov r8, r8)
    19c4:	41005000 	.word	0x41005000
    19c8:	41005108 	.word	0x41005108
    19cc:	20000300 	.word	0x20000300

000019d0 <_usb_d_dev_handle_stall>:
 * \brief Handles stall sent interrupt
 * \param[in] ept Pointer to endpoint information.
 * \param[in] bank_n Bank number.
 */
static void _usb_d_dev_handle_stall(struct _usb_d_dev_ep *ept, const uint8_t bank_n)
{
    19d0:	b510      	push	{r4, lr}
	uint8_t epn = USB_EP_GET_N(ept->ep);
    19d2:	7c82      	ldrb	r2, [r0, #18]
    19d4:	230f      	movs	r3, #15
    19d6:	4013      	ands	r3, r2
		_usbd_ep_int_dis(epn, USB_DEVICE_EPINTFLAG_STALL0 << bank_n);
    19d8:	2220      	movs	r2, #32
    19da:	408a      	lsls	r2, r1
	hri_usbendpoint_clear_EPINTEN_reg(USB, epn, flags);
    19dc:	b2d2      	uxtb	r2, r2
    19de:	015b      	lsls	r3, r3, #5
    19e0:	4905      	ldr	r1, [pc, #20]	; (19f8 <_usb_d_dev_handle_stall+0x28>)
    19e2:	468c      	mov	ip, r1
    19e4:	4463      	add	r3, ip
    19e6:	701a      	strb	r2, [r3, #0]
	/* Clear interrupt enable. Leave status there for status check. */
	_usbd_ep_int_stall_en(epn, bank_n, false);
	dev_inst.ep_callbacks.done(ept->ep, USB_TRANS_STALL, ept->trans_count);
    19e8:	4b04      	ldr	r3, [pc, #16]	; (19fc <_usb_d_dev_handle_stall+0x2c>)
    19ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    19ec:	6882      	ldr	r2, [r0, #8]
    19ee:	7c80      	ldrb	r0, [r0, #18]
    19f0:	2101      	movs	r1, #1
    19f2:	4798      	blx	r3
}
    19f4:	bd10      	pop	{r4, pc}
    19f6:	46c0      	nop			; (mov r8, r8)
    19f8:	41005108 	.word	0x41005108
    19fc:	20000300 	.word	0x20000300

00001a00 <_usb_d_dev_trans_done>:
 *  \brief Finish the transaction and invoke callback
 * \param[in, out] ept Pointer to endpoint information.
 * \param[in] code Information code passed.
 */
static void _usb_d_dev_trans_done(struct _usb_d_dev_ep *ept, const int32_t code)
{
    1a00:	b510      	push	{r4, lr}
	if (!(_usb_d_dev_ep_is_used(ept) && _usb_d_dev_ep_is_busy(ept))) {
    1a02:	7c83      	ldrb	r3, [r0, #18]
    1a04:	2bff      	cmp	r3, #255	; 0xff
    1a06:	d002      	beq.n	1a0e <_usb_d_dev_trans_done+0xe>
    1a08:	7cc2      	ldrb	r2, [r0, #19]
    1a0a:	0652      	lsls	r2, r2, #25
    1a0c:	d400      	bmi.n	1a10 <_usb_d_dev_trans_done+0x10>
		return;
	}
	ept->flags.bits.is_busy = 0;
	dev_inst.ep_callbacks.done(ept->ep, code, ept->trans_count);
}
    1a0e:	bd10      	pop	{r4, pc}
	ept->flags.bits.is_busy = 0;
    1a10:	7cc2      	ldrb	r2, [r0, #19]
    1a12:	2440      	movs	r4, #64	; 0x40
    1a14:	43a2      	bics	r2, r4
    1a16:	74c2      	strb	r2, [r0, #19]
	dev_inst.ep_callbacks.done(ept->ep, code, ept->trans_count);
    1a18:	4a02      	ldr	r2, [pc, #8]	; (1a24 <_usb_d_dev_trans_done+0x24>)
    1a1a:	6f14      	ldr	r4, [r2, #112]	; 0x70
    1a1c:	6882      	ldr	r2, [r0, #8]
    1a1e:	0018      	movs	r0, r3
    1a20:	47a0      	blx	r4
    1a22:	e7f4      	b.n	1a0e <_usb_d_dev_trans_done+0xe>
    1a24:	20000300 	.word	0x20000300

00001a28 <_usb_d_dev_trans_stop>:
 * \param[in, out] ept Pointer to endpoint information.
 * \param[in] dir Endpoint direction.
 * \param[in] code Information code passed.
 */
static void _usb_d_dev_trans_stop(struct _usb_d_dev_ep *ept, bool dir, const int32_t code)
{
    1a28:	b5f0      	push	{r4, r5, r6, r7, lr}
    1a2a:	b083      	sub	sp, #12
	uint8_t epn = USB_EP_GET_N(ept->ep);
    1a2c:	7c84      	ldrb	r4, [r0, #18]
    1a2e:	230f      	movs	r3, #15
    1a30:	4023      	ands	r3, r4
	;
	const uint8_t intflags[2] = {USB_D_BANK0_INT_FLAGS, USB_D_BANK1_INT_FLAGS};
    1a32:	4d18      	ldr	r5, [pc, #96]	; (1a94 <_usb_d_dev_trans_stop+0x6c>)
    1a34:	882e      	ldrh	r6, [r5, #0]
    1a36:	ad01      	add	r5, sp, #4
    1a38:	802e      	strh	r6, [r5, #0]
	if (!(_usb_d_dev_ep_is_used(ept) && _usb_d_dev_ep_is_busy(ept))) {
    1a3a:	2cff      	cmp	r4, #255	; 0xff
    1a3c:	d01e      	beq.n	1a7c <_usb_d_dev_trans_stop+0x54>
    1a3e:	7cc4      	ldrb	r4, [r0, #19]
    1a40:	0664      	lsls	r4, r4, #25
    1a42:	d51b      	bpl.n	1a7c <_usb_d_dev_trans_stop+0x54>
		return;
	}
	/* Stop transfer */
	if (dir) {
    1a44:	2900      	cmp	r1, #0
    1a46:	d01b      	beq.n	1a80 <_usb_d_dev_trans_stop+0x58>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    1a48:	001c      	movs	r4, r3
    1a4a:	3408      	adds	r4, #8
    1a4c:	0164      	lsls	r4, r4, #5
    1a4e:	4d12      	ldr	r5, [pc, #72]	; (1a98 <_usb_d_dev_trans_stop+0x70>)
    1a50:	46ac      	mov	ip, r5
    1a52:	4464      	add	r4, ip
    1a54:	2580      	movs	r5, #128	; 0x80
    1a56:	7125      	strb	r5, [r4, #4]
		_usbd_ep_set_in_rdy(epn, 1, false);
	} else {
		/* NAK OUT */
		_usbd_ep_set_out_rdy(epn, 0, false);
	}
	_usbd_ep_int_ack(epn, intflags[dir]);
    1a58:	ad01      	add	r5, sp, #4
    1a5a:	5c6e      	ldrb	r6, [r5, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1a5c:	001c      	movs	r4, r3
    1a5e:	3408      	adds	r4, #8
    1a60:	0164      	lsls	r4, r4, #5
    1a62:	4f0d      	ldr	r7, [pc, #52]	; (1a98 <_usb_d_dev_trans_stop+0x70>)
    1a64:	46bc      	mov	ip, r7
    1a66:	4464      	add	r4, ip
    1a68:	71e6      	strb	r6, [r4, #7]
	_usbd_ep_int_dis(epn, intflags[dir]);
    1a6a:	5c69      	ldrb	r1, [r5, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1a6c:	015b      	lsls	r3, r3, #5
    1a6e:	4c0b      	ldr	r4, [pc, #44]	; (1a9c <_usb_d_dev_trans_stop+0x74>)
    1a70:	46a4      	mov	ip, r4
    1a72:	4463      	add	r3, ip
    1a74:	7019      	strb	r1, [r3, #0]
	_usb_d_dev_trans_done(ept, code);
    1a76:	0011      	movs	r1, r2
    1a78:	4b09      	ldr	r3, [pc, #36]	; (1aa0 <_usb_d_dev_trans_stop+0x78>)
    1a7a:	4798      	blx	r3
}
    1a7c:	b003      	add	sp, #12
    1a7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    1a80:	001c      	movs	r4, r3
    1a82:	3408      	adds	r4, #8
    1a84:	0164      	lsls	r4, r4, #5
    1a86:	4d04      	ldr	r5, [pc, #16]	; (1a98 <_usb_d_dev_trans_stop+0x70>)
    1a88:	46ac      	mov	ip, r5
    1a8a:	4464      	add	r4, ip
    1a8c:	2540      	movs	r5, #64	; 0x40
    1a8e:	7165      	strb	r5, [r4, #5]
    1a90:	e7e2      	b.n	1a58 <_usb_d_dev_trans_stop+0x30>
    1a92:	46c0      	nop			; (mov r8, r8)
    1a94:	00006004 	.word	0x00006004
    1a98:	41005000 	.word	0x41005000
    1a9c:	41005108 	.word	0x41005108
    1aa0:	00001a01 	.word	0x00001a01

00001aa4 <_usb_d_dev_handle_trfail>:
{
    1aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
    1aa6:	b083      	sub	sp, #12
	uint8_t            epn     = USB_EP_GET_N(ept->ep);
    1aa8:	7c83      	ldrb	r3, [r0, #18]
    1aaa:	220f      	movs	r2, #15
    1aac:	4013      	ands	r3, r2
	const uint8_t      fail[2] = {USB_DEVICE_EPINTFLAG_TRFAIL0, USB_DEVICE_EPINTFLAG_TRFAIL1};
    1aae:	4a3c      	ldr	r2, [pc, #240]	; (1ba0 <_usb_d_dev_handle_trfail+0xfc>)
    1ab0:	8894      	ldrh	r4, [r2, #4]
    1ab2:	aa01      	add	r2, sp, #4
    1ab4:	8014      	strh	r4, [r2, #0]
	UsbDeviceDescBank *bank    = prvt_inst.desc_table[epn].DeviceDescBank;
    1ab6:	015a      	lsls	r2, r3, #5
    1ab8:	4c3a      	ldr	r4, [pc, #232]	; (1ba4 <_usb_d_dev_handle_trfail+0x100>)
    1aba:	18a4      	adds	r4, r4, r2
	uint8_t            eptype
    1abc:	2900      	cmp	r1, #0
    1abe:	d033      	beq.n	1b28 <_usb_d_dev_handle_trfail+0x84>

static inline hri_usbendpoint_epcfg_reg_t hri_usbendpoint_read_EPCFG_EPTYPE1_bf(const void *const hw,
                                                                                uint8_t           submodule_index)
{
	uint8_t tmp;
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    1ac0:	001a      	movs	r2, r3
    1ac2:	3208      	adds	r2, #8
    1ac4:	0152      	lsls	r2, r2, #5
    1ac6:	4d38      	ldr	r5, [pc, #224]	; (1ba8 <_usb_d_dev_handle_trfail+0x104>)
    1ac8:	5d52      	ldrb	r2, [r2, r5]
	tmp = (tmp & USB_DEVICE_EPCFG_EPTYPE1_Msk) >> USB_DEVICE_EPCFG_EPTYPE1_Pos;
    1aca:	0912      	lsrs	r2, r2, #4
    1acc:	2507      	movs	r5, #7
    1ace:	4015      	ands	r5, r2
	bool                      is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    1ad0:	7cc2      	ldrb	r2, [r0, #19]
    1ad2:	2607      	movs	r6, #7
    1ad4:	4016      	ands	r6, r2
	st.reg = bank[bank_n].STATUS_BK.reg;
    1ad6:	010a      	lsls	r2, r1, #4
    1ad8:	18a2      	adds	r2, r4, r2
    1ada:	7a94      	ldrb	r4, [r2, #10]
    1adc:	b2e4      	uxtb	r4, r4
	if ((eptype == USB_D_EPTYPE_ISOCH) && st.bit.CRCERR) {
    1ade:	2d02      	cmp	r5, #2
    1ae0:	d02a      	beq.n	1b38 <_usb_d_dev_handle_trfail+0x94>
	} else if (st.bit.ERRORFLOW) {
    1ae2:	07a4      	lsls	r4, r4, #30
    1ae4:	d544      	bpl.n	1b70 <_usb_d_dev_handle_trfail+0xcc>
		bank[bank_n].STATUS_BK.bit.ERRORFLOW = 0;
    1ae6:	7a94      	ldrb	r4, [r2, #10]
    1ae8:	2502      	movs	r5, #2
    1aea:	43ac      	bics	r4, r5
    1aec:	7294      	strb	r4, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    1aee:	ac01      	add	r4, sp, #4
    1af0:	5c65      	ldrb	r5, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1af2:	001a      	movs	r2, r3
    1af4:	3208      	adds	r2, #8
    1af6:	0152      	lsls	r2, r2, #5
    1af8:	4f2b      	ldr	r7, [pc, #172]	; (1ba8 <_usb_d_dev_handle_trfail+0x104>)
    1afa:	46bc      	mov	ip, r7
    1afc:	4462      	add	r2, ip
    1afe:	71d5      	strb	r5, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    1b00:	5c62      	ldrb	r2, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1b02:	015b      	lsls	r3, r3, #5
    1b04:	4c29      	ldr	r4, [pc, #164]	; (1bac <_usb_d_dev_handle_trfail+0x108>)
    1b06:	46a4      	mov	ip, r4
    1b08:	4463      	add	r3, ip
    1b0a:	701a      	strb	r2, [r3, #0]
		if (is_ctrl && _usb_d_dev_ep_is_busy(ept)) {
    1b0c:	2e01      	cmp	r6, #1
    1b0e:	d145      	bne.n	1b9c <_usb_d_dev_handle_trfail+0xf8>
    1b10:	7cc3      	ldrb	r3, [r0, #19]
    1b12:	065b      	lsls	r3, r3, #25
    1b14:	d542      	bpl.n	1b9c <_usb_d_dev_handle_trfail+0xf8>
			if (bank_n != _usb_d_dev_ep_is_in(ept)) {
    1b16:	7cc3      	ldrb	r3, [r0, #19]
    1b18:	09db      	lsrs	r3, r3, #7
    1b1a:	4299      	cmp	r1, r3
    1b1c:	d03e      	beq.n	1b9c <_usb_d_dev_handle_trfail+0xf8>
				_usb_d_dev_trans_stop(ept, _usb_d_dev_ep_is_in(ept), USB_TRANS_DONE);
    1b1e:	2200      	movs	r2, #0
    1b20:	0019      	movs	r1, r3
    1b22:	4b23      	ldr	r3, [pc, #140]	; (1bb0 <_usb_d_dev_handle_trfail+0x10c>)
    1b24:	4798      	blx	r3
    1b26:	e039      	b.n	1b9c <_usb_d_dev_handle_trfail+0xf8>
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    1b28:	001a      	movs	r2, r3
    1b2a:	3208      	adds	r2, #8
    1b2c:	0152      	lsls	r2, r2, #5
    1b2e:	4d1e      	ldr	r5, [pc, #120]	; (1ba8 <_usb_d_dev_handle_trfail+0x104>)
    1b30:	5d55      	ldrb	r5, [r2, r5]
	tmp = (tmp & USB_DEVICE_EPCFG_EPTYPE0_Msk) >> USB_DEVICE_EPCFG_EPTYPE0_Pos;
    1b32:	2207      	movs	r2, #7
    1b34:	4015      	ands	r5, r2
    1b36:	e7cb      	b.n	1ad0 <_usb_d_dev_handle_trfail+0x2c>
	if ((eptype == USB_D_EPTYPE_ISOCH) && st.bit.CRCERR) {
    1b38:	07e5      	lsls	r5, r4, #31
    1b3a:	d5d2      	bpl.n	1ae2 <_usb_d_dev_handle_trfail+0x3e>
		bank[bank_n].STATUS_BK.bit.CRCERR = 0;
    1b3c:	7a94      	ldrb	r4, [r2, #10]
    1b3e:	2501      	movs	r5, #1
    1b40:	43ac      	bics	r4, r5
    1b42:	7294      	strb	r4, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    1b44:	ac01      	add	r4, sp, #4
    1b46:	5c65      	ldrb	r5, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1b48:	001a      	movs	r2, r3
    1b4a:	3208      	adds	r2, #8
    1b4c:	0152      	lsls	r2, r2, #5
    1b4e:	4e16      	ldr	r6, [pc, #88]	; (1ba8 <_usb_d_dev_handle_trfail+0x104>)
    1b50:	46b4      	mov	ip, r6
    1b52:	4462      	add	r2, ip
    1b54:	71d5      	strb	r5, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    1b56:	5c62      	ldrb	r2, [r4, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1b58:	015b      	lsls	r3, r3, #5
    1b5a:	4c14      	ldr	r4, [pc, #80]	; (1bac <_usb_d_dev_handle_trfail+0x108>)
    1b5c:	46a4      	mov	ip, r4
    1b5e:	4463      	add	r3, ip
    1b60:	701a      	strb	r2, [r3, #0]
		_usb_d_dev_trans_stop(ept, bank_n, USB_TRANS_ERROR);
    1b62:	1e4b      	subs	r3, r1, #1
    1b64:	4199      	sbcs	r1, r3
    1b66:	b2c9      	uxtb	r1, r1
    1b68:	2204      	movs	r2, #4
    1b6a:	4b11      	ldr	r3, [pc, #68]	; (1bb0 <_usb_d_dev_handle_trfail+0x10c>)
    1b6c:	4798      	blx	r3
    1b6e:	e015      	b.n	1b9c <_usb_d_dev_handle_trfail+0xf8>
	bank->STATUS_BK.reg     = 0;
    1b70:	005a      	lsls	r2, r3, #1
    1b72:	1852      	adds	r2, r2, r1
    1b74:	0112      	lsls	r2, r2, #4
    1b76:	480b      	ldr	r0, [pc, #44]	; (1ba4 <_usb_d_dev_handle_trfail+0x100>)
    1b78:	1882      	adds	r2, r0, r2
    1b7a:	2000      	movs	r0, #0
    1b7c:	7290      	strb	r0, [r2, #10]
		hri_usbendpoint_clear_EPINTFLAG_reg(hw, epn, fail[bank_n]);
    1b7e:	a801      	add	r0, sp, #4
    1b80:	5c44      	ldrb	r4, [r0, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1b82:	001a      	movs	r2, r3
    1b84:	3208      	adds	r2, #8
    1b86:	0152      	lsls	r2, r2, #5
    1b88:	4d07      	ldr	r5, [pc, #28]	; (1ba8 <_usb_d_dev_handle_trfail+0x104>)
    1b8a:	46ac      	mov	ip, r5
    1b8c:	4462      	add	r2, ip
    1b8e:	71d4      	strb	r4, [r2, #7]
		hri_usbendpoint_clear_EPINTEN_reg(hw, epn, fail[bank_n]);
    1b90:	5c42      	ldrb	r2, [r0, r1]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1b92:	015b      	lsls	r3, r3, #5
    1b94:	4905      	ldr	r1, [pc, #20]	; (1bac <_usb_d_dev_handle_trfail+0x108>)
    1b96:	468c      	mov	ip, r1
    1b98:	4463      	add	r3, ip
    1b9a:	701a      	strb	r2, [r3, #0]
}
    1b9c:	b003      	add	sp, #12
    1b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ba0:	00006004 	.word	0x00006004
    1ba4:	20000300 	.word	0x20000300
    1ba8:	41005000 	.word	0x41005000
    1bac:	41005108 	.word	0x41005108
    1bb0:	00001a29 	.word	0x00001a29

00001bb4 <_usb_d_dev_reset_epts>:
{
    1bb4:	b570      	push	{r4, r5, r6, lr}
	for (i = 0; i < USB_D_N_EP; i++) {
    1bb6:	2500      	movs	r5, #0
    1bb8:	e018      	b.n	1bec <_usb_d_dev_reset_epts+0x38>
		_usb_d_dev_trans_done(&dev_inst.ep[i], USB_TRANS_RESET);
    1bba:	4c10      	ldr	r4, [pc, #64]	; (1bfc <_usb_d_dev_reset_epts+0x48>)
    1bbc:	3460      	adds	r4, #96	; 0x60
    1bbe:	00ae      	lsls	r6, r5, #2
    1bc0:	1973      	adds	r3, r6, r5
    1bc2:	0098      	lsls	r0, r3, #2
    1bc4:	3010      	adds	r0, #16
    1bc6:	1820      	adds	r0, r4, r0
    1bc8:	3004      	adds	r0, #4
    1bca:	2103      	movs	r1, #3
    1bcc:	4b0c      	ldr	r3, [pc, #48]	; (1c00 <_usb_d_dev_reset_epts+0x4c>)
    1bce:	4798      	blx	r3
		dev_inst.ep[i].ep       = 0xFF;
    1bd0:	1972      	adds	r2, r6, r5
    1bd2:	0093      	lsls	r3, r2, #2
    1bd4:	18e3      	adds	r3, r4, r3
    1bd6:	3326      	adds	r3, #38	; 0x26
    1bd8:	22ff      	movs	r2, #255	; 0xff
    1bda:	701a      	strb	r2, [r3, #0]
		dev_inst.ep[i].flags.u8 = 0;
    1bdc:	1976      	adds	r6, r6, r5
    1bde:	00b3      	lsls	r3, r6, #2
    1be0:	18e4      	adds	r4, r4, r3
    1be2:	3427      	adds	r4, #39	; 0x27
    1be4:	2300      	movs	r3, #0
    1be6:	7023      	strb	r3, [r4, #0]
	for (i = 0; i < USB_D_N_EP; i++) {
    1be8:	3501      	adds	r5, #1
    1bea:	b2ed      	uxtb	r5, r5
    1bec:	2d08      	cmp	r5, #8
    1bee:	d9e4      	bls.n	1bba <_usb_d_dev_reset_epts+0x6>
	memset(prvt_inst.desc_table, 0, sizeof(UsbDeviceDescriptor) * (CONF_USB_D_MAX_EP_N + 1));
    1bf0:	2260      	movs	r2, #96	; 0x60
    1bf2:	2100      	movs	r1, #0
    1bf4:	4801      	ldr	r0, [pc, #4]	; (1bfc <_usb_d_dev_reset_epts+0x48>)
    1bf6:	4b03      	ldr	r3, [pc, #12]	; (1c04 <_usb_d_dev_reset_epts+0x50>)
    1bf8:	4798      	blx	r3
}
    1bfa:	bd70      	pop	{r4, r5, r6, pc}
    1bfc:	20000300 	.word	0x20000300
    1c00:	00001a01 	.word	0x00001a01
    1c04:	00005e03 	.word	0x00005e03

00001c08 <_usb_d_dev_in_next>:
{
    1c08:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c0a:	46c6      	mov	lr, r8
    1c0c:	b500      	push	{lr}
    1c0e:	0005      	movs	r5, r0
    1c10:	000e      	movs	r6, r1
	uint8_t            epn         = USB_EP_GET_N(ept->ep);
    1c12:	7c83      	ldrb	r3, [r0, #18]
    1c14:	240f      	movs	r4, #15
    1c16:	401c      	ands	r4, r3
	UsbDeviceDescBank *bank        = &prvt_inst.desc_table[epn].DeviceDescBank[0];
    1c18:	0162      	lsls	r2, r4, #5
    1c1a:	4b56      	ldr	r3, [pc, #344]	; (1d74 <_usb_d_dev_in_next+0x16c>)
    1c1c:	189b      	adds	r3, r3, r2
	uint16_t           trans_count = isr ? bank[1].PCKSIZE.bit.BYTE_COUNT : 0;
    1c1e:	2900      	cmp	r1, #0
    1c20:	d058      	beq.n	1cd4 <_usb_d_dev_in_next+0xcc>
    1c22:	6959      	ldr	r1, [r3, #20]
    1c24:	0489      	lsls	r1, r1, #18
    1c26:	0c89      	lsrs	r1, r1, #18
	uint16_t           last_pkt = trans_count & ((ept->size == 1023) ? ept->size : (ept->size - 1));
    1c28:	8a2b      	ldrh	r3, [r5, #16]
    1c2a:	4a53      	ldr	r2, [pc, #332]	; (1d78 <_usb_d_dev_in_next+0x170>)
    1c2c:	4293      	cmp	r3, r2
    1c2e:	d053      	beq.n	1cd8 <_usb_d_dev_in_next+0xd0>
    1c30:	3b01      	subs	r3, #1
    1c32:	b21b      	sxth	r3, r3
    1c34:	400b      	ands	r3, r1
	bool               is_ctrl  = _usb_d_dev_ep_is_ctrl(ept);
    1c36:	7cea      	ldrb	r2, [r5, #19]
    1c38:	2707      	movs	r7, #7
    1c3a:	4017      	ands	r7, r2
	if (isr) {
    1c3c:	2e00      	cmp	r6, #0
    1c3e:	d007      	beq.n	1c50 <_usb_d_dev_in_next+0x48>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1c40:	0022      	movs	r2, r4
    1c42:	3208      	adds	r2, #8
    1c44:	0152      	lsls	r2, r2, #5
    1c46:	484d      	ldr	r0, [pc, #308]	; (1d7c <_usb_d_dev_in_next+0x174>)
    1c48:	4684      	mov	ip, r0
    1c4a:	4462      	add	r2, ip
    1c4c:	2002      	movs	r0, #2
    1c4e:	71d0      	strb	r0, [r2, #7]
	ept->trans_count += trans_count;
    1c50:	68aa      	ldr	r2, [r5, #8]
    1c52:	4694      	mov	ip, r2
    1c54:	4461      	add	r1, ip
    1c56:	60a9      	str	r1, [r5, #8]
	if (ept->trans_count < ept->trans_size) {
    1c58:	686a      	ldr	r2, [r5, #4]
    1c5a:	4291      	cmp	r1, r2
    1c5c:	d24e      	bcs.n	1cfc <_usb_d_dev_in_next+0xf4>
		trans_next = ept->trans_size - ept->trans_count;
    1c5e:	b292      	uxth	r2, r2
    1c60:	b28b      	uxth	r3, r1
    1c62:	1ad2      	subs	r2, r2, r3
    1c64:	b292      	uxth	r2, r2
		if (ept->flags.bits.use_cache) {
    1c66:	7ceb      	ldrb	r3, [r5, #19]
    1c68:	069b      	lsls	r3, r3, #26
    1c6a:	d537      	bpl.n	1cdc <_usb_d_dev_in_next+0xd4>
			if (trans_next > ept->size) {
    1c6c:	8a2b      	ldrh	r3, [r5, #16]
    1c6e:	4698      	mov	r8, r3
    1c70:	429a      	cmp	r2, r3
    1c72:	d800      	bhi.n	1c76 <_usb_d_dev_in_next+0x6e>
		trans_next = ept->trans_size - ept->trans_count;
    1c74:	4690      	mov	r8, r2
			memcpy(ept->cache, &ept->trans_buf[ept->trans_count], trans_next);
    1c76:	682b      	ldr	r3, [r5, #0]
    1c78:	469c      	mov	ip, r3
    1c7a:	4461      	add	r1, ip
    1c7c:	4642      	mov	r2, r8
    1c7e:	68e8      	ldr	r0, [r5, #12]
    1c80:	4b3f      	ldr	r3, [pc, #252]	; (1d80 <_usb_d_dev_in_next+0x178>)
    1c82:	4798      	blx	r3
			_usbd_ep_set_buf(epn, 1, (uint32_t)ept->cache);
    1c84:	68e9      	ldr	r1, [r5, #12]
	bank->ADDR.reg          = addr;
    1c86:	0162      	lsls	r2, r4, #5
    1c88:	4b3a      	ldr	r3, [pc, #232]	; (1d74 <_usb_d_dev_in_next+0x16c>)
    1c8a:	189b      	adds	r3, r3, r2
    1c8c:	6119      	str	r1, [r3, #16]
	bank->PCKSIZE.bit.BYTE_COUNT = size;
    1c8e:	0163      	lsls	r3, r4, #5
    1c90:	4a38      	ldr	r2, [pc, #224]	; (1d74 <_usb_d_dev_in_next+0x16c>)
    1c92:	18d2      	adds	r2, r2, r3
    1c94:	6951      	ldr	r1, [r2, #20]
    1c96:	4643      	mov	r3, r8
    1c98:	049b      	lsls	r3, r3, #18
    1c9a:	0c9b      	lsrs	r3, r3, #18
    1c9c:	0b89      	lsrs	r1, r1, #14
    1c9e:	0389      	lsls	r1, r1, #14
    1ca0:	430b      	orrs	r3, r1
    1ca2:	6153      	str	r3, [r2, #20]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = count;
    1ca4:	6951      	ldr	r1, [r2, #20]
    1ca6:	4b37      	ldr	r3, [pc, #220]	; (1d84 <_usb_d_dev_in_next+0x17c>)
    1ca8:	400b      	ands	r3, r1
    1caa:	6153      	str	r3, [r2, #20]
	if (!isr) {
    1cac:	2e00      	cmp	r6, #0
    1cae:	d107      	bne.n	1cc0 <_usb_d_dev_in_next+0xb8>
		if (is_ctrl) {
    1cb0:	2f01      	cmp	r7, #1
    1cb2:	d05d      	beq.n	1d70 <_usb_d_dev_in_next+0x168>
			inten = USB_D_BANK1_INT_FLAGS;
    1cb4:	224a      	movs	r2, #74	; 0x4a
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    1cb6:	0163      	lsls	r3, r4, #5
    1cb8:	4933      	ldr	r1, [pc, #204]	; (1d88 <_usb_d_dev_in_next+0x180>)
    1cba:	468c      	mov	ip, r1
    1cbc:	4463      	add	r3, ip
    1cbe:	701a      	strb	r2, [r3, #0]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    1cc0:	3408      	adds	r4, #8
    1cc2:	0164      	lsls	r4, r4, #5
    1cc4:	4b2d      	ldr	r3, [pc, #180]	; (1d7c <_usb_d_dev_in_next+0x174>)
    1cc6:	469c      	mov	ip, r3
    1cc8:	4464      	add	r4, ip
    1cca:	2380      	movs	r3, #128	; 0x80
    1ccc:	7163      	strb	r3, [r4, #5]
}
    1cce:	bc04      	pop	{r2}
    1cd0:	4690      	mov	r8, r2
    1cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint16_t           trans_count = isr ? bank[1].PCKSIZE.bit.BYTE_COUNT : 0;
    1cd4:	2100      	movs	r1, #0
    1cd6:	e7a7      	b.n	1c28 <_usb_d_dev_in_next+0x20>
	uint16_t           last_pkt = trans_count & ((ept->size == 1023) ? ept->size : (ept->size - 1));
    1cd8:	b21b      	sxth	r3, r3
    1cda:	e7ab      	b.n	1c34 <_usb_d_dev_in_next+0x2c>
			if (trans_next > USB_D_DEV_TRANS_MAX) {
    1cdc:	2380      	movs	r3, #128	; 0x80
    1cde:	019b      	lsls	r3, r3, #6
    1ce0:	429a      	cmp	r2, r3
    1ce2:	d807      	bhi.n	1cf4 <_usb_d_dev_in_next+0xec>
		trans_next = ept->trans_size - ept->trans_count;
    1ce4:	4690      	mov	r8, r2
			_usbd_ep_set_buf(epn, 1, (uint32_t)&ept->trans_buf[ept->trans_count]);
    1ce6:	682b      	ldr	r3, [r5, #0]
    1ce8:	1859      	adds	r1, r3, r1
	bank->ADDR.reg          = addr;
    1cea:	0162      	lsls	r2, r4, #5
    1cec:	4b21      	ldr	r3, [pc, #132]	; (1d74 <_usb_d_dev_in_next+0x16c>)
    1cee:	189b      	adds	r3, r3, r2
    1cf0:	6119      	str	r1, [r3, #16]
    1cf2:	e7cc      	b.n	1c8e <_usb_d_dev_in_next+0x86>
				trans_next = USB_D_DEV_TRANS_MAX;
    1cf4:	2380      	movs	r3, #128	; 0x80
    1cf6:	019b      	lsls	r3, r3, #6
    1cf8:	4698      	mov	r8, r3
    1cfa:	e7f4      	b.n	1ce6 <_usb_d_dev_in_next+0xde>
	} else if (ept->flags.bits.need_zlp) {
    1cfc:	7cea      	ldrb	r2, [r5, #19]
    1cfe:	06d2      	lsls	r2, r2, #27
    1d00:	d50f      	bpl.n	1d22 <_usb_d_dev_in_next+0x11a>
		ept->flags.bits.need_zlp = 0;
    1d02:	7ceb      	ldrb	r3, [r5, #19]
    1d04:	2210      	movs	r2, #16
    1d06:	4393      	bics	r3, r2
    1d08:	74eb      	strb	r3, [r5, #19]
	bank->PCKSIZE.bit.BYTE_COUNT = size;
    1d0a:	0162      	lsls	r2, r4, #5
    1d0c:	4b19      	ldr	r3, [pc, #100]	; (1d74 <_usb_d_dev_in_next+0x16c>)
    1d0e:	189b      	adds	r3, r3, r2
    1d10:	695a      	ldr	r2, [r3, #20]
    1d12:	0b92      	lsrs	r2, r2, #14
    1d14:	0391      	lsls	r1, r2, #14
    1d16:	6159      	str	r1, [r3, #20]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = count;
    1d18:	6959      	ldr	r1, [r3, #20]
    1d1a:	4a1a      	ldr	r2, [pc, #104]	; (1d84 <_usb_d_dev_in_next+0x17c>)
    1d1c:	400a      	ands	r2, r1
    1d1e:	615a      	str	r2, [r3, #20]
    1d20:	e7c4      	b.n	1cac <_usb_d_dev_in_next+0xa4>
	if (is_ctrl) {
    1d22:	2f01      	cmp	r7, #1
    1d24:	d00d      	beq.n	1d42 <_usb_d_dev_in_next+0x13a>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1d26:	0164      	lsls	r4, r4, #5
    1d28:	4a18      	ldr	r2, [pc, #96]	; (1d8c <_usb_d_dev_in_next+0x184>)
    1d2a:	4694      	mov	ip, r2
    1d2c:	4464      	add	r4, ip
    1d2e:	224a      	movs	r2, #74	; 0x4a
    1d30:	7022      	strb	r2, [r4, #0]
	if (last_pkt == ept->size) {
    1d32:	8a2a      	ldrh	r2, [r5, #16]
    1d34:	4293      	cmp	r3, r2
    1d36:	d00b      	beq.n	1d50 <_usb_d_dev_in_next+0x148>
	_usb_d_dev_trans_done(ept, USB_TRANS_DONE);
    1d38:	2100      	movs	r1, #0
    1d3a:	0028      	movs	r0, r5
    1d3c:	4b14      	ldr	r3, [pc, #80]	; (1d90 <_usb_d_dev_in_next+0x188>)
    1d3e:	4798      	blx	r3
	return;
    1d40:	e7c5      	b.n	1cce <_usb_d_dev_in_next+0xc6>
    1d42:	0164      	lsls	r4, r4, #5
    1d44:	4a11      	ldr	r2, [pc, #68]	; (1d8c <_usb_d_dev_in_next+0x184>)
    1d46:	4694      	mov	ip, r2
    1d48:	4464      	add	r4, ip
    1d4a:	224b      	movs	r2, #75	; 0x4b
    1d4c:	7022      	strb	r2, [r4, #0]
    1d4e:	e7f0      	b.n	1d32 <_usb_d_dev_in_next+0x12a>
		ept->flags.bits.is_busy = 0;
    1d50:	7ceb      	ldrb	r3, [r5, #19]
    1d52:	2240      	movs	r2, #64	; 0x40
    1d54:	4393      	bics	r3, r2
    1d56:	74eb      	strb	r3, [r5, #19]
		if (dev_inst.ep_callbacks.more(ept->ep, ept->trans_count)) {
    1d58:	4b06      	ldr	r3, [pc, #24]	; (1d74 <_usb_d_dev_in_next+0x16c>)
    1d5a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    1d5c:	7ca8      	ldrb	r0, [r5, #18]
    1d5e:	68a9      	ldr	r1, [r5, #8]
    1d60:	4798      	blx	r3
    1d62:	2800      	cmp	r0, #0
    1d64:	d1b3      	bne.n	1cce <_usb_d_dev_in_next+0xc6>
		ept->flags.bits.is_busy = 1;
    1d66:	7ceb      	ldrb	r3, [r5, #19]
    1d68:	2240      	movs	r2, #64	; 0x40
    1d6a:	4313      	orrs	r3, r2
    1d6c:	74eb      	strb	r3, [r5, #19]
    1d6e:	e7e3      	b.n	1d38 <_usb_d_dev_in_next+0x130>
			inten = USB_D_BANK1_INT_FLAGS | USB_DEVICE_EPINTFLAG_TRFAIL0;
    1d70:	224e      	movs	r2, #78	; 0x4e
    1d72:	e7a0      	b.n	1cb6 <_usb_d_dev_in_next+0xae>
    1d74:	20000300 	.word	0x20000300
    1d78:	000003ff 	.word	0x000003ff
    1d7c:	41005000 	.word	0x41005000
    1d80:	00005df1 	.word	0x00005df1
    1d84:	f0003fff 	.word	0xf0003fff
    1d88:	41005109 	.word	0x41005109
    1d8c:	41005108 	.word	0x41005108
    1d90:	00001a01 	.word	0x00001a01

00001d94 <_usb_d_dev_out_next>:
{
    1d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d96:	46de      	mov	lr, fp
    1d98:	4657      	mov	r7, sl
    1d9a:	464e      	mov	r6, r9
    1d9c:	4645      	mov	r5, r8
    1d9e:	b5e0      	push	{r5, r6, r7, lr}
    1da0:	0004      	movs	r4, r0
    1da2:	000f      	movs	r7, r1
	uint8_t            epn        = USB_EP_GET_N(ept->ep);
    1da4:	7c83      	ldrb	r3, [r0, #18]
    1da6:	250f      	movs	r5, #15
    1da8:	401d      	ands	r5, r3
	uint16_t           trans_size = isr ? bank->PCKSIZE.bit.MULTI_PACKET_SIZE : 0;
    1daa:	2900      	cmp	r1, #0
    1dac:	d059      	beq.n	1e62 <_usb_d_dev_out_next+0xce>
    1dae:	016a      	lsls	r2, r5, #5
    1db0:	4b71      	ldr	r3, [pc, #452]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1db2:	189b      	adds	r3, r3, r2
    1db4:	685b      	ldr	r3, [r3, #4]
    1db6:	011b      	lsls	r3, r3, #4
    1db8:	0c9b      	lsrs	r3, r3, #18
    1dba:	469a      	mov	sl, r3
	uint16_t           last_trans = isr ? bank->PCKSIZE.bit.BYTE_COUNT : 0;
    1dbc:	2f00      	cmp	r7, #0
    1dbe:	d053      	beq.n	1e68 <_usb_d_dev_out_next+0xd4>
    1dc0:	016a      	lsls	r2, r5, #5
    1dc2:	4b6d      	ldr	r3, [pc, #436]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1dc4:	189b      	adds	r3, r3, r2
    1dc6:	685b      	ldr	r3, [r3, #4]
    1dc8:	049b      	lsls	r3, r3, #18
    1dca:	0c9b      	lsrs	r3, r3, #18
    1dcc:	4698      	mov	r8, r3
	uint16_t           size_mask  = (ept->size == 1023) ? 1023 : (ept->size - 1);
    1dce:	8a26      	ldrh	r6, [r4, #16]
    1dd0:	4b6a      	ldr	r3, [pc, #424]	; (1f7c <_usb_d_dev_out_next+0x1e8>)
    1dd2:	429e      	cmp	r6, r3
    1dd4:	d001      	beq.n	1dda <_usb_d_dev_out_next+0x46>
    1dd6:	3e01      	subs	r6, #1
    1dd8:	b2b6      	uxth	r6, r6
	uint16_t           last_pkt   = last_trans & size_mask;
    1dda:	4643      	mov	r3, r8
    1ddc:	4033      	ands	r3, r6
    1dde:	469b      	mov	fp, r3
	bool               is_ctrl = _usb_d_dev_ep_is_ctrl(ept);
    1de0:	7ce3      	ldrb	r3, [r4, #19]
    1de2:	2207      	movs	r2, #7
    1de4:	401a      	ands	r2, r3
    1de6:	4691      	mov	r9, r2
	if (isr) {
    1de8:	2f00      	cmp	r7, #0
    1dea:	d007      	beq.n	1dfc <_usb_d_dev_out_next+0x68>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    1dec:	002b      	movs	r3, r5
    1dee:	3308      	adds	r3, #8
    1df0:	015b      	lsls	r3, r3, #5
    1df2:	4a63      	ldr	r2, [pc, #396]	; (1f80 <_usb_d_dev_out_next+0x1ec>)
    1df4:	4694      	mov	ip, r2
    1df6:	4463      	add	r3, ip
    1df8:	2201      	movs	r2, #1
    1dfa:	71da      	strb	r2, [r3, #7]
	if (ept->flags.bits.use_cache && ept->trans_size) {
    1dfc:	7ce3      	ldrb	r3, [r4, #19]
    1dfe:	069b      	lsls	r3, r3, #26
    1e00:	d511      	bpl.n	1e26 <_usb_d_dev_out_next+0x92>
    1e02:	6862      	ldr	r2, [r4, #4]
    1e04:	2a00      	cmp	r2, #0
    1e06:	d00e      	beq.n	1e26 <_usb_d_dev_out_next+0x92>
		uint16_t buf_remain = ept->trans_size - ept->trans_count;
    1e08:	b292      	uxth	r2, r2
    1e0a:	8923      	ldrh	r3, [r4, #8]
    1e0c:	1ad2      	subs	r2, r2, r3
    1e0e:	b292      	uxth	r2, r2
		memcpy(&ept->trans_buf[ept->trans_count], ept->cache, (buf_remain > last_pkt) ? last_pkt : buf_remain);
    1e10:	6823      	ldr	r3, [r4, #0]
    1e12:	68a1      	ldr	r1, [r4, #8]
    1e14:	468c      	mov	ip, r1
    1e16:	4463      	add	r3, ip
    1e18:	0018      	movs	r0, r3
    1e1a:	68e1      	ldr	r1, [r4, #12]
    1e1c:	4593      	cmp	fp, r2
    1e1e:	d200      	bcs.n	1e22 <_usb_d_dev_out_next+0x8e>
    1e20:	465a      	mov	r2, fp
    1e22:	4b58      	ldr	r3, [pc, #352]	; (1f84 <_usb_d_dev_out_next+0x1f0>)
    1e24:	4798      	blx	r3
	if (ept->trans_size == 0 && ept->flags.bits.need_zlp) {
    1e26:	6863      	ldr	r3, [r4, #4]
    1e28:	2b00      	cmp	r3, #0
    1e2a:	d120      	bne.n	1e6e <_usb_d_dev_out_next+0xda>
    1e2c:	7ce2      	ldrb	r2, [r4, #19]
    1e2e:	06d2      	lsls	r2, r2, #27
    1e30:	d51d      	bpl.n	1e6e <_usb_d_dev_out_next+0xda>
		ept->flags.bits.need_zlp  = 0;
    1e32:	7ce3      	ldrb	r3, [r4, #19]
		ept->flags.bits.use_cache = 1;
    1e34:	2210      	movs	r2, #16
    1e36:	4393      	bics	r3, r2
    1e38:	2220      	movs	r2, #32
    1e3a:	4313      	orrs	r3, r2
    1e3c:	74e3      	strb	r3, [r4, #19]
	bank->ADDR.reg          = addr;
    1e3e:	494e      	ldr	r1, [pc, #312]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1e40:	016a      	lsls	r2, r5, #5
    1e42:	68e3      	ldr	r3, [r4, #12]
    1e44:	5053      	str	r3, [r2, r1]
		_usbd_ep_set_out_trans(epn, 0, ept->size, 0);
    1e46:	8a23      	ldrh	r3, [r4, #16]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = size;
    1e48:	188a      	adds	r2, r1, r2
    1e4a:	6851      	ldr	r1, [r2, #4]
    1e4c:	049b      	lsls	r3, r3, #18
    1e4e:	091b      	lsrs	r3, r3, #4
    1e50:	484d      	ldr	r0, [pc, #308]	; (1f88 <_usb_d_dev_out_next+0x1f4>)
    1e52:	4001      	ands	r1, r0
    1e54:	430b      	orrs	r3, r1
    1e56:	6053      	str	r3, [r2, #4]
	bank->PCKSIZE.bit.BYTE_COUNT = count;
    1e58:	6853      	ldr	r3, [r2, #4]
    1e5a:	0b9b      	lsrs	r3, r3, #14
    1e5c:	0399      	lsls	r1, r3, #14
    1e5e:	6051      	str	r1, [r2, #4]
    1e60:	e047      	b.n	1ef2 <_usb_d_dev_out_next+0x15e>
	uint16_t           trans_size = isr ? bank->PCKSIZE.bit.MULTI_PACKET_SIZE : 0;
    1e62:	2300      	movs	r3, #0
    1e64:	469a      	mov	sl, r3
    1e66:	e7a9      	b.n	1dbc <_usb_d_dev_out_next+0x28>
	uint16_t           last_trans = isr ? bank->PCKSIZE.bit.BYTE_COUNT : 0;
    1e68:	2300      	movs	r3, #0
    1e6a:	4698      	mov	r8, r3
    1e6c:	e7af      	b.n	1dce <_usb_d_dev_out_next+0x3a>
	} else if (isr && last_pkt < ept->size) {
    1e6e:	2f00      	cmp	r7, #0
    1e70:	d01d      	beq.n	1eae <_usb_d_dev_out_next+0x11a>
    1e72:	8a22      	ldrh	r2, [r4, #16]
    1e74:	4593      	cmp	fp, r2
    1e76:	d21a      	bcs.n	1eae <_usb_d_dev_out_next+0x11a>
		ept->flags.bits.need_zlp = 0;
    1e78:	7ce3      	ldrb	r3, [r4, #19]
    1e7a:	2210      	movs	r2, #16
    1e7c:	4393      	bics	r3, r2
    1e7e:	74e3      	strb	r3, [r4, #19]
		ept->trans_count += last_trans;
    1e80:	68a3      	ldr	r3, [r4, #8]
    1e82:	4443      	add	r3, r8
    1e84:	60a3      	str	r3, [r4, #8]
	if (is_ctrl) {
    1e86:	464b      	mov	r3, r9
    1e88:	2b01      	cmp	r3, #1
    1e8a:	d066      	beq.n	1f5a <_usb_d_dev_out_next+0x1c6>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1e8c:	016b      	lsls	r3, r5, #5
    1e8e:	4a3f      	ldr	r2, [pc, #252]	; (1f8c <_usb_d_dev_out_next+0x1f8>)
    1e90:	4694      	mov	ip, r2
    1e92:	4463      	add	r3, ip
    1e94:	2225      	movs	r2, #37	; 0x25
    1e96:	701a      	strb	r2, [r3, #0]
	if (0 == epn) {
    1e98:	2d00      	cmp	r5, #0
    1e9a:	d103      	bne.n	1ea4 <_usb_d_dev_out_next+0x110>
	bank->ADDR.reg          = addr;
    1e9c:	016d      	lsls	r5, r5, #5
    1e9e:	4b36      	ldr	r3, [pc, #216]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1ea0:	68e2      	ldr	r2, [r4, #12]
    1ea2:	50ea      	str	r2, [r5, r3]
	_usb_d_dev_trans_done(ept, USB_TRANS_DONE);
    1ea4:	2100      	movs	r1, #0
    1ea6:	0020      	movs	r0, r4
    1ea8:	4b39      	ldr	r3, [pc, #228]	; (1f90 <_usb_d_dev_out_next+0x1fc>)
    1eaa:	4798      	blx	r3
	return;
    1eac:	e033      	b.n	1f16 <_usb_d_dev_out_next+0x182>
		ept->trans_count += trans_size;
    1eae:	68a2      	ldr	r2, [r4, #8]
    1eb0:	4452      	add	r2, sl
    1eb2:	60a2      	str	r2, [r4, #8]
		if (ept->trans_count < ept->trans_size) {
    1eb4:	4293      	cmp	r3, r2
    1eb6:	d9e6      	bls.n	1e86 <_usb_d_dev_out_next+0xf2>
			trans_next = ept->trans_size - ept->trans_count;
    1eb8:	b29b      	uxth	r3, r3
    1eba:	b291      	uxth	r1, r2
    1ebc:	1a5b      	subs	r3, r3, r1
    1ebe:	b29b      	uxth	r3, r3
			if (ept->flags.bits.use_cache) {
    1ec0:	7ce1      	ldrb	r1, [r4, #19]
    1ec2:	0689      	lsls	r1, r1, #26
    1ec4:	d52d      	bpl.n	1f22 <_usb_d_dev_out_next+0x18e>
				if (trans_next > ept->size) {
    1ec6:	8a21      	ldrh	r1, [r4, #16]
    1ec8:	428b      	cmp	r3, r1
    1eca:	d800      	bhi.n	1ece <_usb_d_dev_out_next+0x13a>
			trans_next = ept->trans_size - ept->trans_count;
    1ecc:	0019      	movs	r1, r3
				_usbd_ep_set_buf(epn, 0, (uint32_t)ept->cache);
    1ece:	68e0      	ldr	r0, [r4, #12]
	bank->ADDR.reg          = addr;
    1ed0:	016b      	lsls	r3, r5, #5
    1ed2:	4a29      	ldr	r2, [pc, #164]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1ed4:	5098      	str	r0, [r3, r2]
	bank->PCKSIZE.bit.MULTI_PACKET_SIZE = size;
    1ed6:	016b      	lsls	r3, r5, #5
    1ed8:	4827      	ldr	r0, [pc, #156]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1eda:	18c0      	adds	r0, r0, r3
    1edc:	6842      	ldr	r2, [r0, #4]
    1ede:	048b      	lsls	r3, r1, #18
    1ee0:	091b      	lsrs	r3, r3, #4
    1ee2:	4929      	ldr	r1, [pc, #164]	; (1f88 <_usb_d_dev_out_next+0x1f4>)
    1ee4:	400a      	ands	r2, r1
    1ee6:	4313      	orrs	r3, r2
    1ee8:	6043      	str	r3, [r0, #4]
	bank->PCKSIZE.bit.BYTE_COUNT = count;
    1eea:	6843      	ldr	r3, [r0, #4]
    1eec:	0b9b      	lsrs	r3, r3, #14
    1eee:	039a      	lsls	r2, r3, #14
    1ef0:	6042      	str	r2, [r0, #4]
	if (!isr) {
    1ef2:	2f00      	cmp	r7, #0
    1ef4:	d108      	bne.n	1f08 <_usb_d_dev_out_next+0x174>
		if (is_ctrl) {
    1ef6:	464b      	mov	r3, r9
    1ef8:	2b01      	cmp	r3, #1
    1efa:	d035      	beq.n	1f68 <_usb_d_dev_out_next+0x1d4>
			inten = USB_D_BANK0_INT_FLAGS;
    1efc:	2225      	movs	r2, #37	; 0x25
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    1efe:	016b      	lsls	r3, r5, #5
    1f00:	4924      	ldr	r1, [pc, #144]	; (1f94 <_usb_d_dev_out_next+0x200>)
    1f02:	468c      	mov	ip, r1
    1f04:	4463      	add	r3, ip
    1f06:	701a      	strb	r2, [r3, #0]
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    1f08:	3508      	adds	r5, #8
    1f0a:	016d      	lsls	r5, r5, #5
    1f0c:	4b1c      	ldr	r3, [pc, #112]	; (1f80 <_usb_d_dev_out_next+0x1ec>)
    1f0e:	469c      	mov	ip, r3
    1f10:	4465      	add	r5, ip
    1f12:	2340      	movs	r3, #64	; 0x40
    1f14:	712b      	strb	r3, [r5, #4]
}
    1f16:	bc3c      	pop	{r2, r3, r4, r5}
    1f18:	4690      	mov	r8, r2
    1f1a:	4699      	mov	r9, r3
    1f1c:	46a2      	mov	sl, r4
    1f1e:	46ab      	mov	fp, r5
    1f20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if (trans_next > ept->size) {
    1f22:	8a21      	ldrh	r1, [r4, #16]
    1f24:	428b      	cmp	r3, r1
    1f26:	d90b      	bls.n	1f40 <_usb_d_dev_out_next+0x1ac>
					if (trans_next > USB_D_DEV_TRANS_MAX) {
    1f28:	2180      	movs	r1, #128	; 0x80
    1f2a:	0189      	lsls	r1, r1, #6
    1f2c:	428b      	cmp	r3, r1
    1f2e:	d80f      	bhi.n	1f50 <_usb_d_dev_out_next+0x1bc>
    1f30:	43b3      	bics	r3, r6
    1f32:	0019      	movs	r1, r3
				_usbd_ep_set_buf(epn, 0, (uint32_t)&ept->trans_buf[ept->trans_count]);
    1f34:	6823      	ldr	r3, [r4, #0]
    1f36:	189a      	adds	r2, r3, r2
	bank->ADDR.reg          = addr;
    1f38:	016b      	lsls	r3, r5, #5
    1f3a:	480f      	ldr	r0, [pc, #60]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1f3c:	501a      	str	r2, [r3, r0]
    1f3e:	e7ca      	b.n	1ed6 <_usb_d_dev_out_next+0x142>
				} else if (trans_next < ept->size) {
    1f40:	428b      	cmp	r3, r1
    1f42:	d208      	bcs.n	1f56 <_usb_d_dev_out_next+0x1c2>
					ept->flags.bits.use_cache = 1;
    1f44:	7ce1      	ldrb	r1, [r4, #19]
    1f46:	2020      	movs	r0, #32
    1f48:	4301      	orrs	r1, r0
    1f4a:	74e1      	strb	r1, [r4, #19]
			trans_next = ept->trans_size - ept->trans_count;
    1f4c:	0019      	movs	r1, r3
    1f4e:	e7f1      	b.n	1f34 <_usb_d_dev_out_next+0x1a0>
						trans_next = USB_D_DEV_TRANS_MAX;
    1f50:	2180      	movs	r1, #128	; 0x80
    1f52:	0189      	lsls	r1, r1, #6
    1f54:	e7ee      	b.n	1f34 <_usb_d_dev_out_next+0x1a0>
			trans_next = ept->trans_size - ept->trans_count;
    1f56:	0019      	movs	r1, r3
    1f58:	e7ec      	b.n	1f34 <_usb_d_dev_out_next+0x1a0>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    1f5a:	016b      	lsls	r3, r5, #5
    1f5c:	4a0b      	ldr	r2, [pc, #44]	; (1f8c <_usb_d_dev_out_next+0x1f8>)
    1f5e:	4694      	mov	ip, r2
    1f60:	4463      	add	r3, ip
    1f62:	222d      	movs	r2, #45	; 0x2d
    1f64:	701a      	strb	r2, [r3, #0]
    1f66:	e797      	b.n	1e98 <_usb_d_dev_out_next+0x104>
	bank->STATUS_BK.reg     = 0;
    1f68:	016a      	lsls	r2, r5, #5
    1f6a:	4b03      	ldr	r3, [pc, #12]	; (1f78 <_usb_d_dev_out_next+0x1e4>)
    1f6c:	189b      	adds	r3, r3, r2
    1f6e:	2200      	movs	r2, #0
    1f70:	769a      	strb	r2, [r3, #26]
			inten = USB_D_BANK0_INT_FLAGS | USB_DEVICE_EPINTFLAG_TRFAIL1;
    1f72:	322d      	adds	r2, #45	; 0x2d
    1f74:	e7c3      	b.n	1efe <_usb_d_dev_out_next+0x16a>
    1f76:	46c0      	nop			; (mov r8, r8)
    1f78:	20000300 	.word	0x20000300
    1f7c:	000003ff 	.word	0x000003ff
    1f80:	41005000 	.word	0x41005000
    1f84:	00005df1 	.word	0x00005df1
    1f88:	f0003fff 	.word	0xf0003fff
    1f8c:	41005108 	.word	0x41005108
    1f90:	00001a01 	.word	0x00001a01
    1f94:	41005109 	.word	0x41005109

00001f98 <_usb_d_dev_handler>:
{
    1f98:	b570      	push	{r4, r5, r6, lr}
	uint16_t epint = hw->DEVICE.EPINTSMRY.reg;
    1f9a:	4b89      	ldr	r3, [pc, #548]	; (21c0 <STACK_SIZE+0x1c0>)
    1f9c:	8c1d      	ldrh	r5, [r3, #32]
    1f9e:	b2ad      	uxth	r5, r5
	if (0 == epint) {
    1fa0:	2d00      	cmp	r5, #0
    1fa2:	d001      	beq.n	1fa8 <_usb_d_dev_handler+0x10>
	bool     rc    = true;
    1fa4:	2400      	movs	r4, #0
    1fa6:	e0bf      	b.n	2128 <STACK_SIZE+0x128>
	return tmp;
}

static inline hri_usbdevice_intflag_reg_t hri_usbdevice_read_INTFLAG_reg(const void *const hw)
{
	return ((Usb *)hw)->DEVICE.INTFLAG.reg;
    1fa8:	8b99      	ldrh	r1, [r3, #28]
	return tmp;
}

static inline hri_usbdevice_intenset_reg_t hri_usbdevice_read_INTEN_reg(const void *const hw)
{
	return ((Usb *)hw)->DEVICE.INTENSET.reg;
    1faa:	8b1b      	ldrh	r3, [r3, #24]
	flags &= hri_usbdevice_read_INTEN_reg(USB);
    1fac:	400b      	ands	r3, r1
	if (flags & USB_DEVICE_INTFLAG_SOF) {
    1fae:	075a      	lsls	r2, r3, #29
    1fb0:	d40d      	bmi.n	1fce <_usb_d_dev_handler+0x36>
	if (flags & USB_DEVICE_INTFLAG_LPMSUSP) {
    1fb2:	059a      	lsls	r2, r3, #22
    1fb4:	d415      	bmi.n	1fe2 <_usb_d_dev_handler+0x4a>
	} else if (flags & USB_DEVICE_INTFLAG_RAMACER) {
    1fb6:	061a      	lsls	r2, r3, #24
    1fb8:	d437      	bmi.n	202a <STACK_SIZE+0x2a>
	} else if (flags & USB_D_WAKEUP_INT_FLAGS) {
    1fba:	2270      	movs	r2, #112	; 0x70
    1fbc:	421a      	tst	r2, r3
    1fbe:	d13e      	bne.n	203e <STACK_SIZE+0x3e>
	} else if (flags & USB_DEVICE_INTFLAG_EORST) {
    1fc0:	071a      	lsls	r2, r3, #28
    1fc2:	d457      	bmi.n	2074 <STACK_SIZE+0x74>
	} else if (flags & USB_DEVICE_INTFLAG_SUSPEND) {
    1fc4:	07db      	lsls	r3, r3, #31
    1fc6:	d500      	bpl.n	1fca <_usb_d_dev_handler+0x32>
    1fc8:	e068      	b.n	209c <STACK_SIZE+0x9c>
		rc = false;
    1fca:	2300      	movs	r3, #0
    1fcc:	e006      	b.n	1fdc <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    1fce:	2204      	movs	r2, #4
    1fd0:	4b7b      	ldr	r3, [pc, #492]	; (21c0 <STACK_SIZE+0x1c0>)
    1fd2:	839a      	strh	r2, [r3, #28]
	dev_inst.callbacks.sof();
    1fd4:	4b7b      	ldr	r3, [pc, #492]	; (21c4 <STACK_SIZE+0x1c4>)
    1fd6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    1fd8:	4798      	blx	r3
		return true;
    1fda:	2301      	movs	r3, #1
		if (_usb_d_dev_handle_nep()) {
    1fdc:	2b00      	cmp	r3, #0
    1fde:	d0e1      	beq.n	1fa4 <_usb_d_dev_handler+0xc>
}
    1fe0:	bd70      	pop	{r4, r5, r6, pc}
    1fe2:	4b77      	ldr	r3, [pc, #476]	; (21c0 <STACK_SIZE+0x1c0>)
    1fe4:	4a78      	ldr	r2, [pc, #480]	; (21c8 <STACK_SIZE+0x1c8>)
    1fe6:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = ~data;
}

static inline void hri_usbdevice_clear_INTEN_reg(const void *const hw, hri_usbdevice_intenset_reg_t mask)
{
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    1fe8:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    1fea:	3a92      	subs	r2, #146	; 0x92
    1fec:	3aff      	subs	r2, #255	; 0xff
    1fee:	831a      	strh	r2, [r3, #24]
	for (i = 0; i < CONF_USB_D_MAX_EP_N; i++) {
    1ff0:	2300      	movs	r3, #0
    1ff2:	2b01      	cmp	r3, #1
    1ff4:	d812      	bhi.n	201c <STACK_SIZE+0x1c>
		if (bank->EXTREG.bit.SUBPID == 0x3) {
    1ff6:	0158      	lsls	r0, r3, #5
    1ff8:	4a72      	ldr	r2, [pc, #456]	; (21c4 <STACK_SIZE+0x1c4>)
    1ffa:	1812      	adds	r2, r2, r0
    1ffc:	8912      	ldrh	r2, [r2, #8]
    1ffe:	0712      	lsls	r2, r2, #28
    2000:	0f12      	lsrs	r2, r2, #28
    2002:	2a03      	cmp	r2, #3
    2004:	d002      	beq.n	200c <STACK_SIZE+0xc>
	for (i = 0; i < CONF_USB_D_MAX_EP_N; i++) {
    2006:	3301      	adds	r3, #1
    2008:	b2db      	uxtb	r3, r3
    200a:	e7f2      	b.n	1ff2 <_usb_d_dev_handler+0x5a>
			lpm_variable = bank->EXTREG.bit.VARIABLE;
    200c:	4b6d      	ldr	r3, [pc, #436]	; (21c4 <STACK_SIZE+0x1c4>)
    200e:	181b      	adds	r3, r3, r0
    2010:	8919      	ldrh	r1, [r3, #8]
    2012:	0449      	lsls	r1, r1, #17
    2014:	0d49      	lsrs	r1, r1, #21
			bank->EXTREG.reg = 0;
    2016:	2200      	movs	r2, #0
    2018:	811a      	strh	r2, [r3, #8]
    201a:	e000      	b.n	201e <STACK_SIZE+0x1e>
	uint32_t lpm_variable = 0;
    201c:	2100      	movs	r1, #0
	dev_inst.callbacks.event(USB_EV_LPM_SUSPEND, lpm_variable);
    201e:	4b69      	ldr	r3, [pc, #420]	; (21c4 <STACK_SIZE+0x1c4>)
    2020:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    2022:	2003      	movs	r0, #3
    2024:	4798      	blx	r3
	bool     rc    = true;
    2026:	2301      	movs	r3, #1
    2028:	e7d8      	b.n	1fdc <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    202a:	2280      	movs	r2, #128	; 0x80
    202c:	4b64      	ldr	r3, [pc, #400]	; (21c0 <STACK_SIZE+0x1c0>)
    202e:	839a      	strh	r2, [r3, #28]
	dev_inst.callbacks.event(USB_EV_ERROR, 0);
    2030:	4b64      	ldr	r3, [pc, #400]	; (21c4 <STACK_SIZE+0x1c4>)
    2032:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    2034:	2100      	movs	r1, #0
    2036:	2005      	movs	r0, #5
    2038:	4798      	blx	r3
	bool     rc    = true;
    203a:	2301      	movs	r3, #1
    203c:	e7ce      	b.n	1fdc <_usb_d_dev_handler+0x44>
    203e:	4b60      	ldr	r3, [pc, #384]	; (21c0 <STACK_SIZE+0x1c0>)
    2040:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    2042:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    2044:	4a60      	ldr	r2, [pc, #384]	; (21c8 <STACK_SIZE+0x1c8>)
    2046:	831a      	strh	r2, [r3, #24]
	if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    2048:	4b60      	ldr	r3, [pc, #384]	; (21cc <STACK_SIZE+0x1cc>)
    204a:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    204c:	069b      	lsls	r3, r3, #26
    204e:	d40c      	bmi.n	206a <STACK_SIZE+0x6a>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    2050:	4b5e      	ldr	r3, [pc, #376]	; (21cc <STACK_SIZE+0x1cc>)
    2052:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    2054:	23d0      	movs	r3, #208	; 0xd0
    2056:	4013      	ands	r3, r2
		while (hri_sysctrl_get_PCLKSR_reg(SYSCTRL, DFLL_READY_FLAG) != DFLL_READY_FLAG)
    2058:	2bd0      	cmp	r3, #208	; 0xd0
    205a:	d1f9      	bne.n	2050 <STACK_SIZE+0x50>
	dev_inst.callbacks.event(USB_EV_WAKEUP, 0);
    205c:	4b59      	ldr	r3, [pc, #356]	; (21c4 <STACK_SIZE+0x1c4>)
    205e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    2060:	2100      	movs	r1, #0
    2062:	2002      	movs	r0, #2
    2064:	4798      	blx	r3
	bool     rc    = true;
    2066:	2301      	movs	r3, #1
    2068:	e7b8      	b.n	1fdc <_usb_d_dev_handler+0x44>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    206a:	4b58      	ldr	r3, [pc, #352]	; (21cc <STACK_SIZE+0x1cc>)
    206c:	68db      	ldr	r3, [r3, #12]
		while (hri_sysctrl_get_PCLKSR_reg(SYSCTRL, SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY)
    206e:	06db      	lsls	r3, r3, #27
    2070:	d5fb      	bpl.n	206a <STACK_SIZE+0x6a>
    2072:	e7f3      	b.n	205c <STACK_SIZE+0x5c>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg = data;
    2074:	4b52      	ldr	r3, [pc, #328]	; (21c0 <STACK_SIZE+0x1c0>)
    2076:	2100      	movs	r1, #0
    2078:	2280      	movs	r2, #128	; 0x80
    207a:	0052      	lsls	r2, r2, #1
    207c:	5499      	strb	r1, [r3, r2]
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    207e:	3af8      	subs	r2, #248	; 0xf8
    2080:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    2082:	3268      	adds	r2, #104	; 0x68
    2084:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    2086:	4a50      	ldr	r2, [pc, #320]	; (21c8 <STACK_SIZE+0x1c8>)
    2088:	831a      	strh	r2, [r3, #24]
	_usb_d_dev_reset_epts();
    208a:	4b51      	ldr	r3, [pc, #324]	; (21d0 <STACK_SIZE+0x1d0>)
    208c:	4798      	blx	r3
	dev_inst.callbacks.event(USB_EV_RESET, 0);
    208e:	4b4d      	ldr	r3, [pc, #308]	; (21c4 <STACK_SIZE+0x1c4>)
    2090:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    2092:	2100      	movs	r1, #0
    2094:	2001      	movs	r0, #1
    2096:	4798      	blx	r3
	bool     rc    = true;
    2098:	2301      	movs	r3, #1
    209a:	e79f      	b.n	1fdc <_usb_d_dev_handler+0x44>
	((Usb *)hw)->DEVICE.INTFLAG.reg = mask;
    209c:	4b48      	ldr	r3, [pc, #288]	; (21c0 <STACK_SIZE+0x1c0>)
    209e:	4a4a      	ldr	r2, [pc, #296]	; (21c8 <STACK_SIZE+0x1c8>)
    20a0:	839a      	strh	r2, [r3, #28]
	((Usb *)hw)->DEVICE.INTENCLR.reg = mask;
    20a2:	829a      	strh	r2, [r3, #20]
	((Usb *)hw)->DEVICE.INTENSET.reg = mask;
    20a4:	3a92      	subs	r2, #146	; 0x92
    20a6:	3aff      	subs	r2, #255	; 0xff
    20a8:	831a      	strh	r2, [r3, #24]
	dev_inst.callbacks.event(USB_EV_SUSPEND, 0);
    20aa:	4b46      	ldr	r3, [pc, #280]	; (21c4 <STACK_SIZE+0x1c4>)
    20ac:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    20ae:	2100      	movs	r1, #0
    20b0:	2004      	movs	r0, #4
    20b2:	4798      	blx	r3
	bool     rc    = true;
    20b4:	2301      	movs	r3, #1
    20b6:	e791      	b.n	1fdc <_usb_d_dev_handler+0x44>
	if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    20b8:	06da      	lsls	r2, r3, #27
    20ba:	d407      	bmi.n	20cc <STACK_SIZE+0xcc>
	} else if (flags & USB_DEVICE_EPINTFLAG_STALL1) {
    20bc:	065a      	lsls	r2, r3, #25
    20be:	d408      	bmi.n	20d2 <STACK_SIZE+0xd2>
	} else if (flags & USB_DEVICE_EPINTFLAG_STALL0) {
    20c0:	069b      	lsls	r3, r3, #26
    20c2:	d52f      	bpl.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_handle_stall(ept, 0);
    20c4:	2100      	movs	r1, #0
    20c6:	4b43      	ldr	r3, [pc, #268]	; (21d4 <STACK_SIZE+0x1d4>)
    20c8:	4798      	blx	r3
    20ca:	e02b      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_handle_setup(ept);
    20cc:	4b42      	ldr	r3, [pc, #264]	; (21d8 <STACK_SIZE+0x1d8>)
    20ce:	4798      	blx	r3
    20d0:	e028      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_handle_stall(ept, 1);
    20d2:	2101      	movs	r1, #1
    20d4:	4b3f      	ldr	r3, [pc, #252]	; (21d4 <STACK_SIZE+0x1d4>)
    20d6:	4798      	blx	r3
    20d8:	e024      	b.n	2124 <STACK_SIZE+0x124>
	if (flags & USB_DEVICE_EPINTFLAG_STALL1) {
    20da:	065a      	lsls	r2, r3, #25
    20dc:	d40f      	bmi.n	20fe <STACK_SIZE+0xfe>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRFAIL1) {
    20de:	071a      	lsls	r2, r3, #28
    20e0:	d411      	bmi.n	2106 <STACK_SIZE+0x106>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRCPT1) {
    20e2:	079a      	lsls	r2, r3, #30
    20e4:	d413      	bmi.n	210e <STACK_SIZE+0x10e>
	} else if (_usb_d_dev_ep_is_ctrl(ept)) {
    20e6:	7cc1      	ldrb	r1, [r0, #19]
    20e8:	2207      	movs	r2, #7
    20ea:	400a      	ands	r2, r1
    20ec:	2a01      	cmp	r2, #1
    20ee:	d119      	bne.n	2124 <STACK_SIZE+0x124>
		if (flags & USB_DEVICE_EPINTFLAG_TRFAIL0) {
    20f0:	075a      	lsls	r2, r3, #29
    20f2:	d410      	bmi.n	2116 <STACK_SIZE+0x116>
		} else if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    20f4:	06db      	lsls	r3, r3, #27
    20f6:	d515      	bpl.n	2124 <STACK_SIZE+0x124>
			_usb_d_dev_handle_setup(ept);
    20f8:	4b37      	ldr	r3, [pc, #220]	; (21d8 <STACK_SIZE+0x1d8>)
    20fa:	4798      	blx	r3
    20fc:	e012      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_handle_stall(ept, 1);
    20fe:	2101      	movs	r1, #1
    2100:	4b34      	ldr	r3, [pc, #208]	; (21d4 <STACK_SIZE+0x1d4>)
    2102:	4798      	blx	r3
    2104:	e00e      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_handle_trfail(ept, 1);
    2106:	2101      	movs	r1, #1
    2108:	4b34      	ldr	r3, [pc, #208]	; (21dc <STACK_SIZE+0x1dc>)
    210a:	4798      	blx	r3
    210c:	e00a      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_in_next(ept, true);
    210e:	2101      	movs	r1, #1
    2110:	4b33      	ldr	r3, [pc, #204]	; (21e0 <STACK_SIZE+0x1e0>)
    2112:	4798      	blx	r3
    2114:	e006      	b.n	2124 <STACK_SIZE+0x124>
			_usb_d_dev_handle_trfail(ept, 0);
    2116:	2100      	movs	r1, #0
    2118:	4b30      	ldr	r3, [pc, #192]	; (21dc <STACK_SIZE+0x1dc>)
    211a:	4798      	blx	r3
    211c:	e002      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_handle_stall(ept, 0);
    211e:	2100      	movs	r1, #0
    2120:	4b2c      	ldr	r3, [pc, #176]	; (21d4 <STACK_SIZE+0x1d4>)
    2122:	4798      	blx	r3
	for (i = 0; i < USB_D_N_EP; i++) {
    2124:	3401      	adds	r4, #1
    2126:	b2e4      	uxtb	r4, r4
    2128:	2c08      	cmp	r4, #8
    212a:	d900      	bls.n	212e <STACK_SIZE+0x12e>
    212c:	e758      	b.n	1fe0 <_usb_d_dev_handler+0x48>
		struct _usb_d_dev_ep *ept = &dev_inst.ep[i];
    212e:	4b25      	ldr	r3, [pc, #148]	; (21c4 <STACK_SIZE+0x1c4>)
    2130:	3360      	adds	r3, #96	; 0x60
    2132:	00a2      	lsls	r2, r4, #2
    2134:	1911      	adds	r1, r2, r4
    2136:	0088      	lsls	r0, r1, #2
    2138:	0001      	movs	r1, r0
    213a:	3010      	adds	r0, #16
    213c:	1818      	adds	r0, r3, r0
    213e:	3004      	adds	r0, #4
		if (ept->ep == 0xFF) {
    2140:	185b      	adds	r3, r3, r1
    2142:	3326      	adds	r3, #38	; 0x26
    2144:	781b      	ldrb	r3, [r3, #0]
    2146:	2bff      	cmp	r3, #255	; 0xff
    2148:	d0ec      	beq.n	2124 <STACK_SIZE+0x124>
	uint8_t epn = USB_EP_GET_N(ept->ep);
    214a:	7c82      	ldrb	r2, [r0, #18]
    214c:	230f      	movs	r3, #15
    214e:	4013      	ands	r3, r2
	if (!(epint & (1u << epn))) {
    2150:	2201      	movs	r2, #1
    2152:	409a      	lsls	r2, r3
    2154:	422a      	tst	r2, r5
    2156:	d0e5      	beq.n	2124 <STACK_SIZE+0x124>
	flags = hw->DEVICE.DeviceEndpoint[epn].EPINTFLAG.reg;
    2158:	001a      	movs	r2, r3
    215a:	3208      	adds	r2, #8
    215c:	0152      	lsls	r2, r2, #5
    215e:	4918      	ldr	r1, [pc, #96]	; (21c0 <STACK_SIZE+0x1c0>)
    2160:	468c      	mov	ip, r1
    2162:	4462      	add	r2, ip
    2164:	79d2      	ldrb	r2, [r2, #7]
	mask  = hw->DEVICE.DeviceEndpoint[epn].EPINTENSET.reg;
    2166:	015b      	lsls	r3, r3, #5
    2168:	491e      	ldr	r1, [pc, #120]	; (21e4 <STACK_SIZE+0x1e4>)
    216a:	468c      	mov	ip, r1
    216c:	4463      	add	r3, ip
    216e:	781b      	ldrb	r3, [r3, #0]
	flags &= mask;
    2170:	4013      	ands	r3, r2
	if (flags) {
    2172:	d0d7      	beq.n	2124 <STACK_SIZE+0x124>
		if ((ept->flags.bits.eptype == 0x1) && !_usb_d_dev_ep_is_busy(ept)) {
    2174:	7cc2      	ldrb	r2, [r0, #19]
    2176:	2147      	movs	r1, #71	; 0x47
    2178:	4011      	ands	r1, r2
    217a:	2901      	cmp	r1, #1
    217c:	d09c      	beq.n	20b8 <STACK_SIZE+0xb8>
		} else if (_usb_d_dev_ep_is_in(ept)) {
    217e:	b252      	sxtb	r2, r2
    2180:	2a00      	cmp	r2, #0
    2182:	dbaa      	blt.n	20da <STACK_SIZE+0xda>
	if (flags & USB_DEVICE_EPINTFLAG_STALL0) {
    2184:	069a      	lsls	r2, r3, #26
    2186:	d4ca      	bmi.n	211e <STACK_SIZE+0x11e>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRFAIL0) {
    2188:	075a      	lsls	r2, r3, #29
    218a:	d40d      	bmi.n	21a8 <STACK_SIZE+0x1a8>
	} else if (flags & USB_DEVICE_EPINTFLAG_TRCPT0) {
    218c:	07da      	lsls	r2, r3, #31
    218e:	d40f      	bmi.n	21b0 <STACK_SIZE+0x1b0>
	} else if (_usb_d_dev_ep_is_ctrl(ept)) {
    2190:	7cc1      	ldrb	r1, [r0, #19]
    2192:	2207      	movs	r2, #7
    2194:	400a      	ands	r2, r1
    2196:	2a01      	cmp	r2, #1
    2198:	d1c4      	bne.n	2124 <STACK_SIZE+0x124>
		if (flags & USB_DEVICE_EPINTFLAG_TRFAIL1) {
    219a:	071a      	lsls	r2, r3, #28
    219c:	d40c      	bmi.n	21b8 <STACK_SIZE+0x1b8>
		} else if (flags & USB_DEVICE_EPINTFLAG_RXSTP) {
    219e:	06db      	lsls	r3, r3, #27
    21a0:	d5c0      	bpl.n	2124 <STACK_SIZE+0x124>
			_usb_d_dev_handle_setup(ept);
    21a2:	4b0d      	ldr	r3, [pc, #52]	; (21d8 <STACK_SIZE+0x1d8>)
    21a4:	4798      	blx	r3
    21a6:	e7bd      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_handle_trfail(ept, 0);
    21a8:	2100      	movs	r1, #0
    21aa:	4b0c      	ldr	r3, [pc, #48]	; (21dc <STACK_SIZE+0x1dc>)
    21ac:	4798      	blx	r3
    21ae:	e7b9      	b.n	2124 <STACK_SIZE+0x124>
		_usb_d_dev_out_next(ept, true);
    21b0:	2101      	movs	r1, #1
    21b2:	4b0d      	ldr	r3, [pc, #52]	; (21e8 <STACK_SIZE+0x1e8>)
    21b4:	4798      	blx	r3
    21b6:	e7b5      	b.n	2124 <STACK_SIZE+0x124>
			_usb_d_dev_handle_trfail(ept, 1);
    21b8:	2101      	movs	r1, #1
    21ba:	4b08      	ldr	r3, [pc, #32]	; (21dc <STACK_SIZE+0x1dc>)
    21bc:	4798      	blx	r3
    21be:	e7b1      	b.n	2124 <STACK_SIZE+0x124>
    21c0:	41005000 	.word	0x41005000
    21c4:	20000300 	.word	0x20000300
    21c8:	00000201 	.word	0x00000201
    21cc:	40000800 	.word	0x40000800
    21d0:	00001bb5 	.word	0x00001bb5
    21d4:	000019d1 	.word	0x000019d1
    21d8:	00001945 	.word	0x00001945
    21dc:	00001aa5 	.word	0x00001aa5
    21e0:	00001c09 	.word	0x00001c09
    21e4:	41005109 	.word	0x41005109
    21e8:	00001d95 	.word	0x00001d95

000021ec <_usb_d_dev_init>:
{
    21ec:	b500      	push	{lr}
    21ee:	b083      	sub	sp, #12
	const uint8_t spdconf[4] = {
    21f0:	2200      	movs	r2, #0
    21f2:	ab01      	add	r3, sp, #4
    21f4:	705a      	strb	r2, [r3, #1]
	return ((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg;
    21f6:	4b21      	ldr	r3, [pc, #132]	; (227c <_usb_d_dev_init+0x90>)
    21f8:	789b      	ldrb	r3, [r3, #2]
	if (!hri_usbdevice_is_syncing(hw, USB_SYNCBUSY_SWRST)) {
    21fa:	07db      	lsls	r3, r3, #31
    21fc:	d41b      	bmi.n	2236 <_usb_d_dev_init+0x4a>
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    21fe:	4b1f      	ldr	r3, [pc, #124]	; (227c <_usb_d_dev_init+0x90>)
    2200:	789b      	ldrb	r3, [r3, #2]
    2202:	079b      	lsls	r3, r3, #30
    2204:	d1fb      	bne.n	21fe <_usb_d_dev_init+0x12>

static inline hri_usb_ctrla_reg_t hri_usb_get_CTRLA_reg(const void *const hw, hri_usb_ctrla_reg_t mask)
{
	uint8_t tmp;
	hri_usb_wait_for_sync(hw, USB_SYNCBUSY_MASK);
	tmp = ((Usb *)hw)->HOST.CTRLA.reg;
    2206:	4b1d      	ldr	r3, [pc, #116]	; (227c <_usb_d_dev_init+0x90>)
    2208:	781b      	ldrb	r3, [r3, #0]
		if (hri_usbdevice_get_CTRLA_reg(hw, USB_CTRLA_ENABLE)) {
    220a:	079b      	lsls	r3, r3, #30
    220c:	d50c      	bpl.n	2228 <_usb_d_dev_init+0x3c>
	((Usb *)hw)->HOST.CTRLA.reg &= ~USB_CTRLA_ENABLE;
    220e:	4a1b      	ldr	r2, [pc, #108]	; (227c <_usb_d_dev_init+0x90>)
    2210:	7813      	ldrb	r3, [r2, #0]
    2212:	2102      	movs	r1, #2
    2214:	438b      	bics	r3, r1
    2216:	7013      	strb	r3, [r2, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    2218:	4b18      	ldr	r3, [pc, #96]	; (227c <_usb_d_dev_init+0x90>)
    221a:	789b      	ldrb	r3, [r3, #2]
    221c:	079b      	lsls	r3, r3, #30
    221e:	d1fb      	bne.n	2218 <_usb_d_dev_init+0x2c>
    2220:	4b16      	ldr	r3, [pc, #88]	; (227c <_usb_d_dev_init+0x90>)
    2222:	789b      	ldrb	r3, [r3, #2]
    2224:	079b      	lsls	r3, r3, #30
    2226:	d4fb      	bmi.n	2220 <_usb_d_dev_init+0x34>
}

static inline void hri_usb_write_CTRLA_reg(const void *const hw, hri_usb_ctrla_reg_t data)
{
	USB_CRITICAL_SECTION_ENTER();
	((Usb *)hw)->HOST.CTRLA.reg = data;
    2228:	2201      	movs	r2, #1
    222a:	4b14      	ldr	r3, [pc, #80]	; (227c <_usb_d_dev_init+0x90>)
    222c:	701a      	strb	r2, [r3, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    222e:	4b13      	ldr	r3, [pc, #76]	; (227c <_usb_d_dev_init+0x90>)
    2230:	789b      	ldrb	r3, [r3, #2]
    2232:	079b      	lsls	r3, r3, #30
    2234:	d1fb      	bne.n	222e <_usb_d_dev_init+0x42>
    2236:	4b11      	ldr	r3, [pc, #68]	; (227c <_usb_d_dev_init+0x90>)
    2238:	789b      	ldrb	r3, [r3, #2]
    223a:	07db      	lsls	r3, r3, #31
    223c:	d4fb      	bmi.n	2236 <_usb_d_dev_init+0x4a>
	dev_inst.callbacks.sof   = (_usb_d_dev_sof_cb_t)_dummy_func_no_return;
    223e:	4b10      	ldr	r3, [pc, #64]	; (2280 <_usb_d_dev_init+0x94>)
    2240:	4a10      	ldr	r2, [pc, #64]	; (2284 <_usb_d_dev_init+0x98>)
    2242:	661a      	str	r2, [r3, #96]	; 0x60
	dev_inst.callbacks.event = (_usb_d_dev_event_cb_t)_dummy_func_no_return;
    2244:	665a      	str	r2, [r3, #100]	; 0x64
	dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)_dummy_func_no_return;
    2246:	669a      	str	r2, [r3, #104]	; 0x68
	dev_inst.ep_callbacks.more  = (_usb_d_dev_ep_cb_more_t)_dummy_func_no_return;
    2248:	66da      	str	r2, [r3, #108]	; 0x6c
	dev_inst.ep_callbacks.done  = (_usb_d_dev_ep_cb_done_t)_dummy_func_no_return;
    224a:	671a      	str	r2, [r3, #112]	; 0x70
	_usb_d_dev_reset_epts();
    224c:	4b0e      	ldr	r3, [pc, #56]	; (2288 <_usb_d_dev_init+0x9c>)
    224e:	4798      	blx	r3
	_usb_load_calib();
    2250:	4b0e      	ldr	r3, [pc, #56]	; (228c <_usb_d_dev_init+0xa0>)
    2252:	4798      	blx	r3
	((Usb *)hw)->HOST.CTRLA.reg = data;
    2254:	2204      	movs	r2, #4
    2256:	4b09      	ldr	r3, [pc, #36]	; (227c <_usb_d_dev_init+0x90>)
    2258:	701a      	strb	r2, [r3, #0]
	while (((Usb *)hw)->DEVICE.SYNCBUSY.reg & reg) {
    225a:	4b08      	ldr	r3, [pc, #32]	; (227c <_usb_d_dev_init+0x90>)
    225c:	789b      	ldrb	r3, [r3, #2]
    225e:	079b      	lsls	r3, r3, #30
    2260:	d1fb      	bne.n	225a <_usb_d_dev_init+0x6e>
}

static inline void hri_usb_write_DESCADD_reg(const void *const hw, hri_usb_descadd_reg_t data)
{
	USB_CRITICAL_SECTION_ENTER();
	((Usb *)hw)->HOST.DESCADD.reg = data;
    2262:	4a06      	ldr	r2, [pc, #24]	; (227c <_usb_d_dev_init+0x90>)
    2264:	4b06      	ldr	r3, [pc, #24]	; (2280 <_usb_d_dev_init+0x94>)
    2266:	6253      	str	r3, [r2, #36]	; 0x24
	hri_usbdevice_write_CTRLB_reg(hw, spdconf[speed] | USB_DEVICE_CTRLB_DETACH);
    2268:	ab01      	add	r3, sp, #4
    226a:	785b      	ldrb	r3, [r3, #1]
    226c:	2101      	movs	r1, #1
    226e:	430b      	orrs	r3, r1
    2270:	b2db      	uxtb	r3, r3
	((Usb *)hw)->DEVICE.CTRLB.reg = data;
    2272:	8113      	strh	r3, [r2, #8]
}
    2274:	2000      	movs	r0, #0
    2276:	b003      	add	sp, #12
    2278:	bd00      	pop	{pc}
    227a:	46c0      	nop			; (mov r8, r8)
    227c:	41005000 	.word	0x41005000
    2280:	20000300 	.word	0x20000300
    2284:	000018ed 	.word	0x000018ed
    2288:	00001bb5 	.word	0x00001bb5
    228c:	000018f1 	.word	0x000018f1

00002290 <_usb_d_dev_ep_stall>:
{
    2290:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t               epn = USB_EP_GET_N(ep);
    2292:	220f      	movs	r2, #15
    2294:	4002      	ands	r2, r0
    2296:	b240      	sxtb	r0, r0
	bool                  dir = USB_EP_GET_DIR(ep);
    2298:	0fc4      	lsrs	r4, r0, #31
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    229a:	2a00      	cmp	r2, #0
    229c:	d005      	beq.n	22aa <_usb_d_dev_ep_stall+0x1a>
    229e:	2800      	cmp	r0, #0
    22a0:	db01      	blt.n	22a6 <_usb_d_dev_ep_stall+0x16>
    22a2:	0013      	movs	r3, r2
    22a4:	e002      	b.n	22ac <_usb_d_dev_ep_stall+0x1c>
    22a6:	1c93      	adds	r3, r2, #2
    22a8:	e000      	b.n	22ac <_usb_d_dev_ep_stall+0x1c>
    22aa:	0013      	movs	r3, r2
	return &dev_inst.ep[ep_index];
    22ac:	001d      	movs	r5, r3
    22ae:	0098      	lsls	r0, r3, #2
    22b0:	18c0      	adds	r0, r0, r3
    22b2:	0083      	lsls	r3, r0, #2
    22b4:	3310      	adds	r3, #16
    22b6:	0018      	movs	r0, r3
    22b8:	4b47      	ldr	r3, [pc, #284]	; (23d8 <_usb_d_dev_ep_stall+0x148>)
    22ba:	3360      	adds	r3, #96	; 0x60
    22bc:	181b      	adds	r3, r3, r0
    22be:	3304      	adds	r3, #4
	if (epn > CONF_USB_D_MAX_EP_N) {
    22c0:	2a02      	cmp	r2, #2
    22c2:	d900      	bls.n	22c6 <_usb_d_dev_ep_stall+0x36>
    22c4:	e084      	b.n	23d0 <_usb_d_dev_ep_stall+0x140>
	if (USB_EP_STALL_SET == ctrl) {
    22c6:	2901      	cmp	r1, #1
    22c8:	d018      	beq.n	22fc <_usb_d_dev_ep_stall+0x6c>
	} else if (USB_EP_STALL_CLR == ctrl) {
    22ca:	2900      	cmp	r1, #0
    22cc:	d03d      	beq.n	234a <_usb_d_dev_ep_stall+0xba>
	uint8_t epn = USB_EP_GET_N(ept->ep);
    22ce:	00aa      	lsls	r2, r5, #2
    22d0:	1952      	adds	r2, r2, r5
    22d2:	0091      	lsls	r1, r2, #2
    22d4:	4b40      	ldr	r3, [pc, #256]	; (23d8 <_usb_d_dev_ep_stall+0x148>)
    22d6:	3360      	adds	r3, #96	; 0x60
    22d8:	185b      	adds	r3, r3, r1
    22da:	3326      	adds	r3, #38	; 0x26
    22dc:	781a      	ldrb	r2, [r3, #0]
    22de:	230f      	movs	r3, #15
    22e0:	4013      	ands	r3, r2
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    22e2:	3308      	adds	r3, #8
    22e4:	015b      	lsls	r3, r3, #5
    22e6:	4a3d      	ldr	r2, [pc, #244]	; (23dc <_usb_d_dev_ep_stall+0x14c>)
    22e8:	4694      	mov	ip, r2
    22ea:	4463      	add	r3, ip
    22ec:	7998      	ldrb	r0, [r3, #6]
	return (hri_usbendpoint_read_EPSTATUS_reg(hw, epn) & (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    22ee:	2310      	movs	r3, #16
    22f0:	40a3      	lsls	r3, r4
    22f2:	4018      	ands	r0, r3
    22f4:	1e43      	subs	r3, r0, #1
    22f6:	4198      	sbcs	r0, r3
    22f8:	b2c0      	uxtb	r0, r0
}
    22fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint8_t epn = USB_EP_GET_N(ept->ep);
    22fc:	4836      	ldr	r0, [pc, #216]	; (23d8 <_usb_d_dev_ep_stall+0x148>)
    22fe:	0003      	movs	r3, r0
    2300:	3360      	adds	r3, #96	; 0x60
    2302:	00aa      	lsls	r2, r5, #2
    2304:	1956      	adds	r6, r2, r5
    2306:	00b1      	lsls	r1, r6, #2
    2308:	185b      	adds	r3, r3, r1
    230a:	3326      	adds	r3, #38	; 0x26
    230c:	781b      	ldrb	r3, [r3, #0]
    230e:	210f      	movs	r1, #15
    2310:	400b      	ands	r3, r1
		hri_usbendpoint_set_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    2312:	2610      	movs	r6, #16
    2314:	40a6      	lsls	r6, r4
    2316:	b2f6      	uxtb	r6, r6
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSSET.reg = mask;
    2318:	0019      	movs	r1, r3
    231a:	3108      	adds	r1, #8
    231c:	0149      	lsls	r1, r1, #5
    231e:	4f2f      	ldr	r7, [pc, #188]	; (23dc <_usb_d_dev_ep_stall+0x14c>)
    2320:	46bc      	mov	ip, r7
    2322:	4461      	add	r1, ip
    2324:	714e      	strb	r6, [r1, #5]
	_usbd_ep_int_en(epn, USB_DEVICE_EPINTFLAG_STALL0 << dir);
    2326:	2120      	movs	r1, #32
    2328:	40a1      	lsls	r1, r4
	hri_usbendpoint_set_EPINTEN_reg(USB, epn, flags);
    232a:	b2cc      	uxtb	r4, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENSET.reg = mask;
    232c:	0159      	lsls	r1, r3, #5
    232e:	4b2c      	ldr	r3, [pc, #176]	; (23e0 <_usb_d_dev_ep_stall+0x150>)
    2330:	469c      	mov	ip, r3
    2332:	4461      	add	r1, ip
    2334:	700c      	strb	r4, [r1, #0]
	ept->flags.bits.is_stalled = 1;
    2336:	1952      	adds	r2, r2, r5
    2338:	0093      	lsls	r3, r2, #2
    233a:	18c3      	adds	r3, r0, r3
    233c:	3380      	adds	r3, #128	; 0x80
    233e:	79da      	ldrb	r2, [r3, #7]
    2340:	2108      	movs	r1, #8
    2342:	430a      	orrs	r2, r1
    2344:	71da      	strb	r2, [r3, #7]
		rc = _usb_d_dev_ep_stall_set(ept, dir);
    2346:	2000      	movs	r0, #0
    2348:	e7d7      	b.n	22fa <_usb_d_dev_ep_stall+0x6a>
	uint8_t epn        = USB_EP_GET_N(ept->ep);
    234a:	7c9a      	ldrb	r2, [r3, #18]
    234c:	310f      	adds	r1, #15
    234e:	400a      	ands	r2, r1
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    2350:	0011      	movs	r1, r2
    2352:	3108      	adds	r1, #8
    2354:	0149      	lsls	r1, r1, #5
    2356:	4821      	ldr	r0, [pc, #132]	; (23dc <_usb_d_dev_ep_stall+0x14c>)
    2358:	4684      	mov	ip, r0
    235a:	4461      	add	r1, ip
    235c:	7988      	ldrb	r0, [r1, #6]
	return (hri_usbendpoint_read_EPSTATUS_reg(hw, epn) & (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    235e:	2110      	movs	r1, #16
    2360:	40a1      	lsls	r1, r4
	if (!is_stalled) {
    2362:	4208      	tst	r0, r1
    2364:	d024      	beq.n	23b0 <_usb_d_dev_ep_stall+0x120>
		hri_usbendpoint_clear_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_STALLRQ0 << bank_n));
    2366:	b2c9      	uxtb	r1, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    2368:	0010      	movs	r0, r2
    236a:	3008      	adds	r0, #8
    236c:	0140      	lsls	r0, r0, #5
    236e:	4460      	add	r0, ip
    2370:	7101      	strb	r1, [r0, #4]
	_usbd_ep_int_dis(epn, USB_DEVICE_EPINTFLAG_STALL0 << dir);
    2372:	2120      	movs	r1, #32
    2374:	40a1      	lsls	r1, r4
	hri_usbendpoint_clear_EPINTEN_reg(USB, epn, flags);
    2376:	b2ce      	uxtb	r6, r1
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTENCLR.reg = mask;
    2378:	0155      	lsls	r5, r2, #5
    237a:	4f1a      	ldr	r7, [pc, #104]	; (23e4 <_usb_d_dev_ep_stall+0x154>)
    237c:	46bc      	mov	ip, r7
    237e:	4465      	add	r5, ip
    2380:	702e      	strb	r6, [r5, #0]
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg;
    2382:	79c0      	ldrb	r0, [r0, #7]
	if (_usbd_ep_is_stall_sent(epn, dir)) {
    2384:	4208      	tst	r0, r1
    2386:	d00a      	beq.n	239e <_usb_d_dev_ep_stall+0x10e>
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2388:	0011      	movs	r1, r2
    238a:	3108      	adds	r1, #8
    238c:	0149      	lsls	r1, r1, #5
    238e:	4813      	ldr	r0, [pc, #76]	; (23dc <_usb_d_dev_ep_stall+0x14c>)
    2390:	4684      	mov	ip, r0
    2392:	4461      	add	r1, ip
    2394:	71ce      	strb	r6, [r1, #7]
		hri_usbendpoint_clear_EPSTATUS_reg(USB, epn, (USB_DEVICE_EPSTATUS_DTGLOUT << bank_n));
    2396:	2001      	movs	r0, #1
    2398:	40a0      	lsls	r0, r4
    239a:	b2c0      	uxtb	r0, r0
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUSCLR.reg = mask;
    239c:	7108      	strb	r0, [r1, #4]
	if (_usb_d_dev_ep_is_ctrl(ept)) {
    239e:	7cd8      	ldrb	r0, [r3, #19]
    23a0:	2107      	movs	r1, #7
    23a2:	4001      	ands	r1, r0
    23a4:	2901      	cmp	r1, #1
    23a6:	d005      	beq.n	23b4 <_usb_d_dev_ep_stall+0x124>
		ept->flags.bits.is_stalled = 0;
    23a8:	7cda      	ldrb	r2, [r3, #19]
    23aa:	2108      	movs	r1, #8
    23ac:	438a      	bics	r2, r1
    23ae:	74da      	strb	r2, [r3, #19]
		rc = _usb_d_dev_ep_stall_clr(ept, dir);
    23b0:	2000      	movs	r0, #0
    23b2:	e7a2      	b.n	22fa <_usb_d_dev_ep_stall+0x6a>
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPSTATUS.reg;
    23b4:	3208      	adds	r2, #8
    23b6:	0152      	lsls	r2, r2, #5
    23b8:	4908      	ldr	r1, [pc, #32]	; (23dc <_usb_d_dev_ep_stall+0x14c>)
    23ba:	468c      	mov	ip, r1
    23bc:	4462      	add	r2, ip
    23be:	7991      	ldrb	r1, [r2, #6]
		if ((hri_usbendpoint_read_EPSTATUS_reg(USB, epn) & USB_DEVICE_EPSTATUS_STALLRQ_Msk) == 0) {
    23c0:	2230      	movs	r2, #48	; 0x30
    23c2:	4211      	tst	r1, r2
    23c4:	d1f4      	bne.n	23b0 <_usb_d_dev_ep_stall+0x120>
			ept->flags.bits.is_stalled = 0;
    23c6:	0002      	movs	r2, r0
    23c8:	2108      	movs	r1, #8
    23ca:	438a      	bics	r2, r1
    23cc:	74da      	strb	r2, [r3, #19]
    23ce:	e7ef      	b.n	23b0 <_usb_d_dev_ep_stall+0x120>
		return -USB_ERR_PARAM;
    23d0:	2012      	movs	r0, #18
    23d2:	4240      	negs	r0, r0
    23d4:	e791      	b.n	22fa <_usb_d_dev_ep_stall+0x6a>
    23d6:	46c0      	nop			; (mov r8, r8)
    23d8:	20000300 	.word	0x20000300
    23dc:	41005000 	.word	0x41005000
    23e0:	41005109 	.word	0x41005109
    23e4:	41005108 	.word	0x41005108

000023e8 <_usb_d_dev_ep_read_req>:

int32_t _usb_d_dev_ep_read_req(const uint8_t ep, uint8_t *req_buf)
{
    23e8:	b570      	push	{r4, r5, r6, lr}
    23ea:	000e      	movs	r6, r1
	uint8_t            epn   = USB_EP_GET_N(ep);
    23ec:	240f      	movs	r4, #15
    23ee:	4004      	ands	r4, r0
	UsbDeviceDescBank *bank  = prvt_inst.desc_table[epn].DeviceDescBank;
    23f0:	0162      	lsls	r2, r4, #5
    23f2:	4b18      	ldr	r3, [pc, #96]	; (2454 <_usb_d_dev_ep_read_req+0x6c>)
    23f4:	189b      	adds	r3, r3, r2
	uint32_t           addr  = bank[0].ADDR.reg;
    23f6:	6819      	ldr	r1, [r3, #0]
	uint16_t           bytes = bank[0].PCKSIZE.bit.BYTE_COUNT;
    23f8:	685d      	ldr	r5, [r3, #4]
    23fa:	04ad      	lsls	r5, r5, #18
    23fc:	0cad      	lsrs	r5, r5, #18

	if (epn > CONF_USB_D_MAX_EP_N || !req_buf) {
    23fe:	2c02      	cmp	r4, #2
    2400:	d81f      	bhi.n	2442 <_usb_d_dev_ep_read_req+0x5a>
    2402:	2e00      	cmp	r6, #0
    2404:	d020      	beq.n	2448 <_usb_d_dev_ep_read_req+0x60>
	return ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPCFG.reg;
    2406:	0023      	movs	r3, r4
    2408:	3308      	adds	r3, #8
    240a:	015b      	lsls	r3, r3, #5
    240c:	4a12      	ldr	r2, [pc, #72]	; (2458 <_usb_d_dev_ep_read_req+0x70>)
    240e:	5c9b      	ldrb	r3, [r3, r2]
		return -USB_ERR_PARAM;
	}
	if (!_usbd_ep_is_ctrl(epn)) {
    2410:	2b11      	cmp	r3, #17
    2412:	d11c      	bne.n	244e <_usb_d_dev_ep_read_req+0x66>
	tmp = ((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg;
    2414:	0023      	movs	r3, r4
    2416:	3308      	adds	r3, #8
    2418:	015b      	lsls	r3, r3, #5
    241a:	4694      	mov	ip, r2
    241c:	4463      	add	r3, ip
    241e:	79db      	ldrb	r3, [r3, #7]
		return -USB_ERR_FUNC;
	}
	if (!_usbd_ep_is_setup(epn)) {
    2420:	06db      	lsls	r3, r3, #27
    2422:	d401      	bmi.n	2428 <_usb_d_dev_ep_read_req+0x40>
		return ERR_NONE;
    2424:	2000      	movs	r0, #0
	}
	memcpy(req_buf, (void *)addr, 8);
	_usbd_ep_ack_setup(epn);

	return bytes;
}
    2426:	bd70      	pop	{r4, r5, r6, pc}
	memcpy(req_buf, (void *)addr, 8);
    2428:	2208      	movs	r2, #8
    242a:	0030      	movs	r0, r6
    242c:	4b0b      	ldr	r3, [pc, #44]	; (245c <_usb_d_dev_ep_read_req+0x74>)
    242e:	4798      	blx	r3
	((UsbDevice *)hw)->DeviceEndpoint[submodule_index].EPINTFLAG.reg = mask;
    2430:	3408      	adds	r4, #8
    2432:	0164      	lsls	r4, r4, #5
    2434:	4b08      	ldr	r3, [pc, #32]	; (2458 <_usb_d_dev_ep_read_req+0x70>)
    2436:	469c      	mov	ip, r3
    2438:	4464      	add	r4, ip
    243a:	2310      	movs	r3, #16
    243c:	71e3      	strb	r3, [r4, #7]
	return bytes;
    243e:	0028      	movs	r0, r5
    2440:	e7f1      	b.n	2426 <_usb_d_dev_ep_read_req+0x3e>
		return -USB_ERR_PARAM;
    2442:	2012      	movs	r0, #18
    2444:	4240      	negs	r0, r0
    2446:	e7ee      	b.n	2426 <_usb_d_dev_ep_read_req+0x3e>
    2448:	2012      	movs	r0, #18
    244a:	4240      	negs	r0, r0
    244c:	e7eb      	b.n	2426 <_usb_d_dev_ep_read_req+0x3e>
		return -USB_ERR_FUNC;
    244e:	2013      	movs	r0, #19
    2450:	4240      	negs	r0, r0
    2452:	e7e8      	b.n	2426 <_usb_d_dev_ep_read_req+0x3e>
    2454:	20000300 	.word	0x20000300
    2458:	41005000 	.word	0x41005000
    245c:	00005df1 	.word	0x00005df1

00002460 <_usb_d_dev_ep_trans>:

int32_t _usb_d_dev_ep_trans(const struct usb_d_transfer *trans)
{
    2460:	b5f0      	push	{r4, r5, r6, r7, lr}
    2462:	46de      	mov	lr, fp
    2464:	4657      	mov	r7, sl
    2466:	464e      	mov	r6, r9
    2468:	4645      	mov	r5, r8
    246a:	b5e0      	push	{r5, r6, r7, lr}
    246c:	b085      	sub	sp, #20
    246e:	4680      	mov	r8, r0
	uint8_t               epn = USB_EP_GET_N(trans->ep);
    2470:	7a05      	ldrb	r5, [r0, #8]
    2472:	220f      	movs	r2, #15
    2474:	402a      	ands	r2, r5
    2476:	b26d      	sxtb	r5, r5
	bool                  dir = USB_EP_GET_DIR(trans->ep);
    2478:	0feb      	lsrs	r3, r5, #31
    247a:	4699      	mov	r9, r3
	uint8_t ep_index = (epn == 0) ? 0 : (dir ? (epn + CONF_USB_D_MAX_EP_N) : epn);
    247c:	2a00      	cmp	r2, #0
    247e:	d005      	beq.n	248c <_usb_d_dev_ep_trans+0x2c>
    2480:	2d00      	cmp	r5, #0
    2482:	db01      	blt.n	2488 <_usb_d_dev_ep_trans+0x28>
    2484:	0010      	movs	r0, r2
    2486:	e002      	b.n	248e <_usb_d_dev_ep_trans+0x2e>
    2488:	1c90      	adds	r0, r2, #2
    248a:	e000      	b.n	248e <_usb_d_dev_ep_trans+0x2e>
    248c:	0010      	movs	r0, r2
	return &dev_inst.ep[ep_index];
    248e:	0006      	movs	r6, r0
    2490:	4b61      	ldr	r3, [pc, #388]	; (2618 <_usb_d_dev_ep_trans+0x1b8>)
    2492:	3360      	adds	r3, #96	; 0x60
    2494:	0081      	lsls	r1, r0, #2
    2496:	180f      	adds	r7, r1, r0
    2498:	00bc      	lsls	r4, r7, #2
    249a:	3410      	adds	r4, #16
    249c:	191c      	adds	r4, r3, r4
    249e:	3404      	adds	r4, #4
	struct _usb_d_dev_ep *ept = _usb_d_dev_ept(epn, dir);

	uint16_t size_mask      = (ept->size == 1023) ? 1023 : (ept->size - 1);
    24a0:	00b8      	lsls	r0, r7, #2
    24a2:	181b      	adds	r3, r3, r0
    24a4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    24a6:	495d      	ldr	r1, [pc, #372]	; (261c <_usb_d_dev_ep_trans+0x1bc>)
    24a8:	428b      	cmp	r3, r1
    24aa:	d044      	beq.n	2536 <_usb_d_dev_ep_trans+0xd6>
    24ac:	1e5f      	subs	r7, r3, #1
    24ae:	b2bf      	uxth	r7, r7
	bool     size_n_aligned = (trans->size & size_mask);
    24b0:	4641      	mov	r1, r8
    24b2:	6849      	ldr	r1, [r1, #4]
    24b4:	400f      	ands	r7, r1

	bool use_cache = false;

	volatile hal_atomic_t flags;

	if (epn > CONF_USB_D_MAX_EP_N) {
    24b6:	2a02      	cmp	r2, #2
    24b8:	d900      	bls.n	24bc <_usb_d_dev_ep_trans+0x5c>
    24ba:	e0a3      	b.n	2604 <_usb_d_dev_ep_trans+0x1a4>
	 * 1. Buffer not in RAM (cache all).
	 * 2. IN/OUT with unaligned buffer (cache all).
	 * 3. OUT with unaligned packet size (cache last packet).
	 * 4. OUT size < 8 (sub-case for 3).
	 */
	if (!_usb_is_addr4dma(trans->buf, trans->size) || (!_usb_is_aligned(trans->buf))
    24bc:	4642      	mov	r2, r8
    24be:	6812      	ldr	r2, [r2, #0]
    24c0:	4857      	ldr	r0, [pc, #348]	; (2620 <_usb_d_dev_ep_trans+0x1c0>)
    24c2:	4282      	cmp	r2, r0
    24c4:	d90c      	bls.n	24e0 <_usb_d_dev_ep_trans+0x80>
    24c6:	1888      	adds	r0, r1, r2
    24c8:	9001      	str	r0, [sp, #4]
    24ca:	4856      	ldr	r0, [pc, #344]	; (2624 <_usb_d_dev_ep_trans+0x1c4>)
    24cc:	4684      	mov	ip, r0
    24ce:	9801      	ldr	r0, [sp, #4]
    24d0:	4560      	cmp	r0, ip
    24d2:	d805      	bhi.n	24e0 <_usb_d_dev_ep_trans+0x80>
    24d4:	0792      	lsls	r2, r2, #30
    24d6:	d103      	bne.n	24e0 <_usb_d_dev_ep_trans+0x80>
	    || (!dir && (trans->size < ept->size))) {
    24d8:	2d00      	cmp	r5, #0
    24da:	db2e      	blt.n	253a <_usb_d_dev_ep_trans+0xda>
    24dc:	4299      	cmp	r1, r3
    24de:	d22f      	bcs.n	2540 <_usb_d_dev_ep_trans+0xe0>
		if (!ept->cache) {
    24e0:	00b2      	lsls	r2, r6, #2
    24e2:	1992      	adds	r2, r2, r6
    24e4:	0091      	lsls	r1, r2, #2
    24e6:	4b4c      	ldr	r3, [pc, #304]	; (2618 <_usb_d_dev_ep_trans+0x1b8>)
    24e8:	185b      	adds	r3, r3, r1
    24ea:	3380      	adds	r3, #128	; 0x80
    24ec:	681b      	ldr	r3, [r3, #0]
    24ee:	2b00      	cmp	r3, #0
    24f0:	d100      	bne.n	24f4 <_usb_d_dev_ep_trans+0x94>
    24f2:	e08a      	b.n	260a <_usb_d_dev_ep_trans+0x1aa>
			return -USB_ERR_FUNC;
		}
		/* Use cache all the time. */
		use_cache = true;
    24f4:	2301      	movs	r3, #1
    24f6:	9301      	str	r3, [sp, #4]
	}
	if (!dir && size_n_aligned) {
    24f8:	2d00      	cmp	r5, #0
    24fa:	db0b      	blt.n	2514 <_usb_d_dev_ep_trans+0xb4>
    24fc:	2f00      	cmp	r7, #0
    24fe:	d009      	beq.n	2514 <_usb_d_dev_ep_trans+0xb4>
		if (!ept->cache) {
    2500:	00b2      	lsls	r2, r6, #2
    2502:	1992      	adds	r2, r2, r6
    2504:	0091      	lsls	r1, r2, #2
    2506:	4b44      	ldr	r3, [pc, #272]	; (2618 <_usb_d_dev_ep_trans+0x1b8>)
    2508:	185b      	adds	r3, r3, r1
    250a:	3380      	adds	r3, #128	; 0x80
    250c:	681b      	ldr	r3, [r3, #0]
    250e:	2b00      	cmp	r3, #0
    2510:	d100      	bne.n	2514 <_usb_d_dev_ep_trans+0xb4>
    2512:	e07d      	b.n	2610 <_usb_d_dev_ep_trans+0x1b0>
		}
		/* Set 'use_cache' on last packet. */
	}

	/* Check halt */
	if (ept->flags.bits.is_stalled) {
    2514:	00b2      	lsls	r2, r6, #2
    2516:	1992      	adds	r2, r2, r6
    2518:	0091      	lsls	r1, r2, #2
    251a:	4b3f      	ldr	r3, [pc, #252]	; (2618 <_usb_d_dev_ep_trans+0x1b8>)
    251c:	185b      	adds	r3, r3, r1
    251e:	3380      	adds	r3, #128	; 0x80
    2520:	79db      	ldrb	r3, [r3, #7]
    2522:	071b      	lsls	r3, r3, #28
    2524:	d50f      	bpl.n	2546 <_usb_d_dev_ep_trans+0xe6>
		return USB_HALTED;
    2526:	2002      	movs	r0, #2
	} else {
		_usb_d_dev_out_next(ept, false);
	}

	return ERR_NONE;
}
    2528:	b005      	add	sp, #20
    252a:	bc3c      	pop	{r2, r3, r4, r5}
    252c:	4690      	mov	r8, r2
    252e:	4699      	mov	r9, r3
    2530:	46a2      	mov	sl, r4
    2532:	46ab      	mov	fp, r5
    2534:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint16_t size_mask      = (ept->size == 1023) ? 1023 : (ept->size - 1);
    2536:	001f      	movs	r7, r3
    2538:	e7ba      	b.n	24b0 <_usb_d_dev_ep_trans+0x50>
	bool use_cache = false;
    253a:	2300      	movs	r3, #0
    253c:	9301      	str	r3, [sp, #4]
    253e:	e7db      	b.n	24f8 <_usb_d_dev_ep_trans+0x98>
    2540:	2300      	movs	r3, #0
    2542:	9301      	str	r3, [sp, #4]
    2544:	e7d8      	b.n	24f8 <_usb_d_dev_ep_trans+0x98>
	atomic_enter_critical(&flags);
    2546:	a803      	add	r0, sp, #12
    2548:	4b37      	ldr	r3, [pc, #220]	; (2628 <_usb_d_dev_ep_trans+0x1c8>)
    254a:	4798      	blx	r3
	if (_usb_d_dev_ep_is_busy(ept)) {
    254c:	00b2      	lsls	r2, r6, #2
    254e:	1992      	adds	r2, r2, r6
    2550:	0091      	lsls	r1, r2, #2
    2552:	4b31      	ldr	r3, [pc, #196]	; (2618 <_usb_d_dev_ep_trans+0x1b8>)
    2554:	185b      	adds	r3, r3, r1
    2556:	3380      	adds	r3, #128	; 0x80
    2558:	79db      	ldrb	r3, [r3, #7]
    255a:	065b      	lsls	r3, r3, #25
    255c:	d430      	bmi.n	25c0 <_usb_d_dev_ep_trans+0x160>
	ept->flags.bits.is_busy = 1;
    255e:	00b3      	lsls	r3, r6, #2
    2560:	199b      	adds	r3, r3, r6
    2562:	009a      	lsls	r2, r3, #2
    2564:	4b2c      	ldr	r3, [pc, #176]	; (2618 <_usb_d_dev_ep_trans+0x1b8>)
    2566:	469b      	mov	fp, r3
    2568:	4493      	add	fp, r2
    256a:	2380      	movs	r3, #128	; 0x80
    256c:	445b      	add	r3, fp
    256e:	469a      	mov	sl, r3
    2570:	79db      	ldrb	r3, [r3, #7]
    2572:	2240      	movs	r2, #64	; 0x40
    2574:	4313      	orrs	r3, r2
    2576:	4652      	mov	r2, sl
    2578:	71d3      	strb	r3, [r2, #7]
	atomic_leave_critical(&flags);
    257a:	a803      	add	r0, sp, #12
    257c:	4b2b      	ldr	r3, [pc, #172]	; (262c <_usb_d_dev_ep_trans+0x1cc>)
    257e:	4798      	blx	r3
	ept->trans_buf   = trans->buf;
    2580:	465b      	mov	r3, fp
    2582:	4642      	mov	r2, r8
    2584:	6812      	ldr	r2, [r2, #0]
    2586:	675a      	str	r2, [r3, #116]	; 0x74
	ept->trans_size  = trans->size;
    2588:	4642      	mov	r2, r8
    258a:	6852      	ldr	r2, [r2, #4]
    258c:	679a      	str	r2, [r3, #120]	; 0x78
	ept->trans_count = 0;
    258e:	2300      	movs	r3, #0
    2590:	465a      	mov	r2, fp
    2592:	67d3      	str	r3, [r2, #124]	; 0x7c
	ept->flags.bits.dir       = dir;
    2594:	464b      	mov	r3, r9
    2596:	01db      	lsls	r3, r3, #7
    2598:	4652      	mov	r2, sl
    259a:	79d2      	ldrb	r2, [r2, #7]
    259c:	217f      	movs	r1, #127	; 0x7f
    259e:	4011      	ands	r1, r2
	ept->flags.bits.use_cache = use_cache;
    25a0:	9a01      	ldr	r2, [sp, #4]
    25a2:	0152      	lsls	r2, r2, #5
    25a4:	430b      	orrs	r3, r1
    25a6:	2120      	movs	r1, #32
    25a8:	438b      	bics	r3, r1
    25aa:	431a      	orrs	r2, r3
    25ac:	4653      	mov	r3, sl
    25ae:	71da      	strb	r2, [r3, #7]
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    25b0:	4643      	mov	r3, r8
    25b2:	7a5b      	ldrb	r3, [r3, #9]
    25b4:	2b00      	cmp	r3, #0
    25b6:	d008      	beq.n	25ca <_usb_d_dev_ep_trans+0x16a>
    25b8:	2f00      	cmp	r7, #0
    25ba:	d01b      	beq.n	25f4 <_usb_d_dev_ep_trans+0x194>
    25bc:	2200      	movs	r2, #0
    25be:	e005      	b.n	25cc <_usb_d_dev_ep_trans+0x16c>
		atomic_leave_critical(&flags);
    25c0:	a803      	add	r0, sp, #12
    25c2:	4b1a      	ldr	r3, [pc, #104]	; (262c <_usb_d_dev_ep_trans+0x1cc>)
    25c4:	4798      	blx	r3
		return USB_BUSY;
    25c6:	2001      	movs	r0, #1
    25c8:	e7ae      	b.n	2528 <_usb_d_dev_ep_trans+0xc8>
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    25ca:	2200      	movs	r2, #0
    25cc:	00b3      	lsls	r3, r6, #2
    25ce:	199e      	adds	r6, r3, r6
    25d0:	00b1      	lsls	r1, r6, #2
    25d2:	4b11      	ldr	r3, [pc, #68]	; (2618 <_usb_d_dev_ep_trans+0x1b8>)
    25d4:	185b      	adds	r3, r3, r1
    25d6:	3380      	adds	r3, #128	; 0x80
    25d8:	0111      	lsls	r1, r2, #4
    25da:	79da      	ldrb	r2, [r3, #7]
    25dc:	2010      	movs	r0, #16
    25de:	4382      	bics	r2, r0
    25e0:	430a      	orrs	r2, r1
    25e2:	71da      	strb	r2, [r3, #7]
	if (dir) {
    25e4:	2d00      	cmp	r5, #0
    25e6:	db07      	blt.n	25f8 <_usb_d_dev_ep_trans+0x198>
		_usb_d_dev_out_next(ept, false);
    25e8:	2100      	movs	r1, #0
    25ea:	0020      	movs	r0, r4
    25ec:	4b10      	ldr	r3, [pc, #64]	; (2630 <_usb_d_dev_ep_trans+0x1d0>)
    25ee:	4798      	blx	r3
	return ERR_NONE;
    25f0:	2000      	movs	r0, #0
    25f2:	e799      	b.n	2528 <_usb_d_dev_ep_trans+0xc8>
	ept->flags.bits.need_zlp  = (trans->zlp && (!size_n_aligned));
    25f4:	2201      	movs	r2, #1
    25f6:	e7e9      	b.n	25cc <_usb_d_dev_ep_trans+0x16c>
		_usb_d_dev_in_next(ept, false);
    25f8:	2100      	movs	r1, #0
    25fa:	0020      	movs	r0, r4
    25fc:	4b0d      	ldr	r3, [pc, #52]	; (2634 <_usb_d_dev_ep_trans+0x1d4>)
    25fe:	4798      	blx	r3
	return ERR_NONE;
    2600:	2000      	movs	r0, #0
    2602:	e791      	b.n	2528 <_usb_d_dev_ep_trans+0xc8>
		return -USB_ERR_PARAM;
    2604:	2012      	movs	r0, #18
    2606:	4240      	negs	r0, r0
    2608:	e78e      	b.n	2528 <_usb_d_dev_ep_trans+0xc8>
			return -USB_ERR_FUNC;
    260a:	2013      	movs	r0, #19
    260c:	4240      	negs	r0, r0
    260e:	e78b      	b.n	2528 <_usb_d_dev_ep_trans+0xc8>
			return -USB_ERR_PARAM;
    2610:	2012      	movs	r0, #18
    2612:	4240      	negs	r0, r0
    2614:	e788      	b.n	2528 <_usb_d_dev_ep_trans+0xc8>
    2616:	46c0      	nop			; (mov r8, r8)
    2618:	20000300 	.word	0x20000300
    261c:	000003ff 	.word	0x000003ff
    2620:	1fffffff 	.word	0x1fffffff
    2624:	20007fff 	.word	0x20007fff
    2628:	00000f51 	.word	0x00000f51
    262c:	00000f5f 	.word	0x00000f5f
    2630:	00001d95 	.word	0x00001d95
    2634:	00001c09 	.word	0x00001c09

00002638 <_usb_d_dev_register_ep_callback>:
	}
}

void _usb_d_dev_register_ep_callback(const enum usb_d_dev_ep_cb_type type, const FUNC_PTR func)
{
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    2638:	2900      	cmp	r1, #0
    263a:	d008      	beq.n	264e <_usb_d_dev_register_ep_callback+0x16>
	if (type == USB_D_DEV_EP_CB_SETUP) {
    263c:	2800      	cmp	r0, #0
    263e:	d008      	beq.n	2652 <_usb_d_dev_register_ep_callback+0x1a>
		dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)f;
	} else if (type == USB_D_DEV_EP_CB_MORE) {
    2640:	2801      	cmp	r0, #1
    2642:	d009      	beq.n	2658 <_usb_d_dev_register_ep_callback+0x20>
		dev_inst.ep_callbacks.more = (_usb_d_dev_ep_cb_more_t)f;
	} else if (type == USB_D_DEV_EP_CB_DONE) {
    2644:	2802      	cmp	r0, #2
    2646:	d106      	bne.n	2656 <_usb_d_dev_register_ep_callback+0x1e>
		dev_inst.ep_callbacks.done = (_usb_d_dev_ep_cb_done_t)f;
    2648:	4b05      	ldr	r3, [pc, #20]	; (2660 <_usb_d_dev_register_ep_callback+0x28>)
    264a:	6719      	str	r1, [r3, #112]	; 0x70
	}
}
    264c:	e003      	b.n	2656 <_usb_d_dev_register_ep_callback+0x1e>
	FUNC_PTR f = (func == NULL) ? (FUNC_PTR)_dummy_func_no_return : (FUNC_PTR)func;
    264e:	4905      	ldr	r1, [pc, #20]	; (2664 <_usb_d_dev_register_ep_callback+0x2c>)
    2650:	e7f4      	b.n	263c <_usb_d_dev_register_ep_callback+0x4>
		dev_inst.ep_callbacks.setup = (_usb_d_dev_ep_cb_setup_t)f;
    2652:	4b03      	ldr	r3, [pc, #12]	; (2660 <_usb_d_dev_register_ep_callback+0x28>)
    2654:	6699      	str	r1, [r3, #104]	; 0x68
}
    2656:	4770      	bx	lr
		dev_inst.ep_callbacks.more = (_usb_d_dev_ep_cb_more_t)f;
    2658:	4b01      	ldr	r3, [pc, #4]	; (2660 <_usb_d_dev_register_ep_callback+0x28>)
    265a:	66d9      	str	r1, [r3, #108]	; 0x6c
    265c:	e7fb      	b.n	2656 <_usb_d_dev_register_ep_callback+0x1e>
    265e:	46c0      	nop			; (mov r8, r8)
    2660:	20000300 	.word	0x20000300
    2664:	000018ed 	.word	0x000018ed

00002668 <USB_Handler>:

/**
 * \brief USB interrupt handler
 */
void USB_Handler(void)
{
    2668:	b510      	push	{r4, lr}

	_usb_d_dev_handler();
    266a:	4b01      	ldr	r3, [pc, #4]	; (2670 <USB_Handler+0x8>)
    266c:	4798      	blx	r3
}
    266e:	bd10      	pop	{r4, pc}
    2670:	00001f99 	.word	0x00001f99

00002674 <__aeabi_atexit>:
    2674:	000b      	movs	r3, r1
    2676:	b510      	push	{r4, lr}
    2678:	0001      	movs	r1, r0
    267a:	0018      	movs	r0, r3
    267c:	f003 fb76 	bl	5d6c <__cxa_atexit>
    2680:	bd10      	pop	{r4, pc}

00002682 <_ZdlPvj>:
    2682:	b510      	push	{r4, lr}
    2684:	f000 f801 	bl	268a <_ZdlPv>
    2688:	bd10      	pop	{r4, pc}

0000268a <_ZdlPv>:
    268a:	b510      	push	{r4, lr}
    268c:	f003 fba6 	bl	5ddc <free>
    2690:	bd10      	pop	{r4, pc}
	...

00002694 <floor>:
    2694:	4a45      	ldr	r2, [pc, #276]	; (27ac <floor+0x118>)
    2696:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2698:	4657      	mov	r7, sl
    269a:	4692      	mov	sl, r2
    269c:	004b      	lsls	r3, r1, #1
    269e:	0d5b      	lsrs	r3, r3, #21
    26a0:	449a      	add	sl, r3
    26a2:	464e      	mov	r6, r9
    26a4:	4645      	mov	r5, r8
    26a6:	46de      	mov	lr, fp
    26a8:	4652      	mov	r2, sl
    26aa:	b5e0      	push	{r5, r6, r7, lr}
    26ac:	000c      	movs	r4, r1
    26ae:	0005      	movs	r5, r0
    26b0:	000e      	movs	r6, r1
    26b2:	4689      	mov	r9, r1
    26b4:	0007      	movs	r7, r0
    26b6:	2a13      	cmp	r2, #19
    26b8:	dc22      	bgt.n	2700 <floor+0x6c>
    26ba:	2a00      	cmp	r2, #0
    26bc:	db47      	blt.n	274e <floor+0xba>
    26be:	4652      	mov	r2, sl
    26c0:	4b3b      	ldr	r3, [pc, #236]	; (27b0 <floor+0x11c>)
    26c2:	4113      	asrs	r3, r2
    26c4:	4698      	mov	r8, r3
    26c6:	000b      	movs	r3, r1
    26c8:	4642      	mov	r2, r8
    26ca:	4013      	ands	r3, r2
    26cc:	4303      	orrs	r3, r0
    26ce:	d011      	beq.n	26f4 <floor+0x60>
    26d0:	4a38      	ldr	r2, [pc, #224]	; (27b4 <floor+0x120>)
    26d2:	4b39      	ldr	r3, [pc, #228]	; (27b8 <floor+0x124>)
    26d4:	f001 fdbc 	bl	4250 <__aeabi_dadd>
    26d8:	2200      	movs	r2, #0
    26da:	2300      	movs	r3, #0
    26dc:	f001 fd86 	bl	41ec <__aeabi_dcmpgt>
    26e0:	2800      	cmp	r0, #0
    26e2:	d005      	beq.n	26f0 <floor+0x5c>
    26e4:	2c00      	cmp	r4, #0
    26e6:	db41      	blt.n	276c <floor+0xd8>
    26e8:	464e      	mov	r6, r9
    26ea:	4643      	mov	r3, r8
    26ec:	2700      	movs	r7, #0
    26ee:	439e      	bics	r6, r3
    26f0:	0038      	movs	r0, r7
    26f2:	0031      	movs	r1, r6
    26f4:	bc3c      	pop	{r2, r3, r4, r5}
    26f6:	4690      	mov	r8, r2
    26f8:	4699      	mov	r9, r3
    26fa:	46a2      	mov	sl, r4
    26fc:	46ab      	mov	fp, r5
    26fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2700:	4652      	mov	r2, sl
    2702:	2a33      	cmp	r2, #51	; 0x33
    2704:	dd08      	ble.n	2718 <floor+0x84>
    2706:	2380      	movs	r3, #128	; 0x80
    2708:	00db      	lsls	r3, r3, #3
    270a:	459a      	cmp	sl, r3
    270c:	d1f2      	bne.n	26f4 <floor+0x60>
    270e:	0002      	movs	r2, r0
    2710:	000b      	movs	r3, r1
    2712:	f001 fd9d 	bl	4250 <__aeabi_dadd>
    2716:	e7ed      	b.n	26f4 <floor+0x60>
    2718:	4a28      	ldr	r2, [pc, #160]	; (27bc <floor+0x128>)
    271a:	4694      	mov	ip, r2
    271c:	2201      	movs	r2, #1
    271e:	4463      	add	r3, ip
    2720:	4252      	negs	r2, r2
    2722:	40da      	lsrs	r2, r3
    2724:	4693      	mov	fp, r2
    2726:	4202      	tst	r2, r0
    2728:	d0e4      	beq.n	26f4 <floor+0x60>
    272a:	4a22      	ldr	r2, [pc, #136]	; (27b4 <floor+0x120>)
    272c:	4b22      	ldr	r3, [pc, #136]	; (27b8 <floor+0x124>)
    272e:	f001 fd8f 	bl	4250 <__aeabi_dadd>
    2732:	2200      	movs	r2, #0
    2734:	2300      	movs	r3, #0
    2736:	f001 fd59 	bl	41ec <__aeabi_dcmpgt>
    273a:	2800      	cmp	r0, #0
    273c:	d0d8      	beq.n	26f0 <floor+0x5c>
    273e:	2c00      	cmp	r4, #0
    2740:	db1a      	blt.n	2778 <floor+0xe4>
    2742:	465b      	mov	r3, fp
    2744:	464e      	mov	r6, r9
    2746:	439f      	bics	r7, r3
    2748:	0038      	movs	r0, r7
    274a:	0031      	movs	r1, r6
    274c:	e7d2      	b.n	26f4 <floor+0x60>
    274e:	4a19      	ldr	r2, [pc, #100]	; (27b4 <floor+0x120>)
    2750:	4b19      	ldr	r3, [pc, #100]	; (27b8 <floor+0x124>)
    2752:	f001 fd7d 	bl	4250 <__aeabi_dadd>
    2756:	2200      	movs	r2, #0
    2758:	2300      	movs	r3, #0
    275a:	f001 fd47 	bl	41ec <__aeabi_dcmpgt>
    275e:	2800      	cmp	r0, #0
    2760:	d0c6      	beq.n	26f0 <floor+0x5c>
    2762:	2c00      	cmp	r4, #0
    2764:	db16      	blt.n	2794 <floor+0x100>
    2766:	2700      	movs	r7, #0
    2768:	2600      	movs	r6, #0
    276a:	e7c1      	b.n	26f0 <floor+0x5c>
    276c:	2380      	movs	r3, #128	; 0x80
    276e:	4652      	mov	r2, sl
    2770:	035b      	lsls	r3, r3, #13
    2772:	4113      	asrs	r3, r2
    2774:	4499      	add	r9, r3
    2776:	e7b7      	b.n	26e8 <floor+0x54>
    2778:	4653      	mov	r3, sl
    277a:	2b14      	cmp	r3, #20
    277c:	d012      	beq.n	27a4 <floor+0x110>
    277e:	2334      	movs	r3, #52	; 0x34
    2780:	4652      	mov	r2, sl
    2782:	2701      	movs	r7, #1
    2784:	1a9b      	subs	r3, r3, r2
    2786:	409f      	lsls	r7, r3
    2788:	197f      	adds	r7, r7, r5
    278a:	42af      	cmp	r7, r5
    278c:	419b      	sbcs	r3, r3
    278e:	425b      	negs	r3, r3
    2790:	4499      	add	r9, r3
    2792:	e7d6      	b.n	2742 <floor+0xae>
    2794:	0064      	lsls	r4, r4, #1
    2796:	0864      	lsrs	r4, r4, #1
    2798:	4325      	orrs	r5, r4
    279a:	2700      	movs	r7, #0
    279c:	2d00      	cmp	r5, #0
    279e:	d0a7      	beq.n	26f0 <floor+0x5c>
    27a0:	4e07      	ldr	r6, [pc, #28]	; (27c0 <floor+0x12c>)
    27a2:	e7a5      	b.n	26f0 <floor+0x5c>
    27a4:	3b13      	subs	r3, #19
    27a6:	469c      	mov	ip, r3
    27a8:	44e1      	add	r9, ip
    27aa:	e7ca      	b.n	2742 <floor+0xae>
    27ac:	fffffc01 	.word	0xfffffc01
    27b0:	000fffff 	.word	0x000fffff
    27b4:	8800759c 	.word	0x8800759c
    27b8:	7e37e43c 	.word	0x7e37e43c
    27bc:	fffffbed 	.word	0xfffffbed
    27c0:	bff00000 	.word	0xbff00000

000027c4 <log>:
    27c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    27c6:	46c6      	mov	lr, r8
    27c8:	b500      	push	{lr}
    27ca:	b08c      	sub	sp, #48	; 0x30
    27cc:	0004      	movs	r4, r0
    27ce:	000d      	movs	r5, r1
    27d0:	f000 fa2c 	bl	2c2c <__ieee754_log>
    27d4:	4b3a      	ldr	r3, [pc, #232]	; (28c0 <log+0xfc>)
    27d6:	0006      	movs	r6, r0
    27d8:	781b      	ldrb	r3, [r3, #0]
    27da:	000f      	movs	r7, r1
    27dc:	b25b      	sxtb	r3, r3
    27de:	4698      	mov	r8, r3
    27e0:	3301      	adds	r3, #1
    27e2:	d00f      	beq.n	2804 <log+0x40>
    27e4:	0022      	movs	r2, r4
    27e6:	002b      	movs	r3, r5
    27e8:	0020      	movs	r0, r4
    27ea:	0029      	movs	r1, r5
    27ec:	f003 fa0a 	bl	5c04 <__aeabi_dcmpun>
    27f0:	2800      	cmp	r0, #0
    27f2:	d107      	bne.n	2804 <log+0x40>
    27f4:	2200      	movs	r2, #0
    27f6:	2300      	movs	r3, #0
    27f8:	0020      	movs	r0, r4
    27fa:	0029      	movs	r1, r5
    27fc:	f001 fcf6 	bl	41ec <__aeabi_dcmpgt>
    2800:	2800      	cmp	r0, #0
    2802:	d005      	beq.n	2810 <log+0x4c>
    2804:	0030      	movs	r0, r6
    2806:	0039      	movs	r1, r7
    2808:	b00c      	add	sp, #48	; 0x30
    280a:	bc04      	pop	{r2}
    280c:	4690      	mov	r8, r2
    280e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2810:	4b2c      	ldr	r3, [pc, #176]	; (28c4 <log+0x100>)
    2812:	900a      	str	r0, [sp, #40]	; 0x28
    2814:	9303      	str	r3, [sp, #12]
    2816:	4643      	mov	r3, r8
    2818:	9404      	str	r4, [sp, #16]
    281a:	9505      	str	r5, [sp, #20]
    281c:	9406      	str	r4, [sp, #24]
    281e:	9507      	str	r5, [sp, #28]
    2820:	2b00      	cmp	r3, #0
    2822:	d11a      	bne.n	285a <log+0x96>
    2824:	22e0      	movs	r2, #224	; 0xe0
    2826:	4b28      	ldr	r3, [pc, #160]	; (28c8 <log+0x104>)
    2828:	0612      	lsls	r2, r2, #24
    282a:	9208      	str	r2, [sp, #32]
    282c:	9309      	str	r3, [sp, #36]	; 0x24
    282e:	0020      	movs	r0, r4
    2830:	2200      	movs	r2, #0
    2832:	2300      	movs	r3, #0
    2834:	0029      	movs	r1, r5
    2836:	f001 fcbf 	bl	41b8 <__aeabi_dcmpeq>
    283a:	2800      	cmp	r0, #0
    283c:	d038      	beq.n	28b0 <log+0xec>
    283e:	2302      	movs	r3, #2
    2840:	9302      	str	r3, [sp, #8]
    2842:	a802      	add	r0, sp, #8
    2844:	f001 fa18 	bl	3c78 <matherr>
    2848:	2800      	cmp	r0, #0
    284a:	d017      	beq.n	287c <log+0xb8>
    284c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    284e:	9301      	str	r3, [sp, #4]
    2850:	2b00      	cmp	r3, #0
    2852:	d118      	bne.n	2886 <log+0xc2>
    2854:	9e08      	ldr	r6, [sp, #32]
    2856:	9f09      	ldr	r7, [sp, #36]	; 0x24
    2858:	e7d4      	b.n	2804 <log+0x40>
    285a:	2200      	movs	r2, #0
    285c:	4b1b      	ldr	r3, [pc, #108]	; (28cc <log+0x108>)
    285e:	0020      	movs	r0, r4
    2860:	9208      	str	r2, [sp, #32]
    2862:	9309      	str	r3, [sp, #36]	; 0x24
    2864:	0029      	movs	r1, r5
    2866:	2200      	movs	r2, #0
    2868:	2300      	movs	r3, #0
    286a:	f001 fca5 	bl	41b8 <__aeabi_dcmpeq>
    286e:	2800      	cmp	r0, #0
    2870:	d00f      	beq.n	2892 <log+0xce>
    2872:	2302      	movs	r3, #2
    2874:	9302      	str	r3, [sp, #8]
    2876:	4643      	mov	r3, r8
    2878:	2b02      	cmp	r3, #2
    287a:	d1e2      	bne.n	2842 <log+0x7e>
    287c:	f003 fa84 	bl	5d88 <__errno>
    2880:	2322      	movs	r3, #34	; 0x22
    2882:	6003      	str	r3, [r0, #0]
    2884:	e7e2      	b.n	284c <log+0x88>
    2886:	f003 fa7f 	bl	5d88 <__errno>
    288a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    288c:	9301      	str	r3, [sp, #4]
    288e:	6003      	str	r3, [r0, #0]
    2890:	e7e0      	b.n	2854 <log+0x90>
    2892:	2301      	movs	r3, #1
    2894:	9302      	str	r3, [sp, #8]
    2896:	4643      	mov	r3, r8
    2898:	2b02      	cmp	r3, #2
    289a:	d10b      	bne.n	28b4 <log+0xf0>
    289c:	f003 fa74 	bl	5d88 <__errno>
    28a0:	2321      	movs	r3, #33	; 0x21
    28a2:	6003      	str	r3, [r0, #0]
    28a4:	480a      	ldr	r0, [pc, #40]	; (28d0 <log+0x10c>)
    28a6:	f001 f9e9 	bl	3c7c <nan>
    28aa:	9008      	str	r0, [sp, #32]
    28ac:	9109      	str	r1, [sp, #36]	; 0x24
    28ae:	e7cd      	b.n	284c <log+0x88>
    28b0:	2301      	movs	r3, #1
    28b2:	9302      	str	r3, [sp, #8]
    28b4:	a802      	add	r0, sp, #8
    28b6:	f001 f9df 	bl	3c78 <matherr>
    28ba:	2800      	cmp	r0, #0
    28bc:	d1f2      	bne.n	28a4 <log+0xe0>
    28be:	e7ed      	b.n	289c <log+0xd8>
    28c0:	20000004 	.word	0x20000004
    28c4:	00006030 	.word	0x00006030
    28c8:	c7efffff 	.word	0xc7efffff
    28cc:	fff00000 	.word	0xfff00000
    28d0:	00006034 	.word	0x00006034

000028d4 <pow>:
    28d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    28d6:	4657      	mov	r7, sl
    28d8:	464e      	mov	r6, r9
    28da:	46de      	mov	lr, fp
    28dc:	4645      	mov	r5, r8
    28de:	b5e0      	push	{r5, r6, r7, lr}
    28e0:	b08f      	sub	sp, #60	; 0x3c
    28e2:	001d      	movs	r5, r3
    28e4:	0006      	movs	r6, r0
    28e6:	000f      	movs	r7, r1
    28e8:	0014      	movs	r4, r2
    28ea:	f000 fba1 	bl	3030 <__ieee754_pow>
    28ee:	4bc7      	ldr	r3, [pc, #796]	; (2c0c <pow+0x338>)
    28f0:	9000      	str	r0, [sp, #0]
    28f2:	9101      	str	r1, [sp, #4]
    28f4:	469a      	mov	sl, r3
    28f6:	781b      	ldrb	r3, [r3, #0]
    28f8:	b25b      	sxtb	r3, r3
    28fa:	4699      	mov	r9, r3
    28fc:	3301      	adds	r3, #1
    28fe:	d03e      	beq.n	297e <pow+0xaa>
    2900:	0022      	movs	r2, r4
    2902:	002b      	movs	r3, r5
    2904:	0020      	movs	r0, r4
    2906:	0029      	movs	r1, r5
    2908:	f003 f97c 	bl	5c04 <__aeabi_dcmpun>
    290c:	4683      	mov	fp, r0
    290e:	2800      	cmp	r0, #0
    2910:	d135      	bne.n	297e <pow+0xaa>
    2912:	0032      	movs	r2, r6
    2914:	003b      	movs	r3, r7
    2916:	0030      	movs	r0, r6
    2918:	0039      	movs	r1, r7
    291a:	f003 f973 	bl	5c04 <__aeabi_dcmpun>
    291e:	2200      	movs	r2, #0
    2920:	9003      	str	r0, [sp, #12]
    2922:	2800      	cmp	r0, #0
    2924:	d000      	beq.n	2928 <pow+0x54>
    2926:	e0b6      	b.n	2a96 <pow+0x1c2>
    2928:	2300      	movs	r3, #0
    292a:	0030      	movs	r0, r6
    292c:	0039      	movs	r1, r7
    292e:	f001 fc43 	bl	41b8 <__aeabi_dcmpeq>
    2932:	2800      	cmp	r0, #0
    2934:	d02c      	beq.n	2990 <pow+0xbc>
    2936:	2200      	movs	r2, #0
    2938:	2300      	movs	r3, #0
    293a:	0020      	movs	r0, r4
    293c:	0029      	movs	r1, r5
    293e:	f001 fc3b 	bl	41b8 <__aeabi_dcmpeq>
    2942:	4683      	mov	fp, r0
    2944:	2800      	cmp	r0, #0
    2946:	d100      	bne.n	294a <pow+0x76>
    2948:	e077      	b.n	2a3a <pow+0x166>
    294a:	ab04      	add	r3, sp, #16
    294c:	4698      	mov	r8, r3
    294e:	2301      	movs	r3, #1
    2950:	4642      	mov	r2, r8
    2952:	9304      	str	r3, [sp, #16]
    2954:	4bae      	ldr	r3, [pc, #696]	; (2c10 <pow+0x33c>)
    2956:	6053      	str	r3, [r2, #4]
    2958:	4643      	mov	r3, r8
    295a:	9a03      	ldr	r2, [sp, #12]
    295c:	611c      	str	r4, [r3, #16]
    295e:	615d      	str	r5, [r3, #20]
    2960:	621a      	str	r2, [r3, #32]
    2962:	609e      	str	r6, [r3, #8]
    2964:	60df      	str	r7, [r3, #12]
    2966:	4642      	mov	r2, r8
    2968:	2300      	movs	r3, #0
    296a:	2400      	movs	r4, #0
    296c:	6193      	str	r3, [r2, #24]
    296e:	61d4      	str	r4, [r2, #28]
    2970:	464b      	mov	r3, r9
    2972:	2b00      	cmp	r3, #0
    2974:	d04d      	beq.n	2a12 <pow+0x13e>
    2976:	2300      	movs	r3, #0
    2978:	4ca6      	ldr	r4, [pc, #664]	; (2c14 <pow+0x340>)
    297a:	9300      	str	r3, [sp, #0]
    297c:	9401      	str	r4, [sp, #4]
    297e:	9800      	ldr	r0, [sp, #0]
    2980:	9901      	ldr	r1, [sp, #4]
    2982:	b00f      	add	sp, #60	; 0x3c
    2984:	bc3c      	pop	{r2, r3, r4, r5}
    2986:	4690      	mov	r8, r2
    2988:	4699      	mov	r9, r3
    298a:	46a2      	mov	sl, r4
    298c:	46ab      	mov	fp, r5
    298e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2990:	9800      	ldr	r0, [sp, #0]
    2992:	9901      	ldr	r1, [sp, #4]
    2994:	f001 f966 	bl	3c64 <finite>
    2998:	4681      	mov	r9, r0
    299a:	2800      	cmp	r0, #0
    299c:	d100      	bne.n	29a0 <pow+0xcc>
    299e:	e09b      	b.n	2ad8 <pow+0x204>
    29a0:	9800      	ldr	r0, [sp, #0]
    29a2:	9901      	ldr	r1, [sp, #4]
    29a4:	2200      	movs	r2, #0
    29a6:	2300      	movs	r3, #0
    29a8:	f001 fc06 	bl	41b8 <__aeabi_dcmpeq>
    29ac:	2800      	cmp	r0, #0
    29ae:	d0e6      	beq.n	297e <pow+0xaa>
    29b0:	0030      	movs	r0, r6
    29b2:	0039      	movs	r1, r7
    29b4:	f001 f956 	bl	3c64 <finite>
    29b8:	2800      	cmp	r0, #0
    29ba:	d0e0      	beq.n	297e <pow+0xaa>
    29bc:	0020      	movs	r0, r4
    29be:	0029      	movs	r1, r5
    29c0:	f001 f950 	bl	3c64 <finite>
    29c4:	2800      	cmp	r0, #0
    29c6:	d0da      	beq.n	297e <pow+0xaa>
    29c8:	ab04      	add	r3, sp, #16
    29ca:	4698      	mov	r8, r3
    29cc:	2304      	movs	r3, #4
    29ce:	4642      	mov	r2, r8
    29d0:	9304      	str	r3, [sp, #16]
    29d2:	4b8f      	ldr	r3, [pc, #572]	; (2c10 <pow+0x33c>)
    29d4:	6114      	str	r4, [r2, #16]
    29d6:	6155      	str	r5, [r2, #20]
    29d8:	6053      	str	r3, [r2, #4]
    29da:	2300      	movs	r3, #0
    29dc:	2400      	movs	r4, #0
    29de:	6213      	str	r3, [r2, #32]
    29e0:	2300      	movs	r3, #0
    29e2:	6193      	str	r3, [r2, #24]
    29e4:	61d4      	str	r4, [r2, #28]
    29e6:	4653      	mov	r3, sl
    29e8:	781b      	ldrb	r3, [r3, #0]
    29ea:	6096      	str	r6, [r2, #8]
    29ec:	60d7      	str	r7, [r2, #12]
    29ee:	b25b      	sxtb	r3, r3
    29f0:	2b02      	cmp	r3, #2
    29f2:	d004      	beq.n	29fe <pow+0x12a>
    29f4:	4640      	mov	r0, r8
    29f6:	f001 f93f 	bl	3c78 <matherr>
    29fa:	2800      	cmp	r0, #0
    29fc:	d10e      	bne.n	2a1c <pow+0x148>
    29fe:	f003 f9c3 	bl	5d88 <__errno>
    2a02:	2322      	movs	r3, #34	; 0x22
    2a04:	6003      	str	r3, [r0, #0]
    2a06:	e009      	b.n	2a1c <pow+0x148>
    2a08:	4642      	mov	r2, r8
    2a0a:	2300      	movs	r3, #0
    2a0c:	2400      	movs	r4, #0
    2a0e:	6193      	str	r3, [r2, #24]
    2a10:	61d4      	str	r4, [r2, #28]
    2a12:	4640      	mov	r0, r8
    2a14:	f001 f930 	bl	3c78 <matherr>
    2a18:	2800      	cmp	r0, #0
    2a1a:	d037      	beq.n	2a8c <pow+0x1b8>
    2a1c:	4643      	mov	r3, r8
    2a1e:	6a1b      	ldr	r3, [r3, #32]
    2a20:	2b00      	cmp	r3, #0
    2a22:	d004      	beq.n	2a2e <pow+0x15a>
    2a24:	f003 f9b0 	bl	5d88 <__errno>
    2a28:	4643      	mov	r3, r8
    2a2a:	6a1b      	ldr	r3, [r3, #32]
    2a2c:	6003      	str	r3, [r0, #0]
    2a2e:	4643      	mov	r3, r8
    2a30:	69dc      	ldr	r4, [r3, #28]
    2a32:	699b      	ldr	r3, [r3, #24]
    2a34:	9300      	str	r3, [sp, #0]
    2a36:	9401      	str	r4, [sp, #4]
    2a38:	e7a1      	b.n	297e <pow+0xaa>
    2a3a:	0020      	movs	r0, r4
    2a3c:	0029      	movs	r1, r5
    2a3e:	f001 f911 	bl	3c64 <finite>
    2a42:	2800      	cmp	r0, #0
    2a44:	d09b      	beq.n	297e <pow+0xaa>
    2a46:	2200      	movs	r2, #0
    2a48:	2300      	movs	r3, #0
    2a4a:	0020      	movs	r0, r4
    2a4c:	0029      	movs	r1, r5
    2a4e:	f001 fbb9 	bl	41c4 <__aeabi_dcmplt>
    2a52:	2800      	cmp	r0, #0
    2a54:	d100      	bne.n	2a58 <pow+0x184>
    2a56:	e792      	b.n	297e <pow+0xaa>
    2a58:	ab04      	add	r3, sp, #16
    2a5a:	4698      	mov	r8, r3
    2a5c:	2301      	movs	r3, #1
    2a5e:	4642      	mov	r2, r8
    2a60:	9304      	str	r3, [sp, #16]
    2a62:	4b6b      	ldr	r3, [pc, #428]	; (2c10 <pow+0x33c>)
    2a64:	6053      	str	r3, [r2, #4]
    2a66:	4643      	mov	r3, r8
    2a68:	465a      	mov	r2, fp
    2a6a:	609e      	str	r6, [r3, #8]
    2a6c:	60df      	str	r7, [r3, #12]
    2a6e:	621a      	str	r2, [r3, #32]
    2a70:	611c      	str	r4, [r3, #16]
    2a72:	615d      	str	r5, [r3, #20]
    2a74:	4653      	mov	r3, sl
    2a76:	781b      	ldrb	r3, [r3, #0]
    2a78:	b25b      	sxtb	r3, r3
    2a7a:	2b00      	cmp	r3, #0
    2a7c:	d0c4      	beq.n	2a08 <pow+0x134>
    2a7e:	2000      	movs	r0, #0
    2a80:	4642      	mov	r2, r8
    2a82:	4965      	ldr	r1, [pc, #404]	; (2c18 <pow+0x344>)
    2a84:	6190      	str	r0, [r2, #24]
    2a86:	61d1      	str	r1, [r2, #28]
    2a88:	2b02      	cmp	r3, #2
    2a8a:	d1c2      	bne.n	2a12 <pow+0x13e>
    2a8c:	f003 f97c 	bl	5d88 <__errno>
    2a90:	2321      	movs	r3, #33	; 0x21
    2a92:	6003      	str	r3, [r0, #0]
    2a94:	e7c2      	b.n	2a1c <pow+0x148>
    2a96:	2300      	movs	r3, #0
    2a98:	0020      	movs	r0, r4
    2a9a:	0029      	movs	r1, r5
    2a9c:	f001 fb8c 	bl	41b8 <__aeabi_dcmpeq>
    2aa0:	2800      	cmp	r0, #0
    2aa2:	d100      	bne.n	2aa6 <pow+0x1d2>
    2aa4:	e76b      	b.n	297e <pow+0xaa>
    2aa6:	ab04      	add	r3, sp, #16
    2aa8:	4698      	mov	r8, r3
    2aaa:	2301      	movs	r3, #1
    2aac:	4642      	mov	r2, r8
    2aae:	9304      	str	r3, [sp, #16]
    2ab0:	4b57      	ldr	r3, [pc, #348]	; (2c10 <pow+0x33c>)
    2ab2:	4641      	mov	r1, r8
    2ab4:	6053      	str	r3, [r2, #4]
    2ab6:	4643      	mov	r3, r8
    2ab8:	465a      	mov	r2, fp
    2aba:	621a      	str	r2, [r3, #32]
    2abc:	2200      	movs	r2, #0
    2abe:	609e      	str	r6, [r3, #8]
    2ac0:	60df      	str	r7, [r3, #12]
    2ac2:	611c      	str	r4, [r3, #16]
    2ac4:	615d      	str	r5, [r3, #20]
    2ac6:	4b53      	ldr	r3, [pc, #332]	; (2c14 <pow+0x340>)
    2ac8:	618a      	str	r2, [r1, #24]
    2aca:	61cb      	str	r3, [r1, #28]
    2acc:	9200      	str	r2, [sp, #0]
    2ace:	9301      	str	r3, [sp, #4]
    2ad0:	464b      	mov	r3, r9
    2ad2:	2b02      	cmp	r3, #2
    2ad4:	d19d      	bne.n	2a12 <pow+0x13e>
    2ad6:	e752      	b.n	297e <pow+0xaa>
    2ad8:	0030      	movs	r0, r6
    2ada:	0039      	movs	r1, r7
    2adc:	f001 f8c2 	bl	3c64 <finite>
    2ae0:	2800      	cmp	r0, #0
    2ae2:	d100      	bne.n	2ae6 <pow+0x212>
    2ae4:	e75c      	b.n	29a0 <pow+0xcc>
    2ae6:	0020      	movs	r0, r4
    2ae8:	0029      	movs	r1, r5
    2aea:	f001 f8bb 	bl	3c64 <finite>
    2aee:	2800      	cmp	r0, #0
    2af0:	d100      	bne.n	2af4 <pow+0x220>
    2af2:	e755      	b.n	29a0 <pow+0xcc>
    2af4:	9800      	ldr	r0, [sp, #0]
    2af6:	9901      	ldr	r1, [sp, #4]
    2af8:	000b      	movs	r3, r1
    2afa:	0002      	movs	r2, r0
    2afc:	f003 f882 	bl	5c04 <__aeabi_dcmpun>
    2b00:	ab04      	add	r3, sp, #16
    2b02:	4698      	mov	r8, r3
    2b04:	2800      	cmp	r0, #0
    2b06:	d161      	bne.n	2bcc <pow+0x2f8>
    2b08:	2303      	movs	r3, #3
    2b0a:	4642      	mov	r2, r8
    2b0c:	9304      	str	r3, [sp, #16]
    2b0e:	4b40      	ldr	r3, [pc, #256]	; (2c10 <pow+0x33c>)
    2b10:	6210      	str	r0, [r2, #32]
    2b12:	6053      	str	r3, [r2, #4]
    2b14:	4653      	mov	r3, sl
    2b16:	781b      	ldrb	r3, [r3, #0]
    2b18:	6096      	str	r6, [r2, #8]
    2b1a:	60d7      	str	r7, [r2, #12]
    2b1c:	b25b      	sxtb	r3, r3
    2b1e:	6114      	str	r4, [r2, #16]
    2b20:	6155      	str	r5, [r2, #20]
    2b22:	4699      	mov	r9, r3
    2b24:	2b00      	cmp	r3, #0
    2b26:	d12f      	bne.n	2b88 <pow+0x2b4>
    2b28:	22e0      	movs	r2, #224	; 0xe0
    2b2a:	4641      	mov	r1, r8
    2b2c:	4b3b      	ldr	r3, [pc, #236]	; (2c1c <pow+0x348>)
    2b2e:	0612      	lsls	r2, r2, #24
    2b30:	618a      	str	r2, [r1, #24]
    2b32:	61cb      	str	r3, [r1, #28]
    2b34:	0030      	movs	r0, r6
    2b36:	2200      	movs	r2, #0
    2b38:	2300      	movs	r3, #0
    2b3a:	0039      	movs	r1, r7
    2b3c:	f001 fb42 	bl	41c4 <__aeabi_dcmplt>
    2b40:	2800      	cmp	r0, #0
    2b42:	d100      	bne.n	2b46 <pow+0x272>
    2b44:	e756      	b.n	29f4 <pow+0x120>
    2b46:	2200      	movs	r2, #0
    2b48:	4b35      	ldr	r3, [pc, #212]	; (2c20 <pow+0x34c>)
    2b4a:	0020      	movs	r0, r4
    2b4c:	0029      	movs	r1, r5
    2b4e:	f002 fac3 	bl	50d8 <__aeabi_dmul>
    2b52:	0004      	movs	r4, r0
    2b54:	000d      	movs	r5, r1
    2b56:	f001 f897 	bl	3c88 <rint>
    2b5a:	0002      	movs	r2, r0
    2b5c:	000b      	movs	r3, r1
    2b5e:	0020      	movs	r0, r4
    2b60:	0029      	movs	r1, r5
    2b62:	f001 fb29 	bl	41b8 <__aeabi_dcmpeq>
    2b66:	2800      	cmp	r0, #0
    2b68:	d105      	bne.n	2b76 <pow+0x2a2>
    2b6a:	22e0      	movs	r2, #224	; 0xe0
    2b6c:	4b2d      	ldr	r3, [pc, #180]	; (2c24 <pow+0x350>)
    2b6e:	0612      	lsls	r2, r2, #24
    2b70:	4641      	mov	r1, r8
    2b72:	618a      	str	r2, [r1, #24]
    2b74:	61cb      	str	r3, [r1, #28]
    2b76:	4653      	mov	r3, sl
    2b78:	781b      	ldrb	r3, [r3, #0]
    2b7a:	b25b      	sxtb	r3, r3
    2b7c:	4699      	mov	r9, r3
    2b7e:	464b      	mov	r3, r9
    2b80:	2b02      	cmp	r3, #2
    2b82:	d000      	beq.n	2b86 <pow+0x2b2>
    2b84:	e736      	b.n	29f4 <pow+0x120>
    2b86:	e73a      	b.n	29fe <pow+0x12a>
    2b88:	2200      	movs	r2, #0
    2b8a:	4641      	mov	r1, r8
    2b8c:	4b26      	ldr	r3, [pc, #152]	; (2c28 <pow+0x354>)
    2b8e:	0030      	movs	r0, r6
    2b90:	618a      	str	r2, [r1, #24]
    2b92:	61cb      	str	r3, [r1, #28]
    2b94:	2200      	movs	r2, #0
    2b96:	2300      	movs	r3, #0
    2b98:	0039      	movs	r1, r7
    2b9a:	f001 fb13 	bl	41c4 <__aeabi_dcmplt>
    2b9e:	2800      	cmp	r0, #0
    2ba0:	d0ed      	beq.n	2b7e <pow+0x2aa>
    2ba2:	2200      	movs	r2, #0
    2ba4:	4b1e      	ldr	r3, [pc, #120]	; (2c20 <pow+0x34c>)
    2ba6:	0020      	movs	r0, r4
    2ba8:	0029      	movs	r1, r5
    2baa:	f002 fa95 	bl	50d8 <__aeabi_dmul>
    2bae:	0004      	movs	r4, r0
    2bb0:	000d      	movs	r5, r1
    2bb2:	f001 f869 	bl	3c88 <rint>
    2bb6:	0002      	movs	r2, r0
    2bb8:	000b      	movs	r3, r1
    2bba:	0020      	movs	r0, r4
    2bbc:	0029      	movs	r1, r5
    2bbe:	f001 fafb 	bl	41b8 <__aeabi_dcmpeq>
    2bc2:	2800      	cmp	r0, #0
    2bc4:	d1d7      	bne.n	2b76 <pow+0x2a2>
    2bc6:	2200      	movs	r2, #0
    2bc8:	4b13      	ldr	r3, [pc, #76]	; (2c18 <pow+0x344>)
    2bca:	e7d1      	b.n	2b70 <pow+0x29c>
    2bcc:	2301      	movs	r3, #1
    2bce:	4642      	mov	r2, r8
    2bd0:	9304      	str	r3, [sp, #16]
    2bd2:	4b0f      	ldr	r3, [pc, #60]	; (2c10 <pow+0x33c>)
    2bd4:	6053      	str	r3, [r2, #4]
    2bd6:	4643      	mov	r3, r8
    2bd8:	464a      	mov	r2, r9
    2bda:	611c      	str	r4, [r3, #16]
    2bdc:	615d      	str	r5, [r3, #20]
    2bde:	621a      	str	r2, [r3, #32]
    2be0:	609e      	str	r6, [r3, #8]
    2be2:	60df      	str	r7, [r3, #12]
    2be4:	2400      	movs	r4, #0
    2be6:	4653      	mov	r3, sl
    2be8:	571c      	ldrsb	r4, [r3, r4]
    2bea:	2c00      	cmp	r4, #0
    2bec:	d100      	bne.n	2bf0 <pow+0x31c>
    2bee:	e70b      	b.n	2a08 <pow+0x134>
    2bf0:	2300      	movs	r3, #0
    2bf2:	2200      	movs	r2, #0
    2bf4:	0019      	movs	r1, r3
    2bf6:	0010      	movs	r0, r2
    2bf8:	f001 fe3a 	bl	4870 <__aeabi_ddiv>
    2bfc:	4643      	mov	r3, r8
    2bfe:	6198      	str	r0, [r3, #24]
    2c00:	61d9      	str	r1, [r3, #28]
    2c02:	2c02      	cmp	r4, #2
    2c04:	d100      	bne.n	2c08 <pow+0x334>
    2c06:	e741      	b.n	2a8c <pow+0x1b8>
    2c08:	e703      	b.n	2a12 <pow+0x13e>
    2c0a:	46c0      	nop			; (mov r8, r8)
    2c0c:	20000004 	.word	0x20000004
    2c10:	00006038 	.word	0x00006038
    2c14:	3ff00000 	.word	0x3ff00000
    2c18:	fff00000 	.word	0xfff00000
    2c1c:	47efffff 	.word	0x47efffff
    2c20:	3fe00000 	.word	0x3fe00000
    2c24:	c7efffff 	.word	0xc7efffff
    2c28:	7ff00000 	.word	0x7ff00000

00002c2c <__ieee754_log>:
    2c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c2e:	46d6      	mov	lr, sl
    2c30:	464f      	mov	r7, r9
    2c32:	4646      	mov	r6, r8
    2c34:	b5c0      	push	{r6, r7, lr}
    2c36:	4ada      	ldr	r2, [pc, #872]	; (2fa0 <__ieee754_log+0x374>)
    2c38:	b088      	sub	sp, #32
    2c3a:	000b      	movs	r3, r1
    2c3c:	4291      	cmp	r1, r2
    2c3e:	dc55      	bgt.n	2cec <__ieee754_log+0xc0>
    2c40:	004a      	lsls	r2, r1, #1
    2c42:	0852      	lsrs	r2, r2, #1
    2c44:	4302      	orrs	r2, r0
    2c46:	d100      	bne.n	2c4a <__ieee754_log+0x1e>
    2c48:	e0ef      	b.n	2e2a <__ieee754_log+0x1fe>
    2c4a:	2900      	cmp	r1, #0
    2c4c:	da00      	bge.n	2c50 <__ieee754_log+0x24>
    2c4e:	e179      	b.n	2f44 <__ieee754_log+0x318>
    2c50:	4bd4      	ldr	r3, [pc, #848]	; (2fa4 <__ieee754_log+0x378>)
    2c52:	2200      	movs	r2, #0
    2c54:	f002 fa40 	bl	50d8 <__aeabi_dmul>
    2c58:	2536      	movs	r5, #54	; 0x36
    2c5a:	4cd3      	ldr	r4, [pc, #844]	; (2fa8 <__ieee754_log+0x37c>)
    2c5c:	000b      	movs	r3, r1
    2c5e:	426d      	negs	r5, r5
    2c60:	42a3      	cmp	r3, r4
    2c62:	dc47      	bgt.n	2cf4 <__ieee754_log+0xc8>
    2c64:	151a      	asrs	r2, r3, #20
    2c66:	4cd1      	ldr	r4, [pc, #836]	; (2fac <__ieee754_log+0x380>)
    2c68:	031b      	lsls	r3, r3, #12
    2c6a:	0b1b      	lsrs	r3, r3, #12
    2c6c:	4698      	mov	r8, r3
    2c6e:	46a4      	mov	ip, r4
    2c70:	2480      	movs	r4, #128	; 0x80
    2c72:	4bcf      	ldr	r3, [pc, #828]	; (2fb0 <__ieee754_log+0x384>)
    2c74:	0364      	lsls	r4, r4, #13
    2c76:	4443      	add	r3, r8
    2c78:	4023      	ands	r3, r4
    2c7a:	4cce      	ldr	r4, [pc, #824]	; (2fb4 <__ieee754_log+0x388>)
    2c7c:	4462      	add	r2, ip
    2c7e:	1952      	adds	r2, r2, r5
    2c80:	405c      	eors	r4, r3
    2c82:	4645      	mov	r5, r8
    2c84:	151b      	asrs	r3, r3, #20
    2c86:	4699      	mov	r9, r3
    2c88:	4325      	orrs	r5, r4
    2c8a:	4bca      	ldr	r3, [pc, #808]	; (2fb4 <__ieee754_log+0x388>)
    2c8c:	0029      	movs	r1, r5
    2c8e:	4491      	add	r9, r2
    2c90:	2200      	movs	r2, #0
    2c92:	f002 fca1 	bl	55d8 <__aeabi_dsub>
    2c96:	4643      	mov	r3, r8
    2c98:	3302      	adds	r3, #2
    2c9a:	031b      	lsls	r3, r3, #12
    2c9c:	0006      	movs	r6, r0
    2c9e:	000f      	movs	r7, r1
    2ca0:	0b1b      	lsrs	r3, r3, #12
    2ca2:	2200      	movs	r2, #0
    2ca4:	2b02      	cmp	r3, #2
    2ca6:	dc2f      	bgt.n	2d08 <__ieee754_log+0xdc>
    2ca8:	2300      	movs	r3, #0
    2caa:	f001 fa85 	bl	41b8 <__aeabi_dcmpeq>
    2cae:	2800      	cmp	r0, #0
    2cb0:	d100      	bne.n	2cb4 <__ieee754_log+0x88>
    2cb2:	e0c1      	b.n	2e38 <__ieee754_log+0x20c>
    2cb4:	464b      	mov	r3, r9
    2cb6:	2b00      	cmp	r3, #0
    2cb8:	d100      	bne.n	2cbc <__ieee754_log+0x90>
    2cba:	e14c      	b.n	2f56 <__ieee754_log+0x32a>
    2cbc:	4648      	mov	r0, r9
    2cbe:	f002 fff5 	bl	5cac <__aeabi_i2d>
    2cc2:	4abd      	ldr	r2, [pc, #756]	; (2fb8 <__ieee754_log+0x38c>)
    2cc4:	4bbd      	ldr	r3, [pc, #756]	; (2fbc <__ieee754_log+0x390>)
    2cc6:	0004      	movs	r4, r0
    2cc8:	000d      	movs	r5, r1
    2cca:	f002 fa05 	bl	50d8 <__aeabi_dmul>
    2cce:	4abc      	ldr	r2, [pc, #752]	; (2fc0 <__ieee754_log+0x394>)
    2cd0:	0006      	movs	r6, r0
    2cd2:	000f      	movs	r7, r1
    2cd4:	4bbb      	ldr	r3, [pc, #748]	; (2fc4 <__ieee754_log+0x398>)
    2cd6:	0020      	movs	r0, r4
    2cd8:	0029      	movs	r1, r5
    2cda:	f002 f9fd 	bl	50d8 <__aeabi_dmul>
    2cde:	0002      	movs	r2, r0
    2ce0:	000b      	movs	r3, r1
    2ce2:	0030      	movs	r0, r6
    2ce4:	0039      	movs	r1, r7
    2ce6:	f001 fab3 	bl	4250 <__aeabi_dadd>
    2cea:	e007      	b.n	2cfc <__ieee754_log+0xd0>
    2cec:	4cae      	ldr	r4, [pc, #696]	; (2fa8 <__ieee754_log+0x37c>)
    2cee:	2500      	movs	r5, #0
    2cf0:	42a3      	cmp	r3, r4
    2cf2:	ddb7      	ble.n	2c64 <__ieee754_log+0x38>
    2cf4:	0002      	movs	r2, r0
    2cf6:	000b      	movs	r3, r1
    2cf8:	f001 faaa 	bl	4250 <__aeabi_dadd>
    2cfc:	b008      	add	sp, #32
    2cfe:	bc1c      	pop	{r2, r3, r4}
    2d00:	4690      	mov	r8, r2
    2d02:	4699      	mov	r9, r3
    2d04:	46a2      	mov	sl, r4
    2d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d08:	2380      	movs	r3, #128	; 0x80
    2d0a:	05db      	lsls	r3, r3, #23
    2d0c:	f001 faa0 	bl	4250 <__aeabi_dadd>
    2d10:	0002      	movs	r2, r0
    2d12:	000b      	movs	r3, r1
    2d14:	0030      	movs	r0, r6
    2d16:	0039      	movs	r1, r7
    2d18:	f001 fdaa 	bl	4870 <__aeabi_ddiv>
    2d1c:	0004      	movs	r4, r0
    2d1e:	4648      	mov	r0, r9
    2d20:	000d      	movs	r5, r1
    2d22:	f002 ffc3 	bl	5cac <__aeabi_i2d>
    2d26:	0022      	movs	r2, r4
    2d28:	9002      	str	r0, [sp, #8]
    2d2a:	9103      	str	r1, [sp, #12]
    2d2c:	002b      	movs	r3, r5
    2d2e:	0020      	movs	r0, r4
    2d30:	0029      	movs	r1, r5
    2d32:	9404      	str	r4, [sp, #16]
    2d34:	9505      	str	r5, [sp, #20]
    2d36:	f002 f9cf 	bl	50d8 <__aeabi_dmul>
    2d3a:	0004      	movs	r4, r0
    2d3c:	000d      	movs	r5, r1
    2d3e:	4ba2      	ldr	r3, [pc, #648]	; (2fc8 <__ieee754_log+0x39c>)
    2d40:	0002      	movs	r2, r0
    2d42:	4443      	add	r3, r8
    2d44:	469a      	mov	sl, r3
    2d46:	000b      	movs	r3, r1
    2d48:	9400      	str	r4, [sp, #0]
    2d4a:	9501      	str	r5, [sp, #4]
    2d4c:	f002 f9c4 	bl	50d8 <__aeabi_dmul>
    2d50:	0004      	movs	r4, r0
    2d52:	000d      	movs	r5, r1
    2d54:	4a9d      	ldr	r2, [pc, #628]	; (2fcc <__ieee754_log+0x3a0>)
    2d56:	4b9e      	ldr	r3, [pc, #632]	; (2fd0 <__ieee754_log+0x3a4>)
    2d58:	f002 f9be 	bl	50d8 <__aeabi_dmul>
    2d5c:	4a9d      	ldr	r2, [pc, #628]	; (2fd4 <__ieee754_log+0x3a8>)
    2d5e:	4b9e      	ldr	r3, [pc, #632]	; (2fd8 <__ieee754_log+0x3ac>)
    2d60:	f001 fa76 	bl	4250 <__aeabi_dadd>
    2d64:	0022      	movs	r2, r4
    2d66:	002b      	movs	r3, r5
    2d68:	f002 f9b6 	bl	50d8 <__aeabi_dmul>
    2d6c:	4a9b      	ldr	r2, [pc, #620]	; (2fdc <__ieee754_log+0x3b0>)
    2d6e:	4b9c      	ldr	r3, [pc, #624]	; (2fe0 <__ieee754_log+0x3b4>)
    2d70:	f001 fa6e 	bl	4250 <__aeabi_dadd>
    2d74:	0022      	movs	r2, r4
    2d76:	002b      	movs	r3, r5
    2d78:	f002 f9ae 	bl	50d8 <__aeabi_dmul>
    2d7c:	4a99      	ldr	r2, [pc, #612]	; (2fe4 <__ieee754_log+0x3b8>)
    2d7e:	4b9a      	ldr	r3, [pc, #616]	; (2fe8 <__ieee754_log+0x3bc>)
    2d80:	f001 fa66 	bl	4250 <__aeabi_dadd>
    2d84:	9a00      	ldr	r2, [sp, #0]
    2d86:	9b01      	ldr	r3, [sp, #4]
    2d88:	f002 f9a6 	bl	50d8 <__aeabi_dmul>
    2d8c:	4a97      	ldr	r2, [pc, #604]	; (2fec <__ieee754_log+0x3c0>)
    2d8e:	9000      	str	r0, [sp, #0]
    2d90:	9101      	str	r1, [sp, #4]
    2d92:	4b97      	ldr	r3, [pc, #604]	; (2ff0 <__ieee754_log+0x3c4>)
    2d94:	0020      	movs	r0, r4
    2d96:	0029      	movs	r1, r5
    2d98:	f002 f99e 	bl	50d8 <__aeabi_dmul>
    2d9c:	4a95      	ldr	r2, [pc, #596]	; (2ff4 <__ieee754_log+0x3c8>)
    2d9e:	4b96      	ldr	r3, [pc, #600]	; (2ff8 <__ieee754_log+0x3cc>)
    2da0:	f001 fa56 	bl	4250 <__aeabi_dadd>
    2da4:	0022      	movs	r2, r4
    2da6:	002b      	movs	r3, r5
    2da8:	f002 f996 	bl	50d8 <__aeabi_dmul>
    2dac:	4a93      	ldr	r2, [pc, #588]	; (2ffc <__ieee754_log+0x3d0>)
    2dae:	4b94      	ldr	r3, [pc, #592]	; (3000 <__ieee754_log+0x3d4>)
    2db0:	f001 fa4e 	bl	4250 <__aeabi_dadd>
    2db4:	0022      	movs	r2, r4
    2db6:	002b      	movs	r3, r5
    2db8:	f002 f98e 	bl	50d8 <__aeabi_dmul>
    2dbc:	000b      	movs	r3, r1
    2dbe:	0002      	movs	r2, r0
    2dc0:	9800      	ldr	r0, [sp, #0]
    2dc2:	9901      	ldr	r1, [sp, #4]
    2dc4:	f001 fa44 	bl	4250 <__aeabi_dadd>
    2dc8:	000d      	movs	r5, r1
    2dca:	4641      	mov	r1, r8
    2dcc:	4b8d      	ldr	r3, [pc, #564]	; (3004 <__ieee754_log+0x3d8>)
    2dce:	0004      	movs	r4, r0
    2dd0:	1a5b      	subs	r3, r3, r1
    2dd2:	4651      	mov	r1, sl
    2dd4:	430b      	orrs	r3, r1
    2dd6:	2b00      	cmp	r3, #0
    2dd8:	dd54      	ble.n	2e84 <__ieee754_log+0x258>
    2dda:	2200      	movs	r2, #0
    2ddc:	4b8a      	ldr	r3, [pc, #552]	; (3008 <__ieee754_log+0x3dc>)
    2dde:	0030      	movs	r0, r6
    2de0:	0039      	movs	r1, r7
    2de2:	f002 f979 	bl	50d8 <__aeabi_dmul>
    2de6:	0032      	movs	r2, r6
    2de8:	003b      	movs	r3, r7
    2dea:	f002 f975 	bl	50d8 <__aeabi_dmul>
    2dee:	464b      	mov	r3, r9
    2df0:	000a      	movs	r2, r1
    2df2:	0001      	movs	r1, r0
    2df4:	9100      	str	r1, [sp, #0]
    2df6:	9201      	str	r2, [sp, #4]
    2df8:	2b00      	cmp	r3, #0
    2dfa:	d172      	bne.n	2ee2 <__ieee754_log+0x2b6>
    2dfc:	0013      	movs	r3, r2
    2dfe:	0029      	movs	r1, r5
    2e00:	0002      	movs	r2, r0
    2e02:	0020      	movs	r0, r4
    2e04:	f001 fa24 	bl	4250 <__aeabi_dadd>
    2e08:	9a04      	ldr	r2, [sp, #16]
    2e0a:	9b05      	ldr	r3, [sp, #20]
    2e0c:	f002 f964 	bl	50d8 <__aeabi_dmul>
    2e10:	0002      	movs	r2, r0
    2e12:	000b      	movs	r3, r1
    2e14:	9800      	ldr	r0, [sp, #0]
    2e16:	9901      	ldr	r1, [sp, #4]
    2e18:	f002 fbde 	bl	55d8 <__aeabi_dsub>
    2e1c:	0002      	movs	r2, r0
    2e1e:	000b      	movs	r3, r1
    2e20:	0030      	movs	r0, r6
    2e22:	0039      	movs	r1, r7
    2e24:	f002 fbd8 	bl	55d8 <__aeabi_dsub>
    2e28:	e768      	b.n	2cfc <__ieee754_log+0xd0>
    2e2a:	2200      	movs	r2, #0
    2e2c:	2300      	movs	r3, #0
    2e2e:	2000      	movs	r0, #0
    2e30:	4976      	ldr	r1, [pc, #472]	; (300c <__ieee754_log+0x3e0>)
    2e32:	f001 fd1d 	bl	4870 <__aeabi_ddiv>
    2e36:	e761      	b.n	2cfc <__ieee754_log+0xd0>
    2e38:	4a75      	ldr	r2, [pc, #468]	; (3010 <__ieee754_log+0x3e4>)
    2e3a:	4b76      	ldr	r3, [pc, #472]	; (3014 <__ieee754_log+0x3e8>)
    2e3c:	0030      	movs	r0, r6
    2e3e:	0039      	movs	r1, r7
    2e40:	f002 f94a 	bl	50d8 <__aeabi_dmul>
    2e44:	0002      	movs	r2, r0
    2e46:	000b      	movs	r3, r1
    2e48:	2000      	movs	r0, #0
    2e4a:	496f      	ldr	r1, [pc, #444]	; (3008 <__ieee754_log+0x3dc>)
    2e4c:	f002 fbc4 	bl	55d8 <__aeabi_dsub>
    2e50:	0032      	movs	r2, r6
    2e52:	0004      	movs	r4, r0
    2e54:	000d      	movs	r5, r1
    2e56:	003b      	movs	r3, r7
    2e58:	0030      	movs	r0, r6
    2e5a:	0039      	movs	r1, r7
    2e5c:	f002 f93c 	bl	50d8 <__aeabi_dmul>
    2e60:	000b      	movs	r3, r1
    2e62:	0002      	movs	r2, r0
    2e64:	0029      	movs	r1, r5
    2e66:	0020      	movs	r0, r4
    2e68:	f002 f936 	bl	50d8 <__aeabi_dmul>
    2e6c:	464b      	mov	r3, r9
    2e6e:	0004      	movs	r4, r0
    2e70:	000d      	movs	r5, r1
    2e72:	2b00      	cmp	r3, #0
    2e74:	d172      	bne.n	2f5c <__ieee754_log+0x330>
    2e76:	0002      	movs	r2, r0
    2e78:	000b      	movs	r3, r1
    2e7a:	0030      	movs	r0, r6
    2e7c:	0039      	movs	r1, r7
    2e7e:	f002 fbab 	bl	55d8 <__aeabi_dsub>
    2e82:	e73b      	b.n	2cfc <__ieee754_log+0xd0>
    2e84:	464b      	mov	r3, r9
    2e86:	2b00      	cmp	r3, #0
    2e88:	d100      	bne.n	2e8c <__ieee754_log+0x260>
    2e8a:	e0c5      	b.n	3018 <__ieee754_log+0x3ec>
    2e8c:	9802      	ldr	r0, [sp, #8]
    2e8e:	9903      	ldr	r1, [sp, #12]
    2e90:	4a49      	ldr	r2, [pc, #292]	; (2fb8 <__ieee754_log+0x38c>)
    2e92:	4b4a      	ldr	r3, [pc, #296]	; (2fbc <__ieee754_log+0x390>)
    2e94:	f002 f920 	bl	50d8 <__aeabi_dmul>
    2e98:	0022      	movs	r2, r4
    2e9a:	9000      	str	r0, [sp, #0]
    2e9c:	9101      	str	r1, [sp, #4]
    2e9e:	002b      	movs	r3, r5
    2ea0:	0030      	movs	r0, r6
    2ea2:	0039      	movs	r1, r7
    2ea4:	f002 fb98 	bl	55d8 <__aeabi_dsub>
    2ea8:	9a04      	ldr	r2, [sp, #16]
    2eaa:	9b05      	ldr	r3, [sp, #20]
    2eac:	f002 f914 	bl	50d8 <__aeabi_dmul>
    2eb0:	4a43      	ldr	r2, [pc, #268]	; (2fc0 <__ieee754_log+0x394>)
    2eb2:	0004      	movs	r4, r0
    2eb4:	000d      	movs	r5, r1
    2eb6:	9802      	ldr	r0, [sp, #8]
    2eb8:	9903      	ldr	r1, [sp, #12]
    2eba:	4b42      	ldr	r3, [pc, #264]	; (2fc4 <__ieee754_log+0x398>)
    2ebc:	f002 f90c 	bl	50d8 <__aeabi_dmul>
    2ec0:	0002      	movs	r2, r0
    2ec2:	000b      	movs	r3, r1
    2ec4:	0020      	movs	r0, r4
    2ec6:	0029      	movs	r1, r5
    2ec8:	f002 fb86 	bl	55d8 <__aeabi_dsub>
    2ecc:	0032      	movs	r2, r6
    2ece:	003b      	movs	r3, r7
    2ed0:	f002 fb82 	bl	55d8 <__aeabi_dsub>
    2ed4:	0002      	movs	r2, r0
    2ed6:	000b      	movs	r3, r1
    2ed8:	9800      	ldr	r0, [sp, #0]
    2eda:	9901      	ldr	r1, [sp, #4]
    2edc:	f002 fb7c 	bl	55d8 <__aeabi_dsub>
    2ee0:	e70c      	b.n	2cfc <__ieee754_log+0xd0>
    2ee2:	4a35      	ldr	r2, [pc, #212]	; (2fb8 <__ieee754_log+0x38c>)
    2ee4:	4b35      	ldr	r3, [pc, #212]	; (2fbc <__ieee754_log+0x390>)
    2ee6:	9802      	ldr	r0, [sp, #8]
    2ee8:	9903      	ldr	r1, [sp, #12]
    2eea:	f002 f8f5 	bl	50d8 <__aeabi_dmul>
    2eee:	9a00      	ldr	r2, [sp, #0]
    2ef0:	9b01      	ldr	r3, [sp, #4]
    2ef2:	9006      	str	r0, [sp, #24]
    2ef4:	9107      	str	r1, [sp, #28]
    2ef6:	0020      	movs	r0, r4
    2ef8:	0029      	movs	r1, r5
    2efa:	f001 f9a9 	bl	4250 <__aeabi_dadd>
    2efe:	9a04      	ldr	r2, [sp, #16]
    2f00:	9b05      	ldr	r3, [sp, #20]
    2f02:	f002 f8e9 	bl	50d8 <__aeabi_dmul>
    2f06:	4a2e      	ldr	r2, [pc, #184]	; (2fc0 <__ieee754_log+0x394>)
    2f08:	0004      	movs	r4, r0
    2f0a:	000d      	movs	r5, r1
    2f0c:	9802      	ldr	r0, [sp, #8]
    2f0e:	9903      	ldr	r1, [sp, #12]
    2f10:	4b2c      	ldr	r3, [pc, #176]	; (2fc4 <__ieee754_log+0x398>)
    2f12:	f002 f8e1 	bl	50d8 <__aeabi_dmul>
    2f16:	0002      	movs	r2, r0
    2f18:	000b      	movs	r3, r1
    2f1a:	0020      	movs	r0, r4
    2f1c:	0029      	movs	r1, r5
    2f1e:	f001 f997 	bl	4250 <__aeabi_dadd>
    2f22:	0002      	movs	r2, r0
    2f24:	000b      	movs	r3, r1
    2f26:	9800      	ldr	r0, [sp, #0]
    2f28:	9901      	ldr	r1, [sp, #4]
    2f2a:	f002 fb55 	bl	55d8 <__aeabi_dsub>
    2f2e:	0032      	movs	r2, r6
    2f30:	003b      	movs	r3, r7
    2f32:	f002 fb51 	bl	55d8 <__aeabi_dsub>
    2f36:	0002      	movs	r2, r0
    2f38:	000b      	movs	r3, r1
    2f3a:	9806      	ldr	r0, [sp, #24]
    2f3c:	9907      	ldr	r1, [sp, #28]
    2f3e:	f002 fb4b 	bl	55d8 <__aeabi_dsub>
    2f42:	e6db      	b.n	2cfc <__ieee754_log+0xd0>
    2f44:	0002      	movs	r2, r0
    2f46:	000b      	movs	r3, r1
    2f48:	f002 fb46 	bl	55d8 <__aeabi_dsub>
    2f4c:	2200      	movs	r2, #0
    2f4e:	2300      	movs	r3, #0
    2f50:	f001 fc8e 	bl	4870 <__aeabi_ddiv>
    2f54:	e6d2      	b.n	2cfc <__ieee754_log+0xd0>
    2f56:	2000      	movs	r0, #0
    2f58:	2100      	movs	r1, #0
    2f5a:	e6cf      	b.n	2cfc <__ieee754_log+0xd0>
    2f5c:	4648      	mov	r0, r9
    2f5e:	f002 fea5 	bl	5cac <__aeabi_i2d>
    2f62:	4a15      	ldr	r2, [pc, #84]	; (2fb8 <__ieee754_log+0x38c>)
    2f64:	4b15      	ldr	r3, [pc, #84]	; (2fbc <__ieee754_log+0x390>)
    2f66:	9000      	str	r0, [sp, #0]
    2f68:	9101      	str	r1, [sp, #4]
    2f6a:	f002 f8b5 	bl	50d8 <__aeabi_dmul>
    2f6e:	4a14      	ldr	r2, [pc, #80]	; (2fc0 <__ieee754_log+0x394>)
    2f70:	9002      	str	r0, [sp, #8]
    2f72:	9103      	str	r1, [sp, #12]
    2f74:	9800      	ldr	r0, [sp, #0]
    2f76:	9901      	ldr	r1, [sp, #4]
    2f78:	4b12      	ldr	r3, [pc, #72]	; (2fc4 <__ieee754_log+0x398>)
    2f7a:	f002 f8ad 	bl	50d8 <__aeabi_dmul>
    2f7e:	0002      	movs	r2, r0
    2f80:	000b      	movs	r3, r1
    2f82:	0020      	movs	r0, r4
    2f84:	0029      	movs	r1, r5
    2f86:	f002 fb27 	bl	55d8 <__aeabi_dsub>
    2f8a:	0032      	movs	r2, r6
    2f8c:	003b      	movs	r3, r7
    2f8e:	f002 fb23 	bl	55d8 <__aeabi_dsub>
    2f92:	0002      	movs	r2, r0
    2f94:	000b      	movs	r3, r1
    2f96:	9802      	ldr	r0, [sp, #8]
    2f98:	9903      	ldr	r1, [sp, #12]
    2f9a:	f002 fb1d 	bl	55d8 <__aeabi_dsub>
    2f9e:	e6ad      	b.n	2cfc <__ieee754_log+0xd0>
    2fa0:	000fffff 	.word	0x000fffff
    2fa4:	43500000 	.word	0x43500000
    2fa8:	7fefffff 	.word	0x7fefffff
    2fac:	fffffc01 	.word	0xfffffc01
    2fb0:	00095f64 	.word	0x00095f64
    2fb4:	3ff00000 	.word	0x3ff00000
    2fb8:	fee00000 	.word	0xfee00000
    2fbc:	3fe62e42 	.word	0x3fe62e42
    2fc0:	35793c76 	.word	0x35793c76
    2fc4:	3dea39ef 	.word	0x3dea39ef
    2fc8:	fff9eb86 	.word	0xfff9eb86
    2fcc:	df3e5244 	.word	0xdf3e5244
    2fd0:	3fc2f112 	.word	0x3fc2f112
    2fd4:	96cb03de 	.word	0x96cb03de
    2fd8:	3fc74664 	.word	0x3fc74664
    2fdc:	94229359 	.word	0x94229359
    2fe0:	3fd24924 	.word	0x3fd24924
    2fe4:	55555593 	.word	0x55555593
    2fe8:	3fe55555 	.word	0x3fe55555
    2fec:	d078c69f 	.word	0xd078c69f
    2ff0:	3fc39a09 	.word	0x3fc39a09
    2ff4:	1d8e78af 	.word	0x1d8e78af
    2ff8:	3fcc71c5 	.word	0x3fcc71c5
    2ffc:	9997fa04 	.word	0x9997fa04
    3000:	3fd99999 	.word	0x3fd99999
    3004:	0006b851 	.word	0x0006b851
    3008:	3fe00000 	.word	0x3fe00000
    300c:	c3500000 	.word	0xc3500000
    3010:	55555555 	.word	0x55555555
    3014:	3fd55555 	.word	0x3fd55555
    3018:	0022      	movs	r2, r4
    301a:	002b      	movs	r3, r5
    301c:	0030      	movs	r0, r6
    301e:	0039      	movs	r1, r7
    3020:	f002 fada 	bl	55d8 <__aeabi_dsub>
    3024:	9a04      	ldr	r2, [sp, #16]
    3026:	9b05      	ldr	r3, [sp, #20]
    3028:	f002 f856 	bl	50d8 <__aeabi_dmul>
    302c:	e6f6      	b.n	2e1c <__ieee754_log+0x1f0>
    302e:	46c0      	nop			; (mov r8, r8)

00003030 <__ieee754_pow>:
    3030:	b5f0      	push	{r4, r5, r6, r7, lr}
    3032:	4657      	mov	r7, sl
    3034:	464e      	mov	r6, r9
    3036:	4645      	mov	r5, r8
    3038:	46de      	mov	lr, fp
    303a:	001c      	movs	r4, r3
    303c:	0013      	movs	r3, r2
    303e:	b5e0      	push	{r5, r6, r7, lr}
    3040:	0065      	lsls	r5, r4, #1
    3042:	b091      	sub	sp, #68	; 0x44
    3044:	086d      	lsrs	r5, r5, #1
    3046:	9300      	str	r3, [sp, #0]
    3048:	9401      	str	r4, [sp, #4]
    304a:	0007      	movs	r7, r0
    304c:	000e      	movs	r6, r1
    304e:	4680      	mov	r8, r0
    3050:	4689      	mov	r9, r1
    3052:	46a2      	mov	sl, r4
    3054:	432b      	orrs	r3, r5
    3056:	d031      	beq.n	30bc <__ieee754_pow+0x8c>
    3058:	4b67      	ldr	r3, [pc, #412]	; (31f8 <__ieee754_pow+0x1c8>)
    305a:	0074      	lsls	r4, r6, #1
    305c:	0864      	lsrs	r4, r4, #1
    305e:	429c      	cmp	r4, r3
    3060:	dc27      	bgt.n	30b2 <__ieee754_pow+0x82>
    3062:	d024      	beq.n	30ae <__ieee754_pow+0x7e>
    3064:	429d      	cmp	r5, r3
    3066:	dc24      	bgt.n	30b2 <__ieee754_pow+0x82>
    3068:	4b63      	ldr	r3, [pc, #396]	; (31f8 <__ieee754_pow+0x1c8>)
    306a:	429d      	cmp	r5, r3
    306c:	d100      	bne.n	3070 <__ieee754_pow+0x40>
    306e:	e081      	b.n	3174 <__ieee754_pow+0x144>
    3070:	2300      	movs	r3, #0
    3072:	469b      	mov	fp, r3
    3074:	464b      	mov	r3, r9
    3076:	2b00      	cmp	r3, #0
    3078:	da00      	bge.n	307c <__ieee754_pow+0x4c>
    307a:	e07f      	b.n	317c <__ieee754_pow+0x14c>
    307c:	2a00      	cmp	r2, #0
    307e:	d12c      	bne.n	30da <__ieee754_pow+0xaa>
    3080:	4b5d      	ldr	r3, [pc, #372]	; (31f8 <__ieee754_pow+0x1c8>)
    3082:	429d      	cmp	r5, r3
    3084:	d100      	bne.n	3088 <__ieee754_pow+0x58>
    3086:	e097      	b.n	31b8 <__ieee754_pow+0x188>
    3088:	4b5c      	ldr	r3, [pc, #368]	; (31fc <__ieee754_pow+0x1cc>)
    308a:	429d      	cmp	r5, r3
    308c:	d066      	beq.n	315c <__ieee754_pow+0x12c>
    308e:	2380      	movs	r3, #128	; 0x80
    3090:	05db      	lsls	r3, r3, #23
    3092:	459a      	cmp	sl, r3
    3094:	d100      	bne.n	3098 <__ieee754_pow+0x68>
    3096:	e3b9      	b.n	380c <__ieee754_pow+0x7dc>
    3098:	4b59      	ldr	r3, [pc, #356]	; (3200 <__ieee754_pow+0x1d0>)
    309a:	459a      	cmp	sl, r3
    309c:	d11d      	bne.n	30da <__ieee754_pow+0xaa>
    309e:	464b      	mov	r3, r9
    30a0:	2b00      	cmp	r3, #0
    30a2:	db1a      	blt.n	30da <__ieee754_pow+0xaa>
    30a4:	0038      	movs	r0, r7
    30a6:	0031      	movs	r1, r6
    30a8:	f000 fcf8 	bl	3a9c <__ieee754_sqrt>
    30ac:	e008      	b.n	30c0 <__ieee754_pow+0x90>
    30ae:	2800      	cmp	r0, #0
    30b0:	d00d      	beq.n	30ce <__ieee754_pow+0x9e>
    30b2:	4b54      	ldr	r3, [pc, #336]	; (3204 <__ieee754_pow+0x1d4>)
    30b4:	469c      	mov	ip, r3
    30b6:	4464      	add	r4, ip
    30b8:	4327      	orrs	r7, r4
    30ba:	d10a      	bne.n	30d2 <__ieee754_pow+0xa2>
    30bc:	2000      	movs	r0, #0
    30be:	494f      	ldr	r1, [pc, #316]	; (31fc <__ieee754_pow+0x1cc>)
    30c0:	b011      	add	sp, #68	; 0x44
    30c2:	bc3c      	pop	{r2, r3, r4, r5}
    30c4:	4690      	mov	r8, r2
    30c6:	4699      	mov	r9, r3
    30c8:	46a2      	mov	sl, r4
    30ca:	46ab      	mov	fp, r5
    30cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    30ce:	42a5      	cmp	r5, r4
    30d0:	ddca      	ble.n	3068 <__ieee754_pow+0x38>
    30d2:	484d      	ldr	r0, [pc, #308]	; (3208 <__ieee754_pow+0x1d8>)
    30d4:	f000 fdd2 	bl	3c7c <nan>
    30d8:	e7f2      	b.n	30c0 <__ieee754_pow+0x90>
    30da:	0038      	movs	r0, r7
    30dc:	0031      	movs	r1, r6
    30de:	f000 fdbd 	bl	3c5c <fabs>
    30e2:	4643      	mov	r3, r8
    30e4:	2b00      	cmp	r3, #0
    30e6:	d11d      	bne.n	3124 <__ieee754_pow+0xf4>
    30e8:	2c00      	cmp	r4, #0
    30ea:	d004      	beq.n	30f6 <__ieee754_pow+0xc6>
    30ec:	4a43      	ldr	r2, [pc, #268]	; (31fc <__ieee754_pow+0x1cc>)
    30ee:	00b3      	lsls	r3, r6, #2
    30f0:	089b      	lsrs	r3, r3, #2
    30f2:	4293      	cmp	r3, r2
    30f4:	d116      	bne.n	3124 <__ieee754_pow+0xf4>
    30f6:	4653      	mov	r3, sl
    30f8:	2b00      	cmp	r3, #0
    30fa:	da00      	bge.n	30fe <__ieee754_pow+0xce>
    30fc:	e3c5      	b.n	388a <__ieee754_pow+0x85a>
    30fe:	464b      	mov	r3, r9
    3100:	2b00      	cmp	r3, #0
    3102:	dadd      	bge.n	30c0 <__ieee754_pow+0x90>
    3104:	4b3f      	ldr	r3, [pc, #252]	; (3204 <__ieee754_pow+0x1d4>)
    3106:	469c      	mov	ip, r3
    3108:	465b      	mov	r3, fp
    310a:	4464      	add	r4, ip
    310c:	431c      	orrs	r4, r3
    310e:	d101      	bne.n	3114 <__ieee754_pow+0xe4>
    3110:	f000 fc53 	bl	39ba <__ieee754_pow+0x98a>
    3114:	465b      	mov	r3, fp
    3116:	2b01      	cmp	r3, #1
    3118:	d1d2      	bne.n	30c0 <__ieee754_pow+0x90>
    311a:	2480      	movs	r4, #128	; 0x80
    311c:	0624      	lsls	r4, r4, #24
    311e:	190b      	adds	r3, r1, r4
    3120:	0019      	movs	r1, r3
    3122:	e7cd      	b.n	30c0 <__ieee754_pow+0x90>
    3124:	0ff3      	lsrs	r3, r6, #31
    3126:	3b01      	subs	r3, #1
    3128:	4698      	mov	r8, r3
    312a:	465b      	mov	r3, fp
    312c:	4642      	mov	r2, r8
    312e:	4313      	orrs	r3, r2
    3130:	d057      	beq.n	31e2 <__ieee754_pow+0x1b2>
    3132:	4b36      	ldr	r3, [pc, #216]	; (320c <__ieee754_pow+0x1dc>)
    3134:	429d      	cmp	r5, r3
    3136:	dd77      	ble.n	3228 <__ieee754_pow+0x1f8>
    3138:	4b35      	ldr	r3, [pc, #212]	; (3210 <__ieee754_pow+0x1e0>)
    313a:	429d      	cmp	r5, r3
    313c:	dc00      	bgt.n	3140 <__ieee754_pow+0x110>
    313e:	e3b1      	b.n	38a4 <__ieee754_pow+0x874>
    3140:	4b34      	ldr	r3, [pc, #208]	; (3214 <__ieee754_pow+0x1e4>)
    3142:	429c      	cmp	r4, r3
    3144:	dc00      	bgt.n	3148 <__ieee754_pow+0x118>
    3146:	e3a8      	b.n	389a <__ieee754_pow+0x86a>
    3148:	4653      	mov	r3, sl
    314a:	2b00      	cmp	r3, #0
    314c:	dd43      	ble.n	31d6 <__ieee754_pow+0x1a6>
    314e:	4a32      	ldr	r2, [pc, #200]	; (3218 <__ieee754_pow+0x1e8>)
    3150:	4b32      	ldr	r3, [pc, #200]	; (321c <__ieee754_pow+0x1ec>)
    3152:	0010      	movs	r0, r2
    3154:	0019      	movs	r1, r3
    3156:	f001 ffbf 	bl	50d8 <__aeabi_dmul>
    315a:	e7b1      	b.n	30c0 <__ieee754_pow+0x90>
    315c:	4653      	mov	r3, sl
    315e:	0038      	movs	r0, r7
    3160:	0031      	movs	r1, r6
    3162:	2b00      	cmp	r3, #0
    3164:	daac      	bge.n	30c0 <__ieee754_pow+0x90>
    3166:	003a      	movs	r2, r7
    3168:	0033      	movs	r3, r6
    316a:	2000      	movs	r0, #0
    316c:	4923      	ldr	r1, [pc, #140]	; (31fc <__ieee754_pow+0x1cc>)
    316e:	f001 fb7f 	bl	4870 <__aeabi_ddiv>
    3172:	e7a5      	b.n	30c0 <__ieee754_pow+0x90>
    3174:	2a00      	cmp	r2, #0
    3176:	d100      	bne.n	317a <__ieee754_pow+0x14a>
    3178:	e77a      	b.n	3070 <__ieee754_pow+0x40>
    317a:	e79a      	b.n	30b2 <__ieee754_pow+0x82>
    317c:	4b28      	ldr	r3, [pc, #160]	; (3220 <__ieee754_pow+0x1f0>)
    317e:	429d      	cmp	r5, r3
    3180:	dc2c      	bgt.n	31dc <__ieee754_pow+0x1ac>
    3182:	4b24      	ldr	r3, [pc, #144]	; (3214 <__ieee754_pow+0x1e4>)
    3184:	429d      	cmp	r5, r3
    3186:	dc00      	bgt.n	318a <__ieee754_pow+0x15a>
    3188:	e778      	b.n	307c <__ieee754_pow+0x4c>
    318a:	4926      	ldr	r1, [pc, #152]	; (3224 <__ieee754_pow+0x1f4>)
    318c:	152b      	asrs	r3, r5, #20
    318e:	468c      	mov	ip, r1
    3190:	4463      	add	r3, ip
    3192:	2b14      	cmp	r3, #20
    3194:	dc01      	bgt.n	319a <__ieee754_pow+0x16a>
    3196:	f000 fbf3 	bl	3980 <__ieee754_pow+0x950>
    319a:	2134      	movs	r1, #52	; 0x34
    319c:	1acb      	subs	r3, r1, r3
    319e:	9900      	ldr	r1, [sp, #0]
    31a0:	40d9      	lsrs	r1, r3
    31a2:	0008      	movs	r0, r1
    31a4:	4098      	lsls	r0, r3
    31a6:	4282      	cmp	r2, r0
    31a8:	d000      	beq.n	31ac <__ieee754_pow+0x17c>
    31aa:	e767      	b.n	307c <__ieee754_pow+0x4c>
    31ac:	2301      	movs	r3, #1
    31ae:	4019      	ands	r1, r3
    31b0:	3301      	adds	r3, #1
    31b2:	1a5b      	subs	r3, r3, r1
    31b4:	469b      	mov	fp, r3
    31b6:	e761      	b.n	307c <__ieee754_pow+0x4c>
    31b8:	4b12      	ldr	r3, [pc, #72]	; (3204 <__ieee754_pow+0x1d4>)
    31ba:	18e3      	adds	r3, r4, r3
    31bc:	431f      	orrs	r7, r3
    31be:	d100      	bne.n	31c2 <__ieee754_pow+0x192>
    31c0:	e77c      	b.n	30bc <__ieee754_pow+0x8c>
    31c2:	4b14      	ldr	r3, [pc, #80]	; (3214 <__ieee754_pow+0x1e4>)
    31c4:	429c      	cmp	r4, r3
    31c6:	dc00      	bgt.n	31ca <__ieee754_pow+0x19a>
    31c8:	e327      	b.n	381a <__ieee754_pow+0x7ea>
    31ca:	9800      	ldr	r0, [sp, #0]
    31cc:	9901      	ldr	r1, [sp, #4]
    31ce:	4653      	mov	r3, sl
    31d0:	2b00      	cmp	r3, #0
    31d2:	db00      	blt.n	31d6 <__ieee754_pow+0x1a6>
    31d4:	e774      	b.n	30c0 <__ieee754_pow+0x90>
    31d6:	2000      	movs	r0, #0
    31d8:	2100      	movs	r1, #0
    31da:	e771      	b.n	30c0 <__ieee754_pow+0x90>
    31dc:	2302      	movs	r3, #2
    31de:	469b      	mov	fp, r3
    31e0:	e74c      	b.n	307c <__ieee754_pow+0x4c>
    31e2:	003a      	movs	r2, r7
    31e4:	0033      	movs	r3, r6
    31e6:	0038      	movs	r0, r7
    31e8:	0031      	movs	r1, r6
    31ea:	f002 f9f5 	bl	55d8 <__aeabi_dsub>
    31ee:	0002      	movs	r2, r0
    31f0:	000b      	movs	r3, r1
    31f2:	f001 fb3d 	bl	4870 <__aeabi_ddiv>
    31f6:	e763      	b.n	30c0 <__ieee754_pow+0x90>
    31f8:	7ff00000 	.word	0x7ff00000
    31fc:	3ff00000 	.word	0x3ff00000
    3200:	3fe00000 	.word	0x3fe00000
    3204:	c0100000 	.word	0xc0100000
    3208:	00006034 	.word	0x00006034
    320c:	41e00000 	.word	0x41e00000
    3210:	43f00000 	.word	0x43f00000
    3214:	3fefffff 	.word	0x3fefffff
    3218:	8800759c 	.word	0x8800759c
    321c:	7e37e43c 	.word	0x7e37e43c
    3220:	433fffff 	.word	0x433fffff
    3224:	fffffc01 	.word	0xfffffc01
    3228:	4be9      	ldr	r3, [pc, #932]	; (35d0 <__ieee754_pow+0x5a0>)
    322a:	2200      	movs	r2, #0
    322c:	429c      	cmp	r4, r3
    322e:	dc06      	bgt.n	323e <__ieee754_pow+0x20e>
    3230:	2200      	movs	r2, #0
    3232:	4be8      	ldr	r3, [pc, #928]	; (35d4 <__ieee754_pow+0x5a4>)
    3234:	f001 ff50 	bl	50d8 <__aeabi_dmul>
    3238:	2235      	movs	r2, #53	; 0x35
    323a:	000c      	movs	r4, r1
    323c:	4252      	negs	r2, r2
    323e:	4de6      	ldr	r5, [pc, #920]	; (35d8 <__ieee754_pow+0x5a8>)
    3240:	1523      	asrs	r3, r4, #20
    3242:	46ac      	mov	ip, r5
    3244:	4463      	add	r3, ip
    3246:	4699      	mov	r9, r3
    3248:	0324      	lsls	r4, r4, #12
    324a:	4de4      	ldr	r5, [pc, #912]	; (35dc <__ieee754_pow+0x5ac>)
    324c:	4be4      	ldr	r3, [pc, #912]	; (35e0 <__ieee754_pow+0x5b0>)
    324e:	0b24      	lsrs	r4, r4, #12
    3250:	4491      	add	r9, r2
    3252:	4325      	orrs	r5, r4
    3254:	429c      	cmp	r4, r3
    3256:	dd09      	ble.n	326c <__ieee754_pow+0x23c>
    3258:	4be2      	ldr	r3, [pc, #904]	; (35e4 <__ieee754_pow+0x5b4>)
    325a:	429c      	cmp	r4, r3
    325c:	dc00      	bgt.n	3260 <__ieee754_pow+0x230>
    325e:	e3b6      	b.n	39ce <__ieee754_pow+0x99e>
    3260:	2301      	movs	r3, #1
    3262:	469c      	mov	ip, r3
    3264:	4be0      	ldr	r3, [pc, #896]	; (35e8 <__ieee754_pow+0x5b8>)
    3266:	44e1      	add	r9, ip
    3268:	469c      	mov	ip, r3
    326a:	4465      	add	r5, ip
    326c:	2300      	movs	r3, #0
    326e:	2400      	movs	r4, #0
    3270:	2200      	movs	r2, #0
    3272:	9308      	str	r3, [sp, #32]
    3274:	9409      	str	r4, [sp, #36]	; 0x24
    3276:	930c      	str	r3, [sp, #48]	; 0x30
    3278:	940d      	str	r4, [sp, #52]	; 0x34
    327a:	2400      	movs	r4, #0
    327c:	4bd7      	ldr	r3, [pc, #860]	; (35dc <__ieee754_pow+0x5ac>)
    327e:	9206      	str	r2, [sp, #24]
    3280:	9307      	str	r3, [sp, #28]
    3282:	9a06      	ldr	r2, [sp, #24]
    3284:	9b07      	ldr	r3, [sp, #28]
    3286:	0029      	movs	r1, r5
    3288:	900a      	str	r0, [sp, #40]	; 0x28
    328a:	910b      	str	r1, [sp, #44]	; 0x2c
    328c:	f002 f9a4 	bl	55d8 <__aeabi_dsub>
    3290:	9a06      	ldr	r2, [sp, #24]
    3292:	9b07      	ldr	r3, [sp, #28]
    3294:	0006      	movs	r6, r0
    3296:	000f      	movs	r7, r1
    3298:	980a      	ldr	r0, [sp, #40]	; 0x28
    329a:	990b      	ldr	r1, [sp, #44]	; 0x2c
    329c:	f000 ffd8 	bl	4250 <__aeabi_dadd>
    32a0:	0002      	movs	r2, r0
    32a2:	000b      	movs	r3, r1
    32a4:	2000      	movs	r0, #0
    32a6:	49cd      	ldr	r1, [pc, #820]	; (35dc <__ieee754_pow+0x5ac>)
    32a8:	f001 fae2 	bl	4870 <__aeabi_ddiv>
    32ac:	000a      	movs	r2, r1
    32ae:	0001      	movs	r1, r0
    32b0:	0013      	movs	r3, r2
    32b2:	910e      	str	r1, [sp, #56]	; 0x38
    32b4:	920f      	str	r2, [sp, #60]	; 0x3c
    32b6:	0002      	movs	r2, r0
    32b8:	0039      	movs	r1, r7
    32ba:	0030      	movs	r0, r6
    32bc:	f001 ff0c 	bl	50d8 <__aeabi_dmul>
    32c0:	000a      	movs	r2, r1
    32c2:	0001      	movs	r1, r0
    32c4:	2080      	movs	r0, #128	; 0x80
    32c6:	9104      	str	r1, [sp, #16]
    32c8:	9205      	str	r2, [sp, #20]
    32ca:	0013      	movs	r3, r2
    32cc:	2200      	movs	r2, #0
    32ce:	1069      	asrs	r1, r5, #1
    32d0:	2580      	movs	r5, #128	; 0x80
    32d2:	0300      	lsls	r0, r0, #12
    32d4:	4684      	mov	ip, r0
    32d6:	9202      	str	r2, [sp, #8]
    32d8:	9303      	str	r3, [sp, #12]
    32da:	2200      	movs	r2, #0
    32dc:	05ad      	lsls	r5, r5, #22
    32de:	430d      	orrs	r5, r1
    32e0:	4465      	add	r5, ip
    32e2:	192b      	adds	r3, r5, r4
    32e4:	9802      	ldr	r0, [sp, #8]
    32e6:	9903      	ldr	r1, [sp, #12]
    32e8:	0014      	movs	r4, r2
    32ea:	001d      	movs	r5, r3
    32ec:	f001 fef4 	bl	50d8 <__aeabi_dmul>
    32f0:	0002      	movs	r2, r0
    32f2:	000b      	movs	r3, r1
    32f4:	0030      	movs	r0, r6
    32f6:	0039      	movs	r1, r7
    32f8:	f002 f96e 	bl	55d8 <__aeabi_dsub>
    32fc:	9a06      	ldr	r2, [sp, #24]
    32fe:	9b07      	ldr	r3, [sp, #28]
    3300:	0006      	movs	r6, r0
    3302:	000f      	movs	r7, r1
    3304:	0020      	movs	r0, r4
    3306:	0029      	movs	r1, r5
    3308:	f002 f966 	bl	55d8 <__aeabi_dsub>
    330c:	0002      	movs	r2, r0
    330e:	000b      	movs	r3, r1
    3310:	980a      	ldr	r0, [sp, #40]	; 0x28
    3312:	990b      	ldr	r1, [sp, #44]	; 0x2c
    3314:	f002 f960 	bl	55d8 <__aeabi_dsub>
    3318:	9a02      	ldr	r2, [sp, #8]
    331a:	9b03      	ldr	r3, [sp, #12]
    331c:	f001 fedc 	bl	50d8 <__aeabi_dmul>
    3320:	0002      	movs	r2, r0
    3322:	000b      	movs	r3, r1
    3324:	0030      	movs	r0, r6
    3326:	0039      	movs	r1, r7
    3328:	f002 f956 	bl	55d8 <__aeabi_dsub>
    332c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    332e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3330:	f001 fed2 	bl	50d8 <__aeabi_dmul>
    3334:	9d04      	ldr	r5, [sp, #16]
    3336:	9e05      	ldr	r6, [sp, #20]
    3338:	9006      	str	r0, [sp, #24]
    333a:	9107      	str	r1, [sp, #28]
    333c:	002a      	movs	r2, r5
    333e:	0033      	movs	r3, r6
    3340:	0028      	movs	r0, r5
    3342:	0031      	movs	r1, r6
    3344:	f001 fec8 	bl	50d8 <__aeabi_dmul>
    3348:	0006      	movs	r6, r0
    334a:	000f      	movs	r7, r1
    334c:	4aa7      	ldr	r2, [pc, #668]	; (35ec <__ieee754_pow+0x5bc>)
    334e:	4ba8      	ldr	r3, [pc, #672]	; (35f0 <__ieee754_pow+0x5c0>)
    3350:	f001 fec2 	bl	50d8 <__aeabi_dmul>
    3354:	4aa7      	ldr	r2, [pc, #668]	; (35f4 <__ieee754_pow+0x5c4>)
    3356:	4ba8      	ldr	r3, [pc, #672]	; (35f8 <__ieee754_pow+0x5c8>)
    3358:	f000 ff7a 	bl	4250 <__aeabi_dadd>
    335c:	0032      	movs	r2, r6
    335e:	003b      	movs	r3, r7
    3360:	f001 feba 	bl	50d8 <__aeabi_dmul>
    3364:	4aa5      	ldr	r2, [pc, #660]	; (35fc <__ieee754_pow+0x5cc>)
    3366:	4ba6      	ldr	r3, [pc, #664]	; (3600 <__ieee754_pow+0x5d0>)
    3368:	f000 ff72 	bl	4250 <__aeabi_dadd>
    336c:	0032      	movs	r2, r6
    336e:	003b      	movs	r3, r7
    3370:	f001 feb2 	bl	50d8 <__aeabi_dmul>
    3374:	4aa3      	ldr	r2, [pc, #652]	; (3604 <__ieee754_pow+0x5d4>)
    3376:	4ba4      	ldr	r3, [pc, #656]	; (3608 <__ieee754_pow+0x5d8>)
    3378:	f000 ff6a 	bl	4250 <__aeabi_dadd>
    337c:	0032      	movs	r2, r6
    337e:	003b      	movs	r3, r7
    3380:	f001 feaa 	bl	50d8 <__aeabi_dmul>
    3384:	4aa1      	ldr	r2, [pc, #644]	; (360c <__ieee754_pow+0x5dc>)
    3386:	4ba2      	ldr	r3, [pc, #648]	; (3610 <__ieee754_pow+0x5e0>)
    3388:	f000 ff62 	bl	4250 <__aeabi_dadd>
    338c:	0032      	movs	r2, r6
    338e:	003b      	movs	r3, r7
    3390:	f001 fea2 	bl	50d8 <__aeabi_dmul>
    3394:	4a9f      	ldr	r2, [pc, #636]	; (3614 <__ieee754_pow+0x5e4>)
    3396:	4ba0      	ldr	r3, [pc, #640]	; (3618 <__ieee754_pow+0x5e8>)
    3398:	f000 ff5a 	bl	4250 <__aeabi_dadd>
    339c:	0032      	movs	r2, r6
    339e:	0004      	movs	r4, r0
    33a0:	000d      	movs	r5, r1
    33a2:	003b      	movs	r3, r7
    33a4:	0030      	movs	r0, r6
    33a6:	0039      	movs	r1, r7
    33a8:	f001 fe96 	bl	50d8 <__aeabi_dmul>
    33ac:	0002      	movs	r2, r0
    33ae:	000b      	movs	r3, r1
    33b0:	0020      	movs	r0, r4
    33b2:	0029      	movs	r1, r5
    33b4:	f001 fe90 	bl	50d8 <__aeabi_dmul>
    33b8:	9e02      	ldr	r6, [sp, #8]
    33ba:	9f03      	ldr	r7, [sp, #12]
    33bc:	0004      	movs	r4, r0
    33be:	000d      	movs	r5, r1
    33c0:	9804      	ldr	r0, [sp, #16]
    33c2:	9905      	ldr	r1, [sp, #20]
    33c4:	0032      	movs	r2, r6
    33c6:	003b      	movs	r3, r7
    33c8:	f000 ff42 	bl	4250 <__aeabi_dadd>
    33cc:	9a06      	ldr	r2, [sp, #24]
    33ce:	9b07      	ldr	r3, [sp, #28]
    33d0:	f001 fe82 	bl	50d8 <__aeabi_dmul>
    33d4:	0022      	movs	r2, r4
    33d6:	002b      	movs	r3, r5
    33d8:	f000 ff3a 	bl	4250 <__aeabi_dadd>
    33dc:	0032      	movs	r2, r6
    33de:	900a      	str	r0, [sp, #40]	; 0x28
    33e0:	910b      	str	r1, [sp, #44]	; 0x2c
    33e2:	003b      	movs	r3, r7
    33e4:	0030      	movs	r0, r6
    33e6:	0039      	movs	r1, r7
    33e8:	9602      	str	r6, [sp, #8]
    33ea:	9703      	str	r7, [sp, #12]
    33ec:	f001 fe74 	bl	50d8 <__aeabi_dmul>
    33f0:	2200      	movs	r2, #0
    33f2:	4b8a      	ldr	r3, [pc, #552]	; (361c <__ieee754_pow+0x5ec>)
    33f4:	0004      	movs	r4, r0
    33f6:	000d      	movs	r5, r1
    33f8:	f000 ff2a 	bl	4250 <__aeabi_dadd>
    33fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    33fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3400:	f000 ff26 	bl	4250 <__aeabi_dadd>
    3404:	2600      	movs	r6, #0
    3406:	000f      	movs	r7, r1
    3408:	0032      	movs	r2, r6
    340a:	000b      	movs	r3, r1
    340c:	9802      	ldr	r0, [sp, #8]
    340e:	9903      	ldr	r1, [sp, #12]
    3410:	f001 fe62 	bl	50d8 <__aeabi_dmul>
    3414:	2200      	movs	r2, #0
    3416:	9002      	str	r0, [sp, #8]
    3418:	9103      	str	r1, [sp, #12]
    341a:	4b80      	ldr	r3, [pc, #512]	; (361c <__ieee754_pow+0x5ec>)
    341c:	0030      	movs	r0, r6
    341e:	0039      	movs	r1, r7
    3420:	f002 f8da 	bl	55d8 <__aeabi_dsub>
    3424:	0022      	movs	r2, r4
    3426:	002b      	movs	r3, r5
    3428:	f002 f8d6 	bl	55d8 <__aeabi_dsub>
    342c:	0002      	movs	r2, r0
    342e:	000b      	movs	r3, r1
    3430:	980a      	ldr	r0, [sp, #40]	; 0x28
    3432:	990b      	ldr	r1, [sp, #44]	; 0x2c
    3434:	f002 f8d0 	bl	55d8 <__aeabi_dsub>
    3438:	9a04      	ldr	r2, [sp, #16]
    343a:	9b05      	ldr	r3, [sp, #20]
    343c:	f001 fe4c 	bl	50d8 <__aeabi_dmul>
    3440:	0032      	movs	r2, r6
    3442:	0004      	movs	r4, r0
    3444:	000d      	movs	r5, r1
    3446:	9806      	ldr	r0, [sp, #24]
    3448:	9907      	ldr	r1, [sp, #28]
    344a:	003b      	movs	r3, r7
    344c:	f001 fe44 	bl	50d8 <__aeabi_dmul>
    3450:	0002      	movs	r2, r0
    3452:	000b      	movs	r3, r1
    3454:	0020      	movs	r0, r4
    3456:	0029      	movs	r1, r5
    3458:	f000 fefa 	bl	4250 <__aeabi_dadd>
    345c:	0004      	movs	r4, r0
    345e:	000d      	movs	r5, r1
    3460:	0002      	movs	r2, r0
    3462:	000b      	movs	r3, r1
    3464:	9802      	ldr	r0, [sp, #8]
    3466:	9903      	ldr	r1, [sp, #12]
    3468:	f000 fef2 	bl	4250 <__aeabi_dadd>
    346c:	2600      	movs	r6, #0
    346e:	22e0      	movs	r2, #224	; 0xe0
    3470:	4b6b      	ldr	r3, [pc, #428]	; (3620 <__ieee754_pow+0x5f0>)
    3472:	0612      	lsls	r2, r2, #24
    3474:	0030      	movs	r0, r6
    3476:	000f      	movs	r7, r1
    3478:	f001 fe2e 	bl	50d8 <__aeabi_dmul>
    347c:	9a02      	ldr	r2, [sp, #8]
    347e:	9b03      	ldr	r3, [sp, #12]
    3480:	9004      	str	r0, [sp, #16]
    3482:	9105      	str	r1, [sp, #20]
    3484:	0030      	movs	r0, r6
    3486:	0039      	movs	r1, r7
    3488:	f002 f8a6 	bl	55d8 <__aeabi_dsub>
    348c:	0002      	movs	r2, r0
    348e:	000b      	movs	r3, r1
    3490:	0020      	movs	r0, r4
    3492:	0029      	movs	r1, r5
    3494:	f002 f8a0 	bl	55d8 <__aeabi_dsub>
    3498:	4a62      	ldr	r2, [pc, #392]	; (3624 <__ieee754_pow+0x5f4>)
    349a:	4b61      	ldr	r3, [pc, #388]	; (3620 <__ieee754_pow+0x5f0>)
    349c:	f001 fe1c 	bl	50d8 <__aeabi_dmul>
    34a0:	4a61      	ldr	r2, [pc, #388]	; (3628 <__ieee754_pow+0x5f8>)
    34a2:	0004      	movs	r4, r0
    34a4:	000d      	movs	r5, r1
    34a6:	4b61      	ldr	r3, [pc, #388]	; (362c <__ieee754_pow+0x5fc>)
    34a8:	0030      	movs	r0, r6
    34aa:	0039      	movs	r1, r7
    34ac:	f001 fe14 	bl	50d8 <__aeabi_dmul>
    34b0:	0002      	movs	r2, r0
    34b2:	000b      	movs	r3, r1
    34b4:	0020      	movs	r0, r4
    34b6:	0029      	movs	r1, r5
    34b8:	f000 feca 	bl	4250 <__aeabi_dadd>
    34bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    34be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    34c0:	f000 fec6 	bl	4250 <__aeabi_dadd>
    34c4:	0006      	movs	r6, r0
    34c6:	4648      	mov	r0, r9
    34c8:	000f      	movs	r7, r1
    34ca:	f002 fbef 	bl	5cac <__aeabi_i2d>
    34ce:	0004      	movs	r4, r0
    34d0:	000d      	movs	r5, r1
    34d2:	9804      	ldr	r0, [sp, #16]
    34d4:	9905      	ldr	r1, [sp, #20]
    34d6:	0032      	movs	r2, r6
    34d8:	003b      	movs	r3, r7
    34da:	f000 feb9 	bl	4250 <__aeabi_dadd>
    34de:	9a08      	ldr	r2, [sp, #32]
    34e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    34e2:	f000 feb5 	bl	4250 <__aeabi_dadd>
    34e6:	0022      	movs	r2, r4
    34e8:	002b      	movs	r3, r5
    34ea:	f000 feb1 	bl	4250 <__aeabi_dadd>
    34ee:	2000      	movs	r0, #0
    34f0:	0022      	movs	r2, r4
    34f2:	002b      	movs	r3, r5
    34f4:	9002      	str	r0, [sp, #8]
    34f6:	9103      	str	r1, [sp, #12]
    34f8:	f002 f86e 	bl	55d8 <__aeabi_dsub>
    34fc:	9a08      	ldr	r2, [sp, #32]
    34fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3500:	f002 f86a 	bl	55d8 <__aeabi_dsub>
    3504:	9a04      	ldr	r2, [sp, #16]
    3506:	9b05      	ldr	r3, [sp, #20]
    3508:	f002 f866 	bl	55d8 <__aeabi_dsub>
    350c:	0002      	movs	r2, r0
    350e:	000b      	movs	r3, r1
    3510:	0030      	movs	r0, r6
    3512:	0039      	movs	r1, r7
    3514:	f002 f860 	bl	55d8 <__aeabi_dsub>
    3518:	9004      	str	r0, [sp, #16]
    351a:	9105      	str	r1, [sp, #20]
    351c:	465b      	mov	r3, fp
    351e:	4642      	mov	r2, r8
    3520:	3b01      	subs	r3, #1
    3522:	4313      	orrs	r3, r2
    3524:	d100      	bne.n	3528 <__ieee754_pow+0x4f8>
    3526:	e1ab      	b.n	3880 <__ieee754_pow+0x850>
    3528:	2300      	movs	r3, #0
    352a:	4c2c      	ldr	r4, [pc, #176]	; (35dc <__ieee754_pow+0x5ac>)
    352c:	9306      	str	r3, [sp, #24]
    352e:	9407      	str	r4, [sp, #28]
    3530:	9800      	ldr	r0, [sp, #0]
    3532:	9901      	ldr	r1, [sp, #4]
    3534:	2600      	movs	r6, #0
    3536:	000b      	movs	r3, r1
    3538:	0032      	movs	r2, r6
    353a:	000f      	movs	r7, r1
    353c:	f002 f84c 	bl	55d8 <__aeabi_dsub>
    3540:	9a02      	ldr	r2, [sp, #8]
    3542:	9b03      	ldr	r3, [sp, #12]
    3544:	f001 fdc8 	bl	50d8 <__aeabi_dmul>
    3548:	9a00      	ldr	r2, [sp, #0]
    354a:	9b01      	ldr	r3, [sp, #4]
    354c:	0004      	movs	r4, r0
    354e:	000d      	movs	r5, r1
    3550:	9804      	ldr	r0, [sp, #16]
    3552:	9905      	ldr	r1, [sp, #20]
    3554:	f001 fdc0 	bl	50d8 <__aeabi_dmul>
    3558:	0002      	movs	r2, r0
    355a:	000b      	movs	r3, r1
    355c:	0020      	movs	r0, r4
    355e:	0029      	movs	r1, r5
    3560:	f000 fe76 	bl	4250 <__aeabi_dadd>
    3564:	0004      	movs	r4, r0
    3566:	000d      	movs	r5, r1
    3568:	9802      	ldr	r0, [sp, #8]
    356a:	9903      	ldr	r1, [sp, #12]
    356c:	0032      	movs	r2, r6
    356e:	003b      	movs	r3, r7
    3570:	9400      	str	r4, [sp, #0]
    3572:	9501      	str	r5, [sp, #4]
    3574:	f001 fdb0 	bl	50d8 <__aeabi_dmul>
    3578:	0002      	movs	r2, r0
    357a:	000b      	movs	r3, r1
    357c:	0006      	movs	r6, r0
    357e:	000f      	movs	r7, r1
    3580:	0020      	movs	r0, r4
    3582:	0029      	movs	r1, r5
    3584:	f000 fe64 	bl	4250 <__aeabi_dadd>
    3588:	4b29      	ldr	r3, [pc, #164]	; (3630 <__ieee754_pow+0x600>)
    358a:	0004      	movs	r4, r0
    358c:	000d      	movs	r5, r1
    358e:	0002      	movs	r2, r0
    3590:	468b      	mov	fp, r1
    3592:	4299      	cmp	r1, r3
    3594:	dc00      	bgt.n	3598 <__ieee754_pow+0x568>
    3596:	e14f      	b.n	3838 <__ieee754_pow+0x808>
    3598:	4b26      	ldr	r3, [pc, #152]	; (3634 <__ieee754_pow+0x604>)
    359a:	18cb      	adds	r3, r1, r3
    359c:	4303      	orrs	r3, r0
    359e:	d000      	beq.n	35a2 <__ieee754_pow+0x572>
    35a0:	e1e2      	b.n	3968 <__ieee754_pow+0x938>
    35a2:	9800      	ldr	r0, [sp, #0]
    35a4:	9901      	ldr	r1, [sp, #4]
    35a6:	4a24      	ldr	r2, [pc, #144]	; (3638 <__ieee754_pow+0x608>)
    35a8:	4b24      	ldr	r3, [pc, #144]	; (363c <__ieee754_pow+0x60c>)
    35aa:	f000 fe51 	bl	4250 <__aeabi_dadd>
    35ae:	0032      	movs	r2, r6
    35b0:	9002      	str	r0, [sp, #8]
    35b2:	9103      	str	r1, [sp, #12]
    35b4:	003b      	movs	r3, r7
    35b6:	0020      	movs	r0, r4
    35b8:	0029      	movs	r1, r5
    35ba:	f002 f80d 	bl	55d8 <__aeabi_dsub>
    35be:	0002      	movs	r2, r0
    35c0:	000b      	movs	r3, r1
    35c2:	9802      	ldr	r0, [sp, #8]
    35c4:	9903      	ldr	r1, [sp, #12]
    35c6:	f000 fe11 	bl	41ec <__aeabi_dcmpgt>
    35ca:	46aa      	mov	sl, r5
    35cc:	e038      	b.n	3640 <__ieee754_pow+0x610>
    35ce:	46c0      	nop			; (mov r8, r8)
    35d0:	000fffff 	.word	0x000fffff
    35d4:	43400000 	.word	0x43400000
    35d8:	fffffc01 	.word	0xfffffc01
    35dc:	3ff00000 	.word	0x3ff00000
    35e0:	0003988e 	.word	0x0003988e
    35e4:	000bb679 	.word	0x000bb679
    35e8:	fff00000 	.word	0xfff00000
    35ec:	4a454eef 	.word	0x4a454eef
    35f0:	3fca7e28 	.word	0x3fca7e28
    35f4:	93c9db65 	.word	0x93c9db65
    35f8:	3fcd864a 	.word	0x3fcd864a
    35fc:	a91d4101 	.word	0xa91d4101
    3600:	3fd17460 	.word	0x3fd17460
    3604:	518f264d 	.word	0x518f264d
    3608:	3fd55555 	.word	0x3fd55555
    360c:	db6fabff 	.word	0xdb6fabff
    3610:	3fdb6db6 	.word	0x3fdb6db6
    3614:	33333303 	.word	0x33333303
    3618:	3fe33333 	.word	0x3fe33333
    361c:	40080000 	.word	0x40080000
    3620:	3feec709 	.word	0x3feec709
    3624:	dc3a03fd 	.word	0xdc3a03fd
    3628:	145b01f5 	.word	0x145b01f5
    362c:	be3e2fe0 	.word	0xbe3e2fe0
    3630:	408fffff 	.word	0x408fffff
    3634:	bf700000 	.word	0xbf700000
    3638:	652b82fe 	.word	0x652b82fe
    363c:	3c971547 	.word	0x3c971547
    3640:	2800      	cmp	r0, #0
    3642:	d000      	beq.n	3646 <__ieee754_pow+0x616>
    3644:	e190      	b.n	3968 <__ieee754_pow+0x938>
    3646:	4aec      	ldr	r2, [pc, #944]	; (39f8 <__ieee754_pow+0x9c8>)
    3648:	4653      	mov	r3, sl
    364a:	4694      	mov	ip, r2
    364c:	2280      	movs	r2, #128	; 0x80
    364e:	0352      	lsls	r2, r2, #13
    3650:	0011      	movs	r1, r2
    3652:	151b      	asrs	r3, r3, #20
    3654:	4463      	add	r3, ip
    3656:	4119      	asrs	r1, r3
    3658:	000b      	movs	r3, r1
    365a:	4690      	mov	r8, r2
    365c:	4ae7      	ldr	r2, [pc, #924]	; (39fc <__ieee754_pow+0x9cc>)
    365e:	445b      	add	r3, fp
    3660:	4694      	mov	ip, r2
    3662:	005c      	lsls	r4, r3, #1
    3664:	0d64      	lsrs	r4, r4, #21
    3666:	4de6      	ldr	r5, [pc, #920]	; (3a00 <__ieee754_pow+0x9d0>)
    3668:	4464      	add	r4, ip
    366a:	4125      	asrs	r5, r4
    366c:	001a      	movs	r2, r3
    366e:	43aa      	bics	r2, r5
    3670:	0011      	movs	r1, r2
    3672:	4642      	mov	r2, r8
    3674:	031b      	lsls	r3, r3, #12
    3676:	0b1b      	lsrs	r3, r3, #12
    3678:	4313      	orrs	r3, r2
    367a:	2214      	movs	r2, #20
    367c:	1b14      	subs	r4, r2, r4
    367e:	4123      	asrs	r3, r4
    3680:	4699      	mov	r9, r3
    3682:	465b      	mov	r3, fp
    3684:	2000      	movs	r0, #0
    3686:	2b00      	cmp	r3, #0
    3688:	da00      	bge.n	368c <__ieee754_pow+0x65c>
    368a:	e1b0      	b.n	39ee <__ieee754_pow+0x9be>
    368c:	0002      	movs	r2, r0
    368e:	000b      	movs	r3, r1
    3690:	0030      	movs	r0, r6
    3692:	0039      	movs	r1, r7
    3694:	f001 ffa0 	bl	55d8 <__aeabi_dsub>
    3698:	000b      	movs	r3, r1
    369a:	0002      	movs	r2, r0
    369c:	0006      	movs	r6, r0
    369e:	000f      	movs	r7, r1
    36a0:	9800      	ldr	r0, [sp, #0]
    36a2:	9901      	ldr	r1, [sp, #4]
    36a4:	f000 fdd4 	bl	4250 <__aeabi_dadd>
    36a8:	464b      	mov	r3, r9
    36aa:	051b      	lsls	r3, r3, #20
    36ac:	000d      	movs	r5, r1
    36ae:	4698      	mov	r8, r3
    36b0:	2400      	movs	r4, #0
    36b2:	2200      	movs	r2, #0
    36b4:	4bd3      	ldr	r3, [pc, #844]	; (3a04 <__ieee754_pow+0x9d4>)
    36b6:	0020      	movs	r0, r4
    36b8:	0029      	movs	r1, r5
    36ba:	f001 fd0d 	bl	50d8 <__aeabi_dmul>
    36be:	0032      	movs	r2, r6
    36c0:	9002      	str	r0, [sp, #8]
    36c2:	9103      	str	r1, [sp, #12]
    36c4:	003b      	movs	r3, r7
    36c6:	0020      	movs	r0, r4
    36c8:	0029      	movs	r1, r5
    36ca:	f001 ff85 	bl	55d8 <__aeabi_dsub>
    36ce:	0002      	movs	r2, r0
    36d0:	000b      	movs	r3, r1
    36d2:	9800      	ldr	r0, [sp, #0]
    36d4:	9901      	ldr	r1, [sp, #4]
    36d6:	f001 ff7f 	bl	55d8 <__aeabi_dsub>
    36da:	4acb      	ldr	r2, [pc, #812]	; (3a08 <__ieee754_pow+0x9d8>)
    36dc:	4bcb      	ldr	r3, [pc, #812]	; (3a0c <__ieee754_pow+0x9dc>)
    36de:	f001 fcfb 	bl	50d8 <__aeabi_dmul>
    36e2:	4acb      	ldr	r2, [pc, #812]	; (3a10 <__ieee754_pow+0x9e0>)
    36e4:	0006      	movs	r6, r0
    36e6:	000f      	movs	r7, r1
    36e8:	4bca      	ldr	r3, [pc, #808]	; (3a14 <__ieee754_pow+0x9e4>)
    36ea:	0020      	movs	r0, r4
    36ec:	0029      	movs	r1, r5
    36ee:	f001 fcf3 	bl	50d8 <__aeabi_dmul>
    36f2:	0002      	movs	r2, r0
    36f4:	000b      	movs	r3, r1
    36f6:	0030      	movs	r0, r6
    36f8:	0039      	movs	r1, r7
    36fa:	f000 fda9 	bl	4250 <__aeabi_dadd>
    36fe:	0004      	movs	r4, r0
    3700:	000d      	movs	r5, r1
    3702:	0002      	movs	r2, r0
    3704:	000b      	movs	r3, r1
    3706:	9802      	ldr	r0, [sp, #8]
    3708:	9903      	ldr	r1, [sp, #12]
    370a:	f000 fda1 	bl	4250 <__aeabi_dadd>
    370e:	9a02      	ldr	r2, [sp, #8]
    3710:	9b03      	ldr	r3, [sp, #12]
    3712:	0006      	movs	r6, r0
    3714:	000f      	movs	r7, r1
    3716:	f001 ff5f 	bl	55d8 <__aeabi_dsub>
    371a:	0002      	movs	r2, r0
    371c:	000b      	movs	r3, r1
    371e:	0020      	movs	r0, r4
    3720:	0029      	movs	r1, r5
    3722:	f001 ff59 	bl	55d8 <__aeabi_dsub>
    3726:	0032      	movs	r2, r6
    3728:	9000      	str	r0, [sp, #0]
    372a:	9101      	str	r1, [sp, #4]
    372c:	003b      	movs	r3, r7
    372e:	0030      	movs	r0, r6
    3730:	0039      	movs	r1, r7
    3732:	f001 fcd1 	bl	50d8 <__aeabi_dmul>
    3736:	0004      	movs	r4, r0
    3738:	000d      	movs	r5, r1
    373a:	4ab7      	ldr	r2, [pc, #732]	; (3a18 <__ieee754_pow+0x9e8>)
    373c:	4bb7      	ldr	r3, [pc, #732]	; (3a1c <__ieee754_pow+0x9ec>)
    373e:	f001 fccb 	bl	50d8 <__aeabi_dmul>
    3742:	4ab7      	ldr	r2, [pc, #732]	; (3a20 <__ieee754_pow+0x9f0>)
    3744:	4bb7      	ldr	r3, [pc, #732]	; (3a24 <__ieee754_pow+0x9f4>)
    3746:	f001 ff47 	bl	55d8 <__aeabi_dsub>
    374a:	0022      	movs	r2, r4
    374c:	002b      	movs	r3, r5
    374e:	f001 fcc3 	bl	50d8 <__aeabi_dmul>
    3752:	4ab5      	ldr	r2, [pc, #724]	; (3a28 <__ieee754_pow+0x9f8>)
    3754:	4bb5      	ldr	r3, [pc, #724]	; (3a2c <__ieee754_pow+0x9fc>)
    3756:	f000 fd7b 	bl	4250 <__aeabi_dadd>
    375a:	0022      	movs	r2, r4
    375c:	002b      	movs	r3, r5
    375e:	f001 fcbb 	bl	50d8 <__aeabi_dmul>
    3762:	4ab3      	ldr	r2, [pc, #716]	; (3a30 <__ieee754_pow+0xa00>)
    3764:	4bb3      	ldr	r3, [pc, #716]	; (3a34 <__ieee754_pow+0xa04>)
    3766:	f001 ff37 	bl	55d8 <__aeabi_dsub>
    376a:	0022      	movs	r2, r4
    376c:	002b      	movs	r3, r5
    376e:	f001 fcb3 	bl	50d8 <__aeabi_dmul>
    3772:	4ab1      	ldr	r2, [pc, #708]	; (3a38 <__ieee754_pow+0xa08>)
    3774:	4bb1      	ldr	r3, [pc, #708]	; (3a3c <__ieee754_pow+0xa0c>)
    3776:	f000 fd6b 	bl	4250 <__aeabi_dadd>
    377a:	0022      	movs	r2, r4
    377c:	002b      	movs	r3, r5
    377e:	f001 fcab 	bl	50d8 <__aeabi_dmul>
    3782:	0002      	movs	r2, r0
    3784:	000b      	movs	r3, r1
    3786:	0030      	movs	r0, r6
    3788:	0039      	movs	r1, r7
    378a:	f001 ff25 	bl	55d8 <__aeabi_dsub>
    378e:	0004      	movs	r4, r0
    3790:	000d      	movs	r5, r1
    3792:	0002      	movs	r2, r0
    3794:	000b      	movs	r3, r1
    3796:	0030      	movs	r0, r6
    3798:	0039      	movs	r1, r7
    379a:	f001 fc9d 	bl	50d8 <__aeabi_dmul>
    379e:	2380      	movs	r3, #128	; 0x80
    37a0:	9002      	str	r0, [sp, #8]
    37a2:	9103      	str	r1, [sp, #12]
    37a4:	2200      	movs	r2, #0
    37a6:	05db      	lsls	r3, r3, #23
    37a8:	0020      	movs	r0, r4
    37aa:	0029      	movs	r1, r5
    37ac:	f001 ff14 	bl	55d8 <__aeabi_dsub>
    37b0:	0002      	movs	r2, r0
    37b2:	000b      	movs	r3, r1
    37b4:	9802      	ldr	r0, [sp, #8]
    37b6:	9903      	ldr	r1, [sp, #12]
    37b8:	f001 f85a 	bl	4870 <__aeabi_ddiv>
    37bc:	9a00      	ldr	r2, [sp, #0]
    37be:	9b01      	ldr	r3, [sp, #4]
    37c0:	0004      	movs	r4, r0
    37c2:	000d      	movs	r5, r1
    37c4:	0030      	movs	r0, r6
    37c6:	0039      	movs	r1, r7
    37c8:	f001 fc86 	bl	50d8 <__aeabi_dmul>
    37cc:	9a00      	ldr	r2, [sp, #0]
    37ce:	9b01      	ldr	r3, [sp, #4]
    37d0:	f000 fd3e 	bl	4250 <__aeabi_dadd>
    37d4:	0002      	movs	r2, r0
    37d6:	000b      	movs	r3, r1
    37d8:	0020      	movs	r0, r4
    37da:	0029      	movs	r1, r5
    37dc:	f001 fefc 	bl	55d8 <__aeabi_dsub>
    37e0:	0032      	movs	r2, r6
    37e2:	003b      	movs	r3, r7
    37e4:	f001 fef8 	bl	55d8 <__aeabi_dsub>
    37e8:	0002      	movs	r2, r0
    37ea:	000b      	movs	r3, r1
    37ec:	2000      	movs	r0, #0
    37ee:	4994      	ldr	r1, [pc, #592]	; (3a40 <__ieee754_pow+0xa10>)
    37f0:	f001 fef2 	bl	55d8 <__aeabi_dsub>
    37f4:	4643      	mov	r3, r8
    37f6:	185b      	adds	r3, r3, r1
    37f8:	151a      	asrs	r2, r3, #20
    37fa:	2a00      	cmp	r2, #0
    37fc:	dc00      	bgt.n	3800 <__ieee754_pow+0x7d0>
    37fe:	e149      	b.n	3a94 <__ieee754_pow+0xa64>
    3800:	0019      	movs	r1, r3
    3802:	9a06      	ldr	r2, [sp, #24]
    3804:	9b07      	ldr	r3, [sp, #28]
    3806:	f001 fc67 	bl	50d8 <__aeabi_dmul>
    380a:	e459      	b.n	30c0 <__ieee754_pow+0x90>
    380c:	003a      	movs	r2, r7
    380e:	0033      	movs	r3, r6
    3810:	0038      	movs	r0, r7
    3812:	0031      	movs	r1, r6
    3814:	f001 fc60 	bl	50d8 <__aeabi_dmul>
    3818:	e452      	b.n	30c0 <__ieee754_pow+0x90>
    381a:	4653      	mov	r3, sl
    381c:	2b00      	cmp	r3, #0
    381e:	db00      	blt.n	3822 <__ieee754_pow+0x7f2>
    3820:	e4d9      	b.n	31d6 <__ieee754_pow+0x1a6>
    3822:	9c00      	ldr	r4, [sp, #0]
    3824:	9d01      	ldr	r5, [sp, #4]
    3826:	2280      	movs	r2, #128	; 0x80
    3828:	0612      	lsls	r2, r2, #24
    382a:	002b      	movs	r3, r5
    382c:	4694      	mov	ip, r2
    382e:	4463      	add	r3, ip
    3830:	0020      	movs	r0, r4
    3832:	0019      	movs	r1, r3
    3834:	f7ff fc44 	bl	30c0 <__ieee754_pow+0x90>
    3838:	004b      	lsls	r3, r1, #1
    383a:	085b      	lsrs	r3, r3, #1
    383c:	469a      	mov	sl, r3
    383e:	4b81      	ldr	r3, [pc, #516]	; (3a44 <__ieee754_pow+0xa14>)
    3840:	459a      	cmp	sl, r3
    3842:	dc00      	bgt.n	3846 <__ieee754_pow+0x816>
    3844:	e0b1      	b.n	39aa <__ieee754_pow+0x97a>
    3846:	4b80      	ldr	r3, [pc, #512]	; (3a48 <__ieee754_pow+0xa18>)
    3848:	445b      	add	r3, fp
    384a:	431a      	orrs	r2, r3
    384c:	d10c      	bne.n	3868 <__ieee754_pow+0x838>
    384e:	0032      	movs	r2, r6
    3850:	003b      	movs	r3, r7
    3852:	f001 fec1 	bl	55d8 <__aeabi_dsub>
    3856:	0002      	movs	r2, r0
    3858:	000b      	movs	r3, r1
    385a:	9800      	ldr	r0, [sp, #0]
    385c:	9901      	ldr	r1, [sp, #4]
    385e:	f000 fcbb 	bl	41d8 <__aeabi_dcmple>
    3862:	2800      	cmp	r0, #0
    3864:	d100      	bne.n	3868 <__ieee754_pow+0x838>
    3866:	e6ee      	b.n	3646 <__ieee754_pow+0x616>
    3868:	9806      	ldr	r0, [sp, #24]
    386a:	9907      	ldr	r1, [sp, #28]
    386c:	4a77      	ldr	r2, [pc, #476]	; (3a4c <__ieee754_pow+0xa1c>)
    386e:	4b78      	ldr	r3, [pc, #480]	; (3a50 <__ieee754_pow+0xa20>)
    3870:	f001 fc32 	bl	50d8 <__aeabi_dmul>
    3874:	4a75      	ldr	r2, [pc, #468]	; (3a4c <__ieee754_pow+0xa1c>)
    3876:	4b76      	ldr	r3, [pc, #472]	; (3a50 <__ieee754_pow+0xa20>)
    3878:	f001 fc2e 	bl	50d8 <__aeabi_dmul>
    387c:	f7ff fc20 	bl	30c0 <__ieee754_pow+0x90>
    3880:	2300      	movs	r3, #0
    3882:	4c74      	ldr	r4, [pc, #464]	; (3a54 <__ieee754_pow+0xa24>)
    3884:	9306      	str	r3, [sp, #24]
    3886:	9407      	str	r4, [sp, #28]
    3888:	e652      	b.n	3530 <__ieee754_pow+0x500>
    388a:	0002      	movs	r2, r0
    388c:	000b      	movs	r3, r1
    388e:	2000      	movs	r0, #0
    3890:	496b      	ldr	r1, [pc, #428]	; (3a40 <__ieee754_pow+0xa10>)
    3892:	f000 ffed 	bl	4870 <__aeabi_ddiv>
    3896:	f7ff fc32 	bl	30fe <__ieee754_pow+0xce>
    389a:	4653      	mov	r3, sl
    389c:	2b00      	cmp	r3, #0
    389e:	db00      	blt.n	38a2 <__ieee754_pow+0x872>
    38a0:	e499      	b.n	31d6 <__ieee754_pow+0x1a6>
    38a2:	e454      	b.n	314e <__ieee754_pow+0x11e>
    38a4:	4b6c      	ldr	r3, [pc, #432]	; (3a58 <__ieee754_pow+0xa28>)
    38a6:	429c      	cmp	r4, r3
    38a8:	ddf7      	ble.n	389a <__ieee754_pow+0x86a>
    38aa:	4b65      	ldr	r3, [pc, #404]	; (3a40 <__ieee754_pow+0xa10>)
    38ac:	429c      	cmp	r4, r3
    38ae:	dd00      	ble.n	38b2 <__ieee754_pow+0x882>
    38b0:	e44a      	b.n	3148 <__ieee754_pow+0x118>
    38b2:	2200      	movs	r2, #0
    38b4:	4b62      	ldr	r3, [pc, #392]	; (3a40 <__ieee754_pow+0xa10>)
    38b6:	f001 fe8f 	bl	55d8 <__aeabi_dsub>
    38ba:	22c0      	movs	r2, #192	; 0xc0
    38bc:	4b67      	ldr	r3, [pc, #412]	; (3a5c <__ieee754_pow+0xa2c>)
    38be:	05d2      	lsls	r2, r2, #23
    38c0:	0004      	movs	r4, r0
    38c2:	000d      	movs	r5, r1
    38c4:	f001 fc08 	bl	50d8 <__aeabi_dmul>
    38c8:	4a65      	ldr	r2, [pc, #404]	; (3a60 <__ieee754_pow+0xa30>)
    38ca:	0006      	movs	r6, r0
    38cc:	000f      	movs	r7, r1
    38ce:	4b65      	ldr	r3, [pc, #404]	; (3a64 <__ieee754_pow+0xa34>)
    38d0:	0020      	movs	r0, r4
    38d2:	0029      	movs	r1, r5
    38d4:	f001 fc00 	bl	50d8 <__aeabi_dmul>
    38d8:	2200      	movs	r2, #0
    38da:	9002      	str	r0, [sp, #8]
    38dc:	9103      	str	r1, [sp, #12]
    38de:	4b62      	ldr	r3, [pc, #392]	; (3a68 <__ieee754_pow+0xa38>)
    38e0:	0020      	movs	r0, r4
    38e2:	0029      	movs	r1, r5
    38e4:	f001 fbf8 	bl	50d8 <__aeabi_dmul>
    38e8:	0002      	movs	r2, r0
    38ea:	000b      	movs	r3, r1
    38ec:	485f      	ldr	r0, [pc, #380]	; (3a6c <__ieee754_pow+0xa3c>)
    38ee:	4960      	ldr	r1, [pc, #384]	; (3a70 <__ieee754_pow+0xa40>)
    38f0:	f001 fe72 	bl	55d8 <__aeabi_dsub>
    38f4:	0022      	movs	r2, r4
    38f6:	002b      	movs	r3, r5
    38f8:	f001 fbee 	bl	50d8 <__aeabi_dmul>
    38fc:	0002      	movs	r2, r0
    38fe:	000b      	movs	r3, r1
    3900:	2000      	movs	r0, #0
    3902:	495c      	ldr	r1, [pc, #368]	; (3a74 <__ieee754_pow+0xa44>)
    3904:	f001 fe68 	bl	55d8 <__aeabi_dsub>
    3908:	0022      	movs	r2, r4
    390a:	9004      	str	r0, [sp, #16]
    390c:	9105      	str	r1, [sp, #20]
    390e:	002b      	movs	r3, r5
    3910:	0020      	movs	r0, r4
    3912:	0029      	movs	r1, r5
    3914:	f001 fbe0 	bl	50d8 <__aeabi_dmul>
    3918:	0002      	movs	r2, r0
    391a:	000b      	movs	r3, r1
    391c:	9804      	ldr	r0, [sp, #16]
    391e:	9905      	ldr	r1, [sp, #20]
    3920:	f001 fbda 	bl	50d8 <__aeabi_dmul>
    3924:	4a54      	ldr	r2, [pc, #336]	; (3a78 <__ieee754_pow+0xa48>)
    3926:	4b4d      	ldr	r3, [pc, #308]	; (3a5c <__ieee754_pow+0xa2c>)
    3928:	f001 fbd6 	bl	50d8 <__aeabi_dmul>
    392c:	0002      	movs	r2, r0
    392e:	000b      	movs	r3, r1
    3930:	9802      	ldr	r0, [sp, #8]
    3932:	9903      	ldr	r1, [sp, #12]
    3934:	f001 fe50 	bl	55d8 <__aeabi_dsub>
    3938:	0002      	movs	r2, r0
    393a:	000b      	movs	r3, r1
    393c:	0004      	movs	r4, r0
    393e:	000d      	movs	r5, r1
    3940:	0030      	movs	r0, r6
    3942:	0039      	movs	r1, r7
    3944:	f000 fc84 	bl	4250 <__aeabi_dadd>
    3948:	2000      	movs	r0, #0
    394a:	0032      	movs	r2, r6
    394c:	003b      	movs	r3, r7
    394e:	9002      	str	r0, [sp, #8]
    3950:	9103      	str	r1, [sp, #12]
    3952:	f001 fe41 	bl	55d8 <__aeabi_dsub>
    3956:	0002      	movs	r2, r0
    3958:	000b      	movs	r3, r1
    395a:	0020      	movs	r0, r4
    395c:	0029      	movs	r1, r5
    395e:	f001 fe3b 	bl	55d8 <__aeabi_dsub>
    3962:	9004      	str	r0, [sp, #16]
    3964:	9105      	str	r1, [sp, #20]
    3966:	e5d9      	b.n	351c <__ieee754_pow+0x4ec>
    3968:	4a44      	ldr	r2, [pc, #272]	; (3a7c <__ieee754_pow+0xa4c>)
    396a:	4b45      	ldr	r3, [pc, #276]	; (3a80 <__ieee754_pow+0xa50>)
    396c:	9806      	ldr	r0, [sp, #24]
    396e:	9907      	ldr	r1, [sp, #28]
    3970:	f001 fbb2 	bl	50d8 <__aeabi_dmul>
    3974:	4a41      	ldr	r2, [pc, #260]	; (3a7c <__ieee754_pow+0xa4c>)
    3976:	4b42      	ldr	r3, [pc, #264]	; (3a80 <__ieee754_pow+0xa50>)
    3978:	f001 fbae 	bl	50d8 <__aeabi_dmul>
    397c:	f7ff fba0 	bl	30c0 <__ieee754_pow+0x90>
    3980:	2a00      	cmp	r2, #0
    3982:	d001      	beq.n	3988 <__ieee754_pow+0x958>
    3984:	f7ff fba9 	bl	30da <__ieee754_pow+0xaa>
    3988:	3214      	adds	r2, #20
    398a:	1ad3      	subs	r3, r2, r3
    398c:	002a      	movs	r2, r5
    398e:	411a      	asrs	r2, r3
    3990:	0011      	movs	r1, r2
    3992:	4099      	lsls	r1, r3
    3994:	428d      	cmp	r5, r1
    3996:	d001      	beq.n	399c <__ieee754_pow+0x96c>
    3998:	f7ff fb76 	bl	3088 <__ieee754_pow+0x58>
    399c:	2301      	movs	r3, #1
    399e:	401a      	ands	r2, r3
    39a0:	18db      	adds	r3, r3, r3
    39a2:	1a9b      	subs	r3, r3, r2
    39a4:	469b      	mov	fp, r3
    39a6:	f7ff fb6f 	bl	3088 <__ieee754_pow+0x58>
    39aa:	2200      	movs	r2, #0
    39ac:	4b31      	ldr	r3, [pc, #196]	; (3a74 <__ieee754_pow+0xa44>)
    39ae:	4690      	mov	r8, r2
    39b0:	4691      	mov	r9, r2
    39b2:	459a      	cmp	sl, r3
    39b4:	dc00      	bgt.n	39b8 <__ieee754_pow+0x988>
    39b6:	e67b      	b.n	36b0 <__ieee754_pow+0x680>
    39b8:	e645      	b.n	3646 <__ieee754_pow+0x616>
    39ba:	0002      	movs	r2, r0
    39bc:	000b      	movs	r3, r1
    39be:	f001 fe0b 	bl	55d8 <__aeabi_dsub>
    39c2:	0002      	movs	r2, r0
    39c4:	000b      	movs	r3, r1
    39c6:	f000 ff53 	bl	4870 <__aeabi_ddiv>
    39ca:	f7ff fb79 	bl	30c0 <__ieee754_pow+0x90>
    39ce:	2380      	movs	r3, #128	; 0x80
    39d0:	4c2c      	ldr	r4, [pc, #176]	; (3a84 <__ieee754_pow+0xa54>)
    39d2:	05db      	lsls	r3, r3, #23
    39d4:	9308      	str	r3, [sp, #32]
    39d6:	9409      	str	r4, [sp, #36]	; 0x24
    39d8:	4b2b      	ldr	r3, [pc, #172]	; (3a88 <__ieee754_pow+0xa58>)
    39da:	4c2c      	ldr	r4, [pc, #176]	; (3a8c <__ieee754_pow+0xa5c>)
    39dc:	2200      	movs	r2, #0
    39de:	930c      	str	r3, [sp, #48]	; 0x30
    39e0:	940d      	str	r4, [sp, #52]	; 0x34
    39e2:	2480      	movs	r4, #128	; 0x80
    39e4:	4b2a      	ldr	r3, [pc, #168]	; (3a90 <__ieee754_pow+0xa60>)
    39e6:	02e4      	lsls	r4, r4, #11
    39e8:	9206      	str	r2, [sp, #24]
    39ea:	9307      	str	r3, [sp, #28]
    39ec:	e449      	b.n	3282 <__ieee754_pow+0x252>
    39ee:	464b      	mov	r3, r9
    39f0:	425b      	negs	r3, r3
    39f2:	4699      	mov	r9, r3
    39f4:	e64a      	b.n	368c <__ieee754_pow+0x65c>
    39f6:	46c0      	nop			; (mov r8, r8)
    39f8:	fffffc02 	.word	0xfffffc02
    39fc:	fffffc01 	.word	0xfffffc01
    3a00:	000fffff 	.word	0x000fffff
    3a04:	3fe62e43 	.word	0x3fe62e43
    3a08:	fefa39ef 	.word	0xfefa39ef
    3a0c:	3fe62e42 	.word	0x3fe62e42
    3a10:	0ca86c39 	.word	0x0ca86c39
    3a14:	be205c61 	.word	0xbe205c61
    3a18:	72bea4d0 	.word	0x72bea4d0
    3a1c:	3e663769 	.word	0x3e663769
    3a20:	c5d26bf1 	.word	0xc5d26bf1
    3a24:	3ebbbd41 	.word	0x3ebbbd41
    3a28:	af25de2c 	.word	0xaf25de2c
    3a2c:	3f11566a 	.word	0x3f11566a
    3a30:	16bebd93 	.word	0x16bebd93
    3a34:	3f66c16c 	.word	0x3f66c16c
    3a38:	5555553e 	.word	0x5555553e
    3a3c:	3fc55555 	.word	0x3fc55555
    3a40:	3ff00000 	.word	0x3ff00000
    3a44:	4090cbff 	.word	0x4090cbff
    3a48:	3f6f3400 	.word	0x3f6f3400
    3a4c:	c2f8f359 	.word	0xc2f8f359
    3a50:	01a56e1f 	.word	0x01a56e1f
    3a54:	bff00000 	.word	0xbff00000
    3a58:	3feffffe 	.word	0x3feffffe
    3a5c:	3ff71547 	.word	0x3ff71547
    3a60:	f85ddf44 	.word	0xf85ddf44
    3a64:	3e54ae0b 	.word	0x3e54ae0b
    3a68:	3fd00000 	.word	0x3fd00000
    3a6c:	55555555 	.word	0x55555555
    3a70:	3fd55555 	.word	0x3fd55555
    3a74:	3fe00000 	.word	0x3fe00000
    3a78:	652b82fe 	.word	0x652b82fe
    3a7c:	8800759c 	.word	0x8800759c
    3a80:	7e37e43c 	.word	0x7e37e43c
    3a84:	3fe2b803 	.word	0x3fe2b803
    3a88:	43cfd006 	.word	0x43cfd006
    3a8c:	3e4cfdeb 	.word	0x3e4cfdeb
    3a90:	3ff80000 	.word	0x3ff80000
    3a94:	464a      	mov	r2, r9
    3a96:	f000 f999 	bl	3dcc <scalbn>
    3a9a:	e6b2      	b.n	3802 <__ieee754_pow+0x7d2>

00003a9c <__ieee754_sqrt>:
    3a9c:	4b6c      	ldr	r3, [pc, #432]	; (3c50 <__ieee754_sqrt+0x1b4>)
    3a9e:	b5f0      	push	{r4, r5, r6, r7, lr}
    3aa0:	000a      	movs	r2, r1
    3aa2:	4646      	mov	r6, r8
    3aa4:	000d      	movs	r5, r1
    3aa6:	46d6      	mov	lr, sl
    3aa8:	464f      	mov	r7, r9
    3aaa:	0019      	movs	r1, r3
    3aac:	b5c0      	push	{r6, r7, lr}
    3aae:	0004      	movs	r4, r0
    3ab0:	0006      	movs	r6, r0
    3ab2:	4029      	ands	r1, r5
    3ab4:	4299      	cmp	r1, r3
    3ab6:	d100      	bne.n	3aba <__ieee754_sqrt+0x1e>
    3ab8:	e0a7      	b.n	3c0a <__ieee754_sqrt+0x16e>
    3aba:	2d00      	cmp	r5, #0
    3abc:	dc00      	bgt.n	3ac0 <__ieee754_sqrt+0x24>
    3abe:	e081      	b.n	3bc4 <__ieee754_sqrt+0x128>
    3ac0:	152f      	asrs	r7, r5, #20
    3ac2:	d100      	bne.n	3ac6 <__ieee754_sqrt+0x2a>
    3ac4:	e08e      	b.n	3be4 <__ieee754_sqrt+0x148>
    3ac6:	4b63      	ldr	r3, [pc, #396]	; (3c54 <__ieee754_sqrt+0x1b8>)
    3ac8:	0312      	lsls	r2, r2, #12
    3aca:	469c      	mov	ip, r3
    3acc:	2380      	movs	r3, #128	; 0x80
    3ace:	0b12      	lsrs	r2, r2, #12
    3ad0:	035b      	lsls	r3, r3, #13
    3ad2:	4467      	add	r7, ip
    3ad4:	431a      	orrs	r2, r3
    3ad6:	07fb      	lsls	r3, r7, #31
    3ad8:	d468      	bmi.n	3bac <__ieee754_sqrt+0x110>
    3ada:	107b      	asrs	r3, r7, #1
    3adc:	469c      	mov	ip, r3
    3ade:	0fe3      	lsrs	r3, r4, #31
    3ae0:	189b      	adds	r3, r3, r2
    3ae2:	189b      	adds	r3, r3, r2
    3ae4:	2280      	movs	r2, #128	; 0x80
    3ae6:	2116      	movs	r1, #22
    3ae8:	2600      	movs	r6, #0
    3aea:	2500      	movs	r5, #0
    3aec:	0064      	lsls	r4, r4, #1
    3aee:	0392      	lsls	r2, r2, #14
    3af0:	18a8      	adds	r0, r5, r2
    3af2:	4298      	cmp	r0, r3
    3af4:	dc02      	bgt.n	3afc <__ieee754_sqrt+0x60>
    3af6:	1885      	adds	r5, r0, r2
    3af8:	1a1b      	subs	r3, r3, r0
    3afa:	18b6      	adds	r6, r6, r2
    3afc:	0fe0      	lsrs	r0, r4, #31
    3afe:	005b      	lsls	r3, r3, #1
    3b00:	3901      	subs	r1, #1
    3b02:	181b      	adds	r3, r3, r0
    3b04:	0064      	lsls	r4, r4, #1
    3b06:	0852      	lsrs	r2, r2, #1
    3b08:	2900      	cmp	r1, #0
    3b0a:	d1f1      	bne.n	3af0 <__ieee754_sqrt+0x54>
    3b0c:	2200      	movs	r2, #0
    3b0e:	4692      	mov	sl, r2
    3b10:	4690      	mov	r8, r2
    3b12:	2280      	movs	r2, #128	; 0x80
    3b14:	2020      	movs	r0, #32
    3b16:	0612      	lsls	r2, r2, #24
    3b18:	e009      	b.n	3b2e <__ieee754_sqrt+0x92>
    3b1a:	42ab      	cmp	r3, r5
    3b1c:	d038      	beq.n	3b90 <__ieee754_sqrt+0xf4>
    3b1e:	0fe1      	lsrs	r1, r4, #31
    3b20:	18c9      	adds	r1, r1, r3
    3b22:	3801      	subs	r0, #1
    3b24:	18cb      	adds	r3, r1, r3
    3b26:	0064      	lsls	r4, r4, #1
    3b28:	0852      	lsrs	r2, r2, #1
    3b2a:	2800      	cmp	r0, #0
    3b2c:	d018      	beq.n	3b60 <__ieee754_sqrt+0xc4>
    3b2e:	4641      	mov	r1, r8
    3b30:	1851      	adds	r1, r2, r1
    3b32:	42ab      	cmp	r3, r5
    3b34:	ddf1      	ble.n	3b1a <__ieee754_sqrt+0x7e>
    3b36:	188f      	adds	r7, r1, r2
    3b38:	46b8      	mov	r8, r7
    3b3a:	46a9      	mov	r9, r5
    3b3c:	2900      	cmp	r1, #0
    3b3e:	db30      	blt.n	3ba2 <__ieee754_sqrt+0x106>
    3b40:	1b5b      	subs	r3, r3, r5
    3b42:	428c      	cmp	r4, r1
    3b44:	41ad      	sbcs	r5, r5
    3b46:	426d      	negs	r5, r5
    3b48:	1b5b      	subs	r3, r3, r5
    3b4a:	1a64      	subs	r4, r4, r1
    3b4c:	0fe1      	lsrs	r1, r4, #31
    3b4e:	18c9      	adds	r1, r1, r3
    3b50:	3801      	subs	r0, #1
    3b52:	4492      	add	sl, r2
    3b54:	464d      	mov	r5, r9
    3b56:	18cb      	adds	r3, r1, r3
    3b58:	0064      	lsls	r4, r4, #1
    3b5a:	0852      	lsrs	r2, r2, #1
    3b5c:	2800      	cmp	r0, #0
    3b5e:	d1e6      	bne.n	3b2e <__ieee754_sqrt+0x92>
    3b60:	4323      	orrs	r3, r4
    3b62:	d128      	bne.n	3bb6 <__ieee754_sqrt+0x11a>
    3b64:	4653      	mov	r3, sl
    3b66:	085b      	lsrs	r3, r3, #1
    3b68:	493b      	ldr	r1, [pc, #236]	; (3c58 <__ieee754_sqrt+0x1bc>)
    3b6a:	1072      	asrs	r2, r6, #1
    3b6c:	4688      	mov	r8, r1
    3b6e:	4442      	add	r2, r8
    3b70:	07f1      	lsls	r1, r6, #31
    3b72:	d502      	bpl.n	3b7a <__ieee754_sqrt+0xde>
    3b74:	2180      	movs	r1, #128	; 0x80
    3b76:	0609      	lsls	r1, r1, #24
    3b78:	430b      	orrs	r3, r1
    3b7a:	4661      	mov	r1, ip
    3b7c:	001e      	movs	r6, r3
    3b7e:	050f      	lsls	r7, r1, #20
    3b80:	18bd      	adds	r5, r7, r2
    3b82:	0030      	movs	r0, r6
    3b84:	0029      	movs	r1, r5
    3b86:	bc1c      	pop	{r2, r3, r4}
    3b88:	4690      	mov	r8, r2
    3b8a:	4699      	mov	r9, r3
    3b8c:	46a2      	mov	sl, r4
    3b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3b90:	42a1      	cmp	r1, r4
    3b92:	d8c4      	bhi.n	3b1e <__ieee754_sqrt+0x82>
    3b94:	188f      	adds	r7, r1, r2
    3b96:	46b8      	mov	r8, r7
    3b98:	2900      	cmp	r1, #0
    3b9a:	db42      	blt.n	3c22 <__ieee754_sqrt+0x186>
    3b9c:	4699      	mov	r9, r3
    3b9e:	2300      	movs	r3, #0
    3ba0:	e7d3      	b.n	3b4a <__ieee754_sqrt+0xae>
    3ba2:	2f00      	cmp	r7, #0
    3ba4:	db2f      	blt.n	3c06 <__ieee754_sqrt+0x16a>
    3ba6:	1c6f      	adds	r7, r5, #1
    3ba8:	46b9      	mov	r9, r7
    3baa:	e7c9      	b.n	3b40 <__ieee754_sqrt+0xa4>
    3bac:	0fe1      	lsrs	r1, r4, #31
    3bae:	0052      	lsls	r2, r2, #1
    3bb0:	188a      	adds	r2, r1, r2
    3bb2:	0064      	lsls	r4, r4, #1
    3bb4:	e791      	b.n	3ada <__ieee754_sqrt+0x3e>
    3bb6:	4653      	mov	r3, sl
    3bb8:	3301      	adds	r3, #1
    3bba:	d035      	beq.n	3c28 <__ieee754_sqrt+0x18c>
    3bbc:	4653      	mov	r3, sl
    3bbe:	3301      	adds	r3, #1
    3bc0:	085b      	lsrs	r3, r3, #1
    3bc2:	e7d1      	b.n	3b68 <__ieee754_sqrt+0xcc>
    3bc4:	006b      	lsls	r3, r5, #1
    3bc6:	085b      	lsrs	r3, r3, #1
    3bc8:	4303      	orrs	r3, r0
    3bca:	d0da      	beq.n	3b82 <__ieee754_sqrt+0xe6>
    3bcc:	2700      	movs	r7, #0
    3bce:	2d00      	cmp	r5, #0
    3bd0:	d132      	bne.n	3c38 <__ieee754_sqrt+0x19c>
    3bd2:	0ae2      	lsrs	r2, r4, #11
    3bd4:	3f15      	subs	r7, #21
    3bd6:	0564      	lsls	r4, r4, #21
    3bd8:	2a00      	cmp	r2, #0
    3bda:	d0fa      	beq.n	3bd2 <__ieee754_sqrt+0x136>
    3bdc:	2380      	movs	r3, #128	; 0x80
    3bde:	035b      	lsls	r3, r3, #13
    3be0:	421a      	tst	r2, r3
    3be2:	d124      	bne.n	3c2e <__ieee754_sqrt+0x192>
    3be4:	2080      	movs	r0, #128	; 0x80
    3be6:	2300      	movs	r3, #0
    3be8:	0340      	lsls	r0, r0, #13
    3bea:	e000      	b.n	3bee <__ieee754_sqrt+0x152>
    3bec:	000b      	movs	r3, r1
    3bee:	0052      	lsls	r2, r2, #1
    3bf0:	1c59      	adds	r1, r3, #1
    3bf2:	4202      	tst	r2, r0
    3bf4:	d0fa      	beq.n	3bec <__ieee754_sqrt+0x150>
    3bf6:	2020      	movs	r0, #32
    3bf8:	1a40      	subs	r0, r0, r1
    3bfa:	1aff      	subs	r7, r7, r3
    3bfc:	0023      	movs	r3, r4
    3bfe:	40c3      	lsrs	r3, r0
    3c00:	408c      	lsls	r4, r1
    3c02:	431a      	orrs	r2, r3
    3c04:	e75f      	b.n	3ac6 <__ieee754_sqrt+0x2a>
    3c06:	46a9      	mov	r9, r5
    3c08:	e79a      	b.n	3b40 <__ieee754_sqrt+0xa4>
    3c0a:	002b      	movs	r3, r5
    3c0c:	0002      	movs	r2, r0
    3c0e:	0029      	movs	r1, r5
    3c10:	f001 fa62 	bl	50d8 <__aeabi_dmul>
    3c14:	0032      	movs	r2, r6
    3c16:	002b      	movs	r3, r5
    3c18:	f000 fb1a 	bl	4250 <__aeabi_dadd>
    3c1c:	0006      	movs	r6, r0
    3c1e:	000d      	movs	r5, r1
    3c20:	e7af      	b.n	3b82 <__ieee754_sqrt+0xe6>
    3c22:	2f00      	cmp	r7, #0
    3c24:	dabf      	bge.n	3ba6 <__ieee754_sqrt+0x10a>
    3c26:	e7b9      	b.n	3b9c <__ieee754_sqrt+0x100>
    3c28:	3601      	adds	r6, #1
    3c2a:	2300      	movs	r3, #0
    3c2c:	e79c      	b.n	3b68 <__ieee754_sqrt+0xcc>
    3c2e:	2301      	movs	r3, #1
    3c30:	2100      	movs	r1, #0
    3c32:	2020      	movs	r0, #32
    3c34:	425b      	negs	r3, r3
    3c36:	e7e0      	b.n	3bfa <__ieee754_sqrt+0x15e>
    3c38:	002b      	movs	r3, r5
    3c3a:	0002      	movs	r2, r0
    3c3c:	0029      	movs	r1, r5
    3c3e:	f001 fccb 	bl	55d8 <__aeabi_dsub>
    3c42:	0002      	movs	r2, r0
    3c44:	000b      	movs	r3, r1
    3c46:	f000 fe13 	bl	4870 <__aeabi_ddiv>
    3c4a:	0006      	movs	r6, r0
    3c4c:	000d      	movs	r5, r1
    3c4e:	e798      	b.n	3b82 <__ieee754_sqrt+0xe6>
    3c50:	7ff00000 	.word	0x7ff00000
    3c54:	fffffc01 	.word	0xfffffc01
    3c58:	3fe00000 	.word	0x3fe00000

00003c5c <fabs>:
    3c5c:	0049      	lsls	r1, r1, #1
    3c5e:	084b      	lsrs	r3, r1, #1
    3c60:	0019      	movs	r1, r3
    3c62:	4770      	bx	lr

00003c64 <finite>:
    3c64:	4b03      	ldr	r3, [pc, #12]	; (3c74 <finite+0x10>)
    3c66:	0048      	lsls	r0, r1, #1
    3c68:	469c      	mov	ip, r3
    3c6a:	0840      	lsrs	r0, r0, #1
    3c6c:	4460      	add	r0, ip
    3c6e:	0fc0      	lsrs	r0, r0, #31
    3c70:	4770      	bx	lr
    3c72:	46c0      	nop			; (mov r8, r8)
    3c74:	80100000 	.word	0x80100000

00003c78 <matherr>:
    3c78:	2000      	movs	r0, #0
    3c7a:	4770      	bx	lr

00003c7c <nan>:
    3c7c:	2000      	movs	r0, #0
    3c7e:	4901      	ldr	r1, [pc, #4]	; (3c84 <nan+0x8>)
    3c80:	4770      	bx	lr
    3c82:	46c0      	nop			; (mov r8, r8)
    3c84:	7ff80000 	.word	0x7ff80000

00003c88 <rint>:
    3c88:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c8a:	46c6      	mov	lr, r8
    3c8c:	b500      	push	{lr}
    3c8e:	0fcb      	lsrs	r3, r1, #31
    3c90:	4698      	mov	r8, r3
    3c92:	4c4a      	ldr	r4, [pc, #296]	; (3dbc <rint+0x134>)
    3c94:	004b      	lsls	r3, r1, #1
    3c96:	0d5b      	lsrs	r3, r3, #21
    3c98:	191e      	adds	r6, r3, r4
    3c9a:	b082      	sub	sp, #8
    3c9c:	0007      	movs	r7, r0
    3c9e:	000a      	movs	r2, r1
    3ca0:	2e13      	cmp	r6, #19
    3ca2:	dc35      	bgt.n	3d10 <rint+0x88>
    3ca4:	2e00      	cmp	r6, #0
    3ca6:	db57      	blt.n	3d58 <rint+0xd0>
    3ca8:	4b45      	ldr	r3, [pc, #276]	; (3dc0 <rint+0x138>)
    3caa:	0004      	movs	r4, r0
    3cac:	4133      	asrs	r3, r6
    3cae:	001f      	movs	r7, r3
    3cb0:	400f      	ands	r7, r1
    3cb2:	4307      	orrs	r7, r0
    3cb4:	000d      	movs	r5, r1
    3cb6:	2f00      	cmp	r7, #0
    3cb8:	d024      	beq.n	3d04 <rint+0x7c>
    3cba:	085b      	lsrs	r3, r3, #1
    3cbc:	001c      	movs	r4, r3
    3cbe:	400c      	ands	r4, r1
    3cc0:	4320      	orrs	r0, r4
    3cc2:	2700      	movs	r7, #0
    3cc4:	2800      	cmp	r0, #0
    3cc6:	d007      	beq.n	3cd8 <rint+0x50>
    3cc8:	2e13      	cmp	r6, #19
    3cca:	d100      	bne.n	3cce <rint+0x46>
    3ccc:	e073      	b.n	3db6 <rint+0x12e>
    3cce:	2280      	movs	r2, #128	; 0x80
    3cd0:	02d2      	lsls	r2, r2, #11
    3cd2:	4132      	asrs	r2, r6
    3cd4:	4399      	bics	r1, r3
    3cd6:	430a      	orrs	r2, r1
    3cd8:	4643      	mov	r3, r8
    3cda:	00de      	lsls	r6, r3, #3
    3cdc:	4b39      	ldr	r3, [pc, #228]	; (3dc4 <rint+0x13c>)
    3cde:	0011      	movs	r1, r2
    3ce0:	199e      	adds	r6, r3, r6
    3ce2:	6834      	ldr	r4, [r6, #0]
    3ce4:	6875      	ldr	r5, [r6, #4]
    3ce6:	0038      	movs	r0, r7
    3ce8:	0022      	movs	r2, r4
    3cea:	002b      	movs	r3, r5
    3cec:	f000 fab0 	bl	4250 <__aeabi_dadd>
    3cf0:	9000      	str	r0, [sp, #0]
    3cf2:	9101      	str	r1, [sp, #4]
    3cf4:	9800      	ldr	r0, [sp, #0]
    3cf6:	9901      	ldr	r1, [sp, #4]
    3cf8:	0022      	movs	r2, r4
    3cfa:	002b      	movs	r3, r5
    3cfc:	f001 fc6c 	bl	55d8 <__aeabi_dsub>
    3d00:	0004      	movs	r4, r0
    3d02:	000d      	movs	r5, r1
    3d04:	0020      	movs	r0, r4
    3d06:	0029      	movs	r1, r5
    3d08:	b002      	add	sp, #8
    3d0a:	bc04      	pop	{r2}
    3d0c:	4690      	mov	r8, r2
    3d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3d10:	2e33      	cmp	r6, #51	; 0x33
    3d12:	dd0c      	ble.n	3d2e <rint+0xa6>
    3d14:	2380      	movs	r3, #128	; 0x80
    3d16:	0004      	movs	r4, r0
    3d18:	00db      	lsls	r3, r3, #3
    3d1a:	000d      	movs	r5, r1
    3d1c:	429e      	cmp	r6, r3
    3d1e:	d1f1      	bne.n	3d04 <rint+0x7c>
    3d20:	0002      	movs	r2, r0
    3d22:	000b      	movs	r3, r1
    3d24:	f000 fa94 	bl	4250 <__aeabi_dadd>
    3d28:	0004      	movs	r4, r0
    3d2a:	000d      	movs	r5, r1
    3d2c:	e7ea      	b.n	3d04 <rint+0x7c>
    3d2e:	4c26      	ldr	r4, [pc, #152]	; (3dc8 <rint+0x140>)
    3d30:	000d      	movs	r5, r1
    3d32:	46a4      	mov	ip, r4
    3d34:	2401      	movs	r4, #1
    3d36:	4463      	add	r3, ip
    3d38:	4264      	negs	r4, r4
    3d3a:	40dc      	lsrs	r4, r3
    3d3c:	46a4      	mov	ip, r4
    3d3e:	4661      	mov	r1, ip
    3d40:	0004      	movs	r4, r0
    3d42:	4201      	tst	r1, r0
    3d44:	d0de      	beq.n	3d04 <rint+0x7c>
    3d46:	0849      	lsrs	r1, r1, #1
    3d48:	4201      	tst	r1, r0
    3d4a:	d0c5      	beq.n	3cd8 <rint+0x50>
    3d4c:	2780      	movs	r7, #128	; 0x80
    3d4e:	05ff      	lsls	r7, r7, #23
    3d50:	411f      	asrs	r7, r3
    3d52:	4388      	bics	r0, r1
    3d54:	4307      	orrs	r7, r0
    3d56:	e7bf      	b.n	3cd8 <rint+0x50>
    3d58:	004b      	lsls	r3, r1, #1
    3d5a:	085b      	lsrs	r3, r3, #1
    3d5c:	4303      	orrs	r3, r0
    3d5e:	0004      	movs	r4, r0
    3d60:	000d      	movs	r5, r1
    3d62:	2b00      	cmp	r3, #0
    3d64:	d0ce      	beq.n	3d04 <rint+0x7c>
    3d66:	030b      	lsls	r3, r1, #12
    3d68:	0b1b      	lsrs	r3, r3, #12
    3d6a:	4303      	orrs	r3, r0
    3d6c:	001a      	movs	r2, r3
    3d6e:	425b      	negs	r3, r3
    3d70:	4313      	orrs	r3, r2
    3d72:	2280      	movs	r2, #128	; 0x80
    3d74:	0b1b      	lsrs	r3, r3, #12
    3d76:	0312      	lsls	r2, r2, #12
    3d78:	4013      	ands	r3, r2
    3d7a:	0c4a      	lsrs	r2, r1, #17
    3d7c:	0452      	lsls	r2, r2, #17
    3d7e:	4313      	orrs	r3, r2
    3d80:	0019      	movs	r1, r3
    3d82:	4643      	mov	r3, r8
    3d84:	00da      	lsls	r2, r3, #3
    3d86:	4b0f      	ldr	r3, [pc, #60]	; (3dc4 <rint+0x13c>)
    3d88:	189b      	adds	r3, r3, r2
    3d8a:	681c      	ldr	r4, [r3, #0]
    3d8c:	685d      	ldr	r5, [r3, #4]
    3d8e:	0022      	movs	r2, r4
    3d90:	002b      	movs	r3, r5
    3d92:	f000 fa5d 	bl	4250 <__aeabi_dadd>
    3d96:	9000      	str	r0, [sp, #0]
    3d98:	9101      	str	r1, [sp, #4]
    3d9a:	9800      	ldr	r0, [sp, #0]
    3d9c:	9901      	ldr	r1, [sp, #4]
    3d9e:	0022      	movs	r2, r4
    3da0:	002b      	movs	r3, r5
    3da2:	f001 fc19 	bl	55d8 <__aeabi_dsub>
    3da6:	4642      	mov	r2, r8
    3da8:	004b      	lsls	r3, r1, #1
    3daa:	085b      	lsrs	r3, r3, #1
    3dac:	07d6      	lsls	r6, r2, #31
    3dae:	4333      	orrs	r3, r6
    3db0:	0004      	movs	r4, r0
    3db2:	001d      	movs	r5, r3
    3db4:	e7a6      	b.n	3d04 <rint+0x7c>
    3db6:	2780      	movs	r7, #128	; 0x80
    3db8:	063f      	lsls	r7, r7, #24
    3dba:	e788      	b.n	3cce <rint+0x46>
    3dbc:	fffffc01 	.word	0xfffffc01
    3dc0:	000fffff 	.word	0x000fffff
    3dc4:	00006040 	.word	0x00006040
    3dc8:	fffffbed 	.word	0xfffffbed

00003dcc <scalbn>:
    3dcc:	004b      	lsls	r3, r1, #1
    3dce:	b570      	push	{r4, r5, r6, lr}
    3dd0:	0d5b      	lsrs	r3, r3, #21
    3dd2:	0014      	movs	r4, r2
    3dd4:	000a      	movs	r2, r1
    3dd6:	2b00      	cmp	r3, #0
    3dd8:	d11a      	bne.n	3e10 <scalbn+0x44>
    3dda:	004b      	lsls	r3, r1, #1
    3ddc:	085b      	lsrs	r3, r3, #1
    3dde:	4303      	orrs	r3, r0
    3de0:	d015      	beq.n	3e0e <scalbn+0x42>
    3de2:	2200      	movs	r2, #0
    3de4:	4b22      	ldr	r3, [pc, #136]	; (3e70 <scalbn+0xa4>)
    3de6:	f001 f977 	bl	50d8 <__aeabi_dmul>
    3dea:	4b22      	ldr	r3, [pc, #136]	; (3e74 <scalbn+0xa8>)
    3dec:	000a      	movs	r2, r1
    3dee:	429c      	cmp	r4, r3
    3df0:	db22      	blt.n	3e38 <scalbn+0x6c>
    3df2:	004b      	lsls	r3, r1, #1
    3df4:	0d5b      	lsrs	r3, r3, #21
    3df6:	3b36      	subs	r3, #54	; 0x36
    3df8:	4d1f      	ldr	r5, [pc, #124]	; (3e78 <scalbn+0xac>)
    3dfa:	18e3      	adds	r3, r4, r3
    3dfc:	42ab      	cmp	r3, r5
    3dfe:	dc20      	bgt.n	3e42 <scalbn+0x76>
    3e00:	2b00      	cmp	r3, #0
    3e02:	dd0d      	ble.n	3e20 <scalbn+0x54>
    3e04:	4c1d      	ldr	r4, [pc, #116]	; (3e7c <scalbn+0xb0>)
    3e06:	051b      	lsls	r3, r3, #20
    3e08:	4022      	ands	r2, r4
    3e0a:	431a      	orrs	r2, r3
    3e0c:	0011      	movs	r1, r2
    3e0e:	bd70      	pop	{r4, r5, r6, pc}
    3e10:	4d1b      	ldr	r5, [pc, #108]	; (3e80 <scalbn+0xb4>)
    3e12:	42ab      	cmp	r3, r5
    3e14:	d1f0      	bne.n	3df8 <scalbn+0x2c>
    3e16:	0002      	movs	r2, r0
    3e18:	000b      	movs	r3, r1
    3e1a:	f000 fa19 	bl	4250 <__aeabi_dadd>
    3e1e:	e7f6      	b.n	3e0e <scalbn+0x42>
    3e20:	001d      	movs	r5, r3
    3e22:	3535      	adds	r5, #53	; 0x35
    3e24:	da18      	bge.n	3e58 <scalbn+0x8c>
    3e26:	4b17      	ldr	r3, [pc, #92]	; (3e84 <scalbn+0xb8>)
    3e28:	0002      	movs	r2, r0
    3e2a:	429c      	cmp	r4, r3
    3e2c:	dc0a      	bgt.n	3e44 <scalbn+0x78>
    3e2e:	000b      	movs	r3, r1
    3e30:	4815      	ldr	r0, [pc, #84]	; (3e88 <scalbn+0xbc>)
    3e32:	4916      	ldr	r1, [pc, #88]	; (3e8c <scalbn+0xc0>)
    3e34:	f000 f832 	bl	3e9c <copysign>
    3e38:	4a13      	ldr	r2, [pc, #76]	; (3e88 <scalbn+0xbc>)
    3e3a:	4b14      	ldr	r3, [pc, #80]	; (3e8c <scalbn+0xc0>)
    3e3c:	f001 f94c 	bl	50d8 <__aeabi_dmul>
    3e40:	e7e5      	b.n	3e0e <scalbn+0x42>
    3e42:	0002      	movs	r2, r0
    3e44:	000b      	movs	r3, r1
    3e46:	4812      	ldr	r0, [pc, #72]	; (3e90 <scalbn+0xc4>)
    3e48:	4912      	ldr	r1, [pc, #72]	; (3e94 <scalbn+0xc8>)
    3e4a:	f000 f827 	bl	3e9c <copysign>
    3e4e:	4a10      	ldr	r2, [pc, #64]	; (3e90 <scalbn+0xc4>)
    3e50:	4b10      	ldr	r3, [pc, #64]	; (3e94 <scalbn+0xc8>)
    3e52:	f001 f941 	bl	50d8 <__aeabi_dmul>
    3e56:	e7da      	b.n	3e0e <scalbn+0x42>
    3e58:	4c08      	ldr	r4, [pc, #32]	; (3e7c <scalbn+0xb0>)
    3e5a:	3336      	adds	r3, #54	; 0x36
    3e5c:	4022      	ands	r2, r4
    3e5e:	051b      	lsls	r3, r3, #20
    3e60:	4313      	orrs	r3, r2
    3e62:	0019      	movs	r1, r3
    3e64:	2200      	movs	r2, #0
    3e66:	4b0c      	ldr	r3, [pc, #48]	; (3e98 <scalbn+0xcc>)
    3e68:	f001 f936 	bl	50d8 <__aeabi_dmul>
    3e6c:	e7cf      	b.n	3e0e <scalbn+0x42>
    3e6e:	46c0      	nop			; (mov r8, r8)
    3e70:	43500000 	.word	0x43500000
    3e74:	ffff3cb0 	.word	0xffff3cb0
    3e78:	000007fe 	.word	0x000007fe
    3e7c:	800fffff 	.word	0x800fffff
    3e80:	000007ff 	.word	0x000007ff
    3e84:	0000c350 	.word	0x0000c350
    3e88:	c2f8f359 	.word	0xc2f8f359
    3e8c:	01a56e1f 	.word	0x01a56e1f
    3e90:	8800759c 	.word	0x8800759c
    3e94:	7e37e43c 	.word	0x7e37e43c
    3e98:	3c900000 	.word	0x3c900000

00003e9c <copysign>:
    3e9c:	b530      	push	{r4, r5, lr}
    3e9e:	004a      	lsls	r2, r1, #1
    3ea0:	0fdb      	lsrs	r3, r3, #31
    3ea2:	07db      	lsls	r3, r3, #31
    3ea4:	0852      	lsrs	r2, r2, #1
    3ea6:	431a      	orrs	r2, r3
    3ea8:	0011      	movs	r1, r2
    3eaa:	bd30      	pop	{r4, r5, pc}

00003eac <__udivsi3>:
    3eac:	2200      	movs	r2, #0
    3eae:	0843      	lsrs	r3, r0, #1
    3eb0:	428b      	cmp	r3, r1
    3eb2:	d374      	bcc.n	3f9e <__udivsi3+0xf2>
    3eb4:	0903      	lsrs	r3, r0, #4
    3eb6:	428b      	cmp	r3, r1
    3eb8:	d35f      	bcc.n	3f7a <__udivsi3+0xce>
    3eba:	0a03      	lsrs	r3, r0, #8
    3ebc:	428b      	cmp	r3, r1
    3ebe:	d344      	bcc.n	3f4a <__udivsi3+0x9e>
    3ec0:	0b03      	lsrs	r3, r0, #12
    3ec2:	428b      	cmp	r3, r1
    3ec4:	d328      	bcc.n	3f18 <__udivsi3+0x6c>
    3ec6:	0c03      	lsrs	r3, r0, #16
    3ec8:	428b      	cmp	r3, r1
    3eca:	d30d      	bcc.n	3ee8 <__udivsi3+0x3c>
    3ecc:	22ff      	movs	r2, #255	; 0xff
    3ece:	0209      	lsls	r1, r1, #8
    3ed0:	ba12      	rev	r2, r2
    3ed2:	0c03      	lsrs	r3, r0, #16
    3ed4:	428b      	cmp	r3, r1
    3ed6:	d302      	bcc.n	3ede <__udivsi3+0x32>
    3ed8:	1212      	asrs	r2, r2, #8
    3eda:	0209      	lsls	r1, r1, #8
    3edc:	d065      	beq.n	3faa <__udivsi3+0xfe>
    3ede:	0b03      	lsrs	r3, r0, #12
    3ee0:	428b      	cmp	r3, r1
    3ee2:	d319      	bcc.n	3f18 <__udivsi3+0x6c>
    3ee4:	e000      	b.n	3ee8 <__udivsi3+0x3c>
    3ee6:	0a09      	lsrs	r1, r1, #8
    3ee8:	0bc3      	lsrs	r3, r0, #15
    3eea:	428b      	cmp	r3, r1
    3eec:	d301      	bcc.n	3ef2 <__udivsi3+0x46>
    3eee:	03cb      	lsls	r3, r1, #15
    3ef0:	1ac0      	subs	r0, r0, r3
    3ef2:	4152      	adcs	r2, r2
    3ef4:	0b83      	lsrs	r3, r0, #14
    3ef6:	428b      	cmp	r3, r1
    3ef8:	d301      	bcc.n	3efe <__udivsi3+0x52>
    3efa:	038b      	lsls	r3, r1, #14
    3efc:	1ac0      	subs	r0, r0, r3
    3efe:	4152      	adcs	r2, r2
    3f00:	0b43      	lsrs	r3, r0, #13
    3f02:	428b      	cmp	r3, r1
    3f04:	d301      	bcc.n	3f0a <__udivsi3+0x5e>
    3f06:	034b      	lsls	r3, r1, #13
    3f08:	1ac0      	subs	r0, r0, r3
    3f0a:	4152      	adcs	r2, r2
    3f0c:	0b03      	lsrs	r3, r0, #12
    3f0e:	428b      	cmp	r3, r1
    3f10:	d301      	bcc.n	3f16 <__udivsi3+0x6a>
    3f12:	030b      	lsls	r3, r1, #12
    3f14:	1ac0      	subs	r0, r0, r3
    3f16:	4152      	adcs	r2, r2
    3f18:	0ac3      	lsrs	r3, r0, #11
    3f1a:	428b      	cmp	r3, r1
    3f1c:	d301      	bcc.n	3f22 <__udivsi3+0x76>
    3f1e:	02cb      	lsls	r3, r1, #11
    3f20:	1ac0      	subs	r0, r0, r3
    3f22:	4152      	adcs	r2, r2
    3f24:	0a83      	lsrs	r3, r0, #10
    3f26:	428b      	cmp	r3, r1
    3f28:	d301      	bcc.n	3f2e <__udivsi3+0x82>
    3f2a:	028b      	lsls	r3, r1, #10
    3f2c:	1ac0      	subs	r0, r0, r3
    3f2e:	4152      	adcs	r2, r2
    3f30:	0a43      	lsrs	r3, r0, #9
    3f32:	428b      	cmp	r3, r1
    3f34:	d301      	bcc.n	3f3a <__udivsi3+0x8e>
    3f36:	024b      	lsls	r3, r1, #9
    3f38:	1ac0      	subs	r0, r0, r3
    3f3a:	4152      	adcs	r2, r2
    3f3c:	0a03      	lsrs	r3, r0, #8
    3f3e:	428b      	cmp	r3, r1
    3f40:	d301      	bcc.n	3f46 <__udivsi3+0x9a>
    3f42:	020b      	lsls	r3, r1, #8
    3f44:	1ac0      	subs	r0, r0, r3
    3f46:	4152      	adcs	r2, r2
    3f48:	d2cd      	bcs.n	3ee6 <__udivsi3+0x3a>
    3f4a:	09c3      	lsrs	r3, r0, #7
    3f4c:	428b      	cmp	r3, r1
    3f4e:	d301      	bcc.n	3f54 <__udivsi3+0xa8>
    3f50:	01cb      	lsls	r3, r1, #7
    3f52:	1ac0      	subs	r0, r0, r3
    3f54:	4152      	adcs	r2, r2
    3f56:	0983      	lsrs	r3, r0, #6
    3f58:	428b      	cmp	r3, r1
    3f5a:	d301      	bcc.n	3f60 <__udivsi3+0xb4>
    3f5c:	018b      	lsls	r3, r1, #6
    3f5e:	1ac0      	subs	r0, r0, r3
    3f60:	4152      	adcs	r2, r2
    3f62:	0943      	lsrs	r3, r0, #5
    3f64:	428b      	cmp	r3, r1
    3f66:	d301      	bcc.n	3f6c <__udivsi3+0xc0>
    3f68:	014b      	lsls	r3, r1, #5
    3f6a:	1ac0      	subs	r0, r0, r3
    3f6c:	4152      	adcs	r2, r2
    3f6e:	0903      	lsrs	r3, r0, #4
    3f70:	428b      	cmp	r3, r1
    3f72:	d301      	bcc.n	3f78 <__udivsi3+0xcc>
    3f74:	010b      	lsls	r3, r1, #4
    3f76:	1ac0      	subs	r0, r0, r3
    3f78:	4152      	adcs	r2, r2
    3f7a:	08c3      	lsrs	r3, r0, #3
    3f7c:	428b      	cmp	r3, r1
    3f7e:	d301      	bcc.n	3f84 <__udivsi3+0xd8>
    3f80:	00cb      	lsls	r3, r1, #3
    3f82:	1ac0      	subs	r0, r0, r3
    3f84:	4152      	adcs	r2, r2
    3f86:	0883      	lsrs	r3, r0, #2
    3f88:	428b      	cmp	r3, r1
    3f8a:	d301      	bcc.n	3f90 <__udivsi3+0xe4>
    3f8c:	008b      	lsls	r3, r1, #2
    3f8e:	1ac0      	subs	r0, r0, r3
    3f90:	4152      	adcs	r2, r2
    3f92:	0843      	lsrs	r3, r0, #1
    3f94:	428b      	cmp	r3, r1
    3f96:	d301      	bcc.n	3f9c <__udivsi3+0xf0>
    3f98:	004b      	lsls	r3, r1, #1
    3f9a:	1ac0      	subs	r0, r0, r3
    3f9c:	4152      	adcs	r2, r2
    3f9e:	1a41      	subs	r1, r0, r1
    3fa0:	d200      	bcs.n	3fa4 <__udivsi3+0xf8>
    3fa2:	4601      	mov	r1, r0
    3fa4:	4152      	adcs	r2, r2
    3fa6:	4610      	mov	r0, r2
    3fa8:	4770      	bx	lr
    3faa:	e7ff      	b.n	3fac <__udivsi3+0x100>
    3fac:	b501      	push	{r0, lr}
    3fae:	2000      	movs	r0, #0
    3fb0:	f000 f8f0 	bl	4194 <__aeabi_idiv0>
    3fb4:	bd02      	pop	{r1, pc}
    3fb6:	46c0      	nop			; (mov r8, r8)

00003fb8 <__aeabi_uidivmod>:
    3fb8:	2900      	cmp	r1, #0
    3fba:	d0f7      	beq.n	3fac <__udivsi3+0x100>
    3fbc:	e776      	b.n	3eac <__udivsi3>
    3fbe:	4770      	bx	lr

00003fc0 <__divsi3>:
    3fc0:	4603      	mov	r3, r0
    3fc2:	430b      	orrs	r3, r1
    3fc4:	d47f      	bmi.n	40c6 <__divsi3+0x106>
    3fc6:	2200      	movs	r2, #0
    3fc8:	0843      	lsrs	r3, r0, #1
    3fca:	428b      	cmp	r3, r1
    3fcc:	d374      	bcc.n	40b8 <__divsi3+0xf8>
    3fce:	0903      	lsrs	r3, r0, #4
    3fd0:	428b      	cmp	r3, r1
    3fd2:	d35f      	bcc.n	4094 <__divsi3+0xd4>
    3fd4:	0a03      	lsrs	r3, r0, #8
    3fd6:	428b      	cmp	r3, r1
    3fd8:	d344      	bcc.n	4064 <__divsi3+0xa4>
    3fda:	0b03      	lsrs	r3, r0, #12
    3fdc:	428b      	cmp	r3, r1
    3fde:	d328      	bcc.n	4032 <__divsi3+0x72>
    3fe0:	0c03      	lsrs	r3, r0, #16
    3fe2:	428b      	cmp	r3, r1
    3fe4:	d30d      	bcc.n	4002 <__divsi3+0x42>
    3fe6:	22ff      	movs	r2, #255	; 0xff
    3fe8:	0209      	lsls	r1, r1, #8
    3fea:	ba12      	rev	r2, r2
    3fec:	0c03      	lsrs	r3, r0, #16
    3fee:	428b      	cmp	r3, r1
    3ff0:	d302      	bcc.n	3ff8 <__divsi3+0x38>
    3ff2:	1212      	asrs	r2, r2, #8
    3ff4:	0209      	lsls	r1, r1, #8
    3ff6:	d065      	beq.n	40c4 <__divsi3+0x104>
    3ff8:	0b03      	lsrs	r3, r0, #12
    3ffa:	428b      	cmp	r3, r1
    3ffc:	d319      	bcc.n	4032 <__divsi3+0x72>
    3ffe:	e000      	b.n	4002 <__divsi3+0x42>
    4000:	0a09      	lsrs	r1, r1, #8
    4002:	0bc3      	lsrs	r3, r0, #15
    4004:	428b      	cmp	r3, r1
    4006:	d301      	bcc.n	400c <__divsi3+0x4c>
    4008:	03cb      	lsls	r3, r1, #15
    400a:	1ac0      	subs	r0, r0, r3
    400c:	4152      	adcs	r2, r2
    400e:	0b83      	lsrs	r3, r0, #14
    4010:	428b      	cmp	r3, r1
    4012:	d301      	bcc.n	4018 <__divsi3+0x58>
    4014:	038b      	lsls	r3, r1, #14
    4016:	1ac0      	subs	r0, r0, r3
    4018:	4152      	adcs	r2, r2
    401a:	0b43      	lsrs	r3, r0, #13
    401c:	428b      	cmp	r3, r1
    401e:	d301      	bcc.n	4024 <__divsi3+0x64>
    4020:	034b      	lsls	r3, r1, #13
    4022:	1ac0      	subs	r0, r0, r3
    4024:	4152      	adcs	r2, r2
    4026:	0b03      	lsrs	r3, r0, #12
    4028:	428b      	cmp	r3, r1
    402a:	d301      	bcc.n	4030 <__divsi3+0x70>
    402c:	030b      	lsls	r3, r1, #12
    402e:	1ac0      	subs	r0, r0, r3
    4030:	4152      	adcs	r2, r2
    4032:	0ac3      	lsrs	r3, r0, #11
    4034:	428b      	cmp	r3, r1
    4036:	d301      	bcc.n	403c <__divsi3+0x7c>
    4038:	02cb      	lsls	r3, r1, #11
    403a:	1ac0      	subs	r0, r0, r3
    403c:	4152      	adcs	r2, r2
    403e:	0a83      	lsrs	r3, r0, #10
    4040:	428b      	cmp	r3, r1
    4042:	d301      	bcc.n	4048 <__divsi3+0x88>
    4044:	028b      	lsls	r3, r1, #10
    4046:	1ac0      	subs	r0, r0, r3
    4048:	4152      	adcs	r2, r2
    404a:	0a43      	lsrs	r3, r0, #9
    404c:	428b      	cmp	r3, r1
    404e:	d301      	bcc.n	4054 <__divsi3+0x94>
    4050:	024b      	lsls	r3, r1, #9
    4052:	1ac0      	subs	r0, r0, r3
    4054:	4152      	adcs	r2, r2
    4056:	0a03      	lsrs	r3, r0, #8
    4058:	428b      	cmp	r3, r1
    405a:	d301      	bcc.n	4060 <__divsi3+0xa0>
    405c:	020b      	lsls	r3, r1, #8
    405e:	1ac0      	subs	r0, r0, r3
    4060:	4152      	adcs	r2, r2
    4062:	d2cd      	bcs.n	4000 <__divsi3+0x40>
    4064:	09c3      	lsrs	r3, r0, #7
    4066:	428b      	cmp	r3, r1
    4068:	d301      	bcc.n	406e <__divsi3+0xae>
    406a:	01cb      	lsls	r3, r1, #7
    406c:	1ac0      	subs	r0, r0, r3
    406e:	4152      	adcs	r2, r2
    4070:	0983      	lsrs	r3, r0, #6
    4072:	428b      	cmp	r3, r1
    4074:	d301      	bcc.n	407a <__divsi3+0xba>
    4076:	018b      	lsls	r3, r1, #6
    4078:	1ac0      	subs	r0, r0, r3
    407a:	4152      	adcs	r2, r2
    407c:	0943      	lsrs	r3, r0, #5
    407e:	428b      	cmp	r3, r1
    4080:	d301      	bcc.n	4086 <__divsi3+0xc6>
    4082:	014b      	lsls	r3, r1, #5
    4084:	1ac0      	subs	r0, r0, r3
    4086:	4152      	adcs	r2, r2
    4088:	0903      	lsrs	r3, r0, #4
    408a:	428b      	cmp	r3, r1
    408c:	d301      	bcc.n	4092 <__divsi3+0xd2>
    408e:	010b      	lsls	r3, r1, #4
    4090:	1ac0      	subs	r0, r0, r3
    4092:	4152      	adcs	r2, r2
    4094:	08c3      	lsrs	r3, r0, #3
    4096:	428b      	cmp	r3, r1
    4098:	d301      	bcc.n	409e <__divsi3+0xde>
    409a:	00cb      	lsls	r3, r1, #3
    409c:	1ac0      	subs	r0, r0, r3
    409e:	4152      	adcs	r2, r2
    40a0:	0883      	lsrs	r3, r0, #2
    40a2:	428b      	cmp	r3, r1
    40a4:	d301      	bcc.n	40aa <__divsi3+0xea>
    40a6:	008b      	lsls	r3, r1, #2
    40a8:	1ac0      	subs	r0, r0, r3
    40aa:	4152      	adcs	r2, r2
    40ac:	0843      	lsrs	r3, r0, #1
    40ae:	428b      	cmp	r3, r1
    40b0:	d301      	bcc.n	40b6 <__divsi3+0xf6>
    40b2:	004b      	lsls	r3, r1, #1
    40b4:	1ac0      	subs	r0, r0, r3
    40b6:	4152      	adcs	r2, r2
    40b8:	1a41      	subs	r1, r0, r1
    40ba:	d200      	bcs.n	40be <__divsi3+0xfe>
    40bc:	4601      	mov	r1, r0
    40be:	4152      	adcs	r2, r2
    40c0:	4610      	mov	r0, r2
    40c2:	4770      	bx	lr
    40c4:	e05d      	b.n	4182 <__divsi3+0x1c2>
    40c6:	0fca      	lsrs	r2, r1, #31
    40c8:	d000      	beq.n	40cc <__divsi3+0x10c>
    40ca:	4249      	negs	r1, r1
    40cc:	1003      	asrs	r3, r0, #32
    40ce:	d300      	bcc.n	40d2 <__divsi3+0x112>
    40d0:	4240      	negs	r0, r0
    40d2:	4053      	eors	r3, r2
    40d4:	2200      	movs	r2, #0
    40d6:	469c      	mov	ip, r3
    40d8:	0903      	lsrs	r3, r0, #4
    40da:	428b      	cmp	r3, r1
    40dc:	d32d      	bcc.n	413a <__divsi3+0x17a>
    40de:	0a03      	lsrs	r3, r0, #8
    40e0:	428b      	cmp	r3, r1
    40e2:	d312      	bcc.n	410a <__divsi3+0x14a>
    40e4:	22fc      	movs	r2, #252	; 0xfc
    40e6:	0189      	lsls	r1, r1, #6
    40e8:	ba12      	rev	r2, r2
    40ea:	0a03      	lsrs	r3, r0, #8
    40ec:	428b      	cmp	r3, r1
    40ee:	d30c      	bcc.n	410a <__divsi3+0x14a>
    40f0:	0189      	lsls	r1, r1, #6
    40f2:	1192      	asrs	r2, r2, #6
    40f4:	428b      	cmp	r3, r1
    40f6:	d308      	bcc.n	410a <__divsi3+0x14a>
    40f8:	0189      	lsls	r1, r1, #6
    40fa:	1192      	asrs	r2, r2, #6
    40fc:	428b      	cmp	r3, r1
    40fe:	d304      	bcc.n	410a <__divsi3+0x14a>
    4100:	0189      	lsls	r1, r1, #6
    4102:	d03a      	beq.n	417a <__divsi3+0x1ba>
    4104:	1192      	asrs	r2, r2, #6
    4106:	e000      	b.n	410a <__divsi3+0x14a>
    4108:	0989      	lsrs	r1, r1, #6
    410a:	09c3      	lsrs	r3, r0, #7
    410c:	428b      	cmp	r3, r1
    410e:	d301      	bcc.n	4114 <__divsi3+0x154>
    4110:	01cb      	lsls	r3, r1, #7
    4112:	1ac0      	subs	r0, r0, r3
    4114:	4152      	adcs	r2, r2
    4116:	0983      	lsrs	r3, r0, #6
    4118:	428b      	cmp	r3, r1
    411a:	d301      	bcc.n	4120 <__divsi3+0x160>
    411c:	018b      	lsls	r3, r1, #6
    411e:	1ac0      	subs	r0, r0, r3
    4120:	4152      	adcs	r2, r2
    4122:	0943      	lsrs	r3, r0, #5
    4124:	428b      	cmp	r3, r1
    4126:	d301      	bcc.n	412c <__divsi3+0x16c>
    4128:	014b      	lsls	r3, r1, #5
    412a:	1ac0      	subs	r0, r0, r3
    412c:	4152      	adcs	r2, r2
    412e:	0903      	lsrs	r3, r0, #4
    4130:	428b      	cmp	r3, r1
    4132:	d301      	bcc.n	4138 <__divsi3+0x178>
    4134:	010b      	lsls	r3, r1, #4
    4136:	1ac0      	subs	r0, r0, r3
    4138:	4152      	adcs	r2, r2
    413a:	08c3      	lsrs	r3, r0, #3
    413c:	428b      	cmp	r3, r1
    413e:	d301      	bcc.n	4144 <__divsi3+0x184>
    4140:	00cb      	lsls	r3, r1, #3
    4142:	1ac0      	subs	r0, r0, r3
    4144:	4152      	adcs	r2, r2
    4146:	0883      	lsrs	r3, r0, #2
    4148:	428b      	cmp	r3, r1
    414a:	d301      	bcc.n	4150 <__divsi3+0x190>
    414c:	008b      	lsls	r3, r1, #2
    414e:	1ac0      	subs	r0, r0, r3
    4150:	4152      	adcs	r2, r2
    4152:	d2d9      	bcs.n	4108 <__divsi3+0x148>
    4154:	0843      	lsrs	r3, r0, #1
    4156:	428b      	cmp	r3, r1
    4158:	d301      	bcc.n	415e <__divsi3+0x19e>
    415a:	004b      	lsls	r3, r1, #1
    415c:	1ac0      	subs	r0, r0, r3
    415e:	4152      	adcs	r2, r2
    4160:	1a41      	subs	r1, r0, r1
    4162:	d200      	bcs.n	4166 <__divsi3+0x1a6>
    4164:	4601      	mov	r1, r0
    4166:	4663      	mov	r3, ip
    4168:	4152      	adcs	r2, r2
    416a:	105b      	asrs	r3, r3, #1
    416c:	4610      	mov	r0, r2
    416e:	d301      	bcc.n	4174 <__divsi3+0x1b4>
    4170:	4240      	negs	r0, r0
    4172:	2b00      	cmp	r3, #0
    4174:	d500      	bpl.n	4178 <__divsi3+0x1b8>
    4176:	4249      	negs	r1, r1
    4178:	4770      	bx	lr
    417a:	4663      	mov	r3, ip
    417c:	105b      	asrs	r3, r3, #1
    417e:	d300      	bcc.n	4182 <__divsi3+0x1c2>
    4180:	4240      	negs	r0, r0
    4182:	b501      	push	{r0, lr}
    4184:	2000      	movs	r0, #0
    4186:	f000 f805 	bl	4194 <__aeabi_idiv0>
    418a:	bd02      	pop	{r1, pc}

0000418c <__aeabi_idivmod>:
    418c:	2900      	cmp	r1, #0
    418e:	d0f8      	beq.n	4182 <__divsi3+0x1c2>
    4190:	e716      	b.n	3fc0 <__divsi3>
    4192:	4770      	bx	lr

00004194 <__aeabi_idiv0>:
    4194:	4770      	bx	lr
    4196:	46c0      	nop			; (mov r8, r8)

00004198 <__aeabi_cdrcmple>:
    4198:	4684      	mov	ip, r0
    419a:	1c10      	adds	r0, r2, #0
    419c:	4662      	mov	r2, ip
    419e:	468c      	mov	ip, r1
    41a0:	1c19      	adds	r1, r3, #0
    41a2:	4663      	mov	r3, ip
    41a4:	e000      	b.n	41a8 <__aeabi_cdcmpeq>
    41a6:	46c0      	nop			; (mov r8, r8)

000041a8 <__aeabi_cdcmpeq>:
    41a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    41aa:	f000 ff33 	bl	5014 <__ledf2>
    41ae:	2800      	cmp	r0, #0
    41b0:	d401      	bmi.n	41b6 <__aeabi_cdcmpeq+0xe>
    41b2:	2100      	movs	r1, #0
    41b4:	42c8      	cmn	r0, r1
    41b6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000041b8 <__aeabi_dcmpeq>:
    41b8:	b510      	push	{r4, lr}
    41ba:	f000 fe8d 	bl	4ed8 <__eqdf2>
    41be:	4240      	negs	r0, r0
    41c0:	3001      	adds	r0, #1
    41c2:	bd10      	pop	{r4, pc}

000041c4 <__aeabi_dcmplt>:
    41c4:	b510      	push	{r4, lr}
    41c6:	f000 ff25 	bl	5014 <__ledf2>
    41ca:	2800      	cmp	r0, #0
    41cc:	db01      	blt.n	41d2 <__aeabi_dcmplt+0xe>
    41ce:	2000      	movs	r0, #0
    41d0:	bd10      	pop	{r4, pc}
    41d2:	2001      	movs	r0, #1
    41d4:	bd10      	pop	{r4, pc}
    41d6:	46c0      	nop			; (mov r8, r8)

000041d8 <__aeabi_dcmple>:
    41d8:	b510      	push	{r4, lr}
    41da:	f000 ff1b 	bl	5014 <__ledf2>
    41de:	2800      	cmp	r0, #0
    41e0:	dd01      	ble.n	41e6 <__aeabi_dcmple+0xe>
    41e2:	2000      	movs	r0, #0
    41e4:	bd10      	pop	{r4, pc}
    41e6:	2001      	movs	r0, #1
    41e8:	bd10      	pop	{r4, pc}
    41ea:	46c0      	nop			; (mov r8, r8)

000041ec <__aeabi_dcmpgt>:
    41ec:	b510      	push	{r4, lr}
    41ee:	f000 fead 	bl	4f4c <__gedf2>
    41f2:	2800      	cmp	r0, #0
    41f4:	dc01      	bgt.n	41fa <__aeabi_dcmpgt+0xe>
    41f6:	2000      	movs	r0, #0
    41f8:	bd10      	pop	{r4, pc}
    41fa:	2001      	movs	r0, #1
    41fc:	bd10      	pop	{r4, pc}
    41fe:	46c0      	nop			; (mov r8, r8)

00004200 <__aeabi_dcmpge>:
    4200:	b510      	push	{r4, lr}
    4202:	f000 fea3 	bl	4f4c <__gedf2>
    4206:	2800      	cmp	r0, #0
    4208:	da01      	bge.n	420e <__aeabi_dcmpge+0xe>
    420a:	2000      	movs	r0, #0
    420c:	bd10      	pop	{r4, pc}
    420e:	2001      	movs	r0, #1
    4210:	bd10      	pop	{r4, pc}
    4212:	46c0      	nop			; (mov r8, r8)

00004214 <__aeabi_d2uiz>:
    4214:	b570      	push	{r4, r5, r6, lr}
    4216:	2200      	movs	r2, #0
    4218:	4b0c      	ldr	r3, [pc, #48]	; (424c <__aeabi_d2uiz+0x38>)
    421a:	0004      	movs	r4, r0
    421c:	000d      	movs	r5, r1
    421e:	f7ff ffef 	bl	4200 <__aeabi_dcmpge>
    4222:	2800      	cmp	r0, #0
    4224:	d104      	bne.n	4230 <__aeabi_d2uiz+0x1c>
    4226:	0020      	movs	r0, r4
    4228:	0029      	movs	r1, r5
    422a:	f001 fd0b 	bl	5c44 <__aeabi_d2iz>
    422e:	bd70      	pop	{r4, r5, r6, pc}
    4230:	4b06      	ldr	r3, [pc, #24]	; (424c <__aeabi_d2uiz+0x38>)
    4232:	2200      	movs	r2, #0
    4234:	0020      	movs	r0, r4
    4236:	0029      	movs	r1, r5
    4238:	f001 f9ce 	bl	55d8 <__aeabi_dsub>
    423c:	f001 fd02 	bl	5c44 <__aeabi_d2iz>
    4240:	2380      	movs	r3, #128	; 0x80
    4242:	061b      	lsls	r3, r3, #24
    4244:	469c      	mov	ip, r3
    4246:	4460      	add	r0, ip
    4248:	e7f1      	b.n	422e <__aeabi_d2uiz+0x1a>
    424a:	46c0      	nop			; (mov r8, r8)
    424c:	41e00000 	.word	0x41e00000

00004250 <__aeabi_dadd>:
    4250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4252:	4645      	mov	r5, r8
    4254:	46de      	mov	lr, fp
    4256:	4657      	mov	r7, sl
    4258:	464e      	mov	r6, r9
    425a:	030c      	lsls	r4, r1, #12
    425c:	b5e0      	push	{r5, r6, r7, lr}
    425e:	004e      	lsls	r6, r1, #1
    4260:	0fc9      	lsrs	r1, r1, #31
    4262:	4688      	mov	r8, r1
    4264:	000d      	movs	r5, r1
    4266:	0a61      	lsrs	r1, r4, #9
    4268:	0f44      	lsrs	r4, r0, #29
    426a:	430c      	orrs	r4, r1
    426c:	00c7      	lsls	r7, r0, #3
    426e:	0319      	lsls	r1, r3, #12
    4270:	0058      	lsls	r0, r3, #1
    4272:	0fdb      	lsrs	r3, r3, #31
    4274:	469b      	mov	fp, r3
    4276:	0a4b      	lsrs	r3, r1, #9
    4278:	0f51      	lsrs	r1, r2, #29
    427a:	430b      	orrs	r3, r1
    427c:	0d76      	lsrs	r6, r6, #21
    427e:	0d40      	lsrs	r0, r0, #21
    4280:	0019      	movs	r1, r3
    4282:	00d2      	lsls	r2, r2, #3
    4284:	45d8      	cmp	r8, fp
    4286:	d100      	bne.n	428a <__aeabi_dadd+0x3a>
    4288:	e0ae      	b.n	43e8 <__aeabi_dadd+0x198>
    428a:	1a35      	subs	r5, r6, r0
    428c:	2d00      	cmp	r5, #0
    428e:	dc00      	bgt.n	4292 <__aeabi_dadd+0x42>
    4290:	e0f6      	b.n	4480 <__aeabi_dadd+0x230>
    4292:	2800      	cmp	r0, #0
    4294:	d10f      	bne.n	42b6 <__aeabi_dadd+0x66>
    4296:	4313      	orrs	r3, r2
    4298:	d100      	bne.n	429c <__aeabi_dadd+0x4c>
    429a:	e0db      	b.n	4454 <__aeabi_dadd+0x204>
    429c:	1e6b      	subs	r3, r5, #1
    429e:	2b00      	cmp	r3, #0
    42a0:	d000      	beq.n	42a4 <__aeabi_dadd+0x54>
    42a2:	e137      	b.n	4514 <__aeabi_dadd+0x2c4>
    42a4:	1aba      	subs	r2, r7, r2
    42a6:	4297      	cmp	r7, r2
    42a8:	41bf      	sbcs	r7, r7
    42aa:	1a64      	subs	r4, r4, r1
    42ac:	427f      	negs	r7, r7
    42ae:	1be4      	subs	r4, r4, r7
    42b0:	2601      	movs	r6, #1
    42b2:	0017      	movs	r7, r2
    42b4:	e024      	b.n	4300 <__aeabi_dadd+0xb0>
    42b6:	4bc6      	ldr	r3, [pc, #792]	; (45d0 <__aeabi_dadd+0x380>)
    42b8:	429e      	cmp	r6, r3
    42ba:	d04d      	beq.n	4358 <__aeabi_dadd+0x108>
    42bc:	2380      	movs	r3, #128	; 0x80
    42be:	041b      	lsls	r3, r3, #16
    42c0:	4319      	orrs	r1, r3
    42c2:	2d38      	cmp	r5, #56	; 0x38
    42c4:	dd00      	ble.n	42c8 <__aeabi_dadd+0x78>
    42c6:	e107      	b.n	44d8 <__aeabi_dadd+0x288>
    42c8:	2d1f      	cmp	r5, #31
    42ca:	dd00      	ble.n	42ce <__aeabi_dadd+0x7e>
    42cc:	e138      	b.n	4540 <__aeabi_dadd+0x2f0>
    42ce:	2020      	movs	r0, #32
    42d0:	1b43      	subs	r3, r0, r5
    42d2:	469a      	mov	sl, r3
    42d4:	000b      	movs	r3, r1
    42d6:	4650      	mov	r0, sl
    42d8:	4083      	lsls	r3, r0
    42da:	4699      	mov	r9, r3
    42dc:	0013      	movs	r3, r2
    42de:	4648      	mov	r0, r9
    42e0:	40eb      	lsrs	r3, r5
    42e2:	4318      	orrs	r0, r3
    42e4:	0003      	movs	r3, r0
    42e6:	4650      	mov	r0, sl
    42e8:	4082      	lsls	r2, r0
    42ea:	1e50      	subs	r0, r2, #1
    42ec:	4182      	sbcs	r2, r0
    42ee:	40e9      	lsrs	r1, r5
    42f0:	431a      	orrs	r2, r3
    42f2:	1aba      	subs	r2, r7, r2
    42f4:	1a61      	subs	r1, r4, r1
    42f6:	4297      	cmp	r7, r2
    42f8:	41a4      	sbcs	r4, r4
    42fa:	0017      	movs	r7, r2
    42fc:	4264      	negs	r4, r4
    42fe:	1b0c      	subs	r4, r1, r4
    4300:	0223      	lsls	r3, r4, #8
    4302:	d562      	bpl.n	43ca <__aeabi_dadd+0x17a>
    4304:	0264      	lsls	r4, r4, #9
    4306:	0a65      	lsrs	r5, r4, #9
    4308:	2d00      	cmp	r5, #0
    430a:	d100      	bne.n	430e <__aeabi_dadd+0xbe>
    430c:	e0df      	b.n	44ce <__aeabi_dadd+0x27e>
    430e:	0028      	movs	r0, r5
    4310:	f001 fd0e 	bl	5d30 <__clzsi2>
    4314:	0003      	movs	r3, r0
    4316:	3b08      	subs	r3, #8
    4318:	2b1f      	cmp	r3, #31
    431a:	dd00      	ble.n	431e <__aeabi_dadd+0xce>
    431c:	e0d2      	b.n	44c4 <__aeabi_dadd+0x274>
    431e:	2220      	movs	r2, #32
    4320:	003c      	movs	r4, r7
    4322:	1ad2      	subs	r2, r2, r3
    4324:	409d      	lsls	r5, r3
    4326:	40d4      	lsrs	r4, r2
    4328:	409f      	lsls	r7, r3
    432a:	4325      	orrs	r5, r4
    432c:	429e      	cmp	r6, r3
    432e:	dd00      	ble.n	4332 <__aeabi_dadd+0xe2>
    4330:	e0c4      	b.n	44bc <__aeabi_dadd+0x26c>
    4332:	1b9e      	subs	r6, r3, r6
    4334:	1c73      	adds	r3, r6, #1
    4336:	2b1f      	cmp	r3, #31
    4338:	dd00      	ble.n	433c <__aeabi_dadd+0xec>
    433a:	e0f1      	b.n	4520 <__aeabi_dadd+0x2d0>
    433c:	2220      	movs	r2, #32
    433e:	0038      	movs	r0, r7
    4340:	0029      	movs	r1, r5
    4342:	1ad2      	subs	r2, r2, r3
    4344:	40d8      	lsrs	r0, r3
    4346:	4091      	lsls	r1, r2
    4348:	4097      	lsls	r7, r2
    434a:	002c      	movs	r4, r5
    434c:	4301      	orrs	r1, r0
    434e:	1e78      	subs	r0, r7, #1
    4350:	4187      	sbcs	r7, r0
    4352:	40dc      	lsrs	r4, r3
    4354:	2600      	movs	r6, #0
    4356:	430f      	orrs	r7, r1
    4358:	077b      	lsls	r3, r7, #29
    435a:	d009      	beq.n	4370 <__aeabi_dadd+0x120>
    435c:	230f      	movs	r3, #15
    435e:	403b      	ands	r3, r7
    4360:	2b04      	cmp	r3, #4
    4362:	d005      	beq.n	4370 <__aeabi_dadd+0x120>
    4364:	1d3b      	adds	r3, r7, #4
    4366:	42bb      	cmp	r3, r7
    4368:	41bf      	sbcs	r7, r7
    436a:	427f      	negs	r7, r7
    436c:	19e4      	adds	r4, r4, r7
    436e:	001f      	movs	r7, r3
    4370:	0223      	lsls	r3, r4, #8
    4372:	d52c      	bpl.n	43ce <__aeabi_dadd+0x17e>
    4374:	4b96      	ldr	r3, [pc, #600]	; (45d0 <__aeabi_dadd+0x380>)
    4376:	3601      	adds	r6, #1
    4378:	429e      	cmp	r6, r3
    437a:	d100      	bne.n	437e <__aeabi_dadd+0x12e>
    437c:	e09a      	b.n	44b4 <__aeabi_dadd+0x264>
    437e:	4645      	mov	r5, r8
    4380:	4b94      	ldr	r3, [pc, #592]	; (45d4 <__aeabi_dadd+0x384>)
    4382:	08ff      	lsrs	r7, r7, #3
    4384:	401c      	ands	r4, r3
    4386:	0760      	lsls	r0, r4, #29
    4388:	0576      	lsls	r6, r6, #21
    438a:	0264      	lsls	r4, r4, #9
    438c:	4307      	orrs	r7, r0
    438e:	0b24      	lsrs	r4, r4, #12
    4390:	0d76      	lsrs	r6, r6, #21
    4392:	2100      	movs	r1, #0
    4394:	0324      	lsls	r4, r4, #12
    4396:	0b23      	lsrs	r3, r4, #12
    4398:	0d0c      	lsrs	r4, r1, #20
    439a:	4a8f      	ldr	r2, [pc, #572]	; (45d8 <__aeabi_dadd+0x388>)
    439c:	0524      	lsls	r4, r4, #20
    439e:	431c      	orrs	r4, r3
    43a0:	4014      	ands	r4, r2
    43a2:	0533      	lsls	r3, r6, #20
    43a4:	4323      	orrs	r3, r4
    43a6:	005b      	lsls	r3, r3, #1
    43a8:	07ed      	lsls	r5, r5, #31
    43aa:	085b      	lsrs	r3, r3, #1
    43ac:	432b      	orrs	r3, r5
    43ae:	0038      	movs	r0, r7
    43b0:	0019      	movs	r1, r3
    43b2:	bc3c      	pop	{r2, r3, r4, r5}
    43b4:	4690      	mov	r8, r2
    43b6:	4699      	mov	r9, r3
    43b8:	46a2      	mov	sl, r4
    43ba:	46ab      	mov	fp, r5
    43bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    43be:	4664      	mov	r4, ip
    43c0:	4304      	orrs	r4, r0
    43c2:	d100      	bne.n	43c6 <__aeabi_dadd+0x176>
    43c4:	e211      	b.n	47ea <__aeabi_dadd+0x59a>
    43c6:	0004      	movs	r4, r0
    43c8:	4667      	mov	r7, ip
    43ca:	077b      	lsls	r3, r7, #29
    43cc:	d1c6      	bne.n	435c <__aeabi_dadd+0x10c>
    43ce:	4645      	mov	r5, r8
    43d0:	0760      	lsls	r0, r4, #29
    43d2:	08ff      	lsrs	r7, r7, #3
    43d4:	4307      	orrs	r7, r0
    43d6:	08e4      	lsrs	r4, r4, #3
    43d8:	4b7d      	ldr	r3, [pc, #500]	; (45d0 <__aeabi_dadd+0x380>)
    43da:	429e      	cmp	r6, r3
    43dc:	d030      	beq.n	4440 <__aeabi_dadd+0x1f0>
    43de:	0324      	lsls	r4, r4, #12
    43e0:	0576      	lsls	r6, r6, #21
    43e2:	0b24      	lsrs	r4, r4, #12
    43e4:	0d76      	lsrs	r6, r6, #21
    43e6:	e7d4      	b.n	4392 <__aeabi_dadd+0x142>
    43e8:	1a33      	subs	r3, r6, r0
    43ea:	469a      	mov	sl, r3
    43ec:	2b00      	cmp	r3, #0
    43ee:	dd78      	ble.n	44e2 <__aeabi_dadd+0x292>
    43f0:	2800      	cmp	r0, #0
    43f2:	d031      	beq.n	4458 <__aeabi_dadd+0x208>
    43f4:	4876      	ldr	r0, [pc, #472]	; (45d0 <__aeabi_dadd+0x380>)
    43f6:	4286      	cmp	r6, r0
    43f8:	d0ae      	beq.n	4358 <__aeabi_dadd+0x108>
    43fa:	2080      	movs	r0, #128	; 0x80
    43fc:	0400      	lsls	r0, r0, #16
    43fe:	4301      	orrs	r1, r0
    4400:	4653      	mov	r3, sl
    4402:	2b38      	cmp	r3, #56	; 0x38
    4404:	dc00      	bgt.n	4408 <__aeabi_dadd+0x1b8>
    4406:	e0e9      	b.n	45dc <__aeabi_dadd+0x38c>
    4408:	430a      	orrs	r2, r1
    440a:	1e51      	subs	r1, r2, #1
    440c:	418a      	sbcs	r2, r1
    440e:	2100      	movs	r1, #0
    4410:	19d2      	adds	r2, r2, r7
    4412:	42ba      	cmp	r2, r7
    4414:	41bf      	sbcs	r7, r7
    4416:	1909      	adds	r1, r1, r4
    4418:	427c      	negs	r4, r7
    441a:	0017      	movs	r7, r2
    441c:	190c      	adds	r4, r1, r4
    441e:	0223      	lsls	r3, r4, #8
    4420:	d5d3      	bpl.n	43ca <__aeabi_dadd+0x17a>
    4422:	4b6b      	ldr	r3, [pc, #428]	; (45d0 <__aeabi_dadd+0x380>)
    4424:	3601      	adds	r6, #1
    4426:	429e      	cmp	r6, r3
    4428:	d100      	bne.n	442c <__aeabi_dadd+0x1dc>
    442a:	e13a      	b.n	46a2 <__aeabi_dadd+0x452>
    442c:	2001      	movs	r0, #1
    442e:	4b69      	ldr	r3, [pc, #420]	; (45d4 <__aeabi_dadd+0x384>)
    4430:	401c      	ands	r4, r3
    4432:	087b      	lsrs	r3, r7, #1
    4434:	4007      	ands	r7, r0
    4436:	431f      	orrs	r7, r3
    4438:	07e0      	lsls	r0, r4, #31
    443a:	4307      	orrs	r7, r0
    443c:	0864      	lsrs	r4, r4, #1
    443e:	e78b      	b.n	4358 <__aeabi_dadd+0x108>
    4440:	0023      	movs	r3, r4
    4442:	433b      	orrs	r3, r7
    4444:	d100      	bne.n	4448 <__aeabi_dadd+0x1f8>
    4446:	e1cb      	b.n	47e0 <__aeabi_dadd+0x590>
    4448:	2280      	movs	r2, #128	; 0x80
    444a:	0312      	lsls	r2, r2, #12
    444c:	4314      	orrs	r4, r2
    444e:	0324      	lsls	r4, r4, #12
    4450:	0b24      	lsrs	r4, r4, #12
    4452:	e79e      	b.n	4392 <__aeabi_dadd+0x142>
    4454:	002e      	movs	r6, r5
    4456:	e77f      	b.n	4358 <__aeabi_dadd+0x108>
    4458:	0008      	movs	r0, r1
    445a:	4310      	orrs	r0, r2
    445c:	d100      	bne.n	4460 <__aeabi_dadd+0x210>
    445e:	e0b4      	b.n	45ca <__aeabi_dadd+0x37a>
    4460:	1e58      	subs	r0, r3, #1
    4462:	2800      	cmp	r0, #0
    4464:	d000      	beq.n	4468 <__aeabi_dadd+0x218>
    4466:	e0de      	b.n	4626 <__aeabi_dadd+0x3d6>
    4468:	18ba      	adds	r2, r7, r2
    446a:	42ba      	cmp	r2, r7
    446c:	419b      	sbcs	r3, r3
    446e:	1864      	adds	r4, r4, r1
    4470:	425b      	negs	r3, r3
    4472:	18e4      	adds	r4, r4, r3
    4474:	0017      	movs	r7, r2
    4476:	2601      	movs	r6, #1
    4478:	0223      	lsls	r3, r4, #8
    447a:	d5a6      	bpl.n	43ca <__aeabi_dadd+0x17a>
    447c:	2602      	movs	r6, #2
    447e:	e7d5      	b.n	442c <__aeabi_dadd+0x1dc>
    4480:	2d00      	cmp	r5, #0
    4482:	d16e      	bne.n	4562 <__aeabi_dadd+0x312>
    4484:	1c70      	adds	r0, r6, #1
    4486:	0540      	lsls	r0, r0, #21
    4488:	0d40      	lsrs	r0, r0, #21
    448a:	2801      	cmp	r0, #1
    448c:	dc00      	bgt.n	4490 <__aeabi_dadd+0x240>
    448e:	e0f9      	b.n	4684 <__aeabi_dadd+0x434>
    4490:	1ab8      	subs	r0, r7, r2
    4492:	4684      	mov	ip, r0
    4494:	4287      	cmp	r7, r0
    4496:	4180      	sbcs	r0, r0
    4498:	1ae5      	subs	r5, r4, r3
    449a:	4240      	negs	r0, r0
    449c:	1a2d      	subs	r5, r5, r0
    449e:	0228      	lsls	r0, r5, #8
    44a0:	d400      	bmi.n	44a4 <__aeabi_dadd+0x254>
    44a2:	e089      	b.n	45b8 <__aeabi_dadd+0x368>
    44a4:	1bd7      	subs	r7, r2, r7
    44a6:	42ba      	cmp	r2, r7
    44a8:	4192      	sbcs	r2, r2
    44aa:	1b1c      	subs	r4, r3, r4
    44ac:	4252      	negs	r2, r2
    44ae:	1aa5      	subs	r5, r4, r2
    44b0:	46d8      	mov	r8, fp
    44b2:	e729      	b.n	4308 <__aeabi_dadd+0xb8>
    44b4:	4645      	mov	r5, r8
    44b6:	2400      	movs	r4, #0
    44b8:	2700      	movs	r7, #0
    44ba:	e76a      	b.n	4392 <__aeabi_dadd+0x142>
    44bc:	4c45      	ldr	r4, [pc, #276]	; (45d4 <__aeabi_dadd+0x384>)
    44be:	1af6      	subs	r6, r6, r3
    44c0:	402c      	ands	r4, r5
    44c2:	e749      	b.n	4358 <__aeabi_dadd+0x108>
    44c4:	003d      	movs	r5, r7
    44c6:	3828      	subs	r0, #40	; 0x28
    44c8:	4085      	lsls	r5, r0
    44ca:	2700      	movs	r7, #0
    44cc:	e72e      	b.n	432c <__aeabi_dadd+0xdc>
    44ce:	0038      	movs	r0, r7
    44d0:	f001 fc2e 	bl	5d30 <__clzsi2>
    44d4:	3020      	adds	r0, #32
    44d6:	e71d      	b.n	4314 <__aeabi_dadd+0xc4>
    44d8:	430a      	orrs	r2, r1
    44da:	1e51      	subs	r1, r2, #1
    44dc:	418a      	sbcs	r2, r1
    44de:	2100      	movs	r1, #0
    44e0:	e707      	b.n	42f2 <__aeabi_dadd+0xa2>
    44e2:	2b00      	cmp	r3, #0
    44e4:	d000      	beq.n	44e8 <__aeabi_dadd+0x298>
    44e6:	e0f3      	b.n	46d0 <__aeabi_dadd+0x480>
    44e8:	1c70      	adds	r0, r6, #1
    44ea:	0543      	lsls	r3, r0, #21
    44ec:	0d5b      	lsrs	r3, r3, #21
    44ee:	2b01      	cmp	r3, #1
    44f0:	dc00      	bgt.n	44f4 <__aeabi_dadd+0x2a4>
    44f2:	e0ad      	b.n	4650 <__aeabi_dadd+0x400>
    44f4:	4b36      	ldr	r3, [pc, #216]	; (45d0 <__aeabi_dadd+0x380>)
    44f6:	4298      	cmp	r0, r3
    44f8:	d100      	bne.n	44fc <__aeabi_dadd+0x2ac>
    44fa:	e0d1      	b.n	46a0 <__aeabi_dadd+0x450>
    44fc:	18ba      	adds	r2, r7, r2
    44fe:	42ba      	cmp	r2, r7
    4500:	41bf      	sbcs	r7, r7
    4502:	1864      	adds	r4, r4, r1
    4504:	427f      	negs	r7, r7
    4506:	19e4      	adds	r4, r4, r7
    4508:	07e7      	lsls	r7, r4, #31
    450a:	0852      	lsrs	r2, r2, #1
    450c:	4317      	orrs	r7, r2
    450e:	0864      	lsrs	r4, r4, #1
    4510:	0006      	movs	r6, r0
    4512:	e721      	b.n	4358 <__aeabi_dadd+0x108>
    4514:	482e      	ldr	r0, [pc, #184]	; (45d0 <__aeabi_dadd+0x380>)
    4516:	4285      	cmp	r5, r0
    4518:	d100      	bne.n	451c <__aeabi_dadd+0x2cc>
    451a:	e093      	b.n	4644 <__aeabi_dadd+0x3f4>
    451c:	001d      	movs	r5, r3
    451e:	e6d0      	b.n	42c2 <__aeabi_dadd+0x72>
    4520:	0029      	movs	r1, r5
    4522:	3e1f      	subs	r6, #31
    4524:	40f1      	lsrs	r1, r6
    4526:	2b20      	cmp	r3, #32
    4528:	d100      	bne.n	452c <__aeabi_dadd+0x2dc>
    452a:	e08d      	b.n	4648 <__aeabi_dadd+0x3f8>
    452c:	2240      	movs	r2, #64	; 0x40
    452e:	1ad3      	subs	r3, r2, r3
    4530:	409d      	lsls	r5, r3
    4532:	432f      	orrs	r7, r5
    4534:	1e7d      	subs	r5, r7, #1
    4536:	41af      	sbcs	r7, r5
    4538:	2400      	movs	r4, #0
    453a:	430f      	orrs	r7, r1
    453c:	2600      	movs	r6, #0
    453e:	e744      	b.n	43ca <__aeabi_dadd+0x17a>
    4540:	002b      	movs	r3, r5
    4542:	0008      	movs	r0, r1
    4544:	3b20      	subs	r3, #32
    4546:	40d8      	lsrs	r0, r3
    4548:	0003      	movs	r3, r0
    454a:	2d20      	cmp	r5, #32
    454c:	d100      	bne.n	4550 <__aeabi_dadd+0x300>
    454e:	e07d      	b.n	464c <__aeabi_dadd+0x3fc>
    4550:	2040      	movs	r0, #64	; 0x40
    4552:	1b45      	subs	r5, r0, r5
    4554:	40a9      	lsls	r1, r5
    4556:	430a      	orrs	r2, r1
    4558:	1e51      	subs	r1, r2, #1
    455a:	418a      	sbcs	r2, r1
    455c:	2100      	movs	r1, #0
    455e:	431a      	orrs	r2, r3
    4560:	e6c7      	b.n	42f2 <__aeabi_dadd+0xa2>
    4562:	2e00      	cmp	r6, #0
    4564:	d050      	beq.n	4608 <__aeabi_dadd+0x3b8>
    4566:	4e1a      	ldr	r6, [pc, #104]	; (45d0 <__aeabi_dadd+0x380>)
    4568:	42b0      	cmp	r0, r6
    456a:	d057      	beq.n	461c <__aeabi_dadd+0x3cc>
    456c:	2680      	movs	r6, #128	; 0x80
    456e:	426b      	negs	r3, r5
    4570:	4699      	mov	r9, r3
    4572:	0436      	lsls	r6, r6, #16
    4574:	4334      	orrs	r4, r6
    4576:	464b      	mov	r3, r9
    4578:	2b38      	cmp	r3, #56	; 0x38
    457a:	dd00      	ble.n	457e <__aeabi_dadd+0x32e>
    457c:	e0d6      	b.n	472c <__aeabi_dadd+0x4dc>
    457e:	2b1f      	cmp	r3, #31
    4580:	dd00      	ble.n	4584 <__aeabi_dadd+0x334>
    4582:	e135      	b.n	47f0 <__aeabi_dadd+0x5a0>
    4584:	2620      	movs	r6, #32
    4586:	1af5      	subs	r5, r6, r3
    4588:	0026      	movs	r6, r4
    458a:	40ae      	lsls	r6, r5
    458c:	46b2      	mov	sl, r6
    458e:	003e      	movs	r6, r7
    4590:	40de      	lsrs	r6, r3
    4592:	46ac      	mov	ip, r5
    4594:	0035      	movs	r5, r6
    4596:	4656      	mov	r6, sl
    4598:	432e      	orrs	r6, r5
    459a:	4665      	mov	r5, ip
    459c:	40af      	lsls	r7, r5
    459e:	1e7d      	subs	r5, r7, #1
    45a0:	41af      	sbcs	r7, r5
    45a2:	40dc      	lsrs	r4, r3
    45a4:	4337      	orrs	r7, r6
    45a6:	1bd7      	subs	r7, r2, r7
    45a8:	42ba      	cmp	r2, r7
    45aa:	4192      	sbcs	r2, r2
    45ac:	1b0c      	subs	r4, r1, r4
    45ae:	4252      	negs	r2, r2
    45b0:	1aa4      	subs	r4, r4, r2
    45b2:	0006      	movs	r6, r0
    45b4:	46d8      	mov	r8, fp
    45b6:	e6a3      	b.n	4300 <__aeabi_dadd+0xb0>
    45b8:	4664      	mov	r4, ip
    45ba:	4667      	mov	r7, ip
    45bc:	432c      	orrs	r4, r5
    45be:	d000      	beq.n	45c2 <__aeabi_dadd+0x372>
    45c0:	e6a2      	b.n	4308 <__aeabi_dadd+0xb8>
    45c2:	2500      	movs	r5, #0
    45c4:	2600      	movs	r6, #0
    45c6:	2700      	movs	r7, #0
    45c8:	e706      	b.n	43d8 <__aeabi_dadd+0x188>
    45ca:	001e      	movs	r6, r3
    45cc:	e6c4      	b.n	4358 <__aeabi_dadd+0x108>
    45ce:	46c0      	nop			; (mov r8, r8)
    45d0:	000007ff 	.word	0x000007ff
    45d4:	ff7fffff 	.word	0xff7fffff
    45d8:	800fffff 	.word	0x800fffff
    45dc:	2b1f      	cmp	r3, #31
    45de:	dc63      	bgt.n	46a8 <__aeabi_dadd+0x458>
    45e0:	2020      	movs	r0, #32
    45e2:	1ac3      	subs	r3, r0, r3
    45e4:	0008      	movs	r0, r1
    45e6:	4098      	lsls	r0, r3
    45e8:	469c      	mov	ip, r3
    45ea:	4683      	mov	fp, r0
    45ec:	4653      	mov	r3, sl
    45ee:	0010      	movs	r0, r2
    45f0:	40d8      	lsrs	r0, r3
    45f2:	0003      	movs	r3, r0
    45f4:	4658      	mov	r0, fp
    45f6:	4318      	orrs	r0, r3
    45f8:	4663      	mov	r3, ip
    45fa:	409a      	lsls	r2, r3
    45fc:	1e53      	subs	r3, r2, #1
    45fe:	419a      	sbcs	r2, r3
    4600:	4653      	mov	r3, sl
    4602:	4302      	orrs	r2, r0
    4604:	40d9      	lsrs	r1, r3
    4606:	e703      	b.n	4410 <__aeabi_dadd+0x1c0>
    4608:	0026      	movs	r6, r4
    460a:	433e      	orrs	r6, r7
    460c:	d006      	beq.n	461c <__aeabi_dadd+0x3cc>
    460e:	43eb      	mvns	r3, r5
    4610:	4699      	mov	r9, r3
    4612:	2b00      	cmp	r3, #0
    4614:	d0c7      	beq.n	45a6 <__aeabi_dadd+0x356>
    4616:	4e94      	ldr	r6, [pc, #592]	; (4868 <__aeabi_dadd+0x618>)
    4618:	42b0      	cmp	r0, r6
    461a:	d1ac      	bne.n	4576 <__aeabi_dadd+0x326>
    461c:	000c      	movs	r4, r1
    461e:	0017      	movs	r7, r2
    4620:	0006      	movs	r6, r0
    4622:	46d8      	mov	r8, fp
    4624:	e698      	b.n	4358 <__aeabi_dadd+0x108>
    4626:	4b90      	ldr	r3, [pc, #576]	; (4868 <__aeabi_dadd+0x618>)
    4628:	459a      	cmp	sl, r3
    462a:	d00b      	beq.n	4644 <__aeabi_dadd+0x3f4>
    462c:	4682      	mov	sl, r0
    462e:	e6e7      	b.n	4400 <__aeabi_dadd+0x1b0>
    4630:	2800      	cmp	r0, #0
    4632:	d000      	beq.n	4636 <__aeabi_dadd+0x3e6>
    4634:	e09e      	b.n	4774 <__aeabi_dadd+0x524>
    4636:	0018      	movs	r0, r3
    4638:	4310      	orrs	r0, r2
    463a:	d100      	bne.n	463e <__aeabi_dadd+0x3ee>
    463c:	e0e9      	b.n	4812 <__aeabi_dadd+0x5c2>
    463e:	001c      	movs	r4, r3
    4640:	0017      	movs	r7, r2
    4642:	46d8      	mov	r8, fp
    4644:	4e88      	ldr	r6, [pc, #544]	; (4868 <__aeabi_dadd+0x618>)
    4646:	e687      	b.n	4358 <__aeabi_dadd+0x108>
    4648:	2500      	movs	r5, #0
    464a:	e772      	b.n	4532 <__aeabi_dadd+0x2e2>
    464c:	2100      	movs	r1, #0
    464e:	e782      	b.n	4556 <__aeabi_dadd+0x306>
    4650:	0023      	movs	r3, r4
    4652:	433b      	orrs	r3, r7
    4654:	2e00      	cmp	r6, #0
    4656:	d000      	beq.n	465a <__aeabi_dadd+0x40a>
    4658:	e0ab      	b.n	47b2 <__aeabi_dadd+0x562>
    465a:	2b00      	cmp	r3, #0
    465c:	d100      	bne.n	4660 <__aeabi_dadd+0x410>
    465e:	e0e7      	b.n	4830 <__aeabi_dadd+0x5e0>
    4660:	000b      	movs	r3, r1
    4662:	4313      	orrs	r3, r2
    4664:	d100      	bne.n	4668 <__aeabi_dadd+0x418>
    4666:	e677      	b.n	4358 <__aeabi_dadd+0x108>
    4668:	18ba      	adds	r2, r7, r2
    466a:	42ba      	cmp	r2, r7
    466c:	41bf      	sbcs	r7, r7
    466e:	1864      	adds	r4, r4, r1
    4670:	427f      	negs	r7, r7
    4672:	19e4      	adds	r4, r4, r7
    4674:	0223      	lsls	r3, r4, #8
    4676:	d400      	bmi.n	467a <__aeabi_dadd+0x42a>
    4678:	e0f2      	b.n	4860 <__aeabi_dadd+0x610>
    467a:	4b7c      	ldr	r3, [pc, #496]	; (486c <__aeabi_dadd+0x61c>)
    467c:	0017      	movs	r7, r2
    467e:	401c      	ands	r4, r3
    4680:	0006      	movs	r6, r0
    4682:	e669      	b.n	4358 <__aeabi_dadd+0x108>
    4684:	0020      	movs	r0, r4
    4686:	4338      	orrs	r0, r7
    4688:	2e00      	cmp	r6, #0
    468a:	d1d1      	bne.n	4630 <__aeabi_dadd+0x3e0>
    468c:	2800      	cmp	r0, #0
    468e:	d15b      	bne.n	4748 <__aeabi_dadd+0x4f8>
    4690:	001c      	movs	r4, r3
    4692:	4314      	orrs	r4, r2
    4694:	d100      	bne.n	4698 <__aeabi_dadd+0x448>
    4696:	e0a8      	b.n	47ea <__aeabi_dadd+0x59a>
    4698:	001c      	movs	r4, r3
    469a:	0017      	movs	r7, r2
    469c:	46d8      	mov	r8, fp
    469e:	e65b      	b.n	4358 <__aeabi_dadd+0x108>
    46a0:	0006      	movs	r6, r0
    46a2:	2400      	movs	r4, #0
    46a4:	2700      	movs	r7, #0
    46a6:	e697      	b.n	43d8 <__aeabi_dadd+0x188>
    46a8:	4650      	mov	r0, sl
    46aa:	000b      	movs	r3, r1
    46ac:	3820      	subs	r0, #32
    46ae:	40c3      	lsrs	r3, r0
    46b0:	4699      	mov	r9, r3
    46b2:	4653      	mov	r3, sl
    46b4:	2b20      	cmp	r3, #32
    46b6:	d100      	bne.n	46ba <__aeabi_dadd+0x46a>
    46b8:	e095      	b.n	47e6 <__aeabi_dadd+0x596>
    46ba:	2340      	movs	r3, #64	; 0x40
    46bc:	4650      	mov	r0, sl
    46be:	1a1b      	subs	r3, r3, r0
    46c0:	4099      	lsls	r1, r3
    46c2:	430a      	orrs	r2, r1
    46c4:	1e51      	subs	r1, r2, #1
    46c6:	418a      	sbcs	r2, r1
    46c8:	464b      	mov	r3, r9
    46ca:	2100      	movs	r1, #0
    46cc:	431a      	orrs	r2, r3
    46ce:	e69f      	b.n	4410 <__aeabi_dadd+0x1c0>
    46d0:	2e00      	cmp	r6, #0
    46d2:	d130      	bne.n	4736 <__aeabi_dadd+0x4e6>
    46d4:	0026      	movs	r6, r4
    46d6:	433e      	orrs	r6, r7
    46d8:	d067      	beq.n	47aa <__aeabi_dadd+0x55a>
    46da:	43db      	mvns	r3, r3
    46dc:	469a      	mov	sl, r3
    46de:	2b00      	cmp	r3, #0
    46e0:	d01c      	beq.n	471c <__aeabi_dadd+0x4cc>
    46e2:	4e61      	ldr	r6, [pc, #388]	; (4868 <__aeabi_dadd+0x618>)
    46e4:	42b0      	cmp	r0, r6
    46e6:	d060      	beq.n	47aa <__aeabi_dadd+0x55a>
    46e8:	4653      	mov	r3, sl
    46ea:	2b38      	cmp	r3, #56	; 0x38
    46ec:	dd00      	ble.n	46f0 <__aeabi_dadd+0x4a0>
    46ee:	e096      	b.n	481e <__aeabi_dadd+0x5ce>
    46f0:	2b1f      	cmp	r3, #31
    46f2:	dd00      	ble.n	46f6 <__aeabi_dadd+0x4a6>
    46f4:	e09f      	b.n	4836 <__aeabi_dadd+0x5e6>
    46f6:	2620      	movs	r6, #32
    46f8:	1af3      	subs	r3, r6, r3
    46fa:	0026      	movs	r6, r4
    46fc:	409e      	lsls	r6, r3
    46fe:	469c      	mov	ip, r3
    4700:	46b3      	mov	fp, r6
    4702:	4653      	mov	r3, sl
    4704:	003e      	movs	r6, r7
    4706:	40de      	lsrs	r6, r3
    4708:	0033      	movs	r3, r6
    470a:	465e      	mov	r6, fp
    470c:	431e      	orrs	r6, r3
    470e:	4663      	mov	r3, ip
    4710:	409f      	lsls	r7, r3
    4712:	1e7b      	subs	r3, r7, #1
    4714:	419f      	sbcs	r7, r3
    4716:	4653      	mov	r3, sl
    4718:	40dc      	lsrs	r4, r3
    471a:	4337      	orrs	r7, r6
    471c:	18bf      	adds	r7, r7, r2
    471e:	4297      	cmp	r7, r2
    4720:	4192      	sbcs	r2, r2
    4722:	1864      	adds	r4, r4, r1
    4724:	4252      	negs	r2, r2
    4726:	18a4      	adds	r4, r4, r2
    4728:	0006      	movs	r6, r0
    472a:	e678      	b.n	441e <__aeabi_dadd+0x1ce>
    472c:	4327      	orrs	r7, r4
    472e:	1e7c      	subs	r4, r7, #1
    4730:	41a7      	sbcs	r7, r4
    4732:	2400      	movs	r4, #0
    4734:	e737      	b.n	45a6 <__aeabi_dadd+0x356>
    4736:	4e4c      	ldr	r6, [pc, #304]	; (4868 <__aeabi_dadd+0x618>)
    4738:	42b0      	cmp	r0, r6
    473a:	d036      	beq.n	47aa <__aeabi_dadd+0x55a>
    473c:	2680      	movs	r6, #128	; 0x80
    473e:	425b      	negs	r3, r3
    4740:	0436      	lsls	r6, r6, #16
    4742:	469a      	mov	sl, r3
    4744:	4334      	orrs	r4, r6
    4746:	e7cf      	b.n	46e8 <__aeabi_dadd+0x498>
    4748:	0018      	movs	r0, r3
    474a:	4310      	orrs	r0, r2
    474c:	d100      	bne.n	4750 <__aeabi_dadd+0x500>
    474e:	e603      	b.n	4358 <__aeabi_dadd+0x108>
    4750:	1ab8      	subs	r0, r7, r2
    4752:	4684      	mov	ip, r0
    4754:	4567      	cmp	r7, ip
    4756:	41ad      	sbcs	r5, r5
    4758:	1ae0      	subs	r0, r4, r3
    475a:	426d      	negs	r5, r5
    475c:	1b40      	subs	r0, r0, r5
    475e:	0205      	lsls	r5, r0, #8
    4760:	d400      	bmi.n	4764 <__aeabi_dadd+0x514>
    4762:	e62c      	b.n	43be <__aeabi_dadd+0x16e>
    4764:	1bd7      	subs	r7, r2, r7
    4766:	42ba      	cmp	r2, r7
    4768:	4192      	sbcs	r2, r2
    476a:	1b1c      	subs	r4, r3, r4
    476c:	4252      	negs	r2, r2
    476e:	1aa4      	subs	r4, r4, r2
    4770:	46d8      	mov	r8, fp
    4772:	e5f1      	b.n	4358 <__aeabi_dadd+0x108>
    4774:	0018      	movs	r0, r3
    4776:	4310      	orrs	r0, r2
    4778:	d100      	bne.n	477c <__aeabi_dadd+0x52c>
    477a:	e763      	b.n	4644 <__aeabi_dadd+0x3f4>
    477c:	08f8      	lsrs	r0, r7, #3
    477e:	0767      	lsls	r7, r4, #29
    4780:	4307      	orrs	r7, r0
    4782:	2080      	movs	r0, #128	; 0x80
    4784:	08e4      	lsrs	r4, r4, #3
    4786:	0300      	lsls	r0, r0, #12
    4788:	4204      	tst	r4, r0
    478a:	d008      	beq.n	479e <__aeabi_dadd+0x54e>
    478c:	08dd      	lsrs	r5, r3, #3
    478e:	4205      	tst	r5, r0
    4790:	d105      	bne.n	479e <__aeabi_dadd+0x54e>
    4792:	08d2      	lsrs	r2, r2, #3
    4794:	0759      	lsls	r1, r3, #29
    4796:	4311      	orrs	r1, r2
    4798:	000f      	movs	r7, r1
    479a:	002c      	movs	r4, r5
    479c:	46d8      	mov	r8, fp
    479e:	0f7b      	lsrs	r3, r7, #29
    47a0:	00e4      	lsls	r4, r4, #3
    47a2:	431c      	orrs	r4, r3
    47a4:	00ff      	lsls	r7, r7, #3
    47a6:	4e30      	ldr	r6, [pc, #192]	; (4868 <__aeabi_dadd+0x618>)
    47a8:	e5d6      	b.n	4358 <__aeabi_dadd+0x108>
    47aa:	000c      	movs	r4, r1
    47ac:	0017      	movs	r7, r2
    47ae:	0006      	movs	r6, r0
    47b0:	e5d2      	b.n	4358 <__aeabi_dadd+0x108>
    47b2:	2b00      	cmp	r3, #0
    47b4:	d038      	beq.n	4828 <__aeabi_dadd+0x5d8>
    47b6:	000b      	movs	r3, r1
    47b8:	4313      	orrs	r3, r2
    47ba:	d100      	bne.n	47be <__aeabi_dadd+0x56e>
    47bc:	e742      	b.n	4644 <__aeabi_dadd+0x3f4>
    47be:	08f8      	lsrs	r0, r7, #3
    47c0:	0767      	lsls	r7, r4, #29
    47c2:	4307      	orrs	r7, r0
    47c4:	2080      	movs	r0, #128	; 0x80
    47c6:	08e4      	lsrs	r4, r4, #3
    47c8:	0300      	lsls	r0, r0, #12
    47ca:	4204      	tst	r4, r0
    47cc:	d0e7      	beq.n	479e <__aeabi_dadd+0x54e>
    47ce:	08cb      	lsrs	r3, r1, #3
    47d0:	4203      	tst	r3, r0
    47d2:	d1e4      	bne.n	479e <__aeabi_dadd+0x54e>
    47d4:	08d2      	lsrs	r2, r2, #3
    47d6:	0749      	lsls	r1, r1, #29
    47d8:	4311      	orrs	r1, r2
    47da:	000f      	movs	r7, r1
    47dc:	001c      	movs	r4, r3
    47de:	e7de      	b.n	479e <__aeabi_dadd+0x54e>
    47e0:	2700      	movs	r7, #0
    47e2:	2400      	movs	r4, #0
    47e4:	e5d5      	b.n	4392 <__aeabi_dadd+0x142>
    47e6:	2100      	movs	r1, #0
    47e8:	e76b      	b.n	46c2 <__aeabi_dadd+0x472>
    47ea:	2500      	movs	r5, #0
    47ec:	2700      	movs	r7, #0
    47ee:	e5f3      	b.n	43d8 <__aeabi_dadd+0x188>
    47f0:	464e      	mov	r6, r9
    47f2:	0025      	movs	r5, r4
    47f4:	3e20      	subs	r6, #32
    47f6:	40f5      	lsrs	r5, r6
    47f8:	464b      	mov	r3, r9
    47fa:	002e      	movs	r6, r5
    47fc:	2b20      	cmp	r3, #32
    47fe:	d02d      	beq.n	485c <__aeabi_dadd+0x60c>
    4800:	2540      	movs	r5, #64	; 0x40
    4802:	1aed      	subs	r5, r5, r3
    4804:	40ac      	lsls	r4, r5
    4806:	4327      	orrs	r7, r4
    4808:	1e7c      	subs	r4, r7, #1
    480a:	41a7      	sbcs	r7, r4
    480c:	2400      	movs	r4, #0
    480e:	4337      	orrs	r7, r6
    4810:	e6c9      	b.n	45a6 <__aeabi_dadd+0x356>
    4812:	2480      	movs	r4, #128	; 0x80
    4814:	2500      	movs	r5, #0
    4816:	0324      	lsls	r4, r4, #12
    4818:	4e13      	ldr	r6, [pc, #76]	; (4868 <__aeabi_dadd+0x618>)
    481a:	2700      	movs	r7, #0
    481c:	e5dc      	b.n	43d8 <__aeabi_dadd+0x188>
    481e:	4327      	orrs	r7, r4
    4820:	1e7c      	subs	r4, r7, #1
    4822:	41a7      	sbcs	r7, r4
    4824:	2400      	movs	r4, #0
    4826:	e779      	b.n	471c <__aeabi_dadd+0x4cc>
    4828:	000c      	movs	r4, r1
    482a:	0017      	movs	r7, r2
    482c:	4e0e      	ldr	r6, [pc, #56]	; (4868 <__aeabi_dadd+0x618>)
    482e:	e593      	b.n	4358 <__aeabi_dadd+0x108>
    4830:	000c      	movs	r4, r1
    4832:	0017      	movs	r7, r2
    4834:	e590      	b.n	4358 <__aeabi_dadd+0x108>
    4836:	4656      	mov	r6, sl
    4838:	0023      	movs	r3, r4
    483a:	3e20      	subs	r6, #32
    483c:	40f3      	lsrs	r3, r6
    483e:	4699      	mov	r9, r3
    4840:	4653      	mov	r3, sl
    4842:	2b20      	cmp	r3, #32
    4844:	d00e      	beq.n	4864 <__aeabi_dadd+0x614>
    4846:	2340      	movs	r3, #64	; 0x40
    4848:	4656      	mov	r6, sl
    484a:	1b9b      	subs	r3, r3, r6
    484c:	409c      	lsls	r4, r3
    484e:	4327      	orrs	r7, r4
    4850:	1e7c      	subs	r4, r7, #1
    4852:	41a7      	sbcs	r7, r4
    4854:	464b      	mov	r3, r9
    4856:	2400      	movs	r4, #0
    4858:	431f      	orrs	r7, r3
    485a:	e75f      	b.n	471c <__aeabi_dadd+0x4cc>
    485c:	2400      	movs	r4, #0
    485e:	e7d2      	b.n	4806 <__aeabi_dadd+0x5b6>
    4860:	0017      	movs	r7, r2
    4862:	e5b2      	b.n	43ca <__aeabi_dadd+0x17a>
    4864:	2400      	movs	r4, #0
    4866:	e7f2      	b.n	484e <__aeabi_dadd+0x5fe>
    4868:	000007ff 	.word	0x000007ff
    486c:	ff7fffff 	.word	0xff7fffff

00004870 <__aeabi_ddiv>:
    4870:	b5f0      	push	{r4, r5, r6, r7, lr}
    4872:	4657      	mov	r7, sl
    4874:	4645      	mov	r5, r8
    4876:	46de      	mov	lr, fp
    4878:	464e      	mov	r6, r9
    487a:	b5e0      	push	{r5, r6, r7, lr}
    487c:	004c      	lsls	r4, r1, #1
    487e:	030e      	lsls	r6, r1, #12
    4880:	b087      	sub	sp, #28
    4882:	4683      	mov	fp, r0
    4884:	4692      	mov	sl, r2
    4886:	001d      	movs	r5, r3
    4888:	4680      	mov	r8, r0
    488a:	0b36      	lsrs	r6, r6, #12
    488c:	0d64      	lsrs	r4, r4, #21
    488e:	0fcf      	lsrs	r7, r1, #31
    4890:	2c00      	cmp	r4, #0
    4892:	d04f      	beq.n	4934 <__aeabi_ddiv+0xc4>
    4894:	4b6f      	ldr	r3, [pc, #444]	; (4a54 <__aeabi_ddiv+0x1e4>)
    4896:	429c      	cmp	r4, r3
    4898:	d035      	beq.n	4906 <__aeabi_ddiv+0x96>
    489a:	2380      	movs	r3, #128	; 0x80
    489c:	0f42      	lsrs	r2, r0, #29
    489e:	041b      	lsls	r3, r3, #16
    48a0:	00f6      	lsls	r6, r6, #3
    48a2:	4313      	orrs	r3, r2
    48a4:	4333      	orrs	r3, r6
    48a6:	4699      	mov	r9, r3
    48a8:	00c3      	lsls	r3, r0, #3
    48aa:	4698      	mov	r8, r3
    48ac:	4b6a      	ldr	r3, [pc, #424]	; (4a58 <__aeabi_ddiv+0x1e8>)
    48ae:	2600      	movs	r6, #0
    48b0:	469c      	mov	ip, r3
    48b2:	2300      	movs	r3, #0
    48b4:	4464      	add	r4, ip
    48b6:	9303      	str	r3, [sp, #12]
    48b8:	032b      	lsls	r3, r5, #12
    48ba:	0b1b      	lsrs	r3, r3, #12
    48bc:	469b      	mov	fp, r3
    48be:	006b      	lsls	r3, r5, #1
    48c0:	0fed      	lsrs	r5, r5, #31
    48c2:	4650      	mov	r0, sl
    48c4:	0d5b      	lsrs	r3, r3, #21
    48c6:	9501      	str	r5, [sp, #4]
    48c8:	d05e      	beq.n	4988 <__aeabi_ddiv+0x118>
    48ca:	4a62      	ldr	r2, [pc, #392]	; (4a54 <__aeabi_ddiv+0x1e4>)
    48cc:	4293      	cmp	r3, r2
    48ce:	d053      	beq.n	4978 <__aeabi_ddiv+0x108>
    48d0:	465a      	mov	r2, fp
    48d2:	00d1      	lsls	r1, r2, #3
    48d4:	2280      	movs	r2, #128	; 0x80
    48d6:	0f40      	lsrs	r0, r0, #29
    48d8:	0412      	lsls	r2, r2, #16
    48da:	4302      	orrs	r2, r0
    48dc:	430a      	orrs	r2, r1
    48de:	4693      	mov	fp, r2
    48e0:	4652      	mov	r2, sl
    48e2:	00d1      	lsls	r1, r2, #3
    48e4:	4a5c      	ldr	r2, [pc, #368]	; (4a58 <__aeabi_ddiv+0x1e8>)
    48e6:	4694      	mov	ip, r2
    48e8:	2200      	movs	r2, #0
    48ea:	4463      	add	r3, ip
    48ec:	0038      	movs	r0, r7
    48ee:	4068      	eors	r0, r5
    48f0:	4684      	mov	ip, r0
    48f2:	9002      	str	r0, [sp, #8]
    48f4:	1ae4      	subs	r4, r4, r3
    48f6:	4316      	orrs	r6, r2
    48f8:	2e0f      	cmp	r6, #15
    48fa:	d900      	bls.n	48fe <__aeabi_ddiv+0x8e>
    48fc:	e0b4      	b.n	4a68 <__aeabi_ddiv+0x1f8>
    48fe:	4b57      	ldr	r3, [pc, #348]	; (4a5c <__aeabi_ddiv+0x1ec>)
    4900:	00b6      	lsls	r6, r6, #2
    4902:	599b      	ldr	r3, [r3, r6]
    4904:	469f      	mov	pc, r3
    4906:	0003      	movs	r3, r0
    4908:	4333      	orrs	r3, r6
    490a:	4699      	mov	r9, r3
    490c:	d16c      	bne.n	49e8 <__aeabi_ddiv+0x178>
    490e:	2300      	movs	r3, #0
    4910:	4698      	mov	r8, r3
    4912:	3302      	adds	r3, #2
    4914:	2608      	movs	r6, #8
    4916:	9303      	str	r3, [sp, #12]
    4918:	e7ce      	b.n	48b8 <__aeabi_ddiv+0x48>
    491a:	46cb      	mov	fp, r9
    491c:	4641      	mov	r1, r8
    491e:	9a03      	ldr	r2, [sp, #12]
    4920:	9701      	str	r7, [sp, #4]
    4922:	2a02      	cmp	r2, #2
    4924:	d165      	bne.n	49f2 <__aeabi_ddiv+0x182>
    4926:	9b01      	ldr	r3, [sp, #4]
    4928:	4c4a      	ldr	r4, [pc, #296]	; (4a54 <__aeabi_ddiv+0x1e4>)
    492a:	469c      	mov	ip, r3
    492c:	2300      	movs	r3, #0
    492e:	2200      	movs	r2, #0
    4930:	4698      	mov	r8, r3
    4932:	e06b      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4934:	0003      	movs	r3, r0
    4936:	4333      	orrs	r3, r6
    4938:	4699      	mov	r9, r3
    493a:	d04e      	beq.n	49da <__aeabi_ddiv+0x16a>
    493c:	2e00      	cmp	r6, #0
    493e:	d100      	bne.n	4942 <__aeabi_ddiv+0xd2>
    4940:	e1bc      	b.n	4cbc <__aeabi_ddiv+0x44c>
    4942:	0030      	movs	r0, r6
    4944:	f001 f9f4 	bl	5d30 <__clzsi2>
    4948:	0003      	movs	r3, r0
    494a:	3b0b      	subs	r3, #11
    494c:	2b1c      	cmp	r3, #28
    494e:	dd00      	ble.n	4952 <__aeabi_ddiv+0xe2>
    4950:	e1ac      	b.n	4cac <__aeabi_ddiv+0x43c>
    4952:	221d      	movs	r2, #29
    4954:	1ad3      	subs	r3, r2, r3
    4956:	465a      	mov	r2, fp
    4958:	0001      	movs	r1, r0
    495a:	40da      	lsrs	r2, r3
    495c:	3908      	subs	r1, #8
    495e:	408e      	lsls	r6, r1
    4960:	0013      	movs	r3, r2
    4962:	4333      	orrs	r3, r6
    4964:	4699      	mov	r9, r3
    4966:	465b      	mov	r3, fp
    4968:	408b      	lsls	r3, r1
    496a:	4698      	mov	r8, r3
    496c:	2300      	movs	r3, #0
    496e:	4c3c      	ldr	r4, [pc, #240]	; (4a60 <__aeabi_ddiv+0x1f0>)
    4970:	2600      	movs	r6, #0
    4972:	1a24      	subs	r4, r4, r0
    4974:	9303      	str	r3, [sp, #12]
    4976:	e79f      	b.n	48b8 <__aeabi_ddiv+0x48>
    4978:	4651      	mov	r1, sl
    497a:	465a      	mov	r2, fp
    497c:	4311      	orrs	r1, r2
    497e:	d129      	bne.n	49d4 <__aeabi_ddiv+0x164>
    4980:	2200      	movs	r2, #0
    4982:	4693      	mov	fp, r2
    4984:	3202      	adds	r2, #2
    4986:	e7b1      	b.n	48ec <__aeabi_ddiv+0x7c>
    4988:	4659      	mov	r1, fp
    498a:	4301      	orrs	r1, r0
    498c:	d01e      	beq.n	49cc <__aeabi_ddiv+0x15c>
    498e:	465b      	mov	r3, fp
    4990:	2b00      	cmp	r3, #0
    4992:	d100      	bne.n	4996 <__aeabi_ddiv+0x126>
    4994:	e19e      	b.n	4cd4 <__aeabi_ddiv+0x464>
    4996:	4658      	mov	r0, fp
    4998:	f001 f9ca 	bl	5d30 <__clzsi2>
    499c:	0003      	movs	r3, r0
    499e:	3b0b      	subs	r3, #11
    49a0:	2b1c      	cmp	r3, #28
    49a2:	dd00      	ble.n	49a6 <__aeabi_ddiv+0x136>
    49a4:	e18f      	b.n	4cc6 <__aeabi_ddiv+0x456>
    49a6:	0002      	movs	r2, r0
    49a8:	4659      	mov	r1, fp
    49aa:	3a08      	subs	r2, #8
    49ac:	4091      	lsls	r1, r2
    49ae:	468b      	mov	fp, r1
    49b0:	211d      	movs	r1, #29
    49b2:	1acb      	subs	r3, r1, r3
    49b4:	4651      	mov	r1, sl
    49b6:	40d9      	lsrs	r1, r3
    49b8:	000b      	movs	r3, r1
    49ba:	4659      	mov	r1, fp
    49bc:	430b      	orrs	r3, r1
    49be:	4651      	mov	r1, sl
    49c0:	469b      	mov	fp, r3
    49c2:	4091      	lsls	r1, r2
    49c4:	4b26      	ldr	r3, [pc, #152]	; (4a60 <__aeabi_ddiv+0x1f0>)
    49c6:	2200      	movs	r2, #0
    49c8:	1a1b      	subs	r3, r3, r0
    49ca:	e78f      	b.n	48ec <__aeabi_ddiv+0x7c>
    49cc:	2300      	movs	r3, #0
    49ce:	2201      	movs	r2, #1
    49d0:	469b      	mov	fp, r3
    49d2:	e78b      	b.n	48ec <__aeabi_ddiv+0x7c>
    49d4:	4651      	mov	r1, sl
    49d6:	2203      	movs	r2, #3
    49d8:	e788      	b.n	48ec <__aeabi_ddiv+0x7c>
    49da:	2300      	movs	r3, #0
    49dc:	4698      	mov	r8, r3
    49de:	3301      	adds	r3, #1
    49e0:	2604      	movs	r6, #4
    49e2:	2400      	movs	r4, #0
    49e4:	9303      	str	r3, [sp, #12]
    49e6:	e767      	b.n	48b8 <__aeabi_ddiv+0x48>
    49e8:	2303      	movs	r3, #3
    49ea:	46b1      	mov	r9, r6
    49ec:	9303      	str	r3, [sp, #12]
    49ee:	260c      	movs	r6, #12
    49f0:	e762      	b.n	48b8 <__aeabi_ddiv+0x48>
    49f2:	2a03      	cmp	r2, #3
    49f4:	d100      	bne.n	49f8 <__aeabi_ddiv+0x188>
    49f6:	e25c      	b.n	4eb2 <__aeabi_ddiv+0x642>
    49f8:	9b01      	ldr	r3, [sp, #4]
    49fa:	2a01      	cmp	r2, #1
    49fc:	d000      	beq.n	4a00 <__aeabi_ddiv+0x190>
    49fe:	e1e4      	b.n	4dca <__aeabi_ddiv+0x55a>
    4a00:	4013      	ands	r3, r2
    4a02:	469c      	mov	ip, r3
    4a04:	2300      	movs	r3, #0
    4a06:	2400      	movs	r4, #0
    4a08:	2200      	movs	r2, #0
    4a0a:	4698      	mov	r8, r3
    4a0c:	2100      	movs	r1, #0
    4a0e:	0312      	lsls	r2, r2, #12
    4a10:	0b13      	lsrs	r3, r2, #12
    4a12:	0d0a      	lsrs	r2, r1, #20
    4a14:	0512      	lsls	r2, r2, #20
    4a16:	431a      	orrs	r2, r3
    4a18:	0523      	lsls	r3, r4, #20
    4a1a:	4c12      	ldr	r4, [pc, #72]	; (4a64 <__aeabi_ddiv+0x1f4>)
    4a1c:	4640      	mov	r0, r8
    4a1e:	4022      	ands	r2, r4
    4a20:	4313      	orrs	r3, r2
    4a22:	4662      	mov	r2, ip
    4a24:	005b      	lsls	r3, r3, #1
    4a26:	07d2      	lsls	r2, r2, #31
    4a28:	085b      	lsrs	r3, r3, #1
    4a2a:	4313      	orrs	r3, r2
    4a2c:	0019      	movs	r1, r3
    4a2e:	b007      	add	sp, #28
    4a30:	bc3c      	pop	{r2, r3, r4, r5}
    4a32:	4690      	mov	r8, r2
    4a34:	4699      	mov	r9, r3
    4a36:	46a2      	mov	sl, r4
    4a38:	46ab      	mov	fp, r5
    4a3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a3c:	2300      	movs	r3, #0
    4a3e:	2280      	movs	r2, #128	; 0x80
    4a40:	469c      	mov	ip, r3
    4a42:	0312      	lsls	r2, r2, #12
    4a44:	4698      	mov	r8, r3
    4a46:	4c03      	ldr	r4, [pc, #12]	; (4a54 <__aeabi_ddiv+0x1e4>)
    4a48:	e7e0      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4a4a:	2300      	movs	r3, #0
    4a4c:	4c01      	ldr	r4, [pc, #4]	; (4a54 <__aeabi_ddiv+0x1e4>)
    4a4e:	2200      	movs	r2, #0
    4a50:	4698      	mov	r8, r3
    4a52:	e7db      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4a54:	000007ff 	.word	0x000007ff
    4a58:	fffffc01 	.word	0xfffffc01
    4a5c:	00006050 	.word	0x00006050
    4a60:	fffffc0d 	.word	0xfffffc0d
    4a64:	800fffff 	.word	0x800fffff
    4a68:	45d9      	cmp	r9, fp
    4a6a:	d900      	bls.n	4a6e <__aeabi_ddiv+0x1fe>
    4a6c:	e139      	b.n	4ce2 <__aeabi_ddiv+0x472>
    4a6e:	d100      	bne.n	4a72 <__aeabi_ddiv+0x202>
    4a70:	e134      	b.n	4cdc <__aeabi_ddiv+0x46c>
    4a72:	2300      	movs	r3, #0
    4a74:	4646      	mov	r6, r8
    4a76:	464d      	mov	r5, r9
    4a78:	469a      	mov	sl, r3
    4a7a:	3c01      	subs	r4, #1
    4a7c:	465b      	mov	r3, fp
    4a7e:	0e0a      	lsrs	r2, r1, #24
    4a80:	021b      	lsls	r3, r3, #8
    4a82:	431a      	orrs	r2, r3
    4a84:	020b      	lsls	r3, r1, #8
    4a86:	0c17      	lsrs	r7, r2, #16
    4a88:	9303      	str	r3, [sp, #12]
    4a8a:	0413      	lsls	r3, r2, #16
    4a8c:	0c1b      	lsrs	r3, r3, #16
    4a8e:	0039      	movs	r1, r7
    4a90:	0028      	movs	r0, r5
    4a92:	4690      	mov	r8, r2
    4a94:	9301      	str	r3, [sp, #4]
    4a96:	f7ff fa09 	bl	3eac <__udivsi3>
    4a9a:	0002      	movs	r2, r0
    4a9c:	9b01      	ldr	r3, [sp, #4]
    4a9e:	4683      	mov	fp, r0
    4aa0:	435a      	muls	r2, r3
    4aa2:	0028      	movs	r0, r5
    4aa4:	0039      	movs	r1, r7
    4aa6:	4691      	mov	r9, r2
    4aa8:	f7ff fa86 	bl	3fb8 <__aeabi_uidivmod>
    4aac:	0c35      	lsrs	r5, r6, #16
    4aae:	0409      	lsls	r1, r1, #16
    4ab0:	430d      	orrs	r5, r1
    4ab2:	45a9      	cmp	r9, r5
    4ab4:	d90d      	bls.n	4ad2 <__aeabi_ddiv+0x262>
    4ab6:	465b      	mov	r3, fp
    4ab8:	4445      	add	r5, r8
    4aba:	3b01      	subs	r3, #1
    4abc:	45a8      	cmp	r8, r5
    4abe:	d900      	bls.n	4ac2 <__aeabi_ddiv+0x252>
    4ac0:	e13a      	b.n	4d38 <__aeabi_ddiv+0x4c8>
    4ac2:	45a9      	cmp	r9, r5
    4ac4:	d800      	bhi.n	4ac8 <__aeabi_ddiv+0x258>
    4ac6:	e137      	b.n	4d38 <__aeabi_ddiv+0x4c8>
    4ac8:	2302      	movs	r3, #2
    4aca:	425b      	negs	r3, r3
    4acc:	469c      	mov	ip, r3
    4ace:	4445      	add	r5, r8
    4ad0:	44e3      	add	fp, ip
    4ad2:	464b      	mov	r3, r9
    4ad4:	1aeb      	subs	r3, r5, r3
    4ad6:	0039      	movs	r1, r7
    4ad8:	0018      	movs	r0, r3
    4ada:	9304      	str	r3, [sp, #16]
    4adc:	f7ff f9e6 	bl	3eac <__udivsi3>
    4ae0:	9b01      	ldr	r3, [sp, #4]
    4ae2:	0005      	movs	r5, r0
    4ae4:	4343      	muls	r3, r0
    4ae6:	0039      	movs	r1, r7
    4ae8:	9804      	ldr	r0, [sp, #16]
    4aea:	4699      	mov	r9, r3
    4aec:	f7ff fa64 	bl	3fb8 <__aeabi_uidivmod>
    4af0:	0433      	lsls	r3, r6, #16
    4af2:	0409      	lsls	r1, r1, #16
    4af4:	0c1b      	lsrs	r3, r3, #16
    4af6:	430b      	orrs	r3, r1
    4af8:	4599      	cmp	r9, r3
    4afa:	d909      	bls.n	4b10 <__aeabi_ddiv+0x2a0>
    4afc:	4443      	add	r3, r8
    4afe:	1e6a      	subs	r2, r5, #1
    4b00:	4598      	cmp	r8, r3
    4b02:	d900      	bls.n	4b06 <__aeabi_ddiv+0x296>
    4b04:	e11a      	b.n	4d3c <__aeabi_ddiv+0x4cc>
    4b06:	4599      	cmp	r9, r3
    4b08:	d800      	bhi.n	4b0c <__aeabi_ddiv+0x29c>
    4b0a:	e117      	b.n	4d3c <__aeabi_ddiv+0x4cc>
    4b0c:	3d02      	subs	r5, #2
    4b0e:	4443      	add	r3, r8
    4b10:	464a      	mov	r2, r9
    4b12:	1a9b      	subs	r3, r3, r2
    4b14:	465a      	mov	r2, fp
    4b16:	0412      	lsls	r2, r2, #16
    4b18:	432a      	orrs	r2, r5
    4b1a:	9903      	ldr	r1, [sp, #12]
    4b1c:	4693      	mov	fp, r2
    4b1e:	0c10      	lsrs	r0, r2, #16
    4b20:	0c0a      	lsrs	r2, r1, #16
    4b22:	4691      	mov	r9, r2
    4b24:	0409      	lsls	r1, r1, #16
    4b26:	465a      	mov	r2, fp
    4b28:	0c09      	lsrs	r1, r1, #16
    4b2a:	464e      	mov	r6, r9
    4b2c:	000d      	movs	r5, r1
    4b2e:	0412      	lsls	r2, r2, #16
    4b30:	0c12      	lsrs	r2, r2, #16
    4b32:	4345      	muls	r5, r0
    4b34:	9105      	str	r1, [sp, #20]
    4b36:	4351      	muls	r1, r2
    4b38:	4372      	muls	r2, r6
    4b3a:	4370      	muls	r0, r6
    4b3c:	1952      	adds	r2, r2, r5
    4b3e:	0c0e      	lsrs	r6, r1, #16
    4b40:	18b2      	adds	r2, r6, r2
    4b42:	4295      	cmp	r5, r2
    4b44:	d903      	bls.n	4b4e <__aeabi_ddiv+0x2de>
    4b46:	2580      	movs	r5, #128	; 0x80
    4b48:	026d      	lsls	r5, r5, #9
    4b4a:	46ac      	mov	ip, r5
    4b4c:	4460      	add	r0, ip
    4b4e:	0c15      	lsrs	r5, r2, #16
    4b50:	0409      	lsls	r1, r1, #16
    4b52:	0412      	lsls	r2, r2, #16
    4b54:	0c09      	lsrs	r1, r1, #16
    4b56:	1828      	adds	r0, r5, r0
    4b58:	1852      	adds	r2, r2, r1
    4b5a:	4283      	cmp	r3, r0
    4b5c:	d200      	bcs.n	4b60 <__aeabi_ddiv+0x2f0>
    4b5e:	e0ce      	b.n	4cfe <__aeabi_ddiv+0x48e>
    4b60:	d100      	bne.n	4b64 <__aeabi_ddiv+0x2f4>
    4b62:	e0c8      	b.n	4cf6 <__aeabi_ddiv+0x486>
    4b64:	1a1d      	subs	r5, r3, r0
    4b66:	4653      	mov	r3, sl
    4b68:	1a9e      	subs	r6, r3, r2
    4b6a:	45b2      	cmp	sl, r6
    4b6c:	4192      	sbcs	r2, r2
    4b6e:	4252      	negs	r2, r2
    4b70:	1aab      	subs	r3, r5, r2
    4b72:	469a      	mov	sl, r3
    4b74:	4598      	cmp	r8, r3
    4b76:	d100      	bne.n	4b7a <__aeabi_ddiv+0x30a>
    4b78:	e117      	b.n	4daa <__aeabi_ddiv+0x53a>
    4b7a:	0039      	movs	r1, r7
    4b7c:	0018      	movs	r0, r3
    4b7e:	f7ff f995 	bl	3eac <__udivsi3>
    4b82:	9b01      	ldr	r3, [sp, #4]
    4b84:	0005      	movs	r5, r0
    4b86:	4343      	muls	r3, r0
    4b88:	0039      	movs	r1, r7
    4b8a:	4650      	mov	r0, sl
    4b8c:	9304      	str	r3, [sp, #16]
    4b8e:	f7ff fa13 	bl	3fb8 <__aeabi_uidivmod>
    4b92:	9804      	ldr	r0, [sp, #16]
    4b94:	040b      	lsls	r3, r1, #16
    4b96:	0c31      	lsrs	r1, r6, #16
    4b98:	4319      	orrs	r1, r3
    4b9a:	4288      	cmp	r0, r1
    4b9c:	d909      	bls.n	4bb2 <__aeabi_ddiv+0x342>
    4b9e:	4441      	add	r1, r8
    4ba0:	1e6b      	subs	r3, r5, #1
    4ba2:	4588      	cmp	r8, r1
    4ba4:	d900      	bls.n	4ba8 <__aeabi_ddiv+0x338>
    4ba6:	e107      	b.n	4db8 <__aeabi_ddiv+0x548>
    4ba8:	4288      	cmp	r0, r1
    4baa:	d800      	bhi.n	4bae <__aeabi_ddiv+0x33e>
    4bac:	e104      	b.n	4db8 <__aeabi_ddiv+0x548>
    4bae:	3d02      	subs	r5, #2
    4bb0:	4441      	add	r1, r8
    4bb2:	9b04      	ldr	r3, [sp, #16]
    4bb4:	1acb      	subs	r3, r1, r3
    4bb6:	0018      	movs	r0, r3
    4bb8:	0039      	movs	r1, r7
    4bba:	9304      	str	r3, [sp, #16]
    4bbc:	f7ff f976 	bl	3eac <__udivsi3>
    4bc0:	9b01      	ldr	r3, [sp, #4]
    4bc2:	4682      	mov	sl, r0
    4bc4:	4343      	muls	r3, r0
    4bc6:	0039      	movs	r1, r7
    4bc8:	9804      	ldr	r0, [sp, #16]
    4bca:	9301      	str	r3, [sp, #4]
    4bcc:	f7ff f9f4 	bl	3fb8 <__aeabi_uidivmod>
    4bd0:	9801      	ldr	r0, [sp, #4]
    4bd2:	040b      	lsls	r3, r1, #16
    4bd4:	0431      	lsls	r1, r6, #16
    4bd6:	0c09      	lsrs	r1, r1, #16
    4bd8:	4319      	orrs	r1, r3
    4bda:	4288      	cmp	r0, r1
    4bdc:	d90d      	bls.n	4bfa <__aeabi_ddiv+0x38a>
    4bde:	4653      	mov	r3, sl
    4be0:	4441      	add	r1, r8
    4be2:	3b01      	subs	r3, #1
    4be4:	4588      	cmp	r8, r1
    4be6:	d900      	bls.n	4bea <__aeabi_ddiv+0x37a>
    4be8:	e0e8      	b.n	4dbc <__aeabi_ddiv+0x54c>
    4bea:	4288      	cmp	r0, r1
    4bec:	d800      	bhi.n	4bf0 <__aeabi_ddiv+0x380>
    4bee:	e0e5      	b.n	4dbc <__aeabi_ddiv+0x54c>
    4bf0:	2302      	movs	r3, #2
    4bf2:	425b      	negs	r3, r3
    4bf4:	469c      	mov	ip, r3
    4bf6:	4441      	add	r1, r8
    4bf8:	44e2      	add	sl, ip
    4bfa:	9b01      	ldr	r3, [sp, #4]
    4bfc:	042d      	lsls	r5, r5, #16
    4bfe:	1ace      	subs	r6, r1, r3
    4c00:	4651      	mov	r1, sl
    4c02:	4329      	orrs	r1, r5
    4c04:	9d05      	ldr	r5, [sp, #20]
    4c06:	464f      	mov	r7, r9
    4c08:	002a      	movs	r2, r5
    4c0a:	040b      	lsls	r3, r1, #16
    4c0c:	0c08      	lsrs	r0, r1, #16
    4c0e:	0c1b      	lsrs	r3, r3, #16
    4c10:	435a      	muls	r2, r3
    4c12:	4345      	muls	r5, r0
    4c14:	437b      	muls	r3, r7
    4c16:	4378      	muls	r0, r7
    4c18:	195b      	adds	r3, r3, r5
    4c1a:	0c17      	lsrs	r7, r2, #16
    4c1c:	18fb      	adds	r3, r7, r3
    4c1e:	429d      	cmp	r5, r3
    4c20:	d903      	bls.n	4c2a <__aeabi_ddiv+0x3ba>
    4c22:	2580      	movs	r5, #128	; 0x80
    4c24:	026d      	lsls	r5, r5, #9
    4c26:	46ac      	mov	ip, r5
    4c28:	4460      	add	r0, ip
    4c2a:	0c1d      	lsrs	r5, r3, #16
    4c2c:	0412      	lsls	r2, r2, #16
    4c2e:	041b      	lsls	r3, r3, #16
    4c30:	0c12      	lsrs	r2, r2, #16
    4c32:	1828      	adds	r0, r5, r0
    4c34:	189b      	adds	r3, r3, r2
    4c36:	4286      	cmp	r6, r0
    4c38:	d200      	bcs.n	4c3c <__aeabi_ddiv+0x3cc>
    4c3a:	e093      	b.n	4d64 <__aeabi_ddiv+0x4f4>
    4c3c:	d100      	bne.n	4c40 <__aeabi_ddiv+0x3d0>
    4c3e:	e08e      	b.n	4d5e <__aeabi_ddiv+0x4ee>
    4c40:	2301      	movs	r3, #1
    4c42:	4319      	orrs	r1, r3
    4c44:	4ba0      	ldr	r3, [pc, #640]	; (4ec8 <__aeabi_ddiv+0x658>)
    4c46:	18e3      	adds	r3, r4, r3
    4c48:	2b00      	cmp	r3, #0
    4c4a:	dc00      	bgt.n	4c4e <__aeabi_ddiv+0x3de>
    4c4c:	e099      	b.n	4d82 <__aeabi_ddiv+0x512>
    4c4e:	074a      	lsls	r2, r1, #29
    4c50:	d000      	beq.n	4c54 <__aeabi_ddiv+0x3e4>
    4c52:	e09e      	b.n	4d92 <__aeabi_ddiv+0x522>
    4c54:	465a      	mov	r2, fp
    4c56:	01d2      	lsls	r2, r2, #7
    4c58:	d506      	bpl.n	4c68 <__aeabi_ddiv+0x3f8>
    4c5a:	465a      	mov	r2, fp
    4c5c:	4b9b      	ldr	r3, [pc, #620]	; (4ecc <__aeabi_ddiv+0x65c>)
    4c5e:	401a      	ands	r2, r3
    4c60:	2380      	movs	r3, #128	; 0x80
    4c62:	4693      	mov	fp, r2
    4c64:	00db      	lsls	r3, r3, #3
    4c66:	18e3      	adds	r3, r4, r3
    4c68:	4a99      	ldr	r2, [pc, #612]	; (4ed0 <__aeabi_ddiv+0x660>)
    4c6a:	4293      	cmp	r3, r2
    4c6c:	dd68      	ble.n	4d40 <__aeabi_ddiv+0x4d0>
    4c6e:	2301      	movs	r3, #1
    4c70:	9a02      	ldr	r2, [sp, #8]
    4c72:	4c98      	ldr	r4, [pc, #608]	; (4ed4 <__aeabi_ddiv+0x664>)
    4c74:	401a      	ands	r2, r3
    4c76:	2300      	movs	r3, #0
    4c78:	4694      	mov	ip, r2
    4c7a:	4698      	mov	r8, r3
    4c7c:	2200      	movs	r2, #0
    4c7e:	e6c5      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4c80:	2280      	movs	r2, #128	; 0x80
    4c82:	464b      	mov	r3, r9
    4c84:	0312      	lsls	r2, r2, #12
    4c86:	4213      	tst	r3, r2
    4c88:	d00a      	beq.n	4ca0 <__aeabi_ddiv+0x430>
    4c8a:	465b      	mov	r3, fp
    4c8c:	4213      	tst	r3, r2
    4c8e:	d106      	bne.n	4c9e <__aeabi_ddiv+0x42e>
    4c90:	431a      	orrs	r2, r3
    4c92:	0312      	lsls	r2, r2, #12
    4c94:	0b12      	lsrs	r2, r2, #12
    4c96:	46ac      	mov	ip, r5
    4c98:	4688      	mov	r8, r1
    4c9a:	4c8e      	ldr	r4, [pc, #568]	; (4ed4 <__aeabi_ddiv+0x664>)
    4c9c:	e6b6      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4c9e:	464b      	mov	r3, r9
    4ca0:	431a      	orrs	r2, r3
    4ca2:	0312      	lsls	r2, r2, #12
    4ca4:	0b12      	lsrs	r2, r2, #12
    4ca6:	46bc      	mov	ip, r7
    4ca8:	4c8a      	ldr	r4, [pc, #552]	; (4ed4 <__aeabi_ddiv+0x664>)
    4caa:	e6af      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4cac:	0003      	movs	r3, r0
    4cae:	465a      	mov	r2, fp
    4cb0:	3b28      	subs	r3, #40	; 0x28
    4cb2:	409a      	lsls	r2, r3
    4cb4:	2300      	movs	r3, #0
    4cb6:	4691      	mov	r9, r2
    4cb8:	4698      	mov	r8, r3
    4cba:	e657      	b.n	496c <__aeabi_ddiv+0xfc>
    4cbc:	4658      	mov	r0, fp
    4cbe:	f001 f837 	bl	5d30 <__clzsi2>
    4cc2:	3020      	adds	r0, #32
    4cc4:	e640      	b.n	4948 <__aeabi_ddiv+0xd8>
    4cc6:	0003      	movs	r3, r0
    4cc8:	4652      	mov	r2, sl
    4cca:	3b28      	subs	r3, #40	; 0x28
    4ccc:	409a      	lsls	r2, r3
    4cce:	2100      	movs	r1, #0
    4cd0:	4693      	mov	fp, r2
    4cd2:	e677      	b.n	49c4 <__aeabi_ddiv+0x154>
    4cd4:	f001 f82c 	bl	5d30 <__clzsi2>
    4cd8:	3020      	adds	r0, #32
    4cda:	e65f      	b.n	499c <__aeabi_ddiv+0x12c>
    4cdc:	4588      	cmp	r8, r1
    4cde:	d200      	bcs.n	4ce2 <__aeabi_ddiv+0x472>
    4ce0:	e6c7      	b.n	4a72 <__aeabi_ddiv+0x202>
    4ce2:	464b      	mov	r3, r9
    4ce4:	07de      	lsls	r6, r3, #31
    4ce6:	085d      	lsrs	r5, r3, #1
    4ce8:	4643      	mov	r3, r8
    4cea:	085b      	lsrs	r3, r3, #1
    4cec:	431e      	orrs	r6, r3
    4cee:	4643      	mov	r3, r8
    4cf0:	07db      	lsls	r3, r3, #31
    4cf2:	469a      	mov	sl, r3
    4cf4:	e6c2      	b.n	4a7c <__aeabi_ddiv+0x20c>
    4cf6:	2500      	movs	r5, #0
    4cf8:	4592      	cmp	sl, r2
    4cfa:	d300      	bcc.n	4cfe <__aeabi_ddiv+0x48e>
    4cfc:	e733      	b.n	4b66 <__aeabi_ddiv+0x2f6>
    4cfe:	9e03      	ldr	r6, [sp, #12]
    4d00:	4659      	mov	r1, fp
    4d02:	46b4      	mov	ip, r6
    4d04:	44e2      	add	sl, ip
    4d06:	45b2      	cmp	sl, r6
    4d08:	41ad      	sbcs	r5, r5
    4d0a:	426d      	negs	r5, r5
    4d0c:	4445      	add	r5, r8
    4d0e:	18eb      	adds	r3, r5, r3
    4d10:	3901      	subs	r1, #1
    4d12:	4598      	cmp	r8, r3
    4d14:	d207      	bcs.n	4d26 <__aeabi_ddiv+0x4b6>
    4d16:	4298      	cmp	r0, r3
    4d18:	d900      	bls.n	4d1c <__aeabi_ddiv+0x4ac>
    4d1a:	e07f      	b.n	4e1c <__aeabi_ddiv+0x5ac>
    4d1c:	d100      	bne.n	4d20 <__aeabi_ddiv+0x4b0>
    4d1e:	e0bc      	b.n	4e9a <__aeabi_ddiv+0x62a>
    4d20:	1a1d      	subs	r5, r3, r0
    4d22:	468b      	mov	fp, r1
    4d24:	e71f      	b.n	4b66 <__aeabi_ddiv+0x2f6>
    4d26:	4598      	cmp	r8, r3
    4d28:	d1fa      	bne.n	4d20 <__aeabi_ddiv+0x4b0>
    4d2a:	9d03      	ldr	r5, [sp, #12]
    4d2c:	4555      	cmp	r5, sl
    4d2e:	d9f2      	bls.n	4d16 <__aeabi_ddiv+0x4a6>
    4d30:	4643      	mov	r3, r8
    4d32:	468b      	mov	fp, r1
    4d34:	1a1d      	subs	r5, r3, r0
    4d36:	e716      	b.n	4b66 <__aeabi_ddiv+0x2f6>
    4d38:	469b      	mov	fp, r3
    4d3a:	e6ca      	b.n	4ad2 <__aeabi_ddiv+0x262>
    4d3c:	0015      	movs	r5, r2
    4d3e:	e6e7      	b.n	4b10 <__aeabi_ddiv+0x2a0>
    4d40:	465a      	mov	r2, fp
    4d42:	08c9      	lsrs	r1, r1, #3
    4d44:	0752      	lsls	r2, r2, #29
    4d46:	430a      	orrs	r2, r1
    4d48:	055b      	lsls	r3, r3, #21
    4d4a:	4690      	mov	r8, r2
    4d4c:	0d5c      	lsrs	r4, r3, #21
    4d4e:	465a      	mov	r2, fp
    4d50:	2301      	movs	r3, #1
    4d52:	9902      	ldr	r1, [sp, #8]
    4d54:	0252      	lsls	r2, r2, #9
    4d56:	4019      	ands	r1, r3
    4d58:	0b12      	lsrs	r2, r2, #12
    4d5a:	468c      	mov	ip, r1
    4d5c:	e656      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4d5e:	2b00      	cmp	r3, #0
    4d60:	d100      	bne.n	4d64 <__aeabi_ddiv+0x4f4>
    4d62:	e76f      	b.n	4c44 <__aeabi_ddiv+0x3d4>
    4d64:	4446      	add	r6, r8
    4d66:	1e4a      	subs	r2, r1, #1
    4d68:	45b0      	cmp	r8, r6
    4d6a:	d929      	bls.n	4dc0 <__aeabi_ddiv+0x550>
    4d6c:	0011      	movs	r1, r2
    4d6e:	4286      	cmp	r6, r0
    4d70:	d000      	beq.n	4d74 <__aeabi_ddiv+0x504>
    4d72:	e765      	b.n	4c40 <__aeabi_ddiv+0x3d0>
    4d74:	9a03      	ldr	r2, [sp, #12]
    4d76:	4293      	cmp	r3, r2
    4d78:	d000      	beq.n	4d7c <__aeabi_ddiv+0x50c>
    4d7a:	e761      	b.n	4c40 <__aeabi_ddiv+0x3d0>
    4d7c:	e762      	b.n	4c44 <__aeabi_ddiv+0x3d4>
    4d7e:	2101      	movs	r1, #1
    4d80:	4249      	negs	r1, r1
    4d82:	2001      	movs	r0, #1
    4d84:	1ac2      	subs	r2, r0, r3
    4d86:	2a38      	cmp	r2, #56	; 0x38
    4d88:	dd21      	ble.n	4dce <__aeabi_ddiv+0x55e>
    4d8a:	9b02      	ldr	r3, [sp, #8]
    4d8c:	4003      	ands	r3, r0
    4d8e:	469c      	mov	ip, r3
    4d90:	e638      	b.n	4a04 <__aeabi_ddiv+0x194>
    4d92:	220f      	movs	r2, #15
    4d94:	400a      	ands	r2, r1
    4d96:	2a04      	cmp	r2, #4
    4d98:	d100      	bne.n	4d9c <__aeabi_ddiv+0x52c>
    4d9a:	e75b      	b.n	4c54 <__aeabi_ddiv+0x3e4>
    4d9c:	000a      	movs	r2, r1
    4d9e:	1d11      	adds	r1, r2, #4
    4da0:	4291      	cmp	r1, r2
    4da2:	4192      	sbcs	r2, r2
    4da4:	4252      	negs	r2, r2
    4da6:	4493      	add	fp, r2
    4da8:	e754      	b.n	4c54 <__aeabi_ddiv+0x3e4>
    4daa:	4b47      	ldr	r3, [pc, #284]	; (4ec8 <__aeabi_ddiv+0x658>)
    4dac:	18e3      	adds	r3, r4, r3
    4dae:	2b00      	cmp	r3, #0
    4db0:	dde5      	ble.n	4d7e <__aeabi_ddiv+0x50e>
    4db2:	2201      	movs	r2, #1
    4db4:	4252      	negs	r2, r2
    4db6:	e7f2      	b.n	4d9e <__aeabi_ddiv+0x52e>
    4db8:	001d      	movs	r5, r3
    4dba:	e6fa      	b.n	4bb2 <__aeabi_ddiv+0x342>
    4dbc:	469a      	mov	sl, r3
    4dbe:	e71c      	b.n	4bfa <__aeabi_ddiv+0x38a>
    4dc0:	42b0      	cmp	r0, r6
    4dc2:	d839      	bhi.n	4e38 <__aeabi_ddiv+0x5c8>
    4dc4:	d06e      	beq.n	4ea4 <__aeabi_ddiv+0x634>
    4dc6:	0011      	movs	r1, r2
    4dc8:	e73a      	b.n	4c40 <__aeabi_ddiv+0x3d0>
    4dca:	9302      	str	r3, [sp, #8]
    4dcc:	e73a      	b.n	4c44 <__aeabi_ddiv+0x3d4>
    4dce:	2a1f      	cmp	r2, #31
    4dd0:	dc3c      	bgt.n	4e4c <__aeabi_ddiv+0x5dc>
    4dd2:	2320      	movs	r3, #32
    4dd4:	1a9b      	subs	r3, r3, r2
    4dd6:	000c      	movs	r4, r1
    4dd8:	4658      	mov	r0, fp
    4dda:	4099      	lsls	r1, r3
    4ddc:	4098      	lsls	r0, r3
    4dde:	1e4b      	subs	r3, r1, #1
    4de0:	4199      	sbcs	r1, r3
    4de2:	465b      	mov	r3, fp
    4de4:	40d4      	lsrs	r4, r2
    4de6:	40d3      	lsrs	r3, r2
    4de8:	4320      	orrs	r0, r4
    4dea:	4308      	orrs	r0, r1
    4dec:	001a      	movs	r2, r3
    4dee:	0743      	lsls	r3, r0, #29
    4df0:	d009      	beq.n	4e06 <__aeabi_ddiv+0x596>
    4df2:	230f      	movs	r3, #15
    4df4:	4003      	ands	r3, r0
    4df6:	2b04      	cmp	r3, #4
    4df8:	d005      	beq.n	4e06 <__aeabi_ddiv+0x596>
    4dfa:	0001      	movs	r1, r0
    4dfc:	1d08      	adds	r0, r1, #4
    4dfe:	4288      	cmp	r0, r1
    4e00:	419b      	sbcs	r3, r3
    4e02:	425b      	negs	r3, r3
    4e04:	18d2      	adds	r2, r2, r3
    4e06:	0213      	lsls	r3, r2, #8
    4e08:	d53a      	bpl.n	4e80 <__aeabi_ddiv+0x610>
    4e0a:	2301      	movs	r3, #1
    4e0c:	9a02      	ldr	r2, [sp, #8]
    4e0e:	2401      	movs	r4, #1
    4e10:	401a      	ands	r2, r3
    4e12:	2300      	movs	r3, #0
    4e14:	4694      	mov	ip, r2
    4e16:	4698      	mov	r8, r3
    4e18:	2200      	movs	r2, #0
    4e1a:	e5f7      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4e1c:	2102      	movs	r1, #2
    4e1e:	4249      	negs	r1, r1
    4e20:	468c      	mov	ip, r1
    4e22:	9d03      	ldr	r5, [sp, #12]
    4e24:	44e3      	add	fp, ip
    4e26:	46ac      	mov	ip, r5
    4e28:	44e2      	add	sl, ip
    4e2a:	45aa      	cmp	sl, r5
    4e2c:	41ad      	sbcs	r5, r5
    4e2e:	426d      	negs	r5, r5
    4e30:	4445      	add	r5, r8
    4e32:	18ed      	adds	r5, r5, r3
    4e34:	1a2d      	subs	r5, r5, r0
    4e36:	e696      	b.n	4b66 <__aeabi_ddiv+0x2f6>
    4e38:	1e8a      	subs	r2, r1, #2
    4e3a:	9903      	ldr	r1, [sp, #12]
    4e3c:	004d      	lsls	r5, r1, #1
    4e3e:	428d      	cmp	r5, r1
    4e40:	4189      	sbcs	r1, r1
    4e42:	4249      	negs	r1, r1
    4e44:	4441      	add	r1, r8
    4e46:	1876      	adds	r6, r6, r1
    4e48:	9503      	str	r5, [sp, #12]
    4e4a:	e78f      	b.n	4d6c <__aeabi_ddiv+0x4fc>
    4e4c:	201f      	movs	r0, #31
    4e4e:	4240      	negs	r0, r0
    4e50:	1ac3      	subs	r3, r0, r3
    4e52:	4658      	mov	r0, fp
    4e54:	40d8      	lsrs	r0, r3
    4e56:	0003      	movs	r3, r0
    4e58:	2a20      	cmp	r2, #32
    4e5a:	d028      	beq.n	4eae <__aeabi_ddiv+0x63e>
    4e5c:	2040      	movs	r0, #64	; 0x40
    4e5e:	465d      	mov	r5, fp
    4e60:	1a82      	subs	r2, r0, r2
    4e62:	4095      	lsls	r5, r2
    4e64:	4329      	orrs	r1, r5
    4e66:	1e4a      	subs	r2, r1, #1
    4e68:	4191      	sbcs	r1, r2
    4e6a:	4319      	orrs	r1, r3
    4e6c:	2307      	movs	r3, #7
    4e6e:	2200      	movs	r2, #0
    4e70:	400b      	ands	r3, r1
    4e72:	d009      	beq.n	4e88 <__aeabi_ddiv+0x618>
    4e74:	230f      	movs	r3, #15
    4e76:	2200      	movs	r2, #0
    4e78:	400b      	ands	r3, r1
    4e7a:	0008      	movs	r0, r1
    4e7c:	2b04      	cmp	r3, #4
    4e7e:	d1bd      	bne.n	4dfc <__aeabi_ddiv+0x58c>
    4e80:	0001      	movs	r1, r0
    4e82:	0753      	lsls	r3, r2, #29
    4e84:	0252      	lsls	r2, r2, #9
    4e86:	0b12      	lsrs	r2, r2, #12
    4e88:	08c9      	lsrs	r1, r1, #3
    4e8a:	4319      	orrs	r1, r3
    4e8c:	2301      	movs	r3, #1
    4e8e:	4688      	mov	r8, r1
    4e90:	9902      	ldr	r1, [sp, #8]
    4e92:	2400      	movs	r4, #0
    4e94:	4019      	ands	r1, r3
    4e96:	468c      	mov	ip, r1
    4e98:	e5b8      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4e9a:	4552      	cmp	r2, sl
    4e9c:	d8be      	bhi.n	4e1c <__aeabi_ddiv+0x5ac>
    4e9e:	468b      	mov	fp, r1
    4ea0:	2500      	movs	r5, #0
    4ea2:	e660      	b.n	4b66 <__aeabi_ddiv+0x2f6>
    4ea4:	9d03      	ldr	r5, [sp, #12]
    4ea6:	429d      	cmp	r5, r3
    4ea8:	d3c6      	bcc.n	4e38 <__aeabi_ddiv+0x5c8>
    4eaa:	0011      	movs	r1, r2
    4eac:	e762      	b.n	4d74 <__aeabi_ddiv+0x504>
    4eae:	2500      	movs	r5, #0
    4eb0:	e7d8      	b.n	4e64 <__aeabi_ddiv+0x5f4>
    4eb2:	2280      	movs	r2, #128	; 0x80
    4eb4:	465b      	mov	r3, fp
    4eb6:	0312      	lsls	r2, r2, #12
    4eb8:	431a      	orrs	r2, r3
    4eba:	9b01      	ldr	r3, [sp, #4]
    4ebc:	0312      	lsls	r2, r2, #12
    4ebe:	0b12      	lsrs	r2, r2, #12
    4ec0:	469c      	mov	ip, r3
    4ec2:	4688      	mov	r8, r1
    4ec4:	4c03      	ldr	r4, [pc, #12]	; (4ed4 <__aeabi_ddiv+0x664>)
    4ec6:	e5a1      	b.n	4a0c <__aeabi_ddiv+0x19c>
    4ec8:	000003ff 	.word	0x000003ff
    4ecc:	feffffff 	.word	0xfeffffff
    4ed0:	000007fe 	.word	0x000007fe
    4ed4:	000007ff 	.word	0x000007ff

00004ed8 <__eqdf2>:
    4ed8:	b5f0      	push	{r4, r5, r6, r7, lr}
    4eda:	464f      	mov	r7, r9
    4edc:	4646      	mov	r6, r8
    4ede:	46d6      	mov	lr, sl
    4ee0:	005c      	lsls	r4, r3, #1
    4ee2:	b5c0      	push	{r6, r7, lr}
    4ee4:	031f      	lsls	r7, r3, #12
    4ee6:	0fdb      	lsrs	r3, r3, #31
    4ee8:	469a      	mov	sl, r3
    4eea:	4b17      	ldr	r3, [pc, #92]	; (4f48 <__eqdf2+0x70>)
    4eec:	030e      	lsls	r6, r1, #12
    4eee:	004d      	lsls	r5, r1, #1
    4ef0:	4684      	mov	ip, r0
    4ef2:	4680      	mov	r8, r0
    4ef4:	0b36      	lsrs	r6, r6, #12
    4ef6:	0d6d      	lsrs	r5, r5, #21
    4ef8:	0fc9      	lsrs	r1, r1, #31
    4efa:	4691      	mov	r9, r2
    4efc:	0b3f      	lsrs	r7, r7, #12
    4efe:	0d64      	lsrs	r4, r4, #21
    4f00:	2001      	movs	r0, #1
    4f02:	429d      	cmp	r5, r3
    4f04:	d008      	beq.n	4f18 <__eqdf2+0x40>
    4f06:	429c      	cmp	r4, r3
    4f08:	d001      	beq.n	4f0e <__eqdf2+0x36>
    4f0a:	42a5      	cmp	r5, r4
    4f0c:	d00b      	beq.n	4f26 <__eqdf2+0x4e>
    4f0e:	bc1c      	pop	{r2, r3, r4}
    4f10:	4690      	mov	r8, r2
    4f12:	4699      	mov	r9, r3
    4f14:	46a2      	mov	sl, r4
    4f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4f18:	4663      	mov	r3, ip
    4f1a:	4333      	orrs	r3, r6
    4f1c:	d1f7      	bne.n	4f0e <__eqdf2+0x36>
    4f1e:	42ac      	cmp	r4, r5
    4f20:	d1f5      	bne.n	4f0e <__eqdf2+0x36>
    4f22:	433a      	orrs	r2, r7
    4f24:	d1f3      	bne.n	4f0e <__eqdf2+0x36>
    4f26:	2001      	movs	r0, #1
    4f28:	42be      	cmp	r6, r7
    4f2a:	d1f0      	bne.n	4f0e <__eqdf2+0x36>
    4f2c:	45c8      	cmp	r8, r9
    4f2e:	d1ee      	bne.n	4f0e <__eqdf2+0x36>
    4f30:	4551      	cmp	r1, sl
    4f32:	d007      	beq.n	4f44 <__eqdf2+0x6c>
    4f34:	2d00      	cmp	r5, #0
    4f36:	d1ea      	bne.n	4f0e <__eqdf2+0x36>
    4f38:	4663      	mov	r3, ip
    4f3a:	431e      	orrs	r6, r3
    4f3c:	0030      	movs	r0, r6
    4f3e:	1e46      	subs	r6, r0, #1
    4f40:	41b0      	sbcs	r0, r6
    4f42:	e7e4      	b.n	4f0e <__eqdf2+0x36>
    4f44:	2000      	movs	r0, #0
    4f46:	e7e2      	b.n	4f0e <__eqdf2+0x36>
    4f48:	000007ff 	.word	0x000007ff

00004f4c <__gedf2>:
    4f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f4e:	4645      	mov	r5, r8
    4f50:	46de      	mov	lr, fp
    4f52:	4657      	mov	r7, sl
    4f54:	464e      	mov	r6, r9
    4f56:	b5e0      	push	{r5, r6, r7, lr}
    4f58:	031f      	lsls	r7, r3, #12
    4f5a:	0b3d      	lsrs	r5, r7, #12
    4f5c:	4f2c      	ldr	r7, [pc, #176]	; (5010 <__gedf2+0xc4>)
    4f5e:	030e      	lsls	r6, r1, #12
    4f60:	004c      	lsls	r4, r1, #1
    4f62:	46ab      	mov	fp, r5
    4f64:	005d      	lsls	r5, r3, #1
    4f66:	4684      	mov	ip, r0
    4f68:	0b36      	lsrs	r6, r6, #12
    4f6a:	0d64      	lsrs	r4, r4, #21
    4f6c:	0fc9      	lsrs	r1, r1, #31
    4f6e:	4690      	mov	r8, r2
    4f70:	0d6d      	lsrs	r5, r5, #21
    4f72:	0fdb      	lsrs	r3, r3, #31
    4f74:	42bc      	cmp	r4, r7
    4f76:	d02a      	beq.n	4fce <__gedf2+0x82>
    4f78:	4f25      	ldr	r7, [pc, #148]	; (5010 <__gedf2+0xc4>)
    4f7a:	42bd      	cmp	r5, r7
    4f7c:	d02d      	beq.n	4fda <__gedf2+0x8e>
    4f7e:	2c00      	cmp	r4, #0
    4f80:	d10f      	bne.n	4fa2 <__gedf2+0x56>
    4f82:	4330      	orrs	r0, r6
    4f84:	0007      	movs	r7, r0
    4f86:	4681      	mov	r9, r0
    4f88:	4278      	negs	r0, r7
    4f8a:	4178      	adcs	r0, r7
    4f8c:	b2c0      	uxtb	r0, r0
    4f8e:	2d00      	cmp	r5, #0
    4f90:	d117      	bne.n	4fc2 <__gedf2+0x76>
    4f92:	465f      	mov	r7, fp
    4f94:	433a      	orrs	r2, r7
    4f96:	d114      	bne.n	4fc2 <__gedf2+0x76>
    4f98:	464b      	mov	r3, r9
    4f9a:	2000      	movs	r0, #0
    4f9c:	2b00      	cmp	r3, #0
    4f9e:	d00a      	beq.n	4fb6 <__gedf2+0x6a>
    4fa0:	e006      	b.n	4fb0 <__gedf2+0x64>
    4fa2:	2d00      	cmp	r5, #0
    4fa4:	d102      	bne.n	4fac <__gedf2+0x60>
    4fa6:	4658      	mov	r0, fp
    4fa8:	4302      	orrs	r2, r0
    4faa:	d001      	beq.n	4fb0 <__gedf2+0x64>
    4fac:	4299      	cmp	r1, r3
    4fae:	d018      	beq.n	4fe2 <__gedf2+0x96>
    4fb0:	4248      	negs	r0, r1
    4fb2:	2101      	movs	r1, #1
    4fb4:	4308      	orrs	r0, r1
    4fb6:	bc3c      	pop	{r2, r3, r4, r5}
    4fb8:	4690      	mov	r8, r2
    4fba:	4699      	mov	r9, r3
    4fbc:	46a2      	mov	sl, r4
    4fbe:	46ab      	mov	fp, r5
    4fc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4fc2:	2800      	cmp	r0, #0
    4fc4:	d0f2      	beq.n	4fac <__gedf2+0x60>
    4fc6:	2001      	movs	r0, #1
    4fc8:	3b01      	subs	r3, #1
    4fca:	4318      	orrs	r0, r3
    4fcc:	e7f3      	b.n	4fb6 <__gedf2+0x6a>
    4fce:	0037      	movs	r7, r6
    4fd0:	4307      	orrs	r7, r0
    4fd2:	d0d1      	beq.n	4f78 <__gedf2+0x2c>
    4fd4:	2002      	movs	r0, #2
    4fd6:	4240      	negs	r0, r0
    4fd8:	e7ed      	b.n	4fb6 <__gedf2+0x6a>
    4fda:	465f      	mov	r7, fp
    4fdc:	4317      	orrs	r7, r2
    4fde:	d0ce      	beq.n	4f7e <__gedf2+0x32>
    4fe0:	e7f8      	b.n	4fd4 <__gedf2+0x88>
    4fe2:	42ac      	cmp	r4, r5
    4fe4:	dce4      	bgt.n	4fb0 <__gedf2+0x64>
    4fe6:	da03      	bge.n	4ff0 <__gedf2+0xa4>
    4fe8:	1e48      	subs	r0, r1, #1
    4fea:	2101      	movs	r1, #1
    4fec:	4308      	orrs	r0, r1
    4fee:	e7e2      	b.n	4fb6 <__gedf2+0x6a>
    4ff0:	455e      	cmp	r6, fp
    4ff2:	d8dd      	bhi.n	4fb0 <__gedf2+0x64>
    4ff4:	d006      	beq.n	5004 <__gedf2+0xb8>
    4ff6:	2000      	movs	r0, #0
    4ff8:	455e      	cmp	r6, fp
    4ffa:	d2dc      	bcs.n	4fb6 <__gedf2+0x6a>
    4ffc:	2301      	movs	r3, #1
    4ffe:	1e48      	subs	r0, r1, #1
    5000:	4318      	orrs	r0, r3
    5002:	e7d8      	b.n	4fb6 <__gedf2+0x6a>
    5004:	45c4      	cmp	ip, r8
    5006:	d8d3      	bhi.n	4fb0 <__gedf2+0x64>
    5008:	2000      	movs	r0, #0
    500a:	45c4      	cmp	ip, r8
    500c:	d3f6      	bcc.n	4ffc <__gedf2+0xb0>
    500e:	e7d2      	b.n	4fb6 <__gedf2+0x6a>
    5010:	000007ff 	.word	0x000007ff

00005014 <__ledf2>:
    5014:	b5f0      	push	{r4, r5, r6, r7, lr}
    5016:	464e      	mov	r6, r9
    5018:	4645      	mov	r5, r8
    501a:	46de      	mov	lr, fp
    501c:	4657      	mov	r7, sl
    501e:	005c      	lsls	r4, r3, #1
    5020:	b5e0      	push	{r5, r6, r7, lr}
    5022:	031f      	lsls	r7, r3, #12
    5024:	0fdb      	lsrs	r3, r3, #31
    5026:	4699      	mov	r9, r3
    5028:	4b2a      	ldr	r3, [pc, #168]	; (50d4 <__ledf2+0xc0>)
    502a:	030e      	lsls	r6, r1, #12
    502c:	004d      	lsls	r5, r1, #1
    502e:	0fc9      	lsrs	r1, r1, #31
    5030:	4684      	mov	ip, r0
    5032:	0b36      	lsrs	r6, r6, #12
    5034:	0d6d      	lsrs	r5, r5, #21
    5036:	468b      	mov	fp, r1
    5038:	4690      	mov	r8, r2
    503a:	0b3f      	lsrs	r7, r7, #12
    503c:	0d64      	lsrs	r4, r4, #21
    503e:	429d      	cmp	r5, r3
    5040:	d020      	beq.n	5084 <__ledf2+0x70>
    5042:	4b24      	ldr	r3, [pc, #144]	; (50d4 <__ledf2+0xc0>)
    5044:	429c      	cmp	r4, r3
    5046:	d022      	beq.n	508e <__ledf2+0x7a>
    5048:	2d00      	cmp	r5, #0
    504a:	d112      	bne.n	5072 <__ledf2+0x5e>
    504c:	4330      	orrs	r0, r6
    504e:	4243      	negs	r3, r0
    5050:	4143      	adcs	r3, r0
    5052:	b2db      	uxtb	r3, r3
    5054:	2c00      	cmp	r4, #0
    5056:	d01f      	beq.n	5098 <__ledf2+0x84>
    5058:	2b00      	cmp	r3, #0
    505a:	d00c      	beq.n	5076 <__ledf2+0x62>
    505c:	464b      	mov	r3, r9
    505e:	2001      	movs	r0, #1
    5060:	3b01      	subs	r3, #1
    5062:	4303      	orrs	r3, r0
    5064:	0018      	movs	r0, r3
    5066:	bc3c      	pop	{r2, r3, r4, r5}
    5068:	4690      	mov	r8, r2
    506a:	4699      	mov	r9, r3
    506c:	46a2      	mov	sl, r4
    506e:	46ab      	mov	fp, r5
    5070:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5072:	2c00      	cmp	r4, #0
    5074:	d016      	beq.n	50a4 <__ledf2+0x90>
    5076:	45cb      	cmp	fp, r9
    5078:	d017      	beq.n	50aa <__ledf2+0x96>
    507a:	465b      	mov	r3, fp
    507c:	4259      	negs	r1, r3
    507e:	2301      	movs	r3, #1
    5080:	430b      	orrs	r3, r1
    5082:	e7ef      	b.n	5064 <__ledf2+0x50>
    5084:	0031      	movs	r1, r6
    5086:	2302      	movs	r3, #2
    5088:	4301      	orrs	r1, r0
    508a:	d1eb      	bne.n	5064 <__ledf2+0x50>
    508c:	e7d9      	b.n	5042 <__ledf2+0x2e>
    508e:	0039      	movs	r1, r7
    5090:	2302      	movs	r3, #2
    5092:	4311      	orrs	r1, r2
    5094:	d1e6      	bne.n	5064 <__ledf2+0x50>
    5096:	e7d7      	b.n	5048 <__ledf2+0x34>
    5098:	433a      	orrs	r2, r7
    509a:	d1dd      	bne.n	5058 <__ledf2+0x44>
    509c:	2300      	movs	r3, #0
    509e:	2800      	cmp	r0, #0
    50a0:	d0e0      	beq.n	5064 <__ledf2+0x50>
    50a2:	e7ea      	b.n	507a <__ledf2+0x66>
    50a4:	433a      	orrs	r2, r7
    50a6:	d1e6      	bne.n	5076 <__ledf2+0x62>
    50a8:	e7e7      	b.n	507a <__ledf2+0x66>
    50aa:	42a5      	cmp	r5, r4
    50ac:	dce5      	bgt.n	507a <__ledf2+0x66>
    50ae:	db05      	blt.n	50bc <__ledf2+0xa8>
    50b0:	42be      	cmp	r6, r7
    50b2:	d8e2      	bhi.n	507a <__ledf2+0x66>
    50b4:	d007      	beq.n	50c6 <__ledf2+0xb2>
    50b6:	2300      	movs	r3, #0
    50b8:	42be      	cmp	r6, r7
    50ba:	d2d3      	bcs.n	5064 <__ledf2+0x50>
    50bc:	4659      	mov	r1, fp
    50be:	2301      	movs	r3, #1
    50c0:	3901      	subs	r1, #1
    50c2:	430b      	orrs	r3, r1
    50c4:	e7ce      	b.n	5064 <__ledf2+0x50>
    50c6:	45c4      	cmp	ip, r8
    50c8:	d8d7      	bhi.n	507a <__ledf2+0x66>
    50ca:	2300      	movs	r3, #0
    50cc:	45c4      	cmp	ip, r8
    50ce:	d3f5      	bcc.n	50bc <__ledf2+0xa8>
    50d0:	e7c8      	b.n	5064 <__ledf2+0x50>
    50d2:	46c0      	nop			; (mov r8, r8)
    50d4:	000007ff 	.word	0x000007ff

000050d8 <__aeabi_dmul>:
    50d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    50da:	4657      	mov	r7, sl
    50dc:	4645      	mov	r5, r8
    50de:	46de      	mov	lr, fp
    50e0:	464e      	mov	r6, r9
    50e2:	b5e0      	push	{r5, r6, r7, lr}
    50e4:	030c      	lsls	r4, r1, #12
    50e6:	4698      	mov	r8, r3
    50e8:	004e      	lsls	r6, r1, #1
    50ea:	0b23      	lsrs	r3, r4, #12
    50ec:	b087      	sub	sp, #28
    50ee:	0007      	movs	r7, r0
    50f0:	4692      	mov	sl, r2
    50f2:	469b      	mov	fp, r3
    50f4:	0d76      	lsrs	r6, r6, #21
    50f6:	0fcd      	lsrs	r5, r1, #31
    50f8:	2e00      	cmp	r6, #0
    50fa:	d06b      	beq.n	51d4 <__aeabi_dmul+0xfc>
    50fc:	4b6d      	ldr	r3, [pc, #436]	; (52b4 <__aeabi_dmul+0x1dc>)
    50fe:	429e      	cmp	r6, r3
    5100:	d035      	beq.n	516e <__aeabi_dmul+0x96>
    5102:	2480      	movs	r4, #128	; 0x80
    5104:	465b      	mov	r3, fp
    5106:	0f42      	lsrs	r2, r0, #29
    5108:	0424      	lsls	r4, r4, #16
    510a:	00db      	lsls	r3, r3, #3
    510c:	4314      	orrs	r4, r2
    510e:	431c      	orrs	r4, r3
    5110:	00c3      	lsls	r3, r0, #3
    5112:	4699      	mov	r9, r3
    5114:	4b68      	ldr	r3, [pc, #416]	; (52b8 <__aeabi_dmul+0x1e0>)
    5116:	46a3      	mov	fp, r4
    5118:	469c      	mov	ip, r3
    511a:	2300      	movs	r3, #0
    511c:	2700      	movs	r7, #0
    511e:	4466      	add	r6, ip
    5120:	9302      	str	r3, [sp, #8]
    5122:	4643      	mov	r3, r8
    5124:	031c      	lsls	r4, r3, #12
    5126:	005a      	lsls	r2, r3, #1
    5128:	0fdb      	lsrs	r3, r3, #31
    512a:	4650      	mov	r0, sl
    512c:	0b24      	lsrs	r4, r4, #12
    512e:	0d52      	lsrs	r2, r2, #21
    5130:	4698      	mov	r8, r3
    5132:	d100      	bne.n	5136 <__aeabi_dmul+0x5e>
    5134:	e076      	b.n	5224 <__aeabi_dmul+0x14c>
    5136:	4b5f      	ldr	r3, [pc, #380]	; (52b4 <__aeabi_dmul+0x1dc>)
    5138:	429a      	cmp	r2, r3
    513a:	d06d      	beq.n	5218 <__aeabi_dmul+0x140>
    513c:	2380      	movs	r3, #128	; 0x80
    513e:	0f41      	lsrs	r1, r0, #29
    5140:	041b      	lsls	r3, r3, #16
    5142:	430b      	orrs	r3, r1
    5144:	495c      	ldr	r1, [pc, #368]	; (52b8 <__aeabi_dmul+0x1e0>)
    5146:	00e4      	lsls	r4, r4, #3
    5148:	468c      	mov	ip, r1
    514a:	431c      	orrs	r4, r3
    514c:	00c3      	lsls	r3, r0, #3
    514e:	2000      	movs	r0, #0
    5150:	4462      	add	r2, ip
    5152:	4641      	mov	r1, r8
    5154:	18b6      	adds	r6, r6, r2
    5156:	4069      	eors	r1, r5
    5158:	1c72      	adds	r2, r6, #1
    515a:	9101      	str	r1, [sp, #4]
    515c:	4694      	mov	ip, r2
    515e:	4307      	orrs	r7, r0
    5160:	2f0f      	cmp	r7, #15
    5162:	d900      	bls.n	5166 <__aeabi_dmul+0x8e>
    5164:	e0b0      	b.n	52c8 <__aeabi_dmul+0x1f0>
    5166:	4a55      	ldr	r2, [pc, #340]	; (52bc <__aeabi_dmul+0x1e4>)
    5168:	00bf      	lsls	r7, r7, #2
    516a:	59d2      	ldr	r2, [r2, r7]
    516c:	4697      	mov	pc, r2
    516e:	465b      	mov	r3, fp
    5170:	4303      	orrs	r3, r0
    5172:	4699      	mov	r9, r3
    5174:	d000      	beq.n	5178 <__aeabi_dmul+0xa0>
    5176:	e087      	b.n	5288 <__aeabi_dmul+0x1b0>
    5178:	2300      	movs	r3, #0
    517a:	469b      	mov	fp, r3
    517c:	3302      	adds	r3, #2
    517e:	2708      	movs	r7, #8
    5180:	9302      	str	r3, [sp, #8]
    5182:	e7ce      	b.n	5122 <__aeabi_dmul+0x4a>
    5184:	4642      	mov	r2, r8
    5186:	9201      	str	r2, [sp, #4]
    5188:	2802      	cmp	r0, #2
    518a:	d067      	beq.n	525c <__aeabi_dmul+0x184>
    518c:	2803      	cmp	r0, #3
    518e:	d100      	bne.n	5192 <__aeabi_dmul+0xba>
    5190:	e20e      	b.n	55b0 <__aeabi_dmul+0x4d8>
    5192:	2801      	cmp	r0, #1
    5194:	d000      	beq.n	5198 <__aeabi_dmul+0xc0>
    5196:	e162      	b.n	545e <__aeabi_dmul+0x386>
    5198:	2300      	movs	r3, #0
    519a:	2400      	movs	r4, #0
    519c:	2200      	movs	r2, #0
    519e:	4699      	mov	r9, r3
    51a0:	9901      	ldr	r1, [sp, #4]
    51a2:	4001      	ands	r1, r0
    51a4:	b2cd      	uxtb	r5, r1
    51a6:	2100      	movs	r1, #0
    51a8:	0312      	lsls	r2, r2, #12
    51aa:	0d0b      	lsrs	r3, r1, #20
    51ac:	0b12      	lsrs	r2, r2, #12
    51ae:	051b      	lsls	r3, r3, #20
    51b0:	4313      	orrs	r3, r2
    51b2:	4a43      	ldr	r2, [pc, #268]	; (52c0 <__aeabi_dmul+0x1e8>)
    51b4:	0524      	lsls	r4, r4, #20
    51b6:	4013      	ands	r3, r2
    51b8:	431c      	orrs	r4, r3
    51ba:	0064      	lsls	r4, r4, #1
    51bc:	07ed      	lsls	r5, r5, #31
    51be:	0864      	lsrs	r4, r4, #1
    51c0:	432c      	orrs	r4, r5
    51c2:	4648      	mov	r0, r9
    51c4:	0021      	movs	r1, r4
    51c6:	b007      	add	sp, #28
    51c8:	bc3c      	pop	{r2, r3, r4, r5}
    51ca:	4690      	mov	r8, r2
    51cc:	4699      	mov	r9, r3
    51ce:	46a2      	mov	sl, r4
    51d0:	46ab      	mov	fp, r5
    51d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    51d4:	4303      	orrs	r3, r0
    51d6:	4699      	mov	r9, r3
    51d8:	d04f      	beq.n	527a <__aeabi_dmul+0x1a2>
    51da:	465b      	mov	r3, fp
    51dc:	2b00      	cmp	r3, #0
    51de:	d100      	bne.n	51e2 <__aeabi_dmul+0x10a>
    51e0:	e189      	b.n	54f6 <__aeabi_dmul+0x41e>
    51e2:	4658      	mov	r0, fp
    51e4:	f000 fda4 	bl	5d30 <__clzsi2>
    51e8:	0003      	movs	r3, r0
    51ea:	3b0b      	subs	r3, #11
    51ec:	2b1c      	cmp	r3, #28
    51ee:	dd00      	ble.n	51f2 <__aeabi_dmul+0x11a>
    51f0:	e17a      	b.n	54e8 <__aeabi_dmul+0x410>
    51f2:	221d      	movs	r2, #29
    51f4:	1ad3      	subs	r3, r2, r3
    51f6:	003a      	movs	r2, r7
    51f8:	0001      	movs	r1, r0
    51fa:	465c      	mov	r4, fp
    51fc:	40da      	lsrs	r2, r3
    51fe:	3908      	subs	r1, #8
    5200:	408c      	lsls	r4, r1
    5202:	0013      	movs	r3, r2
    5204:	408f      	lsls	r7, r1
    5206:	4323      	orrs	r3, r4
    5208:	469b      	mov	fp, r3
    520a:	46b9      	mov	r9, r7
    520c:	2300      	movs	r3, #0
    520e:	4e2d      	ldr	r6, [pc, #180]	; (52c4 <__aeabi_dmul+0x1ec>)
    5210:	2700      	movs	r7, #0
    5212:	1a36      	subs	r6, r6, r0
    5214:	9302      	str	r3, [sp, #8]
    5216:	e784      	b.n	5122 <__aeabi_dmul+0x4a>
    5218:	4653      	mov	r3, sl
    521a:	4323      	orrs	r3, r4
    521c:	d12a      	bne.n	5274 <__aeabi_dmul+0x19c>
    521e:	2400      	movs	r4, #0
    5220:	2002      	movs	r0, #2
    5222:	e796      	b.n	5152 <__aeabi_dmul+0x7a>
    5224:	4653      	mov	r3, sl
    5226:	4323      	orrs	r3, r4
    5228:	d020      	beq.n	526c <__aeabi_dmul+0x194>
    522a:	2c00      	cmp	r4, #0
    522c:	d100      	bne.n	5230 <__aeabi_dmul+0x158>
    522e:	e157      	b.n	54e0 <__aeabi_dmul+0x408>
    5230:	0020      	movs	r0, r4
    5232:	f000 fd7d 	bl	5d30 <__clzsi2>
    5236:	0003      	movs	r3, r0
    5238:	3b0b      	subs	r3, #11
    523a:	2b1c      	cmp	r3, #28
    523c:	dd00      	ble.n	5240 <__aeabi_dmul+0x168>
    523e:	e149      	b.n	54d4 <__aeabi_dmul+0x3fc>
    5240:	211d      	movs	r1, #29
    5242:	1acb      	subs	r3, r1, r3
    5244:	4651      	mov	r1, sl
    5246:	0002      	movs	r2, r0
    5248:	40d9      	lsrs	r1, r3
    524a:	4653      	mov	r3, sl
    524c:	3a08      	subs	r2, #8
    524e:	4094      	lsls	r4, r2
    5250:	4093      	lsls	r3, r2
    5252:	430c      	orrs	r4, r1
    5254:	4a1b      	ldr	r2, [pc, #108]	; (52c4 <__aeabi_dmul+0x1ec>)
    5256:	1a12      	subs	r2, r2, r0
    5258:	2000      	movs	r0, #0
    525a:	e77a      	b.n	5152 <__aeabi_dmul+0x7a>
    525c:	2501      	movs	r5, #1
    525e:	9b01      	ldr	r3, [sp, #4]
    5260:	4c14      	ldr	r4, [pc, #80]	; (52b4 <__aeabi_dmul+0x1dc>)
    5262:	401d      	ands	r5, r3
    5264:	2300      	movs	r3, #0
    5266:	2200      	movs	r2, #0
    5268:	4699      	mov	r9, r3
    526a:	e79c      	b.n	51a6 <__aeabi_dmul+0xce>
    526c:	2400      	movs	r4, #0
    526e:	2200      	movs	r2, #0
    5270:	2001      	movs	r0, #1
    5272:	e76e      	b.n	5152 <__aeabi_dmul+0x7a>
    5274:	4653      	mov	r3, sl
    5276:	2003      	movs	r0, #3
    5278:	e76b      	b.n	5152 <__aeabi_dmul+0x7a>
    527a:	2300      	movs	r3, #0
    527c:	469b      	mov	fp, r3
    527e:	3301      	adds	r3, #1
    5280:	2704      	movs	r7, #4
    5282:	2600      	movs	r6, #0
    5284:	9302      	str	r3, [sp, #8]
    5286:	e74c      	b.n	5122 <__aeabi_dmul+0x4a>
    5288:	2303      	movs	r3, #3
    528a:	4681      	mov	r9, r0
    528c:	270c      	movs	r7, #12
    528e:	9302      	str	r3, [sp, #8]
    5290:	e747      	b.n	5122 <__aeabi_dmul+0x4a>
    5292:	2280      	movs	r2, #128	; 0x80
    5294:	2300      	movs	r3, #0
    5296:	2500      	movs	r5, #0
    5298:	0312      	lsls	r2, r2, #12
    529a:	4699      	mov	r9, r3
    529c:	4c05      	ldr	r4, [pc, #20]	; (52b4 <__aeabi_dmul+0x1dc>)
    529e:	e782      	b.n	51a6 <__aeabi_dmul+0xce>
    52a0:	465c      	mov	r4, fp
    52a2:	464b      	mov	r3, r9
    52a4:	9802      	ldr	r0, [sp, #8]
    52a6:	e76f      	b.n	5188 <__aeabi_dmul+0xb0>
    52a8:	465c      	mov	r4, fp
    52aa:	464b      	mov	r3, r9
    52ac:	9501      	str	r5, [sp, #4]
    52ae:	9802      	ldr	r0, [sp, #8]
    52b0:	e76a      	b.n	5188 <__aeabi_dmul+0xb0>
    52b2:	46c0      	nop			; (mov r8, r8)
    52b4:	000007ff 	.word	0x000007ff
    52b8:	fffffc01 	.word	0xfffffc01
    52bc:	00006090 	.word	0x00006090
    52c0:	800fffff 	.word	0x800fffff
    52c4:	fffffc0d 	.word	0xfffffc0d
    52c8:	464a      	mov	r2, r9
    52ca:	4649      	mov	r1, r9
    52cc:	0c17      	lsrs	r7, r2, #16
    52ce:	0c1a      	lsrs	r2, r3, #16
    52d0:	041b      	lsls	r3, r3, #16
    52d2:	0c1b      	lsrs	r3, r3, #16
    52d4:	0408      	lsls	r0, r1, #16
    52d6:	0019      	movs	r1, r3
    52d8:	0c00      	lsrs	r0, r0, #16
    52da:	4341      	muls	r1, r0
    52dc:	0015      	movs	r5, r2
    52de:	4688      	mov	r8, r1
    52e0:	0019      	movs	r1, r3
    52e2:	437d      	muls	r5, r7
    52e4:	4379      	muls	r1, r7
    52e6:	9503      	str	r5, [sp, #12]
    52e8:	4689      	mov	r9, r1
    52ea:	0029      	movs	r1, r5
    52ec:	0015      	movs	r5, r2
    52ee:	4345      	muls	r5, r0
    52f0:	444d      	add	r5, r9
    52f2:	9502      	str	r5, [sp, #8]
    52f4:	4645      	mov	r5, r8
    52f6:	0c2d      	lsrs	r5, r5, #16
    52f8:	46aa      	mov	sl, r5
    52fa:	9d02      	ldr	r5, [sp, #8]
    52fc:	4455      	add	r5, sl
    52fe:	45a9      	cmp	r9, r5
    5300:	d906      	bls.n	5310 <__aeabi_dmul+0x238>
    5302:	468a      	mov	sl, r1
    5304:	2180      	movs	r1, #128	; 0x80
    5306:	0249      	lsls	r1, r1, #9
    5308:	4689      	mov	r9, r1
    530a:	44ca      	add	sl, r9
    530c:	4651      	mov	r1, sl
    530e:	9103      	str	r1, [sp, #12]
    5310:	0c29      	lsrs	r1, r5, #16
    5312:	9104      	str	r1, [sp, #16]
    5314:	4641      	mov	r1, r8
    5316:	0409      	lsls	r1, r1, #16
    5318:	042d      	lsls	r5, r5, #16
    531a:	0c09      	lsrs	r1, r1, #16
    531c:	4688      	mov	r8, r1
    531e:	0029      	movs	r1, r5
    5320:	0c25      	lsrs	r5, r4, #16
    5322:	0424      	lsls	r4, r4, #16
    5324:	4441      	add	r1, r8
    5326:	0c24      	lsrs	r4, r4, #16
    5328:	9105      	str	r1, [sp, #20]
    532a:	0021      	movs	r1, r4
    532c:	4341      	muls	r1, r0
    532e:	4688      	mov	r8, r1
    5330:	0021      	movs	r1, r4
    5332:	4379      	muls	r1, r7
    5334:	468a      	mov	sl, r1
    5336:	4368      	muls	r0, r5
    5338:	4641      	mov	r1, r8
    533a:	4450      	add	r0, sl
    533c:	4681      	mov	r9, r0
    533e:	0c08      	lsrs	r0, r1, #16
    5340:	4448      	add	r0, r9
    5342:	436f      	muls	r7, r5
    5344:	4582      	cmp	sl, r0
    5346:	d903      	bls.n	5350 <__aeabi_dmul+0x278>
    5348:	2180      	movs	r1, #128	; 0x80
    534a:	0249      	lsls	r1, r1, #9
    534c:	4689      	mov	r9, r1
    534e:	444f      	add	r7, r9
    5350:	0c01      	lsrs	r1, r0, #16
    5352:	4689      	mov	r9, r1
    5354:	0039      	movs	r1, r7
    5356:	4449      	add	r1, r9
    5358:	9102      	str	r1, [sp, #8]
    535a:	4641      	mov	r1, r8
    535c:	040f      	lsls	r7, r1, #16
    535e:	9904      	ldr	r1, [sp, #16]
    5360:	0c3f      	lsrs	r7, r7, #16
    5362:	4688      	mov	r8, r1
    5364:	0400      	lsls	r0, r0, #16
    5366:	19c0      	adds	r0, r0, r7
    5368:	4480      	add	r8, r0
    536a:	4641      	mov	r1, r8
    536c:	9104      	str	r1, [sp, #16]
    536e:	4659      	mov	r1, fp
    5370:	0c0f      	lsrs	r7, r1, #16
    5372:	0409      	lsls	r1, r1, #16
    5374:	0c09      	lsrs	r1, r1, #16
    5376:	4688      	mov	r8, r1
    5378:	4359      	muls	r1, r3
    537a:	468a      	mov	sl, r1
    537c:	0039      	movs	r1, r7
    537e:	4351      	muls	r1, r2
    5380:	4689      	mov	r9, r1
    5382:	4641      	mov	r1, r8
    5384:	434a      	muls	r2, r1
    5386:	4651      	mov	r1, sl
    5388:	0c09      	lsrs	r1, r1, #16
    538a:	468b      	mov	fp, r1
    538c:	437b      	muls	r3, r7
    538e:	18d2      	adds	r2, r2, r3
    5390:	445a      	add	r2, fp
    5392:	4293      	cmp	r3, r2
    5394:	d903      	bls.n	539e <__aeabi_dmul+0x2c6>
    5396:	2380      	movs	r3, #128	; 0x80
    5398:	025b      	lsls	r3, r3, #9
    539a:	469b      	mov	fp, r3
    539c:	44d9      	add	r9, fp
    539e:	4651      	mov	r1, sl
    53a0:	0409      	lsls	r1, r1, #16
    53a2:	0c09      	lsrs	r1, r1, #16
    53a4:	468a      	mov	sl, r1
    53a6:	4641      	mov	r1, r8
    53a8:	4361      	muls	r1, r4
    53aa:	437c      	muls	r4, r7
    53ac:	0c13      	lsrs	r3, r2, #16
    53ae:	0412      	lsls	r2, r2, #16
    53b0:	444b      	add	r3, r9
    53b2:	4452      	add	r2, sl
    53b4:	46a1      	mov	r9, r4
    53b6:	468a      	mov	sl, r1
    53b8:	003c      	movs	r4, r7
    53ba:	4641      	mov	r1, r8
    53bc:	436c      	muls	r4, r5
    53be:	434d      	muls	r5, r1
    53c0:	4651      	mov	r1, sl
    53c2:	444d      	add	r5, r9
    53c4:	0c0f      	lsrs	r7, r1, #16
    53c6:	197d      	adds	r5, r7, r5
    53c8:	45a9      	cmp	r9, r5
    53ca:	d903      	bls.n	53d4 <__aeabi_dmul+0x2fc>
    53cc:	2180      	movs	r1, #128	; 0x80
    53ce:	0249      	lsls	r1, r1, #9
    53d0:	4688      	mov	r8, r1
    53d2:	4444      	add	r4, r8
    53d4:	9f04      	ldr	r7, [sp, #16]
    53d6:	9903      	ldr	r1, [sp, #12]
    53d8:	46b8      	mov	r8, r7
    53da:	4441      	add	r1, r8
    53dc:	468b      	mov	fp, r1
    53de:	4583      	cmp	fp, r0
    53e0:	4180      	sbcs	r0, r0
    53e2:	4241      	negs	r1, r0
    53e4:	4688      	mov	r8, r1
    53e6:	4651      	mov	r1, sl
    53e8:	0408      	lsls	r0, r1, #16
    53ea:	042f      	lsls	r7, r5, #16
    53ec:	0c00      	lsrs	r0, r0, #16
    53ee:	183f      	adds	r7, r7, r0
    53f0:	4658      	mov	r0, fp
    53f2:	9902      	ldr	r1, [sp, #8]
    53f4:	1810      	adds	r0, r2, r0
    53f6:	4689      	mov	r9, r1
    53f8:	4290      	cmp	r0, r2
    53fa:	4192      	sbcs	r2, r2
    53fc:	444f      	add	r7, r9
    53fe:	46ba      	mov	sl, r7
    5400:	4252      	negs	r2, r2
    5402:	4699      	mov	r9, r3
    5404:	4693      	mov	fp, r2
    5406:	44c2      	add	sl, r8
    5408:	44d1      	add	r9, sl
    540a:	44cb      	add	fp, r9
    540c:	428f      	cmp	r7, r1
    540e:	41bf      	sbcs	r7, r7
    5410:	45c2      	cmp	sl, r8
    5412:	4189      	sbcs	r1, r1
    5414:	4599      	cmp	r9, r3
    5416:	419b      	sbcs	r3, r3
    5418:	4593      	cmp	fp, r2
    541a:	4192      	sbcs	r2, r2
    541c:	427f      	negs	r7, r7
    541e:	4249      	negs	r1, r1
    5420:	0c2d      	lsrs	r5, r5, #16
    5422:	4252      	negs	r2, r2
    5424:	430f      	orrs	r7, r1
    5426:	425b      	negs	r3, r3
    5428:	4313      	orrs	r3, r2
    542a:	197f      	adds	r7, r7, r5
    542c:	18ff      	adds	r7, r7, r3
    542e:	465b      	mov	r3, fp
    5430:	193c      	adds	r4, r7, r4
    5432:	0ddb      	lsrs	r3, r3, #23
    5434:	9a05      	ldr	r2, [sp, #20]
    5436:	0264      	lsls	r4, r4, #9
    5438:	431c      	orrs	r4, r3
    543a:	0243      	lsls	r3, r0, #9
    543c:	4313      	orrs	r3, r2
    543e:	1e5d      	subs	r5, r3, #1
    5440:	41ab      	sbcs	r3, r5
    5442:	465a      	mov	r2, fp
    5444:	0dc0      	lsrs	r0, r0, #23
    5446:	4303      	orrs	r3, r0
    5448:	0252      	lsls	r2, r2, #9
    544a:	4313      	orrs	r3, r2
    544c:	01e2      	lsls	r2, r4, #7
    544e:	d556      	bpl.n	54fe <__aeabi_dmul+0x426>
    5450:	2001      	movs	r0, #1
    5452:	085a      	lsrs	r2, r3, #1
    5454:	4003      	ands	r3, r0
    5456:	4313      	orrs	r3, r2
    5458:	07e2      	lsls	r2, r4, #31
    545a:	4313      	orrs	r3, r2
    545c:	0864      	lsrs	r4, r4, #1
    545e:	485a      	ldr	r0, [pc, #360]	; (55c8 <__aeabi_dmul+0x4f0>)
    5460:	4460      	add	r0, ip
    5462:	2800      	cmp	r0, #0
    5464:	dd4d      	ble.n	5502 <__aeabi_dmul+0x42a>
    5466:	075a      	lsls	r2, r3, #29
    5468:	d009      	beq.n	547e <__aeabi_dmul+0x3a6>
    546a:	220f      	movs	r2, #15
    546c:	401a      	ands	r2, r3
    546e:	2a04      	cmp	r2, #4
    5470:	d005      	beq.n	547e <__aeabi_dmul+0x3a6>
    5472:	1d1a      	adds	r2, r3, #4
    5474:	429a      	cmp	r2, r3
    5476:	419b      	sbcs	r3, r3
    5478:	425b      	negs	r3, r3
    547a:	18e4      	adds	r4, r4, r3
    547c:	0013      	movs	r3, r2
    547e:	01e2      	lsls	r2, r4, #7
    5480:	d504      	bpl.n	548c <__aeabi_dmul+0x3b4>
    5482:	2080      	movs	r0, #128	; 0x80
    5484:	4a51      	ldr	r2, [pc, #324]	; (55cc <__aeabi_dmul+0x4f4>)
    5486:	00c0      	lsls	r0, r0, #3
    5488:	4014      	ands	r4, r2
    548a:	4460      	add	r0, ip
    548c:	4a50      	ldr	r2, [pc, #320]	; (55d0 <__aeabi_dmul+0x4f8>)
    548e:	4290      	cmp	r0, r2
    5490:	dd00      	ble.n	5494 <__aeabi_dmul+0x3bc>
    5492:	e6e3      	b.n	525c <__aeabi_dmul+0x184>
    5494:	2501      	movs	r5, #1
    5496:	08db      	lsrs	r3, r3, #3
    5498:	0762      	lsls	r2, r4, #29
    549a:	431a      	orrs	r2, r3
    549c:	0264      	lsls	r4, r4, #9
    549e:	9b01      	ldr	r3, [sp, #4]
    54a0:	4691      	mov	r9, r2
    54a2:	0b22      	lsrs	r2, r4, #12
    54a4:	0544      	lsls	r4, r0, #21
    54a6:	0d64      	lsrs	r4, r4, #21
    54a8:	401d      	ands	r5, r3
    54aa:	e67c      	b.n	51a6 <__aeabi_dmul+0xce>
    54ac:	2280      	movs	r2, #128	; 0x80
    54ae:	4659      	mov	r1, fp
    54b0:	0312      	lsls	r2, r2, #12
    54b2:	4211      	tst	r1, r2
    54b4:	d008      	beq.n	54c8 <__aeabi_dmul+0x3f0>
    54b6:	4214      	tst	r4, r2
    54b8:	d106      	bne.n	54c8 <__aeabi_dmul+0x3f0>
    54ba:	4322      	orrs	r2, r4
    54bc:	0312      	lsls	r2, r2, #12
    54be:	0b12      	lsrs	r2, r2, #12
    54c0:	4645      	mov	r5, r8
    54c2:	4699      	mov	r9, r3
    54c4:	4c43      	ldr	r4, [pc, #268]	; (55d4 <__aeabi_dmul+0x4fc>)
    54c6:	e66e      	b.n	51a6 <__aeabi_dmul+0xce>
    54c8:	465b      	mov	r3, fp
    54ca:	431a      	orrs	r2, r3
    54cc:	0312      	lsls	r2, r2, #12
    54ce:	0b12      	lsrs	r2, r2, #12
    54d0:	4c40      	ldr	r4, [pc, #256]	; (55d4 <__aeabi_dmul+0x4fc>)
    54d2:	e668      	b.n	51a6 <__aeabi_dmul+0xce>
    54d4:	0003      	movs	r3, r0
    54d6:	4654      	mov	r4, sl
    54d8:	3b28      	subs	r3, #40	; 0x28
    54da:	409c      	lsls	r4, r3
    54dc:	2300      	movs	r3, #0
    54de:	e6b9      	b.n	5254 <__aeabi_dmul+0x17c>
    54e0:	f000 fc26 	bl	5d30 <__clzsi2>
    54e4:	3020      	adds	r0, #32
    54e6:	e6a6      	b.n	5236 <__aeabi_dmul+0x15e>
    54e8:	0003      	movs	r3, r0
    54ea:	3b28      	subs	r3, #40	; 0x28
    54ec:	409f      	lsls	r7, r3
    54ee:	2300      	movs	r3, #0
    54f0:	46bb      	mov	fp, r7
    54f2:	4699      	mov	r9, r3
    54f4:	e68a      	b.n	520c <__aeabi_dmul+0x134>
    54f6:	f000 fc1b 	bl	5d30 <__clzsi2>
    54fa:	3020      	adds	r0, #32
    54fc:	e674      	b.n	51e8 <__aeabi_dmul+0x110>
    54fe:	46b4      	mov	ip, r6
    5500:	e7ad      	b.n	545e <__aeabi_dmul+0x386>
    5502:	2501      	movs	r5, #1
    5504:	1a2a      	subs	r2, r5, r0
    5506:	2a38      	cmp	r2, #56	; 0x38
    5508:	dd06      	ble.n	5518 <__aeabi_dmul+0x440>
    550a:	9b01      	ldr	r3, [sp, #4]
    550c:	2400      	movs	r4, #0
    550e:	401d      	ands	r5, r3
    5510:	2300      	movs	r3, #0
    5512:	2200      	movs	r2, #0
    5514:	4699      	mov	r9, r3
    5516:	e646      	b.n	51a6 <__aeabi_dmul+0xce>
    5518:	2a1f      	cmp	r2, #31
    551a:	dc21      	bgt.n	5560 <__aeabi_dmul+0x488>
    551c:	2520      	movs	r5, #32
    551e:	0020      	movs	r0, r4
    5520:	1aad      	subs	r5, r5, r2
    5522:	001e      	movs	r6, r3
    5524:	40ab      	lsls	r3, r5
    5526:	40a8      	lsls	r0, r5
    5528:	40d6      	lsrs	r6, r2
    552a:	1e5d      	subs	r5, r3, #1
    552c:	41ab      	sbcs	r3, r5
    552e:	4330      	orrs	r0, r6
    5530:	4318      	orrs	r0, r3
    5532:	40d4      	lsrs	r4, r2
    5534:	0743      	lsls	r3, r0, #29
    5536:	d009      	beq.n	554c <__aeabi_dmul+0x474>
    5538:	230f      	movs	r3, #15
    553a:	4003      	ands	r3, r0
    553c:	2b04      	cmp	r3, #4
    553e:	d005      	beq.n	554c <__aeabi_dmul+0x474>
    5540:	0003      	movs	r3, r0
    5542:	1d18      	adds	r0, r3, #4
    5544:	4298      	cmp	r0, r3
    5546:	419b      	sbcs	r3, r3
    5548:	425b      	negs	r3, r3
    554a:	18e4      	adds	r4, r4, r3
    554c:	0223      	lsls	r3, r4, #8
    554e:	d521      	bpl.n	5594 <__aeabi_dmul+0x4bc>
    5550:	2501      	movs	r5, #1
    5552:	9b01      	ldr	r3, [sp, #4]
    5554:	2401      	movs	r4, #1
    5556:	401d      	ands	r5, r3
    5558:	2300      	movs	r3, #0
    555a:	2200      	movs	r2, #0
    555c:	4699      	mov	r9, r3
    555e:	e622      	b.n	51a6 <__aeabi_dmul+0xce>
    5560:	251f      	movs	r5, #31
    5562:	0021      	movs	r1, r4
    5564:	426d      	negs	r5, r5
    5566:	1a28      	subs	r0, r5, r0
    5568:	40c1      	lsrs	r1, r0
    556a:	0008      	movs	r0, r1
    556c:	2a20      	cmp	r2, #32
    556e:	d01d      	beq.n	55ac <__aeabi_dmul+0x4d4>
    5570:	355f      	adds	r5, #95	; 0x5f
    5572:	1aaa      	subs	r2, r5, r2
    5574:	4094      	lsls	r4, r2
    5576:	4323      	orrs	r3, r4
    5578:	1e5c      	subs	r4, r3, #1
    557a:	41a3      	sbcs	r3, r4
    557c:	2507      	movs	r5, #7
    557e:	4303      	orrs	r3, r0
    5580:	401d      	ands	r5, r3
    5582:	2200      	movs	r2, #0
    5584:	2d00      	cmp	r5, #0
    5586:	d009      	beq.n	559c <__aeabi_dmul+0x4c4>
    5588:	220f      	movs	r2, #15
    558a:	2400      	movs	r4, #0
    558c:	401a      	ands	r2, r3
    558e:	0018      	movs	r0, r3
    5590:	2a04      	cmp	r2, #4
    5592:	d1d6      	bne.n	5542 <__aeabi_dmul+0x46a>
    5594:	0003      	movs	r3, r0
    5596:	0765      	lsls	r5, r4, #29
    5598:	0264      	lsls	r4, r4, #9
    559a:	0b22      	lsrs	r2, r4, #12
    559c:	08db      	lsrs	r3, r3, #3
    559e:	432b      	orrs	r3, r5
    55a0:	2501      	movs	r5, #1
    55a2:	4699      	mov	r9, r3
    55a4:	9b01      	ldr	r3, [sp, #4]
    55a6:	2400      	movs	r4, #0
    55a8:	401d      	ands	r5, r3
    55aa:	e5fc      	b.n	51a6 <__aeabi_dmul+0xce>
    55ac:	2400      	movs	r4, #0
    55ae:	e7e2      	b.n	5576 <__aeabi_dmul+0x49e>
    55b0:	2280      	movs	r2, #128	; 0x80
    55b2:	2501      	movs	r5, #1
    55b4:	0312      	lsls	r2, r2, #12
    55b6:	4322      	orrs	r2, r4
    55b8:	9901      	ldr	r1, [sp, #4]
    55ba:	0312      	lsls	r2, r2, #12
    55bc:	0b12      	lsrs	r2, r2, #12
    55be:	400d      	ands	r5, r1
    55c0:	4699      	mov	r9, r3
    55c2:	4c04      	ldr	r4, [pc, #16]	; (55d4 <__aeabi_dmul+0x4fc>)
    55c4:	e5ef      	b.n	51a6 <__aeabi_dmul+0xce>
    55c6:	46c0      	nop			; (mov r8, r8)
    55c8:	000003ff 	.word	0x000003ff
    55cc:	feffffff 	.word	0xfeffffff
    55d0:	000007fe 	.word	0x000007fe
    55d4:	000007ff 	.word	0x000007ff

000055d8 <__aeabi_dsub>:
    55d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    55da:	4646      	mov	r6, r8
    55dc:	46d6      	mov	lr, sl
    55de:	464f      	mov	r7, r9
    55e0:	030c      	lsls	r4, r1, #12
    55e2:	b5c0      	push	{r6, r7, lr}
    55e4:	0fcd      	lsrs	r5, r1, #31
    55e6:	004e      	lsls	r6, r1, #1
    55e8:	0a61      	lsrs	r1, r4, #9
    55ea:	0f44      	lsrs	r4, r0, #29
    55ec:	430c      	orrs	r4, r1
    55ee:	00c1      	lsls	r1, r0, #3
    55f0:	0058      	lsls	r0, r3, #1
    55f2:	0d40      	lsrs	r0, r0, #21
    55f4:	4684      	mov	ip, r0
    55f6:	468a      	mov	sl, r1
    55f8:	000f      	movs	r7, r1
    55fa:	0319      	lsls	r1, r3, #12
    55fc:	0f50      	lsrs	r0, r2, #29
    55fe:	0a49      	lsrs	r1, r1, #9
    5600:	4301      	orrs	r1, r0
    5602:	48c6      	ldr	r0, [pc, #792]	; (591c <__aeabi_dsub+0x344>)
    5604:	0d76      	lsrs	r6, r6, #21
    5606:	46a8      	mov	r8, r5
    5608:	0fdb      	lsrs	r3, r3, #31
    560a:	00d2      	lsls	r2, r2, #3
    560c:	4584      	cmp	ip, r0
    560e:	d100      	bne.n	5612 <__aeabi_dsub+0x3a>
    5610:	e0d8      	b.n	57c4 <__aeabi_dsub+0x1ec>
    5612:	2001      	movs	r0, #1
    5614:	4043      	eors	r3, r0
    5616:	42ab      	cmp	r3, r5
    5618:	d100      	bne.n	561c <__aeabi_dsub+0x44>
    561a:	e0a6      	b.n	576a <__aeabi_dsub+0x192>
    561c:	4660      	mov	r0, ip
    561e:	1a35      	subs	r5, r6, r0
    5620:	2d00      	cmp	r5, #0
    5622:	dc00      	bgt.n	5626 <__aeabi_dsub+0x4e>
    5624:	e105      	b.n	5832 <__aeabi_dsub+0x25a>
    5626:	2800      	cmp	r0, #0
    5628:	d110      	bne.n	564c <__aeabi_dsub+0x74>
    562a:	000b      	movs	r3, r1
    562c:	4313      	orrs	r3, r2
    562e:	d100      	bne.n	5632 <__aeabi_dsub+0x5a>
    5630:	e0d7      	b.n	57e2 <__aeabi_dsub+0x20a>
    5632:	1e6b      	subs	r3, r5, #1
    5634:	2b00      	cmp	r3, #0
    5636:	d000      	beq.n	563a <__aeabi_dsub+0x62>
    5638:	e14b      	b.n	58d2 <__aeabi_dsub+0x2fa>
    563a:	4653      	mov	r3, sl
    563c:	1a9f      	subs	r7, r3, r2
    563e:	45ba      	cmp	sl, r7
    5640:	4180      	sbcs	r0, r0
    5642:	1a64      	subs	r4, r4, r1
    5644:	4240      	negs	r0, r0
    5646:	1a24      	subs	r4, r4, r0
    5648:	2601      	movs	r6, #1
    564a:	e01e      	b.n	568a <__aeabi_dsub+0xb2>
    564c:	4bb3      	ldr	r3, [pc, #716]	; (591c <__aeabi_dsub+0x344>)
    564e:	429e      	cmp	r6, r3
    5650:	d048      	beq.n	56e4 <__aeabi_dsub+0x10c>
    5652:	2380      	movs	r3, #128	; 0x80
    5654:	041b      	lsls	r3, r3, #16
    5656:	4319      	orrs	r1, r3
    5658:	2d38      	cmp	r5, #56	; 0x38
    565a:	dd00      	ble.n	565e <__aeabi_dsub+0x86>
    565c:	e119      	b.n	5892 <__aeabi_dsub+0x2ba>
    565e:	2d1f      	cmp	r5, #31
    5660:	dd00      	ble.n	5664 <__aeabi_dsub+0x8c>
    5662:	e14c      	b.n	58fe <__aeabi_dsub+0x326>
    5664:	2320      	movs	r3, #32
    5666:	000f      	movs	r7, r1
    5668:	1b5b      	subs	r3, r3, r5
    566a:	0010      	movs	r0, r2
    566c:	409a      	lsls	r2, r3
    566e:	409f      	lsls	r7, r3
    5670:	40e8      	lsrs	r0, r5
    5672:	1e53      	subs	r3, r2, #1
    5674:	419a      	sbcs	r2, r3
    5676:	40e9      	lsrs	r1, r5
    5678:	4307      	orrs	r7, r0
    567a:	4317      	orrs	r7, r2
    567c:	4653      	mov	r3, sl
    567e:	1bdf      	subs	r7, r3, r7
    5680:	1a61      	subs	r1, r4, r1
    5682:	45ba      	cmp	sl, r7
    5684:	41a4      	sbcs	r4, r4
    5686:	4264      	negs	r4, r4
    5688:	1b0c      	subs	r4, r1, r4
    568a:	0223      	lsls	r3, r4, #8
    568c:	d400      	bmi.n	5690 <__aeabi_dsub+0xb8>
    568e:	e0c5      	b.n	581c <__aeabi_dsub+0x244>
    5690:	0264      	lsls	r4, r4, #9
    5692:	0a65      	lsrs	r5, r4, #9
    5694:	2d00      	cmp	r5, #0
    5696:	d100      	bne.n	569a <__aeabi_dsub+0xc2>
    5698:	e0f6      	b.n	5888 <__aeabi_dsub+0x2b0>
    569a:	0028      	movs	r0, r5
    569c:	f000 fb48 	bl	5d30 <__clzsi2>
    56a0:	0003      	movs	r3, r0
    56a2:	3b08      	subs	r3, #8
    56a4:	2b1f      	cmp	r3, #31
    56a6:	dd00      	ble.n	56aa <__aeabi_dsub+0xd2>
    56a8:	e0e9      	b.n	587e <__aeabi_dsub+0x2a6>
    56aa:	2220      	movs	r2, #32
    56ac:	003c      	movs	r4, r7
    56ae:	1ad2      	subs	r2, r2, r3
    56b0:	409d      	lsls	r5, r3
    56b2:	40d4      	lsrs	r4, r2
    56b4:	409f      	lsls	r7, r3
    56b6:	4325      	orrs	r5, r4
    56b8:	429e      	cmp	r6, r3
    56ba:	dd00      	ble.n	56be <__aeabi_dsub+0xe6>
    56bc:	e0db      	b.n	5876 <__aeabi_dsub+0x29e>
    56be:	1b9e      	subs	r6, r3, r6
    56c0:	1c73      	adds	r3, r6, #1
    56c2:	2b1f      	cmp	r3, #31
    56c4:	dd00      	ble.n	56c8 <__aeabi_dsub+0xf0>
    56c6:	e10a      	b.n	58de <__aeabi_dsub+0x306>
    56c8:	2220      	movs	r2, #32
    56ca:	0038      	movs	r0, r7
    56cc:	1ad2      	subs	r2, r2, r3
    56ce:	0029      	movs	r1, r5
    56d0:	4097      	lsls	r7, r2
    56d2:	002c      	movs	r4, r5
    56d4:	4091      	lsls	r1, r2
    56d6:	40d8      	lsrs	r0, r3
    56d8:	1e7a      	subs	r2, r7, #1
    56da:	4197      	sbcs	r7, r2
    56dc:	40dc      	lsrs	r4, r3
    56de:	2600      	movs	r6, #0
    56e0:	4301      	orrs	r1, r0
    56e2:	430f      	orrs	r7, r1
    56e4:	077b      	lsls	r3, r7, #29
    56e6:	d009      	beq.n	56fc <__aeabi_dsub+0x124>
    56e8:	230f      	movs	r3, #15
    56ea:	403b      	ands	r3, r7
    56ec:	2b04      	cmp	r3, #4
    56ee:	d005      	beq.n	56fc <__aeabi_dsub+0x124>
    56f0:	1d3b      	adds	r3, r7, #4
    56f2:	42bb      	cmp	r3, r7
    56f4:	41bf      	sbcs	r7, r7
    56f6:	427f      	negs	r7, r7
    56f8:	19e4      	adds	r4, r4, r7
    56fa:	001f      	movs	r7, r3
    56fc:	0223      	lsls	r3, r4, #8
    56fe:	d525      	bpl.n	574c <__aeabi_dsub+0x174>
    5700:	4b86      	ldr	r3, [pc, #536]	; (591c <__aeabi_dsub+0x344>)
    5702:	3601      	adds	r6, #1
    5704:	429e      	cmp	r6, r3
    5706:	d100      	bne.n	570a <__aeabi_dsub+0x132>
    5708:	e0af      	b.n	586a <__aeabi_dsub+0x292>
    570a:	4b85      	ldr	r3, [pc, #532]	; (5920 <__aeabi_dsub+0x348>)
    570c:	2501      	movs	r5, #1
    570e:	401c      	ands	r4, r3
    5710:	4643      	mov	r3, r8
    5712:	0762      	lsls	r2, r4, #29
    5714:	08ff      	lsrs	r7, r7, #3
    5716:	0264      	lsls	r4, r4, #9
    5718:	0576      	lsls	r6, r6, #21
    571a:	4317      	orrs	r7, r2
    571c:	0b24      	lsrs	r4, r4, #12
    571e:	0d76      	lsrs	r6, r6, #21
    5720:	401d      	ands	r5, r3
    5722:	2100      	movs	r1, #0
    5724:	0324      	lsls	r4, r4, #12
    5726:	0b23      	lsrs	r3, r4, #12
    5728:	0d0c      	lsrs	r4, r1, #20
    572a:	4a7e      	ldr	r2, [pc, #504]	; (5924 <__aeabi_dsub+0x34c>)
    572c:	0524      	lsls	r4, r4, #20
    572e:	431c      	orrs	r4, r3
    5730:	4014      	ands	r4, r2
    5732:	0533      	lsls	r3, r6, #20
    5734:	4323      	orrs	r3, r4
    5736:	005b      	lsls	r3, r3, #1
    5738:	07ed      	lsls	r5, r5, #31
    573a:	085b      	lsrs	r3, r3, #1
    573c:	432b      	orrs	r3, r5
    573e:	0038      	movs	r0, r7
    5740:	0019      	movs	r1, r3
    5742:	bc1c      	pop	{r2, r3, r4}
    5744:	4690      	mov	r8, r2
    5746:	4699      	mov	r9, r3
    5748:	46a2      	mov	sl, r4
    574a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    574c:	2501      	movs	r5, #1
    574e:	4643      	mov	r3, r8
    5750:	0762      	lsls	r2, r4, #29
    5752:	08ff      	lsrs	r7, r7, #3
    5754:	4317      	orrs	r7, r2
    5756:	08e4      	lsrs	r4, r4, #3
    5758:	401d      	ands	r5, r3
    575a:	4b70      	ldr	r3, [pc, #448]	; (591c <__aeabi_dsub+0x344>)
    575c:	429e      	cmp	r6, r3
    575e:	d036      	beq.n	57ce <__aeabi_dsub+0x1f6>
    5760:	0324      	lsls	r4, r4, #12
    5762:	0576      	lsls	r6, r6, #21
    5764:	0b24      	lsrs	r4, r4, #12
    5766:	0d76      	lsrs	r6, r6, #21
    5768:	e7db      	b.n	5722 <__aeabi_dsub+0x14a>
    576a:	4663      	mov	r3, ip
    576c:	1af3      	subs	r3, r6, r3
    576e:	2b00      	cmp	r3, #0
    5770:	dc00      	bgt.n	5774 <__aeabi_dsub+0x19c>
    5772:	e094      	b.n	589e <__aeabi_dsub+0x2c6>
    5774:	4660      	mov	r0, ip
    5776:	2800      	cmp	r0, #0
    5778:	d035      	beq.n	57e6 <__aeabi_dsub+0x20e>
    577a:	4868      	ldr	r0, [pc, #416]	; (591c <__aeabi_dsub+0x344>)
    577c:	4286      	cmp	r6, r0
    577e:	d0b1      	beq.n	56e4 <__aeabi_dsub+0x10c>
    5780:	2780      	movs	r7, #128	; 0x80
    5782:	043f      	lsls	r7, r7, #16
    5784:	4339      	orrs	r1, r7
    5786:	2b38      	cmp	r3, #56	; 0x38
    5788:	dc00      	bgt.n	578c <__aeabi_dsub+0x1b4>
    578a:	e0fd      	b.n	5988 <__aeabi_dsub+0x3b0>
    578c:	430a      	orrs	r2, r1
    578e:	0017      	movs	r7, r2
    5790:	2100      	movs	r1, #0
    5792:	1e7a      	subs	r2, r7, #1
    5794:	4197      	sbcs	r7, r2
    5796:	4457      	add	r7, sl
    5798:	4557      	cmp	r7, sl
    579a:	4180      	sbcs	r0, r0
    579c:	1909      	adds	r1, r1, r4
    579e:	4244      	negs	r4, r0
    57a0:	190c      	adds	r4, r1, r4
    57a2:	0223      	lsls	r3, r4, #8
    57a4:	d53a      	bpl.n	581c <__aeabi_dsub+0x244>
    57a6:	4b5d      	ldr	r3, [pc, #372]	; (591c <__aeabi_dsub+0x344>)
    57a8:	3601      	adds	r6, #1
    57aa:	429e      	cmp	r6, r3
    57ac:	d100      	bne.n	57b0 <__aeabi_dsub+0x1d8>
    57ae:	e14b      	b.n	5a48 <__aeabi_dsub+0x470>
    57b0:	2201      	movs	r2, #1
    57b2:	4b5b      	ldr	r3, [pc, #364]	; (5920 <__aeabi_dsub+0x348>)
    57b4:	401c      	ands	r4, r3
    57b6:	087b      	lsrs	r3, r7, #1
    57b8:	4017      	ands	r7, r2
    57ba:	431f      	orrs	r7, r3
    57bc:	07e2      	lsls	r2, r4, #31
    57be:	4317      	orrs	r7, r2
    57c0:	0864      	lsrs	r4, r4, #1
    57c2:	e78f      	b.n	56e4 <__aeabi_dsub+0x10c>
    57c4:	0008      	movs	r0, r1
    57c6:	4310      	orrs	r0, r2
    57c8:	d000      	beq.n	57cc <__aeabi_dsub+0x1f4>
    57ca:	e724      	b.n	5616 <__aeabi_dsub+0x3e>
    57cc:	e721      	b.n	5612 <__aeabi_dsub+0x3a>
    57ce:	0023      	movs	r3, r4
    57d0:	433b      	orrs	r3, r7
    57d2:	d100      	bne.n	57d6 <__aeabi_dsub+0x1fe>
    57d4:	e1b9      	b.n	5b4a <__aeabi_dsub+0x572>
    57d6:	2280      	movs	r2, #128	; 0x80
    57d8:	0312      	lsls	r2, r2, #12
    57da:	4314      	orrs	r4, r2
    57dc:	0324      	lsls	r4, r4, #12
    57de:	0b24      	lsrs	r4, r4, #12
    57e0:	e79f      	b.n	5722 <__aeabi_dsub+0x14a>
    57e2:	002e      	movs	r6, r5
    57e4:	e77e      	b.n	56e4 <__aeabi_dsub+0x10c>
    57e6:	0008      	movs	r0, r1
    57e8:	4310      	orrs	r0, r2
    57ea:	d100      	bne.n	57ee <__aeabi_dsub+0x216>
    57ec:	e0ca      	b.n	5984 <__aeabi_dsub+0x3ac>
    57ee:	1e58      	subs	r0, r3, #1
    57f0:	4684      	mov	ip, r0
    57f2:	2800      	cmp	r0, #0
    57f4:	d000      	beq.n	57f8 <__aeabi_dsub+0x220>
    57f6:	e0e7      	b.n	59c8 <__aeabi_dsub+0x3f0>
    57f8:	4452      	add	r2, sl
    57fa:	4552      	cmp	r2, sl
    57fc:	4180      	sbcs	r0, r0
    57fe:	1864      	adds	r4, r4, r1
    5800:	4240      	negs	r0, r0
    5802:	1824      	adds	r4, r4, r0
    5804:	0017      	movs	r7, r2
    5806:	2601      	movs	r6, #1
    5808:	0223      	lsls	r3, r4, #8
    580a:	d507      	bpl.n	581c <__aeabi_dsub+0x244>
    580c:	2602      	movs	r6, #2
    580e:	e7cf      	b.n	57b0 <__aeabi_dsub+0x1d8>
    5810:	4664      	mov	r4, ip
    5812:	432c      	orrs	r4, r5
    5814:	d100      	bne.n	5818 <__aeabi_dsub+0x240>
    5816:	e1b3      	b.n	5b80 <__aeabi_dsub+0x5a8>
    5818:	002c      	movs	r4, r5
    581a:	4667      	mov	r7, ip
    581c:	077b      	lsls	r3, r7, #29
    581e:	d000      	beq.n	5822 <__aeabi_dsub+0x24a>
    5820:	e762      	b.n	56e8 <__aeabi_dsub+0x110>
    5822:	0763      	lsls	r3, r4, #29
    5824:	08ff      	lsrs	r7, r7, #3
    5826:	431f      	orrs	r7, r3
    5828:	2501      	movs	r5, #1
    582a:	4643      	mov	r3, r8
    582c:	08e4      	lsrs	r4, r4, #3
    582e:	401d      	ands	r5, r3
    5830:	e793      	b.n	575a <__aeabi_dsub+0x182>
    5832:	2d00      	cmp	r5, #0
    5834:	d178      	bne.n	5928 <__aeabi_dsub+0x350>
    5836:	1c75      	adds	r5, r6, #1
    5838:	056d      	lsls	r5, r5, #21
    583a:	0d6d      	lsrs	r5, r5, #21
    583c:	2d01      	cmp	r5, #1
    583e:	dc00      	bgt.n	5842 <__aeabi_dsub+0x26a>
    5840:	e0f2      	b.n	5a28 <__aeabi_dsub+0x450>
    5842:	4650      	mov	r0, sl
    5844:	1a80      	subs	r0, r0, r2
    5846:	4582      	cmp	sl, r0
    5848:	41bf      	sbcs	r7, r7
    584a:	1a65      	subs	r5, r4, r1
    584c:	427f      	negs	r7, r7
    584e:	1bed      	subs	r5, r5, r7
    5850:	4684      	mov	ip, r0
    5852:	0228      	lsls	r0, r5, #8
    5854:	d400      	bmi.n	5858 <__aeabi_dsub+0x280>
    5856:	e08c      	b.n	5972 <__aeabi_dsub+0x39a>
    5858:	4650      	mov	r0, sl
    585a:	1a17      	subs	r7, r2, r0
    585c:	42ba      	cmp	r2, r7
    585e:	4192      	sbcs	r2, r2
    5860:	1b0c      	subs	r4, r1, r4
    5862:	4255      	negs	r5, r2
    5864:	1b65      	subs	r5, r4, r5
    5866:	4698      	mov	r8, r3
    5868:	e714      	b.n	5694 <__aeabi_dsub+0xbc>
    586a:	2501      	movs	r5, #1
    586c:	4643      	mov	r3, r8
    586e:	2400      	movs	r4, #0
    5870:	401d      	ands	r5, r3
    5872:	2700      	movs	r7, #0
    5874:	e755      	b.n	5722 <__aeabi_dsub+0x14a>
    5876:	4c2a      	ldr	r4, [pc, #168]	; (5920 <__aeabi_dsub+0x348>)
    5878:	1af6      	subs	r6, r6, r3
    587a:	402c      	ands	r4, r5
    587c:	e732      	b.n	56e4 <__aeabi_dsub+0x10c>
    587e:	003d      	movs	r5, r7
    5880:	3828      	subs	r0, #40	; 0x28
    5882:	4085      	lsls	r5, r0
    5884:	2700      	movs	r7, #0
    5886:	e717      	b.n	56b8 <__aeabi_dsub+0xe0>
    5888:	0038      	movs	r0, r7
    588a:	f000 fa51 	bl	5d30 <__clzsi2>
    588e:	3020      	adds	r0, #32
    5890:	e706      	b.n	56a0 <__aeabi_dsub+0xc8>
    5892:	430a      	orrs	r2, r1
    5894:	0017      	movs	r7, r2
    5896:	2100      	movs	r1, #0
    5898:	1e7a      	subs	r2, r7, #1
    589a:	4197      	sbcs	r7, r2
    589c:	e6ee      	b.n	567c <__aeabi_dsub+0xa4>
    589e:	2b00      	cmp	r3, #0
    58a0:	d000      	beq.n	58a4 <__aeabi_dsub+0x2cc>
    58a2:	e0e5      	b.n	5a70 <__aeabi_dsub+0x498>
    58a4:	1c73      	adds	r3, r6, #1
    58a6:	469c      	mov	ip, r3
    58a8:	055b      	lsls	r3, r3, #21
    58aa:	0d5b      	lsrs	r3, r3, #21
    58ac:	2b01      	cmp	r3, #1
    58ae:	dc00      	bgt.n	58b2 <__aeabi_dsub+0x2da>
    58b0:	e09f      	b.n	59f2 <__aeabi_dsub+0x41a>
    58b2:	4b1a      	ldr	r3, [pc, #104]	; (591c <__aeabi_dsub+0x344>)
    58b4:	459c      	cmp	ip, r3
    58b6:	d100      	bne.n	58ba <__aeabi_dsub+0x2e2>
    58b8:	e0c5      	b.n	5a46 <__aeabi_dsub+0x46e>
    58ba:	4452      	add	r2, sl
    58bc:	4552      	cmp	r2, sl
    58be:	4180      	sbcs	r0, r0
    58c0:	1864      	adds	r4, r4, r1
    58c2:	4240      	negs	r0, r0
    58c4:	1824      	adds	r4, r4, r0
    58c6:	07e7      	lsls	r7, r4, #31
    58c8:	0852      	lsrs	r2, r2, #1
    58ca:	4317      	orrs	r7, r2
    58cc:	0864      	lsrs	r4, r4, #1
    58ce:	4666      	mov	r6, ip
    58d0:	e708      	b.n	56e4 <__aeabi_dsub+0x10c>
    58d2:	4812      	ldr	r0, [pc, #72]	; (591c <__aeabi_dsub+0x344>)
    58d4:	4285      	cmp	r5, r0
    58d6:	d100      	bne.n	58da <__aeabi_dsub+0x302>
    58d8:	e085      	b.n	59e6 <__aeabi_dsub+0x40e>
    58da:	001d      	movs	r5, r3
    58dc:	e6bc      	b.n	5658 <__aeabi_dsub+0x80>
    58de:	0029      	movs	r1, r5
    58e0:	3e1f      	subs	r6, #31
    58e2:	40f1      	lsrs	r1, r6
    58e4:	2b20      	cmp	r3, #32
    58e6:	d100      	bne.n	58ea <__aeabi_dsub+0x312>
    58e8:	e07f      	b.n	59ea <__aeabi_dsub+0x412>
    58ea:	2240      	movs	r2, #64	; 0x40
    58ec:	1ad3      	subs	r3, r2, r3
    58ee:	409d      	lsls	r5, r3
    58f0:	432f      	orrs	r7, r5
    58f2:	1e7d      	subs	r5, r7, #1
    58f4:	41af      	sbcs	r7, r5
    58f6:	2400      	movs	r4, #0
    58f8:	430f      	orrs	r7, r1
    58fa:	2600      	movs	r6, #0
    58fc:	e78e      	b.n	581c <__aeabi_dsub+0x244>
    58fe:	002b      	movs	r3, r5
    5900:	000f      	movs	r7, r1
    5902:	3b20      	subs	r3, #32
    5904:	40df      	lsrs	r7, r3
    5906:	2d20      	cmp	r5, #32
    5908:	d071      	beq.n	59ee <__aeabi_dsub+0x416>
    590a:	2340      	movs	r3, #64	; 0x40
    590c:	1b5d      	subs	r5, r3, r5
    590e:	40a9      	lsls	r1, r5
    5910:	430a      	orrs	r2, r1
    5912:	1e51      	subs	r1, r2, #1
    5914:	418a      	sbcs	r2, r1
    5916:	2100      	movs	r1, #0
    5918:	4317      	orrs	r7, r2
    591a:	e6af      	b.n	567c <__aeabi_dsub+0xa4>
    591c:	000007ff 	.word	0x000007ff
    5920:	ff7fffff 	.word	0xff7fffff
    5924:	800fffff 	.word	0x800fffff
    5928:	2e00      	cmp	r6, #0
    592a:	d03e      	beq.n	59aa <__aeabi_dsub+0x3d2>
    592c:	4eb3      	ldr	r6, [pc, #716]	; (5bfc <__aeabi_dsub+0x624>)
    592e:	45b4      	cmp	ip, r6
    5930:	d045      	beq.n	59be <__aeabi_dsub+0x3e6>
    5932:	2680      	movs	r6, #128	; 0x80
    5934:	0436      	lsls	r6, r6, #16
    5936:	426d      	negs	r5, r5
    5938:	4334      	orrs	r4, r6
    593a:	2d38      	cmp	r5, #56	; 0x38
    593c:	dd00      	ble.n	5940 <__aeabi_dsub+0x368>
    593e:	e0a8      	b.n	5a92 <__aeabi_dsub+0x4ba>
    5940:	2d1f      	cmp	r5, #31
    5942:	dd00      	ble.n	5946 <__aeabi_dsub+0x36e>
    5944:	e11f      	b.n	5b86 <__aeabi_dsub+0x5ae>
    5946:	2620      	movs	r6, #32
    5948:	0027      	movs	r7, r4
    594a:	4650      	mov	r0, sl
    594c:	1b76      	subs	r6, r6, r5
    594e:	40b7      	lsls	r7, r6
    5950:	40e8      	lsrs	r0, r5
    5952:	4307      	orrs	r7, r0
    5954:	4650      	mov	r0, sl
    5956:	40b0      	lsls	r0, r6
    5958:	1e46      	subs	r6, r0, #1
    595a:	41b0      	sbcs	r0, r6
    595c:	40ec      	lsrs	r4, r5
    595e:	4338      	orrs	r0, r7
    5960:	1a17      	subs	r7, r2, r0
    5962:	42ba      	cmp	r2, r7
    5964:	4192      	sbcs	r2, r2
    5966:	1b0c      	subs	r4, r1, r4
    5968:	4252      	negs	r2, r2
    596a:	1aa4      	subs	r4, r4, r2
    596c:	4666      	mov	r6, ip
    596e:	4698      	mov	r8, r3
    5970:	e68b      	b.n	568a <__aeabi_dsub+0xb2>
    5972:	4664      	mov	r4, ip
    5974:	4667      	mov	r7, ip
    5976:	432c      	orrs	r4, r5
    5978:	d000      	beq.n	597c <__aeabi_dsub+0x3a4>
    597a:	e68b      	b.n	5694 <__aeabi_dsub+0xbc>
    597c:	2500      	movs	r5, #0
    597e:	2600      	movs	r6, #0
    5980:	2700      	movs	r7, #0
    5982:	e6ea      	b.n	575a <__aeabi_dsub+0x182>
    5984:	001e      	movs	r6, r3
    5986:	e6ad      	b.n	56e4 <__aeabi_dsub+0x10c>
    5988:	2b1f      	cmp	r3, #31
    598a:	dc60      	bgt.n	5a4e <__aeabi_dsub+0x476>
    598c:	2720      	movs	r7, #32
    598e:	1af8      	subs	r0, r7, r3
    5990:	000f      	movs	r7, r1
    5992:	4684      	mov	ip, r0
    5994:	4087      	lsls	r7, r0
    5996:	0010      	movs	r0, r2
    5998:	40d8      	lsrs	r0, r3
    599a:	4307      	orrs	r7, r0
    599c:	4660      	mov	r0, ip
    599e:	4082      	lsls	r2, r0
    59a0:	1e50      	subs	r0, r2, #1
    59a2:	4182      	sbcs	r2, r0
    59a4:	40d9      	lsrs	r1, r3
    59a6:	4317      	orrs	r7, r2
    59a8:	e6f5      	b.n	5796 <__aeabi_dsub+0x1be>
    59aa:	0026      	movs	r6, r4
    59ac:	4650      	mov	r0, sl
    59ae:	4306      	orrs	r6, r0
    59b0:	d005      	beq.n	59be <__aeabi_dsub+0x3e6>
    59b2:	43ed      	mvns	r5, r5
    59b4:	2d00      	cmp	r5, #0
    59b6:	d0d3      	beq.n	5960 <__aeabi_dsub+0x388>
    59b8:	4e90      	ldr	r6, [pc, #576]	; (5bfc <__aeabi_dsub+0x624>)
    59ba:	45b4      	cmp	ip, r6
    59bc:	d1bd      	bne.n	593a <__aeabi_dsub+0x362>
    59be:	000c      	movs	r4, r1
    59c0:	0017      	movs	r7, r2
    59c2:	4666      	mov	r6, ip
    59c4:	4698      	mov	r8, r3
    59c6:	e68d      	b.n	56e4 <__aeabi_dsub+0x10c>
    59c8:	488c      	ldr	r0, [pc, #560]	; (5bfc <__aeabi_dsub+0x624>)
    59ca:	4283      	cmp	r3, r0
    59cc:	d00b      	beq.n	59e6 <__aeabi_dsub+0x40e>
    59ce:	4663      	mov	r3, ip
    59d0:	e6d9      	b.n	5786 <__aeabi_dsub+0x1ae>
    59d2:	2d00      	cmp	r5, #0
    59d4:	d000      	beq.n	59d8 <__aeabi_dsub+0x400>
    59d6:	e096      	b.n	5b06 <__aeabi_dsub+0x52e>
    59d8:	0008      	movs	r0, r1
    59da:	4310      	orrs	r0, r2
    59dc:	d100      	bne.n	59e0 <__aeabi_dsub+0x408>
    59de:	e0e2      	b.n	5ba6 <__aeabi_dsub+0x5ce>
    59e0:	000c      	movs	r4, r1
    59e2:	0017      	movs	r7, r2
    59e4:	4698      	mov	r8, r3
    59e6:	4e85      	ldr	r6, [pc, #532]	; (5bfc <__aeabi_dsub+0x624>)
    59e8:	e67c      	b.n	56e4 <__aeabi_dsub+0x10c>
    59ea:	2500      	movs	r5, #0
    59ec:	e780      	b.n	58f0 <__aeabi_dsub+0x318>
    59ee:	2100      	movs	r1, #0
    59f0:	e78e      	b.n	5910 <__aeabi_dsub+0x338>
    59f2:	0023      	movs	r3, r4
    59f4:	4650      	mov	r0, sl
    59f6:	4303      	orrs	r3, r0
    59f8:	2e00      	cmp	r6, #0
    59fa:	d000      	beq.n	59fe <__aeabi_dsub+0x426>
    59fc:	e0a8      	b.n	5b50 <__aeabi_dsub+0x578>
    59fe:	2b00      	cmp	r3, #0
    5a00:	d100      	bne.n	5a04 <__aeabi_dsub+0x42c>
    5a02:	e0de      	b.n	5bc2 <__aeabi_dsub+0x5ea>
    5a04:	000b      	movs	r3, r1
    5a06:	4313      	orrs	r3, r2
    5a08:	d100      	bne.n	5a0c <__aeabi_dsub+0x434>
    5a0a:	e66b      	b.n	56e4 <__aeabi_dsub+0x10c>
    5a0c:	4452      	add	r2, sl
    5a0e:	4552      	cmp	r2, sl
    5a10:	4180      	sbcs	r0, r0
    5a12:	1864      	adds	r4, r4, r1
    5a14:	4240      	negs	r0, r0
    5a16:	1824      	adds	r4, r4, r0
    5a18:	0017      	movs	r7, r2
    5a1a:	0223      	lsls	r3, r4, #8
    5a1c:	d400      	bmi.n	5a20 <__aeabi_dsub+0x448>
    5a1e:	e6fd      	b.n	581c <__aeabi_dsub+0x244>
    5a20:	4b77      	ldr	r3, [pc, #476]	; (5c00 <__aeabi_dsub+0x628>)
    5a22:	4666      	mov	r6, ip
    5a24:	401c      	ands	r4, r3
    5a26:	e65d      	b.n	56e4 <__aeabi_dsub+0x10c>
    5a28:	0025      	movs	r5, r4
    5a2a:	4650      	mov	r0, sl
    5a2c:	4305      	orrs	r5, r0
    5a2e:	2e00      	cmp	r6, #0
    5a30:	d1cf      	bne.n	59d2 <__aeabi_dsub+0x3fa>
    5a32:	2d00      	cmp	r5, #0
    5a34:	d14f      	bne.n	5ad6 <__aeabi_dsub+0x4fe>
    5a36:	000c      	movs	r4, r1
    5a38:	4314      	orrs	r4, r2
    5a3a:	d100      	bne.n	5a3e <__aeabi_dsub+0x466>
    5a3c:	e0a0      	b.n	5b80 <__aeabi_dsub+0x5a8>
    5a3e:	000c      	movs	r4, r1
    5a40:	0017      	movs	r7, r2
    5a42:	4698      	mov	r8, r3
    5a44:	e64e      	b.n	56e4 <__aeabi_dsub+0x10c>
    5a46:	4666      	mov	r6, ip
    5a48:	2400      	movs	r4, #0
    5a4a:	2700      	movs	r7, #0
    5a4c:	e685      	b.n	575a <__aeabi_dsub+0x182>
    5a4e:	001f      	movs	r7, r3
    5a50:	0008      	movs	r0, r1
    5a52:	3f20      	subs	r7, #32
    5a54:	40f8      	lsrs	r0, r7
    5a56:	0007      	movs	r7, r0
    5a58:	2b20      	cmp	r3, #32
    5a5a:	d100      	bne.n	5a5e <__aeabi_dsub+0x486>
    5a5c:	e08e      	b.n	5b7c <__aeabi_dsub+0x5a4>
    5a5e:	2040      	movs	r0, #64	; 0x40
    5a60:	1ac3      	subs	r3, r0, r3
    5a62:	4099      	lsls	r1, r3
    5a64:	430a      	orrs	r2, r1
    5a66:	1e51      	subs	r1, r2, #1
    5a68:	418a      	sbcs	r2, r1
    5a6a:	2100      	movs	r1, #0
    5a6c:	4317      	orrs	r7, r2
    5a6e:	e692      	b.n	5796 <__aeabi_dsub+0x1be>
    5a70:	2e00      	cmp	r6, #0
    5a72:	d114      	bne.n	5a9e <__aeabi_dsub+0x4c6>
    5a74:	0026      	movs	r6, r4
    5a76:	4650      	mov	r0, sl
    5a78:	4306      	orrs	r6, r0
    5a7a:	d062      	beq.n	5b42 <__aeabi_dsub+0x56a>
    5a7c:	43db      	mvns	r3, r3
    5a7e:	2b00      	cmp	r3, #0
    5a80:	d15c      	bne.n	5b3c <__aeabi_dsub+0x564>
    5a82:	1887      	adds	r7, r0, r2
    5a84:	4297      	cmp	r7, r2
    5a86:	4192      	sbcs	r2, r2
    5a88:	1864      	adds	r4, r4, r1
    5a8a:	4252      	negs	r2, r2
    5a8c:	18a4      	adds	r4, r4, r2
    5a8e:	4666      	mov	r6, ip
    5a90:	e687      	b.n	57a2 <__aeabi_dsub+0x1ca>
    5a92:	4650      	mov	r0, sl
    5a94:	4320      	orrs	r0, r4
    5a96:	1e44      	subs	r4, r0, #1
    5a98:	41a0      	sbcs	r0, r4
    5a9a:	2400      	movs	r4, #0
    5a9c:	e760      	b.n	5960 <__aeabi_dsub+0x388>
    5a9e:	4e57      	ldr	r6, [pc, #348]	; (5bfc <__aeabi_dsub+0x624>)
    5aa0:	45b4      	cmp	ip, r6
    5aa2:	d04e      	beq.n	5b42 <__aeabi_dsub+0x56a>
    5aa4:	2680      	movs	r6, #128	; 0x80
    5aa6:	0436      	lsls	r6, r6, #16
    5aa8:	425b      	negs	r3, r3
    5aaa:	4334      	orrs	r4, r6
    5aac:	2b38      	cmp	r3, #56	; 0x38
    5aae:	dd00      	ble.n	5ab2 <__aeabi_dsub+0x4da>
    5ab0:	e07f      	b.n	5bb2 <__aeabi_dsub+0x5da>
    5ab2:	2b1f      	cmp	r3, #31
    5ab4:	dd00      	ble.n	5ab8 <__aeabi_dsub+0x4e0>
    5ab6:	e08b      	b.n	5bd0 <__aeabi_dsub+0x5f8>
    5ab8:	2620      	movs	r6, #32
    5aba:	0027      	movs	r7, r4
    5abc:	4650      	mov	r0, sl
    5abe:	1af6      	subs	r6, r6, r3
    5ac0:	40b7      	lsls	r7, r6
    5ac2:	40d8      	lsrs	r0, r3
    5ac4:	4307      	orrs	r7, r0
    5ac6:	4650      	mov	r0, sl
    5ac8:	40b0      	lsls	r0, r6
    5aca:	1e46      	subs	r6, r0, #1
    5acc:	41b0      	sbcs	r0, r6
    5ace:	4307      	orrs	r7, r0
    5ad0:	40dc      	lsrs	r4, r3
    5ad2:	18bf      	adds	r7, r7, r2
    5ad4:	e7d6      	b.n	5a84 <__aeabi_dsub+0x4ac>
    5ad6:	000d      	movs	r5, r1
    5ad8:	4315      	orrs	r5, r2
    5ada:	d100      	bne.n	5ade <__aeabi_dsub+0x506>
    5adc:	e602      	b.n	56e4 <__aeabi_dsub+0x10c>
    5ade:	4650      	mov	r0, sl
    5ae0:	1a80      	subs	r0, r0, r2
    5ae2:	4582      	cmp	sl, r0
    5ae4:	41bf      	sbcs	r7, r7
    5ae6:	1a65      	subs	r5, r4, r1
    5ae8:	427f      	negs	r7, r7
    5aea:	1bed      	subs	r5, r5, r7
    5aec:	4684      	mov	ip, r0
    5aee:	0228      	lsls	r0, r5, #8
    5af0:	d400      	bmi.n	5af4 <__aeabi_dsub+0x51c>
    5af2:	e68d      	b.n	5810 <__aeabi_dsub+0x238>
    5af4:	4650      	mov	r0, sl
    5af6:	1a17      	subs	r7, r2, r0
    5af8:	42ba      	cmp	r2, r7
    5afa:	4192      	sbcs	r2, r2
    5afc:	1b0c      	subs	r4, r1, r4
    5afe:	4252      	negs	r2, r2
    5b00:	1aa4      	subs	r4, r4, r2
    5b02:	4698      	mov	r8, r3
    5b04:	e5ee      	b.n	56e4 <__aeabi_dsub+0x10c>
    5b06:	000d      	movs	r5, r1
    5b08:	4315      	orrs	r5, r2
    5b0a:	d100      	bne.n	5b0e <__aeabi_dsub+0x536>
    5b0c:	e76b      	b.n	59e6 <__aeabi_dsub+0x40e>
    5b0e:	4650      	mov	r0, sl
    5b10:	0767      	lsls	r7, r4, #29
    5b12:	08c0      	lsrs	r0, r0, #3
    5b14:	4307      	orrs	r7, r0
    5b16:	2080      	movs	r0, #128	; 0x80
    5b18:	08e4      	lsrs	r4, r4, #3
    5b1a:	0300      	lsls	r0, r0, #12
    5b1c:	4204      	tst	r4, r0
    5b1e:	d007      	beq.n	5b30 <__aeabi_dsub+0x558>
    5b20:	08cd      	lsrs	r5, r1, #3
    5b22:	4205      	tst	r5, r0
    5b24:	d104      	bne.n	5b30 <__aeabi_dsub+0x558>
    5b26:	002c      	movs	r4, r5
    5b28:	4698      	mov	r8, r3
    5b2a:	08d7      	lsrs	r7, r2, #3
    5b2c:	0749      	lsls	r1, r1, #29
    5b2e:	430f      	orrs	r7, r1
    5b30:	0f7b      	lsrs	r3, r7, #29
    5b32:	00e4      	lsls	r4, r4, #3
    5b34:	431c      	orrs	r4, r3
    5b36:	00ff      	lsls	r7, r7, #3
    5b38:	4e30      	ldr	r6, [pc, #192]	; (5bfc <__aeabi_dsub+0x624>)
    5b3a:	e5d3      	b.n	56e4 <__aeabi_dsub+0x10c>
    5b3c:	4e2f      	ldr	r6, [pc, #188]	; (5bfc <__aeabi_dsub+0x624>)
    5b3e:	45b4      	cmp	ip, r6
    5b40:	d1b4      	bne.n	5aac <__aeabi_dsub+0x4d4>
    5b42:	000c      	movs	r4, r1
    5b44:	0017      	movs	r7, r2
    5b46:	4666      	mov	r6, ip
    5b48:	e5cc      	b.n	56e4 <__aeabi_dsub+0x10c>
    5b4a:	2700      	movs	r7, #0
    5b4c:	2400      	movs	r4, #0
    5b4e:	e5e8      	b.n	5722 <__aeabi_dsub+0x14a>
    5b50:	2b00      	cmp	r3, #0
    5b52:	d039      	beq.n	5bc8 <__aeabi_dsub+0x5f0>
    5b54:	000b      	movs	r3, r1
    5b56:	4313      	orrs	r3, r2
    5b58:	d100      	bne.n	5b5c <__aeabi_dsub+0x584>
    5b5a:	e744      	b.n	59e6 <__aeabi_dsub+0x40e>
    5b5c:	08c0      	lsrs	r0, r0, #3
    5b5e:	0767      	lsls	r7, r4, #29
    5b60:	4307      	orrs	r7, r0
    5b62:	2080      	movs	r0, #128	; 0x80
    5b64:	08e4      	lsrs	r4, r4, #3
    5b66:	0300      	lsls	r0, r0, #12
    5b68:	4204      	tst	r4, r0
    5b6a:	d0e1      	beq.n	5b30 <__aeabi_dsub+0x558>
    5b6c:	08cb      	lsrs	r3, r1, #3
    5b6e:	4203      	tst	r3, r0
    5b70:	d1de      	bne.n	5b30 <__aeabi_dsub+0x558>
    5b72:	08d7      	lsrs	r7, r2, #3
    5b74:	0749      	lsls	r1, r1, #29
    5b76:	430f      	orrs	r7, r1
    5b78:	001c      	movs	r4, r3
    5b7a:	e7d9      	b.n	5b30 <__aeabi_dsub+0x558>
    5b7c:	2100      	movs	r1, #0
    5b7e:	e771      	b.n	5a64 <__aeabi_dsub+0x48c>
    5b80:	2500      	movs	r5, #0
    5b82:	2700      	movs	r7, #0
    5b84:	e5e9      	b.n	575a <__aeabi_dsub+0x182>
    5b86:	002e      	movs	r6, r5
    5b88:	0027      	movs	r7, r4
    5b8a:	3e20      	subs	r6, #32
    5b8c:	40f7      	lsrs	r7, r6
    5b8e:	2d20      	cmp	r5, #32
    5b90:	d02f      	beq.n	5bf2 <__aeabi_dsub+0x61a>
    5b92:	2640      	movs	r6, #64	; 0x40
    5b94:	1b75      	subs	r5, r6, r5
    5b96:	40ac      	lsls	r4, r5
    5b98:	4650      	mov	r0, sl
    5b9a:	4320      	orrs	r0, r4
    5b9c:	1e44      	subs	r4, r0, #1
    5b9e:	41a0      	sbcs	r0, r4
    5ba0:	2400      	movs	r4, #0
    5ba2:	4338      	orrs	r0, r7
    5ba4:	e6dc      	b.n	5960 <__aeabi_dsub+0x388>
    5ba6:	2480      	movs	r4, #128	; 0x80
    5ba8:	2500      	movs	r5, #0
    5baa:	0324      	lsls	r4, r4, #12
    5bac:	4e13      	ldr	r6, [pc, #76]	; (5bfc <__aeabi_dsub+0x624>)
    5bae:	2700      	movs	r7, #0
    5bb0:	e5d3      	b.n	575a <__aeabi_dsub+0x182>
    5bb2:	4650      	mov	r0, sl
    5bb4:	4320      	orrs	r0, r4
    5bb6:	0007      	movs	r7, r0
    5bb8:	1e78      	subs	r0, r7, #1
    5bba:	4187      	sbcs	r7, r0
    5bbc:	2400      	movs	r4, #0
    5bbe:	18bf      	adds	r7, r7, r2
    5bc0:	e760      	b.n	5a84 <__aeabi_dsub+0x4ac>
    5bc2:	000c      	movs	r4, r1
    5bc4:	0017      	movs	r7, r2
    5bc6:	e58d      	b.n	56e4 <__aeabi_dsub+0x10c>
    5bc8:	000c      	movs	r4, r1
    5bca:	0017      	movs	r7, r2
    5bcc:	4e0b      	ldr	r6, [pc, #44]	; (5bfc <__aeabi_dsub+0x624>)
    5bce:	e589      	b.n	56e4 <__aeabi_dsub+0x10c>
    5bd0:	001e      	movs	r6, r3
    5bd2:	0027      	movs	r7, r4
    5bd4:	3e20      	subs	r6, #32
    5bd6:	40f7      	lsrs	r7, r6
    5bd8:	2b20      	cmp	r3, #32
    5bda:	d00c      	beq.n	5bf6 <__aeabi_dsub+0x61e>
    5bdc:	2640      	movs	r6, #64	; 0x40
    5bde:	1af3      	subs	r3, r6, r3
    5be0:	409c      	lsls	r4, r3
    5be2:	4650      	mov	r0, sl
    5be4:	4320      	orrs	r0, r4
    5be6:	1e44      	subs	r4, r0, #1
    5be8:	41a0      	sbcs	r0, r4
    5bea:	4307      	orrs	r7, r0
    5bec:	2400      	movs	r4, #0
    5bee:	18bf      	adds	r7, r7, r2
    5bf0:	e748      	b.n	5a84 <__aeabi_dsub+0x4ac>
    5bf2:	2400      	movs	r4, #0
    5bf4:	e7d0      	b.n	5b98 <__aeabi_dsub+0x5c0>
    5bf6:	2400      	movs	r4, #0
    5bf8:	e7f3      	b.n	5be2 <__aeabi_dsub+0x60a>
    5bfa:	46c0      	nop			; (mov r8, r8)
    5bfc:	000007ff 	.word	0x000007ff
    5c00:	ff7fffff 	.word	0xff7fffff

00005c04 <__aeabi_dcmpun>:
    5c04:	b570      	push	{r4, r5, r6, lr}
    5c06:	4e0e      	ldr	r6, [pc, #56]	; (5c40 <__aeabi_dcmpun+0x3c>)
    5c08:	030d      	lsls	r5, r1, #12
    5c0a:	031c      	lsls	r4, r3, #12
    5c0c:	0049      	lsls	r1, r1, #1
    5c0e:	005b      	lsls	r3, r3, #1
    5c10:	0b2d      	lsrs	r5, r5, #12
    5c12:	0d49      	lsrs	r1, r1, #21
    5c14:	0b24      	lsrs	r4, r4, #12
    5c16:	0d5b      	lsrs	r3, r3, #21
    5c18:	42b1      	cmp	r1, r6
    5c1a:	d004      	beq.n	5c26 <__aeabi_dcmpun+0x22>
    5c1c:	4908      	ldr	r1, [pc, #32]	; (5c40 <__aeabi_dcmpun+0x3c>)
    5c1e:	2000      	movs	r0, #0
    5c20:	428b      	cmp	r3, r1
    5c22:	d008      	beq.n	5c36 <__aeabi_dcmpun+0x32>
    5c24:	bd70      	pop	{r4, r5, r6, pc}
    5c26:	4305      	orrs	r5, r0
    5c28:	2001      	movs	r0, #1
    5c2a:	2d00      	cmp	r5, #0
    5c2c:	d1fa      	bne.n	5c24 <__aeabi_dcmpun+0x20>
    5c2e:	4904      	ldr	r1, [pc, #16]	; (5c40 <__aeabi_dcmpun+0x3c>)
    5c30:	2000      	movs	r0, #0
    5c32:	428b      	cmp	r3, r1
    5c34:	d1f6      	bne.n	5c24 <__aeabi_dcmpun+0x20>
    5c36:	4314      	orrs	r4, r2
    5c38:	0020      	movs	r0, r4
    5c3a:	1e44      	subs	r4, r0, #1
    5c3c:	41a0      	sbcs	r0, r4
    5c3e:	e7f1      	b.n	5c24 <__aeabi_dcmpun+0x20>
    5c40:	000007ff 	.word	0x000007ff

00005c44 <__aeabi_d2iz>:
    5c44:	b530      	push	{r4, r5, lr}
    5c46:	4d13      	ldr	r5, [pc, #76]	; (5c94 <__aeabi_d2iz+0x50>)
    5c48:	030a      	lsls	r2, r1, #12
    5c4a:	004b      	lsls	r3, r1, #1
    5c4c:	0b12      	lsrs	r2, r2, #12
    5c4e:	0d5b      	lsrs	r3, r3, #21
    5c50:	0fc9      	lsrs	r1, r1, #31
    5c52:	2400      	movs	r4, #0
    5c54:	42ab      	cmp	r3, r5
    5c56:	dd10      	ble.n	5c7a <__aeabi_d2iz+0x36>
    5c58:	4c0f      	ldr	r4, [pc, #60]	; (5c98 <__aeabi_d2iz+0x54>)
    5c5a:	42a3      	cmp	r3, r4
    5c5c:	dc0f      	bgt.n	5c7e <__aeabi_d2iz+0x3a>
    5c5e:	2480      	movs	r4, #128	; 0x80
    5c60:	4d0e      	ldr	r5, [pc, #56]	; (5c9c <__aeabi_d2iz+0x58>)
    5c62:	0364      	lsls	r4, r4, #13
    5c64:	4322      	orrs	r2, r4
    5c66:	1aed      	subs	r5, r5, r3
    5c68:	2d1f      	cmp	r5, #31
    5c6a:	dd0b      	ble.n	5c84 <__aeabi_d2iz+0x40>
    5c6c:	480c      	ldr	r0, [pc, #48]	; (5ca0 <__aeabi_d2iz+0x5c>)
    5c6e:	1ac3      	subs	r3, r0, r3
    5c70:	40da      	lsrs	r2, r3
    5c72:	4254      	negs	r4, r2
    5c74:	2900      	cmp	r1, #0
    5c76:	d100      	bne.n	5c7a <__aeabi_d2iz+0x36>
    5c78:	0014      	movs	r4, r2
    5c7a:	0020      	movs	r0, r4
    5c7c:	bd30      	pop	{r4, r5, pc}
    5c7e:	4b09      	ldr	r3, [pc, #36]	; (5ca4 <__aeabi_d2iz+0x60>)
    5c80:	18cc      	adds	r4, r1, r3
    5c82:	e7fa      	b.n	5c7a <__aeabi_d2iz+0x36>
    5c84:	4c08      	ldr	r4, [pc, #32]	; (5ca8 <__aeabi_d2iz+0x64>)
    5c86:	40e8      	lsrs	r0, r5
    5c88:	46a4      	mov	ip, r4
    5c8a:	4463      	add	r3, ip
    5c8c:	409a      	lsls	r2, r3
    5c8e:	4302      	orrs	r2, r0
    5c90:	e7ef      	b.n	5c72 <__aeabi_d2iz+0x2e>
    5c92:	46c0      	nop			; (mov r8, r8)
    5c94:	000003fe 	.word	0x000003fe
    5c98:	0000041d 	.word	0x0000041d
    5c9c:	00000433 	.word	0x00000433
    5ca0:	00000413 	.word	0x00000413
    5ca4:	7fffffff 	.word	0x7fffffff
    5ca8:	fffffbed 	.word	0xfffffbed

00005cac <__aeabi_i2d>:
    5cac:	b570      	push	{r4, r5, r6, lr}
    5cae:	2800      	cmp	r0, #0
    5cb0:	d030      	beq.n	5d14 <__aeabi_i2d+0x68>
    5cb2:	17c3      	asrs	r3, r0, #31
    5cb4:	18c4      	adds	r4, r0, r3
    5cb6:	405c      	eors	r4, r3
    5cb8:	0fc5      	lsrs	r5, r0, #31
    5cba:	0020      	movs	r0, r4
    5cbc:	f000 f838 	bl	5d30 <__clzsi2>
    5cc0:	4b17      	ldr	r3, [pc, #92]	; (5d20 <__aeabi_i2d+0x74>)
    5cc2:	4a18      	ldr	r2, [pc, #96]	; (5d24 <__aeabi_i2d+0x78>)
    5cc4:	1a1b      	subs	r3, r3, r0
    5cc6:	1ad2      	subs	r2, r2, r3
    5cc8:	2a1f      	cmp	r2, #31
    5cca:	dd18      	ble.n	5cfe <__aeabi_i2d+0x52>
    5ccc:	4a16      	ldr	r2, [pc, #88]	; (5d28 <__aeabi_i2d+0x7c>)
    5cce:	1ad2      	subs	r2, r2, r3
    5cd0:	4094      	lsls	r4, r2
    5cd2:	2200      	movs	r2, #0
    5cd4:	0324      	lsls	r4, r4, #12
    5cd6:	055b      	lsls	r3, r3, #21
    5cd8:	0b24      	lsrs	r4, r4, #12
    5cda:	0d5b      	lsrs	r3, r3, #21
    5cdc:	2100      	movs	r1, #0
    5cde:	0010      	movs	r0, r2
    5ce0:	0324      	lsls	r4, r4, #12
    5ce2:	0d0a      	lsrs	r2, r1, #20
    5ce4:	0b24      	lsrs	r4, r4, #12
    5ce6:	0512      	lsls	r2, r2, #20
    5ce8:	4322      	orrs	r2, r4
    5cea:	4c10      	ldr	r4, [pc, #64]	; (5d2c <__aeabi_i2d+0x80>)
    5cec:	051b      	lsls	r3, r3, #20
    5cee:	4022      	ands	r2, r4
    5cf0:	4313      	orrs	r3, r2
    5cf2:	005b      	lsls	r3, r3, #1
    5cf4:	07ed      	lsls	r5, r5, #31
    5cf6:	085b      	lsrs	r3, r3, #1
    5cf8:	432b      	orrs	r3, r5
    5cfa:	0019      	movs	r1, r3
    5cfc:	bd70      	pop	{r4, r5, r6, pc}
    5cfe:	0021      	movs	r1, r4
    5d00:	4091      	lsls	r1, r2
    5d02:	000a      	movs	r2, r1
    5d04:	210b      	movs	r1, #11
    5d06:	1a08      	subs	r0, r1, r0
    5d08:	40c4      	lsrs	r4, r0
    5d0a:	055b      	lsls	r3, r3, #21
    5d0c:	0324      	lsls	r4, r4, #12
    5d0e:	0b24      	lsrs	r4, r4, #12
    5d10:	0d5b      	lsrs	r3, r3, #21
    5d12:	e7e3      	b.n	5cdc <__aeabi_i2d+0x30>
    5d14:	2500      	movs	r5, #0
    5d16:	2300      	movs	r3, #0
    5d18:	2400      	movs	r4, #0
    5d1a:	2200      	movs	r2, #0
    5d1c:	e7de      	b.n	5cdc <__aeabi_i2d+0x30>
    5d1e:	46c0      	nop			; (mov r8, r8)
    5d20:	0000041e 	.word	0x0000041e
    5d24:	00000433 	.word	0x00000433
    5d28:	00000413 	.word	0x00000413
    5d2c:	800fffff 	.word	0x800fffff

00005d30 <__clzsi2>:
    5d30:	211c      	movs	r1, #28
    5d32:	2301      	movs	r3, #1
    5d34:	041b      	lsls	r3, r3, #16
    5d36:	4298      	cmp	r0, r3
    5d38:	d301      	bcc.n	5d3e <__clzsi2+0xe>
    5d3a:	0c00      	lsrs	r0, r0, #16
    5d3c:	3910      	subs	r1, #16
    5d3e:	0a1b      	lsrs	r3, r3, #8
    5d40:	4298      	cmp	r0, r3
    5d42:	d301      	bcc.n	5d48 <__clzsi2+0x18>
    5d44:	0a00      	lsrs	r0, r0, #8
    5d46:	3908      	subs	r1, #8
    5d48:	091b      	lsrs	r3, r3, #4
    5d4a:	4298      	cmp	r0, r3
    5d4c:	d301      	bcc.n	5d52 <__clzsi2+0x22>
    5d4e:	0900      	lsrs	r0, r0, #4
    5d50:	3904      	subs	r1, #4
    5d52:	a202      	add	r2, pc, #8	; (adr r2, 5d5c <__clzsi2+0x2c>)
    5d54:	5c10      	ldrb	r0, [r2, r0]
    5d56:	1840      	adds	r0, r0, r1
    5d58:	4770      	bx	lr
    5d5a:	46c0      	nop			; (mov r8, r8)
    5d5c:	02020304 	.word	0x02020304
    5d60:	01010101 	.word	0x01010101
	...

00005d6c <__cxa_atexit>:
    5d6c:	b570      	push	{r4, r5, r6, lr}
    5d6e:	4c05      	ldr	r4, [pc, #20]	; (5d84 <__cxa_atexit+0x18>)
    5d70:	0005      	movs	r5, r0
    5d72:	0013      	movs	r3, r2
    5d74:	1e20      	subs	r0, r4, #0
    5d76:	d004      	beq.n	5d82 <__cxa_atexit+0x16>
    5d78:	000a      	movs	r2, r1
    5d7a:	2002      	movs	r0, #2
    5d7c:	0029      	movs	r1, r5
    5d7e:	e000      	b.n	5d82 <__cxa_atexit+0x16>
    5d80:	bf00      	nop
    5d82:	bd70      	pop	{r4, r5, r6, pc}
    5d84:	00000000 	.word	0x00000000

00005d88 <__errno>:
    5d88:	4b01      	ldr	r3, [pc, #4]	; (5d90 <__errno+0x8>)
    5d8a:	6818      	ldr	r0, [r3, #0]
    5d8c:	4770      	bx	lr
    5d8e:	46c0      	nop			; (mov r8, r8)
    5d90:	20000008 	.word	0x20000008

00005d94 <__libc_init_array>:
    5d94:	b570      	push	{r4, r5, r6, lr}
    5d96:	2600      	movs	r6, #0
    5d98:	4d0c      	ldr	r5, [pc, #48]	; (5dcc <__libc_init_array+0x38>)
    5d9a:	4c0d      	ldr	r4, [pc, #52]	; (5dd0 <__libc_init_array+0x3c>)
    5d9c:	1b64      	subs	r4, r4, r5
    5d9e:	10a4      	asrs	r4, r4, #2
    5da0:	42a6      	cmp	r6, r4
    5da2:	d109      	bne.n	5db8 <__libc_init_array+0x24>
    5da4:	2600      	movs	r6, #0
    5da6:	f000 f993 	bl	60d0 <_init>
    5daa:	4d0a      	ldr	r5, [pc, #40]	; (5dd4 <__libc_init_array+0x40>)
    5dac:	4c0a      	ldr	r4, [pc, #40]	; (5dd8 <__libc_init_array+0x44>)
    5dae:	1b64      	subs	r4, r4, r5
    5db0:	10a4      	asrs	r4, r4, #2
    5db2:	42a6      	cmp	r6, r4
    5db4:	d105      	bne.n	5dc2 <__libc_init_array+0x2e>
    5db6:	bd70      	pop	{r4, r5, r6, pc}
    5db8:	00b3      	lsls	r3, r6, #2
    5dba:	58eb      	ldr	r3, [r5, r3]
    5dbc:	4798      	blx	r3
    5dbe:	3601      	adds	r6, #1
    5dc0:	e7ee      	b.n	5da0 <__libc_init_array+0xc>
    5dc2:	00b3      	lsls	r3, r6, #2
    5dc4:	58eb      	ldr	r3, [r5, r3]
    5dc6:	4798      	blx	r3
    5dc8:	3601      	adds	r6, #1
    5dca:	e7f2      	b.n	5db2 <__libc_init_array+0x1e>
    5dcc:	000060dc 	.word	0x000060dc
    5dd0:	000060dc 	.word	0x000060dc
    5dd4:	000060dc 	.word	0x000060dc
    5dd8:	000060e8 	.word	0x000060e8

00005ddc <free>:
    5ddc:	b510      	push	{r4, lr}
    5dde:	4b03      	ldr	r3, [pc, #12]	; (5dec <free+0x10>)
    5de0:	0001      	movs	r1, r0
    5de2:	6818      	ldr	r0, [r3, #0]
    5de4:	f000 f816 	bl	5e14 <_free_r>
    5de8:	bd10      	pop	{r4, pc}
    5dea:	46c0      	nop			; (mov r8, r8)
    5dec:	20000008 	.word	0x20000008

00005df0 <memcpy>:
    5df0:	2300      	movs	r3, #0
    5df2:	b510      	push	{r4, lr}
    5df4:	429a      	cmp	r2, r3
    5df6:	d100      	bne.n	5dfa <memcpy+0xa>
    5df8:	bd10      	pop	{r4, pc}
    5dfa:	5ccc      	ldrb	r4, [r1, r3]
    5dfc:	54c4      	strb	r4, [r0, r3]
    5dfe:	3301      	adds	r3, #1
    5e00:	e7f8      	b.n	5df4 <memcpy+0x4>

00005e02 <memset>:
    5e02:	0003      	movs	r3, r0
    5e04:	1882      	adds	r2, r0, r2
    5e06:	4293      	cmp	r3, r2
    5e08:	d100      	bne.n	5e0c <memset+0xa>
    5e0a:	4770      	bx	lr
    5e0c:	7019      	strb	r1, [r3, #0]
    5e0e:	3301      	adds	r3, #1
    5e10:	e7f9      	b.n	5e06 <memset+0x4>
	...

00005e14 <_free_r>:
    5e14:	b570      	push	{r4, r5, r6, lr}
    5e16:	0005      	movs	r5, r0
    5e18:	2900      	cmp	r1, #0
    5e1a:	d010      	beq.n	5e3e <_free_r+0x2a>
    5e1c:	1f0c      	subs	r4, r1, #4
    5e1e:	6823      	ldr	r3, [r4, #0]
    5e20:	2b00      	cmp	r3, #0
    5e22:	da00      	bge.n	5e26 <_free_r+0x12>
    5e24:	18e4      	adds	r4, r4, r3
    5e26:	0028      	movs	r0, r5
    5e28:	f000 f83e 	bl	5ea8 <__malloc_lock>
    5e2c:	4a1d      	ldr	r2, [pc, #116]	; (5ea4 <_free_r+0x90>)
    5e2e:	6813      	ldr	r3, [r2, #0]
    5e30:	2b00      	cmp	r3, #0
    5e32:	d105      	bne.n	5e40 <_free_r+0x2c>
    5e34:	6063      	str	r3, [r4, #4]
    5e36:	6014      	str	r4, [r2, #0]
    5e38:	0028      	movs	r0, r5
    5e3a:	f000 f836 	bl	5eaa <__malloc_unlock>
    5e3e:	bd70      	pop	{r4, r5, r6, pc}
    5e40:	42a3      	cmp	r3, r4
    5e42:	d909      	bls.n	5e58 <_free_r+0x44>
    5e44:	6821      	ldr	r1, [r4, #0]
    5e46:	1860      	adds	r0, r4, r1
    5e48:	4283      	cmp	r3, r0
    5e4a:	d1f3      	bne.n	5e34 <_free_r+0x20>
    5e4c:	6818      	ldr	r0, [r3, #0]
    5e4e:	685b      	ldr	r3, [r3, #4]
    5e50:	1841      	adds	r1, r0, r1
    5e52:	6021      	str	r1, [r4, #0]
    5e54:	e7ee      	b.n	5e34 <_free_r+0x20>
    5e56:	0013      	movs	r3, r2
    5e58:	685a      	ldr	r2, [r3, #4]
    5e5a:	2a00      	cmp	r2, #0
    5e5c:	d001      	beq.n	5e62 <_free_r+0x4e>
    5e5e:	42a2      	cmp	r2, r4
    5e60:	d9f9      	bls.n	5e56 <_free_r+0x42>
    5e62:	6819      	ldr	r1, [r3, #0]
    5e64:	1858      	adds	r0, r3, r1
    5e66:	42a0      	cmp	r0, r4
    5e68:	d10b      	bne.n	5e82 <_free_r+0x6e>
    5e6a:	6820      	ldr	r0, [r4, #0]
    5e6c:	1809      	adds	r1, r1, r0
    5e6e:	1858      	adds	r0, r3, r1
    5e70:	6019      	str	r1, [r3, #0]
    5e72:	4282      	cmp	r2, r0
    5e74:	d1e0      	bne.n	5e38 <_free_r+0x24>
    5e76:	6810      	ldr	r0, [r2, #0]
    5e78:	6852      	ldr	r2, [r2, #4]
    5e7a:	1841      	adds	r1, r0, r1
    5e7c:	6019      	str	r1, [r3, #0]
    5e7e:	605a      	str	r2, [r3, #4]
    5e80:	e7da      	b.n	5e38 <_free_r+0x24>
    5e82:	42a0      	cmp	r0, r4
    5e84:	d902      	bls.n	5e8c <_free_r+0x78>
    5e86:	230c      	movs	r3, #12
    5e88:	602b      	str	r3, [r5, #0]
    5e8a:	e7d5      	b.n	5e38 <_free_r+0x24>
    5e8c:	6821      	ldr	r1, [r4, #0]
    5e8e:	1860      	adds	r0, r4, r1
    5e90:	4282      	cmp	r2, r0
    5e92:	d103      	bne.n	5e9c <_free_r+0x88>
    5e94:	6810      	ldr	r0, [r2, #0]
    5e96:	6852      	ldr	r2, [r2, #4]
    5e98:	1841      	adds	r1, r0, r1
    5e9a:	6021      	str	r1, [r4, #0]
    5e9c:	6062      	str	r2, [r4, #4]
    5e9e:	605c      	str	r4, [r3, #4]
    5ea0:	e7ca      	b.n	5e38 <_free_r+0x24>
    5ea2:	46c0      	nop			; (mov r8, r8)
    5ea4:	200004e8 	.word	0x200004e8

00005ea8 <__malloc_lock>:
    5ea8:	4770      	bx	lr

00005eaa <__malloc_unlock>:
    5eaa:	4770      	bx	lr
    5eac:	00000310 	.word	0x00000310
    5eb0:	0000033c 	.word	0x0000033c
    5eb4:	00000348 	.word	0x00000348
    5eb8:	00000354 	.word	0x00000354
    5ebc:	00000360 	.word	0x00000360
    5ec0:	0000036c 	.word	0x0000036c
    5ec4:	00000378 	.word	0x00000378
    5ec8:	00000384 	.word	0x00000384
    5ecc:	00000390 	.word	0x00000390
    5ed0:	0000039c 	.word	0x0000039c
    5ed4:	000003a8 	.word	0x000003a8
    5ed8:	000003b4 	.word	0x000003b4
    5edc:	00000400 	.word	0x00000400
    5ee0:	00000400 	.word	0x00000400
    5ee4:	00000400 	.word	0x00000400
    5ee8:	000003c0 	.word	0x000003c0
    5eec:	000003cc 	.word	0x000003cc
    5ef0:	00000400 	.word	0x00000400
    5ef4:	00000400 	.word	0x00000400
    5ef8:	00000400 	.word	0x00000400
    5efc:	000003d8 	.word	0x000003d8
    5f00:	000003e6 	.word	0x000003e6
    5f04:	000003f2 	.word	0x000003f2
    5f08:	0000052e 	.word	0x0000052e
    5f0c:	00000560 	.word	0x00000560
    5f10:	00000576 	.word	0x00000576
    5f14:	0000054a 	.word	0x0000054a
    5f18:	0000054a 	.word	0x0000054a
    5f1c:	000005e8 	.word	0x000005e8
    5f20:	0000054a 	.word	0x0000054a
    5f24:	0000054a 	.word	0x0000054a
    5f28:	0000054a 	.word	0x0000054a
    5f2c:	0000054a 	.word	0x0000054a
    5f30:	0000054a 	.word	0x0000054a
    5f34:	0000054a 	.word	0x0000054a
    5f38:	0000054a 	.word	0x0000054a
    5f3c:	0000054a 	.word	0x0000054a
    5f40:	0000054a 	.word	0x0000054a
    5f44:	0000054a 	.word	0x0000054a
    5f48:	0000054a 	.word	0x0000054a
    5f4c:	0000061e 	.word	0x0000061e
    5f50:	00000632 	.word	0x00000632
    5f54:	00000646 	.word	0x00000646

00005f58 <_ZTV14ADF5610_Driver>:
	...
    5f60:	00000115 00000119 682f2e2e 732f6c61     ........../hal/s
    5f70:	682f6372 695f6c61 00632e6f 682f2e2e     rc/hal_io.c.../h
    5f80:	732f6c61 682f6372 735f6c61 6d5f6970     al/src/hal_spi_m
    5f90:	6e79735f 00632e63                       _sync.c.

00005f98 <_usarts>:
	...

00005fac <_i2cms>:
	...

00005fc4 <_i2css>:
	...

00005fd4 <sercomspi_regs>:
    5fd4:	0020000c 00020000 00000000 01ff0009     .. .............
    5fe4:	00000000 682f2e2e 732f6c70 6f637265     ....../hpl/serco
    5ff4:	70682f6d 65735f6c 6d6f6372 0000632e     m/hpl_sercom.c..
    6004:	00004a25 00000804                       %J......

0000600c <_usb_ep_cfgs>:
    600c:	200004a8 00000000 00000040 20000468     ... ....@...h.. 
    601c:	00000000 00000040 20000428 00000000     ....@...(.. ....
    602c:	00000040 00676f6c 00000000 00776f70     @...log.....pow.
    603c:	00000000                                ....

00006040 <TWO52>:
    6040:	00000000 43300000 00000000 c3300000     ......0C......0.
    6050:	00004a68 00004a4a 00004a04 00004922     hJ..JJ...J.."I..
    6060:	00004a04 00004a3c 00004a04 00004922     .J..<J...J.."I..
    6070:	00004a4a 00004a4a 00004a3c 00004922     JJ..JJ..<J.."I..
    6080:	0000491a 0000491a 0000491a 00004c80     .I...I...I...L..
    6090:	000052c8 00005188 00005188 00005184     .R...Q...Q...Q..
    60a0:	000052a0 000052a0 00005292 00005184     .R...R...R...Q..
    60b0:	000052a0 00005292 000052a0 00005184     .R...R...R...Q..
    60c0:	000052a8 000052a8 000052a8 000054ac     .R...R...R...T..

000060d0 <_init>:
    60d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    60d2:	46c0      	nop			; (mov r8, r8)
    60d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    60d6:	bc08      	pop	{r3}
    60d8:	469e      	mov	lr, r3
    60da:	4770      	bx	lr

000060dc <__init_array_start>:
    60dc:	000000dd 	.word	0x000000dd
    60e0:	00000b05 	.word	0x00000b05
    60e4:	00000c59 	.word	0x00000c59

000060e8 <_fini>:
    60e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    60ea:	46c0      	nop			; (mov r8, r8)
    60ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
    60ee:	bc08      	pop	{r3}
    60f0:	469e      	mov	lr, r3
    60f2:	4770      	bx	lr

000060f4 <__fini_array_start>:
    60f4:	000000b5 	.word	0x000000b5
